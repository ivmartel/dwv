{
  "name": "dwv",
  "version": "0.34.1",
  "description": "DICOM Web Viewer.",
  "keywords": [
    "DICOM",
    "medical",
    "imaging"
  ],
  "license": "GPL-3.0",
  "author": "ivmartel <ivmartel@gmail.com>",
  "homepage": "https://ivmartel.github.io/dwv/",
  "repository": {
    "type": "git",
    "url": "git://github.com/ivmartel/dwv.git"
  },
  "main": "dist/dwv.min.js",
  "types": "dist/dwv.d.ts",
  "engines": {
    "node": ">= 14.0.0"
  },
  "browserslist": [
    ">1%, last 2 versions, not dead"
  ],
  "dependencies": {
    "jszip": "^3.10.1",
    "konva": "~9.3.16",
    "magic-wand-tool": "~1.1.7"
  },
  "devDependencies": {
    "@babel/core": "^7.26.0",
    "@babel/preset-env": "^7.26.0",
    "@microsoft/api-extractor": "^7.47.11",
    "@eslint/js": "^9.14.0",
    "@stylistic/eslint-plugin-js": "^2.10.1",
    "babel-loader": "^9.2.1",
    "babel-plugin-istanbul": "^7.0.0",
    "benchmark": "^2.1.4",
    "clean-jsdoc-theme": "^4.3.0",
    "eslint": "^9.14.0",
    "eslint-plugin-jsdoc": "^50.3.1",
    "github-release-notes": "0.17.2",
    "globals": "^15.12.0",
    "html-webpack-plugin": "^5.6.3",
    "jsdoc": "^4.0.4",
    "karma": "^6.4.4",
    "karma-chrome-launcher": "^3.2.0",
    "karma-coverage": "^2.2.1",
    "karma-json-reporter": "1.2.1",
    "karma-qunit": "^4.2.1",
    "karma-sourcemap-loader": "^0.4.0",
    "karma-webpack": "^5.0.1",
    "qunit": "^2.22.0",
    "typescript": "~5.4.5",
    "webpack": "^5.96.1",
    "webpack-cli": "^5.1.4",
    "webpack-dev-server": "^5.1.0",
    "webpack-merge": "^6.0.1"
  },
  "scripts": {
    "start": "webpack serve --config webpack.dev.js",
    "pack": "webpack --config webpack.prod.js",
    "build": "yarn run pack && yarn run types && yarn run api",
    "lint": "eslint -c 'eslint.config-full.mjs' 'src/**/*.js' 'tests/**/*.js' '*.js'",
    "test": "karma start ./karma.conf.js",
    "test-ci": "karma start ./karma.conf.js --browsers ChromeHeadless --reporters progress,coverage,json --single-run",
    "doc": "jsdoc -c resources/doc/jsdoc.conf.json",
    "gren": "gren",
    "types": "tsc -p resources/api/tsconfig.json",
    "api": "api-extractor run -c resources/api/api-extractor.json --local"
  }
}
