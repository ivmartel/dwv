!function(){"use strict";class t{#t;#e;#s;constructor(t,e,s){this.#t=t,this.#e=e,this.#s=s}getX(){return this.#t}getY(){return this.#e}getZ(){return this.#s}equals(t){return null!==t&&this.#t===t.getX()&&this.#e===t.getY()&&this.#s===t.getZ()}toString(){return"("+this.#t+", "+this.#e+", "+this.#s+")"}norm(){return Math.sqrt(this.#t*this.#t+this.#e*this.#e+this.#s*this.#s)}crossProduct(e){return new t(this.#e*e.getZ()-e.getY()*this.#s,this.#s*e.getX()-e.getZ()*this.#t,this.#t*e.getY()-e.getX()*this.#e)}dotProduct(t){return this.#t*t.getX()+this.#e*t.getY()+this.#s*t.getZ()}isCodirectional(t){return this.dotProduct(t)>0}}class e{#t;#e;#s;constructor(t,e,s){this.#t=t,this.#e=e,this.#s=s}getX(){return this.#t}getY(){return this.#e}getZ(){return this.#s}getValues(){return[this.#t,this.#e,this.#s]}equals(t){return null!==t&&this.#t===t.getX()&&this.#e===t.getY()&&this.#s===t.getZ()}isSimilar(t,e){return null!==t&&i(this.#t,t.getX(),e)&&i(this.#e,t.getY(),e)&&i(this.#s,t.getZ(),e)}toString(){return"("+this.#t+", "+this.#e+", "+this.#s+")"}getDistance(t){return Math.sqrt(this.#r(t))}#r(t){const e=this.#t-t.getX(),s=this.#e-t.getY(),r=this.#s-t.getZ();return e*e+s*s+r*r}getClosest(t){let e=0,s=this.#r(t[e]);for(let r=0;r<t.length;++r){const n=this.#r(t[r]);n<s&&(e=r,s=n)}return e}minus(e){return new t(this.#t-e.getX(),this.#e-e.getY(),this.#s-e.getZ())}}class s{#n;constructor(t){if(!t||void 0===t)throw new Error("Cannot create index with no values.");if(0===t.length)throw new Error("Cannot create index with empty values.");if(!t.every((function(t){return!isNaN(t)})))throw new Error("Cannot create index with non number values.");this.#n=t}get(t){return this.#n[t]}length(){return this.#n.length}toString(){return"("+this.#n.toString()+")"}getValues(){return this.#n.slice()}canCompare(t){return!!t&&this.length()===t.length()}equals(t){if(!this.canCompare(t))return!1;for(let e=0,s=this.length();e<s;++e)if(this.get(e)!==t.get(e))return!1;return!0}compare(t){if(!this.canCompare(t))return null;const e=[];for(let s=0,r=this.length();s<r;++s)this.get(s)!==t.get(s)&&e.push(s);return e}add(t){if(!this.canCompare(t))return null;const e=[];for(let s=0,r=this.length();s<r;++s)e.push(this.get(s)+t.get(s));return new s(e)}#i(t,e){const r=this.#n.slice();return t<r.length?r[t]+=e:console.warn("Cannot add to given dimension: ",t,r.length),new s(r)}next(t){return this.#i(t,1)}previous(t){return this.#i(t,-1)}getWithNew2D(t,e){const r=[t,e];for(let t=2,e=this.length();t<e;++t)r.push(this.get(t));return new s(r)}}const r={levels:{TRACE:0,DEBUG:1,INFO:2,WARN:3,ERROR:4},level:3,trace:function(t){this.level<=this.levels.TRACE&&console.trace(t)},debug:function(t){this.level<=this.levels.DEBUG&&console.debug(t)},info:function(t){this.level<=this.levels.INFO&&console.info(t)},warn:function(t){this.level<=this.levels.WARN&&console.warn(t)},error:function(t){this.level<=this.levels.ERROR&&console.error(t)}},n=1e4*Number.EPSILON;function i(t,e,s){return void 0===s&&(s=Number.EPSILON),Math.abs(t-e)<s}class h{#n;#h;constructor(t){this.#n=t}get(t,e){return this.#n[3*t+e]}getInverse(){return void 0===this.#h&&(this.#h=function(t){const e=t.get(0,0),s=t.get(0,1),n=t.get(0,2),i=t.get(1,0),a=t.get(1,1),l=t.get(1,2),u=t.get(2,0),o=t.get(2,1),g=t.get(2,2),c=a*g-l*o,f=l*u-i*g,v=i*o-a*u;let d=e*c+s*f+n*v;if(0!==d)return d=1/d,new h([d*c,d*(n*o-s*g),d*(s*l-n*a),d*f,d*(e*g-n*u),d*(n*i-e*l),d*v,d*(s*u-e*o),d*(e*a-s*i)]);r.warn("Cannot invert 3*3 matrix with zero determinant.")}(this)),this.#h}equals(t){for(let e=0;e<3;++e)for(let s=0;s<3;++s)if(this.get(e,s)!==t.get(e,s))return!1;return!0}isSimilar(t,e){for(let s=0;s<3;++s)for(let r=0;r<3;++r)if(!i(this.get(s,r),t.get(s,r),e))return!1;return!0}toString(){let t="[";for(let e=0;e<3;++e){0!==e&&(t+=", \n ");for(let s=0;s<3;++s)0!==s&&(t+=", "),t+=this.get(e,s)}return t+="]",t}multiply(t){const e=[];for(let s=0;s<3;++s)for(let r=0;r<3;++r){let n=0;for(let e=0;e<3;++e)n+=this.get(s,e)*t.get(e,r);e.push(n)}return new h(e)}getAbs(){const t=[];for(let e=0;e<3;++e)for(let s=0;s<3;++s)t.push(Math.abs(this.get(e,s)));return new h(t)}multiplyArray3D(t){if(3!==t.length)throw new Error("Cannot multiply 3x3 matrix with non 3D array: "+t.length);const e=t[0],s=t[1],r=t[2],n=new Array(3);return n[0]=this.#n[0]*e+this.#n[1]*s+this.#n[2]*r,n[1]=this.#n[3]*e+this.#n[4]*s+this.#n[5]*r,n[2]=this.#n[6]*e+this.#n[7]*s+this.#n[8]*r,n}multiplyTypedArray3D(t,e){const s=t[0],r=t[1],n=t[2];e[0]=this.#n[0]*s+this.#n[1]*r+this.#n[2]*n,e[1]=this.#n[3]*s+this.#n[4]*r+this.#n[5]*n,e[2]=this.#n[6]*s+this.#n[7]*r+this.#n[8]*n}multiplyVector3D(e){const s=this.multiplyArray3D([e.getX(),e.getY(),e.getZ()]);return new t(s[0],s[1],s[2])}multiplyPoint3D(t){const s=this.multiplyArray3D([t.getX(),t.getY(),t.getZ()]);return new e(s[0],s[1],s[2])}multiplyIndex3D(t){const e=this.multiplyArray3D(t.getValues());return new s(e)}getRowAbsMax(t){const e=[Math.abs(this.get(t,0)),Math.abs(this.get(t,1)),Math.abs(this.get(t,2))],s=Math.max.apply(null,e),r=e.indexOf(s);return{value:this.get(t,r),index:r}}getColAbsMax(t){const e=[Math.abs(this.get(0,t)),Math.abs(this.get(1,t)),Math.abs(this.get(2,t))],s=Math.max.apply(null,e),r=e.indexOf(s);return{value:this.get(r,t),index:r}}asOneAndZeros(){const t=[];for(let e=0;e<3;++e){const s=this.getRowAbsMax(e),r=s.value>0?1:-1;for(let e=0;e<3;++e)e===s.index?t.push(1*r):t.push(0)}return new h(t)}getThirdColMajorDirection(){return this.getColAbsMax(2).index}getValues(){return this.#n.slice()}}class a{#a(t,e,s,r){const n=Math.floor(t[0]),i=Math.floor(t[1]),h=Math.floor(t[2]),a=n<0?0:n,l=n+1>=s[0]?n:n+1,u=i<0?0:i,o=i+1>=s[1]?i:i+1,g=h<0?0:h,c=h+1>=s[2]?h:h+1,f=a*r[0],v=l*r[0],d=u*r[1],y=o*r[1],p=g*r[2],m=c*r[2],x=f+d+p,w=f+d+m,M=f+y+p,b=f+y+m,z=v+d+p,D=v+d+m,A=v+y+p,S=v+y+m,R=a>=0&&a<s[0],C=l>=0&&l<s[0],E=u>=0&&u<s[1],Z=o>=0&&o<s[1],X=g>=0&&g<s[2],Y=c>=0&&c<s[2],I=R&&E&&X?e[x]:0,N=R&&E&&Y?e[w]:0,O=R&&Z&&X?e[M]:0,q=R&&Z&&Y?e[b]:0,T=C&&E&&X?e[z]:0,V=C&&E&&Y?e[D]:0,B=C&&Z&&X?e[A]:0,P=C&&Z&&Y?e[S]:0,U=Math.abs(t[0]-n),L=Math.abs(t[1]-i),W=Math.abs(t[2]-h),F=1-U,G=1-L,j=1-W;return I*(F*G*j)+N*(F*G*W)+O*(F*L*j)+q*(F*L*W)+T*(U*G*j)+V*(U*G*W)+B*(U*L*j)+P*(U*L*W)}#l(t){const e=Math.round(t);return Math.abs(t-e)<n?e:t}calculateResample(t){const e=t.sourceSize,s=t.targetSize,r=t.sourceUnitVectors,n=t.targetUnitVectors,i=t.sourceSpacing,a=t.targetSpacing,l=t.sourceImageBuffer,u=t.interpolate,o=new h(t.sourceOrientation),g=new h(t.targetOrientation),c=o.getInverse(),f=g.multiply(c),v=[(s[0]-1)/2,(s[1]-1)/2,(s[2]-1)/2],d=[(e[0]-1)/2,(e[1]-1)/2,(e[2]-1)/2],y=new Array(3),p=new Array(3);let m,x,w,M,b,z;for(let h=0;h<s[0];h++){y[0]=(h-v[0])*a[0],M=n[0]*h;for(let h=0;h<s[1];h++){y[1]=(h-v[1])*a[1],b=M+n[1]*h;for(let h=0;h<s[2];h++)if(y[2]=(h-v[2])*a[2],f.multiplyTypedArray3D(y,p),m=this.#l(p[0]/i[0]+d[0]),x=this.#l(p[1]/i[1]+d[1]),w=this.#l(p[2]/i[2]+d[2]),m>=0&&m<e[0]&&x>=0&&x<e[1]&&w>=0&&w<e[2])if(z=b+n[2]*h,u){const s=this.#a([m,x,w],l,e,r);t.targetImageBuffer[z]=s}else{const e=r[0]*Math.round(m)+r[1]*Math.round(x)+r[2]*Math.round(w);t.targetImageBuffer[z]=t.sourceImageBuffer[e]}}}}}self.addEventListener("message",(function(t){(new a).calculateResample(t.data),self.postMessage(t.data)}),!1)}();
//# sourceMappingURL=resampling.worker.min.js.map