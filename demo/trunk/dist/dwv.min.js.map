{"version":3,"file":"dwv.min.js","mappings":"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GJ5E,CACT,KAgGEuF,SAAU,CACRT,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1skCC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9lCC,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAMrpCS,eAAgB,CACdixmCU,WAAY,CACVZ,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACpnCC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC3lCC,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAA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","sources":["webpack://dwv/webpack/universalModuleDefinition","webpack://dwv/external umd {\"root\":\"JSZip\",\"commonjs\":\"jszip\",\"commonjs2\":\"jszip\",\"amd\":\"jszip\"}","webpack://dwv/external umd {\"root\":\"Konva\",\"commonjs\":\"konva\",\"commonjs2\":\"konva\",\"amd\":\"konva\"}","webpack://dwv/external umd {\"root\":\"MagicWand\",\"commonjs\":\"magic-wand-tool\",\"commonjs2\":\"magic-wand-tool\",\"amd\":\"konmagic-wand-tool\"}","webpack://dwv/webpack/bootstrap","webpack://dwv/webpack/runtime/compat get default export","webpack://dwv/webpack/runtime/define property getters","webpack://dwv/webpack/runtime/hasOwnProperty shorthand","webpack://dwv/webpack/runtime/make namespace object","webpack://dwv/./src/math/index.js","webpack://dwv/./src/image/modalityLut.js","webpack://dwv/./src/utils/logger.js","webpack://dwv/./src/image/windowLevel.js","webpack://dwv/./src/image/voiLut.js","webpack://dwv/./src/image/windowLut.js","webpack://dwv/./src/image/luts.js","webpack://dwv/./src/utils/colour.js","webpack://dwv/./src/math/vector.js","webpack://dwv/./src/math/matrix.js","webpack://dwv/./src/math/point.js","webpack://dwv/./src/utils/i18n.js","webpack://dwv/./src/utils/string.js","webpack://dwv/./src/utils/array.js","webpack://dwv/./src/dicom/dictionary.js","webpack://dwv/./src/dicom/dicomTag.js","webpack://dwv/./src/dicom/dataElement.js","webpack://dwv/./src/dicom/dataReader.js","webpack://dwv/./src/dicom/dicomParser.js","webpack://dwv/./src/utils/listen.js","webpack://dwv/./src/image/iterator.js","webpack://dwv/./src/image/rsi.js","webpack://dwv/./src/image/size.js","webpack://dwv/./src/math/stats.js","webpack://dwv/./src/image/spacing.js","webpack://dwv/./src/image/geometry.js","webpack://dwv/./src/dicom/dicomDate.js","webpack://dwv/./src/math/orientation.js","webpack://dwv/./src/dicom/dicomElementsWrapper.js","webpack://dwv/./src/image/imageFactory.js","webpack://dwv/./src/dicom/dataWriter.js","webpack://dwv/./src/dicom/dicomWriter.js","webpack://dwv/./src/dicom/dicomCode.js","webpack://dwv/./src/dicom/dicomSegment.js","webpack://dwv/./src/dicom/dicomSegmentFrameInfo.js","webpack://dwv/./src/image/maskFactory.js","webpack://dwv/./src/image/image.js","webpack://dwv/./src/image/viewFactory.js","webpack://dwv/./src/image/view.js","webpack://dwv/./src/image/viewMonochrome.js","webpack://dwv/./src/image/viewPaletteColor.js","webpack://dwv/./src/image/viewRgb.js","webpack://dwv/./src/image/viewYbrFull.js","webpack://dwv/./src/image/planeHelper.js","webpack://dwv/./src/app/viewController.js","webpack://dwv/./src/tools/scrollWheel.js","webpack://dwv/./src/math/line.js","webpack://dwv/./src/image/annotationGroup.js","webpack://dwv/./src/app/drawController.js","webpack://dwv/./src/gui/style.js","webpack://dwv/./src/tools/drawBounds.js","webpack://dwv/./src/math/rectangle.js","webpack://dwv/./src/math/roi.js","webpack://dwv/./src/math/protractor.js","webpack://dwv/./src/math/ellipse.js","webpack://dwv/./src/math/circle.js","webpack://dwv/./src/tools/drawShapeEditor.js","webpack://dwv/./src/tools/drawTrash.js","webpack://dwv/./src/tools/drawShapeHandler.js","webpack://dwv/./src/gui/drawLayer.js","webpack://dwv/./src/tools/drawCommands.js","webpack://dwv/./src/math/path.js","webpack://dwv/./src/math/bucketQueue.js","webpack://dwv/./src/math/scissors.js","webpack://dwv/./src/app/defaults.js","webpack://dwv/./src/tools/labelFactory.js","webpack://dwv/./src/image/filter.js","webpack://dwv/./src/tools/filter.js","webpack://dwv/./src/tools/index.js","webpack://dwv/./src/tools/windowLevel.js","webpack://dwv/./src/tools/scroll.js","webpack://dwv/./src/tools/zoomPan.js","webpack://dwv/./src/tools/opacity.js","webpack://dwv/./src/tools/draw.js","webpack://dwv/./src/tools/floodfill.js","webpack://dwv/./src/tools/livewire.js","webpack://dwv/./src/tools/arrow.js","webpack://dwv/./src/tools/circle.js","webpack://dwv/./src/tools/ellipse.js","webpack://dwv/./src/tools/protractor.js","webpack://dwv/./src/tools/rectangle.js","webpack://dwv/./src/tools/roi.js","webpack://dwv/./src/tools/ruler.js","webpack://dwv/./src/image/annotation.js","webpack://dwv/./src/gui/generic.js","webpack://dwv/./src/gui/viewLayer.js","webpack://dwv/./src/gui/layerGroup.js","webpack://dwv/./src/gui/stage.js","webpack://dwv/./src/io/state.js","webpack://dwv/./src/utils/uri.js","webpack://dwv/./src/utils/undoStack.js","webpack://dwv/./src/app/toolboxController.js","webpack://dwv/./src/utils/progress.js","webpack://dwv/./src/io/urlsLoader.js","webpack://dwv/./src/utils/thread.js","webpack://dwv/./src/image/decoder.js","webpack://dwv/./src/dicom/dicomMeasuredValue.js","webpack://dwv/./src/dicom/dicomNumericMeasurement.js","webpack://dwv/./src/dicom/dicomSopInstanceReference.js","webpack://dwv/./src/dicom/dicomImageReference.js","webpack://dwv/./src/dicom/dicomSpatialCoordinate.js","webpack://dwv/./src/dicom/dicomSpatialCoordinate3D.js","webpack://dwv/./src/dicom/dicomSRContent.js","webpack://dwv/./src/image/annotationGroupFactory.js","webpack://dwv/./src/app/dataController.js","webpack://dwv/./src/utils/operator.js","webpack://dwv/./src/image/dicomBufferToView.js","webpack://dwv/./src/io/memoryLoader.js","webpack://dwv/./src/image/domReader.js","webpack://dwv/./src/io/loaderList.js","webpack://dwv/./src/io/dicomDataLoader.js","webpack://dwv/./src/io/jsonTextLoader.js","webpack://dwv/./src/io/multipartLoader.js","webpack://dwv/./src/io/rawImageLoader.js","webpack://dwv/./src/io/rawVideoLoader.js","webpack://dwv/./src/io/zipLoader.js","webpack://dwv/./src/io/filesLoader.js","webpack://dwv/./src/app/loadController.js","webpack://dwv/./src/gui/overlayData.js","webpack://dwv/./src/app/application.js","webpack://dwv/./src/image/maskSegmentHelper.js","webpack://dwv/./src/image/deleteSegmentCommand.js","webpack://dwv/./src/image/changeSegmentColourCommand.js","webpack://dwv/./src/image/maskSegmentViewHelper.js","webpack://dwv/./src/math/scalar.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"konva\"), require(\"magic-wand-tool\"), require(\"jszip\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"konva\", \"konmagic-wand-tool\", \"jszip\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dwv\"] = factory(require(\"konva\"), require(\"magic-wand-tool\"), require(\"jszip\"));\n\telse\n\t\troot[\"dwv\"] = factory(root[\"Konva\"], root[\"MagicWand\"], root[\"JSZip\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__944__, __WEBPACK_EXTERNAL_MODULE__324__, __WEBPACK_EXTERNAL_MODULE__654__) {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__654__;","module.exports = __WEBPACK_EXTERNAL_MODULE__944__;","module.exports = __WEBPACK_EXTERNAL_MODULE__324__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Immutable index.\n * Warning: the input array is NOT cloned, modifying it will\n *  modify the index values.\n */\nexport class Index {\n\n  /**\n   * Index values.\n   *\n   * @type {number[]}\n   */\n  #values;\n\n  /**\n   * @param {number[]} values The index values.\n   */\n  constructor(values) {\n    if (!values || typeof values === 'undefined') {\n      throw new Error('Cannot create index with no values.');\n    }\n    if (values.length === 0) {\n      throw new Error('Cannot create index with empty values.');\n    }\n    const valueCheck = function (val) {\n      return !isNaN(val);\n    };\n    if (!values.every(valueCheck)) {\n      throw new Error('Cannot create index with non number values.');\n    }\n    this.#values = values;\n  }\n\n  /**\n   * Get the index value at the given array index.\n   *\n   * @param {number} i The index to get.\n   * @returns {number|undefined} The value or undefined if not in range.\n   */\n  get(i) {\n    return this.#values[i];\n  }\n\n  /**\n   * Get the length of the index.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return this.#values.length;\n  }\n\n  /**\n   * Get a string representation of the Index.\n   *\n   * @returns {string} The Index as a string.\n   */\n  toString() {\n    return '(' + this.#values.toString() + ')';\n  }\n\n  /**\n   * Get the values of this index.\n   *\n   * @returns {number[]} The array of values.\n   */\n  getValues() {\n    return this.#values.slice();\n  }\n\n  /**\n   * Check if the input index can be compared to this one.\n   *\n   * @param {Index} rhs The index to compare to.\n   * @returns {boolean} True if both indices are comparable.\n   */\n  canCompare(rhs) {\n    // check input\n    if (!rhs) {\n      return false;\n    }\n    // check length\n    if (this.length() !== rhs.length()) {\n      return false;\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Check for Index equality.\n   *\n   * @param {Index} rhs The index to compare to.\n   * @returns {boolean} True if both indices are equal.\n   */\n  equals(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return false;\n    }\n    // check values\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Compare indices and return different dimensions.\n   *\n   * @param {Index} rhs The index to compare to.\n   * @returns {number[]} The list of different dimensions.\n   */\n  compare(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return null;\n    }\n    // check values\n    const diffDims = [];\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        diffDims.push(i);\n      }\n    }\n    return diffDims;\n  }\n\n  /**\n   * Add another index to this one.\n   *\n   * @param {Index} rhs The index to add.\n   * @returns {Index} The index representing the sum of both indices.\n   */\n  add(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return null;\n    }\n    // add values\n    const values = [];\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      values.push(this.get(i) + rhs.get(i));\n    }\n    // seems ok!\n    return new Index(values);\n  }\n\n  /**\n   * Get the current index with a new 2D base.\n   *\n   * @param {number} i The new 0 index.\n   * @param {number} j The new 1 index.\n   * @returns {Index} The new index.\n   */\n  getWithNew2D(i, j) {\n    const values = [i, j];\n    for (let l = 2, lenl = this.length(); l < lenl; ++l) {\n      values.push(this.get(l));\n    }\n    return new Index(values);\n  }\n\n} // Index class\n\n/**\n * Get an index with values set to 0 and the input size.\n *\n * @param {number} size The size of the index.\n * @returns {Index} The zero index.\n */\nexport function getZeroIndex(size) {\n  const values = new Array(size);\n  values.fill(0);\n  return new Index(values);\n}\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {RescaleSlopeAndIntercept} from './rsi';\n/* eslint-enable no-unused-vars */\n\n/**\n * Modality LUT class: compensates for any modality-specific presentation.\n * Typically consists of a rescale slope and intercept to\n * rescale the data range.\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.11.html}.\n */\nexport class ModalityLut {\n\n  /**\n   * The rescale slope.\n   *\n   * @type {RescaleSlopeAndIntercept}\n   */\n  #rsi;\n\n  /**\n   * Is the RSI an identity one.\n   *\n   * @type {boolean}\n   */\n  #isIdRsi;\n\n  /**\n   * The size of the LUT array.\n   *\n   * @type {number}\n   */\n  #length;\n\n  /**\n   * The internal LUT array.\n   *\n   * @type {Float32Array}\n   */\n  #lut;\n\n  /**\n   * @param {RescaleSlopeAndIntercept} rsi The rescale slope and intercept.\n   * @param {number} bitsStored The number of bits used to store the data.\n   */\n  constructor(rsi, bitsStored) {\n    this.#rsi = rsi;\n    this.#isIdRsi = rsi.isID();\n\n    this.#length = Math.pow(2, bitsStored);\n\n    // create lut if not identity RSI\n    if (!this.#isIdRsi) {\n      this.#lut = new Float32Array(this.#length);\n      for (let i = 0; i < this.#length; ++i) {\n        this.#lut[i] = this.#rsi.apply(i);\n      }\n    }\n  }\n\n  /**\n   * Get the Rescale Slope and Intercept (RSI).\n   *\n   * @returns {RescaleSlopeAndIntercept} The rescale slope and intercept object.\n   */\n  getRSI() {\n    return this.#rsi;\n  }\n\n  /**\n   * Get the length of the LUT array.\n   *\n   * @returns {number} The length of the LUT array.\n   */\n  getLength() {\n    return this.#length;\n  }\n\n  /**\n   * Get the value of the LUT at the given offset.\n   *\n   * @param {number} offset The input offset in [0,2^bitsStored] range\n   *   or full range for ID rescale.\n   * @returns {number} The float32 value of the LUT at the given offset.\n   */\n  getValue(offset) {\n    return this.#isIdRsi ? offset : this.#lut[offset];\n  }\n\n} // class ModalityLut\n","export const logger = {\n  /**\n   * Available log levels.\n   * Note: need to activate verbose level in\n   *   Chrome console to see DEBUG messages.\n   */\n  levels: {\n    TRACE: 0,\n    DEBUG: 1,\n    INFO: 2,\n    WARN: 3,\n    ERROR: 4\n  },\n\n  /**\n   * Logger level: default to WARN.\n   */\n  level: 3,\n\n  /**\n   * Log a trace message.\n   *\n   * @param {string} msg The message to log.\n   */\n  trace: function (msg) {\n    if (this.level <= this.levels.TRACE) {\n      console.trace(msg);\n    }\n  },\n\n  /**\n   * Log a debug message.\n   * Careful: depends on console settings.\n   *\n   * @param {string} msg The message to log.\n   */\n  debug: function (msg) {\n    if (this.level <= this.levels.DEBUG) {\n      console.debug(msg);\n    }\n  },\n\n  /**\n   * Log an info message.\n   *\n   * @param {string} msg The message to log.\n   */\n  info: function (msg) {\n    if (this.level <= this.levels.INFO) {\n      console.info(msg);\n    }\n  },\n\n  /**\n   * Log a warn message.\n   *\n   * @param {string} msg The message to log.\n   */\n  warn: function (msg) {\n    if (this.level <= this.levels.WARN) {\n      console.warn(msg);\n    }\n  },\n\n  /**\n   * Log an error message.\n   *\n   * @param {string} msg The message to log.\n   */\n  error: function (msg) {\n    if (this.level <= this.levels.ERROR) {\n      console.error(msg);\n    }\n  }\n\n}; // logger\n","import {logger} from '../utils/logger';\n\n/**\n * Minimum window width value.\n *\n * Ref: {@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.11.2.html#sect_C.11.2.1.2}.\n */\nconst minWindowWidth = 1;\n\n/**\n * Validate an input window width.\n *\n * @param {number} value The value to test.\n * @returns {number} A valid window width.\n */\nexport function validateWindowWidth(value) {\n  return value < minWindowWidth ? minWindowWidth : value;\n}\n\n/**\n * Window and Level also known as window width and center.\n */\nexport class WindowLevel {\n  /**\n   * The window center.\n   *\n   * @type {number}\n   */\n  center;\n\n  /**\n   * The window width.\n   *\n   * @type {number}\n   */\n  width;\n\n  /**\n   * @param {number} center The window center.\n   * @param {number} width The window width.\n   */\n  constructor(center, width) {\n    // check width\n    if (width < minWindowWidth) {\n      logger.warn('Using minimum window width since input is not valid: ' +\n        width);\n      width = minWindowWidth;\n    }\n    this.center = center;\n    this.width = width;\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {WindowLevel} rhs The other object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      typeof rhs !== 'undefined' &&\n      this.center === rhs.center &&\n      this.width === rhs.width;\n  }\n\n} // WindowLevel class\n\n/**\n * List of default window level presets.\n *\n * @type {Object.<string, Object.<string, WindowLevel>>}\n */\nexport const defaultPresets = {\n  CT: {\n    mediastinum: new WindowLevel(40, 400),\n    lung: new WindowLevel(-500, 1500),\n    bone: new WindowLevel(500, 2000),\n    brain: new WindowLevel(40, 80),\n    head: new WindowLevel(90, 350)\n  }\n};\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {WindowLevel} from './windowLevel';\n/* eslint-enable no-unused-vars */\n\n/**\n * VOI (Values of Interest) LUT class: apply window centre and width.\n *\n * ```\n * if (x <= c - 0.5 - (w-1)/2) then y = ymin\n * else if (x > c - 0.5 + (w-1)/2) then y = ymax\n * else y = ((x - (c - 0.5)) / (w-1) + 0.5) * (ymax - ymin) + ymin\n * ```\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.11.2.html}.\n */\nexport class VoiLut {\n\n  /**\n   * The window and level.\n   *\n   * @type {WindowLevel}\n   */\n  #windowLevel;\n\n  /**\n   * Signed data offset. Defaults to 0.\n   *\n   * @type {number}\n   */\n  #signedOffset = 0;\n\n  /**\n   * Output value minimum. Defaults to 0.\n   *\n   * @type {number}\n   */\n  #ymin = 0;\n\n  /**\n   * Output value maximum. Defaults to 255.\n   *\n   * @type {number}\n   */\n  #ymax = 255;\n\n  /**\n   * Input value minimum (calculated).\n   *\n   * @type {number}\n   */\n  #xmin = null;\n\n  /**\n   * Input value maximum (calculated).\n   *\n   * @type {number}\n   */\n  #xmax = null;\n\n  /**\n   * Window level equation slope (calculated).\n   *\n   * @type {number}\n   */\n  #slope = null;\n\n  /**\n   * Window level equation intercept (calculated).\n   *\n   * @type {number}\n   */\n  #inter = null;\n\n  /**\n   * @param {WindowLevel} wl The window center and width.\n   */\n  constructor(wl) {\n    this.#windowLevel = wl;\n    this.#init();\n  }\n\n  /**\n   * Get the window and level.\n   *\n   * @returns {WindowLevel} The window center and width.\n   */\n  getWindowLevel() {\n    return this.#windowLevel;\n  }\n\n  /**\n   * Initialise members. Called at construction.\n   *\n   */\n  #init() {\n    const center = this.#windowLevel.center;\n    const width = this.#windowLevel.width;\n    const c = center + this.#signedOffset;\n    // from the standard\n    this.#xmin = c - 0.5 - ((width - 1) / 2);\n    this.#xmax = c - 0.5 + ((width - 1) / 2);\n    // develop the equation:\n    // y = ( ( x - (c - 0.5) ) / (w-1) + 0.5 ) * (ymax - ymin) + ymin\n    // y = ( x / (w-1) ) * (ymax - ymin) +\n    //     ( -(c - 0.5) / (w-1) + 0.5 ) * (ymax - ymin) + ymin\n    this.#slope = (this.#ymax - this.#ymin) / (width - 1);\n    this.#inter = (-(c - 0.5) / (width - 1) + 0.5) *\n      (this.#ymax - this.#ymin) + this.#ymin;\n  }\n\n  /**\n   * Set the signed offset.\n   *\n   * @param {number} offset The signed data offset,\n   *   typically: slope * ( size / 2).\n   */\n  setSignedOffset(offset) {\n    this.#signedOffset = offset;\n    // re-initialise\n    this.#init();\n  }\n\n  /**\n   * Apply the window level on an input value.\n   *\n   * @param {number} value The value to rescale as an integer.\n   * @returns {number} The leveled value, in the\n   *  [ymin, ymax] range (default [0,255]).\n   */\n  apply(value) {\n    if (value <= this.#xmin) {\n      return this.#ymin;\n    } else if (value > this.#xmax) {\n      return this.#ymax;\n    } else {\n      return (value * this.#slope) + this.#inter;\n    }\n  }\n\n} // class VoiLut\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {ModalityLut} from './modalityLut';\nimport {VoiLut} from './voiLut';\n/* eslint-enable no-unused-vars */\n\n/**\n * Window LUT class: combines a modality LUT and a VOI LUT.\n */\nexport class WindowLut {\n\n  /**\n   * The modality LUT.\n   *\n   * @type {ModalityLut}\n   */\n  #modalityLut;\n\n  /**\n   * The VOI LUT.\n   *\n   * @type {VoiLut}\n   */\n  #voiLut;\n\n  /**\n   * The internal LUT array: Uint8ClampedArray clamps between 0 and 255.\n   *\n   * @type {Uint8ClampedArray}\n   */\n  #lut;\n\n  /**\n   * Shift for signed data.\n   *\n   * @type {number}\n   */\n  #signedShift = 0;\n\n  /**\n   * Is the RSI discrete.\n   *\n   * @type {boolean}\n   */\n  #isDiscrete = true;\n\n  /**\n   * Construct a window LUT object, VOI LUT is set with\n   *   the 'setVoiLut' method.\n   *\n   * @param {ModalityLut} modalityLut The associated rescale LUT.\n   * @param {boolean} isSigned Flag to know if the data is signed or not.\n   * @param {boolean} isDiscrete Flag to know if the input data is discrete.\n   */\n  constructor(modalityLut, isSigned, isDiscrete) {\n    this.#modalityLut = modalityLut;\n\n    if (isSigned) {\n      const size = this.#modalityLut.getLength();\n      this.#signedShift = size / 2;\n    } else {\n      this.#signedShift = 0;\n    }\n\n    this.#isDiscrete = isDiscrete;\n  }\n\n  /**\n   * Get the VOI LUT.\n   *\n   * @returns {VoiLut} The VOI LUT.\n   */\n  getVoiLut() {\n    return this.#voiLut;\n  }\n\n  /**\n   * Get the modality LUT.\n   *\n   * @returns {ModalityLut} The modality LUT.\n   */\n  getModalityLut() {\n    return this.#modalityLut;\n  }\n\n  /**\n   * Set the VOI LUT.\n   *\n   * @param {VoiLut} lut The VOI LUT.\n   */\n  setVoiLut(lut) {\n    // store the window values\n    this.#voiLut = lut;\n\n    // possible signed shift (LUT indices are positive)\n    this.#voiLut.setSignedOffset(\n      this.#modalityLut.getRSI().getSlope() * this.#signedShift);\n\n    // create lut if not continous\n    if (this.#isDiscrete) {\n      const size = this.#modalityLut.getLength();\n      // use clamped array (polyfilled in env.js)\n      this.#lut = new Uint8ClampedArray(size);\n      // by default WindowLevel returns a value in the [0,255] range\n      // this is ok with regular Arrays and ClampedArray.\n      for (let i = 0; i < size; ++i) {\n        this.#lut[i] = this.#voiLut.apply(this.#modalityLut.getValue(i));\n      }\n    }\n  }\n\n  /**\n   * Get the value of the LUT at the given offset.\n   *\n   * @param {number} offset The input offset in [0,2^bitsStored] range\n   *   for discrete data or full range for non discrete.\n   * @returns {number} The integer value (default [0,255]) of the LUT\n   *   at the given offset.\n   */\n  getValue(offset) {\n    if (this.#isDiscrete) {\n      return this.#lut[offset + this.#signedShift];\n    } else {\n      return Math.floor(this.#voiLut.apply(offset + this.#signedShift));\n    }\n  }\n\n} // class WindowLut\n","/**\n * Lookup tables for image colour display.\n */\n\nconst lut_range_max = 256;\n\n/**\n * Build a LUT of size lut_range_max.\n *\n * @param {Function} func The i to lut function.\n * @returns {number[]} The LUT.\n */\nfunction buildLut(func) {\n  const lut = [];\n  for (let i = 0; i < lut_range_max; ++i) {\n    lut.push(func(i));\n  }\n  return lut;\n}\n\n/**\n * Ramp to lut_range_max minus one on the first third values.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction toMaxFirstThird(i) {\n  const val = i * 3;\n  if (val > lut_range_max - 1) {\n    return lut_range_max - 1;\n  }\n  return val;\n}\n\n/**\n * Ramp to lut_range_max minus one on the second third values,\n *   otherwise return 0 for the first third and\n *   lut_range_max minus one for the last third.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction toMaxSecondThird(i) {\n  const third = lut_range_max / 3;\n  let val = 0;\n  if (i >= third) {\n    val = (i - third) * 3;\n    if (val > lut_range_max - 1) {\n      return lut_range_max - 1;\n    }\n  }\n  return val;\n}\n\n/**\n * Ramp to lut_range_max minus one on the last third values,\n *   otherwise return 0.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction toMaxThirdThird(i) {\n  const third = lut_range_max / 3;\n  let val = 0;\n  if (i >= 2 * third) {\n    val = (i - 2 * third) * 3;\n    if (val > lut_range_max - 1) {\n      return lut_range_max - 1;\n    }\n  }\n  return val;\n}\n\n/**\n * Identity, returns i.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction id(i) {\n  return i;\n}\n\n/**\n * Returns lut_range_max minus one minus i.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction invId(i) {\n  return (lut_range_max - 1) - i;\n}\n\n/**\n * Colour map: red, green and blue components\n *   to associate with intensity values.\n */\nexport class ColourMap {\n  /**\n   * Red component: 256 values in the [0, 255] range.\n   *\n   * @type {number[]}\n   */\n  red;\n  /**\n   * Green component: 256 values in the [0, 255] range.\n   *\n   * @type {number[]}\n   */\n  green;\n  /**\n   * Blue component: 256 values in the [0, 255] range.\n   *\n   * @type {number[]}\n   */\n  blue;\n\n  /**\n   * @param {number[]} red Red component.\n   * @param {number[]} green Green component.\n   * @param {number[]} blue Blue component.\n   */\n  constructor(red, green, blue) {\n    this.red = red;\n    this.green = green;\n    this.blue = blue;\n  }\n}\n\n/**\n * List of available lookup tables (lut).\n *\n * @type {Object<string, ColourMap>}\n */\nexport const luts = {\n  // plain\n  plain: {\n    red: buildLut(id),\n    green: buildLut(id),\n    blue: buildLut(id)\n  },\n\n  // inverse plain\n  invPlain: {\n    red: buildLut(invId),\n    green: buildLut(invId),\n    blue: buildLut(invId)\n  },\n\n  // rainbow\n  /* eslint-disable @stylistic/js/max-len */\n  rainbow: {\n    blue: [0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 148, 152, 156, 160, 164, 168, 172, 176, 180, 184, 188, 192, 196, 200, 204, 208, 212, 216, 220, 224, 228, 232, 236, 240, 244, 248, 252, 255, 247, 239, 231, 223, 215, 207, 199, 191, 183, 175, 167, 159, 151, 143, 135, 127, 119, 111, 103, 95, 87, 79, 71, 63, 55, 47, 39, 31, 23, 15, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120, 128, 136, 144, 152, 160, 168, 176, 184, 192, 200, 208, 216, 224, 232, 240, 248, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 253, 251, 249, 247, 245, 243, 241, 239, 237, 235, 233, 231, 229, 227, 225, 223, 221, 219, 217, 215, 213, 211, 209, 207, 205, 203, 201, 199, 197, 195, 193, 192, 189, 186, 183, 180, 177, 174, 171, 168, 165, 162, 159, 156, 153, 150, 147, 144, 141, 138, 135, 132, 129, 126, 123, 120, 117, 114, 111, 108, 105, 102, 99, 96, 93, 90, 87, 84, 81, 78, 75, 72, 69, 66, 63, 60, 57, 54, 51, 48, 45, 42, 39, 36, 33, 30, 27, 24, 21, 18, 15, 12, 9, 6, 3],\n    red: [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 62, 60, 58, 56, 54, 52, 50, 48, 46, 44, 42, 40, 38, 36, 34, 32, 30, 28, 26, 24, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 148, 152, 156, 160, 164, 168, 172, 176, 180, 184, 188, 192, 196, 200, 204, 208, 212, 216, 220, 224, 228, 232, 236, 240, 244, 248, 252, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n  },\n  /* eslint-enable @stylistic/js/max-len */\n\n  // hot\n  hot: {\n    red: buildLut(toMaxFirstThird),\n    green: buildLut(toMaxSecondThird),\n    blue: buildLut(toMaxThirdThird)\n  },\n\n  // hot iron\n  /* eslint-disable @stylistic/js/max-len */\n  hot_iron: {\n    red: [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 255],\n    bluen  },\n  /* eslint-enable @stylistic/js/max-len */\n\n  // pet\n  /* eslint-disable @stylistic/js/max-len */\n  pet: {\n    red: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    green: [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 128, 126, 124, 122, 120, 118, 116, 114, 112, 110, 108, 106, 104, 102, 100, 98, 96, 94, 92, 90, 88, 86, 84, 82, 80, 78, 76, 74, 72, 70, 68, 66, 64, 63, 61, 59, 57, 55, 53, 51, 49, 47, 45, 43, 41, 39, 37, 35, 33, 31, 29, 27, 25, 23, 21, 19, 17, 15, 13, 11, 9, 7, 5, 3, 1, 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 255],\n    blue: [0, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 255, 252, 248, 244, 240, 236, 232, 228, 224, 220, 216, 212, 208, 204, 200, 196, 192, 188, 184, 180, 176, 172, 168, 164, 160, 156, 152, 148, 144, 140, 136, 132, 128, 124, 120, 116, 112, 108, 104, 100, 96, 92, 88, 84, 80, 76, 72, 68, 64, 60, 56, 52, 48, 44, 40, 36, 32, 28, 24, 20, 16, 12, 8, 4, 0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 170, 174, 178, 182, 186, 190, 194, 198, 202, 206, 210, 214, 218, 222, 226, 230, 234, 238, 242, 246, 250, 255]\n  },\n  /* eslint-enable @stylistic/js/max-len */\n\n  // hot metal blue\n  /* eslint-disable @stylistic/js/max-len */\n  hot_metal_blue: {\n    red: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 6, 9, 12, 15, 18, 21, 24, 26, 29, 32, 35, 38, 41, 44, 47, 50, 52, 55, 57, 59, 62, 64, 66, 69, 71, 74, 76, 78, 81, 83, 85, 88, 90, 93, 96, 99, 102, 105, 108, 111, 114, 116, 119, 122, 125, 128, 131, 134, 137, 140, 143, 146, 149, 152, 155, 158, 161, 164, 166, 169, 172, 175, 178, 181, 184, 187, 190, 194, 198, 201, 205, 209, 213, 217, 221, 224, 228, 232, 236, 240, 244, 247, 251, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 6, 8, 9, 11, 13, 15, 17, 19, 21, 23, 24, 26, 28, 30, 32, 34, 36, 38, 40, 41, 43, 45, 47, 49, 51, 53, 55, 56, 58, 60, 62, 64, 66, 68, 70, 72, 73, 75, 77, 79, 81, 83, 85, 87, 88, 90, 92, 94, 96, 98, 100, 102, 104, 105, 107, 109, 111, 113, 115, 117, 119, 120, 122, 124, 126, 128, 130, 132, 134, 136, 137, 139, 141, 143, 145, 147, 149, 151, 152, 154, 156, 158, 160, 162, 164, 166, 168, 169, 171, 173, 175, 177, 179, 181, 183, 184, 186, 188, 190, 192, 194, 196, 198, 200, 201, 203, 205, 207, 209, 211, 213, 215, 216, 218, 220, 222, 224, 226, 228, 229, 231, 233, 235, 237, 239, 240, 242, 244, 246, 248, 250, 251, 253, 255],\n    blue: [0, 2, 4, 6, 8, 10, 12, 14, 16, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 184, 186, 188, 190, 192, 194, 196, 198, 200, 197, 194, 191, 188, 185, 182, 179, 176, 174, 171, 168, 165, 162, 159, 156, 153, 150, 144, 138, 132, 126, 121, 115, 109, 103, 97, 91, 85, 79, 74, 68, 62, 56, 50, 47, 44, 41, 38, 35, 32, 29, 26, 24, 21, 18, 15, 12, 9, 6, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 6, 9, 12, 15, 18, 21, 24, 26, 29, 32, 35, 38, 41, 44, 47, 50, 53, 56, 59, 62, 65, 68, 71, 74, 76, 79, 82, 85, 88, 91, 94, 97, 100, 103, 106, 109, 112, 115, 118, 121, 124, 126, 129, 132, 135, 138, 141, 144, 147, 150, 153, 156, 159, 162, 165, 168, 171, 174, 176, 179, 182, 185, 188, 191, 194, 197, 200, 203, 206, 210, 213, 216, 219, 223, 226, 229, 232, 236, 239, 242, 245, 249, 252, 255]\n  },\n  /* eslint-enable @stylistic/js/max-len */\n\n  // pet 20 step\n  /* eslint-disable @stylistic/js/max-len */\n  pet_20step: {\n    red: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    blue: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n  }\n  /* eslint-enable @stylistic/js/max-len */\n};\n","// example implementation: dcmtk/dcmiod/libsrc/cielabutil.cc\n// https://github.com/DCMTK/dcmtk/blob/DCMTK-3.6.6/dcmiod/libsrc/cielabutil.cc\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Scalar3D} from '../math/scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * RGB colour class.\n */\nexport class RGB {\n  /**\n   * Red component.\n   *\n   * @type {number}\n   */\n  r;\n  /**\n   * Green component.\n   *\n   * @type {number}\n   */\n  g;\n  /**\n   * Blue component.\n   *\n   * @type {number}\n   */\n  b;\n  /**\n   * @param {number} r Red component.\n   * @param {number} g Green component.\n   * @param {number} b Blue component.\n   */\n  constructor(r, g, b) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n  }\n}\n\n// black rgb\nexport const BLACK = {r: 0, g: 0, b: 0};\n\n/**\n * Check if two rgb objects are equal.\n *\n * @param {RGB} c1 The first colour.\n * @param {RGB} c2 The second colour.\n * @returns {boolean} True if both colour are equal.\n */\nexport function isEqualRgb(c1, c2) {\n  return c1 !== null &&\n    c2 !== null &&\n    typeof c1 !== 'undefined' &&\n    typeof c2 !== 'undefined' &&\n    c1.r === c2.r &&\n    c1.g === c2.g &&\n    c1.b === c2.b;\n}\n\n/**\n * Convert YBR to RGB.\n *\n * Ref:\n * - {@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.7.6.3.html#sect_C.7.6.3.1.2},\n * - {@link https://en.wikipedia.org/wiki/YCbCr#JPEG_conversion}.\n *\n * @param {number} y The Y component.\n * @param {number} cb The Cb component.\n * @param {number} cr The Cr component.\n * @returns {RGB} RGB equivalent as {r,g,b}.\n */\nexport function ybrToRgb(y, cb, cr) {\n  return {\n    r: y + 1.402 * (cr - 128),\n    g: y - 0.34414 * (cb - 128) - 0.71414 * (cr - 128),\n    b: y + 1.772 * (cb - 128)\n  };\n}\n\n/**\n * Convert a hex color into RGB.\n *\n * @param {string} hexStr The hex color as '#ab01ef'.\n * @returns {RGB} The RGB values as {r,g,b}.\n */\nexport function hexToRgb(hexStr) {\n  return {\n    r: parseInt(hexStr.substring(1, 3), 16),\n    g: parseInt(hexStr.substring(3, 5), 16),\n    b: parseInt(hexStr.substring(5, 7), 16)\n  };\n}\n\n/**\n * Convert RGB to its hex equivalent.\n *\n * @param {RGB} rgb The RGB object as {r,g,b}.\n * @returns {string} A string representing the hex color as '#ab01ef'.\n */\nexport function rgbToHex(rgb) {\n  return '#' +\n    ((1 << 24) + (rgb.r << 16) + (rgb.g << 8) + rgb.b).toString(16).slice(1);\n}\n\n/**\n * Get the brightness of a RGB colour: calculates\n * the luma (Y) of the YIQ colour space.\n *\n * Ref: {@link https://en.wikipedia.org/wiki/YIQ#From_RGB_to_YIQ}.\n *\n * @param {RGB} rgb RGB triplet.\n * @returns {number} The brightness ([0,1]).\n */\nexport function getBrightness(rgb) {\n  // 0.001172549 = 0.299 / 255\n  // 0.002301961 = 0.587 / 255\n  // 0.000447059 = 0.114 / 255\n  return rgb.r * 0.001172549 +\n    rgb.g * 0.002301961 +\n    rgb.b * 0.000447059;\n}\n\n/**\n * Check if a colour given in hexadecimal format is dark.\n *\n * @param {string} hexColour The colour (as '#ab01ef').\n * @returns {boolean} True if the colour is dark (brightness < 0.5).\n */\nexport function isDarkColour(hexColour) {\n  return getBrightness(hexToRgb(hexColour)) < 0.5;\n}\n\n/**\n * Get the shadow colour of an input colour.\n *\n * @param {string} hexColour The colour (as '#ab01ef').\n * @returns {string} The shadow colour (white or black).\n */\nexport function getShadowColour(hexColour) {\n  return isDarkColour(hexColour) ? '#fff' : '#000';\n}\n\n/**\n * Unsigned int CIE LAB value ([0, 65535]) to CIE LAB value\n *   (L: [0, 100], a: [-128, 127], b: [-128, 127]).\n *\n * @param {object} triplet CIE LAB triplet as {l,a,b} with unsigned range.\n * @returns {object} CIE LAB triplet as {l,a,b} with CIE LAB range.\n */\nexport function uintLabToLab(triplet) {\n  // 0.001525902 = 100 / 65535\n  // 0.003891051 = 255 / 65535\n  return {\n    l: 0.001525902 * triplet.l,\n    a: 0.003891051 * triplet.a - 128,\n    b: 0.003891051 * triplet.b - 128,\n  };\n}\n\n/**\n * CIE LAB value (L: [0, 100], a: [-128, 127], b: [-128, 127]) to\n *   unsigned int CIE LAB ([0, 65535]).\n *\n * @param {object} triplet CIE XYZ triplet as {l,a,b} with CIE LAB range.\n * @returns {object} CIE LAB triplet as {l,a,b} with unsigned range.\n */\nexport function labToUintLab(triplet) {\n  // 655.35 = 65535 / 100\n  // aUint = (a + 128) * 65535 / 255\n  // 257 = 65535 / 255\n  // 32896 = 257 * 128\n  return {\n    l: 655.35 * triplet.l,\n    a: 257 * triplet.a + 32896,\n    b: 257 * triplet.b + 32896,\n  };\n}\n\n/**\n * CIE Standard Illuminant D65, standard 2° observer.\n *\n * Ref: {@link https://en.wikipedia.org/wiki/Illuminant_D65}.\n */\nconst d65 = {\n  x: 95.0489,\n  y: 100,\n  z: 108.884\n};\n\n/**\n * Convert CIE LAB to CIE XYZ (standard illuminant D65, 2degree 1931).\n *\n * Ref: {@link https://en.wikipedia.org/wiki/CIELAB_color_space#From_CIELAB_to_CIEXYZ}.\n *\n * @param {object} triplet CIE LAB triplet as {l,a,b}.\n * @returns {Scalar3D} CIE XYZ triplet as {x,y,z}.\n */\nexport function cielabToCiexyz(triplet) {\n  /**\n   * Apply the inverse lab function.\n   *\n   * @param {number} x The input value.\n   * @returns {number} The result.\n   */\n  function invLabFunc(x) {\n    let res = null;\n    // delta = 6 / 29 = 0.206896552\n    if (x > 0.206896552) {\n      res = Math.pow(x, 3);\n    } else {\n      // 0.128418549 = 3 * delta^2\n      // 0.017712903 = 3 * delta^2 * (4 / 29)\n      res = 0.128418549 * x - 0.017712903;\n    }\n    return res;\n  }\n\n  const illuminant = d65;\n  const l0 = (triplet.l + 16) / 116;\n\n  return {\n    x: illuminant.x * invLabFunc(l0 + triplet.a / 500),\n    y: illuminant.y * invLabFunc(l0),\n    z: illuminant.z * invLabFunc(l0 - triplet.b / 200)\n  };\n}\n\n/**\n * Convert CIE XYZ to CIE LAB (standard illuminant D65, 2degree 1931).\n *\n * Ref: {@link https://en.wikipedia.org/wiki/CIELAB_color_space#From_CIEXYZ_to_CIELAB}.\n *\n * @param {Scalar3D} triplet CIE XYZ triplet as {x,y,z}.\n * @returns {object} CIE LAB triplet as {l,a,b}.\n */\nexport function ciexyzToCielab(triplet) {\n  /**\n   * Apply the lab function.\n   *\n   * @param {number} x The input value.\n   * @returns {number} The result.\n   */\n  function labFunc(x) {\n    let res = null;\n    // delta = 6 / 29 = 0.206896552\n    // delta^3 = 0.008856452\n    if (x > 0.008856452) {\n      res = Math.pow(x, 0.333333333);\n    } else {\n      // 7.787037037 = 1 / 3 * delta^2\n      // 0.137931034 = 4 / 29\n      res = 7.787037037 * x + 0.137931034;\n    }\n    return res;\n  }\n\n  const illuminant = d65;\n  const fy = labFunc(triplet.y / illuminant.y);\n\n  return {\n    l: 116 * fy - 16,\n    a: 500 * (labFunc(triplet.x / illuminant.x) - fy),\n    b: 200 * (fy - labFunc(triplet.z / illuminant.z))\n  };\n}\n\n/**\n * Convert CIE XYZ to sRGB.\n *\n * Ref: {@link https://en.wikipedia.org/wiki/SRGB#From_CIE_XYZ_to_sRGB}.\n *\n * @param {Scalar3D} triplet CIE XYZ triplet as {x,y,z}.\n * @returns {RGB} 'sRGB' triplet as {r,g,b}.\n */\nexport function ciexyzToSrgb(triplet) {\n  /**\n   * Apply the gamma function.\n   *\n   * @param {number} x The input value.\n   * @returns {number} The result.\n   */\n  function gammaFunc(x) {\n    let res = null;\n    if (x <= 0.0031308) {\n      res = 12.92 * x;\n    } else {\n      // 0.416666667 = 1 / 2.4\n      res = 1.055 * Math.pow(x, 0.416666667) - 0.055;\n    }\n    // clip [0,1]\n    return Math.min(1, Math.max(0, res));\n  }\n\n  const x = triplet.x / 100;\n  const y = triplet.y / 100;\n  const z = triplet.z / 100;\n\n  return {\n    r: Math.round(255 * gammaFunc(3.2406 * x - 1.5372 * y - 0.4986 * z)),\n    g: Math.round(255 * gammaFunc(-0.9689 * x + 1.8758 * y + 0.0415 * z)),\n    b: Math.round(255 * gammaFunc(0.0557 * x - 0.2040 * y + 1.0570 * z))\n  };\n}\n\n/**\n * Convert sRGB to CIE XYZ.\n *\n * Ref: {@link https://en.wikipedia.org/wiki/SRGB#From_sRGB_to_CIE_XYZ}.\n *\n * @param {RGB} triplet 'sRGB' triplet as {r,g,b}.\n * @returns {Scalar3D} CIE XYZ triplet as {x,y,z}.\n */\nexport function srgbToCiexyz(triplet) {\n  /**\n   * Apply the inverse gamma function.\n   *\n   * @param {number} x The input value.\n   * @returns {number} The result.\n   */\n  function invGammaFunc(x) {\n    let res = null;\n    if (x <= 0.04045) {\n      res = x / 12.92;\n    } else {\n      res = Math.pow((x + 0.055) / 1.055, 2.4);\n    }\n    return res;\n  }\n\n  const rl = invGammaFunc(triplet.r / 255);\n  const gl = invGammaFunc(triplet.g / 255);\n  const bl = invGammaFunc(triplet.b / 255);\n\n  return {\n    x: 100 * (0.4124 * rl + 0.3576 * gl + 0.1805 * bl),\n    y: 100 * (0.2126 * rl + 0.7152 * gl + 0.0722 * bl),\n    z: 100 * (0.0193 * rl + 0.1192 * gl + 0.9505 * bl)\n  };\n}\n\n/**\n * Convert CIE LAB to sRGB (standard illuminant D65).\n *\n * @param {object} triplet CIE LAB triplet as {l,a,b}.\n * @returns {RGB} 'sRGB' triplet as {r,g,b}.\n */\nexport function cielabToSrgb(triplet) {\n  return ciexyzToSrgb(cielabToCiexyz(triplet));\n}\n\n/**\n * Convert sRGB to CIE LAB (standard illuminant D65).\n *\n * @param {RGB} triplet 'sRGB' triplet as {r,g,b}.\n * @returns {object} CIE LAB triplet as {l,a,b}.\n */\nexport function srgbToCielab(triplet) {\n  return ciexyzToCielab(srgbToCiexyz(triplet));\n}\n\n/**\n * Get the hex code of a string colour for a colour used in pre dwv v0.17.\n *\n * @param {string} name The name of a colour.\n * @returns {string} The hex representing the colour.\n */\nexport function colourNameToHex(name) {\n  // default colours used in dwv version < 0.17\n  const dict = {\n    Yellow: '#ffff00',\n    Red: '#ff0000',\n    White: '#ffffff',\n    Green: '#008000',\n    Blue: '#0000ff',\n    Lime: '#00ff00',\n    Fuchsia: '#ff00ff',\n    Black: '#000000'\n  };\n  let res = '#ffff00';\n  if (typeof dict[name] !== 'undefined') {\n    res = dict[name];\n  }\n  return res;\n}\n","/**\n * Immutable 3D vector.\n */\nexport class Vector3D {\n\n  /**\n   * X coordinate.\n   *\n   * @type {number}\n   */\n  #x;\n\n  /**\n   * Y coordinate.\n   *\n   * @type {number}\n   */\n  #y;\n\n  /**\n   * Z coordinate.\n   *\n   * @type {number}\n   */\n  #z;\n\n  /**\n   * @param {number} x The X component of the vector.\n   * @param {number} y The Y component of the vector.\n   * @param {number} z The Z component of the vector.\n   */\n  constructor(x, y, z) {\n    this.#x = x;\n    this.#y = y;\n    this.#z = z;\n  }\n\n  /**\n   * Get the X component of the vector.\n   *\n   * @returns {number} The X component of the vector.\n   */\n  getX() {\n    return this.#x;\n  }\n\n  /**\n   * Get the Y component of the vector.\n   *\n   * @returns {number} The Y component of the vector.\n   */\n  getY() {\n    return this.#y;\n  }\n\n  /**\n   * Get the Z component of the vector.\n   *\n   * @returns {number} The Z component of the vector.\n   */\n  getZ() {\n    return this.#z;\n  }\n\n  /**\n   * Check for Vector3D equality.\n   *\n   * @param {Vector3D} rhs The other vector to compare to.\n   * @returns {boolean} True if both vectors are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.#x === rhs.getX() &&\n      this.#y === rhs.getY() &&\n      this.#z === rhs.getZ();\n  }\n\n  /**\n   * Get a string representation of the Vector3D.\n   *\n   * @returns {string} The vector as a string.\n   */\n  toString() {\n    return '(' + this.#x +\n      ', ' + this.#y +\n      ', ' + this.#z + ')';\n  }\n\n  /**\n   * Get the norm of the vector.\n   *\n   * @returns {number} The norm.\n   */\n  norm() {\n    return Math.sqrt(\n      (this.#x * this.#x) +\n      (this.#y * this.#y) +\n      (this.#z * this.#z)\n    );\n  }\n\n  /**\n   * Get the cross product with another Vector3D, ie the\n   * vector that is perpendicular to both a and b.\n   * If both vectors are parallel, the cross product is a zero vector.\n   *\n   * Ref: {@link https://en.wikipedia.org/wiki/Cross_product}.\n   *\n   * @param {Vector3D} vector3D The input vector.\n   * @returns {Vector3D} The result vector.\n   */\n  crossProduct(vector3D) {\n    return new Vector3D(\n      (this.#y * vector3D.getZ()) - (vector3D.getY() * this.#z),\n      (this.#z * vector3D.getX()) - (vector3D.getZ() * this.#x),\n      (this.#x * vector3D.getY()) - (vector3D.getX() * this.#y));\n  }\n\n  /**\n   * Get the dot product with another Vector3D.\n   *\n   * Ref: {@link https://en.wikipedia.org/wiki/Dot_product}.\n   *\n   * @param {Vector3D} vector3D The input vector.\n   * @returns {number} The dot product.\n   */\n  dotProduct(vector3D) {\n    return (this.#x * vector3D.getX()) +\n      (this.#y * vector3D.getY()) +\n      (this.#z * vector3D.getZ());\n  }\n\n  /**\n   * Is this vector codirectional to an input one.\n   *\n   * @param {Vector3D} vector3D The vector to test.\n   * @returns {boolean} True if codirectional, false is opposite.\n   */\n  isCodirectional(vector3D) {\n    // a.dot(b) = ||a|| * ||b|| * cos(theta)\n    // (https://en.wikipedia.org/wiki/Dot_product#Geometric_definition)\n    // -> the sign of the dot product depends on the cosinus of\n    //    the angle between the vectors\n    //   -> >0 => vectors are codirectional\n    //   -> <0 => vectors are opposite\n    return this.dotProduct(vector3D) > 0;\n  }\n\n} // Vector3D class","import {Vector3D} from './vector';\nimport {Point3D} from './point';\nimport {Index} from './index';\nimport {logger} from '../utils/logger';\n\n// Number.EPSILON is difference between 1 and the smallest\n// floating point number greater than 1\n// -> ~2e-16\n// BIG_EPSILON -> ~2e-12\nexport const BIG_EPSILON = Number.EPSILON * 1e4;\n// 'real world', for example when comparing positions\nexport const REAL_WORLD_EPSILON = 1e-4;\n\n/**\n * Check if two numbers are similar.\n *\n * @param {number} a The first number.\n * @param {number} b The second number.\n * @param {number} tol The comparison tolerance,\n *   default to Number.EPSILON.\n * @returns {boolean} True if similar.\n */\nexport function isSimilar(a, b, tol) {\n  if (typeof tol === 'undefined') {\n    tol = Number.EPSILON;\n  }\n  return Math.abs(a - b) < tol;\n}\n\n/**\n * Immutable 3x3 Matrix.\n */\nexport class Matrix33 {\n\n  /**\n   * Matrix values.\n   *\n   * @type {number[]}\n   */\n  #values;\n\n  /**\n   * Matrix inverse, calculated at first ask.\n   *\n   * @type {Matrix33}\n   */\n  #inverse;\n\n  /**\n   * @param {number[]} values Row-major ordered 9 values.\n   */\n  constructor(values) {\n    this.#values = values;\n  }\n\n  /**\n   * Get a value of the matrix.\n   *\n   * @param {number} row The row at wich to get the value.\n   * @param {number} col The column at wich to get the value.\n   * @returns {number|undefined} The value at the position.\n   */\n  get(row, col) {\n    return this.#values[row * 3 + col];\n  }\n\n  /**\n   * Get the inverse of this matrix.\n   *\n   * @returns {Matrix33|undefined} The inverse matrix or undefined\n   *   if the determinant is zero.\n   */\n  getInverse() {\n    if (typeof this.#inverse === 'undefined') {\n      this.#inverse = getMatrixInverse(this);\n    }\n    return this.#inverse;\n  }\n\n  /**\n   * Check for Matrix33 equality.\n   *\n   * @param {Matrix33} rhs The other matrix to compare to.\n   * @param {number} [p] A numeric expression for the precision to use in check\n   *   (ex: 0.001). Defaults to Number.EPSILON if not provided.\n   * @returns {boolean} True if both matrices are equal.\n   */\n  equals(rhs, p) {\n    // TODO: add type check\n    // check values\n    for (let i = 0; i < 3; ++i) {\n      for (let j = 0; j < 3; ++j) {\n        if (!isSimilar(this.get(i, j), rhs.get(i, j), p)) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Get a string representation of the Matrix33.\n   *\n   * @returns {string} The matrix as a string.\n   */\n  toString() {\n    let str = '[';\n    for (let i = 0; i < 3; ++i) {\n      if (i !== 0) {\n        str += ', \\n ';\n      }\n      for (let j = 0; j < 3; ++j) {\n        if (j !== 0) {\n          str += ', ';\n        }\n        str += this.get(i, j);\n      }\n    }\n    str += ']';\n    return str;\n  }\n\n  /**\n   * Multiply this matrix by another.\n   *\n   * @param {Matrix33} rhs The matrix to multiply by.\n   * @returns {Matrix33} The product matrix.\n   */\n  multiply(rhs) {\n    const values = [];\n    for (let i = 0; i < 3; ++i) {\n      for (let j = 0; j < 3; ++j) {\n        let tmp = 0;\n        for (let k = 0; k < 3; ++k) {\n          tmp += this.get(i, k) * rhs.get(k, j);\n        }\n        values.push(tmp);\n      }\n    }\n    return new Matrix33(values);\n  }\n\n  /**\n   * Get the absolute value of this matrix.\n   *\n   * @returns {Matrix33} The result matrix.\n   */\n  getAbs() {\n    const values = [];\n    for (let i = 0; i < 3; ++i) {\n      for (let j = 0; j < 3; ++j) {\n        values.push(Math.abs(this.get(i, j)));\n      }\n    }\n    return new Matrix33(values);\n  }\n\n  /**\n   * Multiply this matrix by a 3D array.\n   *\n   * @param {number[]} array3D The input 3D array.\n   * @returns {number[]} The result 3D array.\n   */\n  multiplyArray3D(array3D) {\n    if (array3D.length !== 3) {\n      throw new Error('Cannot multiply 3x3 matrix with non 3D array: ' +\n        array3D.length);\n    }\n    const values = [];\n    for (let i = 0; i < 3; ++i) {\n      let tmp = 0;\n      for (let j = 0; j < 3; ++j) {\n        tmp += this.get(i, j) * array3D[j];\n      }\n      values.push(tmp);\n    }\n    return values;\n  }\n\n  /**\n   * Multiply this matrix by a 3D vector.\n   *\n   * @param {Vector3D} vector3D The input 3D vector.\n   * @returns {Vector3D} The result 3D vector.\n   */\n  multiplyVector3D(vector3D) {\n    const array3D = this.multiplyArray3D(\n      [vector3D.getX(), vector3D.getY(), vector3D.getZ()]\n    );\n    return new Vector3D(array3D[0], array3D[1], array3D[2]);\n  }\n\n  /**\n   * Multiply this matrix by a 3D point.\n   *\n   * @param {Point3D} point3D The input 3D point.\n   * @returns {Point3D} The result 3D point.\n   */\n  multiplyPoint3D(point3D) {\n    const array3D = this.multiplyArray3D(\n      [point3D.getX(), point3D.getY(), point3D.getZ()]\n    );\n    return new Point3D(array3D[0], array3D[1], array3D[2]);\n  }\n\n  /**\n   * Multiply this matrix by a 3D index.\n   *\n   * @param {Index} index3D The input 3D index.\n   * @returns {Index} The result 3D index.\n   */\n  multiplyIndex3D(index3D) {\n    const array3D = this.multiplyArray3D(index3D.getValues());\n    return new Index(array3D);\n  }\n\n  /**\n   * Get the index of the maximum in absolute value of a row.\n   *\n   * @param {number} row The row to get the maximum from.\n   * @returns {object} The {value,index} of the maximum.\n   */\n  getRowAbsMax(row) {\n    const values = [\n      Math.abs(this.get(row, 0)),\n      Math.abs(this.get(row, 1)),\n      Math.abs(this.get(row, 2))\n    ];\n    const absMax = Math.max.apply(null, values);\n    const index = values.indexOf(absMax);\n    return {\n      value: this.get(row, index),\n      index: index\n    };\n  }\n\n  /**\n   * Get the index of the maximum in absolute value of a column.\n   *\n   * @param {number} col The column to get the maximum from.\n   * @returns {object} The {value,index} of the maximum.\n   */\n  getColAbsMax(col) {\n    const values = [\n      Math.abs(this.get(0, col)),\n      Math.abs(this.get(1, col)),\n      Math.abs(this.get(2, col))\n    ];\n    const absMax = Math.max.apply(null, values);\n    const index = values.indexOf(absMax);\n    return {\n      value: this.get(index, col),\n      index: index\n    };\n  }\n\n  /**\n   * Get this matrix with only zero and +/- ones instead of the maximum.\n   *\n   * @returns {Matrix33} The simplified matrix.\n   */\n  asOneAndZeros() {\n    const res = [];\n    for (let j = 0; j < 3; ++j) {\n      const max = this.getRowAbsMax(j);\n      const sign = max.value > 0 ? 1 : -1;\n      for (let i = 0; i < 3; ++i) {\n        if (i === max.index) {\n          res.push(1 * sign);\n        } else {\n          res.push(0);\n        }\n      }\n    }\n    return new Matrix33(res);\n  }\n\n  /**\n   * Get the third column direction index of an orientation matrix.\n   *\n   * @returns {number} The index of the absolute maximum of the last column.\n   */\n  getThirdColMajorDirection() {\n    return this.getColAbsMax(2).index;\n  }\n\n} // Matrix33\n\n/**\n * Get the inverse of an input 3*3 matrix.\n *\n * Ref:\n * - {@link https://en.wikipedia.org/wiki/Invertible_matrix#Inversion_of_3_%C3%97_3_matrices},\n * - {@link https://github.com/willnode/N-Matrix-Programmer}.\n *\n * @param {Matrix33} m The input matrix.\n * @returns {Matrix33|undefined} The inverse matrix or undefined\n *   if the determinant is zero.\n */\nfunction getMatrixInverse(m) {\n  const m00 = m.get(0, 0);\n  const m01 = m.get(0, 1);\n  const m02 = m.get(0, 2);\n  const m10 = m.get(1, 0);\n  const m11 = m.get(1, 1);\n  const m12 = m.get(1, 2);\n  const m20 = m.get(2, 0);\n  const m21 = m.get(2, 1);\n  const m22 = m.get(2, 2);\n\n  const a1212 = m11 * m22 - m12 * m21;\n  const a2012 = m12 * m20 - m10 * m22;\n  const a0112 = m10 * m21 - m11 * m20;\n\n  let det = m00 * a1212 + m01 * a2012 + m02 * a0112;\n  if (det === 0) {\n    logger.warn('Cannot invert 3*3 matrix with zero determinant.');\n    return undefined;\n  }\n  det = 1 / det;\n\n  const values = [\n    det * a1212,\n    det * (m02 * m21 - m01 * m22),\n    det * (m01 * m12 - m02 * m11),\n    det * a2012,\n    det * (m00 * m22 - m02 * m20),\n    det * (m02 * m10 - m00 * m12),\n    det * a0112,\n    det * (m01 * m20 - m00 * m21),\n    det * (m00 * m11 - m01 * m10)\n  ];\n\n  return new Matrix33(values);\n}\n\n/**\n * Create a 3x3 identity matrix.\n *\n * @returns {Matrix33} The identity matrix.\n */\nexport function getIdentityMat33() {\n  /* eslint-disable @stylistic/js/array-element-newline */\n  return new Matrix33([\n    1, 0, 0,\n    0, 1, 0,\n    0, 0, 1\n  ]);\n  /* eslint-enable @stylistic/js/array-element-newline */\n}\n\n/**\n * Check if a matrix is a 3x3 identity matrix.\n *\n * @param {Matrix33} mat33 The matrix to test.\n * @returns {boolean} True if identity.\n */\nexport function isIdentityMat33(mat33) {\n  return mat33.equals(getIdentityMat33());\n}\n","import {isSimilar} from './matrix';\nimport {Vector3D} from './vector';\n\n/**\n * Immutable 2D point.\n */\nexport class Point2D {\n\n  /**\n   * X position.\n   *\n   * @type {number}\n   */\n  #x;\n\n  /**\n   * Y position.\n   *\n   * @type {number}\n   */\n  #y;\n\n  /**\n   * @param {number} x The X coordinate for the point.\n   * @param {number} y The Y coordinate for the point.\n   */\n  constructor(x, y) {\n    this.#x = x;\n    this.#y = y;\n  }\n\n  /**\n   * Get the X position of the point.\n   *\n   * @returns {number} The X position of the point.\n   */\n  getX() {\n    return this.#x;\n  }\n\n  /**\n   * Get the Y position of the point.\n   *\n   * @returns {number} The Y position of the point.\n   */\n  getY() {\n    return this.#y;\n  }\n\n  /**\n   * Get the values of this point.\n   *\n   * @returns {number[]} The array of values.\n   */\n  getValues() {\n    return [this.#x, this.#y];\n  }\n\n  /**\n   * Get the centroid of the point, ie itself.\n   *\n   * @returns {Point2D} The centroid point.\n   */\n  getCentroid() {\n    return this;\n  }\n\n  /**\n   * Check for Point2D equality.\n   *\n   * @param {Point2D} rhs The other point to compare to.\n   * @returns {boolean} True if both points are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      typeof rhs !== 'undefined' &&\n      this.#x === rhs.getX() &&\n      this.#y === rhs.getY();\n  }\n\n  /**\n   * Get a string representation of the Point2D.\n   *\n   * @returns {string} The point as a string.\n   */\n  toString() {\n    return '(' + this.#x + ', ' + this.#y + ')';\n  }\n\n  /**\n   * Get the distance to another Point2D.\n   *\n   * @param {Point2D} point2D The input point.\n   * @returns {number} Ths distance to the input point.\n   */\n  getDistance(point2D) {\n    const dx = this.#x - point2D.getX();\n    const dy = this.#y - point2D.getY();\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n} // Point2D class\n\n/**\n * Immutable 3D point.\n */\nexport class Point3D {\n\n  /**\n   * X position.\n   *\n   * @type {number}\n   */\n  #x;\n\n  /**\n   * Y position.\n   *\n   * @type {number}\n   */\n  #y;\n\n  /**\n   * Z position.\n   *\n   * @type {number}\n   */\n  #z;\n\n  /**\n   * @param {number} x The X coordinate for the point.\n   * @param {number} y The Y coordinate for the point.\n   * @param {number} z The Z coordinate for the point.\n   */\n  constructor(x, y, z) {\n    this.#x = x;\n    this.#y = y;\n    this.#z = z;\n  }\n\n  /**\n   * Get the X position of the point.\n   *\n   * @returns {number} The X position of the point.\n   */\n  getX() {\n    return this.#x;\n  }\n\n  /**\n   * Get the Y position of the point.\n   *\n   * @returns {number} The Y position of the point.\n   */\n  getY() {\n    return this.#y;\n  }\n\n  /**\n   * Get the Z position of the point.\n   *\n   * @returns {number} The Z position of the point.\n   */\n  getZ() {\n    return this.#z;\n  }\n\n  /**\n   * Get the values of this point.\n   *\n   * @returns {number[]} The array of values.\n   */\n  getValues() {\n    return [this.#x, this.#y, this.#z];\n  }\n\n  /**\n   * Check for Point3D equality.\n   *\n   * @param {Point3D} rhs The other point to compare to.\n   * @returns {boolean} True if both points are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.#x === rhs.getX() &&\n      this.#y === rhs.getY() &&\n      this.#z === rhs.getZ();\n  }\n\n  /**\n   * Check for Point3D similarity.\n   *\n   * @param {Point3D} rhs The other point to compare to.\n   * @param {number} tol Optional comparison tolerance,\n   *   default to Number.EPSILON.\n   * @returns {boolean} True if both points are equal.\n   */\n  isSimilar(rhs, tol) {\n    return rhs !== null &&\n      isSimilar(this.#x, rhs.getX(), tol) &&\n      isSimilar(this.#y, rhs.getY(), tol) &&\n      isSimilar(this.#z, rhs.getZ(), tol);\n  }\n\n  /**\n   * Get a string representation of the Point3D.\n   *\n   * @returns {string} The point as a string.\n   */\n  toString() {\n    return '(' + this.#x +\n      ', ' + this.#y +\n      ', ' + this.#z + ')';\n  }\n\n  /**\n   * Get the distance to another Point3D.\n   *\n   * @param {Point3D} point3D The input point.\n   * @returns {number} Ths distance to the input point.\n   */\n  getDistance(point3D) {\n    return Math.sqrt(this.#getSquaredDistance(point3D));\n  }\n\n  /**\n   * Get the square of the distance between this and\n   * an input point. Used for sorting.\n   *\n   * @param {Point3D} point3D The input point.\n   * @returns {number} The square of the distance.\n   */\n  #getSquaredDistance(point3D) {\n    const dx = this.#x - point3D.getX();\n    const dy = this.#y - point3D.getY();\n    const dz = this.#z - point3D.getZ();\n    return dx * dx + dy * dy + dz * dz;\n  }\n\n  /**\n   * Get the closest point to this in a Point3D list.\n   *\n   * @param {Point3D[]} pointList The list to check.\n   * @returns {number} The index of the closest point in the input list.\n   */\n  getClosest(pointList) {\n    let minIndex = 0;\n    // the order between squared distances and distances is the same\n    let minDist = this.#getSquaredDistance(pointList[minIndex]);\n    for (let i = 0; i < pointList.length; ++i) {\n      const dist = this.#getSquaredDistance(pointList[i]);\n      if (dist < minDist) {\n        minIndex = i;\n        minDist = dist;\n      }\n    }\n    return minIndex;\n  }\n\n  /**\n   * Get the difference to another Point3D.\n   *\n   * @param {Point3D} point3D The input point.\n   * @returns {Vector3D} The 3D vector from the input point to this one.\n   */\n  minus(point3D) {\n    return new Vector3D(\n      (this.#x - point3D.getX()),\n      (this.#y - point3D.getY()),\n      (this.#z - point3D.getZ()));\n  }\n\n} // Point3D class\n\n/**\n * Get an array find callback for an equal input point.\n *\n * @param {Point3D} point The point to compare to.\n * @returns {Function} A function that compares, using `equals`,\n *   its input point to the one given as input to this function.\n */\nexport function getEqualPoint3DFunction(point) {\n  return function (element) {\n    return element.equals(point);\n  };\n}\n\n/**\n * Immutable point.\n * Warning: the input array is NOT cloned, modifying it will\n *  modify the point values.\n */\nexport class Point {\n\n  /**\n   * Point values.\n   *\n   * @type {number[]}\n   */\n  #values;\n\n  /**\n   * @param {number[]} values The point values.\n   */\n  constructor(values) {\n    if (!values || typeof values === 'undefined') {\n      throw new Error('Cannot create point with no values.');\n    }\n    if (values.length === 0) {\n      throw new Error('Cannot create point with empty values.');\n    }\n    const valueCheck = function (val) {\n      return !isNaN(val);\n    };\n    if (!values.every(valueCheck)) {\n      throw new Error('Cannot create point with non number values.');\n    }\n    this.#values = values;\n  }\n\n  /**\n   * Get the point value at the given array index.\n   *\n   * @param {number} i The index to get.\n   * @returns {number} The value.\n   */\n  get(i) {\n    return this.#values[i];\n  }\n\n  /**\n   * Get the length of the point.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return this.#values.length;\n  }\n\n  /**\n   * Get a string representation of the point.\n   *\n   * @returns {string} The point as a string.\n   */\n  toString() {\n    return '(' + this.#values.toString() + ')';\n  }\n\n  /**\n   * Get the values of this point.\n   *\n   * @returns {number[]} The array of values.\n   */\n  getValues() {\n    return this.#values.slice();\n  }\n\n  /**\n   * Check if the input point can be compared to this one.\n   *\n   * @param {Point} rhs The point to compare to.\n   * @returns {boolean} True if both points are comparable.\n   */\n  canCompare(rhs) {\n    // check input\n    if (!rhs) {\n      return false;\n    }\n    // check length\n    if (this.length() !== rhs.length()) {\n      return false;\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Check for Point equality.\n   *\n   * @param {Point} rhs The point to compare to.\n   * @returns {boolean} True if both points are equal.\n   */\n  equals(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return false;\n    }\n    // check values\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Compare points and return different dimensions.\n   *\n   * @param {Point} rhs The point to compare to.\n   * @returns {number[]} The list of different dimensions.\n   */\n  compare(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return null;\n    }\n    // check values\n    const diffDims = [];\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        diffDims.push(i);\n      }\n    }\n    return diffDims;\n  }\n\n  /**\n   * Get the 3D part of this point.\n   *\n   * @returns {Point3D} The Point3D.\n   */\n  get3D() {\n    return new Point3D(this.get(0), this.get(1), this.get(2));\n  }\n\n  /**\n   * Add another point to this one.\n   *\n   * @param {Point} rhs The point to add.\n   * @returns {Point} The point representing the sum of both points.\n   */\n  add(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return null;\n    }\n    const values = [];\n    const values0 = this.getValues();\n    const values1 = rhs.getValues();\n    for (let i = 0; i < values0.length; ++i) {\n      values.push(values0[i] + values1[i]);\n    }\n    return new Point(values);\n  }\n\n  /**\n   * Merge this point with a Point3D to create a new point.\n   *\n   * @param {Point3D} rhs The Point3D to merge with.\n   * @returns {Point} The merge result.\n   */\n  mergeWith3D(rhs) {\n    const values = this.getValues();\n    values[0] = rhs.getX();\n    values[1] = rhs.getY();\n    values[2] = rhs.getZ();\n    return new Point(values);\n  }\n\n} // Point class\n","/**\n * Namespace for translation function\n *   (in a namespace to allow for override from client).\n */\nexport const i18n = {\n\n  /**\n   * Get the translated text.\n   *\n   * @param {string} key The key to the text entry.\n   * @returns {string|undefined} The translated text.\n   */\n  t(key) {\n    let res = key;\n    const props = key.split('.');\n    // defaut units look like 'unit.cm2'\n    if (props.length === 2 &&\n      props[0] === 'unit') {\n      const units = {\n        mm: 'mm',\n        cm2: 'cm²',\n        degree: '°'\n      };\n      res = units[props[1]];\n    }\n    return res;\n  }\n\n};\n","\nimport {i18n} from './i18n';\n\n/**\n * Capitalise the first letter of a string.\n *\n * @param {string} string The string to capitalise the first letter.\n * @returns {string} The new string.\n */\nexport function capitaliseFirstLetter(string) {\n  let res = string;\n  if (string) {\n    res = string.charAt(0).toUpperCase() + string.slice(1);\n  }\n  return res;\n}\n\n/**\n * Check if a string starts with the input element.\n *\n * @param {string} str The input string.\n * @param {string} search The searched start.\n * @param {number} [rawPos] The position in this string at which to begin\n *  searching for searchString. Defaults to 0.\n * @returns {boolean} True if the input string starts with the searched string.\n */\nexport function startsWith(str, search, rawPos) {\n  if (typeof str === 'undefined' || str === null ||\n    typeof search === 'undefined' || search === null) {\n    return false;\n  }\n  const pos = rawPos > 0 ? rawPos | 0 : 0;\n  return str.substring(pos, pos + search.length) === search;\n}\n\n/**\n * Check if a string ends with the input element.\n *\n * @param {string} str The input string.\n * @param {string} search The searched ending.\n * @returns {boolean} True if the input string ends with the searched string.\n */\nexport function endsWith(str, search) {\n  if (typeof str === 'undefined' || str === null ||\n    typeof search === 'undefined' || search === null) {\n    return false;\n  }\n  return str.substring(str.length - search.length) === search;\n}\n\n/**\n * Split key/value string: `key0=val00&key0=val01&key1=val10\n *   will return `{key0 : [val00, val01], key1 : val1}`.\n *\n * @param {string} inputStr The string to split.\n * @returns {object} The split string.\n */\nexport function splitKeyValueString(inputStr) {\n  // result\n  const result = {};\n  // check input string\n  if (inputStr) {\n    // split key/value pairs\n    const pairs = inputStr.split('&');\n    for (let i = 0; i < pairs.length; ++i) {\n      const pair = pairs[i].split('=');\n      // if the key does not exist, create it\n      if (!result[pair[0]]) {\n        result[pair[0]] = pair[1];\n      } else {\n        // make it an array\n        if (!(result[pair[0]] instanceof Array)) {\n          result[pair[0]] = [result[pair[0]]];\n        }\n        result[pair[0]].push(pair[1]);\n      }\n    }\n  }\n  return result;\n}\n\n/**\n * Get flags from an input string. Flags are words surrounded with curly\n * braces.\n *\n * @param {string} inputStr The input string.\n * @returns {string[]} An array of found flags.\n */\nexport function getFlags(inputStr) {\n  const flags = [];\n  // check input string\n  if (inputStr === null || typeof inputStr === 'undefined') {\n    return flags;\n  }\n\n  // word surrounded by curly braces\n  const regex = /{(\\w+)}/g;\n\n  let match = regex.exec(inputStr);\n  while (match) {\n    flags.push(match[1]); // first matching group\n    match = regex.exec(inputStr);\n  }\n  return flags;\n}\n\n/**\n * Replace flags in a input string. Flags are keywords surrounded with curly\n * braces.\n *\n * @param {string} inputStr The input string.\n * @param {object} values A object of {value, unit}.\n * @returns {string} The result string.\n */\nexport function replaceFlags(inputStr, values) {\n  let res = '';\n  // check input string\n  if (inputStr === null || typeof inputStr === 'undefined') {\n    return res;\n  }\n  res = inputStr;\n  // check values\n  if (values === null || typeof values === 'undefined') {\n    return res;\n  }\n\n  // loop through flags\n  const keys = getFlags(inputStr);\n  for (let i = 0; i < keys.length; ++i) {\n    const valueObj = values[keys[i]];\n    if (valueObj !== null && typeof valueObj !== 'undefined' &&\n      valueObj.value !== null && typeof valueObj.value !== 'undefined') {\n      // value string\n      let valueStr = valueObj.value.toPrecision(4);\n      // add unit if available\n      // space or no space? Yes apart from degree...\n      // check: https://en.wikipedia.org/wiki/Space_(punctuation)#Spaces_and_unit_symbols\n      if (valueObj.unit !== null &&\n        typeof valueObj.unit !== 'undefined' &&\n        valueObj.unit.length !== 0) {\n        if (valueObj.unit !== 'unit.degree') {\n          valueStr += ' ';\n        }\n        valueStr += i18n.t(valueObj.unit);\n      }\n      // flag to replace\n      const flag = '{' + keys[i] + '}';\n      // replace\n      res = res.replace(flag, valueStr);\n    }\n  }\n  // return\n  return res;\n}\n\n/**\n * Get the root of an input path.\n * Splits using `/` as separator.\n *\n * @param {string} path The input path.\n * @returns {string} The input path without its last part.\n */\nexport function getRootPath(path) {\n  return path.split('/').slice(0, -1).join('/');\n}\n\n/**\n * Get a file extension: anything after the last dot.\n * File name starting with a dot are discarded.\n * Extensions are expected to contain at least one letter.\n *\n * @param {string} filePath The file path containing the file name.\n * @returns {string} The lower case file extension or null for none.\n */\nexport function getFileExtension(filePath) {\n  let ext = null;\n  if (typeof filePath !== 'undefined' &&\n    filePath !== null &&\n    filePath[0] !== '.') {\n    const pathSplit = filePath.toLowerCase().split('.');\n    if (pathSplit.length !== 1) {\n      ext = pathSplit.pop();\n      // extension should contain at least one letter and no slash\n      const regExp = /[a-z]/;\n      if (!regExp.test(ext) || ext.includes('/')) {\n        ext = null;\n      }\n    }\n  }\n  return ext;\n}\n\n/**\n * Convert a string to a Uint8Array.\n *\n * @param {string} str The string to convert.\n * @returns {Uint8Array} The Uint8Array.\n */\nexport function stringToUint8Array(str) {\n  const arr = new Uint8Array(str.length);\n  for (let i = 0, leni = str.length; i < leni; i++) {\n    arr[i] = str.charCodeAt(i);\n  }\n  return arr;\n}\n\n/**\n * Round a float number to a given precision.\n *\n * Inspired from {@link https://stackoverflow.com/a/49729715/3639892}.\n *\n * Can be a solution to not have trailing zero as when\n *   using toFixed or toPrecision.\n * '+number.toFixed(precision)' does not pass all the tests...\n *\n * @param {number} number The number to round.\n * @param {number} precision The rounding precision.\n * @returns {number} The rounded number.\n */\nexport function precisionRound(number, precision) {\n  const factor = Math.pow(10, precision);\n  const delta = 0.01 / factor; // fixes precisionRound(1.005, 2)\n  return Math.round(number * factor + delta) / factor;\n}\n","import {stringToUint8Array} from './string';\n\n/**\n * Get a string id from array values in the form of: '#0-1_#1-2'.\n *\n * @param {Array} arr The input array.\n * @param {number[]} [dims] Optional list of dimensions to use.\n * @returns {string} The string id.\n */\nexport function toStringId(arr, dims) {\n  // use all dims if not as input\n  if (typeof dims === 'undefined') {\n    dims = [];\n    for (let i = 0; i < arr.length; ++i) {\n      dims.push(i);\n    }\n  }\n  // check dims\n  for (let i = 0; i < dims.length; ++i) {\n    if (dims[i] >= arr.length) {\n      throw new Error('Non valid dimension for toStringId');\n    }\n  }\n  // build string\n  let res = '';\n  for (let i = 0; i < dims.length; ++i) {\n    if (i !== 0) {\n      res += '_';\n    }\n    res += '#' + dims[i] + '-' + arr[dims[i]];\n  }\n  return res;\n}\n\n/**\n * Get an array from an id string in the form of: '#0-1_#1-2'\n * (result of toStringId).\n *\n * @param {string} inputStr The input string.\n * @returns {Array} The corresponding array (minimum size is 3D).\n */\nexport function getArrayFromStringId(inputStr) {\n  // split ids\n  const strIds = inputStr.split('_');\n  // get the size of the index (minimum 3)\n  let numberOfDims = 3;\n  let dim;\n  for (let i = 0; i < strIds.length; ++i) {\n    // expecting dim < 10\n    dim = parseInt(strIds[i].substring(1, 2), 10);\n    // dim is zero based\n    if (dim + 1 > numberOfDims) {\n      numberOfDims = dim + 1;\n    }\n  }\n  // default values\n  const values = new Array(numberOfDims);\n  values.fill(0);\n  // get other values from the input string\n  for (let j = 0; j < strIds.length; ++j) {\n    // expecting dim < 10\n    dim = parseInt(strIds[j].substring(1, 2), 10);\n    const value = parseInt(strIds[j].substring(3), 10);\n    values[dim] = value;\n  }\n\n  return values;\n}\n\n/**\n * Check if the first input array contains all the\n * elements of the second input array.\n *\n * @param {string[]} arr0 The test array.\n * @param {string[]} arr1 The elements to check in the first array.\n * @returns {boolean} True if all the elements of arr1 are included in arr0.\n */\nexport function arrayContains(arr0, arr1) {\n  // check input\n  if (arr0 === null ||\n    arr1 === null ||\n    typeof arr0 === 'undefined' ||\n    typeof arr1 === 'undefined') {\n    return false;\n  }\n  if (arr0.length === 0 ||\n    arr1.length === 0 ||\n    arr1.length > arr0.length) {\n    return false;\n  }\n  // check values\n  for (const itemArr1 of arr1) {\n    if (!arr0.includes(itemArr1)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Check for array equality after sorting.\n *\n * @param {Array} arr0 First array.\n * @param {Array} arr1 Second array.\n * @returns {boolean} True if both array are defined and contain same values.\n */\nexport function arraySortEquals(arr0, arr1) {\n  if (arr0 === null ||\n    arr1 === null ||\n    typeof arr0 === 'undefined' ||\n    typeof arr1 === 'undefined') {\n    return false;\n  }\n  const arr0sorted = arr0.slice().sort();\n  const arr1sorted = arr1.slice().sort();\n  return arrayEquals(arr0sorted, arr1sorted);\n}\n\n/**\n * Check for array equality.\n *\n * @param {Array} arr0 First array.\n * @param {Array} arr1 Second array.\n * @returns {boolean} True if both array are defined and contain same values.\n */\nexport function arrayEquals(arr0, arr1) {\n  if (arr0 === null ||\n    arr1 === null ||\n    typeof arr0 === 'undefined' ||\n    typeof arr1 === 'undefined') {\n    return false;\n  }\n  if (arr0.length !== arr1.length) {\n    return false;\n  }\n  return arr0.every(function (element, index) {\n    return element === arr1[index];\n  });\n}\n\n/**\n * Convert a Uint8Array to a string.\n *\n * @param {Uint8Array} arr The array to convert.\n * @returns {string} The array as string.\n */\nexport function uint8ArrayToString(arr) {\n  return String.fromCharCode.apply(String, arr);\n}\n\n/**\n * Array find in a subset of the input array.\n * Equivalent to: `arr.slice(start, end).find(callbackFn)`.\n *\n * @param {Uint8Array} arr The input array to search.\n * @param {Function} callbackFn The find function.\n * @param {number|undefined} start The array start index.\n * @param {number|undefined} [end] The array end index.\n * @returns {number|undefined} The index where the element was found.\n */\nexport function findInArraySubset(arr, callbackFn, start, end) {\n  // check inputs\n  if (typeof start === 'undefined' ||\n    start < 0 ||\n    start >= arr.length\n  ) {\n    start = 0;\n  }\n  if (typeof end === 'undefined' ||\n    end <= start ||\n    end > arr.length) {\n    end = arr.length;\n  }\n  // run\n  for (let i = start; i < end; ++i) {\n    if (callbackFn(arr[i], i, arr)) {\n      return i;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Get a find in array callback.\n *\n * @param {Uint8Array} arr1 The array to find.\n * @returns {Function} The find callback function.\n */\nexport function getFindArrayInArrayCallback(arr1) {\n  return function (element, index, arr0) {\n    for (let i = 0; i < arr1.length; ++i) {\n      if (arr0[index + i] !== arr1[i]) {\n        return false;\n      }\n    }\n    return true;\n  };\n}\n\n/**\n * Extract each element of a multipart ArrayBuffer.\n *\n * Ref: {@link https://en.wikipedia.org/wiki/MIME#Multipart_messages}.\n *\n * @param {ArrayBuffer} arr The multipart array.\n * @returns {Array} The multipart parts as an array of object as\n *   {'Content-Type', ..., data} (depending on header tags).\n */\nexport function parseMultipart(arr) {\n  const u8Array = new Uint8Array(arr);\n\n  const parts = [];\n  // check input\n  if (u8Array.length === 0) {\n    return parts;\n  }\n\n  // \\r\\n\\r\\n\n  const doubleReturnNew = new Uint8Array([0x0d, 0x0a, 0x0d, 0x0a]);\n  const partHeaderEndCb = getFindArrayInArrayCallback(doubleReturnNew);\n\n  // look for boundary in first part header\n  let partHeaderEndIndex = findInArraySubset(\n    u8Array, partHeaderEndCb, 0\n  );\n  if (typeof partHeaderEndIndex === 'undefined') {\n    throw new Error('Can\\'t find the end of the first multipart header');\n  }\n  const firstPartHeader = u8Array.slice(0, partHeaderEndIndex);\n  // switch to string to use split\n  const lines = uint8ArrayToString(firstPartHeader).split('\\r\\n');\n  // boundary should start with '--'\n  let boundaryStr;\n  for (let i = 0; i < lines.length; ++i) {\n    if (lines[i][0] === '-' && lines[i][1] === '-') {\n      boundaryStr = lines[i];\n      break;\n    }\n  }\n  if (typeof boundaryStr === 'undefined') {\n    throw new Error('Can\\'t find the boundary between multi-parts');\n  }\n  const boundary = stringToUint8Array(boundaryStr);\n  const boundaryCb = getFindArrayInArrayCallback(boundary);\n  const boundaryLen = boundaryStr.length;\n\n  // skip mime header\n  let nextBoundaryIndex = findInArraySubset(\n    u8Array, boundaryCb, 0\n  );\n\n  // loop through content\n  while (typeof partHeaderEndIndex !== 'undefined') {\n    const part = {};\n\n    // header\n    const partHeader = u8Array.slice(\n      nextBoundaryIndex + boundaryLen, partHeaderEndIndex);\n    // split into object\n    const partHeaderLines =\n      uint8ArrayToString(partHeader).split('\\r\\n');\n    for (let l = 0; l < partHeaderLines.length; ++l) {\n      const line = partHeaderLines[l];\n      const semiColonIndex = line.indexOf(':');\n      if (semiColonIndex !== -1) {\n        const key = line.substring(0, semiColonIndex).trim();\n        const val = line.substring(semiColonIndex + 1).trim();\n        part[key] = val;\n      }\n    }\n\n    // find next boundary\n    nextBoundaryIndex = findInArraySubset(\n      u8Array, boundaryCb, partHeaderEndIndex\n    );\n    // exit if none\n    if (typeof nextBoundaryIndex === 'undefined') {\n      break;\n    }\n\n    // get part\n    // partHeaderEndIndex plus the size of the '\\r\\n\\r\\n' separator\n    const dataBeginIndex = partHeaderEndIndex + 4;\n    // nextBoundaryIndex minus the previous '\\r\\n'\n    const dataEndIndex = nextBoundaryIndex - 2;\n    if (dataBeginIndex < dataEndIndex) {\n      part.data = u8Array.slice(dataBeginIndex, dataEndIndex).buffer;\n    } else {\n      part.data = new Uint8Array();\n    }\n\n    // store part\n    parts.push(part);\n\n    // find next part header end\n    partHeaderEndIndex = findInArraySubset(\n      u8Array, partHeaderEndCb,\n      nextBoundaryIndex + boundaryLen\n    );\n  }\n\n  return parts;\n}\n\n/**\n * Build a multipart message.\n *\n * Ref:\n * - {@link https://en.wikipedia.org/wiki/MIME#Multipart_messages},\n * - {@link https://hg.orthanc-server.com/orthanc-dicomweb/file/tip/Resources/Samples/JavaScript/stow-rs.js}.\n *\n * @param {Array} parts The message parts as an array of object containing\n *   content headers and messages as the data property (as returned by parse).\n * @param {string} boundary The message boundary.\n * @returns {Uint8Array} The full multipart message.\n */\nexport function buildMultipart(parts, boundary) {\n  const lineBreak = '\\r\\n';\n  // build headers and calculate size\n  let partsSize = 0;\n  const headers = [];\n  for (let i = 0; i < parts.length; ++i) {\n    let headerStr = '';\n    if (i !== 0) {\n      headerStr += lineBreak;\n    }\n    headerStr += '--' + boundary + lineBreak;\n    const partKeys = Object.keys(parts[i]);\n    for (let k = 0; k < partKeys.length; ++k) {\n      const key = partKeys[k];\n      if (key !== 'data') {\n        headerStr += key + ': ' + parts[i][key] + lineBreak;\n      }\n    }\n    headerStr += lineBreak;\n    const header = stringToUint8Array(headerStr);\n    headers.push(header);\n    partsSize += header.byteLength + parts[i].data.byteLength;\n  }\n  // build trailer\n  const trailerStr = lineBreak + '--' + boundary + '--' + lineBreak;\n  const trailer = stringToUint8Array(trailerStr);\n\n  // final buffer\n  const buffer = new Uint8Array(partsSize + trailer.byteLength);\n  let offset = 0;\n  // concatenate parts\n  for (let j = 0; j < parts.length; ++j) {\n    buffer.set(headers[j], offset);\n    offset += headers[j].byteLength;\n    buffer.set(new Uint8Array(parts[j].data), offset);\n    offset += parts[j].data.byteLength;\n  }\n  // end buffer with trailer\n  buffer.set(trailer, offset);\n\n  // return\n  return buffer;\n}\n","/* eslint-disable @stylistic/js/quote-props */\n/* eslint @stylistic/js/max-len:0 */\n\n/**\n * DICOM tag dictionary 2022a.\n * Generated using xml standard conversion from {@link https://github.com/ivmartel/dcmStdToJs} v0.1.0.\n *\n * Conversion changes:\n * - (vr) 'See Note' -> 'NONE',\n * - (vr) 'OB or OW' -> 'ox',\n * - (vr) 'US or SS' -> 'xs',\n * - (vr) 'US or OW' -> 'xx',\n * - (vr) 'US or SS or OW' -> 'xs',\n * - added 'GenericGroupLength' element to each group.\n *\n * Local changes:\n * - tag numbers with 'xx' were replaced with '00', 'xxx' with '001' and\n *  'xxxx' with '0004'.\n *\n * @type {Object<string, Object<string, string[]>>}\n */\nexport const dictionary = {\n  '0000': {\n    '0000': ['UL', '1', 'CommandGroupLength'],\n    '0001': ['UL', '1', 'CommandLengthToEnd'],\n    '0002': ['UI', '1', 'AffectedSOPClassUID'],\n    '0003': ['UI', '1', 'RequestedSOPClassUID'],\n    '0010': ['SH', '1', 'CommandRecognitionCode'],\n    '0100': ['US', '1', 'CommandField'],\n    '0110': ['US', '1', 'MessageID'],\n    '0120': ['US', '1', 'MessageIDBeingRespondedTo'],\n    '0200': ['AE', '1', 'Initiator'],\n    '0300': ['AE', '1', 'Receiver'],\n    '0400': ['AE', '1', 'FindLocation'],\n    '0600': ['AE', '1', 'MoveDestination'],\n    '0700': ['US', '1', 'Priority'],\n    '0800': ['US', '1', 'CommandDataSetType'],\n    '0850': ['US', '1', 'NumberOfMatches'],\n    '0860': ['US', '1', 'ResponseSequenceNumber'],\n    '0900': ['US', '1', 'Status'],\n    '0901': ['AT', '1-n', 'OffendingElement'],\n    '0902': ['LO', '1', 'ErrorComment'],\n    '0903': ['US', '1', 'ErrorID'],\n    '1000': ['UI', '1', 'AffectedSOPInstanceUID'],\n    '1001': ['UI', '1', 'RequestedSOPInstanceUID'],\n    '1002': ['US', '1', 'EventTypeID'],\n    '1005': ['AT', '1-n', 'AttributeIdentifierList'],\n    '1008': ['US', '1', 'ActionTypeID'],\n    '1020': ['US', '1', 'NumberOfRemainingSuboperations'],\n    '1021': ['US', '1', 'NumberOfCompletedSuboperations'],\n    '1022': ['US', '1', 'NumberOfFailedSuboperations'],\n    '1023': ['US', '1', 'NumberOfWarningSuboperations'],\n    '1030': ['AE', '1', 'MoveOriginatorApplicationEntityTitle'],\n    '1031': ['US', '1', 'MoveOriginatorMessageID'],\n    '4000': ['LT', '1', 'DialogReceiver'],\n    '4010': ['LT', '1', 'TerminalType'],\n    '5010': ['SH', '1', 'MessageSetID'],\n    '5020': ['SH', '1', 'EndMessageID'],\n    '5110': ['LT', '1', 'DisplayFormat'],\n    '5120': ['LT', '1', 'PagePositionID'],\n    '5130': ['CS', '1', 'TextFormatID'],\n    '5140': ['CS', '1', 'NormalReverse'],\n    '5150': ['CS', '1', 'AddGrayScale'],\n    '5160': ['CS', '1', 'Borders'],\n    '5170': ['IS', '1', 'Copies'],\n    '5180': ['CS', '1', 'CommandMagnificationType'],\n    '5190': ['CS', '1', 'Erase'],\n    '51A0': ['CS', '1', 'Print'],\n    '51B0': ['US', '1-n', 'Overlays']\n  },\n  '0002': {\n    '0000': ['UL', '1', 'FileMetaInformationGroupLength'],\n    '0001': ['OB', '1', 'FileMetaInformationVersion'],\n    '0002': ['UI', '1', 'MediaStorageSOPClassUID'],\n    '0003': ['UI', '1', 'MediaStorageSOPInstanceUID'],\n    '0010': ['UI', '1', 'TransferSyntaxUID'],\n    '0012': ['UI', '1', 'ImplementationClassUID'],\n    '0013': ['SH', '1', 'ImplementationVersionName'],\n    '0016': ['AE', '1', 'SourceApplicationEntityTitle'],\n    '0017': ['AE', '1', 'SendingApplicationEntityTitle'],\n    '0018': ['AE', '1', 'ReceivingApplicationEntityTitle'],\n    '0026': ['UR', '1', 'SourcePresentationAddress'],\n    '0027': ['UR', '1', 'SendingPresentationAddress'],\n    '0028': ['UR', '1', 'ReceivingPresentationAddress'],\n    '0031': ['OB', '1', 'RTVMetaInformationVersion'],\n    '0032': ['UI', '1', 'RTVCommunicationSOPClassUID'],\n    '0033': ['UI', '1', 'RTVCommunicationSOPInstanceUID'],\n    '0035': ['OB', '1', 'RTVSourceIdentifier'],\n    '0036': ['OB', '1', 'RTVFlowIdentifier'],\n    '0037': ['UL', '1', 'RTVFlowRTPSamplingRate'],\n    '0038': ['FD', '1', 'RTVFlowActualFrameDuration'],\n    '0100': ['UI', '1', 'PrivateInformationCreatorUID'],\n    '0102': ['OB', '1', 'PrivateInformation']\n  },\n  '0004': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '1130': ['CS', '1', 'FileSetID'],\n    '1141': ['CS', '1-8', 'FileSetDescriptorFileID'],\n    '1142': ['CS', '1', 'SpecificCharacterSetOfFileSetDescriptorFile'],\n    '1200': ['UL', '1', 'OffsetOfTheFirstDirectoryRecordOfTheRootDirectoryEntity'],\n    '1202': ['UL', '1', 'OffsetOfTheLastDirectoryRecordOfTheRootDirectoryEntity'],\n    '1212': ['US', '1', 'FileSetConsistencyFlag'],\n    '1220': ['SQ', '1', 'DirectoryRecordSequence'],\n    '1400': ['UL', '1', 'OffsetOfTheNextDirectoryRecord'],\n    '1410': ['US', '1', 'RecordInUseFlag'],\n    '1420': ['UL', '1', 'OffsetOfReferencedLowerLevelDirectoryEntity'],\n    '1430': ['CS', '1', 'DirectoryRecordType'],\n    '1432': ['UI', '1', 'PrivateRecordUID'],\n    '1500': ['CS', '1-8', 'ReferencedFileID'],\n    '1504': ['UL', '1', 'MRDRDirectoryRecordOffset'],\n    '1510': ['UI', '1', 'ReferencedSOPClassUIDInFile'],\n    '1511': ['UI', '1', 'ReferencedSOPInstanceUIDInFile'],\n    '1512': ['UI', '1', 'ReferencedTransferSyntaxUIDInFile'],\n    '151A': ['UI', '1-n', 'ReferencedRelatedGeneralSOPClassUIDInFile'],\n    '1600': ['UL', '1', 'NumberOfReferences']\n  },\n  '0008': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['UL', '1', 'LengthToEnd'],\n    '0005': ['CS', '1-n', 'SpecificCharacterSet'],\n    '0006': ['SQ', '1', 'LanguageCodeSequence'],\n    '0008': ['CS', '2-n', 'ImageType'],\n    '0010': ['SH', '1', 'RecognitionCode'],\n    '0012': ['DA', '1', 'InstanceCreationDate'],\n    '0013': ['TM', '1', 'InstanceCreationTime'],\n    '0014': ['UI', '1', 'InstanceCreatorUID'],\n    '0015': ['DT', '1', 'InstanceCoercionDateTime'],\n    '0016': ['UI', '1', 'SOPClassUID'],\n    '0018': ['UI', '1', 'SOPInstanceUID'],\n    '001A': ['UI', '1-n', 'RelatedGeneralSOPClassUID'],\n    '001B': ['UI', '1', 'OriginalSpecializedSOPClassUID'],\n    '0020': ['DA', '1', 'StudyDate'],\n    '0021': ['DA', '1', 'SeriesDate'],\n    '0022': ['DA', '1', 'AcquisitionDate'],\n    '0023': ['DA', '1', 'ContentDate'],\n    '0024': ['DA', '1', 'OverlayDate'],\n    '0025': ['DA', '1', 'CurveDate'],\n    '002A': ['DT', '1', 'AcquisitionDateTime'],\n    '0030': ['TM', '1', 'StudyTime'],\n    '0031': ['TM', '1', 'SeriesTime'],\n    '0032': ['TM', '1', 'AcquisitionTime'],\n    '0033': ['TM', '1', 'ContentTime'],\n    '0034': ['TM', '1', 'OverlayTime'],\n    '0035': ['TM', '1', 'CurveTime'],\n    '0040': ['US', '1', 'DataSetType'],\n    '0041': ['LO', '1', 'DataSetSubtype'],\n    '0042': ['CS', '1', 'NuclearMedicineSeriesType'],\n    '0050': ['SH', '1', 'AccessionNumber'],\n    '0051': ['SQ', '1', 'IssuerOfAccessionNumberSequence'],\n    '0052': ['CS', '1', 'QueryRetrieveLevel'],\n    '0053': ['CS', '1', 'QueryRetrieveView'],\n    '0054': ['AE', '1-n', 'RetrieveAETitle'],\n    '0055': ['AE', '1', 'StationAETitle'],\n    '0056': ['CS', '1', 'InstanceAvailability'],\n    '0058': ['UI', '1-n', 'FailedSOPInstanceUIDList'],\n    '0060': ['CS', '1', 'Modality'],\n    '0061': ['CS', '1-n', 'ModalitiesInStudy'],\n    '0062': ['UI', '1-n', 'SOPClassesInStudy'],\n    '0063': ['SQ', '1', 'AnatomicRegionsInStudyCodeSequence'],\n    '0064': ['CS', '1', 'ConversionType'],\n    '0068': ['CS', '1', 'PresentationIntentType'],\n    '0070': ['LO', '1', 'Manufacturer'],\n    '0080': ['LO', '1', 'InstitutionName'],\n    '0081': ['ST', '1', 'InstitutionAddress'],\n    '0082': ['SQ', '1', 'InstitutionCodeSequence'],\n    '0090': ['PN', '1', 'ReferringPhysicianName'],\n    '0092': ['ST', '1', 'ReferringPhysicianAddress'],\n    '0094': ['SH', '1-n', 'ReferringPhysicianTelephoneNumbers'],\n    '0096': ['SQ', '1', 'ReferringPhysicianIdentificationSequence'],\n    '009C': ['PN', '1-n', 'ConsultingPhysicianName'],\n    '009D': ['SQ', '1', 'ConsultingPhysicianIdentificationSequence'],\n    '0100': ['SH', '1', 'CodeValue'],\n    '0101': ['LO', '1', 'ExtendedCodeValue'],\n    '0102': ['SH', '1', 'CodingSchemeDesignator'],\n    '0103': ['SH', '1', 'CodingSchemeVersion'],\n    '0104': ['LO', '1', 'CodeMeaning'],\n    '0105': ['CS', '1', 'MappingResource'],\n    '0106': ['DT', '1', 'ContextGroupVersion'],\n    '0107': ['DT', '1', 'ContextGroupLocalVersion'],\n    '0108': ['LT', '1', 'ExtendedCodeMeaning'],\n    '0109': ['SQ', '1', 'CodingSchemeResourcesSequence'],\n    '010A': ['CS', '1', 'CodingSchemeURLType'],\n    '010B': ['CS', '1', 'ContextGroupExtensionFlag'],\n    '010C': ['UI', '1', 'CodingSchemeUID'],\n    '010D': ['UI', '1', 'ContextGroupExtensionCreatorUID'],\n    '010E': ['UR', '1', 'CodingSchemeURL'],\n    '010F': ['CS', '1', 'ContextIdentifier'],\n    '0110': ['SQ', '1', 'CodingSchemeIdentificationSequence'],\n    '0112': ['LO', '1', 'CodingSchemeRegistry'],\n    '0114': ['ST', '1', 'CodingSchemeExternalID'],\n    '0115': ['ST', '1', 'CodingSchemeName'],\n    '0116': ['ST', '1', 'CodingSchemeResponsibleOrganization'],\n    '0117': ['UI', '1', 'ContextUID'],\n    '0118': ['UI', '1', 'MappingResourceUID'],\n    '0119': ['UC', '1', 'LongCodeValue'],\n    '0120': ['UR', '1', 'URNCodeValue'],\n    '0121': ['SQ', '1', 'EquivalentCodeSequence'],\n    '0122': ['LO', '1', 'MappingResourceName'],\n    '0123': ['SQ', '1', 'ContextGroupIdentificationSequence'],\n    '0124': ['SQ', '1', 'MappingResourceIdentificationSequence'],\n    '0201': ['SH', '1', 'TimezoneOffsetFromUTC'],\n    '0202': ['', '', ''],\n    '0220': ['SQ', '1', 'ResponsibleGroupCodeSequence'],\n    '0221': ['CS', '1', 'EquipmentModality'],\n    '0222': ['LO', '1', 'ManufacturerRelatedModelGroup'],\n    '0300': ['SQ', '1', 'PrivateDataElementCharacteristicsSequence'],\n    '0301': ['US', '1', 'PrivateGroupReference'],\n    '0302': ['LO', '1', 'PrivateCreatorReference'],\n    '0303': ['CS', '1', 'BlockIdentifyingInformationStatus'],\n    '0304': ['US', '1-n', 'NonidentifyingPrivateElements'],\n    '0305': ['SQ', '1', 'DeidentificationActionSequence'],\n    '0306': ['US', '1-n', 'IdentifyingPrivateElements'],\n    '0307': ['CS', '1', 'DeidentificationAction'],\n    '0308': ['US', '1', 'PrivateDataElement'],\n    '0309': ['UL', '1-3', 'PrivateDataElementValueMultiplicity'],\n    '030A': ['CS', '1', 'PrivateDataElementValueRepresentation'],\n    '030B': ['UL', '1-2', 'PrivateDataElementNumberOfItems'],\n    '030C': ['UC', '1', 'PrivateDataElementName'],\n    '030D': ['UC', '1', 'PrivateDataElementKeyword'],\n    '030E': ['UT', '1', 'PrivateDataElementDescription'],\n    '030F': ['UT', '1', 'PrivateDataElementEncoding'],\n    '0310': ['SQ', '1', 'PrivateDataElementDefinitionSequence'],\n    '1000': ['AE', '1', 'NetworkID'],\n    '1010': ['SH', '1', 'StationName'],\n    '1030': ['LO', '1', 'StudyDescription'],\n    '1032': ['SQ', '1', 'ProcedureCodeSequence'],\n    '103E': ['LO', '1', 'SeriesDescription'],\n    '103F': ['SQ', '1', 'SeriesDescriptionCodeSequence'],\n    '1040': ['LO', '1', 'InstitutionalDepartmentName'],\n    '1041': ['SQ', '1', 'InstitutionalDepartmentTypeCodeSequence'],\n    '1048': ['PN', '1-n', 'PhysiciansOfRecord'],\n    '1049': ['SQ', '1', 'PhysiciansOfRecordIdentificationSequence'],\n    '1050': ['PN', '1-n', 'PerformingPhysicianName'],\n    '1052': ['SQ', '1', 'PerformingPhysicianIdentificationSequence'],\n    '1060': ['PN', '1-n', 'NameOfPhysiciansReadingStudy'],\n    '1062': ['SQ', '1', 'PhysiciansReadingStudyIdentificationSequence'],\n    '1070': ['PN', '1-n', 'OperatorsName'],\n    '1072': ['SQ', '1', 'OperatorIdentificationSequence'],\n    '1080': ['LO', '1-n', 'AdmittingDiagnosesDescription'],\n    '1084': ['SQ', '1', 'AdmittingDiagnosesCodeSequence'],\n    '1090': ['LO', '1', 'ManufacturerModelName'],\n    '1100': ['SQ', '1', 'ReferencedResultsSequence'],\n    '1110': ['SQ', '1', 'ReferencedStudySequence'],\n    '1111': ['SQ', '1', 'ReferencedPerformedProcedureStepSequence'],\n    '1115': ['SQ', '1', 'ReferencedSeriesSequence'],\n    '1120': ['SQ', '1', 'ReferencedPatientSequence'],\n    '1125': ['SQ', '1', 'ReferencedVisitSequence'],\n    '1130': ['SQ', '1', 'ReferencedOverlaySequence'],\n    '1134': ['SQ', '1', 'ReferencedStereometricInstanceSequence'],\n    '113A': ['SQ', '1', 'ReferencedWaveformSequence'],\n    '1140': ['SQ', '1', 'ReferencedImageSequence'],\n    '1145': ['SQ', '1', 'ReferencedCurveSequence'],\n    '114A': ['SQ', '1', 'ReferencedInstanceSequence'],\n    '114B': ['SQ', '1', 'ReferencedRealWorldValueMappingInstanceSequence'],\n    '1150': ['UI', '1', 'ReferencedSOPClassUID'],\n    '1155': ['UI', '1', 'ReferencedSOPInstanceUID'],\n    '1156': ['SQ', '1', 'DefinitionSourceSequence'],\n    '115A': ['UI', '1-n', 'SOPClassesSupported'],\n    '1160': ['IS', '1-n', 'ReferencedFrameNumber'],\n    '1161': ['UL', '1-n', 'SimpleFrameList'],\n    '1162': ['UL', '3-3n', 'CalculatedFrameList'],\n    '1163': ['FD', '2', 'TimeRange'],\n    '1164': ['SQ', '1', 'FrameExtractionSequence'],\n    '1167': ['UI', '1', 'MultiFrameSourceSOPInstanceUID'],\n    '1190': ['UR', '1', 'RetrieveURL'],\n    '1195': ['UI', '1', 'TransactionUID'],\n    '1196': ['US', '1', 'WarningReason'],\n    '1197': ['US', '1', 'FailureReason'],\n    '1198': ['SQ', '1', 'FailedSOPSequence'],\n    '1199': ['SQ', '1', 'ReferencedSOPSequence'],\n    '119A': ['SQ', '1', 'OtherFailuresSequence'],\n    '1200': ['SQ', '1', 'StudiesContainingOtherReferencedInstancesSequence'],\n    '1250': ['SQ', '1', 'RelatedSeriesSequence'],\n    '2110': ['CS', '1', 'LossyImageCompressionRetired'],\n    '2111': ['ST', '1', 'DerivationDescription'],\n    '2112': ['SQ', '1', 'SourceImageSequence'],\n    '2120': ['SH', '1', 'StageName'],\n    '2122': ['IS', '1', 'StageNumber'],\n    '2124': ['IS', '1', 'NumberOfStages'],\n    '2127': ['SH', '1', 'ViewName'],\n    '2128': ['IS', '1', 'ViewNumber'],\n    '2129': ['IS', '1', 'NumberOfEventTimers'],\n    '212A': ['IS', '1', 'NumberOfViewsInStage'],\n    '2130': ['DS', '1-n', 'EventElapsedTimes'],\n    '2132': ['LO', '1-n', 'EventTimerNames'],\n    '2133': ['SQ', '1', 'EventTimerSequence'],\n    '2134': ['FD', '1', 'EventTimeOffset'],\n    '2135': ['SQ', '1', 'EventCodeSequence'],\n    '2142': ['IS', '1', 'StartTrim'],\n    '2143': ['IS', '1', 'StopTrim'],\n    '2144': ['IS', '1', 'RecommendedDisplayFrameRate'],\n    '2200': ['CS', '1', 'TransducerPosition'],\n    '2204': ['CS', '1', 'TransducerOrientation'],\n    '2208': ['CS', '1', 'AnatomicStructure'],\n    '2218': ['SQ', '1', 'AnatomicRegionSequence'],\n    '2220': ['SQ', '1', 'AnatomicRegionModifierSequence'],\n    '2228': ['SQ', '1', 'PrimaryAnatomicStructureSequence'],\n    '2229': ['SQ', '1', 'AnatomicStructureSpaceOrRegionSequence'],\n    '2230': ['SQ', '1', 'PrimaryAnatomicStructureModifierSequence'],\n    '2240': ['SQ', '1', 'TransducerPositionSequence'],\n    '2242': ['SQ', '1', 'TransducerPositionModifierSequence'],\n    '2244': ['SQ', '1', 'TransducerOrientationSequence'],\n    '2246': ['SQ', '1', 'TransducerOrientationModifierSequence'],\n    '2251': ['SQ', '1', 'AnatomicStructureSpaceOrRegionCodeSequenceTrial'],\n    '2253': ['SQ', '1', 'AnatomicPortalOfEntranceCodeSequenceTrial'],\n    '2255': ['SQ', '1', 'AnatomicApproachDirectionCodeSequenceTrial'],\n    '2256': ['ST', '1', 'AnatomicPerspectiveDescriptionTrial'],\n    '2257': ['SQ', '1', 'AnatomicPerspectiveCodeSequenceTrial'],\n    '2258': ['ST', '1', 'AnatomicLocationOfExaminingInstrumentDescriptionTrial'],\n    '2259': ['SQ', '1', 'AnatomicLocationOfExaminingInstrumentCodeSequenceTrial'],\n    '225A': ['SQ', '1', 'AnatomicStructureSpaceOrRegionModifierCodeSequenceTrial'],\n    '225C': ['SQ', '1', 'OnAxisBackgroundAnatomicStructureCodeSequenceTrial'],\n    '3001': ['SQ', '1', 'AlternateRepresentationSequence'],\n    '3002': ['UI', '1-n', 'AvailableTransferSyntaxUID'],\n    '3010': ['UI', '1-n', 'IrradiationEventUID'],\n    '3011': ['SQ', '1', 'SourceIrradiationEventSequence'],\n    '3012': ['UI', '1', 'RadiopharmaceuticalAdministrationEventUID'],\n    '4000': ['LT', '1', 'IdentifyingComments'],\n    '9007': ['CS', '4', 'FrameType'],\n    '9092': ['SQ', '1', 'ReferencedImageEvidenceSequence'],\n    '9121': ['SQ', '1', 'ReferencedRawDataSequence'],\n    '9123': ['UI', '1', 'CreatorVersionUID'],\n    '9124': ['SQ', '1', 'DerivationImageSequence'],\n    '9154': ['SQ', '1', 'SourceImageEvidenceSequence'],\n    '9205': ['CS', '1', 'PixelPresentation'],\n    '9206': ['CS', '1', 'VolumetricProperties'],\n    '9207': ['CS', '1', 'VolumeBasedCalculationTechnique'],\n    '9208': ['CS', '1', 'ComplexImageComponent'],\n    '9209': ['CS', '1', 'AcquisitionContrast'],\n    '9215': ['SQ', '1', 'DerivationCodeSequence'],\n    '9237': ['SQ', '1', 'ReferencedPresentationStateSequence'],\n    '9410': ['SQ', '1', 'ReferencedOtherPlaneSequence'],\n    '9458': ['SQ', '1', 'FrameDisplaySequence'],\n    '9459': ['FL', '1', 'RecommendedDisplayFrameRateInFloat'],\n    '9460': ['CS', '1', 'SkipFrameRangeFlag']\n  },\n  '0010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['PN', '1', 'PatientName'],\n    '0020': ['LO', '1', 'PatientID'],\n    '0021': ['LO', '1', 'IssuerOfPatientID'],\n    '0022': ['CS', '1', 'TypeOfPatientID'],\n    '0024': ['SQ', '1', 'IssuerOfPatientIDQualifiersSequence'],\n    '0026': ['SQ', '1', 'SourcePatientGroupIdentificationSequence'],\n    '0027': ['SQ', '1', 'GroupOfPatientsIdentificationSequence'],\n    '0028': ['US', '3', 'SubjectRelativePositionInImage'],\n    '0030': ['DA', '1', 'PatientBirthDate'],\n    '0032': ['TM', '1', 'PatientBirthTime'],\n    '0033': ['LO', '1', 'PatientBirthDateInAlternativeCalendar'],\n    '0034': ['LO', '1', 'PatientDeathDateInAlternativeCalendar'],\n    '0035': ['CS', '1', 'PatientAlternativeCalendar'],\n    '0040': ['CS', '1', 'PatientSex'],\n    '0050': ['SQ', '1', 'PatientInsurancePlanCodeSequence'],\n    '0101': ['SQ', '1', 'PatientPrimaryLanguageCodeSequence'],\n    '0102': ['SQ', '1', 'PatientPrimaryLanguageModifierCodeSequence'],\n    '0200': ['CS', '1', 'QualityControlSubject'],\n    '0201': ['SQ', '1', 'QualityControlSubjectTypeCodeSequence'],\n    '0212': ['UC', '1', 'StrainDescription'],\n    '0213': ['LO', '1', 'StrainNomenclature'],\n    '0214': ['LO', '1', 'StrainStockNumber'],\n    '0215': ['SQ', '1', 'StrainSourceRegistryCodeSequence'],\n    '0216': ['SQ', '1', 'StrainStockSequence'],\n    '0217': ['LO', '1', 'StrainSource'],\n    '0218': ['UT', '1', 'StrainAdditionalInformation'],\n    '0219': ['SQ', '1', 'StrainCodeSequence'],\n    '0221': ['SQ', '1', 'GeneticModificationsSequence'],\n    '0222': ['UC', '1', 'GeneticModificationsDescription'],\n    '0223': ['LO', '1', 'GeneticModificationsNomenclature'],\n    '0229': ['SQ', '1', 'GeneticModificationsCodeSequence'],\n    '1000': ['LO', '1-n', 'OtherPatientIDs'],\n    '1001': ['PN', '1-n', 'OtherPatientNames'],\n    '1002': ['SQ', '1', 'OtherPatientIDsSequence'],\n    '1005': ['PN', '1', 'PatientBirthName'],\n    '1010': ['AS', '1', 'PatientAge'],\n    '1020': ['DS', '1', 'PatientSize'],\n    '1021': ['SQ', '1', 'PatientSizeCodeSequence'],\n    '1022': ['DS', '1', 'PatientBodyMassIndex'],\n    '1023': ['DS', '1', 'MeasuredAPDimension'],\n    '1024': ['DS', '1', 'MeasuredLateralDimension'],\n    '1030': ['DS', '1', 'PatientWeight'],\n    '1040': ['LO', '1', 'PatientAddress'],\n    '1050': ['LO', '1-n', 'InsurancePlanIdentification'],\n    '1060': ['PN', '1', 'PatientMotherBirthName'],\n    '1080': ['LO', '1', 'MilitaryRank'],\n    '1081': ['LO', '1', 'BranchOfService'],\n    '1090': ['LO', '1', 'MedicalRecordLocator'],\n    '1100': ['SQ', '1', 'ReferencedPatientPhotoSequence'],\n    '2000': ['LO', '1-n', 'MedicalAlerts'],\n    '2110': ['LO', '1-n', 'Allergies'],\n    '2150': ['LO', '1', 'CountryOfResidence'],\n    '2152': ['LO', '1', 'RegionOfResidence'],\n    '2154': ['SH', '1-n', 'PatientTelephoneNumbers'],\n    '2155': ['LT', '1', 'PatientTelecomInformation'],\n    '2160': ['SH', '1', 'EthnicGroup'],\n    '2180': ['SH', '1', 'Occupation'],\n    '21A0': ['CS', '1', 'SmokingStatus'],\n    '21B0': ['LT', '1', 'AdditionalPatientHistory'],\n    '21C0': ['US', '1', 'PregnancyStatus'],\n    '21D0': ['DA', '1', 'LastMenstrualDate'],\n    '21F0': ['LO', '1', 'PatientReligiousPreference'],\n    '2201': ['LO', '1', 'PatientSpeciesDescription'],\n    '2202': ['SQ', '1', 'PatientSpeciesCodeSequence'],\n    '2203': ['CS', '1', 'PatientSexNeutered'],\n    '2210': ['CS', '1', 'AnatomicalOrientationType'],\n    '2292': ['LO', '1', 'PatientBreedDescription'],\n    '2293': ['SQ', '1', 'PatientBreedCodeSequence'],\n    '2294': ['SQ', '1', 'BreedRegistrationSequence'],\n    '2295': ['LO', '1', 'BreedRegistrationNumber'],\n    '2296': ['SQ', '1', 'BreedRegistryCodeSequence'],\n    '2297': ['PN', '1', 'ResponsiblePerson'],\n    '2298': ['CS', '1', 'ResponsiblePersonRole'],\n    '2299': ['LO', '1', 'ResponsibleOrganization'],\n    '4000': ['LT', '1', 'PatientComments'],\n    '9431': ['FL', '1', 'ExaminedBodyThickness']\n  },\n  '0012': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['LO', '1', 'ClinicalTrialSponsorName'],\n    '0020': ['LO', '1', 'ClinicalTrialProtocolID'],\n    '0021': ['LO', '1', 'ClinicalTrialProtocolName'],\n    '0030': ['LO', '1', 'ClinicalTrialSiteID'],\n    '0031': ['LO', '1', 'ClinicalTrialSiteName'],\n    '0040': ['LO', '1', 'ClinicalTrialSubjectID'],\n    '0042': ['LO', '1', 'ClinicalTrialSubjectReadingID'],\n    '0050': ['LO', '1', 'ClinicalTrialTimePointID'],\n    '0051': ['ST', '1', 'ClinicalTrialTimePointDescription'],\n    '0052': ['FD', '1', 'LongitudinalTemporalOffsetFromEvent'],\n    '0053': ['CS', '1', 'LongitudinalTemporalEventType'],\n    '0060': ['LO', '1', 'ClinicalTrialCoordinatingCenterName'],\n    '0062': ['CS', '1', 'PatientIdentityRemoved'],\n    '0063': ['LO', '1-n', 'DeidentificationMethod'],\n    '0064': ['SQ', '1', 'DeidentificationMethodCodeSequence'],\n    '0071': ['LO', '1', 'ClinicalTrialSeriesID'],\n    '0072': ['LO', '1', 'ClinicalTrialSeriesDescription'],\n    '0081': ['LO', '1', 'ClinicalTrialProtocolEthicsCommitteeName'],\n    '0082': ['LO', '1', 'ClinicalTrialProtocolEthicsCommitteeApprovalNumber'],\n    '0083': ['SQ', '1', 'ConsentForClinicalTrialUseSequence'],\n    '0084': ['CS', '1', 'DistributionType'],\n    '0085': ['CS', '1', 'ConsentForDistributionFlag'],\n    '0086': ['DA', '1', 'EthicsCommitteeApprovalEffectivenessStartDate'],\n    '0087': ['DA', '1', 'EthicsCommitteeApprovalEffectivenessEndDate']\n  },\n  '0014': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0023': ['ST', '1', 'CADFileFormat'],\n    '0024': ['ST', '1', 'ComponentReferenceSystem'],\n    '0025': ['ST', '1', 'ComponentManufacturingProcedure'],\n    '0028': ['ST', '1', 'ComponentManufacturer'],\n    '0030': ['DS', '1-n', 'MaterialThickness'],\n    '0032': ['DS', '1-n', 'MaterialPipeDiameter'],\n    '0034': ['DS', '1-n', 'MaterialIsolationDiameter'],\n    '0042': ['ST', '1', 'MaterialGrade'],\n    '0044': ['ST', '1', 'MaterialPropertiesDescription'],\n    '0045': ['ST', '1', 'MaterialPropertiesFileFormatRetired'],\n    '0046': ['LT', '1', 'MaterialNotes'],\n    '0050': ['CS', '1', 'ComponentShape'],\n    '0052': ['CS', '1', 'CurvatureType'],\n    '0054': ['DS', '1', 'OuterDiameter'],\n    '0056': ['DS', '1', 'InnerDiameter'],\n    '0100': ['LO', '1-n', 'ComponentWelderIDs'],\n    '0101': ['CS', '1', 'SecondaryApprovalStatus'],\n    '0102': ['DA', '1', 'SecondaryReviewDate'],\n    '0103': ['TM', '1', 'SecondaryReviewTime'],\n    '0104': ['PN', '1', 'SecondaryReviewerName'],\n    '0105': ['ST', '1', 'RepairID'],\n    '0106': ['SQ', '1', 'MultipleComponentApprovalSequence'],\n    '0107': ['CS', '1-n', 'OtherApprovalStatus'],\n    '0108': ['CS', '1-n', 'OtherSecondaryApprovalStatus'],\n    '1010': ['ST', '1', 'ActualEnvironmentalConditions'],\n    '1020': ['DA', '1', 'ExpiryDate'],\n    '1040': ['ST', '1', 'EnvironmentalConditions'],\n    '2002': ['SQ', '1', 'EvaluatorSequence'],\n    '2004': ['IS', '1', 'EvaluatorNumber'],\n    '2006': ['PN', '1', 'EvaluatorName'],\n    '2008': ['IS', '1', 'EvaluationAttempt'],\n    '2012': ['SQ', '1', 'IndicationSequence'],\n    '2014': ['IS', '1', 'IndicationNumber'],\n    '2016': ['SH', '1', 'IndicationLabel'],\n    '2018': ['ST', '1', 'IndicationDescription'],\n    '201A': ['CS', '1-n', 'IndicationType'],\n    '201C': ['CS', '1', 'IndicationDisposition'],\n    '201E': ['SQ', '1', 'IndicationROISequence'],\n    '2030': ['SQ', '1', 'IndicationPhysicalPropertySequence'],\n    '2032': ['SH', '1', 'PropertyLabel'],\n    '2202': ['IS', '1', 'CoordinateSystemNumberOfAxes'],\n    '2204': ['SQ', '1', 'CoordinateSystemAxesSequence'],\n    '2206': ['ST', '1', 'CoordinateSystemAxisDescription'],\n    '2208': ['CS', '1', 'CoordinateSystemDataSetMapping'],\n    '220A': ['IS', '1', 'CoordinateSystemAxisNumber'],\n    '220C': ['CS', '1', 'CoordinateSystemAxisType'],\n    '220E': ['CS', '1', 'CoordinateSystemAxisUnits'],\n    '2210': ['OB', '1', 'CoordinateSystemAxisValues'],\n    '2220': ['SQ', '1', 'CoordinateSystemTransformSequence'],\n    '2222': ['ST', '1', 'TransformDescription'],\n    '2224': ['IS', '1', 'TransformNumberOfAxes'],\n    '2226': ['IS', '1-n', 'TransformOrderOfAxes'],\n    '2228': ['CS', '1', 'TransformedAxisUnits'],\n    '222A': ['DS', '1-n', 'CoordinateSystemTransformRotationAndScaleMatrix'],\n    '222C': ['DS', '1-n', 'CoordinateSystemTransformTranslationMatrix'],\n    '3011': ['DS', '1', 'InternalDetectorFrameTime'],\n    '3012': ['DS', '1', 'NumberOfFramesIntegrated'],\n    '3020': ['SQ', '1', 'DetectorTemperatureSequence'],\n    '3022': ['ST', '1', 'SensorName'],\n    '3024': ['DS', '1', 'HorizontalOffsetOfSensor'],\n    '3026': ['DS', '1', 'VerticalOffsetOfSensor'],\n    '3028': ['DS', '1', 'SensorTemperature'],\n    '3040': ['SQ', '1', 'DarkCurrentSequence'],\n    '3050': ['ox', '1', 'DarkCurrentCounts'],\n    '3060': ['SQ', '1', 'GainCorrectionReferenceSequence'],\n    '3070': ['ox', '1', 'AirCounts'],\n    '3071': ['DS', '1', 'KVUsedInGainCalibration'],\n    '3072': ['DS', '1', 'MAUsedInGainCalibration'],\n    '3073': ['DS', '1', 'NumberOfFramesUsedForIntegration'],\n    '3074': ['LO', '1', 'FilterMaterialUsedInGainCalibration'],\n    '3075': ['DS', '1', 'FilterThicknessUsedInGainCalibration'],\n    '3076': ['DA', '1', 'DateOfGainCalibration'],\n    '3077': ['TM', '1', 'TimeOfGainCalibration'],\n    '3080': ['OB', '1', 'BadPixelImage'],\n    '3099': ['LT', '1', 'CalibrationNotes'],\n    '3100': ['LT', '1', 'LinearityCorrectionTechnique'],\n    '3101': ['LT', '1', 'BeamHardeningCorrectionTechnique'],\n    '4002': ['SQ', '1', 'PulserEquipmentSequence'],\n    '4004': ['CS', '1', 'PulserType'],\n    '4006': ['LT', '1', 'PulserNotes'],\n    '4008': ['SQ', '1', 'ReceiverEquipmentSequence'],\n    '400A': ['CS', '1', 'AmplifierType'],\n    '400C': ['LT', '1', 'ReceiverNotes'],\n    '400E': ['SQ', '1', 'PreAmplifierEquipmentSequence'],\n    '400F': ['LT', '1', 'PreAmplifierNotes'],\n    '4010': ['SQ', '1', 'TransmitTransducerSequence'],\n    '4011': ['SQ', '1', 'ReceiveTransducerSequence'],\n    '4012': ['US', '1', 'NumberOfElements'],\n    '4013': ['CS', '1', 'ElementShape'],\n    '4014': ['DS', '1', 'ElementDimensionA'],\n    '4015': ['DS', '1', 'ElementDimensionB'],\n    '4016': ['DS', '1', 'ElementPitchA'],\n    '4017': ['DS', '1', 'MeasuredBeamDimensionA'],\n    '4018': ['DS', '1', 'MeasuredBeamDimensionB'],\n    '4019': ['DS', '1', 'LocationOfMeasuredBeamDiameter'],\n    '401A': ['DS', '1', 'NominalFrequency'],\n    '401B': ['DS', '1', 'MeasuredCenterFrequency'],\n    '401C': ['DS', '1', 'MeasuredBandwidth'],\n    '401D': ['DS', '1', 'ElementPitchB'],\n    '4020': ['SQ', '1', 'PulserSettingsSequence'],\n    '4022': ['DS', '1', 'PulseWidth'],\n    '4024': ['DS', '1', 'ExcitationFrequency'],\n    '4026': ['CS', '1', 'ModulationType'],\n    '4028': ['DS', '1', 'Damping'],\n    '4030': ['SQ', '1', 'ReceiverSettingsSequence'],\n    '4031': ['DS', '1', 'AcquiredSoundpathLength'],\n    '4032': ['CS', '1', 'AcquisitionCompressionType'],\n    '4033': ['IS', '1', 'AcquisitionSampleSize'],\n    '4034': ['DS', '1', 'RectifierSmoothing'],\n    '4035': ['SQ', '1', 'DACSequence'],\n    '4036': ['CS', '1', 'DACType'],\n    '4038': ['DS', '1-n', 'DACGainPoints'],\n    '403A': ['DS', '1-n', 'DACTimePoints'],\n    '403C': ['DS', '1-n', 'DACAmplitude'],\n    '4040': ['SQ', '1', 'PreAmplifierSettingsSequence'],\n    '4050': ['SQ', '1', 'TransmitTransducerSettingsSequence'],\n    '4051': ['SQ', '1', 'ReceiveTransducerSettingsSequence'],\n    '4052': ['DS', '1', 'IncidentAngle'],\n    '4054': ['ST', '1', 'CouplingTechnique'],\n    '4056': ['ST', '1', 'CouplingMedium'],\n    '4057': ['DS', '1', 'CouplingVelocity'],\n    '4058': ['DS', '1', 'ProbeCenterLocationX'],\n    '4059': ['DS', '1', 'ProbeCenterLocationZ'],\n    '405A': ['DS', '1', 'SoundPathLength'],\n    '405C': ['ST', '1', 'DelayLawIdentifier'],\n    '4060': ['SQ', '1', 'GateSettingsSequence'],\n    '4062': ['DS', '1', 'GateThreshold'],\n    '4064': ['DS', '1', 'VelocityOfSound'],\n    '4070': ['SQ', '1', 'CalibrationSettingsSequence'],\n    '4072': ['ST', '1', 'CalibrationProcedure'],\n    '4074': ['SH', '1', 'ProcedureVersion'],\n    '4076': ['DA', '1', 'ProcedureCreationDate'],\n    '4078': ['DA', '1', 'ProcedureExpirationDate'],\n    '407A': ['DA', '1', 'ProcedureLastModifiedDate'],\n    '407C': ['TM', '1-n', 'CalibrationTime'],\n    '407E': ['DA', '1-n', 'CalibrationDate'],\n    '4080': ['SQ', '1', 'ProbeDriveEquipmentSequence'],\n    '4081': ['CS', '1', 'DriveType'],\n    '4082': ['LT', '1', 'ProbeDriveNotes'],\n    '4083': ['SQ', '1', 'DriveProbeSequence'],\n    '4084': ['DS', '1', 'ProbeInductance'],\n    '4085': ['DS', '1', 'ProbeResistance'],\n    '4086': ['SQ', '1', 'ReceiveProbeSequence'],\n    '4087': ['SQ', '1', 'ProbeDriveSettingsSequence'],\n    '4088': ['DS', '1', 'BridgeResistors'],\n    '4089': ['DS', '1', 'ProbeOrientationAngle'],\n    '408B': ['DS', '1', 'UserSelectedGainY'],\n    '408C': ['DS', '1', 'UserSelectedPhase'],\n    '408D': ['DS', '1', 'UserSelectedOffsetX'],\n    '408E': ['DS', '1', 'UserSelectedOffsetY'],\n    '4091': ['SQ', '1', 'ChannelSettingsSequence'],\n    '4092': ['DS', '1', 'ChannelThreshold'],\n    '409A': ['SQ', '1', 'ScannerSettingsSequence'],\n    '409B': ['ST', '1', 'ScanProcedure'],\n    '409C': ['DS', '1', 'TranslationRateX'],\n    '409D': ['DS', '1', 'TranslationRateY'],\n    '409F': ['DS', '1', 'ChannelOverlap'],\n    '40A0': ['LO', '1-n', 'ImageQualityIndicatorType'],\n    '40A1': ['LO', '1-n', 'ImageQualityIndicatorMaterial'],\n    '40A2': ['LO', '1-n', 'ImageQualityIndicatorSize'],\n    '5002': ['IS', '1', 'LINACEnergy'],\n    '5004': ['IS', '1', 'LINACOutput'],\n    '5100': ['US', '1', 'ActiveAperture'],\n    '5101': ['DS', '1', 'TotalAperture'],\n    '5102': ['DS', '1', 'ApertureElevation'],\n    '5103': ['DS', '1', 'MainLobeAngle'],\n    '5104': ['DS', '1', 'MainRoofAngle'],\n    '5105': ['CS', '1', 'ConnectorType'],\n    '5106': ['SH', '1', 'WedgeModelNumber'],\n    '5107': ['DS', '1', 'WedgeAngleFloat'],\n    '5108': ['DS', '1', 'WedgeRoofAngle'],\n    '5109': ['CS', '1', 'WedgeElement1Position'],\n    '510A': ['DS', '1', 'WedgeMaterialVelocity'],\n    '510B': ['SH', '1', 'WedgeMaterial'],\n    '510C': ['DS', '1', 'WedgeOffsetZ'],\n    '510D': ['DS', '1', 'WedgeOriginOffsetX'],\n    '510E': ['DS', '1', 'WedgeTimeDelay'],\n    '510F': ['SH', '1', 'WedgeName'],\n    '5110': ['SH', '1', 'WedgeManufacturerName'],\n    '5111': ['LO', '1', 'WedgeDescription'],\n    '5112': ['DS', '1', 'NominalBeamAngle'],\n    '5113': ['DS', '1', 'WedgeOffsetX'],\n    '5114': ['DS', '1', 'WedgeOffsetY'],\n    '5115': ['DS', '1', 'WedgeTotalLength'],\n    '5116': ['DS', '1', 'WedgeInContactLength'],\n    '5117': ['DS', '1', 'WedgeFrontGap'],\n    '5118': ['DS', '1', 'WedgeTotalHeight'],\n    '5119': ['DS', '1', 'WedgeFrontHeight'],\n    '511A': ['DS', '1', 'WedgeRearHeight'],\n    '511B': ['DS', '1', 'WedgeTotalWidth'],\n    '511C': ['DS', '1', 'WedgeInContactWidth'],\n    '511D': ['DS', '1', 'WedgeChamferHeight'],\n    '511E': ['CS', '1', 'WedgeCurve'],\n    '511F': ['DS', '1', 'RadiusAlongWedge']\n  },\n  '0016': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['DS', '1', 'WhitePoint'],\n    '0002': ['DS', '3', 'PrimaryChromaticities'],\n    '0003': ['UT', '1', 'BatteryLevel'],\n    '0004': ['DS', '1', 'ExposureTimeInSeconds'],\n    '0005': ['DS', '1', 'FNumber'],\n    '0006': ['IS', '1', 'OECFRows'],\n    '0007': ['IS', '1', 'OECFColumns'],\n    '0008': ['UC', '1-n', 'OECFColumnNames'],\n    '0009': ['DS', '1-n', 'OECFValues'],\n    '000A': ['IS', '1', 'SpatialFrequencyResponseRows'],\n    '000B': ['IS', '1', 'SpatialFrequencyResponseColumns'],\n    '000C': ['UC', '1-n', 'SpatialFrequencyResponseColumnNames'],\n    '000D': ['DS', '1-n', 'SpatialFrequencyResponseValues'],\n    '000E': ['IS', '1', 'ColorFilterArrayPatternRows'],\n    '000F': ['IS', '1', 'ColorFilterArrayPatternColumns'],\n    '0010': ['DS', '1-n', 'ColorFilterArrayPatternValues'],\n    '0011': ['US', '1', 'FlashFiringStatus'],\n    '0012': ['US', '1', 'FlashReturnStatus'],\n    '0013': ['US', '1', 'FlashMode'],\n    '0014': ['US', '1', 'FlashFunctionPresent'],\n    '0015': ['US', '1', 'FlashRedEyeMode'],\n    '0016': ['US', '1', 'ExposureProgram'],\n    '0017': ['UT', '1', 'SpectralSensitivity'],\n    '0018': ['IS', '1', 'PhotographicSensitivity'],\n    '0019': ['IS', '1', 'SelfTimerMode'],\n    '001A': ['US', '1', 'SensitivityType'],\n    '001B': ['IS', '1', 'StandardOutputSensitivity'],\n    '001C': ['IS', '1', 'RecommendedExposureIndex'],\n    '001D': ['IS', '1', 'ISOSpeed'],\n    '001E': ['IS', '1', 'ISOSpeedLatitudeyyy'],\n    '001F': ['IS', '1', 'ISOSpeedLatitudezzz'],\n    '0020': ['UT', '1', 'EXIFVersion'],\n    '0021': ['DS', '1', 'ShutterSpeedValue'],\n    '0022': ['DS', '1', 'ApertureValue'],\n    '0023': ['DS', '1', 'BrightnessValue'],\n    '0024': ['DS', '1', 'ExposureBiasValue'],\n    '0025': ['DS', '1', 'MaxApertureValue'],\n    '0026': ['DS', '1', 'SubjectDistance'],\n    '0027': ['US', '1', 'MeteringMode'],\n    '0028': ['US', '1', 'LightSource'],\n    '0029': ['DS', '1', 'FocalLength'],\n    '002A': ['IS', '2-4', 'SubjectArea'],\n    '002B': ['OB', '1', 'MakerNote'],\n    '0030': ['DS', '1', 'Temperature'],\n    '0031': ['DS', '1', 'Humidity'],\n    '0032': ['DS', '1', 'Pressure'],\n    '0033': ['DS', '1', 'WaterDepth'],\n    '0034': ['DS', '1', 'Acceleration'],\n    '0035': ['DS', '1', 'CameraElevationAngle'],\n    '0036': ['DS', '1-2', 'FlashEnergy'],\n    '0037': ['IS', '2', 'SubjectLocation'],\n    '0038': ['DS', '1', 'PhotographicExposureIndex'],\n    '0039': ['US', '1', 'SensingMethod'],\n    '003A': ['US', '1', 'FileSource'],\n    '003B': ['US', '1', 'SceneType'],\n    '0041': ['US', '1', 'CustomRendered'],\n    '0042': ['US', '1', 'ExposureMode'],\n    '0043': ['US', '1', 'WhiteBalance'],\n    '0044': ['DS', '1', 'DigitalZoomRatio'],\n    '0045': ['IS', '1', 'FocalLengthIn35mmFilm'],\n    '0046': ['US', '1', 'SceneCaptureType'],\n    '0047': ['US', '1', 'GainControl'],\n    '0048': ['US', '1', 'Contrast'],\n    '0049': ['US', '1', 'Saturation'],\n    '004A': ['US', '1', 'Sharpness'],\n    '004B': ['OB', '1', 'DeviceSettingDescription'],\n    '004C': ['US', '1', 'SubjectDistanceRange'],\n    '004D': ['UT', '1', 'CameraOwnerName'],\n    '004E': ['DS', '4', 'LensSpecification'],\n    '004F': ['UT', '1', 'LensMake'],\n    '0050': ['UT', '1', 'LensModel'],\n    '0051': ['UT', '1', 'LensSerialNumber'],\n    '0061': ['CS', '1', 'InteroperabilityIndex'],\n    '0062': ['OB', '1', 'InteroperabilityVersion'],\n    '0070': ['OB', '1', 'GPSVersionID'],\n    '0071': ['CS', '1', 'GPSLatitudeRef'],\n    '0072': ['DS', '3', 'GPSLatitude'],\n    '0073': ['CS', '1', 'GPSLongitudeRef'],\n    '0074': ['DS', '3', 'GPSLongitude'],\n    '0075': ['US', '1', 'GPSAltitudeRef'],\n    '0076': ['DS', '1', 'GPSAltitude'],\n    '0077': ['DT', '1', 'GPSTimeStamp'],\n    '0078': ['UT', '1', 'GPSSatellites'],\n    '0079': ['CS', '1', 'GPSStatus'],\n    '007A': ['CS', '1', 'GPSMeasureMode'],\n    '007B': ['DS', '1', 'GPSDOP'],\n    '007C': ['CS', '1', 'GPSSpeedRef'],\n    '007D': ['DS', '1', 'GPSSpeed'],\n    '007E': ['CS', '1', 'GPSTrackRef'],\n    '007F': ['DS', '1', 'GPSTrack'],\n    '0080': ['CS', '1', 'GPSImgDirectionRef'],\n    '0081': ['DS', '1', 'GPSImgDirection'],\n    '0082': ['UT', '1', 'GPSMapDatum'],\n    '0083': ['CS', '1', 'GPSDestLatitudeRef'],\n    '0084': ['DS', '3', 'GPSDestLatitude'],\n    '0085': ['CS', '1', 'GPSDestLongitudeRef'],\n    '0086': ['DS', '3', 'GPSDestLongitude'],\n    '0087': ['CS', '1', 'GPSDestBearingRef'],\n    '0088': ['DS', '1', 'GPSDestBearing'],\n    '0089': ['CS', '1', 'GPSDestDistanceRef'],\n    '008A': ['DS', '1', 'GPSDestDistance'],\n    '008B': ['OB', '1', 'GPSProcessingMethod'],\n    '008C': ['OB', '1', 'GPSAreaInformation'],\n    '008D': ['DT', '1', 'GPSDateStamp'],\n    '008E': ['IS', '1', 'GPSDifferential'],\n    '1001': ['CS', '1', 'LightSourcePolarization'],\n    '1002': ['DS', '1', 'EmitterColorTemperature'],\n    '1003': ['CS', '1', 'ContactMethod'],\n    '1004': ['CS', '1-n', 'ImmersionMedia'],\n    '1005': ['DS', '1', 'OpticalMagnificationFactor']\n  },\n  '0018': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['LO', '1', 'ContrastBolusAgent'],\n    '0012': ['SQ', '1', 'ContrastBolusAgentSequence'],\n    '0013': ['FL', '1', 'ContrastBolusT1Relaxivity'],\n    '0014': ['SQ', '1', 'ContrastBolusAdministrationRouteSequence'],\n    '0015': ['CS', '1', 'BodyPartExamined'],\n    '0020': ['CS', '1-n', 'ScanningSequence'],\n    '0021': ['CS', '1-n', 'SequenceVariant'],\n    '0022': ['CS', '1-n', 'ScanOptions'],\n    '0023': ['CS', '1', 'MRAcquisitionType'],\n    '0024': ['SH', '1', 'SequenceName'],\n    '0025': ['CS', '1', 'AngioFlag'],\n    '0026': ['SQ', '1', 'InterventionDrugInformationSequence'],\n    '0027': ['TM', '1', 'InterventionDrugStopTime'],\n    '0028': ['DS', '1', 'InterventionDrugDose'],\n    '0029': ['SQ', '1', 'InterventionDrugCodeSequence'],\n    '002A': ['SQ', '1', 'AdditionalDrugSequence'],\n    '0030': ['LO', '1-n', 'Radionuclide'],\n    '0031': ['LO', '1', 'Radiopharmaceutical'],\n    '0032': ['DS', '1', 'EnergyWindowCenterline'],\n    '0033': ['DS', '1-n', 'EnergyWindowTotalWidth'],\n    '0034': ['LO', '1', 'InterventionDrugName'],\n    '0035': ['TM', '1', 'InterventionDrugStartTime'],\n    '0036': ['SQ', '1', 'InterventionSequence'],\n    '0037': ['CS', '1', 'TherapyType'],\n    '0038': ['CS', '1', 'InterventionStatus'],\n    '0039': ['CS', '1', 'TherapyDescription'],\n    '003A': ['ST', '1', 'InterventionDescription'],\n    '0040': ['IS', '1', 'CineRate'],\n    '0042': ['CS', '1', 'InitialCineRunState'],\n    '0050': ['DS', '1', 'SliceThickness'],\n    '0060': ['DS', '1', 'KVP'],\n    '0061': ['DS', '1', ''],\n    '0070': ['IS', '1', 'CountsAccumulated'],\n    '0071': ['CS', '1', 'AcquisitionTerminationCondition'],\n    '0072': ['DS', '1', 'EffectiveDuration'],\n    '0073': ['CS', '1', 'AcquisitionStartCondition'],\n    '0074': ['IS', '1', 'AcquisitionStartConditionData'],\n    '0075': ['IS', '1', 'AcquisitionTerminationConditionData'],\n    '0080': ['DS', '1', 'RepetitionTime'],\n    '0081': ['DS', '1', 'EchoTime'],\n    '0082': ['DS', '1', 'InversionTime'],\n    '0083': ['DS', '1', 'NumberOfAverages'],\n    '0084': ['DS', '1', 'ImagingFrequency'],\n    '0085': ['SH', '1', 'ImagedNucleus'],\n    '0086': ['IS', '1-n', 'EchoNumbers'],\n    '0087': ['DS', '1', 'MagneticFieldStrength'],\n    '0088': ['DS', '1', 'SpacingBetweenSlices'],\n    '0089': ['IS', '1', 'NumberOfPhaseEncodingSteps'],\n    '0090': ['DS', '1', 'DataCollectionDiameter'],\n    '0091': ['IS', '1', 'EchoTrainLength'],\n    '0093': ['DS', '1', 'PercentSampling'],\n    '0094': ['DS', '1', 'PercentPhaseFieldOfView'],\n    '0095': ['DS', '1', 'PixelBandwidth'],\n    '1000': ['LO', '1', 'DeviceSerialNumber'],\n    '1002': ['UI', '1', 'DeviceUID'],\n    '1003': ['LO', '1', 'DeviceID'],\n    '1004': ['LO', '1', 'PlateID'],\n    '1005': ['LO', '1', 'GeneratorID'],\n    '1006': ['LO', '1', 'GridID'],\n    '1007': ['LO', '1', 'CassetteID'],\n    '1008': ['LO', '1', 'GantryID'],\n    '1009': ['UT', '1', 'UniqueDeviceIdentifier'],\n    '100A': ['SQ', '1', 'UDISequence'],\n    '100B': ['UI', '1-n', 'ManufacturerDeviceClassUID'],\n    '1010': ['LO', '1', 'SecondaryCaptureDeviceID'],\n    '1011': ['LO', '1', 'HardcopyCreationDeviceID'],\n    '1012': ['DA', '1', 'DateOfSecondaryCapture'],\n    '1014': ['TM', '1', 'TimeOfSecondaryCapture'],\n    '1016': ['LO', '1', 'SecondaryCaptureDeviceManufacturer'],\n    '1017': ['LO', '1', 'HardcopyDeviceManufacturer'],\n    '1018': ['LO', '1', 'SecondaryCaptureDeviceManufacturerModelName'],\n    '1019': ['LO', '1-n', 'SecondaryCaptureDeviceSoftwareVersions'],\n    '101A': ['LO', '1-n', 'HardcopyDeviceSoftwareVersion'],\n    '101B': ['LO', '1', 'HardcopyDeviceManufacturerModelName'],\n    '1020': ['LO', '1-n', 'SoftwareVersions'],\n    '1022': ['SH', '1', 'VideoImageFormatAcquired'],\n    '1023': ['LO', '1', 'DigitalImageFormatAcquired'],\n    '1030': ['LO', '1', 'ProtocolName'],\n    '1040': ['LO', '1', 'ContrastBolusRoute'],\n    '1041': ['DS', '1', 'ContrastBolusVolume'],\n    '1042': ['TM', '1', 'ContrastBolusStartTime'],\n    '1043': ['TM', '1', 'ContrastBolusStopTime'],\n    '1044': ['DS', '1', 'ContrastBolusTotalDose'],\n    '1045': ['IS', '1', 'SyringeCounts'],\n    '1046': ['DS', '1-n', 'ContrastFlowRate'],\n    '1047': ['DS', '1-n', 'ContrastFlowDuration'],\n    '1048': ['CS', '1', 'ContrastBolusIngredient'],\n    '1049': ['DS', '1', 'ContrastBolusIngredientConcentration'],\n    '1050': ['DS', '1', 'SpatialResolution'],\n    '1060': ['DS', '1', 'TriggerTime'],\n    '1061': ['LO', '1', 'TriggerSourceOrType'],\n    '1062': ['IS', '1', 'NominalInterval'],\n    '1063': ['DS', '1', 'FrameTime'],\n    '1064': ['LO', '1', 'CardiacFramingType'],\n    '1065': ['DS', '1-n', 'FrameTimeVector'],\n    '1066': ['DS', '1', 'FrameDelay'],\n    '1067': ['DS', '1', 'ImageTriggerDelay'],\n    '1068': ['DS', '1', 'MultiplexGroupTimeOffset'],\n    '1069': ['DS', '1', 'TriggerTimeOffset'],\n    '106A': ['CS', '1', 'SynchronizationTrigger'],\n    '106C': ['US', '2', 'SynchronizationChannel'],\n    '106E': ['UL', '1', 'TriggerSamplePosition'],\n    '1070': ['LO', '1', 'RadiopharmaceuticalRoute'],\n    '1071': ['DS', '1', 'RadiopharmaceuticalVolume'],\n    '1072': ['TM', '1', 'RadiopharmaceuticalStartTime'],\n    '1073': ['TM', '1', 'RadiopharmaceuticalStopTime'],\n    '1074': ['DS', '1', 'RadionuclideTotalDose'],\n    '1075': ['DS', '1', 'RadionuclideHalfLife'],\n    '1076': ['DS', '1', 'RadionuclidePositronFraction'],\n    '1077': ['DS', '1', 'RadiopharmaceuticalSpecificActivity'],\n    '1078': ['DT', '1', 'RadiopharmaceuticalStartDateTime'],\n    '1079': ['DT', '1', 'RadiopharmaceuticalStopDateTime'],\n    '1080': ['CS', '1', 'BeatRejectionFlag'],\n    '1081': ['IS', '1', 'LowRRValue'],\n    '1082': ['IS', '1', 'HighRRValue'],\n    '1083': ['IS', '1', 'IntervalsAcquired'],\n    '1084': ['IS', '1', 'IntervalsRejected'],\n    '1085': ['LO', '1', 'PVCRejection'],\n    '1086': ['IS', '1', 'SkipBeats'],\n    '1088': ['IS', '1', 'HeartRate'],\n    '1090': ['IS', '1', 'CardiacNumberOfImages'],\n    '1094': ['IS', '1', 'TriggerWindow'],\n    '1100': ['DS', '1', 'ReconstructionDiameter'],\n    '1110': ['DS', '1', 'DistanceSourceToDetector'],\n    '1111': ['DS', '1', 'DistanceSourceToPatient'],\n    '1114': ['DS', '1', 'EstimatedRadiographicMagnificationFactor'],\n    '1120': ['DS', '1', 'GantryDetectorTilt'],\n    '1121': ['DS', '1', 'GantryDetectorSlew'],\n    '1130': ['DS', '1', 'TableHeight'],\n    '1131': ['DS', '1', 'TableTraverse'],\n    '1134': ['CS', '1', 'TableMotion'],\n    '1135': ['DS', '1-n', 'TableVerticalIncrement'],\n    '1136': ['DS', '1-n', 'TableLateralIncrement'],\n    '1137': ['DS', '1-n', 'TableLongitudinalIncrement'],\n    '1138': ['DS', '1', 'TableAngle'],\n    '113A': ['CS', '1', 'TableType'],\n    '1140': ['CS', '1', 'RotationDirection'],\n    '1141': ['DS', '1', 'AngularPosition'],\n    '1142': ['DS', '1-n', 'RadialPosition'],\n    '1143': ['DS', '1', 'ScanArc'],\n    '1144': ['DS', '1', 'AngularStep'],\n    '1145': ['DS', '1', 'CenterOfRotationOffset'],\n    '1146': ['DS', '1-n', 'RotationOffset'],\n    '1147': ['CS', '1', 'FieldOfViewShape'],\n    '1149': ['IS', '1-2', 'FieldOfViewDimensions'],\n    '1150': ['IS', '1', 'ExposureTime'],\n    '1151': ['IS', '1', 'XRayTubeCurrent'],\n    '1152': ['IS', '1', 'Exposure'],\n    '1153': ['IS', '1', 'ExposureInuAs'],\n    '1154': ['DS', '1', 'AveragePulseWidth'],\n    '1155': ['CS', '1', 'RadiationSetting'],\n    '1156': ['CS', '1', 'RectificationType'],\n    '115A': ['CS', '1', 'RadiationMode'],\n    '115E': ['DS', '1', 'ImageAndFluoroscopyAreaDoseProduct'],\n    '1160': ['SH', '1', 'FilterType'],\n    '1161': ['LO', '1-n', 'TypeOfFilters'],\n    '1162': ['DS', '1', 'IntensifierSize'],\n    '1164': ['DS', '2', 'ImagerPixelSpacing'],\n    '1166': ['CS', '1-n', 'Grid'],\n    '1170': ['IS', '1', 'GeneratorPower'],\n    '1180': ['SH', '1', 'CollimatorGridName'],\n    '1181': ['CS', '1', 'CollimatorType'],\n    '1182': ['IS', '1-2', 'FocalDistance'],\n    '1183': ['DS', '1-2', 'XFocusCenter'],\n    '1184': ['DS', '1-2', 'YFocusCenter'],\n    '1190': ['DS', '1-n', 'FocalSpots'],\n    '1191': ['CS', '1', 'AnodeTargetMaterial'],\n    '11A0': ['DS', '1', 'BodyPartThickness'],\n    '11A2': ['DS', '1', 'CompressionForce'],\n    '11A3': ['DS', '1', 'CompressionPressure'],\n    '11A4': ['LO', '1', 'PaddleDescription'],\n    '11A5': ['DS', '1', 'CompressionContactArea'],\n    '11B0': ['LO', '1', 'AcquisitionMode'],\n    '11B1': ['LO', '1', 'DoseModeName'],\n    '11B2': ['CS', '1', 'AcquiredSubtractionMaskFlag'],\n    '11B3': ['CS', '1', 'FluoroscopyPersistenceFlag'],\n    '11B4': ['CS', '1', 'FluoroscopyLastImageHoldPersistenceFlag'],\n    '11B5': ['IS', '1', 'UpperLimitNumberOfPersistentFluoroscopyFrames'],\n    '11B6': ['CS', '1', 'ContrastBolusAutoInjectionTriggerFlag'],\n    '11B7': ['FD', '1', 'ContrastBolusInjectionDelay'],\n    '11B8': ['SQ', '1', 'XAAcquisitionPhaseDetailsSequence'],\n    '11B9': ['FD', '1', 'XAAcquisitionFrameRate'],\n    '11BA': ['SQ', '1', 'XAPlaneDetailsSequence'],\n    '11BB': ['LO', '1', 'AcquisitionFieldOfViewLabel'],\n    '11BC': ['SQ', '1', 'XRayFilterDetailsSequence'],\n    '11BD': ['FD', '1', 'XAAcquisitionDuration'],\n    '11BE': ['CS', '1', 'ReconstructionPipelineType'],\n    '11BF': ['SQ', '1', 'ImageFilterDetailsSequence'],\n    '11C0': ['CS', '1', 'AppliedMaskSubtractionFlag'],\n    '11C1': ['SQ', '1', 'RequestedSeriesDescriptionCodeSequence'],\n    '1200': ['DA', '1-n', 'DateOfLastCalibration'],\n    '1201': ['TM', '1-n', 'TimeOfLastCalibration'],\n    '1202': ['DT', '1', 'DateTimeOfLastCalibration'],\n    '1203': ['DT', '1', 'CalibrationDateTime'],\n    '1210': ['SH', '1-n', 'ConvolutionKernel'],\n    '1240': ['IS', '1-n', 'UpperLowerPixelValues'],\n    '1242': ['IS', '1', 'ActualFrameDuration'],\n    '1243': ['IS', '1', 'CountRate'],\n    '1244': ['US', '1', 'PreferredPlaybackSequencing'],\n    '1250': ['SH', '1', 'ReceiveCoilName'],\n    '1251': ['SH', '1', 'TransmitCoilName'],\n    '1260': ['SH', '1', 'PlateType'],\n    '1261': ['LO', '1', 'PhosphorType'],\n    '1271': ['FD', '1', 'WaterEquivalentDiameter'],\n    '1272': ['SQ', '1', 'WaterEquivalentDiameterCalculationMethodCodeSequence'],\n    '1300': ['DS', '1', 'ScanVelocity'],\n    '1301': ['CS', '1-n', 'WholeBodyTechnique'],\n    '1302': ['IS', '1', 'ScanLength'],\n    '1310': ['US', '4', 'AcquisitionMatrix'],\n    '1312': ['CS', '1', 'InPlanePhaseEncodingDirection'],\n    '1314': ['DS', '1', 'FlipAngle'],\n    '1315': ['CS', '1', 'VariableFlipAngleFlag'],\n    '1316': ['DS', '1', 'SAR'],\n    '1318': ['DS', '1', 'dBdt'],\n    '1320': ['FL', '1', 'B1rms'],\n    '1400': ['LO', '1', 'AcquisitionDeviceProcessingDescription'],\n    '1401': ['LO', '1', 'AcquisitionDeviceProcessingCode'],\n    '1402': ['CS', '1', 'CassetteOrientation'],\n    '1403': ['CS', '1', 'CassetteSize'],\n    '1404': ['US', '1', 'ExposuresOnPlate'],\n    '1405': ['IS', '1', 'RelativeXRayExposure'],\n    '1411': ['DS', '1', 'ExposureIndex'],\n    '1412': ['DS', '1', 'TargetExposureIndex'],\n    '1413': ['DS', '1', 'DeviationIndex'],\n    '1450': ['DS', '1', 'ColumnAngulation'],\n    '1460': ['DS', '1', 'TomoLayerHeight'],\n    '1470': ['DS', '1', 'TomoAngle'],\n    '1480': ['DS', '1', 'TomoTime'],\n    '1490': ['CS', '1', 'TomoType'],\n    '1491': ['CS', '1', 'TomoClass'],\n    '1495': ['IS', '1', 'NumberOfTomosynthesisSourceImages'],\n    '1500': ['CS', '1', 'PositionerMotion'],\n    '1508': ['CS', '1', 'PositionerType'],\n    '1510': ['DS', '1', 'PositionerPrimaryAngle'],\n    '1511': ['DS', '1', 'PositionerSecondaryAngle'],\n    '1520': ['DS', '1-n', 'PositionerPrimaryAngleIncrement'],\n    '1521': ['DS', '1-n', 'PositionerSecondaryAngleIncrement'],\n    '1530': ['DS', '1', 'DetectorPrimaryAngle'],\n    '1531': ['DS', '1', 'DetectorSecondaryAngle'],\n    '1600': ['CS', '1-3', 'ShutterShape'],\n    '1602': ['IS', '1', 'ShutterLeftVerticalEdge'],\n    '1604': ['IS', '1', 'ShutterRightVerticalEdge'],\n    '1606': ['IS', '1', 'ShutterUpperHorizontalEdge'],\n    '1608': ['IS', '1', 'ShutterLowerHorizontalEdge'],\n    '1610': ['IS', '2', 'CenterOfCircularShutter'],\n    '1612': ['IS', '1', 'RadiusOfCircularShutter'],\n    '1620': ['IS', '2-2n', 'VerticesOfThePolygonalShutter'],\n    '1622': ['US', '1', 'ShutterPresentationValue'],\n    '1623': ['US', '1', 'ShutterOverlayGroup'],\n    '1624': ['US', '3', 'ShutterPresentationColorCIELabValue'],\n    '1630': ['CS', '1', 'OutlineShapeType'],\n    '1631': ['FD', '1', 'OutlineLeftVerticalEdge'],\n    '1632': ['FD', '1', 'OutlineRightVerticalEdge'],\n    '1633': ['FD', '1', 'OutlineUpperHorizontalEdge'],\n    '1634': ['FD', '1', 'OutlineLowerHorizontalEdge'],\n    '1635': ['FD', '2', 'CenterOfCircularOutline'],\n    '1636': ['FD', '1', 'DiameterOfCircularOutline'],\n    '1637': ['UL', '1', 'NumberOfPolygonalVertices'],\n    '1638': ['OF', '1', 'VerticesOfThePolygonalOutline'],\n    '1700': ['CS', '1-3', 'CollimatorShape'],\n    '1702': ['IS', '1', 'CollimatorLeftVerticalEdge'],\n    '1704': ['IS', '1', 'CollimatorRightVerticalEdge'],\n    '1706': ['IS', '1', 'CollimatorUpperHorizontalEdge'],\n    '1708': ['IS', '1', 'CollimatorLowerHorizontalEdge'],\n    '1710': ['IS', '2', 'CenterOfCircularCollimator'],\n    '1712': ['IS', '1', 'RadiusOfCircularCollimator'],\n    '1720': ['IS', '2-2n', 'VerticesOfThePolygonalCollimator'],\n    '1800': ['CS', '1', 'AcquisitionTimeSynchronized'],\n    '1801': ['SH', '1', 'TimeSource'],\n    '1802': ['CS', '1', 'TimeDistributionProtocol'],\n    '1803': ['LO', '1', 'NTPSourceAddress'],\n    '2001': ['IS', '1-n', 'PageNumberVector'],\n    '2002': ['SH', '1-n', 'FrameLabelVector'],\n    '2003': ['DS', '1-n', 'FramePrimaryAngleVector'],\n    '2004': ['DS', '1-n', 'FrameSecondaryAngleVector'],\n    '2005': ['DS', '1-n', 'SliceLocationVector'],\n    '2006': ['SH', '1-n', 'DisplayWindowLabelVector'],\n    '2010': ['DS', '2', 'NominalScannedPixelSpacing'],\n    '2020': ['CS', '1', 'DigitizingDeviceTransportDirection'],\n    '2030': ['DS', '1', 'RotationOfScannedFilm'],\n    '2041': ['SQ', '1', 'BiopsyTargetSequence'],\n    '2042': ['UI', '1', 'TargetUID'],\n    '2043': ['FL', '2', 'LocalizingCursorPosition'],\n    '2044': ['FL', '3', 'CalculatedTargetPosition'],\n    '2045': ['SH', '1', 'TargetLabel'],\n    '2046': ['FL', '1', 'DisplayedZValue'],\n    '3100': ['CS', '1', 'IVUSAcquisition'],\n    '3101': ['DS', '1', 'IVUSPullbackRate'],\n    '3102': ['DS', '1', 'IVUSGatedRate'],\n    '3103': ['IS', '1', 'IVUSPullbackStartFrameNumber'],\n    '3104': ['IS', '1', 'IVUSPullbackStopFrameNumber'],\n    '3105': ['IS', '1-n', 'LesionNumber'],\n    '4000': ['LT', '1', 'AcquisitionComments'],\n    '5000': ['SH', '1-n', 'OutputPower'],\n    '5010': ['LO', '1-n', 'TransducerData'],\n    '5011': ['SQ', '1', 'TransducerIdentificationSequence'],\n    '5012': ['DS', '1', 'FocusDepth'],\n    '5020': ['LO', '1', 'ProcessingFunction'],\n    '5021': ['LO', '1', 'PostprocessingFunction'],\n    '5022': ['DS', '1', 'MechanicalIndex'],\n    '5024': ['DS', '1', 'BoneThermalIndex'],\n    '5026': ['DS', '1', 'CranialThermalIndex'],\n    '5027': ['DS', '1', 'SoftTissueThermalIndex'],\n    '5028': ['DS', '1', 'SoftTissueFocusThermalIndex'],\n    '5029': ['DS', '1', 'SoftTissueSurfaceThermalIndex'],\n    '5030': ['DS', '1', 'DynamicRange'],\n    '5040': ['DS', '1', 'TotalGain'],\n    '5050': ['IS', '1', 'DepthOfScanField'],\n    '5100': ['CS', '1', 'PatientPosition'],\n    '5101': ['CS', '1', 'ViewPosition'],\n    '5104': ['SQ', '1', 'ProjectionEponymousNameCodeSequence'],\n    '5210': ['DS', '6', 'ImageTransformationMatrix'],\n    '5212': ['DS', '3', 'ImageTranslationVector'],\n    '6000': ['DS', '1', 'Sensitivity'],\n    '6011': ['SQ', '1', 'SequenceOfUltrasoundRegions'],\n    '6012': ['US', '1', 'RegionSpatialFormat'],\n    '6014': ['US', '1', 'RegionDataType'],\n    '6016': ['UL', '1', 'RegionFlags'],\n    '6018': ['UL', '1', 'RegionLocationMinX0'],\n    '601A': ['UL', '1', 'RegionLocationMinY0'],\n    '601C': ['UL', '1', 'RegionLocationMaxX1'],\n    '601E': ['UL', '1', 'RegionLocationMaxY1'],\n    '6020': ['SL', '1', 'ReferencePixelX0'],\n    '6022': ['SL', '1', 'ReferencePixelY0'],\n    '6024': ['US', '1', 'PhysicalUnitsXDirection'],\n    '6026': ['US', '1', 'PhysicalUnitsYDirection'],\n    '6028': ['FD', '1', 'ReferencePixelPhysicalValueX'],\n    '602A': ['FD', '1', 'ReferencePixelPhysicalValueY'],\n    '602C': ['FD', '1', 'PhysicalDeltaX'],\n    '602E': ['FD', '1', 'PhysicalDeltaY'],\n    '6030': ['UL', '1', 'TransducerFrequency'],\n    '6031': ['CS', '1', 'TransducerType'],\n    '6032': ['UL', '1', 'PulseRepetitionFrequency'],\n    '6034': ['FD', '1', 'DopplerCorrectionAngle'],\n    '6036': ['FD', '1', 'SteeringAngle'],\n    '6038': ['UL', '1', 'DopplerSampleVolumeXPositionRetired'],\n    '6039': ['SL', '1', 'DopplerSampleVolumeXPosition'],\n    '603A': ['UL', '1', 'DopplerSampleVolumeYPositionRetired'],\n    '603B': ['SL', '1', 'DopplerSampleVolumeYPosition'],\n    '603C': ['UL', '1', 'TMLinePositionX0Retired'],\n    '603D': ['SL', '1', 'TMLinePositionX0'],\n    '603E': ['UL', '1', 'TMLinePositionY0Retired'],\n    '603F': ['SL', '1', 'TMLinePositionY0'],\n    '6040': ['UL', '1', 'TMLinePositionX1Retired'],\n    '6041': ['SL', '1', 'TMLinePositionX1'],\n    '6042': ['UL', '1', 'TMLinePositionY1Retired'],\n    '6043': ['SL', '1', 'TMLinePositionY1'],\n    '6044': ['US', '1', 'PixelComponentOrganization'],\n    '6046': ['UL', '1', 'PixelComponentMask'],\n    '6048': ['UL', '1', 'PixelComponentRangeStart'],\n    '604A': ['UL', '1', 'PixelComponentRangeStop'],\n    '604C': ['US', '1', 'PixelComponentPhysicalUnits'],\n    '604E': ['US', '1', 'PixelComponentDataType'],\n    '6050': ['UL', '1', 'NumberOfTableBreakPoints'],\n    '6052': ['UL', '1-n', 'TableOfXBreakPoints'],\n    '6054': ['FD', '1-n', 'TableOfYBreakPoints'],\n    '6056': ['UL', '1', 'NumberOfTableEntries'],\n    '6058': ['UL', '1-n', 'TableOfPixelValues'],\n    '605A': ['FL', '1-n', 'TableOfParameterValues'],\n    '6060': ['FL', '1-n', 'RWaveTimeVector'],\n    '6070': ['US', '1', 'ActiveImageAreaOverlayGroup'],\n    '7000': ['CS', '1', 'DetectorConditionsNominalFlag'],\n    '7001': ['DS', '1', 'DetectorTemperature'],\n    '7004': ['CS', '1', 'DetectorType'],\n    '7005': ['CS', '1', 'DetectorConfiguration'],\n    '7006': ['LT', '1', 'DetectorDescription'],\n    '7008': ['LT', '1', 'DetectorMode'],\n    '700A': ['SH', '1', 'DetectorID'],\n    '700C': ['DA', '1', 'DateOfLastDetectorCalibration'],\n    '700E': ['TM', '1', 'TimeOfLastDetectorCalibration'],\n    '7010': ['IS', '1', 'ExposuresOnDetectorSinceLastCalibration'],\n    '7011': ['IS', '1', 'ExposuresOnDetectorSinceManufactured'],\n    '7012': ['DS', '1', 'DetectorTimeSinceLastExposure'],\n    '7014': ['DS', '1', 'DetectorActiveTime'],\n    '7016': ['DS', '1', 'DetectorActivationOffsetFromExposure'],\n    '701A': ['DS', '2', 'DetectorBinning'],\n    '7020': ['DS', '2', 'DetectorElementPhysicalSize'],\n    '7022': ['DS', '2', 'DetectorElementSpacing'],\n    '7024': ['CS', '1', 'DetectorActiveShape'],\n    '7026': ['DS', '1-2', 'DetectorActiveDimensions'],\n    '7028': ['DS', '2', 'DetectorActiveOrigin'],\n    '702A': ['LO', '1', 'DetectorManufacturerName'],\n    '702B': ['LO', '1', 'DetectorManufacturerModelName'],\n    '7030': ['DS', '2', 'FieldOfViewOrigin'],\n    '7032': ['DS', '1', 'FieldOfViewRotation'],\n    '7034': ['CS', '1', 'FieldOfViewHorizontalFlip'],\n    '7036': ['FL', '2', 'PixelDataAreaOriginRelativeToFOV'],\n    '7038': ['FL', '1', 'PixelDataAreaRotationAngleRelativeToFOV'],\n    '7040': ['LT', '1', 'GridAbsorbingMaterial'],\n    '7041': ['LT', '1', 'GridSpacingMaterial'],\n    '7042': ['DS', '1', 'GridThickness'],\n    '7044': ['DS', '1', 'GridPitch'],\n    '7046': ['IS', '2', 'GridAspectRatio'],\n    '7048': ['DS', '1', 'GridPeriod'],\n    '704C': ['DS', '1', 'GridFocalDistance'],\n    '7050': ['CS', '1-n', 'FilterMaterial'],\n    '7052': ['DS', '1-n', 'FilterThicknessMinimum'],\n    '7054': ['DS', '1-n', 'FilterThicknessMaximum'],\n    '7056': ['FL', '1-n', 'FilterBeamPathLengthMinimum'],\n    '7058': ['FL', '1-n', 'FilterBeamPathLengthMaximum'],\n    '7060': ['CS', '1', 'ExposureControlMode'],\n    '7062': ['LT', '1', 'ExposureControlModeDescription'],\n    '7064': ['CS', '1', 'ExposureStatus'],\n    '7065': ['DS', '1', 'PhototimerSetting'],\n    '8150': ['DS', '1', 'ExposureTimeInuS'],\n    '8151': ['DS', '1', 'XRayTubeCurrentInuA'],\n    '9004': ['CS', '1', 'ContentQualification'],\n    '9005': ['SH', '1', 'PulseSequenceName'],\n    '9006': ['SQ', '1', 'MRImagingModifierSequence'],\n    '9008': ['CS', '1', 'EchoPulseSequence'],\n    '9009': ['CS', '1', 'InversionRecovery'],\n    '9010': ['CS', '1', 'FlowCompensation'],\n    '9011': ['CS', '1', 'MultipleSpinEcho'],\n    '9012': ['CS', '1', 'MultiPlanarExcitation'],\n    '9014': ['CS', '1', 'PhaseContrast'],\n    '9015': ['CS', '1', 'TimeOfFlightContrast'],\n    '9016': ['CS', '1', 'Spoiling'],\n    '9017': ['CS', '1', 'SteadyStatePulseSequence'],\n    '9018': ['CS', '1', 'EchoPlanarPulseSequence'],\n    '9019': ['FD', '1', 'TagAngleFirstAxis'],\n    '9020': ['CS', '1', 'MagnetizationTransfer'],\n    '9021': ['CS', '1', 'T2Preparation'],\n    '9022': ['CS', '1', 'BloodSignalNulling'],\n    '9024': ['CS', '1', 'SaturationRecovery'],\n    '9025': ['CS', '1', 'SpectrallySelectedSuppression'],\n    '9026': ['CS', '1', 'SpectrallySelectedExcitation'],\n    '9027': ['CS', '1', 'SpatialPresaturation'],\n    '9028': ['CS', '1', 'Tagging'],\n    '9029': ['CS', '1', 'OversamplingPhase'],\n    '9030': ['FD', '1', 'TagSpacingFirstDimension'],\n    '9032': ['CS', '1', 'GeometryOfKSpaceTraversal'],\n    '9033': ['CS', '1', 'SegmentedKSpaceTraversal'],\n    '9034': ['CS', '1', 'RectilinearPhaseEncodeReordering'],\n    '9035': ['FD', '1', 'TagThickness'],\n    '9036': ['CS', '1', 'PartialFourierDirection'],\n    '9037': ['CS', '1', 'CardiacSynchronizationTechnique'],\n    '9041': ['LO', '1', 'ReceiveCoilManufacturerName'],\n    '9042': ['SQ', '1', 'MRReceiveCoilSequence'],\n    '9043': ['CS', '1', 'ReceiveCoilType'],\n    '9044': ['CS', '1', 'QuadratureReceiveCoil'],\n    '9045': ['SQ', '1', 'MultiCoilDefinitionSequence'],\n    '9046': ['LO', '1', 'MultiCoilConfiguration'],\n    '9047': ['SH', '1', 'MultiCoilElementName'],\n    '9048': ['CS', '1', 'MultiCoilElementUsed'],\n    '9049': ['SQ', '1', 'MRTransmitCoilSequence'],\n    '9050': ['LO', '1', 'TransmitCoilManufacturerName'],\n    '9051': ['CS', '1', 'TransmitCoilType'],\n    '9052': ['FD', '1-2', 'SpectralWidth'],\n    '9053': ['FD', '1-2', 'ChemicalShiftReference'],\n    '9054': ['CS', '1', 'VolumeLocalizationTechnique'],\n    '9058': ['US', '1', 'MRAcquisitionFrequencyEncodingSteps'],\n    '9059': ['CS', '1', 'Decoupling'],\n    '9060': ['CS', '1-2', 'DecoupledNucleus'],\n    '9061': ['FD', '1-2', 'DecouplingFrequency'],\n    '9062': ['CS', '1', 'DecouplingMethod'],\n    '9063': ['FD', '1-2', 'DecouplingChemicalShiftReference'],\n    '9064': ['CS', '1', 'KSpaceFiltering'],\n    '9065': ['CS', '1-2', 'TimeDomainFiltering'],\n    '9066': ['US', '1-2', 'NumberOfZeroFills'],\n    '9067': ['CS', '1', 'BaselineCorrection'],\n    '9069': ['FD', '1', 'ParallelReductionFactorInPlane'],\n    '9070': ['FD', '1', 'CardiacRRIntervalSpecified'],\n    '9073': ['FD', '1', 'AcquisitionDuration'],\n    '9074': ['DT', '1', 'FrameAcquisitionDateTime'],\n    '9075': ['CS', '1', 'DiffusionDirectionality'],\n    '9076': ['SQ', '1', 'DiffusionGradientDirectionSequence'],\n    '9077': ['CS', '1', 'ParallelAcquisition'],\n    '9078': ['CS', '1', 'ParallelAcquisitionTechnique'],\n    '9079': ['FD', '1-n', 'InversionTimes'],\n    '9080': ['ST', '1', 'MetaboliteMapDescription'],\n    '9081': ['CS', '1', 'PartialFourier'],\n    '9082': ['FD', '1', 'EffectiveEchoTime'],\n    '9083': ['SQ', '1', 'MetaboliteMapCodeSequence'],\n    '9084': ['SQ', '1', 'ChemicalShiftSequence'],\n    '9085': ['CS', '1', 'CardiacSignalSource'],\n    '9087': ['FD', '1', 'DiffusionBValue'],\n    '9089': ['FD', '3', 'DiffusionGradientOrientation'],\n    '9090': ['FD', '3', 'VelocityEncodingDirection'],\n    '9091': ['FD', '1', 'VelocityEncodingMinimumValue'],\n    '9092': ['SQ', '1', 'VelocityEncodingAcquisitionSequence'],\n    '9093': ['US', '1', 'NumberOfKSpaceTrajectories'],\n    '9094': ['CS', '1', 'CoverageOfKSpace'],\n    '9095': ['UL', '1', 'SpectroscopyAcquisitionPhaseRows'],\n    '9096': ['FD', '1', 'ParallelReductionFactorInPlaneRetired'],\n    '9098': ['FD', '1-2', 'TransmitterFrequency'],\n    '9100': ['CS', '1-2', 'ResonantNucleus'],\n    '9101': ['CS', '1', 'FrequencyCorrection'],\n    '9103': ['SQ', '1', 'MRSpectroscopyFOVGeometrySequence'],\n    '9104': ['FD', '1', 'SlabThickness'],\n    '9105': ['FD', '3', 'SlabOrientation'],\n    '9106': ['FD', '3', 'MidSlabPosition'],\n    '9107': ['SQ', '1', 'MRSpatialSaturationSequence'],\n    '9112': ['SQ', '1', 'MRTimingAndRelatedParametersSequence'],\n    '9114': ['SQ', '1', 'MREchoSequence'],\n    '9115': ['SQ', '1', 'MRModifierSequence'],\n    '9117': ['SQ', '1', 'MRDiffusionSequence'],\n    '9118': ['SQ', '1', 'CardiacSynchronizationSequence'],\n    '9119': ['SQ', '1', 'MRAveragesSequence'],\n    '9125': ['SQ', '1', 'MRFOVGeometrySequence'],\n    '9126': ['SQ', '1', 'VolumeLocalizationSequence'],\n    '9127': ['UL', '1', 'SpectroscopyAcquisitionDataColumns'],\n    '9147': ['CS', '1', 'DiffusionAnisotropyType'],\n    '9151': ['DT', '1', 'FrameReferenceDateTime'],\n    '9152': ['SQ', '1', 'MRMetaboliteMapSequence'],\n    '9155': ['FD', '1', 'ParallelReductionFactorOutOfPlane'],\n    '9159': ['UL', '1', 'SpectroscopyAcquisitionOutOfPlanePhaseSteps'],\n    '9166': ['CS', '1', 'BulkMotionStatus'],\n    '9168': ['FD', '1', 'ParallelReductionFactorSecondInPlane'],\n    '9169': ['CS', '1', 'CardiacBeatRejectionTechnique'],\n    '9170': ['CS', '1', 'RespiratoryMotionCompensationTechnique'],\n    '9171': ['CS', '1', 'RespiratorySignalSource'],\n    '9172': ['CS', '1', 'BulkMotionCompensationTechnique'],\n    '9173': ['CS', '1', 'BulkMotionSignalSource'],\n    '9174': ['CS', '1', 'ApplicableSafetyStandardAgency'],\n    '9175': ['LO', '1', 'ApplicableSafetyStandardDescription'],\n    '9176': ['SQ', '1', 'OperatingModeSequence'],\n    '9177': ['CS', '1', 'OperatingModeType'],\n    '9178': ['CS', '1', 'OperatingMode'],\n    '9179': ['CS', '1', 'SpecificAbsorptionRateDefinition'],\n    '9180': ['CS', '1', 'GradientOutputType'],\n    '9181': ['FD', '1', 'SpecificAbsorptionRateValue'],\n    '9182': ['FD', '1', 'GradientOutput'],\n    '9183': ['CS', '1', 'FlowCompensationDirection'],\n    '9184': ['FD', '1', 'TaggingDelay'],\n    '9185': ['ST', '1', 'RespiratoryMotionCompensationTechniqueDescription'],\n    '9186': ['SH', '1', 'RespiratorySignalSourceID'],\n    '9195': ['FD', '1', 'ChemicalShiftMinimumIntegrationLimitInHz'],\n    '9196': ['FD', '1', 'ChemicalShiftMaximumIntegrationLimitInHz'],\n    '9197': ['SQ', '1', 'MRVelocityEncodingSequence'],\n    '9198': ['CS', '1', 'FirstOrderPhaseCorrection'],\n    '9199': ['CS', '1', 'WaterReferencedPhaseCorrection'],\n    '9200': ['CS', '1', 'MRSpectroscopyAcquisitionType'],\n    '9214': ['CS', '1', 'RespiratoryCyclePosition'],\n    '9217': ['FD', '1', 'VelocityEncodingMaximumValue'],\n    '9218': ['FD', '1', 'TagSpacingSecondDimension'],\n    '9219': ['SS', '1', 'TagAngleSecondAxis'],\n    '9220': ['FD', '1', 'FrameAcquisitionDuration'],\n    '9226': ['SQ', '1', 'MRImageFrameTypeSequence'],\n    '9227': ['SQ', '1', 'MRSpectroscopyFrameTypeSequence'],\n    '9231': ['US', '1', 'MRAcquisitionPhaseEncodingStepsInPlane'],\n    '9232': ['US', '1', 'MRAcquisitionPhaseEncodingStepsOutOfPlane'],\n    '9234': ['UL', '1', 'SpectroscopyAcquisitionPhaseColumns'],\n    '9236': ['CS', '1', 'CardiacCyclePosition'],\n    '9239': ['SQ', '1', 'SpecificAbsorptionRateSequence'],\n    '9240': ['US', '1', 'RFEchoTrainLength'],\n    '9241': ['US', '1', 'GradientEchoTrainLength'],\n    '9250': ['CS', '1', 'ArterialSpinLabelingContrast'],\n    '9251': ['SQ', '1', 'MRArterialSpinLabelingSequence'],\n    '9252': ['LO', '1', 'ASLTechniqueDescription'],\n    '9253': ['US', '1', 'ASLSlabNumber'],\n    '9254': ['FD', '1', 'ASLSlabThickness'],\n    '9255': ['FD', '3', 'ASLSlabOrientation'],\n    '9256': ['FD', '3', 'ASLMidSlabPosition'],\n    '9257': ['CS', '1', 'ASLContext'],\n    '9258': ['UL', '1', 'ASLPulseTrainDuration'],\n    '9259': ['CS', '1', 'ASLCrusherFlag'],\n    '925A': ['FD', '1', 'ASLCrusherFlowLimit'],\n    '925B': ['LO', '1', 'ASLCrusherDescription'],\n    '925C': ['CS', '1', 'ASLBolusCutoffFlag'],\n    '925D': ['SQ', '1', 'ASLBolusCutoffTimingSequence'],\n    '925E': ['LO', '1', 'ASLBolusCutoffTechnique'],\n    '925F': ['UL', '1', 'ASLBolusCutoffDelayTime'],\n    '9260': ['SQ', '1', 'ASLSlabSequence'],\n    '9295': ['FD', '1', 'ChemicalShiftMinimumIntegrationLimitInppm'],\n    '9296': ['FD', '1', 'ChemicalShiftMaximumIntegrationLimitInppm'],\n    '9297': ['CS', '1', 'WaterReferenceAcquisition'],\n    '9298': ['IS', '1', 'EchoPeakPosition'],\n    '9301': ['SQ', '1', 'CTAcquisitionTypeSequence'],\n    '9302': ['CS', '1', 'AcquisitionType'],\n    '9303': ['FD', '1', 'TubeAngle'],\n    '9304': ['SQ', '1', 'CTAcquisitionDetailsSequence'],\n    '9305': ['FD', '1', 'RevolutionTime'],\n    '9306': ['FD', '1', 'SingleCollimationWidth'],\n    '9307': ['FD', '1', 'TotalCollimationWidth'],\n    '9308': ['SQ', '1', 'CTTableDynamicsSequence'],\n    '9309': ['FD', '1', 'TableSpeed'],\n    '9310': ['FD', '1', 'TableFeedPerRotation'],\n    '9311': ['FD', '1', 'SpiralPitchFactor'],\n    '9312': ['SQ', '1', 'CTGeometrySequence'],\n    '9313': ['FD', '3', 'DataCollectionCenterPatient'],\n    '9314': ['SQ', '1', 'CTReconstructionSequence'],\n    '9315': ['CS', '1', 'ReconstructionAlgorithm'],\n    '9316': ['CS', '1', 'ConvolutionKernelGroup'],\n    '9317': ['FD', '2', 'ReconstructionFieldOfView'],\n    '9318': ['FD', '3', 'ReconstructionTargetCenterPatient'],\n    '9319': ['FD', '1', 'ReconstructionAngle'],\n    '9320': ['SH', '1', 'ImageFilter'],\n    '9321': ['SQ', '1', 'CTExposureSequence'],\n    '9322': ['FD', '2', 'ReconstructionPixelSpacing'],\n    '9323': ['CS', '1-n', 'ExposureModulationType'],\n    '9324': ['FD', '1', 'EstimatedDoseSaving'],\n    '9325': ['SQ', '1', 'CTXRayDetailsSequence'],\n    '9326': ['SQ', '1', 'CTPositionSequence'],\n    '9327': ['FD', '1', 'TablePosition'],\n    '9328': ['FD', '1', 'ExposureTimeInms'],\n    '9329': ['SQ', '1', 'CTImageFrameTypeSequence'],\n    '9330': ['FD', '1', 'XRayTubeCurrentInmA'],\n    '9332': ['FD', '1', 'ExposureInmAs'],\n    '9333': ['CS', '1', 'ConstantVolumeFlag'],\n    '9334': ['CS', '1', 'FluoroscopyFlag'],\n    '9335': ['FD', '1', 'DistanceSourceToDataCollectionCenter'],\n    '9337': ['US', '1', 'ContrastBolusAgentNumber'],\n    '9338': ['SQ', '1', 'ContrastBolusIngredientCodeSequence'],\n    '9340': ['SQ', '1', 'ContrastAdministrationProfileSequence'],\n    '9341': ['SQ', '1', 'ContrastBolusUsageSequence'],\n    '9342': ['CS', '1', 'ContrastBolusAgentAdministered'],\n    '9343': ['CS', '1', 'ContrastBolusAgentDetected'],\n    '9344': ['CS', '1', 'ContrastBolusAgentPhase'],\n    '9345': ['FD', '1', 'CTDIvol'],\n    '9346': ['SQ', '1', 'CTDIPhantomTypeCodeSequence'],\n    '9351': ['FL', '1', 'CalciumScoringMassFactorPatient'],\n    '9352': ['FL', '3', 'CalciumScoringMassFactorDevice'],\n    '9353': ['FL', '1', 'EnergyWeightingFactor'],\n    '9360': ['SQ', '1', 'CTAdditionalXRaySourceSequence'],\n    '9361': ['CS', '1', 'MultienergyCTAcquisition'],\n    '9362': ['SQ', '1', 'MultienergyCTAcquisitionSequence'],\n    '9363': ['SQ', '1', 'MultienergyCTProcessingSequence'],\n    '9364': ['SQ', '1', 'MultienergyCTCharacteristicsSequence'],\n    '9365': ['SQ', '1', 'MultienergyCTXRaySourceSequence'],\n    '9366': ['US', '1', 'XRaySourceIndex'],\n    '9367': ['UC', '1', 'XRaySourceID'],\n    '9368': ['CS', '1', 'MultienergySourceTechnique'],\n    '9369': ['DT', '1', 'SourceStartDateTime'],\n    '936A': ['DT', '1', 'SourceEndDateTime'],\n    '936B': ['US', '1', 'SwitchingPhaseNumber'],\n    '936C': ['DS', '1', 'SwitchingPhaseNominalDuration'],\n    '936D': ['DS', '1', 'SwitchingPhaseTransitionDuration'],\n    '936E': ['DS', '1', 'EffectiveBinEnergy'],\n    '936F': ['SQ', '1', 'MultienergyCTXRayDetectorSequence'],\n    '9370': ['US', '1', 'XRayDetectorIndex'],\n    '9371': ['UC', '1', 'XRayDetectorID'],\n    '9372': ['CS', '1', 'MultienergyDetectorType'],\n    '9373': ['ST', '1', 'XRayDetectorLabel'],\n    '9374': ['DS', '1', 'NominalMaxEnergy'],\n    '9375': ['DS', '1', 'NominalMinEnergy'],\n    '9376': ['US', '1-n', 'ReferencedXRayDetectorIndex'],\n    '9377': ['US', '1-n', 'ReferencedXRaySourceIndex'],\n    '9378': ['US', '1-n', 'ReferencedPathIndex'],\n    '9379': ['SQ', '1', 'MultienergyCTPathSequence'],\n    '937A': ['US', '1', 'MultienergyCTPathIndex'],\n    '937B': ['UT', '1', 'MultienergyAcquisitionDescription'],\n    '937C': ['FD', '1', 'MonoenergeticEnergyEquivalent'],\n    '937D': ['SQ', '1', 'MaterialCodeSequence'],\n    '937E': ['CS', '1', 'DecompositionMethod'],\n    '937F': ['UT', '1', 'DecompositionDescription'],\n    '9380': ['SQ', '1', 'DecompositionAlgorithmIdentificationSequence'],\n    '9381': ['SQ', '1', 'DecompositionMaterialSequence'],\n    '9382': ['SQ', '1', 'MaterialAttenuationSequence'],\n    '9383': ['DS', '1', 'PhotonEnergy'],\n    '9384': ['DS', '1', 'XRayMassAttenuationCoefficient'],\n    '9401': ['SQ', '1', 'ProjectionPixelCalibrationSequence'],\n    '9402': ['FL', '1', 'DistanceSourceToIsocenter'],\n    '9403': ['FL', '1', 'DistanceObjectToTableTop'],\n    '9404': ['FL', '2', 'ObjectPixelSpacingInCenterOfBeam'],\n    '9405': ['SQ', '1', 'PositionerPositionSequence'],\n    '9406': ['SQ', '1', 'TablePositionSequence'],\n    '9407': ['SQ', '1', 'CollimatorShapeSequence'],\n    '9410': ['CS', '1', 'PlanesInAcquisition'],\n    '9412': ['SQ', '1', 'XAXRFFrameCharacteristicsSequence'],\n    '9417': ['SQ', '1', 'FrameAcquisitionSequence'],\n    '9420': ['CS', '1', 'XRayReceptorType'],\n    '9423': ['LO', '1', 'AcquisitionProtocolName'],\n    '9424': ['LT', '1', 'AcquisitionProtocolDescription'],\n    '9425': ['CS', '1', 'ContrastBolusIngredientOpaque'],\n    '9426': ['FL', '1', 'DistanceReceptorPlaneToDetectorHousing'],\n    '9427': ['CS', '1', 'IntensifierActiveShape'],\n    '9428': ['FL', '1-2', 'IntensifierActiveDimensions'],\n    '9429': ['FL', '2', 'PhysicalDetectorSize'],\n    '9430': ['FL', '2', 'PositionOfIsocenterProjection'],\n    '9432': ['SQ', '1', 'FieldOfViewSequence'],\n    '9433': ['LO', '1', 'FieldOfViewDescription'],\n    '9434': ['SQ', '1', 'ExposureControlSensingRegionsSequence'],\n    '9435': ['CS', '1', 'ExposureControlSensingRegionShape'],\n    '9436': ['SS', '1', 'ExposureControlSensingRegionLeftVerticalEdge'],\n    '9437': ['SS', '1', 'ExposureControlSensingRegionRightVerticalEdge'],\n    '9438': ['SS', '1', 'ExposureControlSensingRegionUpperHorizontalEdge'],\n    '9439': ['SS', '1', 'ExposureControlSensingRegionLowerHorizontalEdge'],\n    '9440': ['SS', '2', 'CenterOfCircularExposureControlSensingRegion'],\n    '9441': ['US', '1', 'RadiusOfCircularExposureControlSensingRegion'],\n    '9442': ['SS', '2-n', 'VerticesOfThePolygonalExposureControlSensingRegion'],\n    '9445': ['', '', ''],\n    '9447': ['FL', '1', 'ColumnAngulationPatient'],\n    '9449': ['FL', '1', 'BeamAngle'],\n    '9451': ['SQ', '1', 'FrameDetectorParametersSequence'],\n    '9452': ['FL', '1', 'CalculatedAnatomyThickness'],\n    '9455': ['SQ', '1', 'CalibrationSequence'],\n    '9456': ['SQ', '1', 'ObjectThicknessSequence'],\n    '9457': ['CS', '1', 'PlaneIdentification'],\n    '9461': ['FL', '1-2', 'FieldOfViewDimensionsInFloat'],\n    '9462': ['SQ', '1', 'IsocenterReferenceSystemSequence'],\n    '9463': ['FL', '1', 'PositionerIsocenterPrimaryAngle'],\n    '9464': ['FL', '1', 'PositionerIsocenterSecondaryAngle'],\n    '9465': ['FL', '1', 'PositionerIsocenterDetectorRotationAngle'],\n    '9466': ['FL', '1', 'TableXPositionToIsocenter'],\n    '9467': ['FL', '1', 'TableYPositionToIsocenter'],\n    '9468': ['FL', '1', 'TableZPositionToIsocenter'],\n    '9469': ['FL', '1', 'TableHorizontalRotationAngle'],\n    '9470': ['FL', '1', 'TableHeadTiltAngle'],\n    '9471': ['FL', '1', 'TableCradleTiltAngle'],\n    '9472': ['SQ', '1', 'FrameDisplayShutterSequence'],\n    '9473': ['FL', '1', 'AcquiredImageAreaDoseProduct'],\n    '9474': ['CS', '1', 'CArmPositionerTabletopRelationship'],\n    '9476': ['SQ', '1', 'XRayGeometrySequence'],\n    '9477': ['SQ', '1', 'IrradiationEventIdentificationSequence'],\n    '9504': ['SQ', '1', 'XRay3DFrameTypeSequence'],\n    '9506': ['SQ', '1', 'ContributingSourcesSequence'],\n    '9507': ['SQ', '1', 'XRay3DAcquisitionSequence'],\n    '9508': ['FL', '1', 'PrimaryPositionerScanArc'],\n    '9509': ['FL', '1', 'SecondaryPositionerScanArc'],\n    '9510': ['FL', '1', 'PrimaryPositionerScanStartAngle'],\n    '9511': ['FL', '1', 'SecondaryPositionerScanStartAngle'],\n    '9514': ['FL', '1', 'PrimaryPositionerIncrement'],\n    '9515': ['FL', '1', 'SecondaryPositionerIncrement'],\n    '9516': ['DT', '1', 'StartAcquisitionDateTime'],\n    '9517': ['DT', '1', 'EndAcquisitionDateTime'],\n    '9518': ['SS', '1', 'PrimaryPositionerIncrementSign'],\n    '9519': ['SS', '1', 'SecondaryPositionerIncrementSign'],\n    '9524': ['LO', '1', 'ApplicationName'],\n    '9525': ['LO', '1', 'ApplicationVersion'],\n    '9526': ['LO', '1', 'ApplicationManufacturer'],\n    '9527': ['CS', '1', 'AlgorithmType'],\n    '9528': ['LO', '1', 'AlgorithmDescription'],\n    '9530': ['SQ', '1', 'XRay3DReconstructionSequence'],\n    '9531': ['LO', '1', 'ReconstructionDescription'],\n    '9538': ['SQ', '1', 'PerProjectionAcquisitionSequence'],\n    '9541': ['SQ', '1', 'DetectorPositionSequence'],\n    '9542': ['SQ', '1', 'XRayAcquisitionDoseSequence'],\n    '9543': ['FD', '1', 'XRaySourceIsocenterPrimaryAngle'],\n    '9544': ['FD', '1', 'XRaySourceIsocenterSecondaryAngle'],\n    '9545': ['FD', '1', 'BreastSupportIsocenterPrimaryAngle'],\n    '9546': ['FD', '1', 'BreastSupportIsocenterSecondaryAngle'],\n    '9547': ['FD', '1', 'BreastSupportXPositionToIsocenter'],\n    '9548': ['FD', '1', 'BreastSupportYPositionToIsocenter'],\n    '9549': ['FD', '1', 'BreastSupportZPositionToIsocenter'],\n    '9550': ['FD', '1', 'DetectorIsocenterPrimaryAngle'],\n    '9551': ['FD', '1', 'DetectorIsocenterSecondaryAngle'],\n    '9552': ['FD', '1', 'DetectorXPositionToIsocenter'],\n    '9553': ['FD', '1', 'DetectorYPositionToIsocenter'],\n    '9554': ['FD', '1', 'DetectorZPositionToIsocenter'],\n    '9555': ['SQ', '1', 'XRayGridSequence'],\n    '9556': ['SQ', '1', 'XRayFilterSequence'],\n    '9557': ['FD', '3', 'DetectorActiveAreaTLHCPosition'],\n    '9558': ['FD', '6', 'DetectorActiveAreaOrientation'],\n    '9559': ['CS', '1', 'PositionerPrimaryAngleDirection'],\n    '9601': ['SQ', '1', 'DiffusionBMatrixSequence'],\n    '9602': ['FD', '1', 'DiffusionBValueXX'],\n    '9603': ['FD', '1', 'DiffusionBValueXY'],\n    '9604': ['FD', '1', 'DiffusionBValueXZ'],\n    '9605': ['FD', '1', 'DiffusionBValueYY'],\n    '9606': ['FD', '1', 'DiffusionBValueYZ'],\n    '9607': ['FD', '1', 'DiffusionBValueZZ'],\n    '9621': ['SQ', '1', 'FunctionalMRSequence'],\n    '9622': ['CS', '1', 'FunctionalSettlingPhaseFramesPresent'],\n    '9623': ['DT', '1', 'FunctionalSyncPulse'],\n    '9624': ['CS', '1', 'SettlingPhaseFrame'],\n    '9701': ['DT', '1', 'DecayCorrectionDateTime'],\n    '9715': ['FD', '1', 'StartDensityThreshold'],\n    '9716': ['FD', '1', 'StartRelativeDensityDifferenceThreshold'],\n    '9717': ['FD', '1', 'StartCardiacTriggerCountThreshold'],\n    '9718': ['FD', '1', 'StartRespiratoryTriggerCountThreshold'],\n    '9719': ['FD', '1', 'TerminationCountsThreshold'],\n    '9720': ['FD', '1', 'TerminationDensityThreshold'],\n    '9721': ['FD', '1', 'TerminationRelativeDensityThreshold'],\n    '9722': ['FD', '1', 'TerminationTimeThreshold'],\n    '9723': ['FD', '1', 'TerminationCardiacTriggerCountThreshold'],\n    '9724': ['FD', '1', 'TerminationRespiratoryTriggerCountThreshold'],\n    '9725': ['CS', '1', 'DetectorGeometry'],\n    '9726': ['FD', '1', 'TransverseDetectorSeparation'],\n    '9727': ['FD', '1', 'AxialDetectorDimension'],\n    '9729': ['US', '1', 'RadiopharmaceuticalAgentNumber'],\n    '9732': ['SQ', '1', 'PETFrameAcquisitionSequence'],\n    '9733': ['SQ', '1', 'PETDetectorMotionDetailsSequence'],\n    '9734': ['SQ', '1', 'PETTableDynamicsSequence'],\n    '9735': ['SQ', '1', 'PETPositionSequence'],\n    '9736': ['SQ', '1', 'PETFrameCorrectionFactorsSequence'],\n    '9737': ['SQ', '1', 'RadiopharmaceuticalUsageSequence'],\n    '9738': ['CS', '1', 'AttenuationCorrectionSource'],\n    '9739': ['US', '1', 'NumberOfIterations'],\n    '9740': ['US', '1', 'NumberOfSubsets'],\n    '9749': ['SQ', '1', 'PETReconstructionSequence'],\n    '9751': ['SQ', '1', 'PETFrameTypeSequence'],\n    '9755': ['CS', '1', 'TimeOfFlightInformationUsed'],\n    '9756': ['CS', '1', 'ReconstructionType'],\n    '9758': ['CS', '1', 'DecayCorrected'],\n    '9759': ['CS', '1', 'AttenuationCorrected'],\n    '9760': ['CS', '1', 'ScatterCorrected'],\n    '9761': ['CS', '1', 'DeadTimeCorrected'],\n    '9762': ['CS', '1', 'GantryMotionCorrected'],\n    '9763': ['CS', '1', 'PatientMotionCorrected'],\n    '9764': ['CS', '1', 'CountLossNormalizationCorrected'],\n    '9765': ['CS', '1', 'RandomsCorrected'],\n    '9766': ['CS', '1', 'NonUniformRadialSamplingCorrected'],\n    '9767': ['CS', '1', 'SensitivityCalibrated'],\n    '9768': ['CS', '1', 'DetectorNormalizationCorrection'],\n    '9769': ['CS', '1', 'IterativeReconstructionMethod'],\n    '9770': ['CS', '1', 'AttenuationCorrectionTemporalRelationship'],\n    '9771': ['SQ', '1', 'PatientPhysiologicalStateSequence'],\n    '9772': ['SQ', '1', 'PatientPhysiologicalStateCodeSequence'],\n    '9801': ['FD', '1-n', 'DepthsOfFocus'],\n    '9803': ['SQ', '1', 'ExcludedIntervalsSequence'],\n    '9804': ['DT', '1', 'ExclusionStartDateTime'],\n    '9805': ['FD', '1', 'ExclusionDuration'],\n    '9806': ['SQ', '1', 'USImageDescriptionSequence'],\n    '9807': ['SQ', '1', 'ImageDataTypeSequence'],\n    '9808': ['CS', '1', 'DataType'],\n    '9809': ['SQ', '1', 'TransducerScanPatternCodeSequence'],\n    '980B': ['CS', '1', 'AliasedDataType'],\n    '980C': ['CS', '1', 'PositionMeasuringDeviceUsed'],\n    '980D': ['SQ', '1', 'TransducerGeometryCodeSequence'],\n    '980E': ['SQ', '1', 'TransducerBeamSteeringCodeSequence'],\n    '980F': ['SQ', '1', 'TransducerApplicationCodeSequence'],\n    '9810': ['xs', '1', 'ZeroVelocityPixelValue'],\n    '9900': ['LO', '1', 'ReferenceLocationLabel'],\n    '9901': ['UT', '1', 'ReferenceLocationDescription'],\n    '9902': ['SQ', '1', 'ReferenceBasisCodeSequence'],\n    '9903': ['SQ', '1', 'ReferenceGeometryCodeSequence'],\n    '9904': ['DS', '1', 'OffsetDistance'],\n    '9905': ['CS', '1', 'OffsetDirection'],\n    '9906': ['SQ', '1', 'PotentialScheduledProtocolCodeSequence'],\n    '9907': ['SQ', '1', 'PotentialRequestedProcedureCodeSequence'],\n    '9908': ['UC', '1-n', 'PotentialReasonsForProcedure'],\n    '9909': ['SQ', '1', 'PotentialReasonsForProcedureCodeSequence'],\n    '990A': ['UC', '1-n', 'PotentialDiagnosticTasks'],\n    '990B': ['SQ', '1', 'ContraindicationsCodeSequence'],\n    '990C': ['SQ', '1', 'ReferencedDefinedProtocolSequence'],\n    '990D': ['SQ', '1', 'ReferencedPerformedProtocolSequence'],\n    '990E': ['SQ', '1', 'PredecessorProtocolSequence'],\n    '990F': ['UT', '1', 'ProtocolPlanningInformation'],\n    '9910': ['UT', '1', 'ProtocolDesignRationale'],\n    '9911': ['SQ', '1', 'PatientSpecificationSequence'],\n    '9912': ['SQ', '1', 'ModelSpecificationSequence'],\n    '9913': ['SQ', '1', 'ParametersSpecificationSequence'],\n    '9914': ['SQ', '1', 'InstructionSequence'],\n    '9915': ['US', '1', 'InstructionIndex'],\n    '9916': ['LO', '1', 'InstructionText'],\n    '9917': ['UT', '1', 'InstructionDescription'],\n    '9918': ['CS', '1', 'InstructionPerformedFlag'],\n    '9919': ['DT', '1', 'InstructionPerformedDateTime'],\n    '991A': ['UT', '1', 'InstructionPerformanceComment'],\n    '991B': ['SQ', '1', 'PatientPositioningInstructionSequence'],\n    '991C': ['SQ', '1', 'PositioningMethodCodeSequence'],\n    '991D': ['SQ', '1', 'PositioningLandmarkSequence'],\n    '991E': ['UI', '1', 'TargetFrameOfReferenceUID'],\n    '991F': ['SQ', '1', 'AcquisitionProtocolElementSpecificationSequence'],\n    '9920': ['SQ', '1', 'AcquisitionProtocolElementSequence'],\n    '9921': ['US', '1', 'ProtocolElementNumber'],\n    '9922': ['LO', '1', 'ProtocolElementName'],\n    '9923': ['UT', '1', 'ProtocolElementCharacteristicsSummary'],\n    '9924': ['UT', '1', 'ProtocolElementPurpose'],\n    '9930': ['CS', '1', 'AcquisitionMotion'],\n    '9931': ['SQ', '1', 'AcquisitionStartLocationSequence'],\n    '9932': ['SQ', '1', 'AcquisitionEndLocationSequence'],\n    '9933': ['SQ', '1', 'ReconstructionProtocolElementSpecificationSequence'],\n    '9934': ['SQ', '1', 'ReconstructionProtocolElementSequence'],\n    '9935': ['SQ', '1', 'StorageProtocolElementSpecificationSequence'],\n    '9936': ['SQ', '1', 'StorageProtocolElementSequence'],\n    '9937': ['LO', '1', 'RequestedSeriesDescription'],\n    '9938': ['US', '1-n', 'SourceAcquisitionProtocolElementNumber'],\n    '9939': ['US', '1-n', 'SourceAcquisitionBeamNumber'],\n    '993A': ['US', '1-n', 'SourceReconstructionProtocolElementNumber'],\n    '993B': ['SQ', '1', 'ReconstructionStartLocationSequence'],\n    '993C': ['SQ', '1', 'ReconstructionEndLocationSequence'],\n    '993D': ['SQ', '1', 'ReconstructionAlgorithmSequence'],\n    '993E': ['SQ', '1', 'ReconstructionTargetCenterLocationSequence'],\n    '9941': ['UT', '1', 'ImageFilterDescription'],\n    '9942': ['FD', '1', 'CTDIvolNotificationTrigger'],\n    '9943': ['FD', '1', 'DLPNotificationTrigger'],\n    '9944': ['CS', '1', 'AutoKVPSelectionType'],\n    '9945': ['FD', '1', 'AutoKVPUpperBound'],\n    '9946': ['FD', '1', 'AutoKVPLowerBound'],\n    '9947': ['CS', '1', 'ProtocolDefinedPatientPosition'],\n    'A001': ['SQ', '1', 'ContributingEquipmentSequence'],\n    'A002': ['DT', '1', 'ContributionDateTime'],\n    'A003': ['ST', '1', 'ContributionDescription']\n  },\n  '0020': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '000D': ['UI', '1', 'StudyInstanceUID'],\n    '000E': ['UI', '1', 'SeriesInstanceUID'],\n    '0010': ['SH', '1', 'StudyID'],\n    '0011': ['IS', '1', 'SeriesNumber'],\n    '0012': ['IS', '1', 'AcquisitionNumber'],\n    '0013': ['IS', '1', 'InstanceNumber'],\n    '0014': ['IS', '1', 'IsotopeNumber'],\n    '0015': ['IS', '1', 'PhaseNumber'],\n    '0016': ['IS', '1', 'IntervalNumber'],\n    '0017': ['IS', '1', 'TimeSlotNumber'],\n    '0018': ['IS', '1', 'AngleNumber'],\n    '0019': ['IS', '1', 'ItemNumber'],\n    '0020': ['CS', '2', 'PatientOrientation'],\n    '0022': ['IS', '1', 'OverlayNumber'],\n    '0024': ['IS', '1', 'CurveNumber'],\n    '0026': ['IS', '1', 'LUTNumber'],\n    '0030': ['DS', '3', 'ImagePosition'],\n    '0032': ['DS', '3', 'ImagePositionPatient'],\n    '0035': ['DS', '6', 'ImageOrientation'],\n    '0037': ['DS', '6', 'ImageOrientationPatient'],\n    '0050': ['DS', '1', 'Location'],\n    '0052': ['UI', '1', 'FrameOfReferenceUID'],\n    '0060': ['CS', '1', 'Laterality'],\n    '0062': ['CS', '1', 'ImageLaterality'],\n    '0070': ['LO', '1', 'ImageGeometryType'],\n    '0080': ['CS', '1-n', 'MaskingImage'],\n    '00AA': ['IS', '1', 'ReportNumber'],\n    '0100': ['IS', '1', 'TemporalPositionIdentifier'],\n    '0105': ['IS', '1', 'NumberOfTemporalPositions'],\n    '0110': ['DS', '1', 'TemporalResolution'],\n    '0200': ['UI', '1', 'SynchronizationFrameOfReferenceUID'],\n    '0242': ['UI', '1', 'SOPInstanceUIDOfConcatenationSource'],\n    '1000': ['IS', '1', 'SeriesInStudy'],\n    '1001': ['IS', '1', 'AcquisitionsInSeries'],\n    '1002': ['IS', '1', 'ImagesInAcquisition'],\n    '1003': ['IS', '1', 'ImagesInSeries'],\n    '1004': ['IS', '1', 'AcquisitionsInStudy'],\n    '1005': ['IS', '1', 'ImagesInStudy'],\n    '1020': ['LO', '1-n', 'Reference'],\n    '103F': ['LO', '1', 'TargetPositionReferenceIndicator'],\n    '1040': ['LO', '1', 'PositionReferenceIndicator'],\n    '1041': ['DS', '1', 'SliceLocation'],\n    '1070': ['IS', '1-n', 'OtherStudyNumbers'],\n    '1200': ['IS', '1', 'NumberOfPatientRelatedStudies'],\n    '1202': ['IS', '1', 'NumberOfPatientRelatedSeries'],\n    '1204': ['IS', '1', 'NumberOfPatientRelatedInstances'],\n    '1206': ['IS', '1', 'NumberOfStudyRelatedSeries'],\n    '1208': ['IS', '1', 'NumberOfStudyRelatedInstances'],\n    '1209': ['IS', '1', 'NumberOfSeriesRelatedInstances'],\n    '3100': ['CS', '1-n', 'SourceImageIDs'],\n    '3401': ['CS', '1', 'ModifyingDeviceID'],\n    '3402': ['CS', '1', 'ModifiedImageID'],\n    '3403': ['DA', '1', 'ModifiedImageDate'],\n    '3404': ['LO', '1', 'ModifyingDeviceManufacturer'],\n    '3405': ['TM', '1', 'ModifiedImageTime'],\n    '3406': ['LO', '1', 'ModifiedImageDescription'],\n    '4000': ['LT', '1', 'ImageComments'],\n    '5000': ['AT', '1-n', 'OriginalImageIdentification'],\n    '5002': ['LO', '1-n', 'OriginalImageIdentificationNomenclature'],\n    '9056': ['SH', '1', 'StackID'],\n    '9057': ['UL', '1', 'InStackPositionNumber'],\n    '9071': ['SQ', '1', 'FrameAnatomySequence'],\n    '9072': ['CS', '1', 'FrameLaterality'],\n    '9111': ['SQ', '1', 'FrameContentSequence'],\n    '9113': ['SQ', '1', 'PlanePositionSequence'],\n    '9116': ['SQ', '1', 'PlaneOrientationSequence'],\n    '9128': ['UL', '1', 'TemporalPositionIndex'],\n    '9153': ['FD', '1', 'NominalCardiacTriggerDelayTime'],\n    '9154': ['FL', '1', 'NominalCardiacTriggerTimePriorToRPeak'],\n    '9155': ['FL', '1', 'ActualCardiacTriggerTimePriorToRPeak'],\n    '9156': ['US', '1', 'FrameAcquisitionNumber'],\n    '9157': ['UL', '1-n', 'DimensionIndexValues'],\n    '9158': ['LT', '1', 'FrameComments'],\n    '9161': ['UI', '1', 'ConcatenationUID'],\n    '9162': ['US', '1', 'InConcatenationNumber'],\n    '9163': ['US', '1', 'InConcatenationTotalNumber'],\n    '9164': ['UI', '1', 'DimensionOrganizationUID'],\n    '9165': ['AT', '1', 'DimensionIndexPointer'],\n    '9167': ['AT', '1', 'FunctionalGroupPointer'],\n    '9170': ['SQ', '1', 'UnassignedSharedConvertedAttributesSequence'],\n    '9171': ['SQ', '1', 'UnassignedPerFrameConvertedAttributesSequence'],\n    '9172': ['SQ', '1', 'ConversionSourceAttributesSequence'],\n    '9213': ['LO', '1', 'DimensionIndexPrivateCreator'],\n    '9221': ['SQ', '1', 'DimensionOrganizationSequence'],\n    '9222': ['SQ', '1', 'DimensionIndexSequence'],\n    '9228': ['UL', '1', 'ConcatenationFrameOffsetNumber'],\n    '9238': ['LO', '1', 'FunctionalGroupPrivateCreator'],\n    '9241': ['FL', '1', 'NominalPercentageOfCardiacPhase'],\n    '9245': ['FL', '1', 'NominalPercentageOfRespiratoryPhase'],\n    '9246': ['FL', '1', 'StartingRespiratoryAmplitude'],\n    '9247': ['CS', '1', 'StartingRespiratoryPhase'],\n    '9248': ['FL', '1', 'EndingRespiratoryAmplitude'],\n    '9249': ['CS', '1', 'EndingRespiratoryPhase'],\n    '9250': ['CS', '1', 'RespiratoryTriggerType'],\n    '9251': ['FD', '1', 'RRIntervalTimeNominal'],\n    '9252': ['FD', '1', 'ActualCardiacTriggerDelayTime'],\n    '9253': ['SQ', '1', 'RespiratorySynchronizationSequence'],\n    '9254': ['FD', '1', 'RespiratoryIntervalTime'],\n    '9255': ['FD', '1', 'NominalRespiratoryTriggerDelayTime'],\n    '9256': ['FD', '1', 'RespiratoryTriggerDelayThreshold'],\n    '9257': ['FD', '1', 'ActualRespiratoryTriggerDelayTime'],\n    '9301': ['FD', '3', 'ImagePositionVolume'],\n    '9302': ['FD', '6', 'ImageOrientationVolume'],\n    '9307': ['CS', '1', 'UltrasoundAcquisitionGeometry'],\n    '9308': ['FD', '3', 'ApexPosition'],\n    '9309': ['FD', '16', 'VolumeToTransducerMappingMatrix'],\n    '930A': ['FD', '16', 'VolumeToTableMappingMatrix'],\n    '930B': ['CS', '1', 'VolumeToTransducerRelationship'],\n    '930C': ['CS', '1', 'PatientFrameOfReferenceSource'],\n    '930D': ['FD', '1', 'TemporalPositionTimeOffset'],\n    '930E': ['SQ', '1', 'PlanePositionVolumeSequence'],\n    '930F': ['SQ', '1', 'PlaneOrientationVolumeSequence'],\n    '9310': ['SQ', '1', 'TemporalPositionSequence'],\n    '9311': ['CS', '1', 'DimensionOrganizationType'],\n    '9312': ['UI', '1', 'VolumeFrameOfReferenceUID'],\n    '9313': ['UI', '1', 'TableFrameOfReferenceUID'],\n    '9421': ['LO', '1', 'DimensionDescriptionLabel'],\n    '9450': ['SQ', '1', 'PatientOrientationInFrameSequence'],\n    '9453': ['LO', '1', 'FrameLabel'],\n    '9518': ['US', '1-n', 'AcquisitionIndex'],\n    '9529': ['SQ', '1', 'ContributingSOPInstancesReferenceSequence'],\n    '9536': ['US', '1', 'ReconstructionIndex']\n  },\n  '0022': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['US', '1', 'LightPathFilterPassThroughWavelength'],\n    '0002': ['US', '2', 'LightPathFilterPassBand'],\n    '0003': ['US', '1', 'ImagePathFilterPassThroughWavelength'],\n    '0004': ['US', '2', 'ImagePathFilterPassBand'],\n    '0005': ['CS', '1', 'PatientEyeMovementCommanded'],\n    '0006': ['SQ', '1', 'PatientEyeMovementCommandCodeSequence'],\n    '0007': ['FL', '1', 'SphericalLensPower'],\n    '0008': ['FL', '1', 'CylinderLensPower'],\n    '0009': ['FL', '1', 'CylinderAxis'],\n    '000A': ['FL', '1', 'EmmetropicMagnification'],\n    '000B': ['FL', '1', 'IntraOcularPressure'],\n    '000C': ['FL', '1', 'HorizontalFieldOfView'],\n    '000D': ['CS', '1', 'PupilDilated'],\n    '000E': ['FL', '1', 'DegreeOfDilation'],\n    '0010': ['FL', '1', 'StereoBaselineAngle'],\n    '0011': ['FL', '1', 'StereoBaselineDisplacement'],\n    '0012': ['FL', '1', 'StereoHorizontalPixelOffset'],\n    '0013': ['FL', '1', 'StereoVerticalPixelOffset'],\n    '0014': ['FL', '1', 'StereoRotation'],\n    '0015': ['SQ', '1', 'AcquisitionDeviceTypeCodeSequence'],\n    '0016': ['SQ', '1', 'IlluminationTypeCodeSequence'],\n    '0017': ['SQ', '1', 'LightPathFilterTypeStackCodeSequence'],\n    '0018': ['SQ', '1', 'ImagePathFilterTypeStackCodeSequence'],\n    '0019': ['SQ', '1', 'LensesCodeSequence'],\n    '001A': ['SQ', '1', 'ChannelDescriptionCodeSequence'],\n    '001B': ['SQ', '1', 'RefractiveStateSequence'],\n    '001C': ['SQ', '1', 'MydriaticAgentCodeSequence'],\n    '001D': ['SQ', '1', 'RelativeImagePositionCodeSequence'],\n    '001E': ['FL', '1', 'CameraAngleOfView'],\n    '0020': ['SQ', '1', 'StereoPairsSequence'],\n    '0021': ['SQ', '1', 'LeftImageSequence'],\n    '0022': ['SQ', '1', 'RightImageSequence'],\n    '0028': ['CS', '1', 'StereoPairsPresent'],\n    '0030': ['FL', '1', 'AxialLengthOfTheEye'],\n    '0031': ['SQ', '1', 'OphthalmicFrameLocationSequence'],\n    '0032': ['FL', '2-2n', 'ReferenceCoordinates'],\n    '0035': ['FL', '1', 'DepthSpatialResolution'],\n    '0036': ['FL', '1', 'MaximumDepthDistortion'],\n    '0037': ['FL', '1', 'AlongScanSpatialResolution'],\n    '0038': ['FL', '1', 'MaximumAlongScanDistortion'],\n    '0039': ['CS', '1', 'OphthalmicImageOrientation'],\n    '0041': ['FL', '1', 'DepthOfTransverseImage'],\n    '0042': ['SQ', '1', 'MydriaticAgentConcentrationUnitsSequence'],\n    '0048': ['FL', '1', 'AcrossScanSpatialResolution'],\n    '0049': ['FL', '1', 'MaximumAcrossScanDistortion'],\n    '004E': ['DS', '1', 'MydriaticAgentConcentration'],\n    '0055': ['FL', '1', 'IlluminationWaveLength'],\n    '0056': ['FL', '1', 'IlluminationPower'],\n    '0057': ['FL', '1', 'IlluminationBandwidth'],\n    '0058': ['SQ', '1', 'MydriaticAgentSequence'],\n    '1007': ['SQ', '1', 'OphthalmicAxialMeasurementsRightEyeSequence'],\n    '1008': ['SQ', '1', 'OphthalmicAxialMeasurementsLeftEyeSequence'],\n    '1009': ['CS', '1', 'OphthalmicAxialMeasurementsDeviceType'],\n    '1010': ['CS', '1', 'OphthalmicAxialLengthMeasurementsType'],\n    '1012': ['SQ', '1', 'OphthalmicAxialLengthSequence'],\n    '1019': ['FL', '1', 'OphthalmicAxialLength'],\n    '1024': ['SQ', '1', 'LensStatusCodeSequence'],\n    '1025': ['SQ', '1', 'VitreousStatusCodeSequence'],\n    '1028': ['SQ', '1', 'IOLFormulaCodeSequence'],\n    '1029': ['LO', '1', 'IOLFormulaDetail'],\n    '1033': ['FL', '1', 'KeratometerIndex'],\n    '1035': ['SQ', '1', 'SourceOfOphthalmicAxialLengthCodeSequence'],\n    '1036': ['SQ', '1', 'SourceOfCornealSizeDataCodeSequence'],\n    '1037': ['FL', '1', 'TargetRefraction'],\n    '1039': ['CS', '1', 'RefractiveProcedureOccurred'],\n    '1040': ['SQ', '1', 'RefractiveSurgeryTypeCodeSequence'],\n    '1044': ['SQ', '1', 'OphthalmicUltrasoundMethodCodeSequence'],\n    '1045': ['SQ', '1', 'SurgicallyInducedAstigmatismSequence'],\n    '1046': ['CS', '1', 'TypeOfOpticalCorrection'],\n    '1047': ['SQ', '1', 'ToricIOLPowerSequence'],\n    '1048': ['SQ', '1', 'PredictedToricErrorSequence'],\n    '1049': ['CS', '1', 'PreSelectedForImplantation'],\n    '104A': ['SQ', '1', 'ToricIOLPowerForExactEmmetropiaSequence'],\n    '104B': ['SQ', '1', 'ToricIOLPowerForExactTargetRefractionSequence'],\n    '1050': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsSequence'],\n    '1053': ['FL', '1', 'IOLPower'],\n    '1054': ['FL', '1', 'PredictedRefractiveError'],\n    '1059': ['FL', '1', 'OphthalmicAxialLengthVelocity'],\n    '1065': ['LO', '1', 'LensStatusDescription'],\n    '1066': ['LO', '1', 'VitreousStatusDescription'],\n    '1090': ['SQ', '1', 'IOLPowerSequence'],\n    '1092': ['SQ', '1', 'LensConstantSequence'],\n    '1093': ['LO', '1', 'IOLManufacturer'],\n    '1094': ['LO', '1', 'LensConstantDescription'],\n    '1095': ['LO', '1', 'ImplantName'],\n    '1096': ['SQ', '1', 'KeratometryMeasurementTypeCodeSequence'],\n    '1097': ['LO', '1', 'ImplantPartNumber'],\n    '1100': ['SQ', '1', 'ReferencedOphthalmicAxialMeasurementsSequence'],\n    '1101': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsSegmentNameCodeSequence'],\n    '1103': ['SQ', '1', 'RefractiveErrorBeforeRefractiveSurgeryCodeSequence'],\n    '1121': ['FL', '1', 'IOLPowerForExactEmmetropia'],\n    '1122': ['FL', '1', 'IOLPowerForExactTargetRefraction'],\n    '1125': ['SQ', '1', 'AnteriorChamberDepthDefinitionCodeSequence'],\n    '1127': ['SQ', '1', 'LensThicknessSequence'],\n    '1128': ['SQ', '1', 'AnteriorChamberDepthSequence'],\n    '112A': ['SQ', '1', 'CalculationCommentSequence'],\n    '112B': ['CS', '1', 'CalculationCommentType'],\n    '112C': ['LT', '1', 'CalculationComment'],\n    '1130': ['FL', '1', 'LensThickness'],\n    '1131': ['FL', '1', 'AnteriorChamberDepth'],\n    '1132': ['SQ', '1', 'SourceOfLensThicknessDataCodeSequence'],\n    '1133': ['SQ', '1', 'SourceOfAnteriorChamberDepthDataCodeSequence'],\n    '1134': ['SQ', '1', 'SourceOfRefractiveMeasurementsSequence'],\n    '1135': ['SQ', '1', 'SourceOfRefractiveMeasurementsCodeSequence'],\n    '1140': ['CS', '1', 'OphthalmicAxialLengthMeasurementModified'],\n    '1150': ['SQ', '1', 'OphthalmicAxialLengthDataSourceCodeSequence'],\n    '1153': ['SQ', '1', 'OphthalmicAxialLengthAcquisitionMethodCodeSequence'],\n    '1155': ['FL', '1', 'SignalToNoiseRatio'],\n    '1159': ['LO', '1', 'OphthalmicAxialLengthDataSourceDescription'],\n    '1210': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsTotalLengthSequence'],\n    '1211': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsSegmentalLengthSequence'],\n    '1212': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsLengthSummationSequence'],\n    '1220': ['SQ', '1', 'UltrasoundOphthalmicAxialLengthMeasurementsSequence'],\n    '1225': ['SQ', '1', 'OpticalOphthalmicAxialLengthMeasurementsSequence'],\n    '1230': ['SQ', '1', 'UltrasoundSelectedOphthalmicAxialLengthSequence'],\n    '1250': ['SQ', '1', 'OphthalmicAxialLengthSelectionMethodCodeSequence'],\n    '1255': ['SQ', '1', 'OpticalSelectedOphthalmicAxialLengthSequence'],\n    '1257': ['SQ', '1', 'SelectedSegmentalOphthalmicAxialLengthSequence'],\n    '1260': ['SQ', '1', 'SelectedTotalOphthalmicAxialLengthSequence'],\n    '1262': ['SQ', '1', 'OphthalmicAxialLengthQualityMetricSequence'],\n    '1265': ['SQ', '1', 'OphthalmicAxialLengthQualityMetricTypeCodeSequence'],\n    '1273': ['LO', '1', 'OphthalmicAxialLengthQualityMetricTypeDescription'],\n    '1300': ['SQ', '1', 'IntraocularLensCalculationsRightEyeSequence'],\n    '1310': ['SQ', '1', 'IntraocularLensCalculationsLeftEyeSequence'],\n    '1330': ['SQ', '1', 'ReferencedOphthalmicAxialLengthMeasurementQCImageSequence'],\n    '1415': ['CS', '1', 'OphthalmicMappingDeviceType'],\n    '1420': ['SQ', '1', 'AcquisitionMethodCodeSequence'],\n    '1423': ['SQ', '1', 'AcquisitionMethodAlgorithmSequence'],\n    '1436': ['SQ', '1', 'OphthalmicThicknessMapTypeCodeSequence'],\n    '1443': ['SQ', '1', 'OphthalmicThicknessMappingNormalsSequence'],\n    '1445': ['SQ', '1', 'RetinalThicknessDefinitionCodeSequence'],\n    '1450': ['SQ', '1', 'PixelValueMappingToCodedConceptSequence'],\n    '1452': ['xs', '1', 'MappedPixelValue'],\n    '1454': ['LO', '1', 'PixelValueMappingExplanation'],\n    '1458': ['SQ', '1', 'OphthalmicThicknessMapQualityThresholdSequence'],\n    '1460': ['FL', '1', 'OphthalmicThicknessMapThresholdQualityRating'],\n    '1463': ['FL', '2', 'AnatomicStructureReferencePoint'],\n    '1465': ['SQ', '1', 'RegistrationToLocalizerSequence'],\n    '1466': ['CS', '1', 'RegisteredLocalizerUnits'],\n    '1467': ['FL', '2', 'RegisteredLocalizerTopLeftHandCorner'],\n    '1468': ['FL', '2', 'RegisteredLocalizerBottomRightHandCorner'],\n    '1470': ['SQ', '1', 'OphthalmicThicknessMapQualityRatingSequence'],\n    '1472': ['SQ', '1', 'RelevantOPTAttributesSequence'],\n    '1512': ['SQ', '1', 'TransformationMethodCodeSequence'],\n    '1513': ['SQ', '1', 'TransformationAlgorithmSequence'],\n    '1515': ['CS', '1', 'OphthalmicAxialLengthMethod'],\n    '1517': ['FL', '1', 'OphthalmicFOV'],\n    '1518': ['SQ', '1', 'TwoDimensionalToThreeDimensionalMapSequence'],\n    '1525': ['SQ', '1', 'WideFieldOphthalmicPhotographyQualityRatingSequence'],\n    '1526': ['SQ', '1', 'WideFieldOphthalmicPhotographyQualityThresholdSequence'],\n    '1527': ['FL', '1', 'WideFieldOphthalmicPhotographyThresholdQualityRating'],\n    '1528': ['FL', '1', 'XCoordinatesCenterPixelViewAngle'],\n    '1529': ['FL', '1', 'YCoordinatesCenterPixelViewAngle'],\n    '1530': ['UL', '1', 'NumberOfMapPoints'],\n    '1531': ['OF', '1', 'TwoDimensionalToThreeDimensionalMapData'],\n    '1612': ['SQ', '1', 'DerivationAlgorithmSequence'],\n    '1615': ['SQ', '1', 'OphthalmicImageTypeCodeSequence'],\n    '1616': ['LO', '1', 'OphthalmicImageTypeDescription'],\n    '1618': ['SQ', '1', 'ScanPatternTypeCodeSequence'],\n    '1620': ['SQ', '1', 'ReferencedSurfaceMeshIdentificationSequence'],\n    '1622': ['CS', '1', 'OphthalmicVolumetricPropertiesFlag'],\n    '1624': ['FL', '1', 'OphthalmicAnatomicReferencePointXCoordinate'],\n    '1626': ['FL', '1', 'OphthalmicAnatomicReferencePointYCoordinate'],\n    '1628': ['SQ', '1', 'OphthalmicEnFaceImageQualityRatingSequence'],\n    '1630': ['DS', '1', 'QualityThreshold'],\n    '1640': ['SQ', '1', 'OCTBscanAnalysisAcquisitionParametersSequence'],\n    '1642': ['UL', '1', 'NumberOfBscansPerFrame'],\n    '1643': ['FL', '1', 'BscanSlabThickness'],\n    '1644': ['FL', '1', 'DistanceBetweenBscanSlabs'],\n    '1645': ['FL', '1', 'BscanCycleTime'],\n    '1646': ['FL', '1-n', 'BscanCycleTimeVector'],\n    '1649': ['FL', '1', 'AscanRate'],\n    '1650': ['FL', '1', 'BscanRate'],\n    '1658': ['UL', '1', 'SurfaceMeshZPixelOffset']\n  },\n  '0024': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['FL', '1', 'VisualFieldHorizontalExtent'],\n    '0011': ['FL', '1', 'VisualFieldVerticalExtent'],\n    '0012': ['CS', '1', 'VisualFieldShape'],\n    '0016': ['SQ', '1', 'ScreeningTestModeCodeSequence'],\n    '0018': ['FL', '1', 'MaximumStimulusLuminance'],\n    '0020': ['FL', '1', 'BackgroundLuminance'],\n    '0021': ['SQ', '1', 'StimulusColorCodeSequence'],\n    '0024': ['SQ', '1', 'BackgroundIlluminationColorCodeSequence'],\n    '0025': ['FL', '1', 'StimulusArea'],\n    '0028': ['FL', '1', 'StimulusPresentationTime'],\n    '0032': ['SQ', '1', 'FixationSequence'],\n    '0033': ['SQ', '1', 'FixationMonitoringCodeSequence'],\n    '0034': ['SQ', '1', 'VisualFieldCatchTrialSequence'],\n    '0035': ['US', '1', 'FixationCheckedQuantity'],\n    '0036': ['US', '1', 'PatientNotProperlyFixatedQuantity'],\n    '0037': ['CS', '1', 'PresentedVisualStimuliDataFlag'],\n    '0038': ['US', '1', 'NumberOfVisualStimuli'],\n    '0039': ['CS', '1', 'ExcessiveFixationLossesDataFlag'],\n    '0040': ['CS', '1', 'ExcessiveFixationLosses'],\n    '0042': ['US', '1', 'StimuliRetestingQuantity'],\n    '0044': ['LT', '1', 'CommentsOnPatientPerformanceOfVisualField'],\n    '0045': ['CS', '1', 'FalseNegativesEstimateFlag'],\n    '0046': ['FL', '1', 'FalseNegativesEstimate'],\n    '0048': ['US', '1', 'NegativeCatchTrialsQuantity'],\n    '0050': ['US', '1', 'FalseNegativesQuantity'],\n    '0051': ['CS', '1', 'ExcessiveFalseNegativesDataFlag'],\n    '0052': ['CS', '1', 'ExcessiveFalseNegatives'],\n    '0053': ['CS', '1', 'FalsePositivesEstimateFlag'],\n    '0054': ['FL', '1', 'FalsePositivesEstimate'],\n    '0055': ['CS', '1', 'CatchTrialsDataFlag'],\n    '0056': ['US', '1', 'PositiveCatchTrialsQuantity'],\n    '0057': ['CS', '1', 'TestPointNormalsDataFlag'],\n    '0058': ['SQ', '1', 'TestPointNormalsSequence'],\n    '0059': ['CS', '1', 'GlobalDeviationProbabilityNormalsFlag'],\n    '0060': ['US', '1', 'FalsePositivesQuantity'],\n    '0061': ['CS', '1', 'ExcessiveFalsePositivesDataFlag'],\n    '0062': ['CS', '1', 'ExcessiveFalsePositives'],\n    '0063': ['CS', '1', 'VisualFieldTestNormalsFlag'],\n    '0064': ['SQ', '1', 'ResultsNormalsSequence'],\n    '0065': ['SQ', '1', 'AgeCorrectedSensitivityDeviationAlgorithmSequence'],\n    '0066': ['FL', '1', 'GlobalDeviationFromNormal'],\n    '0067': ['SQ', '1', 'GeneralizedDefectSensitivityDeviationAlgorithmSequence'],\n    '0068': ['FL', '1', 'LocalizedDeviationFromNormal'],\n    '0069': ['LO', '1', 'PatientReliabilityIndicator'],\n    '0070': ['FL', '1', 'VisualFieldMeanSensitivity'],\n    '0071': ['FL', '1', 'GlobalDeviationProbability'],\n    '0072': ['CS', '1', 'LocalDeviationProbabilityNormalsFlag'],\n    '0073': ['FL', '1', 'LocalizedDeviationProbability'],\n    '0074': ['CS', '1', 'ShortTermFluctuationCalculated'],\n    '0075': ['FL', '1', 'ShortTermFluctuation'],\n    '0076': ['CS', '1', 'ShortTermFluctuationProbabilityCalculated'],\n    '0077': ['FL', '1', 'ShortTermFluctuationProbability'],\n    '0078': ['CS', '1', 'CorrectedLocalizedDeviationFromNormalCalculated'],\n    '0079': ['FL', '1', 'CorrectedLocalizedDeviationFromNormal'],\n    '0080': ['CS', '1', 'CorrectedLocalizedDeviationFromNormalProbabilityCalculated'],\n    '0081': ['FL', '1', 'CorrectedLocalizedDeviationFromNormalProbability'],\n    '0083': ['SQ', '1', 'GlobalDeviationProbabilitySequence'],\n    '0085': ['SQ', '1', 'LocalizedDeviationProbabilitySequence'],\n    '0086': ['CS', '1', 'FovealSensitivityMeasured'],\n    '0087': ['FL', '1', 'FovealSensitivity'],\n    '0088': ['FL', '1', 'VisualFieldTestDuration'],\n    '0089': ['SQ', '1', 'VisualFieldTestPointSequence'],\n    '0090': ['FL', '1', 'VisualFieldTestPointXCoordinate'],\n    '0091': ['FL', '1', 'VisualFieldTestPointYCoordinate'],\n    '0092': ['FL', '1', 'AgeCorrectedSensitivityDeviationValue'],\n    '0093': ['CS', '1', 'StimulusResults'],\n    '0094': ['FL', '1', 'SensitivityValue'],\n    '0095': ['CS', '1', 'RetestStimulusSeen'],\n    '0096': ['FL', '1', 'RetestSensitivityValue'],\n    '0097': ['SQ', '1', 'VisualFieldTestPointNormalsSequence'],\n    '0098': ['FL', '1', 'QuantifiedDefect'],\n    '0100': ['FL', '1', 'AgeCorrectedSensitivityDeviationProbabilityValue'],\n    '0102': ['CS', '1', 'GeneralizedDefectCorrectedSensitivityDeviationFlag'],\n    '0103': ['FL', '1', 'GeneralizedDefectCorrectedSensitivityDeviationValue'],\n    '0104': ['FL', '1', 'GeneralizedDefectCorrectedSensitivityDeviationProbabilityValue'],\n    '0105': ['FL', '1', 'MinimumSensitivityValue'],\n    '0106': ['CS', '1', 'BlindSpotLocalized'],\n    '0107': ['FL', '1', 'BlindSpotXCoordinate'],\n    '0108': ['FL', '1', 'BlindSpotYCoordinate'],\n    '0110': ['SQ', '1', 'VisualAcuityMeasurementSequence'],\n    '0112': ['SQ', '1', 'RefractiveParametersUsedOnPatientSequence'],\n    '0113': ['CS', '1', 'MeasurementLaterality'],\n    '0114': ['SQ', '1', 'OphthalmicPatientClinicalInformationLeftEyeSequence'],\n    '0115': ['SQ', '1', 'OphthalmicPatientClinicalInformationRightEyeSequence'],\n    '0117': ['CS', '1', 'FovealPointNormativeDataFlag'],\n    '0118': ['FL', '1', 'FovealPointProbabilityValue'],\n    '0120': ['CS', '1', 'ScreeningBaselineMeasured'],\n    '0122': ['SQ', '1', 'ScreeningBaselineMeasuredSequence'],\n    '0124': ['CS', '1', 'ScreeningBaselineType'],\n    '0126': ['FL', '1', 'ScreeningBaselineValue'],\n    '0202': ['LO', '1', 'AlgorithmSource'],\n    '0306': ['LO', '1', 'DataSetName'],\n    '0307': ['LO', '1', 'DataSetVersion'],\n    '0308': ['LO', '1', 'DataSetSource'],\n    '0309': ['LO', '1', 'DataSetDescription'],\n    '0317': ['SQ', '1', 'VisualFieldTestReliabilityGlobalIndexSequence'],\n    '0320': ['SQ', '1', 'VisualFieldGlobalResultsIndexSequence'],\n    '0325': ['SQ', '1', 'DataObservationSequence'],\n    '0338': ['CS', '1', 'IndexNormalsFlag'],\n    '0341': ['FL', '1', 'IndexProbability'],\n    '0344': ['SQ', '1', 'IndexProbabilitySequence']\n  },\n  '0028': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['US', '1', 'SamplesPerPixel'],\n    '0003': ['US', '1', 'SamplesPerPixelUsed'],\n    '0004': ['CS', '1', 'PhotometricInterpretation'],\n    '0005': ['US', '1', 'ImageDimensions'],\n    '0006': ['US', '1', 'PlanarConfiguration'],\n    '0008': ['IS', '1', 'NumberOfFrames'],\n    '0009': ['AT', '1-n', 'FrameIncrementPointer'],\n    '000A': ['AT', '1-n', 'FrameDimensionPointer'],\n    '0010': ['US', '1', 'Rows'],\n    '0011': ['US', '1', 'Columns'],\n    '0012': ['US', '1', 'Planes'],\n    '0014': ['US', '1', 'UltrasoundColorDataPresent'],\n    '0020': ['', '', ''],\n    '0030': ['DS', '2', 'PixelSpacing'],\n    '0031': ['DS', '2', 'ZoomFactor'],\n    '0032': ['DS', '2', 'ZoomCenter'],\n    '0034': ['IS', '2', 'PixelAspectRatio'],\n    '0040': ['CS', '1', 'ImageFormat'],\n    '0050': ['LO', '1-n', 'ManipulatedImage'],\n    '0051': ['CS', '1-n', 'CorrectedImage'],\n    '005F': ['LO', '1', 'CompressionRecognitionCode'],\n    '0060': ['CS', '1', 'CompressionCode'],\n    '0061': ['SH', '1', 'CompressionOriginator'],\n    '0062': ['LO', '1', 'CompressionLabel'],\n    '0063': ['SH', '1', 'CompressionDescription'],\n    '0065': ['CS', '1-n', 'CompressionSequence'],\n    '0066': ['AT', '1-n', 'CompressionStepPointers'],\n    '0068': ['US', '1', 'RepeatInterval'],\n    '0069': ['US', '1', 'BitsGrouped'],\n    '0070': ['US', '1-n', 'PerimeterTable'],\n    '0071': ['xs', '1', 'PerimeterValue'],\n    '0080': ['US', '1', 'PredictorRows'],\n    '0081': ['US', '1', 'PredictorColumns'],\n    '0082': ['US', '1-n', 'PredictorConstants'],\n    '0090': ['CS', '1', 'BlockedPixels'],\n    '0091': ['US', '1', 'BlockRows'],\n    '0092': ['US', '1', 'BlockColumns'],\n    '0093': ['US', '1', 'RowOverlap'],\n    '0094': ['US', '1', 'ColumnOverlap'],\n    '0100': ['US', '1', 'BitsAllocated'],\n    '0101': ['US', '1', 'BitsStored'],\n    '0102': ['US', '1', 'HighBit'],\n    '0103': ['US', '1', 'PixelRepresentation'],\n    '0104': ['xs', '1', 'SmallestValidPixelValue'],\n    '0105': ['xs', '1', 'LargestValidPixelValue'],\n    '0106': ['xs', '1', 'SmallestImagePixelValue'],\n    '0107': ['xs', '1', 'LargestImagePixelValue'],\n    '0108': ['xs', '1', 'SmallestPixelValueInSeries'],\n    '0109': ['xs', '1', 'LargestPixelValueInSeries'],\n    '0110': ['xs', '1', 'SmallestImagePixelValueInPlane'],\n    '0111': ['xs', '1', 'LargestImagePixelValueInPlane'],\n    '0120': ['xs', '1', 'PixelPaddingValue'],\n    '0121': ['xs', '1', 'PixelPaddingRangeLimit'],\n    '0122': ['FL', '1', 'FloatPixelPaddingValue'],\n    '0123': ['FD', '1', 'DoubleFloatPixelPaddingValue'],\n    '0124': ['FL', '1', 'FloatPixelPaddingRangeLimit'],\n    '0125': ['FD', '1', 'DoubleFloatPixelPaddingRangeLimit'],\n    '0200': ['US', '1', 'ImageLocation'],\n    '0300': ['CS', '1', 'QualityControlImage'],\n    '0301': ['CS', '1', 'BurnedInAnnotation'],\n    '0302': ['CS', '1', 'RecognizableVisualFeatures'],\n    '0303': ['CS', '1', 'LongitudinalTemporalInformationModified'],\n    '0304': ['UI', '1', 'ReferencedColorPaletteInstanceUID'],\n    '0400': ['LO', '1', 'TransformLabel'],\n    '0401': ['LO', '1', 'TransformVersionNumber'],\n    '0402': ['US', '1', 'NumberOfTransformSteps'],\n    '0403': ['LO', '1-n', 'SequenceOfCompressedData'],\n    '0404': ['AT', '1-n', 'DetailsOfCoefficients'],\n    '04x0': ['US', '1', 'RowsForNthOrderCoefficients'],\n    '04x1': ['US', '1', 'ColumnsForNthOrderCoefficients'],\n    '04x2': ['LO', '1-n', 'CoefficientCoding'],\n    '04x3': ['AT', '1-n', 'CoefficientCodingPointers'],\n    '0700': ['LO', '1', 'DCTLabel'],\n    '0701': ['CS', '1-n', 'DataBlockDescription'],\n    '0702': ['AT', '1-n', 'DataBlock'],\n    '0710': ['US', '1', 'NormalizationFactorFormat'],\n    '0720': ['US', '1', 'ZonalMapNumberFormat'],\n    '0721': ['AT', '1-n', 'ZonalMapLocation'],\n    '0722': ['US', '1', 'ZonalMapFormat'],\n    '0730': ['US', '1', 'AdaptiveMapFormat'],\n    '0740': ['US', '1', 'CodeNumberFormat'],\n    '08x0': ['CS', '1-n', 'CodeLabel'],\n    '08x2': ['US', '1', 'NumberOfTables'],\n    '08x3': ['AT', '1-n', 'CodeTableLocation'],\n    '08x4': ['US', '1', 'BitsForCodeWord'],\n    '08x8': ['AT', '1-n', 'ImageDataLocation'],\n    '0A02': ['CS', '1', 'PixelSpacingCalibrationType'],\n    '0A04': ['LO', '1', 'PixelSpacingCalibrationDescription'],\n    '1040': ['CS', '1', 'PixelIntensityRelationship'],\n    '1041': ['SS', '1', 'PixelIntensityRelationshipSign'],\n    '1050': ['DS', '1-n', 'WindowCenter'],\n    '1051': ['DS', '1-n', 'WindowWidth'],\n    '1052': ['DS', '1', 'RescaleIntercept'],\n    '1053': ['DS', '1', 'RescaleSlope'],\n    '1054': ['LO', '1', 'RescaleType'],\n    '1055': ['LO', '1-n', 'WindowCenterWidthExplanation'],\n    '1056': ['CS', '1', 'VOILUTFunction'],\n    '1080': ['CS', '1', 'GrayScale'],\n    '1090': ['CS', '1', 'RecommendedViewingMode'],\n    '1100': ['xs', '3', 'GrayLookupTableDescriptor'],\n    '1101': ['xs', '3', 'RedPaletteColorLookupTableDescriptor'],\n    '1102': ['xs', '3', 'GreenPaletteColorLookupTableDescriptor'],\n    '1103': ['xs', '3', 'BluePaletteColorLookupTableDescriptor'],\n    '1104': ['US', '3', 'AlphaPaletteColorLookupTableDescriptor'],\n    '1111': ['xs', '4', 'LargeRedPaletteColorLookupTableDescriptor'],\n    '1112': ['xs', '4', 'LargeGreenPaletteColorLookupTableDescriptor'],\n    '1113': ['xs', '4', 'LargeBluePaletteColorLookupTableDescriptor'],\n    '1199': ['UI', '1', 'PaletteColorLookupTableUID'],\n    '1200': ['xs', '1-n or 1', 'GrayLookupTableData'],\n    '1201': ['OW', '1', 'RedPaletteColorLookupTableData'],\n    '1202': ['OW', '1', 'GreenPaletteColorLookupTableData'],\n    '1203': ['OW', '1', 'BluePaletteColorLookupTableData'],\n    '1204': ['OW', '1', 'AlphaPaletteColorLookupTableData'],\n    '1211': ['OW', '1', 'LargeRedPaletteColorLookupTableData'],\n    '1212': ['OW', '1', 'LargeGreenPaletteColorLookupTableData'],\n    '1213': ['OW', '1', 'LargeBluePaletteColorLookupTableData'],\n    '1214': ['UI', '1', 'LargePaletteColorLookupTableUID'],\n    '1221': ['OW', '1', 'SegmentedRedPaletteColorLookupTableData'],\n    '1222': ['OW', '1', 'SegmentedGreenPaletteColorLookupTableData'],\n    '1223': ['OW', '1', 'SegmentedBluePaletteColorLookupTableData'],\n    '1224': ['OW', '1', 'SegmentedAlphaPaletteColorLookupTableData'],\n    '1230': ['SQ', '1', 'StoredValueColorRangeSequence'],\n    '1231': ['FD', '1', 'MinimumStoredValueMapped'],\n    '1232': ['FD', '1', 'MaximumStoredValueMapped'],\n    '1300': ['CS', '1', 'BreastImplantPresent'],\n    '1350': ['CS', '1', 'PartialView'],\n    '1351': ['ST', '1', 'PartialViewDescription'],\n    '1352': ['SQ', '1', 'PartialViewCodeSequence'],\n    '135A': ['CS', '1', 'SpatialLocationsPreserved'],\n    '1401': ['SQ', '1', 'DataFrameAssignmentSequence'],\n    '1402': ['CS', '1', 'DataPathAssignment'],\n    '1403': ['US', '1', 'BitsMappedToColorLookupTable'],\n    '1404': ['SQ', '1', 'BlendingLUT1Sequence'],\n    '1405': ['CS', '1', 'BlendingLUT1TransferFunction'],\n    '1406': ['FD', '1', 'BlendingWeightConstant'],\n    '1407': ['US', '3', 'BlendingLookupTableDescriptor'],\n    '1408': ['OW', '1', 'BlendingLookupTableData'],\n    '140B': ['SQ', '1', 'EnhancedPaletteColorLookupTableSequence'],\n    '140C': ['SQ', '1', 'BlendingLUT2Sequence'],\n    '140D': ['CS', '1', 'BlendingLUT2TransferFunction'],\n    '140E': ['CS', '1', 'DataPathID'],\n    '140F': ['CS', '1', 'RGBLUTTransferFunction'],\n    '1410': ['CS', '1', 'AlphaLUTTransferFunction'],\n    '2000': ['OB', '1', 'ICCProfile'],\n    '2002': ['CS', '1', 'ColorSpace'],\n    '2110': ['CS', '1', 'LossyImageCompression'],\n    '2112': ['DS', '1-n', 'LossyImageCompressionRatio'],\n    '2114': ['CS', '1-n', 'LossyImageCompressionMethod'],\n    '3000': ['SQ', '1', 'ModalityLUTSequence'],\n    '3002': ['xs', '3', 'LUTDescriptor'],\n    '3003': ['LO', '1', 'LUTExplanation'],\n    '3004': ['LO', '1', 'ModalityLUTType'],\n    '3006': ['xx', '1-n or 1', 'LUTData'],\n    '3010': ['SQ', '1', 'VOILUTSequence'],\n    '3110': ['SQ', '1', 'SoftcopyVOILUTSequence'],\n    '4000': ['LT', '1', 'ImagePresentationComments'],\n    '5000': ['SQ', '1', 'BiPlaneAcquisitionSequence'],\n    '6010': ['US', '1', 'RepresentativeFrameNumber'],\n    '6020': ['US', '1-n', 'FrameNumbersOfInterest'],\n    '6022': ['LO', '1-n', 'FrameOfInterestDescription'],\n    '6023': ['CS', '1-n', 'FrameOfInterestType'],\n    '6030': ['US', '1-n', 'MaskPointers'],\n    '6040': ['US', '1-n', 'RWavePointer'],\n    '6100': ['SQ', '1', 'MaskSubtractionSequence'],\n    '6101': ['CS', '1', 'MaskOperation'],\n    '6102': ['US', '2-2n', 'ApplicableFrameRange'],\n    '6110': ['US', '1-n', 'MaskFrameNumbers'],\n    '6112': ['US', '1', 'ContrastFrameAveraging'],\n    '6114': ['FL', '2', 'MaskSubPixelShift'],\n    '6120': ['SS', '1', 'TIDOffset'],\n    '6190': ['ST', '1', 'MaskOperationExplanation'],\n    '7000': ['SQ', '1', 'EquipmentAdministratorSequence'],\n    '7001': ['US', '1', 'NumberOfDisplaySubsystems'],\n    '7002': ['US', '1', 'CurrentConfigurationID'],\n    '7003': ['US', '1', 'DisplaySubsystemID'],\n    '7004': ['SH', '1', 'DisplaySubsystemName'],\n    '7005': ['LO', '1', 'DisplaySubsystemDescription'],\n    '7006': ['CS', '1', 'SystemStatus'],\n    '7007': ['LO', '1', 'SystemStatusComment'],\n    '7008': ['SQ', '1', 'TargetLuminanceCharacteristicsSequence'],\n    '7009': ['US', '1', 'LuminanceCharacteristicsID'],\n    '700A': ['SQ', '1', 'DisplaySubsystemConfigurationSequence'],\n    '700B': ['US', '1', 'ConfigurationID'],\n    '700C': ['SH', '1', 'ConfigurationName'],\n    '700D': ['LO', '1', 'ConfigurationDescription'],\n    '700E': ['US', '1', 'ReferencedTargetLuminanceCharacteristicsID'],\n    '700F': ['SQ', '1', 'QAResultsSequence'],\n    '7010': ['SQ', '1', 'DisplaySubsystemQAResultsSequence'],\n    '7011': ['SQ', '1', 'ConfigurationQAResultsSequence'],\n    '7012': ['SQ', '1', 'MeasurementEquipmentSequence'],\n    '7013': ['CS', '1-n', 'MeasurementFunctions'],\n    '7014': ['CS', '1', 'MeasurementEquipmentType'],\n    '7015': ['SQ', '1', 'VisualEvaluationResultSequence'],\n    '7016': ['SQ', '1', 'DisplayCalibrationResultSequence'],\n    '7017': ['US', '1', 'DDLValue'],\n    '7018': ['FL', '2', 'CIExyWhitePoint'],\n    '7019': ['CS', '1', 'DisplayFunctionType'],\n    '701A': ['FL', '1', 'GammaValue'],\n    '701B': ['US', '1', 'NumberOfLuminancePoints'],\n    '701C': ['SQ', '1', 'LuminanceResponseSequence'],\n    '701D': ['FL', '1', 'TargetMinimumLuminance'],\n    '701E': ['FL', '1', 'TargetMaximumLuminance'],\n    '701F': ['FL', '1', 'LuminanceValue'],\n    '7020': ['LO', '1', 'LuminanceResponseDescription'],\n    '7021': ['CS', '1', 'WhitePointFlag'],\n    '7022': ['SQ', '1', 'DisplayDeviceTypeCodeSequence'],\n    '7023': ['SQ', '1', 'DisplaySubsystemSequence'],\n    '7024': ['SQ', '1', 'LuminanceResultSequence'],\n    '7025': ['CS', '1', 'AmbientLightValueSource'],\n    '7026': ['CS', '1-n', 'MeasuredCharacteristics'],\n    '7027': ['SQ', '1', 'LuminanceUniformityResultSequence'],\n    '7028': ['SQ', '1', 'VisualEvaluationTestSequence'],\n    '7029': ['CS', '1', 'TestResult'],\n    '702A': ['LO', '1', 'TestResultComment'],\n    '702B': ['CS', '1', 'TestImageValidation'],\n    '702C': ['SQ', '1', 'TestPatternCodeSequence'],\n    '702D': ['SQ', '1', 'MeasurementPatternCodeSequence'],\n    '702E': ['SQ', '1', 'VisualEvaluationMethodCodeSequence'],\n    '7FE0': ['UR', '1', 'PixelDataProviderURL'],\n    '9001': ['UL', '1', 'DataPointRows'],\n    '9002': ['UL', '1', 'DataPointColumns'],\n    '9003': ['CS', '1', 'SignalDomainColumns'],\n    '9099': ['US', '1', 'LargestMonochromePixelValue'],\n    '9108': ['CS', '1', 'DataRepresentation'],\n    '9110': ['SQ', '1', 'PixelMeasuresSequence'],\n    '9132': ['SQ', '1', 'FrameVOILUTSequence'],\n    '9145': ['SQ', '1', 'PixelValueTransformationSequence'],\n    '9235': ['CS', '1', 'SignalDomainRows'],\n    '9411': ['FL', '1', 'DisplayFilterPercentage'],\n    '9415': ['SQ', '1', 'FramePixelShiftSequence'],\n    '9416': ['US', '1', 'SubtractionItemID'],\n    '9422': ['SQ', '1', 'PixelIntensityRelationshipLUTSequence'],\n    '9443': ['SQ', '1', 'FramePixelDataPropertiesSequence'],\n    '9444': ['CS', '1', 'GeometricalProperties'],\n    '9445': ['FL', '1', 'GeometricMaximumDistortion'],\n    '9446': ['CS', '1-n', 'ImageProcessingApplied'],\n    '9454': ['CS', '1', 'MaskSelectionMode'],\n    '9474': ['CS', '1', 'LUTFunction'],\n    '9478': ['FL', '1', 'MaskVisibilityPercentage'],\n    '9501': ['SQ', '1', 'PixelShiftSequence'],\n    '9502': ['SQ', '1', 'RegionPixelShiftSequence'],\n    '9503': ['SS', '2-2n', 'VerticesOfTheRegion'],\n    '9505': ['SQ', '1', 'MultiFramePresentationSequence'],\n    '9506': ['US', '2-2n', 'PixelShiftFrameRange'],\n    '9507': ['US', '2-2n', 'LUTFrameRange'],\n    '9520': ['DS', '16', 'ImageToEquipmentMappingMatrix'],\n    '9537': ['CS', '1', 'EquipmentCoordinateSystemIdentification']\n  },\n  '0032': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '000A': ['CS', '1', 'StudyStatusID'],\n    '000C': ['CS', '1', 'StudyPriorityID'],\n    '0012': ['LO', '1', 'StudyIDIssuer'],\n    '0032': ['DA', '1', 'StudyVerifiedDate'],\n    '0033': ['TM', '1', 'StudyVerifiedTime'],\n    '0034': ['DA', '1', 'StudyReadDate'],\n    '0035': ['TM', '1', 'StudyReadTime'],\n    '1000': ['DA', '1', 'ScheduledStudyStartDate'],\n    '1001': ['TM', '1', 'ScheduledStudyStartTime'],\n    '1010': ['DA', '1', 'ScheduledStudyStopDate'],\n    '1011': ['TM', '1', 'ScheduledStudyStopTime'],\n    '1020': ['LO', '1', 'ScheduledStudyLocation'],\n    '1021': ['AE', '1-n', 'ScheduledStudyLocationAETitle'],\n    '1030': ['LO', '1', 'ReasonForStudy'],\n    '1031': ['SQ', '1', 'RequestingPhysicianIdentificationSequence'],\n    '1032': ['PN', '1', 'RequestingPhysician'],\n    '1033': ['LO', '1', 'RequestingService'],\n    '1034': ['SQ', '1', 'RequestingServiceCodeSequence'],\n    '1040': ['DA', '1', 'StudyArrivalDate'],\n    '1041': ['TM', '1', 'StudyArrivalTime'],\n    '1050': ['DA', '1', 'StudyCompletionDate'],\n    '1051': ['TM', '1', 'StudyCompletionTime'],\n    '1055': ['CS', '1', 'StudyComponentStatusID'],\n    '1060': ['LO', '1', 'RequestedProcedureDescription'],\n    '1064': ['SQ', '1', 'RequestedProcedureCodeSequence'],\n    '1065': ['SQ', '1', 'RequestedLateralityCodeSequence'],\n    '1066': ['UT', '1', 'ReasonForVisit'],\n    '1067': ['SQ', '1', 'ReasonForVisitCodeSequence'],\n    '1070': ['LO', '1', 'RequestedContrastAgent'],\n    '4000': ['LT', '1', 'StudyComments']\n  },\n  '0034': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'FlowIdentifierSequence'],\n    '0002': ['OB', '1', 'FlowIdentifier'],\n    '0003': ['UI', '1', 'FlowTransferSyntaxUID'],\n    '0004': ['UL', '1', 'FlowRTPSamplingRate'],\n    '0005': ['OB', '1', 'SourceIdentifier'],\n    '0007': ['OB', '1', 'FrameOriginTimestamp'],\n    '0008': ['CS', '1', 'IncludesImagingSubject'],\n    '0009': ['SQ', '1', 'FrameUsefulnessGroupSequence'],\n    '000A': ['SQ', '1', 'RealTimeBulkDataFlowSequence'],\n    '000B': ['SQ', '1', 'CameraPositionGroupSequence'],\n    '000C': ['CS', '1', 'IncludesInformation'],\n    '000D': ['SQ', '1', 'TimeOfFrameGroupSequence']\n  },\n  '0038': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0004': ['SQ', '1', 'ReferencedPatientAliasSequence'],\n    '0008': ['CS', '1', 'VisitStatusID'],\n    '0010': ['LO', '1', 'AdmissionID'],\n    '0011': ['LO', '1', 'IssuerOfAdmissionID'],\n    '0014': ['SQ', '1', 'IssuerOfAdmissionIDSequence'],\n    '0016': ['LO', '1', 'RouteOfAdmissions'],\n    '001A': ['DA', '1', 'ScheduledAdmissionDate'],\n    '001B': ['TM', '1', 'ScheduledAdmissionTime'],\n    '001C': ['DA', '1', 'ScheduledDischargeDate'],\n    '001D': ['TM', '1', 'ScheduledDischargeTime'],\n    '001E': ['LO', '1', 'ScheduledPatientInstitutionResidence'],\n    '0020': ['DA', '1', 'AdmittingDate'],\n    '0021': ['TM', '1', 'AdmittingTime'],\n    '0030': ['DA', '1', 'DischargeDate'],\n    '0032': ['TM', '1', 'DischargeTime'],\n    '0040': ['LO', '1', 'DischargeDiagnosisDescription'],\n    '0044': ['SQ', '1', 'DischargeDiagnosisCodeSequence'],\n    '0050': ['LO', '1', 'SpecialNeeds'],\n    '0060': ['LO', '1', 'ServiceEpisodeID'],\n    '0061': ['LO', '1', 'IssuerOfServiceEpisodeID'],\n    '0062': ['LO', '1', 'ServiceEpisodeDescription'],\n    '0064': ['SQ', '1', 'IssuerOfServiceEpisodeIDSequence'],\n    '0100': ['SQ', '1', 'PertinentDocumentsSequence'],\n    '0101': ['SQ', '1', 'PertinentResourcesSequence'],\n    '0102': ['LO', '1', 'ResourceDescription'],\n    '0300': ['LO', '1', 'CurrentPatientLocation'],\n    '0400': ['LO', '1', 'PatientInstitutionResidence'],\n    '0500': ['LO', '1', 'PatientState'],\n    '0502': ['SQ', '1', 'PatientClinicalTrialParticipationSequence'],\n    '4000': ['LT', '1', 'VisitComments']\n  },\n  '003A': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0004': ['CS', '1', 'WaveformOriginality'],\n    '0005': ['US', '1', 'NumberOfWaveformChannels'],\n    '0010': ['UL', '1', 'NumberOfWaveformSamples'],\n    '001A': ['DS', '1', 'SamplingFrequency'],\n    '0020': ['SH', '1', 'MultiplexGroupLabel'],\n    '0200': ['SQ', '1', 'ChannelDefinitionSequence'],\n    '0202': ['IS', '1', 'WaveformChannelNumber'],\n    '0203': ['SH', '1', 'ChannelLabel'],\n    '0205': ['CS', '1-n', 'ChannelStatus'],\n    '0208': ['SQ', '1', 'ChannelSourceSequence'],\n    '0209': ['SQ', '1', 'ChannelSourceModifiersSequence'],\n    '020A': ['SQ', '1', 'SourceWaveformSequence'],\n    '020C': ['LO', '1', 'ChannelDerivationDescription'],\n    '0210': ['DS', '1', 'ChannelSensitivity'],\n    '0211': ['SQ', '1', 'ChannelSensitivityUnitsSequence'],\n    '0212': ['DS', '1', 'ChannelSensitivityCorrectionFactor'],\n    '0213': ['DS', '1', 'ChannelBaseline'],\n    '0214': ['DS', '1', 'ChannelTimeSkew'],\n    '0215': ['DS', '1', 'ChannelSampleSkew'],\n    '0218': ['DS', '1', 'ChannelOffset'],\n    '021A': ['US', '1', 'WaveformBitsStored'],\n    '0220': ['DS', '1', 'FilterLowFrequency'],\n    '0221': ['DS', '1', 'FilterHighFrequency'],\n    '0222': ['DS', '1', 'NotchFilterFrequency'],\n    '0223': ['DS', '1', 'NotchFilterBandwidth'],\n    '0230': ['FL', '1', 'WaveformDataDisplayScale'],\n    '0231': ['US', '3', 'WaveformDisplayBackgroundCIELabValue'],\n    '0240': ['SQ', '1', 'WaveformPresentationGroupSequence'],\n    '0241': ['US', '1', 'PresentationGroupNumber'],\n    '0242': ['SQ', '1', 'ChannelDisplaySequence'],\n    '0244': ['US', '3', 'ChannelRecommendedDisplayCIELabValue'],\n    '0245': ['FL', '1', 'ChannelPosition'],\n    '0246': ['CS', '1', 'DisplayShadingFlag'],\n    '0247': ['FL', '1', 'FractionalChannelDisplayScale'],\n    '0248': ['FL', '1', 'AbsoluteChannelDisplayScale'],\n    '0300': ['SQ', '1', 'MultiplexedAudioChannelsDescriptionCodeSequence'],\n    '0301': ['IS', '1', 'ChannelIdentificationCode'],\n    '0302': ['CS', '1', 'ChannelMode'],\n    '0310': ['UI', '1', 'MultiplexGroupUID'],\n    '0311': ['DS', '1', 'PowerlineFrequency'],\n    '0312': ['SQ', '1', 'ChannelImpedanceSequence'],\n    '0313': ['DS', '1', 'ImpedanceValue'],\n    '0314': ['DT', '1', 'ImpedanceMeasurementDateTime'],\n    '0315': ['DS', '1', 'ImpedanceMeasurementFrequency'],\n    '0316': ['CS', '1', 'ImpedanceMeasurementCurrentType']\n  },\n  '0040': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['AE', '1-n', 'ScheduledStationAETitle'],\n    '0002': ['DA', '1', 'ScheduledProcedureStepStartDate'],\n    '0003': ['TM', '1', 'ScheduledProcedureStepStartTime'],\n    '0004': ['DA', '1', 'ScheduledProcedureStepEndDate'],\n    '0005': ['TM', '1', 'ScheduledProcedureStepEndTime'],\n    '0006': ['PN', '1', 'ScheduledPerformingPhysicianName'],\n    '0007': ['LO', '1', 'ScheduledProcedureStepDescription'],\n    '0008': ['SQ', '1', 'ScheduledProtocolCodeSequence'],\n    '0009': ['SH', '1', 'ScheduledProcedureStepID'],\n    '000A': ['SQ', '1', 'StageCodeSequence'],\n    '000B': ['SQ', '1', 'ScheduledPerformingPhysicianIdentificationSequence'],\n    '0010': ['SH', '1-n', 'ScheduledStationName'],\n    '0011': ['SH', '1', 'ScheduledProcedureStepLocation'],\n    '0012': ['LO', '1', 'PreMedication'],\n    '0020': ['CS', '1', 'ScheduledProcedureStepStatus'],\n    '0026': ['SQ', '1', 'OrderPlacerIdentifierSequence'],\n    '0027': ['SQ', '1', 'OrderFillerIdentifierSequence'],\n    '0031': ['UT', '1', 'LocalNamespaceEntityID'],\n    '0032': ['UT', '1', 'UniversalEntityID'],\n    '0033': ['CS', '1', 'UniversalEntityIDType'],\n    '0035': ['CS', '1', 'IdentifierTypeCode'],\n    '0036': ['SQ', '1', 'AssigningFacilitySequence'],\n    '0039': ['SQ', '1', 'AssigningJurisdictionCodeSequence'],\n    '003A': ['SQ', '1', 'AssigningAgencyOrDepartmentCodeSequence'],\n    '0100': ['SQ', '1', 'ScheduledProcedureStepSequence'],\n    '0220': ['SQ', '1', 'ReferencedNonImageCompositeSOPInstanceSequence'],\n    '0241': ['AE', '1', 'PerformedStationAETitle'],\n    '0242': ['SH', '1', 'PerformedStationName'],\n    '0243': ['SH', '1', 'PerformedLocation'],\n    '0244': ['DA', '1', 'PerformedProcedureStepStartDate'],\n    '0245': ['TM', '1', 'PerformedProcedureStepStartTime'],\n    '0250': ['DA', '1', 'PerformedProcedureStepEndDate'],\n    '0251': ['TM', '1', 'PerformedProcedureStepEndTime'],\n    '0252': ['CS', '1', 'PerformedProcedureStepStatus'],\n    '0253': ['SH', '1', 'PerformedProcedureStepID'],\n    '0254': ['LO', '1', 'PerformedProcedureStepDescription'],\n    '0255': ['LO', '1', 'PerformedProcedureTypeDescription'],\n    '0260': ['SQ', '1', 'PerformedProtocolCodeSequence'],\n    '0261': ['CS', '1', 'PerformedProtocolType'],\n    '0270': ['SQ', '1', 'ScheduledStepAttributesSequence'],\n    '0275': ['SQ', '1', 'RequestAttributesSequence'],\n    '0280': ['ST', '1', 'CommentsOnThePerformedProcedureStep'],\n    '0281': ['SQ', '1', 'PerformedProcedureStepDiscontinuationReasonCodeSequence'],\n    '0293': ['SQ', '1', 'QuantitySequence'],\n    '0294': ['DS', '1', 'Quantity'],\n    '0295': ['SQ', '1', 'MeasuringUnitsSequence'],\n    '0296': ['SQ', '1', 'BillingItemSequence'],\n    '0300': ['US', '1', 'TotalTimeOfFluoroscopy'],\n    '0301': ['US', '1', 'TotalNumberOfExposures'],\n    '0302': ['US', '1', 'EntranceDose'],\n    '0303': ['US', '1-2', 'ExposedArea'],\n    '0306': ['DS', '1', 'DistanceSourceToEntrance'],\n    '0307': ['DS', '1', 'DistanceSourceToSupport'],\n    '030E': ['SQ', '1', 'ExposureDoseSequence'],\n    '0310': ['ST', '1', 'CommentsOnRadiationDose'],\n    '0312': ['DS', '1', 'XRayOutput'],\n    '0314': ['DS', '1', 'HalfValueLayer'],\n    '0316': ['DS', '1', 'OrganDose'],\n    '0318': ['CS', '1', 'OrganExposed'],\n    '0320': ['SQ', '1', 'BillingProcedureStepSequence'],\n    '0321': ['SQ', '1', 'FilmConsumptionSequence'],\n    '0324': ['SQ', '1', 'BillingSuppliesAndDevicesSequence'],\n    '0330': ['SQ', '1', 'ReferencedProcedureStepSequence'],\n    '0340': ['SQ', '1', 'PerformedSeriesSequence'],\n    '0400': ['LT', '1', 'CommentsOnTheScheduledProcedureStep'],\n    '0440': ['SQ', '1', 'ProtocolContextSequence'],\n    '0441': ['SQ', '1', 'ContentItemModifierSequence'],\n    '0500': ['SQ', '1', 'ScheduledSpecimenSequence'],\n    '050A': ['LO', '1', 'SpecimenAccessionNumber'],\n    '0512': ['LO', '1', 'ContainerIdentifier'],\n    '0513': ['SQ', '1', 'IssuerOfTheContainerIdentifierSequence'],\n    '0515': ['SQ', '1', 'AlternateContainerIdentifierSequence'],\n    '0518': ['SQ', '1', 'ContainerTypeCodeSequence'],\n    '051A': ['LO', '1', 'ContainerDescription'],\n    '0520': ['SQ', '1', 'ContainerComponentSequence'],\n    '0550': ['SQ', '1', 'SpecimenSequence'],\n    '0551': ['LO', '1', 'SpecimenIdentifier'],\n    '0552': ['SQ', '1', 'SpecimenDescriptionSequenceTrial'],\n    '0553': ['ST', '1', 'SpecimenDescriptionTrial'],\n    '0554': ['UI', '1', 'SpecimenUID'],\n    '0555': ['SQ', '1', 'AcquisitionContextSequence'],\n    '0556': ['ST', '1', 'AcquisitionContextDescription'],\n    '0560': ['SQ', '1', 'SpecimenDescriptionSequence'],\n    '0562': ['SQ', '1', 'IssuerOfTheSpecimenIdentifierSequence'],\n    '059A': ['SQ', '1', 'SpecimenTypeCodeSequence'],\n    '0600': ['LO', '1', 'SpecimenShortDescription'],\n    '0602': ['UT', '1', 'SpecimenDetailedDescription'],\n    '0610': ['SQ', '1', 'SpecimenPreparationSequence'],\n    '0612': ['SQ', '1', 'SpecimenPreparationStepContentItemSequence'],\n    '0620': ['SQ', '1', 'SpecimenLocalizationContentItemSequence'],\n    '06FA': ['LO', '1', 'SlideIdentifier'],\n    '0710': ['SQ', '1', 'WholeSlideMicroscopyImageFrameTypeSequence'],\n    '071A': ['SQ', '1', 'ImageCenterPointCoordinatesSequence'],\n    '072A': ['DS', '1', 'XOffsetInSlideCoordinateSystem'],\n    '073A': ['DS', '1', 'YOffsetInSlideCoordinateSystem'],\n    '074A': ['DS', '1', 'ZOffsetInSlideCoordinateSystem'],\n    '08D8': ['SQ', '1', 'PixelSpacingSequence'],\n    '08DA': ['SQ', '1', 'CoordinateSystemAxisCodeSequence'],\n    '08EA': ['SQ', '1', 'MeasurementUnitsCodeSequence'],\n    '09F8': ['SQ', '1', 'VitalStainCodeSequenceTrial'],\n    '1001': ['SH', '1', 'RequestedProcedureID'],\n    '1002': ['LO', '1', 'ReasonForTheRequestedProcedure'],\n    '1003': ['SH', '1', 'RequestedProcedurePriority'],\n    '1004': ['LO', '1', 'PatientTransportArrangements'],\n    '1005': ['LO', '1', 'RequestedProcedureLocation'],\n    '1006': ['SH', '1', 'PlacerOrderNumberProcedure'],\n    '1007': ['SH', '1', 'FillerOrderNumberProcedure'],\n    '1008': ['LO', '1', 'ConfidentialityCode'],\n    '1009': ['SH', '1', 'ReportingPriority'],\n    '100A': ['SQ', '1', 'ReasonForRequestedProcedureCodeSequence'],\n    '1010': ['PN', '1-n', 'NamesOfIntendedRecipientsOfResults'],\n    '1011': ['SQ', '1', 'IntendedRecipientsOfResultsIdentificationSequence'],\n    '1012': ['SQ', '1', 'ReasonForPerformedProcedureCodeSequence'],\n    '1060': ['LO', '1', 'RequestedProcedureDescriptionTrial'],\n    '1101': ['SQ', '1', 'PersonIdentificationCodeSequence'],\n    '1102': ['ST', '1', 'PersonAddress'],\n    '1103': ['LO', '1-n', 'PersonTelephoneNumbers'],\n    '1104': ['LT', '1', 'PersonTelecomInformation'],\n    '1400': ['LT', '1', 'RequestedProcedureComments'],\n    '2001': ['LO', '1', 'ReasonForTheImagingServiceRequest'],\n    '2004': ['DA', '1', 'IssueDateOfImagingServiceRequest'],\n    '2005': ['TM', '1', 'IssueTimeOfImagingServiceRequest'],\n    '2006': ['SH', '1', 'PlacerOrderNumberImagingServiceRequestRetired'],\n    '2007': ['SH', '1', 'FillerOrderNumberImagingServiceRequestRetired'],\n    '2008': ['PN', '1', 'OrderEnteredBy'],\n    '2009': ['SH', '1', 'OrderEntererLocation'],\n    '2010': ['SH', '1', 'OrderCallbackPhoneNumber'],\n    '2011': ['LT', '1', 'OrderCallbackTelecomInformation'],\n    '2016': ['LO', '1', 'PlacerOrderNumberImagingServiceRequest'],\n    '2017': ['LO', '1', 'FillerOrderNumberImagingServiceRequest'],\n    '2400': ['LT', '1', 'ImagingServiceRequestComments'],\n    '3001': ['LO', '1', 'ConfidentialityConstraintOnPatientDataDescription'],\n    '4001': ['CS', '1', 'GeneralPurposeScheduledProcedureStepStatus'],\n    '4002': ['CS', '1', 'GeneralPurposePerformedProcedureStepStatus'],\n    '4003': ['CS', '1', 'GeneralPurposeScheduledProcedureStepPriority'],\n    '4004': ['SQ', '1', 'ScheduledProcessingApplicationsCodeSequence'],\n    '4005': ['DT', '1', 'ScheduledProcedureStepStartDateTime'],\n    '4006': ['CS', '1', 'MultipleCopiesFlag'],\n    '4007': ['SQ', '1', 'PerformedProcessingApplicationsCodeSequence'],\n    '4008': ['DT', '1', 'ScheduledProcedureStepExpirationDateTime'],\n    '4009': ['SQ', '1', 'HumanPerformerCodeSequence'],\n    '4010': ['DT', '1', 'ScheduledProcedureStepModificationDateTime'],\n    '4011': ['DT', '1', 'ExpectedCompletionDateTime'],\n    '4015': ['SQ', '1', 'ResultingGeneralPurposePerformedProcedureStepsSequence'],\n    '4016': ['SQ', '1', 'ReferencedGeneralPurposeScheduledProcedureStepSequence'],\n    '4018': ['SQ', '1', 'ScheduledWorkitemCodeSequence'],\n    '4019': ['SQ', '1', 'PerformedWorkitemCodeSequence'],\n    '4020': ['CS', '1', 'InputAvailabilityFlag'],\n    '4021': ['SQ', '1', 'InputInformationSequence'],\n    '4022': ['SQ', '1', 'RelevantInformationSequence'],\n    '4023': ['UI', '1', 'ReferencedGeneralPurposeScheduledProcedureStepTransactionUID'],\n    '4025': ['SQ', '1', 'ScheduledStationNameCodeSequence'],\n    '4026': ['SQ', '1', 'ScheduledStationClassCodeSequence'],\n    '4027': ['SQ', '1', 'ScheduledStationGeographicLocationCodeSequence'],\n    '4028': ['SQ', '1', 'PerformedStationNameCodeSequence'],\n    '4029': ['SQ', '1', 'PerformedStationClassCodeSequence'],\n    '4030': ['SQ', '1', 'PerformedStationGeographicLocationCodeSequence'],\n    '4031': ['SQ', '1', 'RequestedSubsequentWorkitemCodeSequence'],\n    '4032': ['SQ', '1', 'NonDICOMOutputCodeSequence'],\n    '4033': ['SQ', '1', 'OutputInformationSequence'],\n    '4034': ['SQ', '1', 'ScheduledHumanPerformersSequence'],\n    '4035': ['SQ', '1', 'ActualHumanPerformersSequence'],\n    '4036': ['LO', '1', 'HumanPerformerOrganization'],\n    '4037': ['PN', '1', 'HumanPerformerName'],\n    '4040': ['CS', '1', 'RawDataHandling'],\n    '4041': ['CS', '1', 'InputReadinessState'],\n    '4050': ['DT', '1', 'PerformedProcedureStepStartDateTime'],\n    '4051': ['DT', '1', 'PerformedProcedureStepEndDateTime'],\n    '4052': ['DT', '1', 'ProcedureStepCancellationDateTime'],\n    '4070': ['SQ', '1', 'OutputDestinationSequence'],\n    '4071': ['SQ', '1', 'DICOMStorageSequence'],\n    '4072': ['SQ', '1', 'STOWRSStorageSequence'],\n    '4073': ['UR', '1', 'StorageURL'],\n    '4074': ['SQ', '1', 'XDSStorageSequence'],\n    '8302': ['DS', '1', 'EntranceDoseInmGy'],\n    '8303': ['CS', '1', 'EntranceDoseDerivation'],\n    '9092': ['SQ', '1', 'ParametricMapFrameTypeSequence'],\n    '9094': ['SQ', '1', 'ReferencedImageRealWorldValueMappingSequence'],\n    '9096': ['SQ', '1', 'RealWorldValueMappingSequence'],\n    '9098': ['SQ', '1', 'PixelValueMappingCodeSequence'],\n    '9210': ['SH', '1', 'LUTLabel'],\n    '9211': ['xs', '1', 'RealWorldValueLastValueMapped'],\n    '9212': ['FD', '1-n', 'RealWorldValueLUTData'],\n    '9213': ['FD', '1', 'DoubleFloatRealWorldValueLastValueMapped'],\n    '9214': ['FD', '1', 'DoubleFloatRealWorldValueFirstValueMapped'],\n    '9216': ['xs', '1', 'RealWorldValueFirstValueMapped'],\n    '9220': ['SQ', '1', 'QuantityDefinitionSequence'],\n    '9224': ['FD', '1', 'RealWorldValueIntercept'],\n    '9225': ['FD', '1', 'RealWorldValueSlope'],\n    'A007': ['CS', '1', 'FindingsFlagTrial'],\n    'A010': ['CS', '1', 'RelationshipType'],\n    'A020': ['SQ', '1', 'FindingsSequenceTrial'],\n    'A021': ['UI', '1', 'FindingsGroupUIDTrial'],\n    'A022': ['UI', '1', 'ReferencedFindingsGroupUIDTrial'],\n    'A023': ['DA', '1', 'FindingsGroupRecordingDateTrial'],\n    'A024': ['TM', '1', 'FindingsGroupRecordingTimeTrial'],\n    'A026': ['SQ', '1', 'FindingsSourceCategoryCodeSequenceTrial'],\n    'A027': ['LO', '1', 'VerifyingOrganization'],\n    'A028': ['SQ', '1', 'DocumentingOrganizationIdentifierCodeSequenceTrial'],\n    'A030': ['DT', '1', 'VerificationDateTime'],\n    'A032': ['DT', '1', 'ObservationDateTime'],\n    'A033': ['DT', '1', 'ObservationStartDateTime'],\n    'A040': ['CS', '1', 'ValueType'],\n    'A043': ['SQ', '1', 'ConceptNameCodeSequence'],\n    'A047': ['LO', '1', 'MeasurementPrecisionDescriptionTrial'],\n    'A050': ['CS', '1', 'ContinuityOfContent'],\n    'A057': ['CS', '1-n', 'UrgencyOrPriorityAlertsTrial'],\n    'A060': ['LO', '1', 'SequencingIndicatorTrial'],\n    'A066': ['SQ', '1', 'DocumentIdentifierCodeSequenceTrial'],\n    'A067': ['PN', '1', 'DocumentAuthorTrial'],\n    'A068': ['SQ', '1', 'DocumentAuthorIdentifierCodeSequenceTrial'],\n    'A070': ['SQ', '1', 'IdentifierCodeSequenceTrial'],\n    'A073': ['SQ', '1', 'VerifyingObserverSequence'],\n    'A074': ['OB', '1', 'ObjectBinaryIdentifierTrial'],\n    'A075': ['PN', '1', 'VerifyingObserverName'],\n    'A076': ['SQ', '1', 'DocumentingObserverIdentifierCodeSequenceTrial'],\n    'A078': ['SQ', '1', 'AuthorObserverSequence'],\n    'A07A': ['SQ', '1', 'ParticipantSequence'],\n    'A07C': ['SQ', '1', 'CustodialOrganizationSequence'],\n    'A080': ['CS', '1', 'ParticipationType'],\n    'A082': ['DT', '1', 'ParticipationDateTime'],\n    'A084': ['CS', '1', 'ObserverType'],\n    'A085': ['SQ', '1', 'ProcedureIdentifierCodeSequenceTrial'],\n    'A088': ['SQ', '1', 'VerifyingObserverIdentificationCodeSequence'],\n    'A089': ['OB', '1', 'ObjectDirectoryBinaryIdentifierTrial'],\n    'A090': ['SQ', '1', 'EquivalentCDADocumentSequence'],\n    'A0B0': ['US', '2-2n', 'ReferencedWaveformChannels'],\n    'A110': ['DA', '1', 'DateOfDocumentOrVerbalTransactionTrial'],\n    'A112': ['TM', '1', 'TimeOfDocumentCreationOrVerbalTransactionTrial'],\n    'A120': ['DT', '1', 'DateTime'],\n    'A121': ['DA', '1', 'Date'],\n    'A122': ['TM', '1', 'Time'],\n    'A123': ['PN', '1', 'PersonName'],\n    'A124': ['UI', '1', 'UID'],\n    'A125': ['CS', '2', 'ReportStatusIDTrial'],\n    'A130': ['CS', '1', 'TemporalRangeType'],\n    'A132': ['UL', '1-n', 'ReferencedSamplePositions'],\n    'A136': ['US', '1-n', 'ReferencedFrameNumbers'],\n    'A138': ['DS', '1-n', 'ReferencedTimeOffsets'],\n    'A13A': ['DT', '1-n', 'ReferencedDateTime'],\n    'A160': ['UT', '1', 'TextValue'],\n    'A161': ['FD', '1-n', 'FloatingPointValue'],\n    'A162': ['SL', '1-n', 'RationalNumeratorValue'],\n    'A163': ['UL', '1-n', 'RationalDenominatorValue'],\n    'A167': ['SQ', '1', 'ObservationCategoryCodeSequenceTrial'],\n    'A168': ['SQ', '1', 'ConceptCodeSequence'],\n    'A16A': ['ST', '1', 'BibliographicCitationTrial'],\n    'A170': ['SQ', '1', 'PurposeOfReferenceCodeSequence'],\n    'A171': ['UI', '1', 'ObservationUID'],\n    'A172': ['UI', '1', 'ReferencedObservationUIDTrial'],\n    'A173': ['CS', '1', 'ReferencedObservationClassTrial'],\n    'A174': ['CS', '1', 'ReferencedObjectObservationClassTrial'],\n    'A180': ['US', '1', 'AnnotationGroupNumber'],\n    'A192': ['DA', '1', 'ObservationDateTrial'],\n    'A193': ['TM', '1', 'ObservationTimeTrial'],\n    'A194': ['CS', '1', 'MeasurementAutomationTrial'],\n    'A195': ['SQ', '1', 'ModifierCodeSequence'],\n    'A224': ['ST', '1', 'IdentificationDescriptionTrial'],\n    'A290': ['CS', '1', 'CoordinatesSetGeometricTypeTrial'],\n    'A296': ['SQ', '1', 'AlgorithmCodeSequenceTrial'],\n    'A297': ['ST', '1', 'AlgorithmDescriptionTrial'],\n    'A29A': ['SL', '2-2n', 'PixelCoordinatesSetTrial'],\n    'A300': ['SQ', '1', 'MeasuredValueSequence'],\n    'A301': ['SQ', '1', 'NumericValueQualifierCodeSequence'],\n    'A307': ['PN', '1', 'CurrentObserverTrial'],\n    'A30A': ['DS', '1-n', 'NumericValue'],\n    'A313': ['SQ', '1', 'ReferencedAccessionSequenceTrial'],\n    'A33A': ['ST', '1', 'ReportStatusCommentTrial'],\n    'A340': ['SQ', '1', 'ProcedureContextSequenceTrial'],\n    'A352': ['PN', '1', 'VerbalSourceTrial'],\n    'A353': ['ST', '1', 'AddressTrial'],\n    'A354': ['LO', '1', 'TelephoneNumberTrial'],\n    'A358': ['SQ', '1', 'VerbalSourceIdentifierCodeSequenceTrial'],\n    'A360': ['SQ', '1', 'PredecessorDocumentsSequence'],\n    'A370': ['SQ', '1', 'ReferencedRequestSequence'],\n    'A372': ['SQ', '1', 'PerformedProcedureCodeSequence'],\n    'A375': ['SQ', '1', 'CurrentRequestedProcedureEvidenceSequence'],\n    'A380': ['SQ', '1', 'ReportDetailSequenceTrial'],\n    'A385': ['SQ', '1', 'PertinentOtherEvidenceSequence'],\n    'A390': ['SQ', '1', 'HL7StructuredDocumentReferenceSequence'],\n    'A402': ['UI', '1', 'ObservationSubjectUIDTrial'],\n    'A403': ['CS', '1', 'ObservationSubjectClassTrial'],\n    'A404': ['SQ', '1', 'ObservationSubjectTypeCodeSequenceTrial'],\n    'A491': ['CS', '1', 'CompletionFlag'],\n    'A492': ['LO', '1', 'CompletionFlagDescription'],\n    'A493': ['CS', '1', 'VerificationFlag'],\n    'A494': ['CS', '1', 'ArchiveRequested'],\n    'A496': ['CS', '1', 'PreliminaryFlag'],\n    'A504': ['SQ', '1', 'ContentTemplateSequence'],\n    'A525': ['SQ', '1', 'IdenticalDocumentsSequence'],\n    'A600': ['CS', '1', 'ObservationSubjectContextFlagTrial'],\n    'A601': ['CS', '1', 'ObserverContextFlagTrial'],\n    'A603': ['CS', '1', 'ProcedureContextFlagTrial'],\n    'A730': ['SQ', '1', 'ContentSequence'],\n    'A731': ['SQ', '1', 'RelationshipSequenceTrial'],\n    'A732': ['SQ', '1', 'RelationshipTypeCodeSequenceTrial'],\n    'A744': ['SQ', '1', 'LanguageCodeSequenceTrial'],\n    'A801': ['SQ', '1', 'TabulatedValuesSequence'],\n    'A802': ['UL', '1', 'NumberOfTableRows'],\n    'A803': ['UL', '1', 'NumberOfTableColumns'],\n    'A804': ['UL', '1', 'TableRowNumber'],\n    'A805': ['UL', '1', 'TableColumnNumber'],\n    'A806': ['SQ', '1', 'TableRowDefinitionSequence'],\n    'A807': ['SQ', '1', 'TableColumnDefinitionSequence'],\n    'A808': ['SQ', '1', 'CellValuesSequence'],\n    'A992': ['ST', '1', 'UniformResourceLocatorTrial'],\n    'B020': ['SQ', '1', 'WaveformAnnotationSequence'],\n    'DB00': ['CS', '1', 'TemplateIdentifier'],\n    'DB06': ['DT', '1', 'TemplateVersion'],\n    'DB07': ['DT', '1', 'TemplateLocalVersion'],\n    'DB0B': ['CS', '1', 'TemplateExtensionFlag'],\n    'DB0C': ['UI', '1', 'TemplateExtensionOrganizationUID'],\n    'DB0D': ['UI', '1', 'TemplateExtensionCreatorUID'],\n    'DB73': ['UL', '1-n', 'ReferencedContentItemIdentifier'],\n    'E001': ['ST', '1', 'HL7InstanceIdentifier'],\n    'E004': ['DT', '1', 'HL7DocumentEffectiveTime'],\n    'E006': ['SQ', '1', 'HL7DocumentTypeCodeSequence'],\n    'E008': ['SQ', '1', 'DocumentClassCodeSequence'],\n    'E010': ['UR', '1', 'RetrieveURI'],\n    'E011': ['UI', '1', 'RetrieveLocationUID'],\n    'E020': ['CS', '1', 'TypeOfInstances'],\n    'E021': ['SQ', '1', 'DICOMRetrievalSequence'],\n    'E022': ['SQ', '1', 'DICOMMediaRetrievalSequence'],\n    'E023': ['SQ', '1', 'WADORetrievalSequence'],\n    'E024': ['SQ', '1', 'XDSRetrievalSequence'],\n    'E025': ['SQ', '1', 'WADORSRetrievalSequence'],\n    'E030': ['UI', '1', 'RepositoryUniqueID'],\n    'E031': ['UI', '1', 'HomeCommunityID']\n  },\n  '0042': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['ST', '1', 'DocumentTitle'],\n    '0011': ['OB', '1', 'EncapsulatedDocument'],\n    '0012': ['LO', '1', 'MIMETypeOfEncapsulatedDocument'],\n    '0013': ['SQ', '1', 'SourceInstanceSequence'],\n    '0014': ['LO', '1-n', 'ListOfMIMETypes'],\n    '0015': ['UL', '1', 'EncapsulatedDocumentLength']\n  },\n  '0044': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['ST', '1', 'ProductPackageIdentifier'],\n    '0002': ['CS', '1', 'SubstanceAdministrationApproval'],\n    '0003': ['LT', '1', 'ApprovalStatusFurtherDescription'],\n    '0004': ['DT', '1', 'ApprovalStatusDateTime'],\n    '0007': ['SQ', '1', 'ProductTypeCodeSequence'],\n    '0008': ['LO', '1-n', 'ProductName'],\n    '0009': ['LT', '1', 'ProductDescription'],\n    '000A': ['LO', '1', 'ProductLotIdentifier'],\n    '000B': ['DT', '1', 'ProductExpirationDateTime'],\n    '0010': ['DT', '1', 'SubstanceAdministrationDateTime'],\n    '0011': ['LO', '1', 'SubstanceAdministrationNotes'],\n    '0012': ['LO', '1', 'SubstanceAdministrationDeviceID'],\n    '0013': ['SQ', '1', 'ProductParameterSequence'],\n    '0019': ['SQ', '1', 'SubstanceAdministrationParameterSequence'],\n    '0100': ['SQ', '1', 'ApprovalSequence'],\n    '0101': ['SQ', '1', 'AssertionCodeSequence'],\n    '0102': ['UI', '1', 'AssertionUID'],\n    '0103': ['SQ', '1', 'AsserterIdentificationSequence'],\n    '0104': ['DT', '1', 'AssertionDateTime'],\n    '0105': ['DT', '1', 'AssertionExpirationDateTime'],\n    '0106': ['UT', '1', 'AssertionComments'],\n    '0107': ['SQ', '1', 'RelatedAssertionSequence'],\n    '0108': ['UI', '1', 'ReferencedAssertionUID'],\n    '0109': ['SQ', '1', 'ApprovalSubjectSequence'],\n    '010A': ['SQ', '1', 'OrganizationalRoleCodeSequence']\n  },\n  '0046': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0012': ['LO', '1', 'LensDescription'],\n    '0014': ['SQ', '1', 'RightLensSequence'],\n    '0015': ['SQ', '1', 'LeftLensSequence'],\n    '0016': ['SQ', '1', 'UnspecifiedLateralityLensSequence'],\n    '0018': ['SQ', '1', 'CylinderSequence'],\n    '0028': ['SQ', '1', 'PrismSequence'],\n    '0030': ['FD', '1', 'HorizontalPrismPower'],\n    '0032': ['CS', '1', 'HorizontalPrismBase'],\n    '0034': ['FD', '1', 'VerticalPrismPower'],\n    '0036': ['CS', '1', 'VerticalPrismBase'],\n    '0038': ['CS', '1', 'LensSegmentType'],\n    '0040': ['FD', '1', 'OpticalTransmittance'],\n    '0042': ['FD', '1', 'ChannelWidth'],\n    '0044': ['FD', '1', 'PupilSize'],\n    '0046': ['FD', '1', 'CornealSize'],\n    '0047': ['SQ', '1', 'CornealSizeSequence'],\n    '0050': ['SQ', '1', 'AutorefractionRightEyeSequence'],\n    '0052': ['SQ', '1', 'AutorefractionLeftEyeSequence'],\n    '0060': ['FD', '1', 'DistancePupillaryDistance'],\n    '0062': ['FD', '1', 'NearPupillaryDistance'],\n    '0063': ['FD', '1', 'IntermediatePupillaryDistance'],\n    '0064': ['FD', '1', 'OtherPupillaryDistance'],\n    '0070': ['SQ', '1', 'KeratometryRightEyeSequence'],\n    '0071': ['SQ', '1', 'KeratometryLeftEyeSequence'],\n    '0074': ['SQ', '1', 'SteepKeratometricAxisSequence'],\n    '0075': ['FD', '1', 'RadiusOfCurvature'],\n    '0076': ['FD', '1', 'KeratometricPower'],\n    '0077': ['FD', '1', 'KeratometricAxis'],\n    '0080': ['SQ', '1', 'FlatKeratometricAxisSequence'],\n    '0092': ['CS', '1', 'BackgroundColor'],\n    '0094': ['CS', '1', 'Optotype'],\n    '0095': ['CS', '1', 'OptotypePresentation'],\n    '0097': ['SQ', '1', 'SubjectiveRefractionRightEyeSequence'],\n    '0098': ['SQ', '1', 'SubjectiveRefractionLeftEyeSequence'],\n    '0100': ['SQ', '1', 'AddNearSequence'],\n    '0101': ['SQ', '1', 'AddIntermediateSequence'],\n    '0102': ['SQ', '1', 'AddOtherSequence'],\n    '0104': ['FD', '1', 'AddPower'],\n    '0106': ['FD', '1', 'ViewingDistance'],\n    '0110': ['SQ', '1', 'CorneaMeasurementsSequence'],\n    '0111': ['SQ', '1', 'SourceOfCorneaMeasurementDataCodeSequence'],\n    '0112': ['SQ', '1', 'SteepCornealAxisSequence'],\n    '0113': ['SQ', '1', 'FlatCornealAxisSequence'],\n    '0114': ['FD', '1', 'CornealPower'],\n    '0115': ['FD', '1', 'CornealAxis'],\n    '0116': ['SQ', '1', 'CorneaMeasurementMethodCodeSequence'],\n    '0117': ['FL', '1', 'RefractiveIndexOfCornea'],\n    '0118': ['FL', '1', 'RefractiveIndexOfAqueousHumor'],\n    '0121': ['SQ', '1', 'VisualAcuityTypeCodeSequence'],\n    '0122': ['SQ', '1', 'VisualAcuityRightEyeSequence'],\n    '0123': ['SQ', '1', 'VisualAcuityLeftEyeSequence'],\n    '0124': ['SQ', '1', 'VisualAcuityBothEyesOpenSequence'],\n    '0125': ['CS', '1', 'ViewingDistanceType'],\n    '0135': ['SS', '2', 'VisualAcuityModifiers'],\n    '0137': ['FD', '1', 'DecimalVisualAcuity'],\n    '0139': ['LO', '1', 'OptotypeDetailedDefinition'],\n    '0145': ['SQ', '1', 'ReferencedRefractiveMeasurementsSequence'],\n    '0146': ['FD', '1', 'SpherePower'],\n    '0147': ['FD', '1', 'CylinderPower'],\n    '0201': ['CS', '1', 'CornealTopographySurface'],\n    '0202': ['FL', '2', 'CornealVertexLocation'],\n    '0203': ['FL', '1', 'PupilCentroidXCoordinate'],\n    '0204': ['FL', '1', 'PupilCentroidYCoordinate'],\n    '0205': ['FL', '1', 'EquivalentPupilRadius'],\n    '0207': ['SQ', '1', 'CornealTopographyMapTypeCodeSequence'],\n    '0208': ['IS', '2-2n', 'VerticesOfTheOutlineOfPupil'],\n    '0210': ['SQ', '1', 'CornealTopographyMappingNormalsSequence'],\n    '0211': ['SQ', '1', 'MaximumCornealCurvatureSequence'],\n    '0212': ['FL', '1', 'MaximumCornealCurvature'],\n    '0213': ['FL', '2', 'MaximumCornealCurvatureLocation'],\n    '0215': ['SQ', '1', 'MinimumKeratometricSequence'],\n    '0218': ['SQ', '1', 'SimulatedKeratometricCylinderSequence'],\n    '0220': ['FL', '1', 'AverageCornealPower'],\n    '0224': ['FL', '1', 'CornealISValue'],\n    '0227': ['FL', '1', 'AnalyzedArea'],\n    '0230': ['FL', '1', 'SurfaceRegularityIndex'],\n    '0232': ['FL', '1', 'SurfaceAsymmetryIndex'],\n    '0234': ['FL', '1', 'CornealEccentricityIndex'],\n    '0236': ['FL', '1', 'KeratoconusPredictionIndex'],\n    '0238': ['FL', '1', 'DecimalPotentialVisualAcuity'],\n    '0242': ['CS', '1', 'CornealTopographyMapQualityEvaluation'],\n    '0244': ['SQ', '1', 'SourceImageCornealProcessedDataSequence'],\n    '0247': ['FL', '3', 'CornealPointLocation'],\n    '0248': ['CS', '1', 'CornealPointEstimated'],\n    '0249': ['FL', '1', 'AxialPower'],\n    '0250': ['FL', '1', 'TangentialPower'],\n    '0251': ['FL', '1', 'RefractivePower'],\n    '0252': ['FL', '1', 'RelativeElevation'],\n    '0253': ['FL', '1', 'CornealWavefront']\n  },\n  '0048': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['FL', '1', 'ImagedVolumeWidth'],\n    '0002': ['FL', '1', 'ImagedVolumeHeight'],\n    '0003': ['FL', '1', 'ImagedVolumeDepth'],\n    '0006': ['UL', '1', 'TotalPixelMatrixColumns'],\n    '0007': ['UL', '1', 'TotalPixelMatrixRows'],\n    '0008': ['SQ', '1', 'TotalPixelMatrixOriginSequence'],\n    '0010': ['CS', '1', 'SpecimenLabelInImage'],\n    '0011': ['CS', '1', 'FocusMethod'],\n    '0012': ['CS', '1', 'ExtendedDepthOfField'],\n    '0013': ['US', '1', 'NumberOfFocalPlanes'],\n    '0014': ['FL', '1', 'DistanceBetweenFocalPlanes'],\n    '0015': ['US', '3', 'RecommendedAbsentPixelCIELabValue'],\n    '0100': ['SQ', '1', 'IlluminatorTypeCodeSequence'],\n    '0102': ['DS', '6', 'ImageOrientationSlide'],\n    '0105': ['SQ', '1', 'OpticalPathSequence'],\n    '0106': ['SH', '1', 'OpticalPathIdentifier'],\n    '0107': ['ST', '1', 'OpticalPathDescription'],\n    '0108': ['SQ', '1', 'IlluminationColorCodeSequence'],\n    '0110': ['SQ', '1', 'SpecimenReferenceSequence'],\n    '0111': ['DS', '1', 'CondenserLensPower'],\n    '0112': ['DS', '1', 'ObjectiveLensPower'],\n    '0113': ['DS', '1', 'ObjectiveLensNumericalAperture'],\n    '0120': ['SQ', '1', 'PaletteColorLookupTableSequence'],\n    '0200': ['SQ', '1', 'ReferencedImageNavigationSequence'],\n    '0201': ['US', '2', 'TopLeftHandCornerOfLocalizerArea'],\n    '0202': ['US', '2', 'BottomRightHandCornerOfLocalizerArea'],\n    '0207': ['SQ', '1', 'OpticalPathIdentificationSequence'],\n    '021A': ['SQ', '1', 'PlanePositionSlideSequence'],\n    '021E': ['SL', '1', 'ColumnPositionInTotalImagePixelMatrix'],\n    '021F': ['SL', '1', 'RowPositionInTotalImagePixelMatrix'],\n    '0301': ['CS', '1', 'PixelOriginInterpretation'],\n    '0302': ['UL', '1', 'NumberOfOpticalPaths'],\n    '0303': ['UL', '1', 'TotalPixelMatrixFocalPlanes']\n  },\n  '0050': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0004': ['CS', '1', 'CalibrationImage'],\n    '0010': ['SQ', '1', 'DeviceSequence'],\n    '0012': ['SQ', '1', 'ContainerComponentTypeCodeSequence'],\n    '0013': ['FD', '1', 'ContainerComponentThickness'],\n    '0014': ['DS', '1', 'DeviceLength'],\n    '0015': ['FD', '1', 'ContainerComponentWidth'],\n    '0016': ['DS', '1', 'DeviceDiameter'],\n    '0017': ['CS', '1', 'DeviceDiameterUnits'],\n    '0018': ['DS', '1', 'DeviceVolume'],\n    '0019': ['DS', '1', 'InterMarkerDistance'],\n    '001A': ['CS', '1', 'ContainerComponentMaterial'],\n    '001B': ['LO', '1', 'ContainerComponentID'],\n    '001C': ['FD', '1', 'ContainerComponentLength'],\n    '001D': ['FD', '1', 'ContainerComponentDiameter'],\n    '001E': ['LO', '1', 'ContainerComponentDescription'],\n    '0020': ['LO', '1', 'DeviceDescription'],\n    '0021': ['ST', '1', 'LongDeviceDescription']\n  },\n  '0052': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['FL', '1', 'ContrastBolusIngredientPercentByVolume'],\n    '0002': ['FD', '1', 'OCTFocalDistance'],\n    '0003': ['FD', '1', 'BeamSpotSize'],\n    '0004': ['FD', '1', 'EffectiveRefractiveIndex'],\n    '0006': ['CS', '1', 'OCTAcquisitionDomain'],\n    '0007': ['FD', '1', 'OCTOpticalCenterWavelength'],\n    '0008': ['FD', '1', 'AxialResolution'],\n    '0009': ['FD', '1', 'RangingDepth'],\n    '0011': ['FD', '1', 'ALineRate'],\n    '0012': ['US', '1', 'ALinesPerFrame'],\n    '0013': ['FD', '1', 'CatheterRotationalRate'],\n    '0014': ['FD', '1', 'ALinePixelSpacing'],\n    '0016': ['SQ', '1', 'ModeOfPercutaneousAccessSequence'],\n    '0025': ['SQ', '1', 'IntravascularOCTFrameTypeSequence'],\n    '0026': ['CS', '1', 'OCTZOffsetApplied'],\n    '0027': ['SQ', '1', 'IntravascularFrameContentSequence'],\n    '0028': ['FD', '1', 'IntravascularLongitudinalDistance'],\n    '0029': ['SQ', '1', 'IntravascularOCTFrameContentSequence'],\n    '0030': ['SS', '1', 'OCTZOffsetCorrection'],\n    '0031': ['CS', '1', 'CatheterDirectionOfRotation'],\n    '0033': ['FD', '1', 'SeamLineLocation'],\n    '0034': ['FD', '1', 'FirstALineLocation'],\n    '0036': ['US', '1', 'SeamLineIndex'],\n    '0038': ['US', '1', 'NumberOfPaddedALines'],\n    '0039': ['CS', '1', 'InterpolationType'],\n    '003A': ['CS', '1', 'RefractiveIndexApplied']\n  },\n  '0054': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '1-n', 'EnergyWindowVector'],\n    '0011': ['US', '1', 'NumberOfEnergyWindows'],\n    '0012': ['SQ', '1', 'EnergyWindowInformationSequence'],\n    '0013': ['SQ', '1', 'EnergyWindowRangeSequence'],\n    '0014': ['DS', '1', 'EnergyWindowLowerLimit'],\n    '0015': ['DS', '1', 'EnergyWindowUpperLimit'],\n    '0016': ['SQ', '1', 'RadiopharmaceuticalInformationSequence'],\n    '0017': ['IS', '1', 'ResidualSyringeCounts'],\n    '0018': ['SH', '1', 'EnergyWindowName'],\n    '0020': ['US', '1-n', 'DetectorVector'],\n    '0021': ['US', '1', 'NumberOfDetectors'],\n    '0022': ['SQ', '1', 'DetectorInformationSequence'],\n    '0030': ['US', '1-n', 'PhaseVector'],\n    '0031': ['US', '1', 'NumberOfPhases'],\n    '0032': ['SQ', '1', 'PhaseInformationSequence'],\n    '0033': ['US', '1', 'NumberOfFramesInPhase'],\n    '0036': ['IS', '1', 'PhaseDelay'],\n    '0038': ['IS', '1', 'PauseBetweenFrames'],\n    '0039': ['CS', '1', 'PhaseDescription'],\n    '0050': ['US', '1-n', 'RotationVector'],\n    '0051': ['US', '1', 'NumberOfRotations'],\n    '0052': ['SQ', '1', 'RotationInformationSequence'],\n    '0053': ['US', '1', 'NumberOfFramesInRotation'],\n    '0060': ['US', '1-n', 'RRIntervalVector'],\n    '0061': ['US', '1', 'NumberOfRRIntervals'],\n    '0062': ['SQ', '1', 'GatedInformationSequence'],\n    '0063': ['SQ', '1', 'DataInformationSequence'],\n    '0070': ['US', '1-n', 'TimeSlotVector'],\n    '0071': ['US', '1', 'NumberOfTimeSlots'],\n    '0072': ['SQ', '1', 'TimeSlotInformationSequence'],\n    '0073': ['DS', '1', 'TimeSlotTime'],\n    '0080': ['US', '1-n', 'SliceVector'],\n    '0081': ['US', '1', 'NumberOfSlices'],\n    '0090': ['US', '1-n', 'AngularViewVector'],\n    '0100': ['US', '1-n', 'TimeSliceVector'],\n    '0101': ['US', '1', 'NumberOfTimeSlices'],\n    '0200': ['DS', '1', 'StartAngle'],\n    '0202': ['CS', '1', 'TypeOfDetectorMotion'],\n    '0210': ['IS', '1-n', 'TriggerVector'],\n    '0211': ['US', '1', 'NumberOfTriggersInPhase'],\n    '0220': ['SQ', '1', 'ViewCodeSequence'],\n    '0222': ['SQ', '1', 'ViewModifierCodeSequence'],\n    '0300': ['SQ', '1', 'RadionuclideCodeSequence'],\n    '0302': ['SQ', '1', 'AdministrationRouteCodeSequence'],\n    '0304': ['SQ', '1', 'RadiopharmaceuticalCodeSequence'],\n    '0306': ['SQ', '1', 'CalibrationDataSequence'],\n    '0308': ['US', '1', 'EnergyWindowNumber'],\n    '0400': ['SH', '1', 'ImageID'],\n    '0410': ['SQ', '1', 'PatientOrientationCodeSequence'],\n    '0412': ['SQ', '1', 'PatientOrientationModifierCodeSequence'],\n    '0414': ['SQ', '1', 'PatientGantryRelationshipCodeSequence'],\n    '0500': ['CS', '1', 'SliceProgressionDirection'],\n    '0501': ['CS', '1', 'ScanProgressionDirection'],\n    '1000': ['CS', '2', 'SeriesType'],\n    '1001': ['CS', '1', 'Units'],\n    '1002': ['CS', '1', 'CountsSource'],\n    '1004': ['CS', '1', 'ReprojectionMethod'],\n    '1006': ['CS', '1', 'SUVType'],\n    '1100': ['CS', '1', 'RandomsCorrectionMethod'],\n    '1101': ['LO', '1', 'AttenuationCorrectionMethod'],\n    '1102': ['CS', '1', 'DecayCorrection'],\n    '1103': ['LO', '1', 'ReconstructionMethod'],\n    '1104': ['LO', '1', 'DetectorLinesOfResponseUsed'],\n    '1105': ['LO', '1', 'ScatterCorrectionMethod'],\n    '1200': ['DS', '1', 'AxialAcceptance'],\n    '1201': ['IS', '2', 'AxialMash'],\n    '1202': ['IS', '1', 'TransverseMash'],\n    '1203': ['DS', '2', 'DetectorElementSize'],\n    '1210': ['DS', '1', 'CoincidenceWindowWidth'],\n    '1220': ['CS', '1-n', 'SecondaryCountsType'],\n    '1300': ['DS', '1', 'FrameReferenceTime'],\n    '1310': ['IS', '1', 'PrimaryPromptsCountsAccumulated'],\n    '1311': ['IS', '1-n', 'SecondaryCountsAccumulated'],\n    '1320': ['DS', '1', 'SliceSensitivityFactor'],\n    '1321': ['DS', '1', 'DecayFactor'],\n    '1322': ['DS', '1', 'DoseCalibrationFactor'],\n    '1323': ['DS', '1', 'ScatterFractionFactor'],\n    '1324': ['DS', '1', 'DeadTimeFactor'],\n    '1330': ['US', '1', 'ImageIndex'],\n    '1400': ['CS', '1-n', 'CountsIncluded'],\n    '1401': ['CS', '1', 'DeadTimeCorrectionFlag']\n  },\n  '0060': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '3000': ['SQ', '1', 'HistogramSequence'],\n    '3002': ['US', '1', 'HistogramNumberOfBins'],\n    '3004': ['xs', '1', 'HistogramFirstBinValue'],\n    '3006': ['xs', '1', 'HistogramLastBinValue'],\n    '3008': ['US', '1', 'HistogramBinWidth'],\n    '3010': ['LO', '1', 'HistogramExplanation'],\n    '3020': ['UL', '1-n', 'HistogramData']\n  },\n  '0062': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'SegmentationType'],\n    '0002': ['SQ', '1', 'SegmentSequence'],\n    '0003': ['SQ', '1', 'SegmentedPropertyCategoryCodeSequence'],\n    '0004': ['US', '1', 'SegmentNumber'],\n    '0005': ['LO', '1', 'SegmentLabel'],\n    '0006': ['ST', '1', 'SegmentDescription'],\n    '0007': ['SQ', '1', 'SegmentationAlgorithmIdentificationSequence'],\n    '0008': ['CS', '1', 'SegmentAlgorithmType'],\n    '0009': ['LO', '1-n', 'SegmentAlgorithmName'],\n    '000A': ['SQ', '1', 'SegmentIdentificationSequence'],\n    '000B': ['US', '1-n', 'ReferencedSegmentNumber'],\n    '000C': ['US', '1', 'RecommendedDisplayGrayscaleValue'],\n    '000D': ['US', '3', 'RecommendedDisplayCIELabValue'],\n    '000E': ['US', '1', 'MaximumFractionalValue'],\n    '000F': ['SQ', '1', 'SegmentedPropertyTypeCodeSequence'],\n    '0010': ['CS', '1', 'SegmentationFractionalType'],\n    '0011': ['SQ', '1', 'SegmentedPropertyTypeModifierCodeSequence'],\n    '0012': ['SQ', '1', 'UsedSegmentsSequence'],\n    '0013': ['CS', '1', 'SegmentsOverlap'],\n    '0020': ['UT', '1', 'TrackingID'],\n    '0021': ['UI', '1', 'TrackingUID']\n  },\n  '0064': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SQ', '1', 'DeformableRegistrationSequence'],\n    '0003': ['UI', '1', 'SourceFrameOfReferenceUID'],\n    '0005': ['SQ', '1', 'DeformableRegistrationGridSequence'],\n    '0007': ['UL', '3', 'GridDimensions'],\n    '0008': ['FD', '3', 'GridResolution'],\n    '0009': ['OF', '1', 'VectorGridData'],\n    '000F': ['SQ', '1', 'PreDeformationMatrixRegistrationSequence'],\n    '0010': ['SQ', '1', 'PostDeformationMatrixRegistrationSequence']\n  },\n  '0066': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['UL', '1', 'NumberOfSurfaces'],\n    '0002': ['SQ', '1', 'SurfaceSequence'],\n    '0003': ['UL', '1', 'SurfaceNumber'],\n    '0004': ['LT', '1', 'SurfaceComments'],\n    '0009': ['CS', '1', 'SurfaceProcessing'],\n    '000A': ['FL', '1', 'SurfaceProcessingRatio'],\n    '000B': ['LO', '1', 'SurfaceProcessingDescription'],\n    '000C': ['FL', '1', 'RecommendedPresentationOpacity'],\n    '000D': ['CS', '1', 'RecommendedPresentationType'],\n    '000E': ['CS', '1', 'FiniteVolume'],\n    '0010': ['CS', '1', 'Manifold'],\n    '0011': ['SQ', '1', 'SurfacePointsSequence'],\n    '0012': ['SQ', '1', 'SurfacePointsNormalsSequence'],\n    '0013': ['SQ', '1', 'SurfaceMeshPrimitivesSequence'],\n    '0015': ['UL', '1', 'NumberOfSurfacePoints'],\n    '0016': ['OF', '1', 'PointCoordinatesData'],\n    '0017': ['FL', '3', 'PointPositionAccuracy'],\n    '0018': ['FL', '1', 'MeanPointDistance'],\n    '0019': ['FL', '1', 'MaximumPointDistance'],\n    '001A': ['FL', '6', 'PointsBoundingBoxCoordinates'],\n    '001B': ['FL', '3', 'AxisOfRotation'],\n    '001C': ['FL', '3', 'CenterOfRotation'],\n    '001E': ['UL', '1', 'NumberOfVectors'],\n    '001F': ['US', '1', 'VectorDimensionality'],\n    '0020': ['FL', '1-n', 'VectorAccuracy'],\n    '0021': ['OF', '1', 'VectorCoordinateData'],\n    '0022': ['OD', '1', 'DoublePointCoordinatesData'],\n    '0023': ['OW', '1', 'TrianglePointIndexList'],\n    '0024': ['OW', '1', 'EdgePointIndexList'],\n    '0025': ['OW', '1', 'VertexPointIndexList'],\n    '0026': ['SQ', '1', 'TriangleStripSequence'],\n    '0027': ['SQ', '1', 'TriangleFanSequence'],\n    '0028': ['SQ', '1', 'LineSequence'],\n    '0029': ['OW', '1', 'PrimitivePointIndexList'],\n    '002A': ['UL', '1', 'SurfaceCount'],\n    '002B': ['SQ', '1', 'ReferencedSurfaceSequence'],\n    '002C': ['UL', '1', 'ReferencedSurfaceNumber'],\n    '002D': ['SQ', '1', 'SegmentSurfaceGenerationAlgorithmIdentificationSequence'],\n    '002E': ['SQ', '1', 'SegmentSurfaceSourceInstanceSequence'],\n    '002F': ['SQ', '1', 'AlgorithmFamilyCodeSequence'],\n    '0030': ['SQ', '1', 'AlgorithmNameCodeSequence'],\n    '0031': ['LO', '1', 'AlgorithmVersion'],\n    '0032': ['LT', '1', 'AlgorithmParameters'],\n    '0034': ['SQ', '1', 'FacetSequence'],\n    '0035': ['SQ', '1', 'SurfaceProcessingAlgorithmIdentificationSequence'],\n    '0036': ['LO', '1', 'AlgorithmName'],\n    '0037': ['FL', '1', 'RecommendedPointRadius'],\n    '0038': ['FL', '1', 'RecommendedLineThickness'],\n    '0040': ['OL', '1', 'LongPrimitivePointIndexList'],\n    '0041': ['OL', '1', 'LongTrianglePointIndexList'],\n    '0042': ['OL', '1', 'LongEdgePointIndexList'],\n    '0043': ['OL', '1', 'LongVertexPointIndexList'],\n    '0101': ['SQ', '1', 'TrackSetSequence'],\n    '0102': ['SQ', '1', 'TrackSequence'],\n    '0103': ['OW', '1', 'RecommendedDisplayCIELabValueList'],\n    '0104': ['SQ', '1', 'TrackingAlgorithmIdentificationSequence'],\n    '0105': ['UL', '1', 'TrackSetNumber'],\n    '0106': ['LO', '1', 'TrackSetLabel'],\n    '0107': ['UT', '1', 'TrackSetDescription'],\n    '0108': ['SQ', '1', 'TrackSetAnatomicalTypeCodeSequence'],\n    '0121': ['SQ', '1', 'MeasurementsSequence'],\n    '0124': ['SQ', '1', 'TrackSetStatisticsSequence'],\n    '0125': ['OF', '1', 'FloatingPointValues'],\n    '0129': ['OL', '1', 'TrackPointIndexList'],\n    '0130': ['SQ', '1', 'TrackStatisticsSequence'],\n    '0132': ['SQ', '1', 'MeasurementValuesSequence'],\n    '0133': ['SQ', '1', 'DiffusionAcquisitionCodeSequence'],\n    '0134': ['SQ', '1', 'DiffusionModelCodeSequence']\n  },\n  '0068': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '6210': ['LO', '1', 'ImplantSize'],\n    '6221': ['LO', '1', 'ImplantTemplateVersion'],\n    '6222': ['SQ', '1', 'ReplacedImplantTemplateSequence'],\n    '6223': ['CS', '1', 'ImplantType'],\n    '6224': ['SQ', '1', 'DerivationImplantTemplateSequence'],\n    '6225': ['SQ', '1', 'OriginalImplantTemplateSequence'],\n    '6226': ['DT', '1', 'EffectiveDateTime'],\n    '6230': ['SQ', '1', 'ImplantTargetAnatomySequence'],\n    '6260': ['SQ', '1', 'InformationFromManufacturerSequence'],\n    '6265': ['SQ', '1', 'NotificationFromManufacturerSequence'],\n    '6270': ['DT', '1', 'InformationIssueDateTime'],\n    '6280': ['ST', '1', 'InformationSummary'],\n    '62A0': ['SQ', '1', 'ImplantRegulatoryDisapprovalCodeSequence'],\n    '62A5': ['FD', '1', 'OverallTemplateSpatialTolerance'],\n    '62C0': ['SQ', '1', 'HPGLDocumentSequence'],\n    '62D0': ['US', '1', 'HPGLDocumentID'],\n    '62D5': ['LO', '1', 'HPGLDocumentLabel'],\n    '62E0': ['SQ', '1', 'ViewOrientationCodeSequence'],\n    '62F0': ['SQ', '1', 'ViewOrientationModifierCodeSequence'],\n    '62F2': ['FD', '1', 'HPGLDocumentScaling'],\n    '6300': ['OB', '1', 'HPGLDocument'],\n    '6310': ['US', '1', 'HPGLContourPenNumber'],\n    '6320': ['SQ', '1', 'HPGLPenSequence'],\n    '6330': ['US', '1', 'HPGLPenNumber'],\n    '6340': ['LO', '1', 'HPGLPenLabel'],\n    '6345': ['ST', '1', 'HPGLPenDescription'],\n    '6346': ['FD', '2', 'RecommendedRotationPoint'],\n    '6347': ['FD', '4', 'BoundingRectangle'],\n    '6350': ['US', '1-n', 'ImplantTemplate3DModelSurfaceNumber'],\n    '6360': ['SQ', '1', 'SurfaceModelDescriptionSequence'],\n    '6380': ['LO', '1', 'SurfaceModelLabel'],\n    '6390': ['FD', '1', 'SurfaceModelScalingFactor'],\n    '63A0': ['SQ', '1', 'MaterialsCodeSequence'],\n    '63A4': ['SQ', '1', 'CoatingMaterialsCodeSequence'],\n    '63A8': ['SQ', '1', 'ImplantTypeCodeSequence'],\n    '63AC': ['SQ', '1', 'FixationMethodCodeSequence'],\n    '63B0': ['SQ', '1', 'MatingFeatureSetsSequence'],\n    '63C0': ['US', '1', 'MatingFeatureSetID'],\n    '63D0': ['LO', '1', 'MatingFeatureSetLabel'],\n    '63E0': ['SQ', '1', 'MatingFeatureSequence'],\n    '63F0': ['US', '1', 'MatingFeatureID'],\n    '6400': ['SQ', '1', 'MatingFeatureDegreeOfFreedomSequence'],\n    '6410': ['US', '1', 'DegreeOfFreedomID'],\n    '6420': ['CS', '1', 'DegreeOfFreedomType'],\n    '6430': ['SQ', '1', 'TwoDMatingFeatureCoordinatesSequence'],\n    '6440': ['US', '1', 'ReferencedHPGLDocumentID'],\n    '6450': ['FD', '2', 'TwoDMatingPoint'],\n    '6460': ['FD', '4', 'TwoDMatingAxes'],\n    '6470': ['SQ', '1', 'TwoDDegreeOfFreedomSequence'],\n    '6490': ['FD', '3', 'ThreeDDegreeOfFreedomAxis'],\n    '64A0': ['FD', '2', 'RangeOfFreedom'],\n    '64C0': ['FD', '3', 'ThreeDMatingPoint'],\n    '64D0': ['FD', '9', 'ThreeDMatingAxes'],\n    '64F0': ['FD', '3', 'TwoDDegreeOfFreedomAxis'],\n    '6500': ['SQ', '1', 'PlanningLandmarkPointSequence'],\n    '6510': ['SQ', '1', 'PlanningLandmarkLineSequence'],\n    '6520': ['SQ', '1', 'PlanningLandmarkPlaneSequence'],\n    '6530': ['US', '1', 'PlanningLandmarkID'],\n    '6540': ['LO', '1', 'PlanningLandmarkDescription'],\n    '6545': ['SQ', '1', 'PlanningLandmarkIdentificationCodeSequence'],\n    '6550': ['SQ', '1', 'TwoDPointCoordinatesSequence'],\n    '6560': ['FD', '2', 'TwoDPointCoordinates'],\n    '6590': ['FD', '3', 'ThreeDPointCoordinates'],\n    '65A0': ['SQ', '1', 'TwoDLineCoordinatesSequence'],\n    '65B0': ['FD', '4', 'TwoDLineCoordinates'],\n    '65D0': ['FD', '6', 'ThreeDLineCoordinates'],\n    '65E0': ['SQ', '1', 'TwoDPlaneCoordinatesSequence'],\n    '65F0': ['FD', '4', 'TwoDPlaneIntersection'],\n    '6610': ['FD', '3', 'ThreeDPlaneOrigin'],\n    '6620': ['FD', '3', 'ThreeDPlaneNormal'],\n    '7001': ['CS', '1', 'ModelModification'],\n    '7002': ['CS', '1', 'ModelMirroring'],\n    '7003': ['SQ', '1', 'ModelUsageCodeSequence'],\n    '7004': ['UI', '1', 'ModelGroupUID'],\n    '7005': ['UR', '1', 'RelativeURIReferenceWithinEncapsulatedDocument']\n  },\n  '006A': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'AnnotationCoordinateType'],\n    '0002': ['SQ', '1', 'AnnotationGroupSequence'],\n    '0003': ['UI', '1', 'AnnotationGroupUID'],\n    '0005': ['LO', '1', 'AnnotationGroupLabel'],\n    '0006': ['UT', '1', 'AnnotationGroupDescription'],\n    '0007': ['CS', '1', 'AnnotationGroupGenerationType'],\n    '0008': ['SQ', '1', 'AnnotationGroupAlgorithmIdentificationSequence'],\n    '0009': ['SQ', '1', 'AnnotationPropertyCategoryCodeSequence'],\n    '000A': ['SQ', '1', 'AnnotationPropertyTypeCodeSequence'],\n    '000B': ['SQ', '1', 'AnnotationPropertyTypeModifierCodeSequence'],\n    '000C': ['UL', '1', 'NumberOfAnnotations'],\n    '000D': ['CS', '1', 'AnnotationAppliesToAllOpticalPaths'],\n    '000E': ['SH', '1-n', 'ReferencedOpticalPathIdentifier'],\n    '000F': ['CS', '1', 'AnnotationAppliesToAllZPlanes'],\n    '0010': ['FD', '1-n', 'CommonZCoordinateValue'],\n    '0011': ['OL', '1', 'AnnotationIndexList']\n  },\n  '0070': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'GraphicAnnotationSequence'],\n    '0002': ['CS', '1', 'GraphicLayer'],\n    '0003': ['CS', '1', 'BoundingBoxAnnotationUnits'],\n    '0004': ['CS', '1', 'AnchorPointAnnotationUnits'],\n    '0005': ['CS', '1', 'GraphicAnnotationUnits'],\n    '0006': ['ST', '1', 'UnformattedTextValue'],\n    '0008': ['SQ', '1', 'TextObjectSequence'],\n    '0009': ['SQ', '1', 'GraphicObjectSequence'],\n    '0010': ['FL', '2', 'BoundingBoxTopLeftHandCorner'],\n    '0011': ['FL', '2', 'BoundingBoxBottomRightHandCorner'],\n    '0012': ['CS', '1', 'BoundingBoxTextHorizontalJustification'],\n    '0014': ['FL', '2', 'AnchorPoint'],\n    '0015': ['CS', '1', 'AnchorPointVisibility'],\n    '0020': ['US', '1', 'GraphicDimensions'],\n    '0021': ['US', '1', 'NumberOfGraphicPoints'],\n    '0022': ['FL', '2-n', 'GraphicData'],\n    '0023': ['CS', '1', 'GraphicType'],\n    '0024': ['CS', '1', 'GraphicFilled'],\n    '0040': ['IS', '1', 'ImageRotationRetired'],\n    '0041': ['CS', '1', 'ImageHorizontalFlip'],\n    '0042': ['US', '1', 'ImageRotation'],\n    '0050': ['US', '2', 'DisplayedAreaTopLeftHandCornerTrial'],\n    '0051': ['US', '2', 'DisplayedAreaBottomRightHandCornerTrial'],\n    '0052': ['SL', '2', 'DisplayedAreaTopLeftHandCorner'],\n    '0053': ['SL', '2', 'DisplayedAreaBottomRightHandCorner'],\n    '005A': ['SQ', '1', 'DisplayedAreaSelectionSequence'],\n    '0060': ['SQ', '1', 'GraphicLayerSequence'],\n    '0062': ['IS', '1', 'GraphicLayerOrder'],\n    '0066': ['US', '1', 'GraphicLayerRecommendedDisplayGrayscaleValue'],\n    '0067': ['US', '3', 'GraphicLayerRecommendedDisplayRGBValue'],\n    '0068': ['LO', '1', 'GraphicLayerDescription'],\n    '0080': ['CS', '1', 'ContentLabel'],\n    '0081': ['LO', '1', 'ContentDescription'],\n    '0082': ['DA', '1', 'PresentationCreationDate'],\n    '0083': ['TM', '1', 'PresentationCreationTime'],\n    '0084': ['PN', '1', 'ContentCreatorName'],\n    '0086': ['SQ', '1', 'ContentCreatorIdentificationCodeSequence'],\n    '0087': ['SQ', '1', 'AlternateContentDescriptionSequence'],\n    '0100': ['CS', '1', 'PresentationSizeMode'],\n    '0101': ['DS', '2', 'PresentationPixelSpacing'],\n    '0102': ['IS', '2', 'PresentationPixelAspectRatio'],\n    '0103': ['FL', '1', 'PresentationPixelMagnificationRatio'],\n    '0207': ['LO', '1', 'GraphicGroupLabel'],\n    '0208': ['ST', '1', 'GraphicGroupDescription'],\n    '0209': ['SQ', '1', 'CompoundGraphicSequence'],\n    '0226': ['UL', '1', 'CompoundGraphicInstanceID'],\n    '0227': ['LO', '1', 'FontName'],\n    '0228': ['CS', '1', 'FontNameType'],\n    '0229': ['LO', '1', 'CSSFontName'],\n    '0230': ['FD', '1', 'RotationAngle'],\n    '0231': ['SQ', '1', 'TextStyleSequence'],\n    '0232': ['SQ', '1', 'LineStyleSequence'],\n    '0233': ['SQ', '1', 'FillStyleSequence'],\n    '0234': ['SQ', '1', 'GraphicGroupSequence'],\n    '0241': ['US', '3', 'TextColorCIELabValue'],\n    '0242': ['CS', '1', 'HorizontalAlignment'],\n    '0243': ['CS', '1', 'VerticalAlignment'],\n    '0244': ['CS', '1', 'ShadowStyle'],\n    '0245': ['FL', '1', 'ShadowOffsetX'],\n    '0246': ['FL', '1', 'ShadowOffsetY'],\n    '0247': ['US', '3', 'ShadowColorCIELabValue'],\n    '0248': ['CS', '1', 'Underlined'],\n    '0249': ['CS', '1', 'Bold'],\n    '0250': ['CS', '1', 'Italic'],\n    '0251': ['US', '3', 'PatternOnColorCIELabValue'],\n    '0252': ['US', '3', 'PatternOffColorCIELabValue'],\n    '0253': ['FL', '1', 'LineThickness'],\n    '0254': ['CS', '1', 'LineDashingStyle'],\n    '0255': ['UL', '1', 'LinePattern'],\n    '0256': ['OB', '1', 'FillPattern'],\n    '0257': ['CS', '1', 'FillMode'],\n    '0258': ['FL', '1', 'ShadowOpacity'],\n    '0261': ['FL', '1', 'GapLength'],\n    '0262': ['FL', '1', 'DiameterOfVisibility'],\n    '0273': ['FL', '2', 'RotationPoint'],\n    '0274': ['CS', '1', 'TickAlignment'],\n    '0278': ['CS', '1', 'ShowTickLabel'],\n    '0279': ['CS', '1', 'TickLabelAlignment'],\n    '0282': ['CS', '1', 'CompoundGraphicUnits'],\n    '0284': ['FL', '1', 'PatternOnOpacity'],\n    '0285': ['FL', '1', 'PatternOffOpacity'],\n    '0287': ['SQ', '1', 'MajorTicksSequence'],\n    '0288': ['FL', '1', 'TickPosition'],\n    '0289': ['SH', '1', 'TickLabel'],\n    '0294': ['CS', '1', 'CompoundGraphicType'],\n    '0295': ['UL', '1', 'GraphicGroupID'],\n    '0306': ['CS', '1', 'ShapeType'],\n    '0308': ['SQ', '1', 'RegistrationSequence'],\n    '0309': ['SQ', '1', 'MatrixRegistrationSequence'],\n    '030A': ['SQ', '1', 'MatrixSequence'],\n    '030B': ['FD', '16', 'FrameOfReferenceToDisplayedCoordinateSystemTransformationMatrix'],\n    '030C': ['CS', '1', 'FrameOfReferenceTransformationMatrixType'],\n    '030D': ['SQ', '1', 'RegistrationTypeCodeSequence'],\n    '030F': ['ST', '1', 'FiducialDescription'],\n    '0310': ['SH', '1', 'FiducialIdentifier'],\n    '0311': ['SQ', '1', 'FiducialIdentifierCodeSequence'],\n    '0312': ['FD', '1', 'ContourUncertaintyRadius'],\n    '0314': ['SQ', '1', 'UsedFiducialsSequence'],\n    '0318': ['SQ', '1', 'GraphicCoordinatesDataSequence'],\n    '031A': ['UI', '1', 'FiducialUID'],\n    '031B': ['UI', '1', 'ReferencedFiducialUID'],\n    '031C': ['SQ', '1', 'FiducialSetSequence'],\n    '031E': ['SQ', '1', 'FiducialSequence'],\n    '031F': ['SQ', '1', 'FiducialsPropertyCategoryCodeSequence'],\n    '0401': ['US', '3', 'GraphicLayerRecommendedDisplayCIELabValue'],\n    '0402': ['SQ', '1', 'BlendingSequence'],\n    '0403': ['FL', '1', 'RelativeOpacity'],\n    '0404': ['SQ', '1', 'ReferencedSpatialRegistrationSequence'],\n    '0405': ['CS', '1', 'BlendingPosition'],\n    '1101': ['UI', '1', 'PresentationDisplayCollectionUID'],\n    '1102': ['UI', '1', 'PresentationSequenceCollectionUID'],\n    '1103': ['US', '1', 'PresentationSequencePositionIndex'],\n    '1104': ['SQ', '1', 'RenderedImageReferenceSequence'],\n    '1201': ['SQ', '1', 'VolumetricPresentationStateInputSequence'],\n    '1202': ['CS', '1', 'PresentationInputType'],\n    '1203': ['US', '1', 'InputSequencePositionIndex'],\n    '1204': ['CS', '1', 'Crop'],\n    '1205': ['US', '1-n', 'CroppingSpecificationIndex'],\n    '1206': ['CS', '1', 'CompositingMethod'],\n    '1207': ['US', '1', 'VolumetricPresentationInputNumber'],\n    '1208': ['CS', '1', 'ImageVolumeGeometry'],\n    '1209': ['UI', '1', 'VolumetricPresentationInputSetUID'],\n    '120A': ['SQ', '1', 'VolumetricPresentationInputSetSequence'],\n    '120B': ['CS', '1', 'GlobalCrop'],\n    '120C': ['US', '1-n', 'GlobalCroppingSpecificationIndex'],\n    '120D': ['CS', '1', 'RenderingMethod'],\n    '1301': ['SQ', '1', 'VolumeCroppingSequence'],\n    '1302': ['CS', '1', 'VolumeCroppingMethod'],\n    '1303': ['FD', '6', 'BoundingBoxCrop'],\n    '1304': ['SQ', '1', 'ObliqueCroppingPlaneSequence'],\n    '1305': ['FD', '4', 'Plane'],\n    '1306': ['FD', '3', 'PlaneNormal'],\n    '1309': ['US', '1', 'CroppingSpecificationNumber'],\n    '1501': ['CS', '1', 'MultiPlanarReconstructionStyle'],\n    '1502': ['CS', '1', 'MPRThicknessType'],\n    '1503': ['FD', '1', 'MPRSlabThickness'],\n    '1505': ['FD', '3', 'MPRTopLeftHandCorner'],\n    '1507': ['FD', '3', 'MPRViewWidthDirection'],\n    '1508': ['FD', '1', 'MPRViewWidth'],\n    '150C': ['UL', '1', 'NumberOfVolumetricCurvePoints'],\n    '150D': ['OD', '1', 'VolumetricCurvePoints'],\n    '1511': ['FD', '3', 'MPRViewHeightDirection'],\n    '1512': ['FD', '1', 'MPRViewHeight'],\n    '1602': ['CS', '1', 'RenderProjection'],\n    '1603': ['FD', '3', 'ViewpointPosition'],\n    '1604': ['FD', '3', 'ViewpointLookAtPoint'],\n    '1605': ['FD', '3', 'ViewpointUpDirection'],\n    '1606': ['FD', '6', 'RenderFieldOfView'],\n    '1607': ['FD', '1', 'SamplingStepSize'],\n    '1701': ['CS', '1', 'ShadingStyle'],\n    '1702': ['FD', '1', 'AmbientReflectionIntensity'],\n    '1703': ['FD', '3', 'LightDirection'],\n    '1704': ['FD', '1', 'DiffuseReflectionIntensity'],\n    '1705': ['FD', '1', 'SpecularReflectionIntensity'],\n    '1706': ['FD', '1', 'Shininess'],\n    '1801': ['SQ', '1', 'PresentationStateClassificationComponentSequence'],\n    '1802': ['CS', '1', 'ComponentType'],\n    '1803': ['SQ', '1', 'ComponentInputSequence'],\n    '1804': ['US', '1', 'VolumetricPresentationInputIndex'],\n    '1805': ['SQ', '1', 'PresentationStateCompositorComponentSequence'],\n    '1806': ['SQ', '1', 'WeightingTransferFunctionSequence'],\n    '1807': ['US', '3', 'WeightingLookupTableDescriptor'],\n    '1808': ['OB', '1', 'WeightingLookupTableData'],\n    '1901': ['SQ', '1', 'VolumetricAnnotationSequence'],\n    '1903': ['SQ', '1', 'ReferencedStructuredContextSequence'],\n    '1904': ['UI', '1', 'ReferencedContentItem'],\n    '1905': ['SQ', '1', 'VolumetricPresentationInputAnnotationSequence'],\n    '1907': ['CS', '1', 'AnnotationClipping'],\n    '1A01': ['CS', '1', 'PresentationAnimationStyle'],\n    '1A03': ['FD', '1', 'RecommendedAnimationRate'],\n    '1A04': ['SQ', '1', 'AnimationCurveSequence'],\n    '1A05': ['FD', '1', 'AnimationStepSize'],\n    '1A06': ['FD', '1', 'SwivelRange'],\n    '1A07': ['OD', '1', 'VolumetricCurveUpDirections'],\n    '1A08': ['SQ', '1', 'VolumeStreamSequence'],\n    '1A09': ['LO', '1', 'RGBATransferFunctionDescription'],\n    '1B01': ['SQ', '1', 'AdvancedBlendingSequence'],\n    '1B02': ['US', '1', 'BlendingInputNumber'],\n    '1B03': ['SQ', '1', 'BlendingDisplayInputSequence'],\n    '1B04': ['SQ', '1', 'BlendingDisplaySequence'],\n    '1B06': ['CS', '1', 'BlendingMode'],\n    '1B07': ['CS', '1', 'TimeSeriesBlending'],\n    '1B08': ['CS', '1', 'GeometryForDisplay'],\n    '1B11': ['SQ', '1', 'ThresholdSequence'],\n    '1B12': ['SQ', '1', 'ThresholdValueSequence'],\n    '1B13': ['CS', '1', 'ThresholdType'],\n    '1B14': ['FD', '1', 'ThresholdValue']\n  },\n  '0072': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SH', '1', 'HangingProtocolName'],\n    '0004': ['LO', '1', 'HangingProtocolDescription'],\n    '0006': ['CS', '1', 'HangingProtocolLevel'],\n    '0008': ['LO', '1', 'HangingProtocolCreator'],\n    '000A': ['DT', '1', 'HangingProtocolCreationDateTime'],\n    '000C': ['SQ', '1', 'HangingProtocolDefinitionSequence'],\n    '000E': ['SQ', '1', 'HangingProtocolUserIdentificationCodeSequence'],\n    '0010': ['LO', '1', 'HangingProtocolUserGroupName'],\n    '0012': ['SQ', '1', 'SourceHangingProtocolSequence'],\n    '0014': ['US', '1', 'NumberOfPriorsReferenced'],\n    '0020': ['SQ', '1', 'ImageSetsSequence'],\n    '0022': ['SQ', '1', 'ImageSetSelectorSequence'],\n    '0024': ['CS', '1', 'ImageSetSelectorUsageFlag'],\n    '0026': ['AT', '1', 'SelectorAttribute'],\n    '0028': ['US', '1', 'SelectorValueNumber'],\n    '0030': ['SQ', '1', 'TimeBasedImageSetsSequence'],\n    '0032': ['US', '1', 'ImageSetNumber'],\n    '0034': ['CS', '1', 'ImageSetSelectorCategory'],\n    '0038': ['US', '2', 'RelativeTime'],\n    '003A': ['CS', '1', 'RelativeTimeUnits'],\n    '003C': ['SS', '2', 'AbstractPriorValue'],\n    '003E': ['SQ', '1', 'AbstractPriorCodeSequence'],\n    '0040': ['LO', '1', 'ImageSetLabel'],\n    '0050': ['CS', '1', 'SelectorAttributeVR'],\n    '0052': ['AT', '1-n', 'SelectorSequencePointer'],\n    '0054': ['LO', '1-n', 'SelectorSequencePointerPrivateCreator'],\n    '0056': ['LO', '1', 'SelectorAttributePrivateCreator'],\n    '005E': ['AE', '1-n', 'SelectorAEValue'],\n    '005F': ['AS', '1-n', 'SelectorASValue'],\n    '0060': ['AT', '1-n', 'SelectorATValue'],\n    '0061': ['DA', '1-n', 'SelectorDAValue'],\n    '0062': ['CS', '1-n', 'SelectorCSValue'],\n    '0063': ['DT', '1-n', 'SelectorDTValue'],\n    '0064': ['IS', '1-n', 'SelectorISValue'],\n    '0065': ['OB', '1', 'SelectorOBValue'],\n    '0066': ['LO', '1-n', 'SelectorLOValue'],\n    '0067': ['OF', '1', 'SelectorOFValue'],\n    '0068': ['LT', '1', 'SelectorLTValue'],\n    '0069': ['OW', '1', 'SelectorOWValue'],\n    '006A': ['PN', '1-n', 'SelectorPNValue'],\n    '006B': ['TM', '1-n', 'SelectorTMValue'],\n    '006C': ['SH', '1-n', 'SelectorSHValue'],\n    '006D': ['UN', '1', 'SelectorUNValue'],\n    '006E': ['ST', '1', 'SelectorSTValue'],\n    '006F': ['UC', '1-n', 'SelectorUCValue'],\n    '0070': ['UT', '1', 'SelectorUTValue'],\n    '0071': ['UR', '1', 'SelectorURValue'],\n    '0072': ['DS', '1-n', 'SelectorDSValue'],\n    '0073': ['OD', '1', 'SelectorODValue'],\n    '0074': ['FD', '1-n', 'SelectorFDValue'],\n    '0075': ['OL', '1', 'SelectorOLValue'],\n    '0076': ['FL', '1-n', 'SelectorFLValue'],\n    '0078': ['UL', '1-n', 'SelectorULValue'],\n    '007A': ['US', '1-n', 'SelectorUSValue'],\n    '007C': ['SL', '1-n', 'SelectorSLValue'],\n    '007E': ['SS', '1-n', 'SelectorSSValue'],\n    '007F': ['UI', '1-n', 'SelectorUIValue'],\n    '0080': ['SQ', '1', 'SelectorCodeSequenceValue'],\n    '0081': ['OV', '1', 'SelectorOVValue'],\n    '0082': ['SV', '1-n', 'SelectorSVValue'],\n    '0083': ['UV', '1-n', 'SelectorUVValue'],\n    '0100': ['US', '1', 'NumberOfScreens'],\n    '0102': ['SQ', '1', 'NominalScreenDefinitionSequence'],\n    '0104': ['US', '1', 'NumberOfVerticalPixels'],\n    '0106': ['US', '1', 'NumberOfHorizontalPixels'],\n    '0108': ['FD', '4', 'DisplayEnvironmentSpatialPosition'],\n    '010A': ['US', '1', 'ScreenMinimumGrayscaleBitDepth'],\n    '010C': ['US', '1', 'ScreenMinimumColorBitDepth'],\n    '010E': ['US', '1', 'ApplicationMaximumRepaintTime'],\n    '0200': ['SQ', '1', 'DisplaySetsSequence'],\n    '0202': ['US', '1', 'DisplaySetNumber'],\n    '0203': ['LO', '1', 'DisplaySetLabel'],\n    '0204': ['US', '1', 'DisplaySetPresentationGroup'],\n    '0206': ['LO', '1', 'DisplaySetPresentationGroupDescription'],\n    '0208': ['CS', '1', 'PartialDataDisplayHandling'],\n    '0210': ['SQ', '1', 'SynchronizedScrollingSequence'],\n    '0212': ['US', '2-n', 'DisplaySetScrollingGroup'],\n    '0214': ['SQ', '1', 'NavigationIndicatorSequence'],\n    '0216': ['US', '1', 'NavigationDisplaySet'],\n    '0218': ['US', '1-n', 'ReferenceDisplaySets'],\n    '0300': ['SQ', '1', 'ImageBoxesSequence'],\n    '0302': ['US', '1', 'ImageBoxNumber'],\n    '0304': ['CS', '1', 'ImageBoxLayoutType'],\n    '0306': ['US', '1', 'ImageBoxTileHorizontalDimension'],\n    '0308': ['US', '1', 'ImageBoxTileVerticalDimension'],\n    '0310': ['CS', '1', 'ImageBoxScrollDirection'],\n    '0312': ['CS', '1', 'ImageBoxSmallScrollType'],\n    '0314': ['US', '1', 'ImageBoxSmallScrollAmount'],\n    '0316': ['CS', '1', 'ImageBoxLargeScrollType'],\n    '0318': ['US', '1', 'ImageBoxLargeScrollAmount'],\n    '0320': ['US', '1', 'ImageBoxOverlapPriority'],\n    '0330': ['FD', '1', 'CineRelativeToRealTime'],\n    '0400': ['SQ', '1', 'FilterOperationsSequence'],\n    '0402': ['CS', '1', 'FilterByCategory'],\n    '0404': ['CS', '1', 'FilterByAttributePresence'],\n    '0406': ['CS', '1', 'FilterByOperator'],\n    '0420': ['US', '3', 'StructuredDisplayBackgroundCIELabValue'],\n    '0421': ['US', '3', 'EmptyImageBoxCIELabValue'],\n    '0422': ['SQ', '1', 'StructuredDisplayImageBoxSequence'],\n    '0424': ['SQ', '1', 'StructuredDisplayTextBoxSequence'],\n    '0427': ['SQ', '1', 'ReferencedFirstFrameSequence'],\n    '0430': ['SQ', '1', 'ImageBoxSynchronizationSequence'],\n    '0432': ['US', '2-n', 'SynchronizedImageBoxList'],\n    '0434': ['CS', '1', 'TypeOfSynchronization'],\n    '0500': ['CS', '1', 'BlendingOperationType'],\n    '0510': ['CS', '1', 'ReformattingOperationType'],\n    '0512': ['FD', '1', 'ReformattingThickness'],\n    '0514': ['FD', '1', 'ReformattingInterval'],\n    '0516': ['CS', '1', 'ReformattingOperationInitialViewDirection'],\n    '0520': ['CS', '1-n', 'ThreeDRenderingType'],\n    '0600': ['SQ', '1', 'SortingOperationsSequence'],\n    '0602': ['CS', '1', 'SortByCategory'],\n    '0604': ['CS', '1', 'SortingDirection'],\n    '0700': ['CS', '2', 'DisplaySetPatientOrientation'],\n    '0702': ['CS', '1', 'VOIType'],\n    '0704': ['CS', '1', 'PseudoColorType'],\n    '0705': ['SQ', '1', 'PseudoColorPaletteInstanceReferenceSequence'],\n    '0706': ['CS', '1', 'ShowGrayscaleInverted'],\n    '0710': ['CS', '1', 'ShowImageTrueSizeFlag'],\n    '0712': ['CS', '1', 'ShowGraphicAnnotationFlag'],\n    '0714': ['CS', '1', 'ShowPatientDemographicsFlag'],\n    '0716': ['CS', '1', 'ShowAcquisitionTechniquesFlag'],\n    '0717': ['CS', '1', 'DisplaySetHorizontalJustification'],\n    '0718': ['CS', '1', 'DisplaySetVerticalJustification']\n  },\n  '0074': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0120': ['FD', '1', 'ContinuationStartMeterset'],\n    '0121': ['FD', '1', 'ContinuationEndMeterset'],\n    '1000': ['CS', '1', 'ProcedureStepState'],\n    '1002': ['SQ', '1', 'ProcedureStepProgressInformationSequence'],\n    '1004': ['DS', '1', 'ProcedureStepProgress'],\n    '1006': ['ST', '1', 'ProcedureStepProgressDescription'],\n    '1007': ['SQ', '1', 'ProcedureStepProgressParametersSequence'],\n    '1008': ['SQ', '1', 'ProcedureStepCommunicationsURISequence'],\n    '100A': ['UR', '1', 'ContactURI'],\n    '100C': ['LO', '1', 'ContactDisplayName'],\n    '100E': ['SQ', '1', 'ProcedureStepDiscontinuationReasonCodeSequence'],\n    '1020': ['SQ', '1', 'BeamTaskSequence'],\n    '1022': ['CS', '1', 'BeamTaskType'],\n    '1024': ['IS', '1', 'BeamOrderIndexTrial'],\n    '1025': ['CS', '1', 'AutosequenceFlag'],\n    '1026': ['FD', '1', 'TableTopVerticalAdjustedPosition'],\n    '1027': ['FD', '1', 'TableTopLongitudinalAdjustedPosition'],\n    '1028': ['FD', '1', 'TableTopLateralAdjustedPosition'],\n    '102A': ['FD', '1', 'PatientSupportAdjustedAngle'],\n    '102B': ['FD', '1', 'TableTopEccentricAdjustedAngle'],\n    '102C': ['FD', '1', 'TableTopPitchAdjustedAngle'],\n    '102D': ['FD', '1', 'TableTopRollAdjustedAngle'],\n    '1030': ['SQ', '1', 'DeliveryVerificationImageSequence'],\n    '1032': ['CS', '1', 'VerificationImageTiming'],\n    '1034': ['CS', '1', 'DoubleExposureFlag'],\n    '1036': ['CS', '1', 'DoubleExposureOrdering'],\n    '1038': ['DS', '1', 'DoubleExposureMetersetTrial'],\n    '103A': ['DS', '4', 'DoubleExposureFieldDeltaTrial'],\n    '1040': ['SQ', '1', 'RelatedReferenceRTImageSequence'],\n    '1042': ['SQ', '1', 'GeneralMachineVerificationSequence'],\n    '1044': ['SQ', '1', 'ConventionalMachineVerificationSequence'],\n    '1046': ['SQ', '1', 'IonMachineVerificationSequence'],\n    '1048': ['SQ', '1', 'FailedAttributesSequence'],\n    '104A': ['SQ', '1', 'OverriddenAttributesSequence'],\n    '104C': ['SQ', '1', 'ConventionalControlPointVerificationSequence'],\n    '104E': ['SQ', '1', 'IonControlPointVerificationSequence'],\n    '1050': ['SQ', '1', 'AttributeOccurrenceSequence'],\n    '1052': ['AT', '1', 'AttributeOccurrencePointer'],\n    '1054': ['UL', '1', 'AttributeItemSelector'],\n    '1056': ['LO', '1', 'AttributeOccurrencePrivateCreator'],\n    '1057': ['IS', '1-n', 'SelectorSequencePointerItems'],\n    '1200': ['CS', '1', 'ScheduledProcedureStepPriority'],\n    '1202': ['LO', '1', 'WorklistLabel'],\n    '1204': ['LO', '1', 'ProcedureStepLabel'],\n    '1210': ['SQ', '1', 'ScheduledProcessingParametersSequence'],\n    '1212': ['SQ', '1', 'PerformedProcessingParametersSequence'],\n    '1216': ['SQ', '1', 'UnifiedProcedureStepPerformedProcedureSequence'],\n    '1220': ['SQ', '1', 'RelatedProcedureStepSequence'],\n    '1222': ['LO', '1', 'ProcedureStepRelationshipType'],\n    '1224': ['SQ', '1', 'ReplacedProcedureStepSequence'],\n    '1230': ['LO', '1', 'DeletionLock'],\n    '1234': ['AE', '1', 'ReceivingAE'],\n    '1236': ['AE', '1', 'RequestingAE'],\n    '1238': ['LT', '1', 'ReasonForCancellation'],\n    '1242': ['CS', '1', 'SCPStatus'],\n    '1244': ['CS', '1', 'SubscriptionListStatus'],\n    '1246': ['CS', '1', 'UnifiedProcedureStepListStatus'],\n    '1324': ['UL', '1', 'BeamOrderIndex'],\n    '1338': ['FD', '1', 'DoubleExposureMeterset'],\n    '133A': ['FD', '4', 'DoubleExposureFieldDelta'],\n    '1401': ['SQ', '1', 'BrachyTaskSequence'],\n    '1402': ['DS', '1', 'ContinuationStartTotalReferenceAirKerma'],\n    '1403': ['DS', '1', 'ContinuationEndTotalReferenceAirKerma'],\n    '1404': ['IS', '1', 'ContinuationPulseNumber'],\n    '1405': ['SQ', '1', 'ChannelDeliveryOrderSequence'],\n    '1406': ['IS', '1', 'ReferencedChannelNumber'],\n    '1407': ['DS', '1', 'StartCumulativeTimeWeight'],\n    '1408': ['DS', '1', 'EndCumulativeTimeWeight'],\n    '1409': ['SQ', '1', 'OmittedChannelSequence'],\n    '140A': ['CS', '1', 'ReasonForChannelOmission'],\n    '140B': ['LO', '1', 'ReasonForChannelOmissionDescription'],\n    '140C': ['IS', '1', 'ChannelDeliveryOrderIndex'],\n    '140D': ['SQ', '1', 'ChannelDeliveryContinuationSequence'],\n    '140E': ['SQ', '1', 'OmittedApplicationSetupSequence']\n  },\n  '0076': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['LO', '1', 'ImplantAssemblyTemplateName'],\n    '0003': ['LO', '1', 'ImplantAssemblyTemplateIssuer'],\n    '0006': ['LO', '1', 'ImplantAssemblyTemplateVersion'],\n    '0008': ['SQ', '1', 'ReplacedImplantAssemblyTemplateSequence'],\n    '000A': ['CS', '1', 'ImplantAssemblyTemplateType'],\n    '000C': ['SQ', '1', 'OriginalImplantAssemblyTemplateSequence'],\n    '000E': ['SQ', '1', 'DerivationImplantAssemblyTemplateSequence'],\n    '0010': ['SQ', '1', 'ImplantAssemblyTemplateTargetAnatomySequence'],\n    '0020': ['SQ', '1', 'ProcedureTypeCodeSequence'],\n    '0030': ['LO', '1', 'SurgicalTechnique'],\n    '0032': ['SQ', '1', 'ComponentTypesSequence'],\n    '0034': ['SQ', '1', 'ComponentTypeCodeSequence'],\n    '0036': ['CS', '1', 'ExclusiveComponentType'],\n    '0038': ['CS', '1', 'MandatoryComponentType'],\n    '0040': ['SQ', '1', 'ComponentSequence'],\n    '0055': ['US', '1', 'ComponentID'],\n    '0060': ['SQ', '1', 'ComponentAssemblySequence'],\n    '0070': ['US', '1', 'Component1ReferencedID'],\n    '0080': ['US', '1', 'Component1ReferencedMatingFeatureSetID'],\n    '0090': ['US', '1', 'Component1ReferencedMatingFeatureID'],\n    '00A0': ['US', '1', 'Component2ReferencedID'],\n    '00B0': ['US', '1', 'Component2ReferencedMatingFeatureSetID'],\n    '00C0': ['US', '1', 'Component2ReferencedMatingFeatureID']\n  },\n  '0078': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['LO', '1', 'ImplantTemplateGroupName'],\n    '0010': ['ST', '1', 'ImplantTemplateGroupDescription'],\n    '0020': ['LO', '1', 'ImplantTemplateGroupIssuer'],\n    '0024': ['LO', '1', 'ImplantTemplateGroupVersion'],\n    '0026': ['SQ', '1', 'ReplacedImplantTemplateGroupSequence'],\n    '0028': ['SQ', '1', 'ImplantTemplateGroupTargetAnatomySequence'],\n    '002A': ['SQ', '1', 'ImplantTemplateGroupMembersSequence'],\n    '002E': ['US', '1', 'ImplantTemplateGroupMemberID'],\n    '0050': ['FD', '3', 'ThreeDImplantTemplateGroupMemberMatchingPoint'],\n    '0060': ['FD', '9', 'ThreeDImplantTemplateGroupMemberMatchingAxes'],\n    '0070': ['SQ', '1', 'ImplantTemplateGroupMemberMatching2DCoordinatesSequence'],\n    '0090': ['FD', '2', 'TwoDImplantTemplateGroupMemberMatchingPoint'],\n    '00A0': ['FD', '4', 'TwoDImplantTemplateGroupMemberMatchingAxes'],\n    '00B0': ['SQ', '1', 'ImplantTemplateGroupVariationDimensionSequence'],\n    '00B2': ['LO', '1', 'ImplantTemplateGroupVariationDimensionName'],\n    '00B4': ['SQ', '1', 'ImplantTemplateGroupVariationDimensionRankSequence'],\n    '00B6': ['US', '1', 'ReferencedImplantTemplateGroupMemberID'],\n    '00B8': ['US', '1', 'ImplantTemplateGroupVariationDimensionRank']\n  },\n  '0080': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'SurfaceScanAcquisitionTypeCodeSequence'],\n    '0002': ['SQ', '1', 'SurfaceScanModeCodeSequence'],\n    '0003': ['SQ', '1', 'RegistrationMethodCodeSequence'],\n    '0004': ['FD', '1', 'ShotDurationTime'],\n    '0005': ['FD', '1', 'ShotOffsetTime'],\n    '0006': ['US', '1-n', 'SurfacePointPresentationValueData'],\n    '0007': ['US', '3-3n', 'SurfacePointColorCIELabValueData'],\n    '0008': ['SQ', '1', 'UVMappingSequence'],\n    '0009': ['SH', '1', 'TextureLabel'],\n    '0010': ['OF', '1', 'UValueData'],\n    '0011': ['OF', '1', 'VValueData'],\n    '0012': ['SQ', '1', 'ReferencedTextureSequence'],\n    '0013': ['SQ', '1', 'ReferencedSurfaceDataSequence']\n  },\n  '0082': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'AssessmentSummary'],\n    '0003': ['UT', '1', 'AssessmentSummaryDescription'],\n    '0004': ['SQ', '1', 'AssessedSOPInstanceSequence'],\n    '0005': ['SQ', '1', 'ReferencedComparisonSOPInstanceSequence'],\n    '0006': ['UL', '1', 'NumberOfAssessmentObservations'],\n    '0007': ['SQ', '1', 'AssessmentObservationsSequence'],\n    '0008': ['CS', '1', 'ObservationSignificance'],\n    '000A': ['UT', '1', 'ObservationDescription'],\n    '000C': ['SQ', '1', 'StructuredConstraintObservationSequence'],\n    '0010': ['SQ', '1', 'AssessedAttributeValueSequence'],\n    '0016': ['LO', '1', 'AssessmentSetID'],\n    '0017': ['SQ', '1', 'AssessmentRequesterSequence'],\n    '0018': ['LO', '1', 'SelectorAttributeName'],\n    '0019': ['LO', '1', 'SelectorAttributeKeyword'],\n    '0021': ['SQ', '1', 'AssessmentTypeCodeSequence'],\n    '0022': ['SQ', '1', 'ObservationBasisCodeSequence'],\n    '0023': ['LO', '1', 'AssessmentLabel'],\n    '0032': ['CS', '1', 'ConstraintType'],\n    '0033': ['UT', '1', 'SpecificationSelectionGuidance'],\n    '0034': ['SQ', '1', 'ConstraintValueSequence'],\n    '0035': ['SQ', '1', 'RecommendedDefaultValueSequence'],\n    '0036': ['CS', '1', 'ConstraintViolationSignificance'],\n    '0037': ['UT', '1', 'ConstraintViolationCondition'],\n    '0038': ['CS', '1', 'ModifiableConstraintFlag']\n  },\n  '0088': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0130': ['SH', '1', 'StorageMediaFileSetID'],\n    '0140': ['UI', '1', 'StorageMediaFileSetUID'],\n    '0200': ['SQ', '1', 'IconImageSequence'],\n    '0904': ['LO', '1', 'TopicTitle'],\n    '0906': ['ST', '1', 'TopicSubject'],\n    '0910': ['LO', '1', 'TopicAuthor'],\n    '0912': ['LO', '1-32', 'TopicKeywords']\n  },\n  '0100': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0410': ['CS', '1', 'SOPInstanceStatus'],\n    '0420': ['DT', '1', 'SOPAuthorizationDateTime'],\n    '0424': ['LT', '1', 'SOPAuthorizationComment'],\n    '0426': ['LO', '1', 'AuthorizationEquipmentCertificationNumber']\n  },\n  '0400': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0005': ['US', '1', 'MACIDNumber'],\n    '0010': ['UI', '1', 'MACCalculationTransferSyntaxUID'],\n    '0015': ['CS', '1', 'MACAlgorithm'],\n    '0020': ['AT', '1-n', 'DataElementsSigned'],\n    '0100': ['UI', '1', 'DigitalSignatureUID'],\n    '0105': ['DT', '1', 'DigitalSignatureDateTime'],\n    '0110': ['CS', '1', 'CertificateType'],\n    '0115': ['OB', '1', 'CertificateOfSigner'],\n    '0120': ['OB', '1', 'Signature'],\n    '0305': ['CS', '1', 'CertifiedTimestampType'],\n    '0310': ['OB', '1', 'CertifiedTimestamp'],\n    '0315': ['FL', '1', ''],\n    '0401': ['SQ', '1', 'DigitalSignaturePurposeCodeSequence'],\n    '0402': ['SQ', '1', 'ReferencedDigitalSignatureSequence'],\n    '0403': ['SQ', '1', 'ReferencedSOPInstanceMACSequence'],\n    '0404': ['OB', '1', 'MAC'],\n    '0500': ['SQ', '1', 'EncryptedAttributesSequence'],\n    '0510': ['UI', '1', 'EncryptedContentTransferSyntaxUID'],\n    '0520': ['OB', '1', 'EncryptedContent'],\n    '0550': ['SQ', '1', 'ModifiedAttributesSequence'],\n    '0551': ['SQ', '1', 'NonconformingModifiedAttributesSequence'],\n    '0552': ['OB', '1', 'NonconformingDataElementValue'],\n    '0561': ['SQ', '1', 'OriginalAttributesSequence'],\n    '0562': ['DT', '1', 'AttributeModificationDateTime'],\n    '0563': ['LO', '1', 'ModifyingSystem'],\n    '0564': ['LO', '1', 'SourceOfPreviousValues'],\n    '0565': ['CS', '1', 'ReasonForTheAttributeModification'],\n    '0600': ['CS', '1', 'InstanceOriginStatus']\n  },\n  '1000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '3', 'EscapeTriplet'],\n    '0011': ['US', '3', 'RunLengthTriplet'],\n    '0012': ['US', '1', 'HuffmanTableSize'],\n    '0013': ['US', '3', 'HuffmanTableTriplet'],\n    '0014': ['US', '1', 'ShiftTableSize'],\n    '0015': ['US', '3', 'ShiftTableTriplet']\n  },\n  '1010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0004': ['US', '1-n', 'ZonalMap']\n  },\n  '2000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['IS', '1', 'NumberOfCopies'],\n    '001E': ['SQ', '1', 'PrinterConfigurationSequence'],\n    '0020': ['CS', '1', 'PrintPriority'],\n    '0030': ['CS', '1', 'MediumType'],\n    '0040': ['CS', '1', 'FilmDestination'],\n    '0050': ['LO', '1', 'FilmSessionLabel'],\n    '0060': ['IS', '1', 'MemoryAllocation'],\n    '0061': ['IS', '1', 'MaximumMemoryAllocation'],\n    '0062': ['CS', '1', 'ColorImagePrintingFlag'],\n    '0063': ['CS', '1', 'CollationFlag'],\n    '0065': ['CS', '1', 'AnnotationFlag'],\n    '0067': ['CS', '1', 'ImageOverlayFlag'],\n    '0069': ['CS', '1', 'PresentationLUTFlag'],\n    '006A': ['CS', '1', 'ImageBoxPresentationLUTFlag'],\n    '00A0': ['US', '1', 'MemoryBitDepth'],\n    '00A1': ['US', '1', 'PrintingBitDepth'],\n    '00A2': ['SQ', '1', 'MediaInstalledSequence'],\n    '00A4': ['SQ', '1', 'OtherMediaAvailableSequence'],\n    '00A8': ['SQ', '1', 'SupportedImageDisplayFormatsSequence'],\n    '0500': ['SQ', '1', 'ReferencedFilmBoxSequence'],\n    '0510': ['SQ', '1', 'ReferencedStoredPrintSequence']\n  },\n  '2010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['ST', '1', 'ImageDisplayFormat'],\n    '0030': ['CS', '1', 'AnnotationDisplayFormatID'],\n    '0040': ['CS', '1', 'FilmOrientation'],\n    '0050': ['CS', '1', 'FilmSizeID'],\n    '0052': ['CS', '1', 'PrinterResolutionID'],\n    '0054': ['CS', '1', 'DefaultPrinterResolutionID'],\n    '0060': ['CS', '1', 'MagnificationType'],\n    '0080': ['CS', '1', 'SmoothingType'],\n    '00A6': ['CS', '1', 'DefaultMagnificationType'],\n    '00A7': ['CS', '1-n', 'OtherMagnificationTypesAvailable'],\n    '00A8': ['CS', '1', 'DefaultSmoothingType'],\n    '00A9': ['CS', '1-n', 'OtherSmoothingTypesAvailable'],\n    '0100': ['CS', '1', 'BorderDensity'],\n    '0110': ['CS', '1', 'EmptyImageDensity'],\n    '0120': ['US', '1', 'MinDensity'],\n    '0130': ['US', '1', 'MaxDensity'],\n    '0140': ['CS', '1', 'Trim'],\n    '0150': ['ST', '1', 'ConfigurationInformation'],\n    '0152': ['LT', '1', 'ConfigurationInformationDescription'],\n    '0154': ['IS', '1', 'MaximumCollatedFilms'],\n    '015E': ['US', '1', 'Illumination'],\n    '0160': ['US', '1', 'ReflectedAmbientLight'],\n    '0376': ['DS', '2', 'PrinterPixelSpacing'],\n    '0500': ['SQ', '1', 'ReferencedFilmSessionSequence'],\n    '0510': ['SQ', '1', 'ReferencedImageBoxSequence'],\n    '0520': ['SQ', '1', 'ReferencedBasicAnnotationBoxSequence']\n  },\n  '2020': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '1', 'ImageBoxPosition'],\n    '0020': ['CS', '1', 'Polarity'],\n    '0030': ['DS', '1', 'RequestedImageSize'],\n    '0040': ['CS', '1', 'RequestedDecimateCropBehavior'],\n    '0050': ['CS', '1', 'RequestedResolutionID'],\n    '00A0': ['CS', '1', 'RequestedImageSizeFlag'],\n    '00A2': ['CS', '1', 'DecimateCropResult'],\n    '0110': ['SQ', '1', 'BasicGrayscaleImageSequence'],\n    '0111': ['SQ', '1', 'BasicColorImageSequence'],\n    '0130': ['SQ', '1', 'ReferencedImageOverlayBoxSequence'],\n    '0140': ['SQ', '1', 'ReferencedVOILUTBoxSequence']\n  },\n  '2030': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '1', 'AnnotationPosition'],\n    '0020': ['LO', '1', 'TextString']\n  },\n  '2040': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SQ', '1', 'ReferencedOverlayPlaneSequence'],\n    '0011': ['US', '1-99', 'ReferencedOverlayPlaneGroups'],\n    '0020': ['SQ', '1', 'OverlayPixelDataSequence'],\n    '0060': ['CS', '1', 'OverlayMagnificationType'],\n    '0070': ['CS', '1', 'OverlaySmoothingType'],\n    '0072': ['CS', '1', 'OverlayOrImageMagnification'],\n    '0074': ['US', '1', 'MagnifyToNumberOfColumns'],\n    '0080': ['CS', '1', 'OverlayForegroundDensity'],\n    '0082': ['CS', '1', 'OverlayBackgroundDensity'],\n    '0090': ['CS', '1', 'OverlayMode'],\n    '0100': ['CS', '1', 'ThresholdDensity'],\n    '0500': ['SQ', '1', 'ReferencedImageBoxSequenceRetired']\n  },\n  '2050': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SQ', '1', 'PresentationLUTSequence'],\n    '0020': ['CS', '1', 'PresentationLUTShape'],\n    '0500': ['SQ', '1', 'ReferencedPresentationLUTSequence']\n  },\n  '2100': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SH', '1', 'PrintJobID'],\n    '0020': ['CS', '1', 'ExecutionStatus'],\n    '0030': ['CS', '1', 'ExecutionStatusInfo'],\n    '0040': ['DA', '1', 'CreationDate'],\n    '0050': ['TM', '1', 'CreationTime'],\n    '0070': ['AE', '1', 'Originator'],\n    '0140': ['AE', '1', 'DestinationAE'],\n    '0160': ['SH', '1', 'OwnerID'],\n    '0170': ['IS', '1', 'NumberOfFilms'],\n    '0500': ['SQ', '1', 'ReferencedPrintJobSequencePullStoredPrint']\n  },\n  '2110': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['CS', '1', 'PrinterStatus'],\n    '0020': ['CS', '1', 'PrinterStatusInfo'],\n    '0030': ['LO', '1', 'PrinterName'],\n    '0099': ['SH', '1', 'PrintQueueID']\n  },\n  '2120': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['CS', '1', 'QueueStatus'],\n    '0050': ['SQ', '1', 'PrintJobDescriptionSequence'],\n    '0070': ['SQ', '1', 'ReferencedPrintJobSequence']\n  },\n  '2130': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SQ', '1', 'PrintManagementCapabilitiesSequence'],\n    '0015': ['SQ', '1', 'PrinterCharacteristicsSequence'],\n    '0030': ['SQ', '1', 'FilmBoxContentSequence'],\n    '0040': ['SQ', '1', 'ImageBoxContentSequence'],\n    '0050': ['SQ', '1', 'AnnotationContentSequence'],\n    '0060': ['SQ', '1', 'ImageOverlayBoxContentSequence'],\n    '0080': ['SQ', '1', 'PresentationLUTContentSequence'],\n    '00A0': ['SQ', '1', 'ProposedStudySequence'],\n    '00C0': ['SQ', '1', 'OriginalImageSequence']\n  },\n  '2200': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'LabelUsingInformationExtractedFromInstances'],\n    '0002': ['UT', '1', 'LabelText'],\n    '0003': ['CS', '1', 'LabelStyleSelection'],\n    '0004': ['LT', '1', 'MediaDisposition'],\n    '0005': ['LT', '1', 'BarcodeValue'],\n    '0006': ['CS', '1', 'BarcodeSymbology'],\n    '0007': ['CS', '1', 'AllowMediaSplitting'],\n    '0008': ['CS', '1', 'IncludeNonDICOMObjects'],\n    '0009': ['CS', '1', 'IncludeDisplayApplication'],\n    '000A': ['CS', '1', 'PreserveCompositeInstancesAfterMediaCreation'],\n    '000B': ['US', '1', 'TotalNumberOfPiecesOfMediaCreated'],\n    '000C': ['LO', '1', 'RequestedMediaApplicationProfile'],\n    '000D': ['SQ', '1', 'ReferencedStorageMediaSequence'],\n    '000E': ['AT', '1-n', 'FailureAttributes'],\n    '000F': ['CS', '1', 'AllowLossyCompression'],\n    '0020': ['CS', '1', 'RequestPriority']\n  },\n  '3002': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SH', '1', 'RTImageLabel'],\n    '0003': ['LO', '1', 'RTImageName'],\n    '0004': ['ST', '1', 'RTImageDescription'],\n    '000A': ['CS', '1', 'ReportedValuesOrigin'],\n    '000C': ['CS', '1', 'RTImagePlane'],\n    '000D': ['DS', '3', 'XRayImageReceptorTranslation'],\n    '000E': ['DS', '1', 'XRayImageReceptorAngle'],\n    '0010': ['DS', '6', 'RTImageOrientation'],\n    '0011': ['DS', '2', 'ImagePlanePixelSpacing'],\n    '0012': ['DS', '2', 'RTImagePosition'],\n    '0020': ['SH', '1', 'RadiationMachineName'],\n    '0022': ['DS', '1', 'RadiationMachineSAD'],\n    '0024': ['DS', '1', 'RadiationMachineSSD'],\n    '0026': ['DS', '1', 'RTImageSID'],\n    '0028': ['DS', '1', 'SourceToReferenceObjectDistance'],\n    '0029': ['IS', '1', 'FractionNumber'],\n    '0030': ['SQ', '1', 'ExposureSequence'],\n    '0032': ['DS', '1', 'MetersetExposure'],\n    '0034': ['DS', '4', 'DiaphragmPosition'],\n    '0040': ['SQ', '1', 'FluenceMapSequence'],\n    '0041': ['CS', '1', 'FluenceDataSource'],\n    '0042': ['DS', '1', 'FluenceDataScale'],\n    '0050': ['SQ', '1', 'PrimaryFluenceModeSequence'],\n    '0051': ['CS', '1', 'FluenceMode'],\n    '0052': ['SH', '1', 'FluenceModeID']\n  },\n  '3004': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'DVHType'],\n    '0002': ['CS', '1', 'DoseUnits'],\n    '0004': ['CS', '1', 'DoseType'],\n    '0005': ['CS', '1', 'SpatialTransformOfDose'],\n    '0006': ['LO', '1', 'DoseComment'],\n    '0008': ['DS', '3', 'NormalizationPoint'],\n    '000A': ['CS', '1', 'DoseSummationType'],\n    '000C': ['DS', '2-n', 'GridFrameOffsetVector'],\n    '000E': ['DS', '1', 'DoseGridScaling'],\n    '0010': ['SQ', '1', 'RTDoseROISequence'],\n    '0012': ['DS', '1', 'DoseValue'],\n    '0014': ['CS', '1-3', 'TissueHeterogeneityCorrection'],\n    '0040': ['DS', '3', 'DVHNormalizationPoint'],\n    '0042': ['DS', '1', 'DVHNormalizationDoseValue'],\n    '0050': ['SQ', '1', 'DVHSequence'],\n    '0052': ['DS', '1', 'DVHDoseScaling'],\n    '0054': ['CS', '1', 'DVHVolumeUnits'],\n    '0056': ['IS', '1', 'DVHNumberOfBins'],\n    '0058': ['DS', '2-2n', 'DVHData'],\n    '0060': ['SQ', '1', 'DVHReferencedROISequence'],\n    '0062': ['CS', '1', 'DVHROIContributionType'],\n    '0070': ['DS', '1', 'DVHMinimumDose'],\n    '0072': ['DS', '1', 'DVHMaximumDose'],\n    '0074': ['DS', '1', 'DVHMeanDose']\n  },\n  '3006': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SH', '1', 'StructureSetLabel'],\n    '0004': ['LO', '1', 'StructureSetName'],\n    '0006': ['ST', '1', 'StructureSetDescription'],\n    '0008': ['DA', '1', 'StructureSetDate'],\n    '0009': ['TM', '1', 'StructureSetTime'],\n    '0010': ['SQ', '1', 'ReferencedFrameOfReferenceSequence'],\n    '0012': ['SQ', '1', 'RTReferencedStudySequence'],\n    '0014': ['SQ', '1', 'RTReferencedSeriesSequence'],\n    '0016': ['SQ', '1', 'ContourImageSequence'],\n    '0018': ['SQ', '1', 'PredecessorStructureSetSequence'],\n    '0020': ['SQ', '1', 'StructureSetROISequence'],\n    '0022': ['IS', '1', 'ROINumber'],\n    '0024': ['UI', '1', 'ReferencedFrameOfReferenceUID'],\n    '0026': ['LO', '1', 'ROIName'],\n    '0028': ['ST', '1', 'ROIDescription'],\n    '002A': ['IS', '3', 'ROIDisplayColor'],\n    '002C': ['DS', '1', 'ROIVolume'],\n    '0030': ['SQ', '1', 'RTRelatedROISequence'],\n    '0033': ['CS', '1', 'RTROIRelationship'],\n    '0036': ['CS', '1', 'ROIGenerationAlgorithm'],\n    '0037': ['SQ', '1', 'ROIDerivationAlgorithmIdentificationSequence'],\n    '0038': ['LO', '1', 'ROIGenerationDescription'],\n    '0039': ['SQ', '1', 'ROIContourSequence'],\n    '0040': ['SQ', '1', 'ContourSequence'],\n    '0042': ['CS', '1', 'ContourGeometricType'],\n    '0044': ['DS', '1', 'ContourSlabThickness'],\n    '0045': ['DS', '3', 'ContourOffsetVector'],\n    '0046': ['IS', '1', 'NumberOfContourPoints'],\n    '0048': ['IS', '1', 'ContourNumber'],\n    '0049': ['IS', '1-n', 'AttachedContours'],\n    '004A': ['SQ', '1', 'SourcePixelPlanesCharacteristicsSequence'],\n    '0050': ['DS', '3-3n', 'ContourData'],\n    '0080': ['SQ', '1', 'RTROIObservationsSequence'],\n    '0082': ['IS', '1', 'ObservationNumber'],\n    '0084': ['IS', '1', 'ReferencedROINumber'],\n    '0085': ['SH', '1', 'ROIObservationLabel'],\n    '0086': ['SQ', '1', 'RTROIIdentificationCodeSequence'],\n    '0088': ['ST', '1', 'ROIObservationDescription'],\n    '00A0': ['SQ', '1', 'RelatedRTROIObservationsSequence'],\n    '00A4': ['CS', '1', 'RTROIInterpretedType'],\n    '00A6': ['PN', '1', 'ROIInterpreter'],\n    '00B0': ['SQ', '1', 'ROIPhysicalPropertiesSequence'],\n    '00B2': ['CS', '1', 'ROIPhysicalProperty'],\n    '00B4': ['DS', '1', 'ROIPhysicalPropertyValue'],\n    '00B6': ['SQ', '1', 'ROIElementalCompositionSequence'],\n    '00B7': ['US', '1', 'ROIElementalCompositionAtomicNumber'],\n    '00B8': ['FL', '1', 'ROIElementalCompositionAtomicMassFraction'],\n    '00B9': ['SQ', '1', 'AdditionalRTROIIdentificationCodeSequence'],\n    '00C0': ['SQ', '1', 'FrameOfReferenceRelationshipSequence'],\n    '00C2': ['UI', '1', 'RelatedFrameOfReferenceUID'],\n    '00C4': ['CS', '1', 'FrameOfReferenceTransformationType'],\n    '00C6': ['DS', '16', 'FrameOfReferenceTransformationMatrix'],\n    '00C8': ['LO', '1', 'FrameOfReferenceTransformationComment'],\n    '00C9': ['SQ', '1', 'PatientLocationCoordinatesSequence'],\n    '00CA': ['SQ', '1', 'PatientLocationCoordinatesCodeSequence'],\n    '00CB': ['SQ', '1', 'PatientSupportPositionSequence']\n  },\n  '3008': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SQ', '1', 'MeasuredDoseReferenceSequence'],\n    '0012': ['ST', '1', 'MeasuredDoseDescription'],\n    '0014': ['CS', '1', 'MeasuredDoseType'],\n    '0016': ['DS', '1', 'MeasuredDoseValue'],\n    '0020': ['SQ', '1', 'TreatmentSessionBeamSequence'],\n    '0021': ['SQ', '1', 'TreatmentSessionIonBeamSequence'],\n    '0022': ['IS', '1', 'CurrentFractionNumber'],\n    '0024': ['DA', '1', 'TreatmentControlPointDate'],\n    '0025': ['TM', '1', 'TreatmentControlPointTime'],\n    '002A': ['CS', '1', 'TreatmentTerminationStatus'],\n    '002B': ['SH', '1', 'TreatmentTerminationCode'],\n    '002C': ['CS', '1', 'TreatmentVerificationStatus'],\n    '0030': ['SQ', '1', 'ReferencedTreatmentRecordSequence'],\n    '0032': ['DS', '1', 'SpecifiedPrimaryMeterset'],\n    '0033': ['DS', '1', 'SpecifiedSecondaryMeterset'],\n    '0036': ['DS', '1', 'DeliveredPrimaryMeterset'],\n    '0037': ['DS', '1', 'DeliveredSecondaryMeterset'],\n    '003A': ['DS', '1', 'SpecifiedTreatmentTime'],\n    '003B': ['DS', '1', 'DeliveredTreatmentTime'],\n    '0040': ['SQ', '1', 'ControlPointDeliverySequence'],\n    '0041': ['SQ', '1', 'IonControlPointDeliverySequence'],\n    '0042': ['DS', '1', 'SpecifiedMeterset'],\n    '0044': ['DS', '1', 'DeliveredMeterset'],\n    '0045': ['FL', '1', 'MetersetRateSet'],\n    '0046': ['FL', '1', 'MetersetRateDelivered'],\n    '0047': ['FL', '1-n', 'ScanSpotMetersetsDelivered'],\n    '0048': ['DS', '1', 'DoseRateDelivered'],\n    '0050': ['SQ', '1', 'TreatmentSummaryCalculatedDoseReferenceSequence'],\n    '0052': ['DS', '1', 'CumulativeDoseToDoseReference'],\n    '0054': ['DA', '1', 'FirstTreatmentDate'],\n    '0056': ['DA', '1', 'MostRecentTreatmentDate'],\n    '005A': ['IS', '1', 'NumberOfFractionsDelivered'],\n    '0060': ['SQ', '1', 'OverrideSequence'],\n    '0061': ['AT', '1', 'ParameterSequencePointer'],\n    '0062': ['AT', '1', 'OverrideParameterPointer'],\n    '0063': ['IS', '1', 'ParameterItemIndex'],\n    '0064': ['IS', '1', 'MeasuredDoseReferenceNumber'],\n    '0065': ['AT', '1', 'ParameterPointer'],\n    '0066': ['ST', '1', 'OverrideReason'],\n    '0067': ['US', '1', 'ParameterValueNumber'],\n    '0068': ['SQ', '1', 'CorrectedParameterSequence'],\n    '006A': ['FL', '1', 'CorrectionValue'],\n    '0070': ['SQ', '1', 'CalculatedDoseReferenceSequence'],\n    '0072': ['IS', '1', 'CalculatedDoseReferenceNumber'],\n    '0074': ['ST', '1', 'CalculatedDoseReferenceDescription'],\n    '0076': ['DS', '1', 'CalculatedDoseReferenceDoseValue'],\n    '0078': ['DS', '1', 'StartMeterset'],\n    '007A': ['DS', '1', 'EndMeterset'],\n    '0080': ['SQ', '1', 'ReferencedMeasuredDoseReferenceSequence'],\n    '0082': ['IS', '1', 'ReferencedMeasuredDoseReferenceNumber'],\n    '0090': ['SQ', '1', 'ReferencedCalculatedDoseReferenceSequence'],\n    '0092': ['IS', '1', 'ReferencedCalculatedDoseReferenceNumber'],\n    '00A0': ['SQ', '1', 'BeamLimitingDeviceLeafPairsSequence'],\n    '00B0': ['SQ', '1', 'RecordedWedgeSequence'],\n    '00C0': ['SQ', '1', 'RecordedCompensatorSequence'],\n    '00D0': ['SQ', '1', 'RecordedBlockSequence'],\n    '00D1': ['SQ', '1', 'RecordedBlockSlabSequence'],\n    '00E0': ['SQ', '1', 'TreatmentSummaryMeasuredDoseReferenceSequence'],\n    '00F0': ['SQ', '1', 'RecordedSnoutSequence'],\n    '00F2': ['SQ', '1', 'RecordedRangeShifterSequence'],\n    '00F4': ['SQ', '1', 'RecordedLateralSpreadingDeviceSequence'],\n    '00F6': ['SQ', '1', 'RecordedRangeModulatorSequence'],\n    '0100': ['SQ', '1', 'RecordedSourceSequence'],\n    '0105': ['LO', '1', 'SourceSerialNumber'],\n    '0110': ['SQ', '1', 'TreatmentSessionApplicationSetupSequence'],\n    '0116': ['CS', '1', 'ApplicationSetupCheck'],\n    '0120': ['SQ', '1', 'RecordedBrachyAccessoryDeviceSequence'],\n    '0122': ['IS', '1', 'ReferencedBrachyAccessoryDeviceNumber'],\n    '0130': ['SQ', '1', 'RecordedChannelSequence'],\n    '0132': ['DS', '1', 'SpecifiedChannelTotalTime'],\n    '0134': ['DS', '1', 'DeliveredChannelTotalTime'],\n    '0136': ['IS', '1', 'SpecifiedNumberOfPulses'],\n    '0138': ['IS', '1', 'DeliveredNumberOfPulses'],\n    '013A': ['DS', '1', 'SpecifiedPulseRepetitionInterval'],\n    '013C': ['DS', '1', 'DeliveredPulseRepetitionInterval'],\n    '0140': ['SQ', '1', 'RecordedSourceApplicatorSequence'],\n    '0142': ['IS', '1', 'ReferencedSourceApplicatorNumber'],\n    '0150': ['SQ', '1', 'RecordedChannelShieldSequence'],\n    '0152': ['IS', '1', 'ReferencedChannelShieldNumber'],\n    '0160': ['SQ', '1', 'BrachyControlPointDeliveredSequence'],\n    '0162': ['DA', '1', 'SafePositionExitDate'],\n    '0164': ['TM', '1', 'SafePositionExitTime'],\n    '0166': ['DA', '1', 'SafePositionReturnDate'],\n    '0168': ['TM', '1', 'SafePositionReturnTime'],\n    '0171': ['SQ', '1', 'PulseSpecificBrachyControlPointDeliveredSequence'],\n    '0172': ['US', '1', 'PulseNumber'],\n    '0173': ['SQ', '1', 'BrachyPulseControlPointDeliveredSequence'],\n    '0200': ['CS', '1', 'CurrentTreatmentStatus'],\n    '0202': ['ST', '1', 'TreatmentStatusComment'],\n    '0220': ['SQ', '1', 'FractionGroupSummarySequence'],\n    '0223': ['IS', '1', 'ReferencedFractionNumber'],\n    '0224': ['CS', '1', 'FractionGroupType'],\n    '0230': ['CS', '1', 'BeamStopperPosition'],\n    '0240': ['SQ', '1', 'FractionStatusSummarySequence'],\n    '0250': ['DA', '1', 'TreatmentDate'],\n    '0251': ['TM', '1', 'TreatmentTime']\n  },\n  '300A': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SH', '1', 'RTPlanLabel'],\n    '0003': ['LO', '1', 'RTPlanName'],\n    '0004': ['ST', '1', 'RTPlanDescription'],\n    '0006': ['DA', '1', 'RTPlanDate'],\n    '0007': ['TM', '1', 'RTPlanTime'],\n    '0009': ['LO', '1-n', 'TreatmentProtocols'],\n    '000A': ['CS', '1', 'PlanIntent'],\n    '000B': ['LO', '1-n', 'TreatmentSites'],\n    '000C': ['CS', '1', 'RTPlanGeometry'],\n    '000E': ['ST', '1', 'PrescriptionDescription'],\n    '0010': ['SQ', '1', 'DoseReferenceSequence'],\n    '0012': ['IS', '1', 'DoseReferenceNumber'],\n    '0013': ['UI', '1', 'DoseReferenceUID'],\n    '0014': ['CS', '1', 'DoseReferenceStructureType'],\n    '0015': ['CS', '1', 'NominalBeamEnergyUnit'],\n    '0016': ['LO', '1', 'DoseReferenceDescription'],\n    '0018': ['DS', '3', 'DoseReferencePointCoordinates'],\n    '001A': ['DS', '1', 'NominalPriorDose'],\n    '0020': ['CS', '1', 'DoseReferenceType'],\n    '0021': ['DS', '1', 'ConstraintWeight'],\n    '0022': ['DS', '1', 'DeliveryWarningDose'],\n    '0023': ['DS', '1', 'DeliveryMaximumDose'],\n    '0025': ['DS', '1', 'TargetMinimumDose'],\n    '0026': ['DS', '1', 'TargetPrescriptionDose'],\n    '0027': ['DS', '1', 'TargetMaximumDose'],\n    '0028': ['DS', '1', 'TargetUnderdoseVolumeFraction'],\n    '002A': ['DS', '1', 'OrganAtRiskFullVolumeDose'],\n    '002B': ['DS', '1', 'OrganAtRiskLimitDose'],\n    '002C': ['DS', '1', 'OrganAtRiskMaximumDose'],\n    '002D': ['DS', '1', 'OrganAtRiskOverdoseVolumeFraction'],\n    '0040': ['SQ', '1', 'ToleranceTableSequence'],\n    '0042': ['IS', '1', 'ToleranceTableNumber'],\n    '0043': ['SH', '1', 'ToleranceTableLabel'],\n    '0044': ['DS', '1', 'GantryAngleTolerance'],\n    '0046': ['DS', '1', 'BeamLimitingDeviceAngleTolerance'],\n    '0048': ['SQ', '1', 'BeamLimitingDeviceToleranceSequence'],\n    '004A': ['DS', '1', 'BeamLimitingDevicePositionTolerance'],\n    '004B': ['FL', '1', 'SnoutPositionTolerance'],\n    '004C': ['DS', '1', 'PatientSupportAngleTolerance'],\n    '004E': ['DS', '1', 'TableTopEccentricAngleTolerance'],\n    '004F': ['FL', '1', 'TableTopPitchAngleTolerance'],\n    '0050': ['FL', '1', 'TableTopRollAngleTolerance'],\n    '0051': ['DS', '1', 'TableTopVerticalPositionTolerance'],\n    '0052': ['DS', '1', 'TableTopLongitudinalPositionTolerance'],\n    '0053': ['DS', '1', 'TableTopLateralPositionTolerance'],\n    '0055': ['CS', '1', 'RTPlanRelationship'],\n    '0070': ['SQ', '1', 'FractionGroupSequence'],\n    '0071': ['IS', '1', 'FractionGroupNumber'],\n    '0072': ['LO', '1', 'FractionGroupDescription'],\n    '0078': ['IS', '1', 'NumberOfFractionsPlanned'],\n    '0079': ['IS', '1', 'NumberOfFractionPatternDigitsPerDay'],\n    '007A': ['IS', '1', 'RepeatFractionCycleLength'],\n    '007B': ['LT', '1', 'FractionPattern'],\n    '0080': ['IS', '1', 'NumberOfBeams'],\n    '0082': ['DS', '3', 'BeamDoseSpecificationPoint'],\n    '0083': ['UI', '1', 'ReferencedDoseReferenceUID'],\n    '0084': ['DS', '1', 'BeamDose'],\n    '0086': ['DS', '1', 'BeamMeterset'],\n    '0088': ['FL', '1', 'BeamDosePointDepth'],\n    '0089': ['FL', '1', 'BeamDosePointEquivalentDepth'],\n    '008A': ['FL', '1', 'BeamDosePointSSD'],\n    '008B': ['CS', '1', 'BeamDoseMeaning'],\n    '008C': ['SQ', '1', 'BeamDoseVerificationControlPointSequence'],\n    '008D': ['FL', '1', 'AverageBeamDosePointDepth'],\n    '008E': ['FL', '1', 'AverageBeamDosePointEquivalentDepth'],\n    '008F': ['FL', '1', 'AverageBeamDosePointSSD'],\n    '0090': ['CS', '1', 'BeamDoseType'],\n    '0091': ['DS', '1', 'AlternateBeamDose'],\n    '0092': ['CS', '1', 'AlternateBeamDoseType'],\n    '0093': ['CS', '1', 'DepthValueAveragingFlag'],\n    '0094': ['DS', '1', 'BeamDosePointSourceToExternalContourDistance'],\n    '00A0': ['IS', '1', 'NumberOfBrachyApplicationSetups'],\n    '00A2': ['DS', '3', 'BrachyApplicationSetupDoseSpecificationPoint'],\n    '00A4': ['DS', '1', 'BrachyApplicationSetupDose'],\n    '00B0': ['SQ', '1', 'BeamSequence'],\n    '00B2': ['SH', '1', 'TreatmentMachineName'],\n    '00B3': ['CS', '1', 'PrimaryDosimeterUnit'],\n    '00B4': ['DS', '1', 'SourceAxisDistance'],\n    '00B6': ['SQ', '1', 'BeamLimitingDeviceSequence'],\n    '00B8': ['CS', '1', 'RTBeamLimitingDeviceType'],\n    '00BA': ['DS', '1', 'SourceToBeamLimitingDeviceDistance'],\n    '00BB': ['FL', '1', 'IsocenterToBeamLimitingDeviceDistance'],\n    '00BC': ['IS', '1', 'NumberOfLeafJawPairs'],\n    '00BE': ['DS', '3-n', 'LeafPositionBoundaries'],\n    '00C0': ['IS', '1', 'BeamNumber'],\n    '00C2': ['LO', '1', 'BeamName'],\n    '00C3': ['ST', '1', 'BeamDescription'],\n    '00C4': ['CS', '1', 'BeamType'],\n    '00C5': ['FD', '1', 'BeamDeliveryDurationLimit'],\n    '00C6': ['CS', '1', 'RadiationType'],\n    '00C7': ['CS', '1', 'HighDoseTechniqueType'],\n    '00C8': ['IS', '1', 'ReferenceImageNumber'],\n    '00CA': ['SQ', '1', 'PlannedVerificationImageSequence'],\n    '00CC': ['LO', '1-n', 'ImagingDeviceSpecificAcquisitionParameters'],\n    '00CE': ['CS', '1', 'TreatmentDeliveryType'],\n    '00D0': ['IS', '1', 'NumberOfWedges'],\n    '00D1': ['SQ', '1', 'WedgeSequence'],\n    '00D2': ['IS', '1', 'WedgeNumber'],\n    '00D3': ['CS', '1', 'WedgeType'],\n    '00D4': ['SH', '1', 'WedgeID'],\n    '00D5': ['IS', '1', 'WedgeAngle'],\n    '00D6': ['DS', '1', 'WedgeFactor'],\n    '00D7': ['FL', '1', 'TotalWedgeTrayWaterEquivalentThickness'],\n    '00D8': ['DS', '1', 'WedgeOrientation'],\n    '00D9': ['FL', '1', 'IsocenterToWedgeTrayDistance'],\n    '00DA': ['DS', '1', 'SourceToWedgeTrayDistance'],\n    '00DB': ['FL', '1', 'WedgeThinEdgePosition'],\n    '00DC': ['SH', '1', 'BolusID'],\n    '00DD': ['ST', '1', 'BolusDescription'],\n    '00DE': ['DS', '1', 'EffectiveWedgeAngle'],\n    '00E0': ['IS', '1', 'NumberOfCompensators'],\n    '00E1': ['SH', '1', 'MaterialID'],\n    '00E2': ['DS', '1', 'TotalCompensatorTrayFactor'],\n    '00E3': ['SQ', '1', 'CompensatorSequence'],\n    '00E4': ['IS', '1', 'CompensatorNumber'],\n    '00E5': ['SH', '1', 'CompensatorID'],\n    '00E6': ['DS', '1', 'SourceToCompensatorTrayDistance'],\n    '00E7': ['IS', '1', 'CompensatorRows'],\n    '00E8': ['IS', '1', 'CompensatorColumns'],\n    '00E9': ['DS', '2', 'CompensatorPixelSpacing'],\n    '00EA': ['DS', '2', 'CompensatorPosition'],\n    '00EB': ['DS', '1-n', 'CompensatorTransmissionData'],\n    '00EC': ['DS', '1-n', 'CompensatorThicknessData'],\n    '00ED': ['IS', '1', 'NumberOfBoli'],\n    '00EE': ['CS', '1', 'CompensatorType'],\n    '00EF': ['SH', '1', 'CompensatorTrayID'],\n    '00F0': ['IS', '1', 'NumberOfBlocks'],\n    '00F2': ['DS', '1', 'TotalBlockTrayFactor'],\n    '00F3': ['FL', '1', 'TotalBlockTrayWaterEquivalentThickness'],\n    '00F4': ['SQ', '1', 'BlockSequence'],\n    '00F5': ['SH', '1', 'BlockTrayID'],\n    '00F6': ['DS', '1', 'SourceToBlockTrayDistance'],\n    '00F7': ['FL', '1', 'IsocenterToBlockTrayDistance'],\n    '00F8': ['CS', '1', 'BlockType'],\n    '00F9': ['LO', '1', 'AccessoryCode'],\n    '00FA': ['CS', '1', 'BlockDivergence'],\n    '00FB': ['CS', '1', 'BlockMountingPosition'],\n    '00FC': ['IS', '1', 'BlockNumber'],\n    '00FE': ['LO', '1', 'BlockName'],\n    '0100': ['DS', '1', 'BlockThickness'],\n    '0102': ['DS', '1', 'BlockTransmission'],\n    '0104': ['IS', '1', 'BlockNumberOfPoints'],\n    '0106': ['DS', '2-2n', 'BlockData'],\n    '0107': ['SQ', '1', 'ApplicatorSequence'],\n    '0108': ['SH', '1', 'ApplicatorID'],\n    '0109': ['CS', '1', 'ApplicatorType'],\n    '010A': ['LO', '1', 'ApplicatorDescription'],\n    '010C': ['DS', '1', 'CumulativeDoseReferenceCoefficient'],\n    '010E': ['DS', '1', 'FinalCumulativeMetersetWeight'],\n    '0110': ['IS', '1', 'NumberOfControlPoints'],\n    '0111': ['SQ', '1', 'ControlPointSequence'],\n    '0112': ['IS', '1', 'ControlPointIndex'],\n    '0114': ['DS', '1', 'NominalBeamEnergy'],\n    '0115': ['DS', '1', 'DoseRateSet'],\n    '0116': ['SQ', '1', 'WedgePositionSequence'],\n    '0118': ['CS', '1', 'WedgePosition'],\n    '011A': ['SQ', '1', 'BeamLimitingDevicePositionSequence'],\n    '011C': ['DS', '2-2n', 'LeafJawPositions'],\n    '011E': ['DS', '1', 'GantryAngle'],\n    '011F': ['CS', '1', 'GantryRotationDirection'],\n    '0120': ['DS', '1', 'BeamLimitingDeviceAngle'],\n    '0121': ['CS', '1', 'BeamLimitingDeviceRotationDirection'],\n    '0122': ['DS', '1', 'PatientSupportAngle'],\n    '0123': ['CS', '1', 'PatientSupportRotationDirection'],\n    '0124': ['DS', '1', 'TableTopEccentricAxisDistance'],\n    '0125': ['DS', '1', 'TableTopEccentricAngle'],\n    '0126': ['CS', '1', 'TableTopEccentricRotationDirection'],\n    '0128': ['DS', '1', 'TableTopVerticalPosition'],\n    '0129': ['DS', '1', 'TableTopLongitudinalPosition'],\n    '012A': ['DS', '1', 'TableTopLateralPosition'],\n    '012C': ['DS', '3', 'IsocenterPosition'],\n    '012E': ['DS', '3', 'SurfaceEntryPoint'],\n    '0130': ['DS', '1', 'SourceToSurfaceDistance'],\n    '0131': ['FL', '1', 'AverageBeamDosePointSourceToExternalContourDistance'],\n    '0132': ['FL', '1', 'SourceToExternalContourDistance'],\n    '0133': ['FL', '3', 'ExternalContourEntryPoint'],\n    '0134': ['DS', '1', 'CumulativeMetersetWeight'],\n    '0140': ['FL', '1', 'TableTopPitchAngle'],\n    '0142': ['CS', '1', 'TableTopPitchRotationDirection'],\n    '0144': ['FL', '1', 'TableTopRollAngle'],\n    '0146': ['CS', '1', 'TableTopRollRotationDirection'],\n    '0148': ['FL', '1', 'HeadFixationAngle'],\n    '014A': ['FL', '1', 'GantryPitchAngle'],\n    '014C': ['CS', '1', 'GantryPitchRotationDirection'],\n    '014E': ['FL', '1', 'GantryPitchAngleTolerance'],\n    '0150': ['CS', '1', 'FixationEye'],\n    '0151': ['DS', '1', 'ChairHeadFramePosition'],\n    '0152': ['DS', '1', 'HeadFixationAngleTolerance'],\n    '0153': ['DS', '1', 'ChairHeadFramePositionTolerance'],\n    '0154': ['DS', '1', 'FixationLightAzimuthalAngleTolerance'],\n    '0155': ['DS', '1', 'FixationLightPolarAngleTolerance'],\n    '0180': ['SQ', '1', 'PatientSetupSequence'],\n    '0182': ['IS', '1', 'PatientSetupNumber'],\n    '0183': ['LO', '1', 'PatientSetupLabel'],\n    '0184': ['LO', '1', 'PatientAdditionalPosition'],\n    '0190': ['SQ', '1', 'FixationDeviceSequence'],\n    '0192': ['CS', '1', 'FixationDeviceType'],\n    '0194': ['SH', '1', 'FixationDeviceLabel'],\n    '0196': ['ST', '1', 'FixationDeviceDescription'],\n    '0198': ['SH', '1', 'FixationDevicePosition'],\n    '0199': ['FL', '1', 'FixationDevicePitchAngle'],\n    '019A': ['FL', '1', 'FixationDeviceRollAngle'],\n    '01A0': ['SQ', '1', 'ShieldingDeviceSequence'],\n    '01A2': ['CS', '1', 'ShieldingDeviceType'],\n    '01A4': ['SH', '1', 'ShieldingDeviceLabel'],\n    '01A6': ['ST', '1', 'ShieldingDeviceDescription'],\n    '01A8': ['SH', '1', 'ShieldingDevicePosition'],\n    '01B0': ['CS', '1', 'SetupTechnique'],\n    '01B2': ['ST', '1', 'SetupTechniqueDescription'],\n    '01B4': ['SQ', '1', 'SetupDeviceSequence'],\n    '01B6': ['CS', '1', 'SetupDeviceType'],\n    '01B8': ['SH', '1', 'SetupDeviceLabel'],\n    '01BA': ['ST', '1', 'SetupDeviceDescription'],\n    '01BC': ['DS', '1', 'SetupDeviceParameter'],\n    '01D0': ['ST', '1', 'SetupReferenceDescription'],\n    '01D2': ['DS', '1', 'TableTopVerticalSetupDisplacement'],\n    '01D4': ['DS', '1', 'TableTopLongitudinalSetupDisplacement'],\n    '01D6': ['DS', '1', 'TableTopLateralSetupDisplacement'],\n    '0200': ['CS', '1', 'BrachyTreatmentTechnique'],\n    '0202': ['CS', '1', 'BrachyTreatmentType'],\n    '0206': ['SQ', '1', 'TreatmentMachineSequence'],\n    '0210': ['SQ', '1', 'SourceSequence'],\n    '0212': ['IS', '1', 'SourceNumber'],\n    '0214': ['CS', '1', 'SourceType'],\n    '0216': ['LO', '1', 'SourceManufacturer'],\n    '0218': ['DS', '1', 'ActiveSourceDiameter'],\n    '021A': ['DS', '1', 'ActiveSourceLength'],\n    '021B': ['SH', '1', 'SourceModelID'],\n    '021C': ['LO', '1', 'SourceDescription'],\n    '0222': ['DS', '1', 'SourceEncapsulationNominalThickness'],\n    '0224': ['DS', '1', 'SourceEncapsulationNominalTransmission'],\n    '0226': ['LO', '1', 'SourceIsotopeName'],\n    '0228': ['DS', '1', 'SourceIsotopeHalfLife'],\n    '0229': ['CS', '1', 'SourceStrengthUnits'],\n    '022A': ['DS', '1', 'ReferenceAirKermaRate'],\n    '022B': ['DS', '1', 'SourceStrength'],\n    '022C': ['DA', '1', 'SourceStrengthReferenceDate'],\n    '022E': ['TM', '1', 'SourceStrengthReferenceTime'],\n    '0230': ['SQ', '1', 'ApplicationSetupSequence'],\n    '0232': ['CS', '1', 'ApplicationSetupType'],\n    '0234': ['IS', '1', 'ApplicationSetupNumber'],\n    '0236': ['LO', '1', 'ApplicationSetupName'],\n    '0238': ['LO', '1', 'ApplicationSetupManufacturer'],\n    '0240': ['IS', '1', 'TemplateNumber'],\n    '0242': ['SH', '1', 'TemplateType'],\n    '0244': ['LO', '1', 'TemplateName'],\n    '0250': ['DS', '1', 'TotalReferenceAirKerma'],\n    '0260': ['SQ', '1', 'BrachyAccessoryDeviceSequence'],\n    '0262': ['IS', '1', 'BrachyAccessoryDeviceNumber'],\n    '0263': ['SH', '1', 'BrachyAccessoryDeviceID'],\n    '0264': ['CS', '1', 'BrachyAccessoryDeviceType'],\n    '0266': ['LO', '1', 'BrachyAccessoryDeviceName'],\n    '026A': ['DS', '1', 'BrachyAccessoryDeviceNominalThickness'],\n    '026C': ['DS', '1', 'BrachyAccessoryDeviceNominalTransmission'],\n    '0271': ['DS', '1', 'ChannelEffectiveLength'],\n    '0272': ['DS', '1', 'ChannelInnerLength'],\n    '0273': ['SH', '1', 'AfterloaderChannelID'],\n    '0274': ['DS', '1', 'SourceApplicatorTipLength'],\n    '0280': ['SQ', '1', 'ChannelSequence'],\n    '0282': ['IS', '1', 'ChannelNumber'],\n    '0284': ['DS', '1', 'ChannelLength'],\n    '0286': ['DS', '1', 'ChannelTotalTime'],\n    '0288': ['CS', '1', 'SourceMovementType'],\n    '028A': ['IS', '1', 'NumberOfPulses'],\n    '028C': ['DS', '1', 'PulseRepetitionInterval'],\n    '0290': ['IS', '1', 'SourceApplicatorNumber'],\n    '0291': ['SH', '1', 'SourceApplicatorID'],\n    '0292': ['CS', '1', 'SourceApplicatorType'],\n    '0294': ['LO', '1', 'SourceApplicatorName'],\n    '0296': ['DS', '1', 'SourceApplicatorLength'],\n    '0298': ['LO', '1', 'SourceApplicatorManufacturer'],\n    '029C': ['DS', '1', 'SourceApplicatorWallNominalThickness'],\n    '029E': ['DS', '1', 'SourceApplicatorWallNominalTransmission'],\n    '02A0': ['DS', '1', 'SourceApplicatorStepSize'],\n    '02A1': ['IS', '1', 'ApplicatorShapeReferencedROINumber'],\n    '02A2': ['IS', '1', 'TransferTubeNumber'],\n    '02A4': ['DS', '1', 'TransferTubeLength'],\n    '02B0': ['SQ', '1', 'ChannelShieldSequence'],\n    '02B2': ['IS', '1', 'ChannelShieldNumber'],\n    '02B3': ['SH', '1', 'ChannelShieldID'],\n    '02B4': ['LO', '1', 'ChannelShieldName'],\n    '02B8': ['DS', '1', 'ChannelShieldNominalThickness'],\n    '02BA': ['DS', '1', 'ChannelShieldNominalTransmission'],\n    '02C8': ['DS', '1', 'FinalCumulativeTimeWeight'],\n    '02D0': ['SQ', '1', 'BrachyControlPointSequence'],\n    '02D2': ['DS', '1', 'ControlPointRelativePosition'],\n    '02D4': ['DS', '3', 'ControlPoint3DPosition'],\n    '02D6': ['DS', '1', 'CumulativeTimeWeight'],\n    '02E0': ['CS', '1', 'CompensatorDivergence'],\n    '02E1': ['CS', '1', 'CompensatorMountingPosition'],\n    '02E2': ['DS', '1-n', 'SourceToCompensatorDistance'],\n    '02E3': ['FL', '1', 'TotalCompensatorTrayWaterEquivalentThickness'],\n    '02E4': ['FL', '1', 'IsocenterToCompensatorTrayDistance'],\n    '02E5': ['FL', '1', 'CompensatorColumnOffset'],\n    '02E6': ['FL', '1-n', 'IsocenterToCompensatorDistances'],\n    '02E7': ['FL', '1', 'CompensatorRelativeStoppingPowerRatio'],\n    '02E8': ['FL', '1', 'CompensatorMillingToolDiameter'],\n    '02EA': ['SQ', '1', 'IonRangeCompensatorSequence'],\n    '02EB': ['LT', '1', 'CompensatorDescription'],\n    '0302': ['IS', '1', 'RadiationMassNumber'],\n    '0304': ['IS', '1', 'RadiationAtomicNumber'],\n    '0306': ['SS', '1', 'RadiationChargeState'],\n    '0308': ['CS', '1', 'ScanMode'],\n    '0309': ['CS', '1', 'ModulatedScanModeType'],\n    '030A': ['FL', '2', 'VirtualSourceAxisDistances'],\n    '030C': ['SQ', '1', 'SnoutSequence'],\n    '030D': ['FL', '1', 'SnoutPosition'],\n    '030F': ['SH', '1', 'SnoutID'],\n    '0312': ['IS', '1', 'NumberOfRangeShifters'],\n    '0314': ['SQ', '1', 'RangeShifterSequence'],\n    '0316': ['IS', '1', 'RangeShifterNumber'],\n    '0318': ['SH', '1', 'RangeShifterID'],\n    '0320': ['CS', '1', 'RangeShifterType'],\n    '0322': ['LO', '1', 'RangeShifterDescription'],\n    '0330': ['IS', '1', 'NumberOfLateralSpreadingDevices'],\n    '0332': ['SQ', '1', 'LateralSpreadingDeviceSequence'],\n    '0334': ['IS', '1', 'LateralSpreadingDeviceNumber'],\n    '0336': ['SH', '1', 'LateralSpreadingDeviceID'],\n    '0338': ['CS', '1', 'LateralSpreadingDeviceType'],\n    '033A': ['LO', '1', 'LateralSpreadingDeviceDescription'],\n    '033C': ['FL', '1', 'LateralSpreadingDeviceWaterEquivalentThickness'],\n    '0340': ['IS', '1', 'NumberOfRangeModulators'],\n    '0342': ['SQ', '1', 'RangeModulatorSequence'],\n    '0344': ['IS', '1', 'RangeModulatorNumber'],\n    '0346': ['SH', '1', 'RangeModulatorID'],\n    '0348': ['CS', '1', 'RangeModulatorType'],\n    '034A': ['LO', '1', 'RangeModulatorDescription'],\n    '034C': ['SH', '1', 'BeamCurrentModulationID'],\n    '0350': ['CS', '1', 'PatientSupportType'],\n    '0352': ['SH', '1', 'PatientSupportID'],\n    '0354': ['LO', '1', 'PatientSupportAccessoryCode'],\n    '0355': ['LO', '1', 'TrayAccessoryCode'],\n    '0356': ['FL', '1', 'FixationLightAzimuthalAngle'],\n    '0358': ['FL', '1', 'FixationLightPolarAngle'],\n    '035A': ['FL', '1', 'MetersetRate'],\n    '0360': ['SQ', '1', 'RangeShifterSettingsSequence'],\n    '0362': ['LO', '1', 'RangeShifterSetting'],\n    '0364': ['FL', '1', 'IsocenterToRangeShifterDistance'],\n    '0366': ['FL', '1', 'RangeShifterWaterEquivalentThickness'],\n    '0370': ['SQ', '1', 'LateralSpreadingDeviceSettingsSequence'],\n    '0372': ['LO', '1', 'LateralSpreadingDeviceSetting'],\n    '0374': ['FL', '1', 'IsocenterToLateralSpreadingDeviceDistance'],\n    '0380': ['SQ', '1', 'RangeModulatorSettingsSequence'],\n    '0382': ['FL', '1', 'RangeModulatorGatingStartValue'],\n    '0384': ['FL', '1', 'RangeModulatorGatingStopValue'],\n    '0386': ['FL', '1', 'RangeModulatorGatingStartWaterEquivalentThickness'],\n    '0388': ['FL', '1', 'RangeModulatorGatingStopWaterEquivalentThickness'],\n    '038A': ['FL', '1', 'IsocenterToRangeModulatorDistance'],\n    '038F': ['FL', '1-n', 'ScanSpotTimeOffset'],\n    '0390': ['SH', '1', 'ScanSpotTuneID'],\n    '0391': ['IS', '1-n', 'ScanSpotPrescribedIndices'],\n    '0392': ['IS', '1', 'NumberOfScanSpotPositions'],\n    '0393': ['CS', '1', 'ScanSpotReordered'],\n    '0394': ['FL', '1-n', 'ScanSpotPositionMap'],\n    '0395': ['CS', '1', 'ScanSpotReorderingAllowed'],\n    '0396': ['FL', '1-n', 'ScanSpotMetersetWeights'],\n    '0398': ['FL', '2', 'ScanningSpotSize'],\n    '0399': ['FL', '2-2n', 'ScanSpotSizesDelivered'],\n    '039A': ['IS', '1', 'NumberOfPaintings'],\n    '03A0': ['SQ', '1', 'IonToleranceTableSequence'],\n    '03A2': ['SQ', '1', 'IonBeamSequence'],\n    '03A4': ['SQ', '1', 'IonBeamLimitingDeviceSequence'],\n    '03A6': ['SQ', '1', 'IonBlockSequence'],\n    '03A8': ['SQ', '1', 'IonControlPointSequence'],\n    '03AA': ['SQ', '1', 'IonWedgeSequence'],\n    '03AC': ['SQ', '1', 'IonWedgePositionSequence'],\n    '0401': ['SQ', '1', 'ReferencedSetupImageSequence'],\n    '0402': ['ST', '1', 'SetupImageComment'],\n    '0410': ['SQ', '1', 'MotionSynchronizationSequence'],\n    '0412': ['FL', '3', 'ControlPointOrientation'],\n    '0420': ['SQ', '1', 'GeneralAccessorySequence'],\n    '0421': ['SH', '1', 'GeneralAccessoryID'],\n    '0422': ['ST', '1', 'GeneralAccessoryDescription'],\n    '0423': ['CS', '1', 'GeneralAccessoryType'],\n    '0424': ['IS', '1', 'GeneralAccessoryNumber'],\n    '0425': ['FL', '1', 'SourceToGeneralAccessoryDistance'],\n    '0426': ['DS', '1', 'IsocenterToGeneralAccessoryDistance'],\n    '0431': ['SQ', '1', 'ApplicatorGeometrySequence'],\n    '0432': ['CS', '1', 'ApplicatorApertureShape'],\n    '0433': ['FL', '1', 'ApplicatorOpening'],\n    '0434': ['FL', '1', 'ApplicatorOpeningX'],\n    '0435': ['FL', '1', 'ApplicatorOpeningY'],\n    '0436': ['FL', '1', 'SourceToApplicatorMountingPositionDistance'],\n    '0440': ['IS', '1', 'NumberOfBlockSlabItems'],\n    '0441': ['SQ', '1', 'BlockSlabSequence'],\n    '0442': ['DS', '1', 'BlockSlabThickness'],\n    '0443': ['US', '1', 'BlockSlabNumber'],\n    '0450': ['SQ', '1', 'DeviceMotionControlSequence'],\n    '0451': ['CS', '1', 'DeviceMotionExecutionMode'],\n    '0452': ['CS', '1', 'DeviceMotionObservationMode'],\n    '0453': ['SQ', '1', 'DeviceMotionParameterCodeSequence'],\n    '0501': ['FL', '1', 'DistalDepthFraction'],\n    '0502': ['FL', '1', 'DistalDepth'],\n    '0503': ['FL', '2', 'NominalRangeModulationFractions'],\n    '0504': ['FL', '2', 'NominalRangeModulatedRegionDepths'],\n    '0505': ['SQ', '1', 'DepthDoseParametersSequence'],\n    '0506': ['SQ', '1', 'DeliveredDepthDoseParametersSequence'],\n    '0507': ['FL', '1', 'DeliveredDistalDepthFraction'],\n    '0508': ['FL', '1', 'DeliveredDistalDepth'],\n    '0509': ['FL', '2', 'DeliveredNominalRangeModulationFractions'],\n    '0510': ['FL', '2', 'DeliveredNominalRangeModulatedRegionDepths'],\n    '0511': ['CS', '1', 'DeliveredReferenceDoseDefinition'],\n    '0512': ['CS', '1', 'ReferenceDoseDefinition'],\n    '0600': ['US', '1', 'RTControlPointIndex'],\n    '0601': ['US', '1', 'RadiationGenerationModeIndex'],\n    '0602': ['US', '1', 'ReferencedDefinedDeviceIndex'],\n    '0603': ['US', '1', 'RadiationDoseIdentificationIndex'],\n    '0604': ['US', '1', 'NumberOfRTControlPoints'],\n    '0605': ['US', '1', 'ReferencedRadiationGenerationModeIndex'],\n    '0606': ['US', '1', 'TreatmentPositionIndex'],\n    '0607': ['US', '1', 'ReferencedDeviceIndex'],\n    '0608': ['LO', '1', 'TreatmentPositionGroupLabel'],\n    '0609': ['UI', '1', 'TreatmentPositionGroupUID'],\n    '060A': ['SQ', '1', 'TreatmentPositionGroupSequence'],\n    '060B': ['US', '1', 'ReferencedTreatmentPositionIndex'],\n    '060C': ['US', '1', 'ReferencedRadiationDoseIdentificationIndex'],\n    '060D': ['FD', '1', 'RTAccessoryHolderWaterEquivalentThickness'],\n    '060E': ['US', '1', 'ReferencedRTAccessoryHolderDeviceIndex'],\n    '060F': ['CS', '1', 'RTAccessoryHolderSlotExistenceFlag'],\n    '0610': ['SQ', '1', 'RTAccessoryHolderSlotSequence'],\n    '0611': ['LO', '1', 'RTAccessoryHolderSlotID'],\n    '0612': ['FD', '1', 'RTAccessoryHolderSlotDistance'],\n    '0613': ['FD', '1', 'RTAccessorySlotDistance'],\n    '0614': ['SQ', '1', 'RTAccessoryHolderDefinitionSequence'],\n    '0615': ['LO', '1', 'RTAccessoryDeviceSlotID'],\n    '0616': ['SQ', '1', 'RTRadiationSequence'],\n    '0617': ['SQ', '1', 'RadiationDoseSequence'],\n    '0618': ['SQ', '1', 'RadiationDoseIdentificationSequence'],\n    '0619': ['LO', '1', 'RadiationDoseIdentificationLabel'],\n    '061A': ['CS', '1', 'ReferenceDoseType'],\n    '061B': ['CS', '1', 'PrimaryDoseValueIndicator'],\n    '061C': ['SQ', '1', 'DoseValuesSequence'],\n    '061D': ['CS', '1-n', 'DoseValuePurpose'],\n    '061E': ['FD', '3', 'ReferenceDosePointCoordinates'],\n    '061F': ['SQ', '1', 'RadiationDoseValuesParametersSequence'],\n    '0620': ['SQ', '1', 'MetersetToDoseMappingSequence'],\n    '0621': ['SQ', '1', 'ExpectedInVivoMeasurementValuesSequence'],\n    '0622': ['US', '1', 'ExpectedInVivoMeasurementValueIndex'],\n    '0623': ['LO', '1', 'RadiationDoseInVivoMeasurementLabel'],\n    '0624': ['FD', '2', 'RadiationDoseCentralAxisDisplacement'],\n    '0625': ['FD', '1', 'RadiationDoseValue'],\n    '0626': ['FD', '1', 'RadiationDoseSourceToSkinDistance'],\n    '0627': ['FD', '3', 'RadiationDoseMeasurementPointCoordinates'],\n    '0628': ['FD', '1', 'RadiationDoseSourceToExternalContourDistance'],\n    '0629': ['SQ', '1', 'RTToleranceSetSequence'],\n    '062A': ['LO', '1', 'RTToleranceSetLabel'],\n    '062B': ['SQ', '1', 'AttributeToleranceValuesSequence'],\n    '062C': ['FD', '1', 'ToleranceValue'],\n    '062D': ['SQ', '1', 'PatientSupportPositionToleranceSequence'],\n    '062E': ['FD', '1', 'TreatmentTimeLimit'],\n    '062F': ['SQ', '1', 'CArmPhotonElectronControlPointSequence'],\n    '0630': ['SQ', '1', 'ReferencedRTRadiationSequence'],\n    '0631': ['SQ', '1', 'ReferencedRTInstanceSequence'],\n    '0632': ['SQ', '1', 'ReferencedRTPatientSetupSequence'],\n    '0634': ['FD', '1', 'SourceToPatientSurfaceDistance'],\n    '0635': ['SQ', '1', 'TreatmentMachineSpecialModeCodeSequence'],\n    '0636': ['US', '1', 'IntendedNumberOfFractions'],\n    '0637': ['CS', '1', 'RTRadiationSetIntent'],\n    '0638': ['CS', '1', 'RTRadiationPhysicalAndGeometricContentDetailFlag'],\n    '0639': ['CS', '1', 'RTRecordFlag'],\n    '063A': ['SQ', '1', 'TreatmentDeviceIdentificationSequence'],\n    '063B': ['SQ', '1', 'ReferencedRTPhysicianIntentSequence'],\n    '063C': ['FD', '1', 'CumulativeMeterset'],\n    '063D': ['FD', '1', 'DeliveryRate'],\n    '063E': ['SQ', '1', 'DeliveryRateUnitSequence'],\n    '063F': ['SQ', '1', 'TreatmentPositionSequence'],\n    '0640': ['FD', '1', 'RadiationSourceAxisDistance'],\n    '0641': ['US', '1', 'NumberOfRTBeamLimitingDevices'],\n    '0642': ['FD', '1', 'RTBeamLimitingDeviceProximalDistance'],\n    '0643': ['FD', '1', 'RTBeamLimitingDeviceDistalDistance'],\n    '0644': ['SQ', '1', 'ParallelRTBeamDelimiterDeviceOrientationLabelCodeSequence'],\n    '0645': ['FD', '1', 'BeamModifierOrientationAngle'],\n    '0646': ['SQ', '1', 'FixedRTBeamDelimiterDeviceSequence'],\n    '0647': ['SQ', '1', 'ParallelRTBeamDelimiterDeviceSequence'],\n    '0648': ['US', '1', 'NumberOfParallelRTBeamDelimiters'],\n    '0649': ['FD', '2-n', 'ParallelRTBeamDelimiterBoundaries'],\n    '064A': ['FD', '2-n', 'ParallelRTBeamDelimiterPositions'],\n    '064B': ['FD', '2', 'RTBeamLimitingDeviceOffset'],\n    '064C': ['SQ', '1', 'RTBeamDelimiterGeometrySequence'],\n    '064D': ['SQ', '1', 'RTBeamLimitingDeviceDefinitionSequence'],\n    '064E': ['CS', '1', 'ParallelRTBeamDelimiterOpeningMode'],\n    '064F': ['CS', '1-n', 'ParallelRTBeamDelimiterLeafMountingSide'],\n    '0650': ['UI', '1', 'PatientSetupUID'],\n    '0651': ['SQ', '1', 'WedgeDefinitionSequence'],\n    '0652': ['FD', '1', 'RadiationBeamWedgeAngle'],\n    '0653': ['FD', '1', 'RadiationBeamWedgeThinEdgeDistance'],\n    '0654': ['FD', '1', 'RadiationBeamEffectiveWedgeAngle'],\n    '0655': ['US', '1', 'NumberOfWedgePositions'],\n    '0656': ['SQ', '1', 'RTBeamLimitingDeviceOpeningSequence'],\n    '0657': ['US', '1', 'NumberOfRTBeamLimitingDeviceOpenings'],\n    '0658': ['SQ', '1', 'RadiationDosimeterUnitSequence'],\n    '0659': ['SQ', '1', 'RTDeviceDistanceReferenceLocationCodeSequence'],\n    '065A': ['SQ', '1', 'RadiationDeviceConfigurationAndCommissioningKeySequence'],\n    '065B': ['SQ', '1', 'PatientSupportPositionParameterSequence'],\n    '065C': ['CS', '1', 'PatientSupportPositionSpecificationMethod'],\n    '065D': ['SQ', '1', 'PatientSupportPositionDeviceParameterSequence'],\n    '065E': ['US', '1', 'DeviceOrderIndex'],\n    '065F': ['US', '1', 'PatientSupportPositionParameterOrderIndex'],\n    '0660': ['SQ', '1', 'PatientSupportPositionDeviceToleranceSequence'],\n    '0661': ['US', '1', 'PatientSupportPositionToleranceOrderIndex'],\n    '0662': ['SQ', '1', 'CompensatorDefinitionSequence'],\n    '0663': ['CS', '1', 'CompensatorMapOrientation'],\n    '0664': ['OF', '1', 'CompensatorProximalThicknessMap'],\n    '0665': ['OF', '1', 'CompensatorDistalThicknessMap'],\n    '0666': ['FD', '1', 'CompensatorBasePlaneOffset'],\n    '0667': ['SQ', '1', 'CompensatorShapeFabricationCodeSequence'],\n    '0668': ['SQ', '1', 'CompensatorShapeSequence'],\n    '0669': ['FD', '1', 'RadiationBeamCompensatorMillingToolDiameter'],\n    '066A': ['SQ', '1', 'BlockDefinitionSequence'],\n    '066B': ['OF', '1', 'BlockEdgeData'],\n    '066C': ['CS', '1', 'BlockOrientation'],\n    '066D': ['FD', '1', 'RadiationBeamBlockThickness'],\n    '066E': ['FD', '1', 'RadiationBeamBlockSlabThickness'],\n    '066F': ['SQ', '1', 'BlockEdgeDataSequence'],\n    '0670': ['US', '1', 'NumberOfRTAccessoryHolders'],\n    '0671': ['SQ', '1', 'GeneralAccessoryDefinitionSequence'],\n    '0672': ['US', '1', 'NumberOfGeneralAccessories'],\n    '0673': ['SQ', '1', 'BolusDefinitionSequence'],\n    '0674': ['US', '1', 'NumberOfBoluses'],\n    '0675': ['UI', '1', 'EquipmentFrameOfReferenceUID'],\n    '0676': ['ST', '1', 'EquipmentFrameOfReferenceDescription'],\n    '0677': ['SQ', '1', 'EquipmentReferencePointCoordinatesSequence'],\n    '0678': ['SQ', '1', 'EquipmentReferencePointCodeSequence'],\n    '0679': ['FD', '1', 'RTBeamLimitingDeviceAngle'],\n    '067A': ['FD', '1', 'SourceRollAngle'],\n    '067B': ['SQ', '1', 'RadiationGenerationModeSequence'],\n    '067C': ['SH', '1', 'RadiationGenerationModeLabel'],\n    '067D': ['ST', '1', 'RadiationGenerationModeDescription'],\n    '067E': ['SQ', '1', 'RadiationGenerationModeMachineCodeSequence'],\n    '067F': ['SQ', '1', 'RadiationTypeCodeSequence'],\n    '0680': ['DS', '1', 'NominalEnergy'],\n    '0681': ['DS', '1', 'MinimumNominalEnergy'],\n    '0682': ['DS', '1', 'MaximumNominalEnergy'],\n    '0683': ['SQ', '1', 'RadiationFluenceModifierCodeSequence'],\n    '0684': ['SQ', '1', 'EnergyUnitCodeSequence'],\n    '0685': ['US', '1', 'NumberOfRadiationGenerationModes'],\n    '0686': ['SQ', '1', 'PatientSupportDevicesSequence'],\n    '0687': ['US', '1', 'NumberOfPatientSupportDevices'],\n    '0688': ['FD', '1', 'RTBeamModifierDefinitionDistance'],\n    '0689': ['SQ', '1', 'BeamAreaLimitSequence'],\n    '068A': ['SQ', '1', 'ReferencedRTPrescriptionSequence'],\n    '0700': ['UI', '1', 'TreatmentSessionUID'],\n    '0701': ['CS', '1', 'RTRadiationUsage'],\n    '0702': ['SQ', '1', 'ReferencedRTRadiationSetSequence'],\n    '0703': ['SQ', '1', 'ReferencedRTRadiationRecordSequence'],\n    '0704': ['US', '1', 'RTRadiationSetDeliveryNumber'],\n    '0705': ['US', '1', 'ClinicalFractionNumber'],\n    '0706': ['CS', '1', 'RTTreatmentFractionCompletionStatus'],\n    '0707': ['CS', '1', 'RTRadiationSetUsage'],\n    '0708': ['CS', '1', 'TreatmentDeliveryContinuationFlag'],\n    '0709': ['CS', '1', 'TreatmentRecordContentOrigin'],\n    '0714': ['CS', '1', 'RTTreatmentTerminationStatus'],\n    '0715': ['SQ', '1', 'RTTreatmentTerminationReasonCodeSequence'],\n    '0716': ['SQ', '1', 'MachineSpecificTreatmentTerminationCodeSequence'],\n    '0722': ['SQ', '1', 'RTRadiationSalvageRecordControlPointSequence'],\n    '0723': ['CS', '1', 'StartingMetersetValueKnownFlag'],\n    '0730': ['ST', '1', 'TreatmentTerminationDescription'],\n    '0731': ['SQ', '1', 'TreatmentToleranceViolationSequence'],\n    '0732': ['CS', '1', 'TreatmentToleranceViolationCategory'],\n    '0733': ['SQ', '1', 'TreatmentToleranceViolationAttributeSequence'],\n    '0734': ['ST', '1', 'TreatmentToleranceViolationDescription'],\n    '0735': ['ST', '1', 'TreatmentToleranceViolationIdentification'],\n    '0736': ['DT', '1', 'TreatmentToleranceViolationDateTime'],\n    '073A': ['DT', '1', 'RecordedRTControlPointDateTime'],\n    '073B': ['US', '1', 'ReferencedRadiationRTControlPointIndex'],\n    '073E': ['SQ', '1', 'AlternateValueSequence'],\n    '073F': ['SQ', '1', 'ConfirmationSequence'],\n    '0740': ['SQ', '1', 'InterlockSequence'],\n    '0741': ['DT', '1', 'InterlockDateTime'],\n    '0742': ['ST', '1', 'InterlockDescription'],\n    '0743': ['SQ', '1', 'InterlockOriginatingDeviceSequence'],\n    '0744': ['SQ', '1', 'InterlockCodeSequence'],\n    '0745': ['SQ', '1', 'InterlockResolutionCodeSequence'],\n    '0746': ['SQ', '1', 'InterlockResolutionUserSequence'],\n    '0760': ['DT', '1', 'OverrideDateTime'],\n    '0761': ['SQ', '1', 'TreatmentToleranceViolationTypeCodeSequence'],\n    '0762': ['SQ', '1', 'TreatmentToleranceViolationCauseCodeSequence'],\n    '0772': ['SQ', '1', 'MeasuredMetersetToDoseMappingSequence'],\n    '0773': ['US', '1', 'ReferencedExpectedInVivoMeasurementValueIndex'],\n    '0774': ['SQ', '1', 'DoseMeasurementDeviceCodeSequence'],\n    '0780': ['SQ', '1', 'AdditionalParameterRecordingInstanceSequence'],\n    '0782': ['US', '1', ''],\n    '0783': ['ST', '1', 'InterlockOriginDescription'],\n    '0784': ['SQ', '1', 'RTPatientPositionScopeSequence'],\n    '0785': ['UI', '1', 'ReferencedTreatmentPositionGroupUID'],\n    '0786': ['US', '1', 'RadiationOrderIndex'],\n    '0787': ['SQ', '1', 'OmittedRadiationSequence'],\n    '0788': ['SQ', '1', 'ReasonForOmissionCodeSequence'],\n    '0789': ['SQ', '1', 'RTDeliveryStartPatientPositionSequence'],\n    '078A': ['SQ', '1', 'RTTreatmentPreparationPatientPositionSequence'],\n    '078B': ['SQ', '1', 'ReferencedRTTreatmentPreparationSequence'],\n    '078C': ['SQ', '1', 'ReferencedPatientSetupPhotoSequence'],\n    '078D': ['SQ', '1', 'PatientTreatmentPreparationMethodCodeSequence'],\n    '078E': ['LT', '1', 'PatientTreatmentPreparationProcedureParameterDescription'],\n    '078F': ['SQ', '1', 'PatientTreatmentPreparationDeviceSequence'],\n    '0790': ['SQ', '1', 'PatientTreatmentPreparationProcedureSequence'],\n    '0791': ['SQ', '1', 'PatientTreatmentPreparationProcedureCodeSequence'],\n    '0792': ['LT', '1', 'PatientTreatmentPreparationMethodDescription'],\n    '0793': ['SQ', '1', 'PatientTreatmentPreparationProcedureParameterSequence'],\n    '0794': ['LT', '1', 'PatientSetupPhotoDescription'],\n    '0795': ['US', '1', 'PatientTreatmentPreparationProcedureIndex'],\n    '0796': ['US', '1', 'ReferencedPatientSetupProcedureIndex'],\n    '0797': ['SQ', '1', 'RTRadiationTaskSequence'],\n    '0798': ['SQ', '1', 'RTPatientPositionDisplacementSequence'],\n    '0799': ['SQ', '1', 'RTPatientPositionSequence'],\n    '079A': ['LO', '1', 'DisplacementReferenceLabel'],\n    '079B': ['FD', '16', 'DisplacementMatrix'],\n    '079C': ['SQ', '1', 'PatientSupportDisplacementSequence'],\n    '079D': ['SQ', '1', 'DisplacementReferenceLocationCodeSequence'],\n    '079E': ['CS', '1', 'RTRadiationSetDeliveryUsage']\n  },\n  '300C': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SQ', '1', 'ReferencedRTPlanSequence'],\n    '0004': ['SQ', '1', 'ReferencedBeamSequence'],\n    '0006': ['IS', '1', 'ReferencedBeamNumber'],\n    '0007': ['IS', '1', 'ReferencedReferenceImageNumber'],\n    '0008': ['DS', '1', 'StartCumulativeMetersetWeight'],\n    '0009': ['DS', '1', 'EndCumulativeMetersetWeight'],\n    '000A': ['SQ', '1', 'ReferencedBrachyApplicationSetupSequence'],\n    '000C': ['IS', '1', 'ReferencedBrachyApplicationSetupNumber'],\n    '000E': ['IS', '1', 'ReferencedSourceNumber'],\n    '0020': ['SQ', '1', 'ReferencedFractionGroupSequence'],\n    '0022': ['IS', '1', 'ReferencedFractionGroupNumber'],\n    '0040': ['SQ', '1', 'ReferencedVerificationImageSequence'],\n    '0042': ['SQ', '1', 'ReferencedReferenceImageSequence'],\n    '0050': ['SQ', '1', 'ReferencedDoseReferenceSequence'],\n    '0051': ['IS', '1', 'ReferencedDoseReferenceNumber'],\n    '0055': ['SQ', '1', 'BrachyReferencedDoseReferenceSequence'],\n    '0060': ['SQ', '1', 'ReferencedStructureSetSequence'],\n    '006A': ['IS', '1', 'ReferencedPatientSetupNumber'],\n    '0080': ['SQ', '1', 'ReferencedDoseSequence'],\n    '00A0': ['IS', '1', 'ReferencedToleranceTableNumber'],\n    '00B0': ['SQ', '1', 'ReferencedBolusSequence'],\n    '00C0': ['IS', '1', 'ReferencedWedgeNumber'],\n    '00D0': ['IS', '1', 'ReferencedCompensatorNumber'],\n    '00E0': ['IS', '1', 'ReferencedBlockNumber'],\n    '00F0': ['IS', '1', 'ReferencedControlPointIndex'],\n    '00F2': ['SQ', '1', 'ReferencedControlPointSequence'],\n    '00F4': ['IS', '1', 'ReferencedStartControlPointIndex'],\n    '00F6': ['IS', '1', 'ReferencedStopControlPointIndex'],\n    '0100': ['IS', '1', 'ReferencedRangeShifterNumber'],\n    '0102': ['IS', '1', 'ReferencedLateralSpreadingDeviceNumber'],\n    '0104': ['IS', '1', 'ReferencedRangeModulatorNumber'],\n    '0111': ['SQ', '1', 'OmittedBeamTaskSequence'],\n    '0112': ['CS', '1', 'ReasonForOmission'],\n    '0113': ['LO', '1', 'ReasonForOmissionDescription'],\n    '0114': ['SQ', '1', 'PrescriptionOverviewSequence'],\n    '0115': ['FL', '1', 'TotalPrescriptionDose'],\n    '0116': ['SQ', '1', 'PlanOverviewSequence'],\n    '0117': ['US', '1', 'PlanOverviewIndex'],\n    '0118': ['US', '1', 'ReferencedPlanOverviewIndex'],\n    '0119': ['US', '1', 'NumberOfFractionsIncluded'],\n    '0120': ['SQ', '1', 'DoseCalibrationConditionsSequence'],\n    '0121': ['FD', '1', 'AbsorbedDoseToMetersetRatio'],\n    '0122': ['FD', '2', 'DelineatedRadiationFieldSize'],\n    '0123': ['CS', '1', 'DoseCalibrationConditionsVerifiedFlag'],\n    '0124': ['FD', '1', 'CalibrationReferencePointDepth'],\n    '0125': ['SQ', '1', 'GatingBeamHoldTransitionSequence'],\n    '0126': ['CS', '1', 'BeamHoldTransition'],\n    '0127': ['DT', '1', 'BeamHoldTransitionDateTime'],\n    '0128': ['SQ', '1', 'BeamHoldOriginatingDeviceSequence']\n  },\n  '300E': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['CS', '1', 'ApprovalStatus'],\n    '0004': ['DA', '1', 'ReviewDate'],\n    '0005': ['TM', '1', 'ReviewTime'],\n    '0008': ['PN', '1', 'ReviewerName']\n  },\n  '3010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'RadiobiologicalDoseEffectSequence'],\n    '0002': ['CS', '1', 'RadiobiologicalDoseEffectFlag'],\n    '0003': ['SQ', '1', 'EffectiveDoseCalculationMethodCategoryCodeSequence'],\n    '0004': ['SQ', '1', 'EffectiveDoseCalculationMethodCodeSequence'],\n    '0005': ['LO', '1', 'EffectiveDoseCalculationMethodDescription'],\n    '0006': ['UI', '1', 'ConceptualVolumeUID'],\n    '0007': ['SQ', '1', 'OriginatingSOPInstanceReferenceSequence'],\n    '0008': ['SQ', '1', 'ConceptualVolumeConstituentSequence'],\n    '0009': ['SQ', '1', 'EquivalentConceptualVolumeInstanceReferenceSequence'],\n    '000A': ['SQ', '1', 'EquivalentConceptualVolumesSequence'],\n    '000B': ['UI', '1', 'ReferencedConceptualVolumeUID'],\n    '000C': ['UT', '1', 'ConceptualVolumeCombinationExpression'],\n    '000D': ['US', '1', 'ConceptualVolumeConstituentIndex'],\n    '000E': ['CS', '1', 'ConceptualVolumeCombinationFlag'],\n    '000F': ['ST', '1', 'ConceptualVolumeCombinationDescription'],\n    '0010': ['CS', '1', 'ConceptualVolumeSegmentationDefinedFlag'],\n    '0011': ['SQ', '1', 'ConceptualVolumeSegmentationReferenceSequence'],\n    '0012': ['SQ', '1', 'ConceptualVolumeConstituentSegmentationReferenceSequence'],\n    '0013': ['UI', '1', 'ConstituentConceptualVolumeUID'],\n    '0014': ['SQ', '1', 'DerivationConceptualVolumeSequence'],\n    '0015': ['UI', '1', 'SourceConceptualVolumeUID'],\n    '0016': ['SQ', '1', 'ConceptualVolumeDerivationAlgorithmSequence'],\n    '0017': ['ST', '1', 'ConceptualVolumeDescription'],\n    '0018': ['SQ', '1', 'SourceConceptualVolumeSequence'],\n    '0019': ['SQ', '1', 'AuthorIdentificationSequence'],\n    '001A': ['LO', '1', 'ManufacturerModelVersion'],\n    '001B': ['UC', '1', 'DeviceAlternateIdentifier'],\n    '001C': ['CS', '1', 'DeviceAlternateIdentifierType'],\n    '001D': ['LT', '1', 'DeviceAlternateIdentifierFormat'],\n    '001E': ['LO', '1', 'SegmentationCreationTemplateLabel'],\n    '001F': ['UI', '1', 'SegmentationTemplateUID'],\n    '0020': ['US', '1', 'ReferencedSegmentReferenceIndex'],\n    '0021': ['SQ', '1', 'SegmentReferenceSequence'],\n    '0022': ['US', '1', 'SegmentReferenceIndex'],\n    '0023': ['SQ', '1', 'DirectSegmentReferenceSequence'],\n    '0024': ['SQ', '1', 'CombinationSegmentReferenceSequence'],\n    '0025': ['SQ', '1', 'ConceptualVolumeSequence'],\n    '0026': ['SQ', '1', 'SegmentedRTAccessoryDeviceSequence'],\n    '0027': ['SQ', '1', 'SegmentCharacteristicsSequence'],\n    '0028': ['SQ', '1', 'RelatedSegmentCharacteristicsSequence'],\n    '0029': ['US', '1', 'SegmentCharacteristicsPrecedence'],\n    '002A': ['SQ', '1', 'RTSegmentAnnotationSequence'],\n    '002B': ['SQ', '1', 'SegmentAnnotationCategoryCodeSequence'],\n    '002C': ['SQ', '1', 'SegmentAnnotationTypeCodeSequence'],\n    '002D': ['LO', '1', 'DeviceLabel'],\n    '002E': ['SQ', '1', 'DeviceTypeCodeSequence'],\n    '002F': ['SQ', '1', 'SegmentAnnotationTypeModifierCodeSequence'],\n    '0030': ['SQ', '1', 'PatientEquipmentRelationshipCodeSequence'],\n    '0031': ['UI', '1', 'ReferencedFiducialsUID'],\n    '0032': ['SQ', '1', 'PatientTreatmentOrientationSequence'],\n    '0033': ['SH', '1', 'UserContentLabel'],\n    '0034': ['LO', '1', 'UserContentLongLabel'],\n    '0035': ['SH', '1', 'EntityLabel'],\n    '0036': ['LO', '1', 'EntityName'],\n    '0037': ['ST', '1', 'EntityDescription'],\n    '0038': ['LO', '1', 'EntityLongLabel'],\n    '0039': ['US', '1', 'DeviceIndex'],\n    '003A': ['US', '1', 'RTTreatmentPhaseIndex'],\n    '003B': ['UI', '1', 'RTTreatmentPhaseUID'],\n    '003C': ['US', '1', 'RTPrescriptionIndex'],\n    '003D': ['US', '1', 'RTSegmentAnnotationIndex'],\n    '003E': ['US', '1', 'BasisRTTreatmentPhaseIndex'],\n    '003F': ['US', '1', 'RelatedRTTreatmentPhaseIndex'],\n    '0040': ['US', '1', 'ReferencedRTTreatmentPhaseIndex'],\n    '0041': ['US', '1', 'ReferencedRTPrescriptionIndex'],\n    '0042': ['US', '1', 'ReferencedParentRTPrescriptionIndex'],\n    '0043': ['ST', '1', 'ManufacturerDeviceIdentifier'],\n    '0044': ['SQ', '1', 'InstanceLevelReferencedPerformedProcedureStepSequence'],\n    '0045': ['CS', '1', 'RTTreatmentPhaseIntentPresenceFlag'],\n    '0046': ['CS', '1', 'RadiotherapyTreatmentType'],\n    '0047': ['CS', '1-n', 'TeletherapyRadiationType'],\n    '0048': ['CS', '1-n', 'BrachytherapySourceType'],\n    '0049': ['SQ', '1', 'ReferencedRTTreatmentPhaseSequence'],\n    '004A': ['SQ', '1', 'ReferencedDirectSegmentInstanceSequence'],\n    '004B': ['SQ', '1', 'IntendedRTTreatmentPhaseSequence'],\n    '004C': ['DA', '1', 'IntendedPhaseStartDate'],\n    '004D': ['DA', '1', 'IntendedPhaseEndDate'],\n    '004E': ['SQ', '1', 'RTTreatmentPhaseIntervalSequence'],\n    '004F': ['CS', '1', 'TemporalRelationshipIntervalAnchor'],\n    '0050': ['FD', '1', 'MinimumNumberOfIntervalDays'],\n    '0051': ['FD', '1', 'MaximumNumberOfIntervalDays'],\n    '0052': ['UI', '1-n', 'PertinentSOPClassesInStudy'],\n    '0053': ['UI', '1-n', 'PertinentSOPClassesInSeries'],\n    '0054': ['LO', '1', 'RTPrescriptionLabel'],\n    '0055': ['SQ', '1', 'RTPhysicianIntentPredecessorSequence'],\n    '0056': ['LO', '1', 'RTTreatmentApproachLabel'],\n    '0057': ['SQ', '1', 'RTPhysicianIntentSequence'],\n    '0058': ['US', '1', 'RTPhysicianIntentIndex'],\n    '0059': ['CS', '1', 'RTTreatmentIntentType'],\n    '005A': ['UT', '1', 'RTPhysicianIntentNarrative'],\n    '005B': ['SQ', '1', 'RTProtocolCodeSequence'],\n    '005C': ['ST', '1', 'ReasonForSuperseding'],\n    '005D': ['SQ', '1', 'RTDiagnosisCodeSequence'],\n    '005E': ['US', '1', 'ReferencedRTPhysicianIntentIndex'],\n    '005F': ['SQ', '1', 'RTPhysicianIntentInputInstanceSequence'],\n    '0060': ['SQ', '1', 'RTAnatomicPrescriptionSequence'],\n    '0061': ['UT', '1', 'PriorTreatmentDoseDescription'],\n    '0062': ['SQ', '1', 'PriorTreatmentReferenceSequence'],\n    '0063': ['CS', '1', 'DosimetricObjectiveEvaluationScope'],\n    '0064': ['SQ', '1', 'TherapeuticRoleCategoryCodeSequence'],\n    '0065': ['SQ', '1', 'TherapeuticRoleTypeCodeSequence'],\n    '0066': ['US', '1', 'ConceptualVolumeOptimizationPrecedence'],\n    '0067': ['SQ', '1', 'ConceptualVolumeCategoryCodeSequence'],\n    '0068': ['CS', '1', 'ConceptualVolumeBlockingConstraint'],\n    '0069': ['SQ', '1', 'ConceptualVolumeTypeCodeSequence'],\n    '006A': ['SQ', '1', 'ConceptualVolumeTypeModifierCodeSequence'],\n    '006B': ['SQ', '1', 'RTPrescriptionSequence'],\n    '006C': ['SQ', '1', 'DosimetricObjectiveSequence'],\n    '006D': ['SQ', '1', 'DosimetricObjectiveTypeCodeSequence'],\n    '006E': ['UI', '1', 'DosimetricObjectiveUID'],\n    '006F': ['UI', '1', 'ReferencedDosimetricObjectiveUID'],\n    '0070': ['SQ', '1', 'DosimetricObjectiveParameterSequence'],\n    '0071': ['SQ', '1', 'ReferencedDosimetricObjectivesSequence'],\n    '0073': ['CS', '1', 'AbsoluteDosimetricObjectiveFlag'],\n    '0074': ['FD', '1', 'DosimetricObjectiveWeight'],\n    '0075': ['CS', '1', 'DosimetricObjectivePurpose'],\n    '0076': ['SQ', '1', 'PlanningInputInformationSequence'],\n    '0077': ['LO', '1', 'TreatmentSite'],\n    '0078': ['SQ', '1', 'TreatmentSiteCodeSequence'],\n    '0079': ['SQ', '1', 'FractionPatternSequence'],\n    '007A': ['UT', '1', 'TreatmentTechniqueNotes'],\n    '007B': ['UT', '1', 'PrescriptionNotes'],\n    '007C': ['IS', '1', 'NumberOfIntervalFractions'],\n    '007D': ['US', '1', 'NumberOfFractions'],\n    '007E': ['US', '1', 'IntendedDeliveryDuration'],\n    '007F': ['UT', '1', 'FractionationNotes'],\n    '0080': ['SQ', '1', 'RTTreatmentTechniqueCodeSequence'],\n    '0081': ['SQ', '1', 'PrescriptionNotesSequence'],\n    '0082': ['SQ', '1', 'FractionBasedRelationshipSequence'],\n    '0083': ['CS', '1', 'FractionBasedRelationshipIntervalAnchor'],\n    '0084': ['FD', '1', 'MinimumHoursBetweenFractions'],\n    '0085': ['TM', '1-n', 'IntendedFractionStartTime'],\n    '0086': ['LT', '1', 'IntendedStartDayOfWeek'],\n    '0087': ['SQ', '1', 'WeekdayFractionPatternSequence'],\n    '0088': ['SQ', '1', 'DeliveryTimeStructureCodeSequence'],\n    '0089': ['SQ', '1', 'TreatmentSiteModifierCodeSequence'],\n    '0090': ['CS', '1', 'RoboticBaseLocationIndicator'],\n    '0091': ['SQ', '1', 'RoboticPathNodeSetCodeSequence'],\n    '0092': ['UL', '1', 'RoboticNodeIdentifier'],\n    '0093': ['FD', '3', 'RTTreatmentSourceCoordinates'],\n    '0094': ['FD', '1', 'RadiationSourceCoordinateSystemYawAngle'],\n    '0095': ['FD', '1', 'RadiationSourceCoordinateSystemRollAngle'],\n    '0096': ['FD', '1', 'RadiationSourceCoordinateSystemPitchAngle'],\n    '0097': ['SQ', '1', 'RoboticPathControlPointSequence'],\n    '0098': ['SQ', '1', 'TomotherapeuticControlPointSequence'],\n    '0099': ['FD', '1-n', 'TomotherapeuticLeafOpenDurations'],\n    '009A': ['FD', '1-n', 'TomotherapeuticLeafInitialClosedDurations']\n  },\n  '4000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['LT', '1', 'Arbitrary'],\n    '4000': ['LT', '1', 'TextComments']\n  },\n  '4008': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0040': ['SH', '1', 'ResultsID'],\n    '0042': ['LO', '1', 'ResultsIDIssuer'],\n    '0050': ['SQ', '1', 'ReferencedInterpretationSequence'],\n    '00FF': ['CS', '1', 'ReportProductionStatusTrial'],\n    '0100': ['DA', '1', 'InterpretationRecordedDate'],\n    '0101': ['TM', '1', 'InterpretationRecordedTime'],\n    '0102': ['PN', '1', 'InterpretationRecorder'],\n    '0103': ['LO', '1', 'ReferenceToRecordedSound'],\n    '0108': ['DA', '1', 'InterpretationTranscriptionDate'],\n    '0109': ['TM', '1', 'InterpretationTranscriptionTime'],\n    '010A': ['PN', '1', 'InterpretationTranscriber'],\n    '010B': ['ST', '1', 'InterpretationText'],\n    '010C': ['PN', '1', 'InterpretationAuthor'],\n    '0111': ['SQ', '1', 'InterpretationApproverSequence'],\n    '0112': ['DA', '1', 'InterpretationApprovalDate'],\n    '0113': ['TM', '1', 'InterpretationApprovalTime'],\n    '0114': ['PN', '1', 'PhysicianApprovingInterpretation'],\n    '0115': ['LT', '1', 'InterpretationDiagnosisDescription'],\n    '0117': ['SQ', '1', 'InterpretationDiagnosisCodeSequence'],\n    '0118': ['SQ', '1', 'ResultsDistributionListSequence'],\n    '0119': ['PN', '1', 'DistributionName'],\n    '011A': ['LO', '1', 'DistributionAddress'],\n    '0200': ['SH', '1', 'InterpretationID'],\n    '0202': ['LO', '1', 'InterpretationIDIssuer'],\n    '0210': ['CS', '1', 'InterpretationTypeID'],\n    '0212': ['CS', '1', 'InterpretationStatusID'],\n    '0300': ['ST', '1', 'Impressions'],\n    '4000': ['ST', '1', 'ResultsComments']\n  },\n  '4010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'LowEnergyDetectors'],\n    '0002': ['CS', '1', 'HighEnergyDetectors'],\n    '0004': ['SQ', '1', 'DetectorGeometrySequence'],\n    '1001': ['SQ', '1', 'ThreatROIVoxelSequence'],\n    '1004': ['FL', '3', 'ThreatROIBase'],\n    '1005': ['FL', '3', 'ThreatROIExtents'],\n    '1006': ['OB', '1', 'ThreatROIBitmap'],\n    '1007': ['SH', '1', 'RouteSegmentID'],\n    '1008': ['CS', '1', 'GantryType'],\n    '1009': ['CS', '1', 'OOIOwnerType'],\n    '100A': ['SQ', '1', 'RouteSegmentSequence'],\n    '1010': ['US', '1', 'PotentialThreatObjectID'],\n    '1011': ['SQ', '1', 'ThreatSequence'],\n    '1012': ['CS', '1', 'ThreatCategory'],\n    '1013': ['LT', '1', 'ThreatCategoryDescription'],\n    '1014': ['CS', '1', 'ATDAbilityAssessment'],\n    '1015': ['CS', '1', 'ATDAssessmentFlag'],\n    '1016': ['FL', '1', 'ATDAssessmentProbability'],\n    '1017': ['FL', '1', 'Mass'],\n    '1018': ['FL', '1', 'Density'],\n    '1019': ['FL', '1', 'ZEffective'],\n    '101A': ['SH', '1', 'BoardingPassID'],\n    '101B': ['FL', '3', 'CenterOfMass'],\n    '101C': ['FL', '3', 'CenterOfPTO'],\n    '101D': ['FL', '6-n', 'BoundingPolygon'],\n    '101E': ['SH', '1', 'RouteSegmentStartLocationID'],\n    '101F': ['SH', '1', 'RouteSegmentEndLocationID'],\n    '1020': ['CS', '1', 'RouteSegmentLocationIDType'],\n    '1021': ['CS', '1-n', 'AbortReason'],\n    '1023': ['FL', '1', 'VolumeOfPTO'],\n    '1024': ['CS', '1', 'AbortFlag'],\n    '1025': ['DT', '1', 'RouteSegmentStartTime'],\n    '1026': ['DT', '1', 'RouteSegmentEndTime'],\n    '1027': ['CS', '1', 'TDRType'],\n    '1028': ['CS', '1', 'InternationalRouteSegment'],\n    '1029': ['LO', '1-n', 'ThreatDetectionAlgorithmAndVersion'],\n    '102A': ['SH', '1', 'AssignedLocation'],\n    '102B': ['DT', '1', 'AlarmDecisionTime'],\n    '1031': ['CS', '1', 'AlarmDecision'],\n    '1033': ['US', '1', 'NumberOfTotalObjects'],\n    '1034': ['US', '1', 'NumberOfAlarmObjects'],\n    '1037': ['SQ', '1', 'PTORepresentationSequence'],\n    '1038': ['SQ', '1', 'ATDAssessmentSequence'],\n    '1039': ['CS', '1', 'TIPType'],\n    '103A': ['CS', '1', 'DICOSVersion'],\n    '1041': ['DT', '1', 'OOIOwnerCreationTime'],\n    '1042': ['CS', '1', 'OOIType'],\n    '1043': ['FL', '3', 'OOISize'],\n    '1044': ['CS', '1', 'AcquisitionStatus'],\n    '1045': ['SQ', '1', 'BasisMaterialsCodeSequence'],\n    '1046': ['CS', '1', 'PhantomType'],\n    '1047': ['SQ', '1', 'OOIOwnerSequence'],\n    '1048': ['CS', '1', 'ScanType'],\n    '1051': ['LO', '1', 'ItineraryID'],\n    '1052': ['SH', '1', 'ItineraryIDType'],\n    '1053': ['LO', '1', 'ItineraryIDAssigningAuthority'],\n    '1054': ['SH', '1', 'RouteID'],\n    '1055': ['SH', '1', 'RouteIDAssigningAuthority'],\n    '1056': ['CS', '1', 'InboundArrivalType'],\n    '1058': ['SH', '1', 'CarrierID'],\n    '1059': ['CS', '1', 'CarrierIDAssigningAuthority'],\n    '1060': ['FL', '3', 'SourceOrientation'],\n    '1061': ['FL', '3', 'SourcePosition'],\n    '1062': ['FL', '1', 'BeltHeight'],\n    '1064': ['SQ', '1', 'AlgorithmRoutingCodeSequence'],\n    '1067': ['CS', '1', 'TransportClassification'],\n    '1068': ['LT', '1', 'OOITypeDescriptor'],\n    '1069': ['FL', '1', 'TotalProcessingTime'],\n    '106C': ['OB', '1', 'DetectorCalibrationData'],\n    '106D': ['CS', '1', 'AdditionalScreeningPerformed'],\n    '106E': ['CS', '1', 'AdditionalInspectionSelectionCriteria'],\n    '106F': ['SQ', '1', 'AdditionalInspectionMethodSequence'],\n    '1070': ['CS', '1', 'AITDeviceType'],\n    '1071': ['SQ', '1', 'QRMeasurementsSequence'],\n    '1072': ['SQ', '1', 'TargetMaterialSequence'],\n    '1073': ['FD', '1', 'SNRThreshold'],\n    '1075': ['DS', '1', 'ImageScaleRepresentation'],\n    '1076': ['SQ', '1', 'ReferencedPTOSequence'],\n    '1077': ['SQ', '1', 'ReferencedTDRInstanceSequence'],\n    '1078': ['ST', '1', 'PTOLocationDescription'],\n    '1079': ['SQ', '1', 'AnomalyLocatorIndicatorSequence'],\n    '107A': ['FL', '3', 'AnomalyLocatorIndicator'],\n    '107B': ['SQ', '1', 'PTORegionSequence'],\n    '107C': ['CS', '1', 'InspectionSelectionCriteria'],\n    '107D': ['SQ', '1', 'SecondaryInspectionMethodSequence'],\n    '107E': ['DS', '6', 'PRCSToRCSOrientation']\n  },\n  '4FFE': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'MACParametersSequence']\n  },\n  '5000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0005': ['US', '1', 'CurveDimensions'],\n    '0010': ['US', '1', 'NumberOfPoints'],\n    '0020': ['CS', '1', 'TypeOfData'],\n    '0022': ['LO', '1', 'CurveDescription'],\n    '0030': ['SH', '1-n', 'AxisUnits'],\n    '0040': ['SH', '1-n', 'AxisLabels'],\n    '0103': ['US', '1', 'DataValueRepresentation'],\n    '0104': ['US', '1-n', 'MinimumCoordinateValue'],\n    '0105': ['US', '1-n', 'MaximumCoordinateValue'],\n    '0106': ['SH', '1-n', 'CurveRange'],\n    '0110': ['US', '1-n', 'CurveDataDescriptor'],\n    '0112': ['US', '1-n', 'CoordinateStartValue'],\n    '0114': ['US', '1-n', 'CoordinateStepValue'],\n    '1001': ['CS', '1', 'CurveActivationLayer'],\n    '2000': ['US', '1', 'AudioType'],\n    '2002': ['US', '1', 'AudioSampleFormat'],\n    '2004': ['US', '1', 'NumberOfChannels'],\n    '2006': ['UL', '1', 'NumberOfSamples'],\n    '2008': ['UL', '1', 'SampleRate'],\n    '200A': ['UL', '1', 'TotalTime'],\n    '200C': ['ox', '1', 'AudioSampleData'],\n    '200E': ['LT', '1', 'AudioComments'],\n    '2500': ['LO', '1', 'CurveLabel'],\n    '2600': ['SQ', '1', 'CurveReferencedOverlaySequence'],\n    '2610': ['US', '1', 'CurveReferencedOverlayGroup'],\n    '3000': ['ox', '1', 'CurveData']\n  },\n  '5200': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '9229': ['SQ', '1', 'SharedFunctionalGroupsSequence'],\n    '9230': ['SQ', '1', 'PerFrameFunctionalGroupsSequence']\n  },\n  '5400': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0100': ['SQ', '1', 'WaveformSequence'],\n    '0110': ['ox', '1', 'ChannelMinimumValue'],\n    '0112': ['ox', '1', 'ChannelMaximumValue'],\n    '1004': ['US', '1', 'WaveformBitsAllocated'],\n    '1006': ['CS', '1', 'WaveformSampleInterpretation'],\n    '100A': ['ox', '1', 'WaveformPaddingValue'],\n    '1010': ['ox', '1', 'WaveformData']\n  },\n  '5600': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['OF', '1', 'FirstOrderPhaseCorrectionAngle'],\n    '0020': ['OF', '1', 'SpectroscopyData']\n  },\n  '6000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '1', 'OverlayRows'],\n    '0011': ['US', '1', 'OverlayColumns'],\n    '0012': ['US', '1', 'OverlayPlanes'],\n    '0015': ['IS', '1', 'NumberOfFramesInOverlay'],\n    '0022': ['LO', '1', 'OverlayDescription'],\n    '0040': ['CS', '1', 'OverlayType'],\n    '0045': ['LO', '1', 'OverlaySubtype'],\n    '0050': ['SS', '2', 'OverlayOrigin'],\n    '0051': ['US', '1', 'ImageFrameOrigin'],\n    '0052': ['US', '1', 'OverlayPlaneOrigin'],\n    '0060': ['CS', '1', 'OverlayCompressionCode'],\n    '0061': ['SH', '1', 'OverlayCompressionOriginator'],\n    '0062': ['SH', '1', 'OverlayCompressionLabel'],\n    '0063': ['CS', '1', 'OverlayCompressionDescription'],\n    '0066': ['AT', '1-n', 'OverlayCompressionStepPointers'],\n    '0068': ['US', '1', 'OverlayRepeatInterval'],\n    '0069': ['US', '1', 'OverlayBitsGrouped'],\n    '0100': ['US', '1', 'OverlayBitsAllocated'],\n    '0102': ['US', '1', 'OverlayBitPosition'],\n    '0110': ['CS', '1', 'OverlayFormat'],\n    '0200': ['US', '1', 'OverlayLocation'],\n    '0800': ['CS', '1-n', 'OverlayCodeLabel'],\n    '0802': ['US', '1', 'OverlayNumberOfTables'],\n    '0803': ['AT', '1-n', 'OverlayCodeTableLocation'],\n    '0804': ['US', '1', 'OverlayBitsForCodeWord'],\n    '1001': ['CS', '1', 'OverlayActivationLayer'],\n    '1100': ['US', '1', 'OverlayDescriptorGray'],\n    '1101': ['US', '1', 'OverlayDescriptorRed'],\n    '1102': ['US', '1', 'OverlayDescriptorGreen'],\n    '1103': ['US', '1', 'OverlayDescriptorBlue'],\n    '1200': ['US', '1-n', 'OverlaysGray'],\n    '1201': ['US', '1-n', 'OverlaysRed'],\n    '1202': ['US', '1-n', 'OverlaysGreen'],\n    '1203': ['US', '1-n', 'OverlaysBlue'],\n    '1301': ['IS', '1', 'ROIArea'],\n    '1302': ['DS', '1', 'ROIMean'],\n    '1303': ['DS', '1', 'ROIStandardDeviation'],\n    '1500': ['LO', '1', 'OverlayLabel'],\n    '3000': ['ox', '1', 'OverlayData'],\n    '4000': ['LT', '1', 'OverlayComments']\n  },\n  '7F00': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['ox', '1', 'VariablePixelData'],\n    '0011': ['US', '1', 'VariableNextDataGroup'],\n    '0020': ['OW', '1', 'VariableCoefficientsSDVN'],\n    '0030': ['OW', '1', 'VariableCoefficientsSDHN'],\n    '0040': ['OW', '1', 'VariableCoefficientsSDDN']\n  },\n  '7FE0': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['OV', '1', 'ExtendedOffsetTable'],\n    '0002': ['OV', '1', 'ExtendedOffsetTableLengths'],\n    '0008': ['OF', '1', 'FloatPixelData'],\n    '0009': ['OD', '1', 'DoubleFloatPixelData'],\n    '0010': ['ox', '1', 'PixelData'],\n    '0020': ['OW', '1', 'CoefficientsSDVN'],\n    '0030': ['OW', '1', 'CoefficientsSDHN'],\n    '0040': ['OW', '1', 'CoefficientsSDDN']\n  },\n  'FFFA': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    'FFFA': ['SQ', '1', 'DigitalSignaturesSequence']\n  },\n  'FFFC': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    'FFFC': ['OB', '1', 'DataSetTrailingPadding']\n  },\n  'FFFE': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    'E000': ['NONE', '1', 'Item'],\n    'E00D': ['NONE', '1', 'ItemDelimitationItem'],\n    'E0DD': ['NONE', '1', 'SequenceDelimitationItem']\n  }\n}; // Dictionary\n\n/**\n * Add tags to the dictionary.\n *\n * @param {string} group The group key.\n * @param {Object<string, string[]>} tags The tags to add as an\n *   object indexed by element key with values as:\n *   [VR, multiplicity, TagName] (all strings).\n */\nexport function addTagsToDictionary(group, tags) {\n  // TODO: add checks!\n  dictionary[group] = tags;\n}\n\n/**\n * Tag groups: key to name pairs.\n * Copied from gdcm-2.6.1\\Source\\DataDictionary\\GroupName.dic\n * -> removed duplicates (commented).\n *\n * @type {Object<string, string>}\n */\nexport const tagGroups = {\n  '0000': 'Command',\n  '0002': 'Meta Element',\n  '0004': 'File Set',\n  //'0004': 'Directory',\n  '0008': 'Identifying',\n  '0009': 'SPI Identifying',\n  '0010': 'Patient',\n  '0012': 'Clinical Trial',\n  '0018': 'Acquisition',\n  '0019': 'SPI Acquisition',\n  '0020': 'Image',\n  '0021': 'SPI Image',\n  '0022': 'Ophtalmology',\n  '0028': 'Image Presentation',\n  '0032': 'Study',\n  '0038': 'Visit',\n  '003A': 'Waveform',\n  '0040': 'Procedure',\n  //'0040': ''Modality Worklist',\n  '0042': 'Encapsulated Document',\n  '0050': 'Device Informations',\n  //'0050': 'XRay Angio Device',\n  '0054': 'Nuclear Medicine',\n  '0060': 'Histogram',\n  '0070': 'Presentation State',\n  '0072': 'Hanging Protocol',\n  '0088': 'Storage',\n  //'0088': 'Medicine',\n  '0100': 'Authorization',\n  '0400': 'Digital Signature',\n  '1000': 'Code Table',\n  '1010': 'Zonal Map',\n  '2000': 'Film Session',\n  '2010': 'Film Box',\n  '2020': 'Image Box',\n  '2030': 'Annotation',\n  '2040': 'Overlay Box',\n  '2050': 'Presentation LUT',\n  '2100': 'Print Job',\n  '2110': 'Printer',\n  '2120': 'Queue',\n  '2130': 'Print Content',\n  '2200': 'Media Creation',\n  '3002': 'RT Image',\n  '3004': 'RT Dose',\n  '3006': 'RT StructureSet',\n  '3008': 'RT Treatment',\n  '300A': 'RT Plan',\n  '300C': 'RT Relationship',\n  '300E': 'RT Approval',\n  '4000': 'Text',\n  '4008': 'Results',\n  '4FFE': 'MAC Parameters',\n  '5000': 'Curve',\n  '5002': 'Curve',\n  '5004': 'Curve',\n  '5006': 'Curve',\n  '5008': 'Curve',\n  '500A': 'Curve',\n  '500C': 'Curve',\n  '500E': 'Curve',\n  '5400': 'Waveform Data',\n  '6000': 'Overlays',\n  '6002': 'Overlays',\n  '6004': 'Overlays',\n  '6008': 'Overlays',\n  '600A': 'Overlays',\n  '600C': 'Overlays',\n  '600E': 'Overlays',\n  'FFFC': 'Generic',\n  '7FE0': 'Pixel Data',\n  'FFFF': 'Unknown'\n};\n\n/**\n * List of Value Representation (VR) with 32bit Value Length (VL).\n *\n * Added locally used 'ox'.\n * See {@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/chapter_7.html#table_7.1-1}.\n *\n * @type {Object<string, boolean>}\n */\nconst vr32bitVL = {\n  OB: true,\n  OD: true,\n  OF: true,\n  OL: true,\n  OV: true,\n  OW: true,\n  SQ: true,\n  SV: true,\n  UC: true,\n  UN: true,\n  UR: true,\n  UT: true,\n  UV: true,\n  ox: true\n};\n\n/**\n * Does the input Value Representation (VR) have a 32bit Value Length (VL).\n *\n * @param {string} vr The data Value Representation (VR).\n * @returns {boolean} True if this VR has a 32-bit VL.\n */\nexport function is32bitVLVR(vr) {\n  return typeof vr32bitVL[vr] !== 'undefined';\n}\n\n/**\n * List of string VR with extended or replaced default character repertoire defined in\n *   Specific Character Set (0008,0005).\n *\n * See {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/chapter_6.html#sect_6.1.2.2}.\n *\n * @type {Object<string, boolean>}\n */\nconst vrCharSetString = {\n  SH: true,\n  LO: true,\n  UC: true,\n  ST: true,\n  LT: true,\n  UT: true,\n  PN: true\n};\n\n/**\n * Does the input Value Representation (VR) have an special character repertoire.\n *\n * @param {string} vr The data VR.\n * @returns {boolean} True if this VR has a special char set.\n */\nexport function isCharSetStringVR(vr) {\n  return typeof vrCharSetString[vr] !== 'undefined';\n}\n\n/**\n * VR equivalent javascript types.\n *\n * See {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_6.2.html#table_6.2-1}.\n *\n * @type {Object<string, string>}\n */\nexport const vrTypes = {\n  AE: 'string',\n  AS: 'string',\n  AT: undefined,\n  CS: 'string',\n  DA: 'string',\n  DS: 'string',\n  DT: 'string',\n  FL: 'Float32',\n  FD: 'Float64',\n  IS: 'string',\n  LO: 'string',\n  LT: 'string',\n  OB: 'Uint8',\n  OD: 'Uint64',\n  OF: 'Uint32',\n  OL: 'Uint32',\n  OV: 'Uint64',\n  OW: 'Uint16',\n  PN: 'string',\n  SH: 'string',\n  SL: 'Int32',\n  SQ: undefined,\n  SS: 'Int16',\n  ST: 'string',\n  SV: 'Int64',\n  TM: 'string',\n  UC: 'string',\n  UI: 'string',\n  UL: 'Uint32',\n  UN: 'Uint8',\n  UR: 'string',\n  US: 'Uint16',\n  UT: 'string',\n  UV: 'Uint64'\n};\n\n/**\n * Transfer syntaxes.\n *\n * See {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part06/chapter_A.html#table_A-1}.\n *\n * @type {Object<string, string>}\n */\nexport const transferSyntaxes = {\n  '1.2.840.10008.1.2': 'Implicit VR Little Endian',\n  '1.2.840.10008.1.2.1': 'Explicit VR Little Endian',\n  '1.2.840.10008.1.2.1.98': 'Encapsulated Uncompressed Explicit VR Little Endian',\n  '1.2.840.10008.1.2.1.99': 'Deflated Explicit VR Little Endian',\n  '1.2.840.10008.1.2.2': 'Explicit VR Big Endian (Retired)',\n  '1.2.840.10008.1.2.4.50': 'JPEG Baseline (Process 1)',\n  '1.2.840.10008.1.2.4.51': 'JPEG Extended (Process 2 & 4)',\n  '1.2.840.10008.1.2.4.52': 'JPEG Extended (Process 3 & 5) (Retired)',\n  '1.2.840.10008.1.2.4.53': 'JPEG Spectral Selection, Non-Hierarchical (Process 6 & 8) (Retired)',\n  '1.2.840.10008.1.2.4.54': 'JPEG Spectral Selection, Non-Hierarchical (Process 7 & 9) (Retired)',\n  '1.2.840.10008.1.2.4.55': 'JPEG Full Progression, Non-Hierarchical (Process 10 & 12) (Retired)',\n  '1.2.840.10008.1.2.4.56': 'JPEG Full Progression, Non-Hierarchical (Process 11 & 13) (Retired)',\n  '1.2.840.10008.1.2.4.57': 'JPEG Lossless, Non-Hierarchical (Process 14)',\n  '1.2.840.10008.1.2.4.58': 'JPEG Lossless, Non-Hierarchical (Process 15) (Retired)',\n  '1.2.840.10008.1.2.4.59': 'JPEG Extended, Hierarchical (Process 16 & 18) (Retired)',\n  '1.2.840.10008.1.2.4.60': 'JPEG Extended, Hierarchical (Process 17 & 19) (Retired)',\n  '1.2.840.10008.1.2.4.61': 'JPEG Spectral Selection, Hierarchical (Process 20 & 22) (Retired)',\n  '1.2.840.10008.1.2.4.62': 'JPEG Spectral Selection, Hierarchical (Process 21 & 23) (Retired)',\n  '1.2.840.10008.1.2.4.63': 'JPEG Full Progression, Hierarchical (Process 24 & 26) (Retired)',\n  '1.2.840.10008.1.2.4.64': 'JPEG Full Progression, Hierarchical (Process 25 & 27) (Retired)',\n  '1.2.840.10008.1.2.4.65': 'JPEG Lossless, Hierarchical (Process 28) (Retired)',\n  '1.2.840.10008.1.2.4.66': 'JPEG Lossless, Hierarchical (Process 29) (Retired)',\n  '1.2.840.10008.1.2.4.70': 'JPEG Lossless, Non-Hierarchical, First-Order Prediction (Process 14 [Selection Value 1])',\n  '1.2.840.10008.1.2.4.80': 'JPEG-LS Lossless Image Compression',\n  '1.2.840.10008.1.2.4.81': 'JPEG-LS Lossy (Near-Lossless) Image Compression',\n  '1.2.840.10008.1.2.4.90': 'JPEG 2000 Image Compression (Lossless Only)',\n  '1.2.840.10008.1.2.4.91': 'JPEG 2000 Image Compression',\n  '1.2.840.10008.1.2.4.92': 'JPEG 2000 Part 2 Multi-component Image Compression (Lossless Only)',\n  '1.2.840.10008.1.2.4.93': 'JPEG 2000 Part 2 Multi-component Image Compression',\n  '1.2.840.10008.1.2.4.94': 'JPIP Referenced',\n  '1.2.840.10008.1.2.4.95': 'JPIP Referenced Deflate',\n  '1.2.840.10008.1.2.4.100': 'MPEG2 Main Profile / Main Level',\n  '1.2.840.10008.1.2.4.101': 'MPEG2 Main Profile / High Level',\n  '1.2.840.10008.1.2.4.102': 'MPEG-4 AVC/H.264 High Profile / Level 4.1',\n  '1.2.840.10008.1.2.4.103': 'MPEG-4 AVC/H.264 BD-compatible High Profile / Level 4.1',\n  '1.2.840.10008.1.2.4.104': 'MPEG-4 AVC/H.264 High Profile / Level 4.2 For 2D Video',\n  '1.2.840.10008.1.2.4.105': 'MPEG-4 AVC/H.264 High Profile / Level 4.2 For 3D Video',\n  '1.2.840.10008.1.2.4.106': 'MPEG-4 AVC/H.264 Stereo High Profile / Level 4.2',\n  '1.2.840.10008.1.2.4.107': 'HEVC/H.265 Main Profile / Level 5.1',\n  '1.2.840.10008.1.2.4.108': 'HEVC/H.265 Main 10 Profile / Level 5.1',\n  '1.2.840.10008.1.2.5': 'RLE Lossless',\n  '1.2.840.10008.1.2.6.1': 'RFC 2557 MIME encapsulation (Retired)',\n  '1.2.840.10008.1.2.6.2': 'XML Encoding (Retired)',\n  '1.2.840.10008.1.2.7.1': 'SMPTE ST 2110-20 Uncompressed Progressive Active Video',\n  '1.2.840.10008.1.2.7.2': 'SMPTE ST 2110-20 Uncompressed Interlaced Active Video',\n  '1.2.840.10008.1.2.7.3': 'SMPTE ST 2110-30 PCM Digital Audio',\n  '1.2.840.10008.1.20': 'Papyrus 3 Implicit VR Little Endian (Retired)'\n};\n\n/**\n * Transfer syntaxes indexed by keyword.\n *\n * @type {Object<string, string>}\n */\nexport const transferSyntaxKeywords = {\n  ImplicitVRLittleEndian: '1.2.840.10008.1.2',\n  ExplicitVRLittleEndian: '1.2.840.10008.1.2.1',\n  EncapsulatedUncompressedExplicitVRLittleEndian: '1.2.840.10008.1.2.1.98',\n  DeflatedExplicitVRLittleEndian: '1.2.840.10008.1.2.1.99',\n  ExplicitVRBigEndian: '1.2.840.10008.1.2.2',\n  JPEGBaseline8Bit: '1.2.840.10008.1.2.4.50',\n  JPEGExtended12Bit: '1.2.840.10008.1.2.4.51',\n  JPEGExtended35: '1.2.840.10008.1.2.4.52',\n  JPEGSpectralSelectionNonHierarchical68: '1.2.840.10008.1.2.4.53',\n  JPEGSpectralSelectionNonHierarchical79: '1.2.840.10008.1.2.4.54',\n  JPEGFullProgressionNonHierarchical1012: '1.2.840.10008.1.2.4.55',\n  JPEGFullProgressionNonHierarchical1113: '1.2.840.10008.1.2.4.56',\n  JPEGLossless: '1.2.840.10008.1.2.4.57',\n  JPEGLosslessNonHierarchical15: '1.2.840.10008.1.2.4.58',\n  JPEGExtendedHierarchical1618: '1.2.840.10008.1.2.4.59',\n  JPEGExtendedHierarchical1719: '1.2.840.10008.1.2.4.60',\n  JPEGSpectralSelectionHierarchical2022: '1.2.840.10008.1.2.4.61',\n  JPEGSpectralSelectionHierarchical2123: '1.2.840.10008.1.2.4.62',\n  JPEGFullProgressionHierarchical2426: '1.2.840.10008.1.2.4.63',\n  JPEGFullProgressionHierarchical2527: '1.2.840.10008.1.2.4.64',\n  JPEGLosslessHierarchical28: '1.2.840.10008.1.2.4.65',\n  JPEGLosslessHierarchical29: '1.2.840.10008.1.2.4.66',\n  JPEGLosslessSV1: '1.2.840.10008.1.2.4.70',\n  JPEGLSLossless: '1.2.840.10008.1.2.4.80',\n  JPEGLSNearLossless: '1.2.840.10008.1.2.4.81',\n  JPEG2000Lossless: '1.2.840.10008.1.2.4.90',\n  JPEG2000: '1.2.840.10008.1.2.4.91',\n  JPEG2000MCLossless: '1.2.840.10008.1.2.4.92',\n  JPEG2000MC: '1.2.840.10008.1.2.4.93',\n  JPIPReferenced: '1.2.840.10008.1.2.4.94',\n  JPIPReferencedDeflate: '1.2.840.10008.1.2.4.95',\n  MPEG2MPML: '1.2.840.10008.1.2.4.100',\n  MPEG2MPHL: '1.2.840.10008.1.2.4.101',\n  MPEG4HP41: '1.2.840.10008.1.2.4.102',\n  MPEG4HP41BD: '1.2.840.10008.1.2.4.103',\n  MPEG4HP422D: '1.2.840.10008.1.2.4.104',\n  MPEG4HP423D: '1.2.840.10008.1.2.4.105',\n  MPEG4HP42STEREO: '1.2.840.10008.1.2.4.106',\n  HEVCMP51: '1.2.840.10008.1.2.4.107',\n  HEVCM10P51: '1.2.840.10008.1.2.4.108',\n  RLELossless: '1.2.840.10008.1.2.5',\n  RFC2557MIMEEncapsulation: '1.2.840.10008.1.2.6.1',\n  XMLEncoding: '1.2.840.10008.1.2.6.2',\n  SMPTEST211020UncompressedProgressiveActiveVideo: '1.2.840.10008.1.2.7.1',\n  SMPTEST211020UncompressedInterlacedActiveVideo: '1.2.840.10008.1.2.7.2',\n  SMPTEST211030PCMDigitalAudio: '1.2.840.10008.1.2.7.3',\n  Papyrus3ImplicitVRLittleEndian: '1.2.840.10008.1.20'\n};\n","import {\n  dictionary,\n  tagGroups\n} from './dictionary';\n\n/**\n * Immutable tag.\n */\nexport class Tag {\n\n  /**\n   * The tag group.\n   *\n   * @type {string}\n   */\n  #group;\n\n  /**\n   * The tag element.\n   *\n   * @type {string}\n   */\n  #element;\n\n  /**\n   * @param {string} group The tag group as '####'.\n   * @param {string} element The tag element as '####'.\n   */\n  constructor(group, element) {\n    if (!group || typeof group === 'undefined') {\n      throw new Error('Cannot create tag with no group.');\n    }\n    if (group.length !== 4) {\n      throw new Error('Cannot create tag with badly sized group: ' + group);\n    }\n    if (!element || typeof element === 'undefined') {\n      throw new Error('Cannot create tag with no element.');\n    }\n    if (element.length !== 4) {\n      throw new Error('Cannot create tag with badly sized element: ' + element);\n    }\n    this.#group = group;\n    this.#element = element;\n  }\n\n  /**\n   * Get the tag group.\n   *\n   * @returns {string} The tag group.\n   */\n  getGroup() {\n    return this.#group;\n  }\n\n  /**\n   * Get the tag element.\n   *\n   * @returns {string} The tag element.\n   */\n  getElement() {\n    return this.#element;\n  }\n\n  /**\n   * Get as string representation of the tag: 'key: name'.\n   *\n   * @returns {string} A string representing the tag.\n   */\n  toString() {\n    return this.getKey() + ': ' + this.getNameFromDictionary();\n  }\n\n  /**\n   * Check for Tag equality.\n   *\n   * @param {Tag} rhs The other tag to compare to.\n   * @returns {boolean} True if both tags are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      typeof rhs !== 'undefined' &&\n      this.#group === rhs.getGroup() &&\n      this.#element === rhs.getElement();\n  }\n\n  /**\n   * Get the group-element key used to store DICOM elements.\n   *\n   * @returns {string} The key as '########'.\n   */\n  getKey() {\n    return this.#group + this.#element;\n  }\n\n  /**\n   * Get the group name as defined in TagGroups.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return tagGroups[this.#group];\n  }\n\n  /**\n   * Does this tag have a VR.\n   * Basically not the Item, ItemDelimitationItem nor\n   *  SequenceDelimitationItem tags.\n   *\n   * @returns {boolean} True if this tag has a VR.\n   */\n  isWithVR() {\n    return !(this.#group === 'FFFE' &&\n      (this.#element === 'E000' ||\n      this.#element === 'E00D' ||\n      this.#element === 'E0DD')\n    );\n  }\n\n  /**\n   * Is the tag group a private tag group ?\n   *\n   * See: {@link http://dicom.nema.org/medical/dicom/2022a/output/html/part05.html#sect_7.8}.\n   *\n   * @returns {boolean} True if the tag group is private,\n   *   ie if its group is an odd number.\n   */\n  isPrivate() {\n    return parseInt(this.#group, 16) % 2 === 1;\n  }\n\n  /**\n   * Get the tag info from the dicom dictionary.\n   *\n   * @returns {string[]|undefined} The info as [vr, multiplicity, name].\n   */\n  #getInfoFromDictionary() {\n    let info;\n    if (typeof dictionary[this.#group] !== 'undefined' &&\n      typeof dictionary[this.#group][this.#element] !==\n        'undefined') {\n      info = dictionary[this.#group][this.#element];\n    }\n    return info;\n  }\n\n  /**\n   * Get the tag Value Representation (VR) from the dicom dictionary.\n   *\n   * @returns {string|undefined} The VR.\n   */\n  getVrFromDictionary() {\n    let vr;\n    const info = this.#getInfoFromDictionary();\n    if (typeof info !== 'undefined') {\n      vr = info[0];\n    }\n    return vr;\n  }\n\n  /**\n   * Get the tag name from the dicom dictionary.\n   *\n   * @returns {string|undefined} The VR.\n   */\n  getNameFromDictionary() {\n    let name;\n    const info = this.#getInfoFromDictionary();\n    if (typeof info !== 'undefined') {\n      name = info[2];\n    }\n    return name;\n  }\n\n} // Tag class\n\n/**\n * Tag compare function.\n *\n * @param {Tag} a The first tag.\n * @param {Tag} b The second tag.\n * @returns {number} The result of the tag comparison,\n *   positive for b before a, negative for a before b and\n *   zero to keep same order.\n */\nexport function tagCompareFunction(a, b) {\n  // first by group\n  let res = parseInt(a.getGroup(), 16) - parseInt(b.getGroup(), 16);\n  if (res === 0) {\n    // by element if same group\n    res = parseInt(a.getElement(), 16) - parseInt(b.getElement(), 16);\n  }\n  return res;\n}\n\n/**\n * Split a group-element key used to store DICOM elements.\n *\n * @param {string} key The key in form \"00280102\" as generated by tag::getKey.\n * @returns {Tag} The DICOM tag.\n */\nexport function getTagFromKey(key) {\n  if (!key || typeof key === 'undefined') {\n    throw new Error('Cannot create tag with no key.');\n  }\n  if (key.length !== 8) {\n    throw new Error('Cannot create tag with badly sized key: ' + key);\n  }\n  return new Tag(key.substring(0, 4), key.substring(4, 8));\n}\n\n/**\n * Get the TransferSyntaxUID Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getTransferSyntaxUIDTag() {\n  return new Tag('0002', '0010');\n}\n\n/**\n * Get the FileMetaInformationGroupLength Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getFileMetaInformationGroupLengthTag() {\n  return new Tag('0002', '0000');\n}\n\n/**\n * Is the input tag the FileMetaInformationGroupLength Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isFileMetaInformationGroupLengthTag(tag) {\n  return tag.equals(getFileMetaInformationGroupLengthTag());\n}\n\n/**\n * Get the Item Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getItemTag() {\n  return new Tag('FFFE', 'E000');\n}\n\n/**\n * Is the input tag the Item Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isItemTag(tag) {\n  // faster than tag.equals(getItemTag());\n  return tag.getKey() === 'FFFEE000';\n}\n\n/**\n * Get the ItemDelimitationItem Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getItemDelimitationItemTag() {\n  return new Tag('FFFE', 'E00D');\n}\n\n/**\n * Is the input tag the ItemDelimitationItem Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isItemDelimitationItemTag(tag) {\n  // faster than tag.equals(getItemDelimitationItemTag());\n  return tag.getKey() === 'FFFEE00D';\n}\n\n/**\n * Get the SequenceDelimitationItem Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getSequenceDelimitationItemTag() {\n  return new Tag('FFFE', 'E0DD');\n}\n\n/**\n * Is the input tag the SequenceDelimitationItem Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isSequenceDelimitationItemTag(tag) {\n  // faster than tag.equals(getSequenceDelimitationItemTag());\n  return tag.getKey() === 'FFFEE0DD';\n}\n\n/**\n * Get the PixelData Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getPixelDataTag() {\n  return new Tag('7FE0', '0010');\n}\n\n/**\n * Is the input tag the PixelData Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isPixelDataTag(tag) {\n  // faster than tag.equals(getPixelDataTag());\n  return tag.getKey() === '7FE00010';\n}\n\n/**\n * Get a tag from the dictionary using a tag string name.\n *\n * @param {string} tagName The tag string name.\n * @returns {Tag|undefined} The tag object or null if not found.\n */\nexport function getTagFromDictionary(tagName) {\n  if (typeof tagName === 'undefined' || tagName === null) {\n    return null;\n  }\n  let group = null;\n  let element = null;\n  const dict = dictionary;\n  const keys0 = Object.keys(dict);\n  let keys1 = null;\n  let foundTag = false;\n  // search through dictionary\n  for (let k0 = 0, lenK0 = keys0.length; k0 < lenK0; ++k0) {\n    group = keys0[k0];\n    keys1 = Object.keys(dict[group]);\n    for (let k1 = 0, lenK1 = keys1.length; k1 < lenK1; ++k1) {\n      element = keys1[k1];\n      if (dict[group][element][2] === tagName) {\n        foundTag = true;\n        break;\n      }\n    }\n    if (foundTag) {\n      break;\n    }\n  }\n  let tag;\n  if (foundTag) {\n    tag = new Tag(group, element);\n  }\n  return tag;\n}\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {Tag} from './dicomTag';\n/* eslint-enable no-unused-vars */\n\n/**\n * DICOM data element.\n */\nexport class DataElement {\n  /**\n   * The element Value Representation.\n   *\n   * @type {string}\n   */\n  vr;\n  /**\n   * The element value.\n   *\n   * @type {Array}\n   */\n  value;\n\n  // [start] internal values\n  // only present during parsing or writing otherwise not set\n\n  /**\n   * The element dicom tag.\n   *\n   * @type {Tag}\n   */\n  tag;\n\n  /**\n   * The element Value Length.\n   *\n   * @type {number}\n   */\n  vl;\n\n  /**\n   * Flag to know if defined or undefined sequence length.\n   *\n   * @type {boolean}\n   */\n  undefinedLength;\n\n  /**\n   * The element start offset.\n   *\n   * @type {number}\n   */\n  startOffset;\n\n  /**\n   * The element end offset.\n   *\n   * @type {number}\n   */\n  endOffset;\n\n  /**\n   * The sequence items.\n   *\n   * @type {Array}\n   */\n  items;\n\n  // [end] internal values\n\n  /**\n   * @param {string} vr The element VR (Value Representation).\n   */\n  constructor(vr) {\n    this.vr = vr;\n  }\n}","/**\n * Is the Native endianness Little Endian.\n *\n * @returns {boolean} True if little endian.\n */\nexport function isNativeLittleEndian() {\n  return new Int8Array(new Int16Array([1]).buffer)[0] > 0;\n}\n\n/**\n * Flip an array's endianness.\n * Inspired from [DataStream.js]{@link https://github.com/kig/DataStream.js}.\n *\n * @param {object} array The array to flip (modified).\n */\nfunction flipArrayEndianness(array) {\n  const blen = array.byteLength;\n  const u8 = new Uint8Array(array.buffer, array.byteOffset, blen);\n  const bpe = array.BYTES_PER_ELEMENT;\n  let tmp;\n  for (let i = 0; i < blen; i += bpe) {\n    for (let j = i + bpe - 1, k = i; j > k; j--, k++) {\n      tmp = u8[k];\n      u8[k] = u8[j];\n      u8[j] = tmp;\n    }\n  }\n}\n\n/**\n * Data reader.\n */\nexport class DataReader {\n\n  /**\n   * The input buffer.\n   *\n   * @type {ArrayBuffer}\n   */\n  #buffer;\n\n  /**\n   * Is the endianness Little Endian.\n   *\n   * @type {boolean}\n   */\n  #isLittleEndian = true;\n\n  /**\n   * Is the Native endianness Little Endian.\n   *\n   * @type {boolean}\n   */\n  #isNativeLittleEndian = isNativeLittleEndian();\n\n  /**\n   * Flag to know if the TypedArray data needs flipping.\n   *\n   * @type {boolean}\n   */\n  #needFlip;\n\n  /**\n   * The main data view.\n   *\n   * @type {DataView}\n   */\n  #view;\n\n  /**\n   * @param {ArrayBuffer} buffer The input array buffer.\n   * @param {boolean} [isLittleEndian] Flag to tell if the data is little\n   *   or big endian (default: true).\n   */\n  constructor(buffer, isLittleEndian) {\n    this.#buffer = buffer;\n    // Set endian flag if not defined.\n    if (typeof isLittleEndian !== 'undefined') {\n      this.#isLittleEndian = isLittleEndian;\n    }\n    this.#needFlip = (this.#isLittleEndian !== this.#isNativeLittleEndian);\n    this.#view = new DataView(buffer);\n  }\n\n  /**\n   * Read Uint16 (2 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readUint16(byteOffset) {\n    return this.#view.getUint16(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Int16 (2 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readInt16(byteOffset) {\n    return this.#view.getInt16(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Uint32 (4 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readUint32(byteOffset) {\n    return this.#view.getUint32(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read BigUint64 (8 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {bigint} The read data.\n   */\n  readBigUint64(byteOffset) {\n    return this.#view.getBigUint64(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Int32 (4 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readInt32(byteOffset) {\n    return this.#view.getInt32(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read BigInt64 (8 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {bigint} The read data.\n   */\n  readBigInt64(byteOffset) {\n    return this.#view.getBigInt64(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Float32 (4 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readFloat32(byteOffset) {\n    return this.#view.getFloat32(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Float64 (8 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readFloat64(byteOffset) {\n    return this.#view.getFloat64(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read binary (0/1) array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Uint8Array} The read data.\n   */\n  readBinaryArray(byteOffset, size) {\n    // input\n    const bitArray = new Uint8Array(this.#buffer, byteOffset, size);\n    // result\n    const byteArrayLength = 8 * bitArray.length;\n    const data = new Uint8Array(byteArrayLength);\n    let bitNumber = 0;\n    let bitIndex = 0;\n    for (let i = 0; i < byteArrayLength; ++i) {\n      bitNumber = i % 8;\n      bitIndex = Math.floor(i / 8);\n      // see https://stackoverflow.com/questions/4854207/get-a-specific-bit-from-byte/4854257\n      // @ts-ignore\n      data[i] = 255 * ((bitArray[bitIndex] & (1 << bitNumber)) !== 0);\n    }\n    return data;\n  }\n\n  /**\n   * Read Uint8 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Uint8Array} The read data.\n   */\n  readUint8Array(byteOffset, size) {\n    return new Uint8Array(this.#buffer, byteOffset, size);\n  }\n\n  /**\n   * Read Int8 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Int8Array} The read data.\n   */\n  readInt8Array(byteOffset, size) {\n    return new Int8Array(this.#buffer, byteOffset, size);\n  }\n\n  /**\n   * Read Uint16 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Uint16Array} The read data.\n   */\n  readUint16Array(byteOffset, size) {\n    const bpe = Uint16Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Uint16Array.BYTES_PER_ELEMENT (=2)\n    if (byteOffset % bpe === 0) {\n      data = new Uint16Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Uint16Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readUint16(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Int16 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Int16Array} The read data.\n   */\n  readInt16Array(byteOffset, size) {\n    const bpe = Int16Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Int16Array.BYTES_PER_ELEMENT (=2)\n    if (byteOffset % bpe === 0) {\n      data = new Int16Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Int16Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readInt16(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Uint32 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Uint32Array} The read data.\n   */\n  readUint32Array(byteOffset, size) {\n    const bpe = Uint32Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Uint32Array.BYTES_PER_ELEMENT (=4)\n    if (byteOffset % bpe === 0) {\n      data = new Uint32Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Uint32Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readUint32(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Uint64 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {BigUint64Array} The read data.\n   */\n  readUint64Array(byteOffset, size) {\n    const bpe = BigUint64Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of BigUint64Array.BYTES_PER_ELEMENT (=8)\n    if (byteOffset % bpe === 0) {\n      data = new BigUint64Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new BigUint64Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readBigUint64(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Int32 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Int32Array} The read data.\n   */\n  readInt32Array(byteOffset, size) {\n    const bpe = Int32Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Int32Array.BYTES_PER_ELEMENT (=4)\n    if (byteOffset % bpe === 0) {\n      data = new Int32Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Int32Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readInt32(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Int64 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {BigInt64Array} The read data.\n   */\n  readInt64Array(byteOffset, size) {\n    const bpe = BigInt64Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of BigInt64Array.BYTES_PER_ELEMENT (=8)\n    if (byteOffset % bpe === 0) {\n      data = new BigInt64Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new BigInt64Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readBigInt64(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Float32 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Float32Array} The read data.\n   */\n  readFloat32Array(byteOffset, size) {\n    const bpe = Float32Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Float32Array.BYTES_PER_ELEMENT (=4)\n    if (byteOffset % bpe === 0) {\n      data = new Float32Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Float32Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readFloat32(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Float64 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Float64Array} The read data.\n   */\n  readFloat64Array(byteOffset, size) {\n    const bpe = Float64Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Float64Array.BYTES_PER_ELEMENT (=8)\n    if (byteOffset % bpe === 0) {\n      data = new Float64Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Float64Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readFloat64(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read data as an hexadecimal string of length 4 (no '0x' prefix).\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {string} The read data ('####').\n   */\n  readHex(byteOffset) {\n    // read and convert to hex string\n    const str = this.readUint16(byteOffset).toString(16);\n    // return padded\n    return '0000'.substring(0, 4 - str.length) + str.toUpperCase();\n  }\n\n} // class DataReader\n","import {\n  Tag,\n  getTransferSyntaxUIDTag,\n  isSequenceDelimitationItemTag,\n  isItemDelimitationItemTag,\n  isPixelDataTag\n} from './dicomTag';\nimport {\n  is32bitVLVR,\n  isCharSetStringVR,\n  transferSyntaxes,\n  transferSyntaxKeywords,\n  vrTypes,\n} from './dictionary';\nimport {DataElement} from './dataElement';\nimport {DataReader} from './dataReader';\nimport {logger} from '../utils/logger';\n\n/**\n * List of DICOM data elements indexed via a 8 character string formed from\n * the group and element numbers.\n *\n * @typedef {Object<string, DataElement>} DataElements\n */\n\n/**\n * Get the version of the library.\n *\n * @returns {string} The version of the library.\n */\nexport function getDwvVersion() {\n  return '0.34.0-beta.21';\n}\n\n/**\n * Check that an input buffer includes the DICOM prefix 'DICM'\n *   after the 128 bytes preamble.\n *\n * Ref: [DICOM File Meta]{@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part10/chapter_7.html#sect_7.1}.\n *\n * @param {ArrayBuffer} buffer The buffer to check.\n * @returns {boolean} True if the buffer includes the prefix.\n */\nexport function hasDicomPrefix(buffer) {\n  // check size: typed array constructor will throw RangeError if\n  // byteOffset + length * TypedArray.BYTES_PER_ELEMENT > buffer.byteLength\n  if (buffer.byteLength < 132) {\n    return false;\n  }\n  const prefixArray = new Uint8Array(buffer, 128, 4);\n  const stringReducer = function (previous, current) {\n    return previous += String.fromCharCode(current);\n  };\n  return prefixArray.reduce(stringReducer, '') === 'DICM';\n}\n\n// Zero-width space (u200B)\n// @ts-ignore\nconst ZWS = String.fromCharCode('u200B');\n\n/**\n * Clean string: remove zero-width space ending and trim.\n * Warning: no tests are done on the input, will fail if\n *   null or undefined or not string.\n * Exported for tests only.\n *\n * @param {string} inputStr The string to clean.\n * @returns {string} The cleaned string.\n */\nexport function cleanString(inputStr) {\n  let res = inputStr;\n  // get rid of ending zero-width space\n  const lastIndex = inputStr.length - 1;\n  if (inputStr[lastIndex] === ZWS) {\n    res = inputStr.substring(0, lastIndex);\n  }\n  // trim spaces\n  res = res.trim();\n  // return\n  return res;\n}\n\n/**\n * Get the utfLabel (used by the TextDecoder) from a character set term.\n *\n * References:\n * - DICOM [Value Encoding]{@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/chapter_6.html},\n * - DICOM [Specific Character Set]{@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.12.html#sect_C.12.1.1.2},\n * - [TextDecoder#Parameters]{@link https://developer.mozilla.org/en-US/docs/Web/API/TextDecoder/TextDecoder#Parameters}.\n *\n * @param {string} charSetTerm The DICOM character set.\n * @returns {string} The corresponding UTF label.\n */\nfunction getUtfLabel(charSetTerm) {\n  let label = 'utf-8';\n  if (charSetTerm === 'ISO_IR 100') {\n    label = 'iso-8859-1';\n  } else if (charSetTerm === 'ISO_IR 101') {\n    label = 'iso-8859-2';\n  } else if (charSetTerm === 'ISO_IR 109') {\n    label = 'iso-8859-3';\n  } else if (charSetTerm === 'ISO_IR 110') {\n    label = 'iso-8859-4';\n  } else if (charSetTerm === 'ISO_IR 144') {\n    label = 'iso-8859-5';\n  } else if (charSetTerm === 'ISO_IR 127') {\n    label = 'iso-8859-6';\n  } else if (charSetTerm === 'ISO_IR 126') {\n    label = 'iso-8859-7';\n  } else if (charSetTerm === 'ISO_IR 138') {\n    label = 'iso-8859-8';\n  } else if (charSetTerm === 'ISO_IR 148') {\n    label = 'iso-8859-9';\n  } else if (charSetTerm === 'ISO_IR 13') {\n    label = 'shift-jis';\n  } else if (charSetTerm === 'ISO_IR 166') {\n    label = 'iso-8859-11';\n  } else if (charSetTerm === 'ISO 2022 IR 87') {\n    label = 'iso-2022-jp';\n  } else if (charSetTerm === 'ISO 2022 IR 149') {\n    // not supported by TextDecoder when it says it should...\n    //label = \"iso-2022-kr\";\n  } else if (charSetTerm === 'ISO 2022 IR 58') {\n    // not supported by TextDecoder...\n    //label = \"iso-2022-cn\";\n  } else if (charSetTerm === 'ISO_IR 192') {\n    label = 'utf-8';\n  } else if (charSetTerm === 'GB18030') {\n    label = 'gb18030';\n  } else if (charSetTerm === 'GB2312') {\n    label = 'gb2312';\n  } else if (charSetTerm === 'GBK') {\n    label = 'chinese';\n  }\n  return label;\n}\n\n/**\n * Default text decoder.\n */\nclass DefaultTextDecoder {\n  /**\n   * Decode an input string buffer.\n   *\n   * @param {Uint8Array} buffer The buffer to decode.\n   * @returns {string} The decoded string.\n   */\n  decode(buffer) {\n    let result = '';\n    for (let i = 0, leni = buffer.length; i < leni; ++i) {\n      result += String.fromCharCode(buffer[i]);\n    }\n    return result;\n  }\n}\n\n/**\n * Get patient orientation label in the reverse direction.\n *\n * @param {string} ori Patient Orientation value.\n * @returns {string} Reverse Orientation Label.\n */\nexport function getReverseOrientation(ori) {\n  if (!ori) {\n    return null;\n  }\n  // reverse labels\n  const rlabels = {\n    L: 'R',\n    R: 'L',\n    A: 'P',\n    P: 'A',\n    H: 'F',\n    F: 'H'\n  };\n\n  let rori = '';\n  for (let n = 0; n < ori.length; n++) {\n    const o = ori.substring(n, n + 1);\n    const r = rlabels[o];\n    if (r) {\n      rori += r;\n    }\n  }\n  // return\n  return rori;\n}\n\n/**\n * Tell if a given syntax is an implicit one (element with no VR).\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if an implicit syntax.\n */\nexport function isImplicitTransferSyntax(syntax) {\n  return syntax === transferSyntaxKeywords.ImplicitVRLittleEndian;\n}\n\n/**\n * Tell if a given syntax is a big endian syntax.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a big endian syntax.\n */\nexport function isBigEndianTransferSyntax(syntax) {\n  return syntax === transferSyntaxKeywords.ExplicitVRBigEndian;\n}\n\n/**\n * Tell if a given syntax is a JPEG baseline one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a jpeg baseline syntax.\n */\nexport function isJpegBaselineTransferSyntax(syntax) {\n  return syntax === transferSyntaxKeywords.JPEGBaseline8Bit ||\n    syntax === transferSyntaxKeywords.JPEGExtended12Bit;\n}\n\n/**\n * Tell if a given syntax is a JPEG Lossless one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a jpeg lossless syntax.\n */\nexport function isJpegLosslessTransferSyntax(syntax) {\n  return syntax === transferSyntaxKeywords.JPEGLossless ||\n    syntax === transferSyntaxKeywords.JPEGLosslessSV1;\n}\n\n/**\n * Tell if a given syntax is a JPEG 2000 one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a jpeg 2000 syntax.\n */\nexport function isJpeg2000TransferSyntax(syntax) {\n  return syntax.match(/1.2.840.10008.1.2.4.9/) !== null;\n}\n\n/**\n * Tell if a given syntax is a RLE (Run-length encoding) one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a RLE syntax.\n */\nfunction isRleTransferSyntax(syntax) {\n  return syntax === transferSyntaxKeywords.RLELossless;\n}\n\n/**\n * Tell if a given syntax needs decompression.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {string|undefined} The name of the decompression algorithm.\n */\nexport function getSyntaxDecompressionName(syntax) {\n  let algo;\n  if (isJpeg2000TransferSyntax(syntax)) {\n    algo = 'jpeg2000';\n  } else if (isJpegBaselineTransferSyntax(syntax)) {\n    algo = 'jpeg-baseline';\n  } else if (isJpegLosslessTransferSyntax(syntax)) {\n    algo = 'jpeg-lossless';\n  } else if (isRleTransferSyntax(syntax)) {\n    algo = 'rle';\n  }\n  return algo;\n}\n\n/**\n * Tell if a given syntax is supported for reading.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a supported syntax.\n */\nfunction isReadSupportedTransferSyntax(syntax) {\n  return (syntax === transferSyntaxKeywords.ImplicitVRLittleEndian ||\n    syntax === transferSyntaxKeywords.ExplicitVRLittleEndian ||\n    syntax === transferSyntaxKeywords.ExplicitVRBigEndian ||\n    isJpegBaselineTransferSyntax(syntax) ||\n    isJpegLosslessTransferSyntax(syntax) ||\n    isJpeg2000TransferSyntax(syntax) ||\n    isRleTransferSyntax(syntax));\n}\n\n/**\n * Get a transfer syntax name from its UID.\n *\n * @param {string} syntax The transfer syntax UID value.\n * @returns {string} The transfer syntax name.\n */\nexport function getTransferSyntaxName(syntax) {\n  let name = 'Unknown';\n  if (typeof transferSyntaxes[syntax] !== 'undefined') {\n    name = transferSyntaxes[syntax];\n  }\n  return name;\n}\n\n/**\n * Guess the transfer syntax from the first data element.\n *\n * See {@link https://github.com/ivmartel/dwv/issues/188}\n *   (Allow to load DICOM with no DICM preamble) for more details.\n *\n * @param {DataElement} firstDataElement The first data element\n *   of the DICOM header.\n * @returns {DataElement} The transfer syntax data element.\n */\nfunction guessTransferSyntax(firstDataElement) {\n  const oEightGroupBigEndian = '0800';\n  const oEightGroupLittleEndian = '0008';\n  // check that group is 0008\n  const group = firstDataElement.tag.getGroup();\n  if (group !== oEightGroupBigEndian &&\n    group !== oEightGroupLittleEndian) {\n    throw new Error(\n      'Not a valid DICOM file (no magic DICM word found' +\n        ' and first element not in 0008 group)'\n    );\n  }\n  // reasonable assumption: 2 uppercase characters => explicit vr\n  const vr = firstDataElement.vr;\n  const vr0 = vr.charCodeAt(0);\n  const vr1 = vr.charCodeAt(1);\n  const implicit = (vr0 >= 65 && vr0 <= 90 && vr1 >= 65 && vr1 <= 90)\n    ? false : true;\n  // guess transfer syntax\n  let syntax = null;\n  if (group === oEightGroupLittleEndian) {\n    if (implicit) {\n      syntax = transferSyntaxKeywords.ImplicitVRLittleEndian;\n    } else {\n      syntax = transferSyntaxKeywords.ExplicitVRLittleEndian;\n    }\n  } else {\n    if (implicit) {\n      // ImplicitVRBigEndian: impossible\n      throw new Error(\n        'Not a valid DICOM file (no magic DICM word found' +\n        'and implicit VR big endian detected)'\n      );\n    } else {\n      syntax = transferSyntaxKeywords.ExplicitVRBigEndian;\n    }\n  }\n  // set transfer syntax data element\n  const dataElement = new DataElement('UI');\n  dataElement.tag = getTransferSyntaxUIDTag();\n  dataElement.value = [syntax];\n  dataElement.vl = dataElement.value[0].length;\n  dataElement.startOffset = firstDataElement.startOffset;\n  dataElement.endOffset = dataElement.startOffset + dataElement.vl;\n\n  return dataElement;\n}\n\n/**\n * Get the appropriate TypedArray in function of arguments.\n *\n * @param {number} bitsAllocated The number of bites used to store\n *   the data: [8, 16, 32].\n * @param {number} pixelRepresentation The pixel representation,\n *   0:unsigned;1:signed.\n * @param {number} size The size of the new array.\n * @returns {Uint8Array|Int8Array|Uint16Array|Int16Array|Uint32Array|Int32Array}\n *   The good typed array.\n */\nexport function getTypedArray(bitsAllocated, pixelRepresentation, size) {\n  let res = null;\n  try {\n    if (bitsAllocated === 1 || bitsAllocated === 8) {\n      if (pixelRepresentation === 0) {\n        res = new Uint8Array(size);\n      } else {\n        res = new Int8Array(size);\n      }\n    } else if (bitsAllocated === 16) {\n      if (pixelRepresentation === 0) {\n        res = new Uint16Array(size);\n      } else {\n        res = new Int16Array(size);\n      }\n    } else if (bitsAllocated === 32) {\n      if (pixelRepresentation === 0) {\n        res = new Uint32Array(size);\n      } else {\n        res = new Int32Array(size);\n      }\n    }\n  } catch (error) {\n    if (error instanceof RangeError) {\n      const powerOf2 = Math.floor(Math.log(size) / Math.log(2));\n      logger.error('Cannot allocate array of size: ' +\n        size + ' (>2^' + powerOf2 + ').');\n    }\n  }\n  return res;\n}\n\n/**\n * Get the number of bytes occupied by a data element prefix,\n *   (without its value).\n *\n * WARNING: this is valid for tags with a VR, if not sure use\n *   the 'isTagWithVR' function first.\n *\n * Reference:\n * - [Data Element explicit]{@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/chapter_7.html#table_7.1-1},\n * - [Data Element implicit]{@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_7.5.2.html#table_7.5-1}.\n *\n * ```\n * | Tag | VR  | VL | Value |\n * | 4   | 2   | 2  | X     | -> regular explicit: 8 + X\n * | 4   | 2+2 | 4  | X     | -> 32bit VL: 12 + X\n *\n * | Tag | VL | Value |\n * | 4   | 4  | X     | -> implicit (32bit VL): 8 + X\n *\n * | Tag | Len | Value |\n * | 4   | 4   | X     | -> item: 8 + X\n * ```\n *\n * @param {string} vr The Value Representation of the element.\n * @param {boolean} isImplicit Does the data use implicit VR?\n * @returns {number} The size of the element prefix.\n */\nexport function getDataElementPrefixByteSize(vr, isImplicit) {\n  return isImplicit ? 8 : is32bitVLVR(vr) ? 12 : 8;\n}\n\n/**\n * Is the input VR a known VR.\n *\n * @param {string} vr The vr to test.\n * @returns {boolean} True if known.\n */\nfunction isKnownVR(vr) {\n  const extraVrTypes = ['NONE', 'ox', 'xx', 'xs'];\n  const knownTypes = Object.keys(vrTypes).concat(extraVrTypes);\n  return knownTypes.includes(vr);\n}\n\n/**\n * Small list of used tag keys.\n */\nconst TagKeys = {\n  TransferSyntax: '00020010',\n  SpecificCharacterSet: '00080005',\n  NumberOfFrames: '00280008',\n  BitsAllocated: '00280100',\n  PixelRepresentation: '00280103',\n  PixelData: '7FE00010'\n};\n\n/**\n * DicomParser class.\n *\n * @example\n * // XMLHttpRequest onload callback\n * const onload = function (event) {\n *   // setup the dicom parser\n *   const dicomParser = new dwv.DicomParser();\n *   // parse the buffer\n *   dicomParser.parse(event.target.response);\n *   // get the dicom tags\n *   const tags = dicomParser.getDicomElements();\n *   // display the modality\n *   const div = document.getElementById('dwv');\n *   div.appendChild(document.createTextNode(\n *     'Modality: ' + tags['00080060'].value[0]\n *   ));\n * };\n * // DICOM file request\n * const request = new XMLHttpRequest();\n * const url = 'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm';\n * request.open('GET', url);\n * request.responseType = 'arraybuffer';\n * request.onload = onload;\n * request.send();\n */\nexport class DicomParser {\n\n  /**\n   * The list of DICOM elements.\n   *\n   * @type {DataElements}\n   */\n  #dataElements = {};\n\n  /**\n   * Default character set (optional).\n   *\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * Default text decoder.\n   *\n   * @type {DefaultTextDecoder}\n   */\n  #defaultTextDecoder = new DefaultTextDecoder();\n\n  /**\n   * Special text decoder.\n   *\n   * @type {DefaultTextDecoder|TextDecoder}\n   */\n  #textDecoder = this.#defaultTextDecoder;\n\n  /**\n   * Decode an input string buffer using the default text decoder.\n   *\n   * @param {Uint8Array} buffer The buffer to decode.\n   * @returns {string} The decoded string.\n   */\n  #decodeString(buffer) {\n    return this.#defaultTextDecoder.decode(buffer);\n  }\n\n  /**\n   * Decode an input string buffer using the 'special' text decoder.\n   *\n   * @param {Uint8Array} buffer The buffer to decode.\n   * @returns {string} The decoded string.\n   */\n  #decodeSpecialString(buffer) {\n    return this.#textDecoder.decode(buffer);\n  }\n\n  /**\n   * Get the default character set.\n   *\n   * @returns {string} The default character set.\n   */\n  getDefaultCharacterSet() {\n    return this.#defaultCharacterSet;\n  }\n\n  /**\n   * Set the default character set.\n   *\n   * @param {string} characterSet The input character set.\n   */\n  setDefaultCharacterSet(characterSet) {\n    this.#defaultCharacterSet = characterSet;\n  }\n\n  /**\n   * Set the text decoder character set.\n   *\n   * @param {string} characterSet The input character set.\n   */\n  setDecoderCharacterSet(characterSet) {\n    /**\n     * The text decoder.\n     *\n     * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/API/TextDecoder}.\n     *\n     * @external TextDecoder\n     */\n    this.#textDecoder = new TextDecoder(characterSet);\n  }\n\n  // not using type DataElements since the typedef is not exported with the API\n\n  /**\n   * Get the DICOM data elements.\n   *\n   * @returns {Object<string, DataElement>} The data elements.\n   */\n  getDicomElements() {\n    return this.#dataElements;\n  }\n\n  /**\n   * Read a DICOM tag.\n   *\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} offset The offset where to start to read.\n   * @returns {object} An object containing the tag and the end offset.\n   */\n  #readTag(reader, offset) {\n    // group\n    const group = reader.readHex(offset);\n    offset += Uint16Array.BYTES_PER_ELEMENT;\n    // element\n    const element = reader.readHex(offset);\n    offset += Uint16Array.BYTES_PER_ELEMENT;\n    // return\n    return {\n      tag: new Tag(group, element),\n      endOffset: offset\n    };\n  }\n\n  /**\n   * Read an item data element.\n   *\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} offset The offset where to start to read.\n   * @param {boolean} implicit Is the DICOM VR implicit?\n   * @returns {object} The item data as a list of data elements.\n   */\n  #readItemDataElement(reader, offset, implicit) {\n    const itemData = {};\n\n    // read the first item\n    let item = this.#readDataElement(reader, offset, implicit);\n    offset = item.endOffset;\n\n    // exit if it is a sequence delimitation item\n    if (isSequenceDelimitationItemTag(item.tag)) {\n      return {\n        data: itemData,\n        endOffset: item.endOffset,\n        isSeqDelim: true\n      };\n    }\n\n    // store item (mainly to keep vl)\n    itemData[item.tag.getKey()] = {\n      tag: item.tag,\n      vr: 'NONE',\n      vl: item.vl,\n      undefinedLength: item.undefinedLength\n    };\n\n    if (!item.undefinedLength) {\n      // explicit VR item: read until the end offset\n      const endOffset = offset;\n      offset -= item.vl;\n      while (offset < endOffset) {\n        item = this.#readDataElement(reader, offset, implicit);\n        offset = item.endOffset;\n        itemData[item.tag.getKey()] = item;\n      }\n    } else {\n      // implicit VR item: read until the item delimitation item\n      let isItemDelim = false;\n      while (!isItemDelim) {\n        item = this.#readDataElement(reader, offset, implicit);\n        offset = item.endOffset;\n        isItemDelim = isItemDelimitationItemTag(item.tag);\n        if (!isItemDelim) {\n          itemData[item.tag.getKey()] = item;\n        }\n      }\n    }\n\n    return {\n      data: itemData,\n      endOffset: offset,\n      isSeqDelim: false\n    };\n  }\n\n  /**\n   * Read the pixel item data element.\n   * Ref: [Single frame fragments]{@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_A.4.html#table_A.4-1}.\n   *\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} offset The offset where to start to read.\n   * @param {boolean} implicit Is the DICOM VR implicit?\n   * @returns {object} The item data as an array of data elements.\n   */\n  #readPixelItemDataElement(\n    reader, offset, implicit) {\n    const itemData = [];\n\n    // first item: basic offset table\n    let item = this.#readDataElement(reader, offset, implicit);\n    const offsetTableVl = item.vl;\n    offset = item.endOffset;\n\n    // read until the sequence delimitation item\n    let isSeqDelim = false;\n    while (!isSeqDelim) {\n      item = this.#readDataElement(reader, offset, implicit);\n      offset = item.endOffset;\n      isSeqDelim = isSequenceDelimitationItemTag(item.tag);\n      if (!isSeqDelim) {\n        // force pixel item vr to OB\n        item.vr = 'OB';\n        itemData.push(item);\n      }\n    }\n\n    return {\n      data: itemData,\n      endOffset: offset,\n      offsetTableVl: offsetTableVl\n    };\n  }\n\n  /**\n   * Read a DICOM data element.\n   *\n   * Reference: [DICOM VRs]{@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_6.2.html#table_6.2-1}.\n   *\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} offset The offset where to start to read.\n   * @param {boolean} implicit Is the DICOM VR implicit?\n   * @returns {DataElement} The data element.\n   */\n  #readDataElement(reader, offset, implicit) {\n    // Tag: group, element\n    const readTagRes = this.#readTag(reader, offset);\n    const tag = readTagRes.tag;\n    offset = readTagRes.endOffset;\n\n    // Value Representation (VR)\n    let vr = null;\n    let is32bitVL = false;\n    if (tag.isWithVR()) {\n      // implicit VR\n      if (implicit) {\n        vr = tag.getVrFromDictionary();\n        if (typeof vr === 'undefined') {\n          vr = 'UN';\n        }\n        is32bitVL = true;\n      } else {\n        vr = this.#decodeString(reader.readUint8Array(offset, 2));\n        offset += 2 * Uint8Array.BYTES_PER_ELEMENT;\n        is32bitVL = is32bitVLVR(vr);\n        // reserved 2 bytes\n        if (is32bitVL) {\n          offset += 2 * Uint8Array.BYTES_PER_ELEMENT;\n        }\n      }\n    } else {\n      vr = 'NONE';\n      is32bitVL = true;\n    }\n\n    // check vr\n    if (!isKnownVR(vr)) {\n      logger.warn('Unknown VR: ' + vr +\n        ' (for tag ' + tag.getKey() + '), treating as \\'UN\\'');\n      vr = 'UN';\n    }\n\n    // Value Length (VL)\n    let vl = 0;\n    if (is32bitVL) {\n      vl = reader.readUint32(offset);\n      offset += Uint32Array.BYTES_PER_ELEMENT;\n    } else {\n      vl = reader.readUint16(offset);\n      offset += Uint16Array.BYTES_PER_ELEMENT;\n    }\n\n    // check the value of VL\n    let undefinedLength = false;\n    if (vl === 0xffffffff) {\n      undefinedLength = true;\n      vl = 0;\n    }\n\n    // treat private tag with unknown VR and zero VL as a sequence (see #799)\n    if (tag.isPrivate() && vr === 'UN' && vl === 0) {\n      vr = 'SQ';\n    }\n\n    let startOffset = offset;\n    let endOffset = startOffset + vl;\n\n    // read sequence elements\n    let data;\n    if (isPixelDataTag(tag) && undefinedLength) {\n      // pixel data sequence (implicit)\n      const pixItemData =\n        this.#readPixelItemDataElement(reader, offset, implicit);\n      offset = pixItemData.endOffset;\n      startOffset += pixItemData.offsetTableVl;\n      data = pixItemData.data;\n      endOffset = offset;\n      vl = offset - startOffset;\n    } else if (vr === 'SQ') {\n      // sequence\n      data = [];\n      let itemData;\n      if (!undefinedLength) {\n        if (vl !== 0) {\n          // explicit VR sequence: read until the end offset\n          const sqEndOffset = offset + vl;\n          while (offset < sqEndOffset) {\n            itemData = this.#readItemDataElement(reader, offset, implicit);\n            data.push(itemData.data);\n            offset = itemData.endOffset;\n          }\n          endOffset = offset;\n          vl = offset - startOffset;\n        }\n      } else {\n        // implicit VR sequence: read until the sequence delimitation item\n        let isSeqDelim = false;\n        while (!isSeqDelim) {\n          itemData = this.#readItemDataElement(reader, offset, implicit);\n          isSeqDelim = itemData.isSeqDelim;\n          offset = itemData.endOffset;\n          // do not store the delimitation item\n          if (!isSeqDelim) {\n            data.push(itemData.data);\n          }\n        }\n        endOffset = offset;\n        vl = offset - startOffset;\n      }\n    }\n\n    // return\n    const element = new DataElement(vr);\n    element.tag = tag;\n    element.vl = vl;\n    element.startOffset = startOffset;\n    element.endOffset = endOffset;\n    // only set if true (only for sequences and items)\n    if (undefinedLength) {\n      element.undefinedLength = undefinedLength;\n    }\n    if (data) {\n      element.items = data;\n    }\n    return element;\n  }\n\n  /**\n   * Interpret the data of an element.\n   *\n   * @param {DataElement} element The data element.\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} [pixelRepresentation] PixelRepresentation 0->unsigned,\n   *   1->signed (needed for pixel data or VR=xs).\n   * @param {number} [bitsAllocated] Bits allocated (needed for pixel data).\n   * @returns {object} The interpreted data.\n   */\n  #interpretElement(\n    element, reader, pixelRepresentation, bitsAllocated) {\n\n    const tag = element.tag;\n    const vl = element.vl;\n    const vr = element.vr;\n    const offset = element.startOffset;\n\n    // data\n    let data = null;\n    const vrType = vrTypes[vr];\n    if (isPixelDataTag(tag)) {\n      if (element.undefinedLength) {\n        // implicit pixel data sequence\n        data = [];\n        for (let j = 0; j < element.items.length; ++j) {\n          data.push(this.#interpretElement(\n            element.items[j], reader,\n            pixelRepresentation, bitsAllocated));\n        }\n        // remove non parsed items\n        delete element.items;\n      } else {\n        // check bits allocated and VR\n        // https://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_A.2.html\n        if (bitsAllocated > 8 && vr === 'OB') {\n          logger.warn(\n            'Reading DICOM pixel data with bitsAllocated>8 and OB VR' +\n            ', treating as OW'\n          );\n          element.vr = 'OW';\n        }\n        // read\n        data = [];\n        if (bitsAllocated === 1) {\n          data.push(reader.readBinaryArray(offset, vl));\n        } else if (bitsAllocated === 8) {\n          if (pixelRepresentation === 0) {\n            data.push(reader.readUint8Array(offset, vl));\n          } else {\n            data.push(reader.readInt8Array(offset, vl));\n          }\n        } else if (bitsAllocated === 16) {\n          if (pixelRepresentation === 0) {\n            data.push(reader.readUint16Array(offset, vl));\n          } else {\n            data.push(reader.readInt16Array(offset, vl));\n          }\n        } else {\n          throw new Error('Unsupported bits allocated: ' + bitsAllocated);\n        }\n      }\n    } else if (typeof vrType !== 'undefined') {\n      if (vrType === 'Uint8') {\n        data = reader.readUint8Array(offset, vl);\n      } else if (vrType === 'Uint16') {\n        data = reader.readUint16Array(offset, vl);\n        // keep as binary for 'O*' VR\n        if (vr[0] !== 'O') {\n          data = Array.from(data);\n        }\n      } else if (vrType === 'Uint32') {\n        data = reader.readUint32Array(offset, vl);\n        // keep as binary for 'O*' VR\n        if (vr[0] !== 'O') {\n          data = Array.from(data);\n        }\n      } else if (vrType === 'Uint64') {\n        data = reader.readUint64Array(offset, vl);\n      } else if (vrType === 'Int16') {\n        data = Array.from(reader.readInt16Array(offset, vl));\n      } else if (vrType === 'Int32') {\n        data = Array.from(reader.readInt32Array(offset, vl));\n      } else if (vrType === 'Int64') {\n        data = reader.readInt64Array(offset, vl);\n      } else if (vrType === 'Float32') {\n        data = Array.from(reader.readFloat32Array(offset, vl));\n      } else if (vrType === 'Float64') {\n        data = Array.from(reader.readFloat64Array(offset, vl));\n      } else if (vrType === 'string') {\n        const stream = reader.readUint8Array(offset, vl);\n        if (isCharSetStringVR(vr)) {\n          data = this.#decodeSpecialString(stream);\n        } else {\n          data = this.#decodeString(stream);\n        }\n        data = cleanString(data).split('\\\\');\n      } else {\n        throw new Error('Unknown VR type: ' + vrType);\n      }\n    } else if (vr === 'xx') {\n      // US or OW\n      data = Array.from(reader.readUint16Array(offset, vl));\n    } else if (vr === 'ox') {\n      // OB or OW\n      if (bitsAllocated === 8) {\n        if (pixelRepresentation === 0) {\n          data = Array.from(reader.readUint8Array(offset, vl));\n        } else {\n          data = Array.from(reader.readInt8Array(offset, vl));\n        }\n      } else {\n        if (pixelRepresentation === 0) {\n          data = Array.from(reader.readUint16Array(offset, vl));\n        } else {\n          data = Array.from(reader.readInt16Array(offset, vl));\n        }\n      }\n    } else if (vr === 'xs') {\n      // (US or SS) or (US or SS or OW)\n      if (pixelRepresentation === 0) {\n        data = Array.from(reader.readUint16Array(offset, vl));\n      } else {\n        data = Array.from(reader.readInt16Array(offset, vl));\n      }\n    } else if (vr === 'AT') {\n      // attribute\n      const raw = reader.readUint16Array(offset, vl);\n      data = [];\n      for (let i = 0, leni = raw.length; i < leni; i += 2) {\n        const stri = raw[i].toString(16);\n        const stri1 = raw[i + 1].toString(16);\n        let str = '(';\n        str += '0000'.substring(0, 4 - stri.length) + stri.toUpperCase();\n        str += ',';\n        str += '0000'.substring(0, 4 - stri1.length) + stri1.toUpperCase();\n        str += ')';\n        data.push(str);\n      }\n    } else if (vr === 'SQ') {\n      // sequence\n      data = [];\n      for (let k = 0; k < element.items.length; ++k) {\n        const item = element.items[k];\n        const itemData = {};\n        const keys = Object.keys(item);\n        let sqBitsAllocated = bitsAllocated;\n        let sqPixelRepresentation = pixelRepresentation;\n        for (let l = 0; l < keys.length; ++l) {\n          // check if local bitsAllocated\n          // (inside item loop to get interpreted value)\n          let dataElement = item[TagKeys.BitsAllocated];\n          if (typeof dataElement !== 'undefined' &&\n            typeof dataElement.value !== 'undefined') {\n            sqBitsAllocated = dataElement.value[0];\n          }\n          // check if local pixelRepresentation\n          // (inside item loop to get interpreted value)\n          dataElement = item[TagKeys.PixelRepresentation];\n          if (typeof dataElement !== 'undefined' &&\n            typeof dataElement.value !== 'undefined') {\n            sqPixelRepresentation = dataElement.value[0];\n          }\n          const subElement = item[keys[l]];\n          subElement.value = this.#interpretElement(\n            subElement, reader,\n            sqPixelRepresentation, sqBitsAllocated);\n          delete subElement.tag;\n          delete subElement.vl;\n          delete subElement.startOffset;\n          delete subElement.endOffset;\n          itemData[keys[l]] = subElement;\n        }\n        data.push(itemData);\n      }\n      // remove non parsed elements\n      delete element.items;\n    } else if (vr === 'NONE') {\n      // no VR -> no data\n      data = [];\n    } else {\n      logger.warn('Unknown VR: ' + vr +\n        ' (for tag ' + element.tag.getKey() + ')');\n      // empty data...\n      data = [];\n    }\n\n    return data;\n  }\n\n  /**\n   * Interpret the data of a list of elements.\n   *\n   * @param {DataElements} elements A list of data elements.\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} pixelRepresentation PixelRepresentation 0->unsigned,\n   *   1->signed.\n   * @param {number} bitsAllocated Bits allocated.\n   */\n  #interpret(\n    elements, reader,\n    pixelRepresentation, bitsAllocated) {\n\n    const keys = Object.keys(elements);\n    for (let i = 0; i < keys.length; ++i) {\n      const element = elements[keys[i]];\n      if (typeof element.value === 'undefined') {\n        element.value = this.#interpretElement(\n          element, reader, pixelRepresentation, bitsAllocated);\n      }\n      // delete interpretation specific properties\n      delete element.tag;\n      delete element.vl;\n      delete element.startOffset;\n      delete element.endOffset;\n    }\n  }\n\n  /**\n   * Parse the complete DICOM file (given as input to the class).\n   * Fills in the member object 'dataElements'.\n   *\n   * @param {ArrayBuffer} buffer The input array buffer.\n   */\n  parse(buffer) {\n    let offset = 0;\n    let syntax = '';\n    let dataElement = null;\n    // default readers\n    const metaReader = new DataReader(buffer);\n    let dataReader = new DataReader(buffer);\n\n    // 128 -> 132: magic word\n    offset = 128;\n    const magicword = this.#decodeString(metaReader.readUint8Array(offset, 4));\n    offset += 4 * Uint8Array.BYTES_PER_ELEMENT;\n    if (magicword === 'DICM') {\n      // 0002, 0000: FileMetaInformationGroupLength (vr='UL')\n      dataElement = this.#readDataElement(metaReader, offset, false);\n      dataElement.value = this.#interpretElement(dataElement, metaReader);\n      // increment offset\n      offset = dataElement.endOffset;\n      // store the data element\n      this.#dataElements[dataElement.tag.getKey()] = dataElement;\n      // get meta length\n      const metaLength = dataElement.value[0];\n\n      // meta elements\n      const metaEnd = offset + metaLength;\n      while (offset < metaEnd) {\n        // get the data element\n        dataElement = this.#readDataElement(metaReader, offset, false);\n        offset = dataElement.endOffset;\n        // store the data element\n        this.#dataElements[dataElement.tag.getKey()] = dataElement;\n      }\n\n      // check the TransferSyntaxUID (has to be there!)\n      dataElement = this.#dataElements[TagKeys.TransferSyntax];\n      if (typeof dataElement === 'undefined') {\n        throw new Error('Not a valid DICOM file (no TransferSyntaxUID found)');\n      }\n      dataElement.value = this.#interpretElement(dataElement, metaReader);\n      syntax = dataElement.value[0];\n\n    } else {\n      logger.warn('No DICM prefix, trying to guess tansfer syntax.');\n      // read first element\n      dataElement = this.#readDataElement(dataReader, 0, false);\n      // guess transfer syntax\n      const tsElement = guessTransferSyntax(dataElement);\n      // store\n      this.#dataElements[tsElement.tag.getKey()] = tsElement;\n      syntax = tsElement.value[0];\n      // reset offset\n      offset = 0;\n    }\n\n    // check transfer syntax support\n    if (!isReadSupportedTransferSyntax(syntax)) {\n      throw new Error('Unsupported DICOM transfer syntax: \\'' + syntax +\n        '\\' (' + getTransferSyntaxName(syntax) + ')');\n    }\n\n    // set implicit flag\n    let implicit = false;\n    if (isImplicitTransferSyntax(syntax)) {\n      implicit = true;\n    }\n\n    // Big Endian\n    if (isBigEndianTransferSyntax(syntax)) {\n      dataReader = new DataReader(buffer, false);\n    }\n\n    // DICOM data elements\n    while (offset < buffer.byteLength) {\n      // get the data element\n      dataElement = this.#readDataElement(dataReader, offset, implicit);\n      // increment offset\n      offset = dataElement.endOffset;\n      // store the data element\n      const key = dataElement.tag.getKey();\n      if (typeof this.#dataElements[key] === 'undefined') {\n        this.#dataElements[key] = dataElement;\n      } else {\n        logger.warn('Not saving duplicate tag: ' + key);\n      }\n    }\n\n    // safety checks...\n    if (isNaN(offset)) {\n      throw new Error('Problem while parsing, bad offset');\n    }\n    if (buffer.byteLength !== offset) {\n      logger.warn('Did not reach the end of the buffer: ' +\n        offset + ' != ' + buffer.byteLength);\n    }\n\n    //-------------------------------------------------\n    // values needed for data interpretation\n\n    // pixel specific\n    let pixelRepresentation = 0;\n    let bitsAllocated = 16;\n    if (typeof this.#dataElements[TagKeys.PixelData] !== 'undefined') {\n      // PixelRepresentation 0->unsigned, 1->signed\n      dataElement = this.#dataElements[TagKeys.PixelRepresentation];\n      if (typeof dataElement !== 'undefined') {\n        dataElement.value = this.#interpretElement(dataElement, dataReader);\n        pixelRepresentation = dataElement.value[0];\n      } else {\n        logger.warn(\n          'Reading DICOM pixel data with default pixelRepresentation.');\n      }\n\n      // BitsAllocated\n      dataElement = this.#dataElements[TagKeys.BitsAllocated];\n      if (typeof dataElement !== 'undefined') {\n        dataElement.value = this.#interpretElement(dataElement, dataReader);\n        bitsAllocated = dataElement.value[0];\n      } else {\n        logger.warn('Reading DICOM pixel data with default bitsAllocated.');\n      }\n    }\n\n    // default character set\n    if (typeof this.#defaultCharacterSet !== 'undefined') {\n      this.setDecoderCharacterSet(this.#defaultCharacterSet);\n    }\n\n    // SpecificCharacterSet\n    dataElement = this.#dataElements[TagKeys.SpecificCharacterSet];\n    if (typeof dataElement !== 'undefined') {\n      dataElement.value = this.#interpretElement(dataElement, dataReader);\n      let charSetTerm;\n      if (dataElement.value.length === 1) {\n        charSetTerm = dataElement.value[0];\n      } else {\n        charSetTerm = dataElement.value[1];\n        logger.warn('Unsupported character set with code extensions: \\'' +\n          charSetTerm + '\\'.');\n      }\n      this.setDecoderCharacterSet(getUtfLabel(charSetTerm));\n    }\n\n    // interpret the dicom elements\n    this.#interpret(\n      this.#dataElements, dataReader,\n      pixelRepresentation, bitsAllocated\n    );\n\n    // handle fragmented pixel buffer\n    // Reference: http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_8.2.html\n    // (third note, \"Depending on the transfer syntax...\")\n    dataElement = this.#dataElements[TagKeys.PixelData];\n    if (typeof dataElement !== 'undefined') {\n      if (dataElement.undefinedLength) {\n        let numberOfFrames = 1;\n        if (typeof this.#dataElements[TagKeys.NumberOfFrames] !== 'undefined') {\n          numberOfFrames = Number(\n            this.#dataElements[TagKeys.NumberOfFrames].value[0]\n          );\n        }\n        const pixItems = dataElement.value;\n        if (pixItems.length > 1 && pixItems.length > numberOfFrames) {\n          // concatenate pixel data items\n          // concat does not work on typed arrays\n          //this.pixelBuffer = this.pixelBuffer.concat( dataElement.data );\n          // manual concat...\n          const nItemPerFrame = pixItems.length / numberOfFrames;\n          const newPixItems = [];\n          let index = 0;\n          for (let f = 0; f < numberOfFrames; ++f) {\n            index = f * nItemPerFrame;\n            // calculate the size of a frame\n            let size = 0;\n            for (let i = 0; i < nItemPerFrame; ++i) {\n              size += pixItems[index + i].length;\n            }\n            // create new buffer\n            const newBuffer = new pixItems[0].constructor(size);\n            // fill new buffer\n            let fragOffset = 0;\n            for (let j = 0; j < nItemPerFrame; ++j) {\n              newBuffer.set(pixItems[index + j], fragOffset);\n              fragOffset += pixItems[index + j].length;\n            }\n            newPixItems[f] = newBuffer;\n          }\n          // store as pixel data\n          dataElement.value = newPixItems;\n        }\n      }\n    }\n  }\n\n} // class DicomParser\n","import {logger} from './logger';\n\n/**\n * ListenerHandler class: handles add/removing and firing listeners.\n *\n * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget#example}.\n */\nexport class ListenerHandler {\n  /**\n   * Listeners.\n   *\n   * @type {object}\n   */\n  #listeners = {};\n\n  /**\n   * Add an event listener.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *    event type, will be called with the fired event.\n   */\n  add(type, callback) {\n    // create array if not present\n    if (typeof this.#listeners[type] === 'undefined') {\n      this.#listeners[type] = [];\n    }\n    // add callback to listeners array\n    this.#listeners[type].push(callback);\n  }\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  remove(type, callback) {\n    // check if the type is present\n    if (typeof this.#listeners[type] === 'undefined') {\n      return;\n    }\n    // remove from listeners array\n    let nFound = 0;\n    for (let i = 0; i < this.#listeners[type].length; ++i) {\n      if (this.#listeners[type][i] === callback) {\n        ++nFound;\n        this.#listeners[type].splice(i, 1);\n      }\n    }\n    if (nFound === 0) {\n      logger.debug('No callback found on remove listener for type ' + type);\n    }\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  fireEvent = (event) => {\n    // check if they are listeners for the event type\n    if (typeof this.#listeners[event.type] === 'undefined') {\n      return;\n    }\n    // fire events from a copy of the listeners array\n    // to avoid interference from possible add/remove\n    const stack = this.#listeners[event.type].slice();\n    for (let i = 0; i < stack.length; ++i) {\n      stack[i](event);\n    }\n  };\n}\n","import {Index} from '../math/index';\nimport {Point2D} from '../math/point';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\nimport {Point} from '../math/point';\nimport {Matrix33} from '../math/matrix';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get an simple iterator for a given range for a one component data.\n *\n * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols}.\n *\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start The start of the range (included).\n * @param {number} end The end of the range (excluded).\n * @param {number} [increment] The increment between indicies (default=1).\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function simpleRange(dataAccessor, start, end, increment) {\n  if (typeof increment === 'undefined') {\n    increment = 1;\n  }\n  let nextIndex = start;\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        const result = {\n          value: dataAccessor(nextIndex),\n          done: false,\n          index: nextIndex\n        };\n        nextIndex += increment;\n        return result;\n      }\n      return {\n        done: true,\n        index: end\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range for a one component data.\n *\n * Using 'maxIter' and not an 'end' index since it fails in some edge cases\n * (for ex coronal2, ie zxy).\n *\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start Zero-based index at which to start the iteration.\n * @param {number} maxIter The maximum number of iterations.\n * @param {number} increment Increment between indicies.\n * @param {number} blockMaxIter Number of applied increment after which\n *   blockIncrement is applied.\n * @param {number} blockIncrement Increment after blockMaxIter is reached,\n *   the value is from block start to the next block start.\n * @param {boolean} reverse1 If true, loop from end to start.\n *   WARN: don't forget to set the value of start as the last index!\n * @param {boolean} reverse2 If true, loop from block end to block start.\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function range(dataAccessor, start, maxIter, increment,\n  blockMaxIter, blockIncrement, reverse1, reverse2) {\n  if (typeof reverse1 === 'undefined') {\n    reverse1 = false;\n  }\n  if (typeof reverse2 === 'undefined') {\n    reverse2 = false;\n  }\n\n  // first index of the iteration\n  let nextIndex = start;\n  // adapt first index and increments to reverse values\n  if (reverse1) {\n    blockIncrement *= -1;\n    if (reverse2) {\n      // start at end of line\n      nextIndex -= (blockMaxIter - 1) * increment;\n    } else {\n      increment *= -1;\n    }\n  } else {\n    if (reverse2) {\n      // start at end of line\n      nextIndex += (blockMaxIter - 1) * increment;\n      increment *= -1;\n    }\n  }\n  const finalBlockIncrement = blockIncrement - blockMaxIter * increment;\n\n  // counters\n  let mainCount = 0;\n  let blockCount = 0;\n  // result\n  return {\n    next: function () {\n      if (mainCount < maxIter) {\n        const result = {\n          value: dataAccessor(nextIndex),\n          done: false,\n          index: nextIndex\n        };\n        nextIndex += increment;\n        ++mainCount;\n        ++blockCount;\n        if (blockCount === blockMaxIter) {\n          blockCount = 0;\n          nextIndex += finalBlockIncrement;\n        }\n        return result;\n      }\n      return {\n        done: true,\n        index: nextIndex\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range with bounds (for a one component data).\n *\n * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols}.\n *\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start The start of the range (included).\n * @param {number} end The end of the range (excluded).\n * @param {number} increment The increment between indicies.\n * @param {number} regionSize The size of the region to iterate through.\n * @param {number} regionOffset The offset between regions.\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function rangeRegion(\n  dataAccessor, start, end, increment, regionSize, regionOffset) {\n  let nextIndex = start;\n  let regionElementCount = 0;\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        const result = {\n          value: dataAccessor(nextIndex),\n          done: false,\n          index: nextIndex\n        };\n        regionElementCount += 1;\n        nextIndex += increment;\n        if (regionElementCount === regionSize) {\n          regionElementCount = 0;\n          nextIndex += regionOffset;\n        }\n        return result;\n      }\n      return {\n        done: true,\n        index: end\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range with bounds (for a one component data).\n *\n * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols}.\n *\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start The start of the range (included).\n * @param {number} end The end of the range (excluded).\n * @param {number} increment The increment between indicies.\n * @param {number[][]} regions An array of regions: [off0, size, off1].\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function rangeRegions(\n  dataAccessor, start, end, increment, regions) {\n  let nextIndex = start;\n  let regionCount = 0;\n  let regionElementCount = 0;\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        const result = {\n          value: dataAccessor(nextIndex),\n          done: false,\n          index: nextIndex\n        };\n        regionElementCount += 1;\n        nextIndex += increment;\n        if (regionElementCount === regions[regionCount][1]) {\n          regionElementCount = 0;\n          // off1 of current group\n          nextIndex += regions[regionCount][2];\n          regionCount += 1;\n          // off0 of next group\n          if (regionCount < regions.length) {\n            nextIndex += regions[regionCount][0];\n          }\n        }\n        return result;\n      }\n      return {\n        done: true,\n        index: end\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range for a 3 components data.\n *\n * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols}.\n *\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start The start of the range (included).\n * @param {number} end The end of the range (excluded).\n *   (end - start) needs to be a multiple of 3...\n * @param {number} increment The increment between indicies (default=1).\n * @param {boolean} isPlanar A flag to know if the data is planar\n *   (RRRR...GGGG...BBBB...) or not (RGBRGBRGBRGB...), defaults to false.\n * @returns {object} A 3 components iterator folowing the iterator and iterable\n *   protocol, the value is an array of size 3 with each component.\n */\nexport function simpleRange3d(\n  dataAccessor, start, end, increment, isPlanar) {\n  if (typeof increment === 'undefined') {\n    increment = 1;\n  }\n  if (typeof isPlanar === 'undefined') {\n    isPlanar = false;\n  }\n  let nextIndex = start;\n  let componentIncrement = 1;\n  if (isPlanar) {\n    componentIncrement = (end - start) / 3;\n  } else {\n    increment *= 3;\n  }\n  let nextIndex1 = nextIndex + componentIncrement;\n  let nextIndex2 = nextIndex + 2 * componentIncrement;\n\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        const result = {\n          value: [\n            dataAccessor(nextIndex),\n            dataAccessor(nextIndex1),\n            dataAccessor(nextIndex2)\n          ],\n          done: false,\n          index: [nextIndex, nextIndex1, nextIndex2]\n        };\n        nextIndex += increment;\n        nextIndex1 += increment;\n        nextIndex2 += increment;\n        return result;\n      }\n      return {\n        done: true,\n        index: [end]\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range for a 3 components data.\n *\n * Using 'maxIter' and not an 'end' index since it fails in some edge cases\n * (for ex coronal2, ie zxy).\n *\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start Zero-based index at which to start the iteration.\n * @param {number} maxIter The maximum number of iterations.\n * @param {number} increment Increment between indicies.\n * @param {number} blockMaxIter Number of applied increment after which\n *   blockIncrement is applied.\n * @param {number} blockIncrement Increment after blockMaxIter is reached,\n *   the value is from block start to the next block start.\n * @param {boolean} reverse1 If true, loop from end to start.\n *   WARN: don't forget to set the value of start as the last index!\n * @param {boolean} reverse2 If true, loop from block end to block start.\n * @param {boolean} isPlanar A flag to know if the data is planar\n *   (RRRR...GGGG...BBBB...) or not (RGBRGBRGBRGB...), defaults to false.\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function range3d(dataAccessor, start, maxIter, increment,\n  blockMaxIter, blockIncrement, reverse1, reverse2, isPlanar) {\n  const iters = [];\n  if (isPlanar) {\n    iters.push(range(\n      dataAccessor, start, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n    iters.push(range(\n      dataAccessor, start + maxIter * increment, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n    iters.push(range(\n      dataAccessor, start + 2 * maxIter * increment, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n  } else {\n    increment *= 3;\n    blockIncrement *= 3;\n    iters.push(range(\n      dataAccessor, start, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n    iters.push(range(\n      dataAccessor, start + 1, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n    iters.push(range(\n      dataAccessor, start + 2, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n  }\n\n  // result\n  return {\n    next: function () {\n      const r0 = iters[0].next();\n      const r1 = iters[1].next();\n      const r2 = iters[2].next();\n      if (!r0.done) {\n        return {\n          value: [\n            r0.value,\n            r1.value,\n            r2.value\n          ],\n          done: false,\n          index: [\n            r0.index,\n            r1.index,\n            r2.index\n          ]\n        };\n      }\n      return {\n        done: true,\n        index: r2.index\n      };\n    }\n  };\n}\n\n/**\n * Get a list of values for a given iterator.\n *\n * @param {object} iterator The iterator to use to loop through data.\n * @returns {Array} The list of values.\n */\nexport function getIteratorValues(iterator) {\n  const values = [];\n  let ival = iterator.next();\n  while (!ival.done) {\n    values.push(ival.value);\n    ival = iterator.next();\n  }\n  return values;\n}\n\n/**\n * Get a slice index iterator.\n *\n * @param {Image} image The image to parse.\n * @param {Index} position The current position.\n * @param {boolean} isRescaled Flag for rescaled values (default false).\n * @param {Matrix33} viewOrientation The view orientation.\n * @returns {object} The slice iterator.\n */\nexport function getSliceIterator(\n  image, position, isRescaled, viewOrientation) {\n  const size = image.getGeometry().getSize();\n  // zero-ify non direction index\n  let dirMax2Index = 2;\n  if (viewOrientation && typeof viewOrientation !== 'undefined') {\n    dirMax2Index = viewOrientation.getColAbsMax(2).index;\n  }\n  const posValues = position.getValues();\n  // keep the main direction and any other than 3D\n  const indexFilter = function (element, index) {\n    return (index === dirMax2Index || index > 2) ? element : 0;\n  };\n  const posStart = new Index(posValues.map(indexFilter));\n  let start = size.indexToOffset(posStart);\n\n  // default to non rescaled data\n  if (typeof isRescaled === 'undefined') {\n    isRescaled = false;\n  }\n  let dataAccessor = null;\n  if (isRescaled) {\n    dataAccessor = function (offset) {\n      return image.getRescaledValueAtOffset(offset);\n    };\n  } else {\n    dataAccessor = function (offset) {\n      return image.getValueAtOffset(offset);\n    };\n  }\n\n  const ncols = size.get(0);\n  const nrows = size.get(1);\n  const nslices = size.get(2);\n  let sliceSize = size.getDimSize(2);\n\n  const ncomp = image.getNumberOfComponents();\n  const isPlanar = image.getPlanarConfiguration() === 1;\n  const getRange = function (\n    dataAccessor, start, maxIter, increment,\n    blockMaxIter, blockIncrement, reverse1, reverse2) {\n    if (ncomp === 1) {\n      return range(dataAccessor, start, maxIter, increment,\n        blockMaxIter, blockIncrement, reverse1, reverse2);\n    } else if (ncomp === 3) {\n      return range3d(dataAccessor, 3 * start, maxIter, increment,\n        blockMaxIter, blockIncrement, reverse1, reverse2, isPlanar);\n    }\n  };\n\n  let rangeObj = null;\n  if (viewOrientation && typeof viewOrientation !== 'undefined') {\n    const dirMax0 = viewOrientation.getColAbsMax(0);\n    const dirMax2 = viewOrientation.getColAbsMax(2);\n\n    // default reverse\n    const reverse1 = false;\n    const reverse2 = false;\n\n    let maxIter = null;\n    if (dirMax2.index === 2) {\n      // axial\n      maxIter = ncols * nrows;\n      if (dirMax0.index === 0) {\n        // xyz\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, 1, ncols, ncols, reverse1, reverse2);\n      } else {\n        // yxz\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, ncols, nrows, 1, reverse1, reverse2);\n      }\n    } else if (dirMax2.index === 0) {\n      // sagittal\n      maxIter = nslices * nrows;\n      if (dirMax0.index === 1) {\n        // yzx\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, ncols, nrows, sliceSize, reverse1, reverse2);\n      } else {\n        // zyx\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, sliceSize, nslices, ncols, reverse1, reverse2);\n      }\n    } else if (dirMax2.index === 1) {\n      // coronal\n      maxIter = nslices * ncols;\n      if (dirMax0.index === 0) {\n        // xzy\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, 1, ncols, sliceSize, reverse1, reverse2);\n      } else {\n        // zxy\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, sliceSize, nslices, 1, reverse1, reverse2);\n      }\n    } else {\n      throw new Error('Unknown direction: ' + dirMax2.index);\n    }\n  } else {\n    if (image.getNumberOfComponents() === 1) {\n      rangeObj = simpleRange(dataAccessor, start, start + sliceSize);\n    } else if (image.getNumberOfComponents() === 3) {\n      // 3 times bigger...\n      start *= 3;\n      sliceSize *= 3;\n      rangeObj = simpleRange3d(\n        dataAccessor, start, start + sliceSize, 1, isPlanar);\n    } else {\n      throw new Error('Unsupported number of components: ' +\n        image.getNumberOfComponents());\n    }\n  }\n\n  return rangeObj;\n}\n\n/**\n * Get a slice index iterator for a rectangular region.\n *\n * @param {Image} image The image to parse.\n * @param {Index} index The current position.\n * @param {boolean} isRescaled Flag for rescaled values (default false).\n * @param {Point2D} min The minimum position (optional).\n * @param {Point2D} max The maximum position (optional).\n * @returns {object} The slice iterator.\n */\nexport function getRegionSliceIterator(\n  image, index, isRescaled, min, max) {\n  if (image.getNumberOfComponents() !== 1) {\n    throw new Error('Unsupported number of components for region iterator: ' +\n      image.getNumberOfComponents());\n  }\n\n  // default to non rescaled data\n  if (typeof isRescaled === 'undefined') {\n    isRescaled = false;\n  }\n  let dataAccessor = null;\n  if (isRescaled) {\n    dataAccessor = function (offset) {\n      return image.getRescaledValueAtOffset(offset);\n    };\n  } else {\n    dataAccessor = function (offset) {\n      return image.getValueAtOffset(offset);\n    };\n  }\n\n  const size = image.getGeometry().getSize();\n  if (typeof min === 'undefined') {\n    min = new Point2D(0, 0);\n  }\n  if (typeof max === 'undefined') {\n    max = new Point2D(\n      size.get(0) - 1,\n      size.get(1)\n    );\n  }\n  // position to pixel for max: extra X is ok, remove extra Y\n  const startOffset = size.indexToOffset(index.getWithNew2D(\n    min.getX(), min.getY()\n  ));\n  const endOffset = size.indexToOffset(index.getWithNew2D(\n    max.getX(), max.getY() - 1\n  ));\n\n  // minimum 1 column\n  const rangeNumberOfColumns = Math.max(1, max.getX() - min.getX());\n  const rowIncrement = size.get(0) - rangeNumberOfColumns;\n\n  return rangeRegion(\n    dataAccessor, startOffset, endOffset + 1,\n    1, rangeNumberOfColumns, rowIncrement);\n}\n\n/**\n * Get a slice index iterator for a rectangular region.\n *\n * @param {Image} image The image to parse.\n * @param {Index} index The current position.\n * @param {boolean} isRescaled Flag for rescaled values (default false).\n * @param {number[][][]} regions An array of [x, y] pairs (min, max).\n * @returns {object|undefined} The slice iterator.\n */\nexport function getVariableRegionSliceIterator(\n  image, index, isRescaled, regions) {\n  if (image.getNumberOfComponents() !== 1) {\n    throw new Error('Unsupported number of components for region iterator: ' +\n      image.getNumberOfComponents());\n  }\n\n  // default to non rescaled data\n  if (typeof isRescaled === 'undefined') {\n    isRescaled = false;\n  }\n  let dataAccessor = null;\n  if (isRescaled) {\n    dataAccessor = function (offset) {\n      return image.getRescaledValueAtOffset(offset);\n    };\n  } else {\n    dataAccessor = function (offset) {\n      return image.getValueAtOffset(offset);\n    };\n  }\n\n  const size = image.getGeometry().getSize();\n\n  const offsetRegions = [];\n  let region;\n  let min = null;\n  let max = null;\n  let regionIndex = null;\n  for (let i = 0; i < regions.length; ++i) {\n    region = regions[i];\n    const width = region[1][0] - region[0][0];\n    if (width !== 0) {\n      regionIndex = i;\n      if (!min) {\n        min = region[0];\n      }\n      offsetRegions.push([\n        region[0][0],\n        width,\n        size.get(0) - region[1][0]\n      ]);\n    }\n  }\n  if (regionIndex !== null) {\n    max = regions[regionIndex][1];\n  }\n\n  // exit if no offsets\n  if (offsetRegions.length === 0) {\n    return undefined;\n  }\n\n  const startOffset = size.indexToOffset(index.getWithNew2D(\n    min[0], min[1]\n  ));\n  const endOffset = size.indexToOffset(index.getWithNew2D(\n    max[0], max[1]\n  ));\n\n  return rangeRegions(\n    dataAccessor, startOffset, endOffset + 1,\n    1, offsetRegions);\n}\n\n/**\n * Get a colour iterator. The input array defines the colours and\n * their start index.\n *\n * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols}.\n *\n * @param {Array} colours An array of {index, colour} pairs.\n * @param {number} end The end of the range (excluded).\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function colourRange(colours, end) {\n  let nextIndex = 0;\n  let nextColourIndex = 0;\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        if (nextColourIndex + 1 < colours.length &&\n          nextIndex >= colours[nextColourIndex + 1].index) {\n          ++nextColourIndex;\n        }\n        const result = {\n          value: colours[nextColourIndex].colour,\n          done: false,\n          index: nextIndex\n        };\n        ++nextIndex;\n        return result;\n      }\n      return {\n        done: true,\n        index: end\n      };\n    }\n  };\n}\n","/**\n * Rescale Slope and Intercept.\n */\nexport class RescaleSlopeAndIntercept {\n\n  /**\n   * The slope.\n   *\n   * @type {number}\n   */\n  #slope;\n\n  /**\n   * The intercept.\n   *\n   * @type {number}\n   */\n  #intercept;\n\n  /**\n   * @param {number} slope The slope of the RSI.\n   * @param {number} intercept The intercept of the RSI.\n   */\n  constructor(slope, intercept) {\n    /*// Check the rescale slope.\n      if(typeof(slope) === 'undefined') {\n          slope = 1;\n      }\n      // Check the rescale intercept.\n      if(typeof(intercept) === 'undefined') {\n          intercept = 0;\n      }*/\n    this.#slope = slope;\n    this.#intercept = intercept;\n  }\n\n  /**\n   * Get the slope of the RSI.\n   *\n   * @returns {number} The slope of the RSI.\n   */\n  getSlope() {\n    return this.#slope;\n  }\n\n  /**\n   * Get the intercept of the RSI.\n   *\n   * @returns {number} The intercept of the RSI.\n   */\n  getIntercept() {\n    return this.#intercept;\n  }\n\n  /**\n   * Apply the RSI on an input value.\n   *\n   * @param {number} value The input value.\n   * @returns {number} The value to rescale.\n   */\n  apply(value) {\n    return value * this.#slope + this.#intercept;\n  }\n\n  /**\n   * Check for RSI equality.\n   *\n   * @param {RescaleSlopeAndIntercept} rhs The other RSI to compare to.\n   * @returns {boolean} True if both RSI are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      typeof rhs !== 'undefined' &&\n      this.getSlope() === rhs.getSlope() &&\n      this.getIntercept() === rhs.getIntercept();\n  }\n\n  /**\n   * Is this RSI an ID RSI.\n   *\n   * @returns {boolean} True if the RSI has a slope of 1 and no intercept.\n   */\n  isID() {\n    return (this.getSlope() === 1 && this.getIntercept() === 0);\n  }\n\n} // class RescaleSlopeAndIntercept\n","import {Index} from '../math/index';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Matrix33} from '../math/matrix';\nimport {Scalar2D} from '../math/scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * Immutable Size class.\n * Warning: the input array is NOT cloned, modifying it will\n *  modify the index values.\n */\nexport class Size {\n\n  /**\n   * The size values.\n   *\n   * @type {number[]}\n   */\n  #values;\n\n  /**\n   * @param {number[]} values The size values.\n   */\n  constructor(values) {\n    if (!values || typeof values === 'undefined') {\n      throw new Error('Cannot create size with no values.');\n    }\n    if (values.length === 0) {\n      throw new Error('Cannot create size with empty values.');\n    }\n    const valueCheck = function (val) {\n      return !isNaN(val) && val !== 0;\n    };\n    if (!values.every(valueCheck)) {\n      throw new Error('Cannot create size with non number or zero values.');\n    }\n    this.#values = values;\n  }\n\n  /**\n   * Get the size value at the given array index.\n   *\n   * @param {number} i The index to get.\n   * @returns {number} The value.\n   */\n  get(i) {\n    return this.#values[i];\n  }\n\n  /**\n   * Get the length of the index.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return this.#values.length;\n  }\n\n  /**\n   * Get a string representation of the size.\n   *\n   * @returns {string} The Size as a string.\n   */\n  toString() {\n    return '(' + this.#values.toString() + ')';\n  }\n\n  /**\n   * Get the values of this index.\n   *\n   * @returns {number[]} The array of values.\n   */\n  getValues() {\n    return this.#values.slice();\n  }\n\n  /**\n   * Check if a dimension exists and has more than one element.\n   *\n   * @param {number} dimension The dimension to check.\n   * @returns {boolean} True if the size is more than one.\n   */\n  moreThanOne(dimension) {\n    return this.length() >= dimension + 1 && this.get(dimension) !== 1;\n  }\n\n  /**\n   * Check if the associated data is scrollable in 3D.\n   *\n   * @param {Matrix33} [viewOrientation] The orientation matrix.\n   * @returns {boolean} True if scrollable.\n   */\n  canScroll3D(viewOrientation) {\n    let dimension = 2;\n    if (typeof viewOrientation !== 'undefined') {\n      dimension = viewOrientation.getThirdColMajorDirection();\n    }\n    return this.moreThanOne(dimension);\n  }\n\n  /**\n   * Check if the associated data is scrollable: either in 3D or\n   * in other directions.\n   *\n   * @param {Matrix33} viewOrientation The orientation matrix.\n   * @returns {boolean} True if scrollable.\n   */\n  canScroll(viewOrientation) {\n    let canScroll = this.canScroll3D(viewOrientation);\n    // check possible other dimensions\n    for (let i = 3; i < this.length(); ++i) {\n      canScroll = canScroll || this.moreThanOne(i);\n    }\n    return canScroll;\n  }\n\n  /**\n   * Get the size of a given dimension.\n   *\n   * @param {number} dimension The dimension.\n   * @param {number} [start] Optional start dimension to start counting from.\n   * @returns {number} The size.\n   */\n  getDimSize(dimension, start) {\n    if (dimension > this.length()) {\n      return null;\n    }\n    if (typeof start === 'undefined') {\n      start = 0;\n    } else {\n      if (start < 0 || start > dimension) {\n        throw new Error('Invalid start value for getDimSize');\n      }\n    }\n    let size = 1;\n    for (let i = start; i < dimension; ++i) {\n      size *= this.get(i);\n    }\n    return size;\n  }\n\n  /**\n   * Get the total size.\n   *\n   * @param {number} [start] Optional start dimension to base the offset on.\n   * @returns {number} The total size.\n   */\n  getTotalSize(start) {\n    return this.getDimSize(this.length(), start);\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Size} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    // check input\n    if (!rhs) {\n      return false;\n    }\n    // check length\n    const length = this.length();\n    if (length !== rhs.length()) {\n      return false;\n    }\n    // check values\n    for (let i = 0; i < length; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Check that an index is within bounds.\n   *\n   * @param {Index} index The index to check.\n   * @param {number[]} dirs Optional list of directions to check.\n   * @returns {boolean} True if the given coordinates are within bounds.\n   */\n  isInBounds(index, dirs) {\n    // check input\n    if (!index) {\n      return false;\n    }\n    // check length\n    const length = this.length();\n    if (length !== index.length()) {\n      return false;\n    }\n    // create dirs if not there\n    if (typeof dirs === 'undefined') {\n      dirs = [];\n      for (let j = 0; j < length; ++j) {\n        dirs.push(j);\n      }\n    } else {\n      for (let k = 0; k < length; ++k) {\n        if (dirs[k] > length - 1) {\n          throw new Error('Wrong input dir value: ' + dirs[k]);\n        }\n      }\n    }\n    // check values is 0 <= v < size\n    const inBound = function (value, size) {\n      return value >= 0 && value < size;\n    };\n    // check\n    for (let i = 0; i < dirs.length; ++i) {\n      if (!inBound(index.get(dirs[i]), this.get(dirs[i]))) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Convert an index to an offset in memory.\n   *\n   * @param {Index} index The index to convert.\n   * @param {number} [start] Optional start dimension to base the offset on.\n   * @returns {number} The offset.\n   */\n  indexToOffset(index, start) {\n    // TODO check for equality\n    if (index.length() < this.length()) {\n      throw new Error('Incompatible index and size length');\n    }\n    if (typeof start === 'undefined') {\n      start = 0;\n    } else {\n      if (start < 0 || start > this.length() - 1) {\n        throw new Error('Invalid start value for indexToOffset');\n      }\n    }\n    let offset = 0;\n    for (let i = start; i < this.length(); ++i) {\n      offset += index.get(i) * this.getDimSize(i, start);\n    }\n    return offset;\n  }\n\n  /**\n   * Convert an offset in memory to an index.\n   *\n   * @param {number} offset The offset to convert.\n   * @returns {Index} The index.\n   */\n  offsetToIndex(offset) {\n    const values = new Array(this.length());\n    let off = offset;\n    let dimSize = 0;\n    for (let i = this.length() - 1; i > 0; --i) {\n      dimSize = this.getDimSize(i);\n      values[i] = Math.floor(off / dimSize);\n      off = off - values[i] * dimSize;\n    }\n    values[0] = off;\n    return new Index(values);\n  }\n\n  /**\n   * Get the 2D base of this size.\n   *\n   * @returns {Scalar2D} The 2D base [0,1] as {x,y}.\n   */\n  get2D() {\n    return {\n      x: this.get(0),\n      y: this.get(1)\n    };\n  }\n\n} // Size class\n","/**\n * Statistics storage class.\n * 'simple' statistics do not include median, p25 nor p75.\n */\nexport class Statistics {\n  /**\n   * Minimum.\n   *\n   * @type {number}\n   */\n  min;\n  /**\n   * Maximum.\n   *\n   * @type {number}\n   */\n  max;\n  /**\n   * Mean.\n   *\n   * @type {number}\n   */\n  mean;\n  /**\n   * Standard deviation.\n   *\n   * @type {number}\n   */\n  stdDev;\n  /**\n   * Median.\n   *\n   * @type {number|undefined}\n   */\n  median;\n  /**\n   * 25th percentile.\n   *\n   * @type {number|undefined}\n   */\n  p25;\n  /**\n   * 75th percentile.\n   *\n   * @type {number|undefined}\n   */\n  p75;\n\n  /**\n   * @param {number} min The minimum.\n   * @param {number} max The maxnimum.\n   * @param {number} mean The mean.\n   * @param {number} stdDev The standard deviation.\n   */\n  constructor(min, max, mean, stdDev) {\n    this.min = min;\n    this.max = max;\n    this.mean = mean;\n    this.stdDev = stdDev;\n  }\n}\n\n/**\n * Get statistics on an input array of number.\n * Note: could use {@link https://github.com/tmcw/simple-statistics}.\n *\n * @param {number[]} values The array of values to extract stats from.\n * @param {string[]} flags A list of stat value names to calculate.\n * @returns {Statistics} A statistics object.\n */\nexport function getStats(values, flags) {\n  if (includesFullStatsFlags(flags)) {\n    return getFullStats(values);\n  } else {\n    return getBasicStats(values);\n  }\n}\n\n/**\n * Does the input flag list contain a full stat element?\n *\n * @param {string[]} flags A list of stat values to calculate.\n * @returns {boolean} True if one of the flags is a full stat flag.\n */\nfunction includesFullStatsFlags(flags) {\n  return typeof flags !== 'undefined' &&\n    flags !== null &&\n    (flags.includes('median') ||\n    flags.includes('p25') ||\n    flags.includes('p75'));\n}\n\n/**\n * Get simple stats: minimum, maximum, mean and standard deviation\n * of an array of values.\n *\n * @param {number[]} values The array of values to extract stats from.\n * @returns {Statistics} Simple statistics (no median, p25 nor p75).\n */\nexport function getBasicStats(values) {\n  let min = values[0];\n  let max = min;\n  let sum = 0;\n  let sumSqr = 0;\n  let val = 0;\n  const length = values.length;\n  for (let i = 0; i < length; ++i) {\n    val = values[i];\n    if (val < min) {\n      min = val;\n    } else if (val > max) {\n      max = val;\n    }\n    sum += val;\n    sumSqr += val * val;\n  }\n\n  const mean = sum / length;\n  // see http://en.wikipedia.org/wiki/Algorithms_for_calculating_variance\n  let variance = sumSqr / length - mean * mean;\n  if (variance < 0) {\n    variance = 0;\n  }\n  const stdDev = Math.sqrt(variance);\n\n  return new Statistics(min, max, mean, stdDev);\n}\n\n/**\n * Get full stats: minimum, maximum, mean, standard deviation, median, 25%\n * and 75% percentile of an array of values.\n *\n * @param {number[]} values The array of values to extract stats from.\n * @returns {Statistics} Complete statistics (includes median, p25 and p75).\n */\nfunction getFullStats(values) {\n  // get basic stats\n  const stats = getBasicStats(values);\n\n  // sort array... can get slow...\n  values.sort(function (a, b) {\n    return a - b;\n  });\n\n  stats.median = getPercentile(values, 0.5);\n  stats.p25 = getPercentile(values, 0.25);\n  stats.p75 = getPercentile(values, 0.75);\n\n  return stats;\n}\n\n/**\n * Get an arrays' percentile. Uses linear interpolation for percentiles\n *   that lie between data points.\n * See: {@link https://en.wikipedia.org/wiki/Percentile} (second variant interpolation).\n *\n * @param {number[]} values The sorted array of values.\n * @param {number} ratio The percentile ratio [0-1].\n * @returns {number} The percentile.\n */\nfunction getPercentile(values, ratio) {\n  // check input\n  if (values.length === 0) {\n    throw new Error('Empty array provided for percentile calculation.');\n  }\n  if (ratio < 0 || ratio > 1) {\n    throw new Error(\n      'Invalid ratio provided for percentile calculation: ' + ratio);\n  }\n  // return min for ratio=0 amd max for ratio=1\n  if (ratio === 0) {\n    return values[0];\n  } else if (ratio === 1) {\n    return values[values.length - 1];\n  }\n  // general case: interpolate between indices if needed\n  const i = (values.length - 1) * ratio;\n  const i0 = Math.floor(i);\n  const v0 = values[i0];\n  const v1 = values[i0 + 1];\n  return v0 + (v1 - v0) * (i - i0);\n}\n\n/**\n * Unique ID generator.\n *\n * See {@link http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript}\n *   and this {@link http://stackoverflow.com/a/13403498 answer}.\n *\n * @returns {string} A unique ID.\n */\nexport function guid() {\n  return Math.random().toString(36).substring(2, 15);\n}\n\n/**\n * Number range.\n */\nexport class NumberRange {\n  /**\n   * @type {number}\n   */\n  min;\n  /**\n   * @type {number}\n   */\n  max;\n  /**\n   * @param {number} min The minimum.\n   * @param {number} max The maximum.\n   */\n  constructor(min, max) {\n    this.min = min;\n    this.max = max;\n  }\n}\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {Scalar2D} from '../math/scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * Immutable Spacing class.\n * Warning: the input array is NOT cloned, modifying it will\n *  modify the index values.\n */\nexport class Spacing {\n\n  /**\n   * The spacing values.\n   *\n   * @type {number[]}\n   */\n  #values;\n\n  /**\n   * @param {number[]} values The spacing values.\n   */\n  constructor(values) {\n    if (!values || typeof values === 'undefined') {\n      throw new Error('Cannot create spacing with no values.');\n    }\n    if (values.length === 0) {\n      throw new Error('Cannot create spacing with empty values.');\n    }\n    const valueCheck = function (val) {\n      return !isNaN(val) && val !== 0;\n    };\n    if (!values.every(valueCheck)) {\n      throw new Error('Cannot create spacing with non number or zero values.');\n    }\n    this.#values = values;\n  }\n\n  /**\n   * Get the spacing value at the given array index.\n   *\n   * @param {number} i The index to get.\n   * @returns {number} The value.\n   */\n  get(i) {\n    return this.#values[i];\n  }\n\n  /**\n   * Get the length of the spacing.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return this.#values.length;\n  }\n\n  /**\n   * Get a string representation of the spacing.\n   *\n   * @returns {string} The spacing as a string.\n   */\n  toString() {\n    return '(' + this.#values.toString() + ')';\n  }\n\n  /**\n   * Get the values of this spacing.\n   *\n   * @returns {number[]} The array of values.\n   */\n  getValues() {\n    return this.#values.slice();\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Spacing} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    // check input\n    if (!rhs) {\n      return false;\n    }\n    // check length\n    const length = this.length();\n    if (length !== rhs.length()) {\n      return false;\n    }\n    // check values\n    for (let i = 0; i < length; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Get the 2D base of this size.\n   *\n   * @returns {Scalar2D} The 2D base [col,row] as {x,y}.\n   */\n  get2D() {\n    return {\n      x: this.get(0),\n      y: this.get(1)\n    };\n  }\n\n} // Spacing class\n","import {\n  getIdentityMat33,\n  REAL_WORLD_EPSILON\n} from '../math/matrix';\nimport {Point3D, Point} from '../math/point';\nimport {Vector3D} from '../math/vector';\nimport {Index} from '../math/index';\nimport {getBasicStats} from '../math/stats';\nimport {precisionRound} from '../utils/string';\nimport {logger} from '../utils/logger';\nimport {Size} from './size';\nimport {Spacing} from './spacing';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Matrix33} from '../math/matrix';\n/* eslint-enable no-unused-vars */\n\n/**\n * 2D/3D Geometry class.\n */\nexport class Geometry {\n\n  /**\n   * Array of origins.\n   *\n   * @type {Point3D[]}\n   */\n  #origins;\n\n  /**\n   * Data size.\n   *\n   * @type {Size}\n   */\n  #size;\n\n  /**\n   * Data spacing.\n   *\n   * @type {Spacing}\n   */\n  #spacing;\n\n  /**\n   * Local helper object for time points.\n   *\n   * @type {Object<string, Point3D[]>}\n   */\n  #timeOrigins = {};\n\n  /**\n   * Initial time index.\n   *\n   * @type {number}\n   */\n  #initialTime;\n\n  /**\n   * Data orientation.\n   *\n   * @type {Matrix33}\n   */\n  #orientation = getIdentityMat33();\n\n  /**\n   * Flag to know if new origins were added.\n   *\n   * @type {boolean}\n   */\n  #newOrigins = false;\n\n  /**\n   * @param {Point3D} origin The object origin (a 3D point).\n   * @param {Size} size The object size.\n   * @param {Spacing} spacing The object spacing.\n   * @param {Matrix33} [orientation] The object orientation (3*3 matrix,\n   *   default to 3*3 identity).\n   * @param {number} [time] Optional time index.\n   */\n  constructor(origin, size, spacing, orientation, time) {\n    this.#origins = [origin];\n    this.#size = size;\n    this.#spacing = spacing;\n    if (typeof time !== 'undefined') {\n      this.#initialTime = time;\n      this.#timeOrigins[time] = [origin];\n    }\n    // check input orientation\n    if (typeof orientation !== 'undefined') {\n      this.#orientation = orientation;\n    }\n  }\n\n  /**\n   * Get the time value that was passed at construction.\n   *\n   * @returns {number} The time value.\n   */\n  getInitialTime() {\n    return this.#initialTime;\n  }\n\n  /**\n   * Get the total number of slices.\n   * Can be different from what is stored in the size object\n   *  during a volume with time points creation process.\n   *\n   * @returns {number} The total count.\n   */\n  getCurrentTotalNumberOfSlices() {\n    const keys = Object.keys(this.#timeOrigins);\n    if (keys.length === 0) {\n      return this.#origins.length;\n    }\n    let count = 0;\n    for (let i = 0; i < keys.length; ++i) {\n      count += this.#timeOrigins[keys[i]].length;\n    }\n    return count;\n  }\n\n  /**\n   * Check if a time point has associated slices.\n   *\n   * @param {number} time The time point to check.\n   * @returns {boolean} True if slices are present.\n   */\n  hasSlicesAtTime(time) {\n    return typeof this.#timeOrigins[time] !== 'undefined';\n  }\n\n  /**\n   * Get the number of slices stored for time points preceding\n   * the input one.\n   *\n   * @param {number} time The time point to check.\n   * @returns {number|undefined} The count.\n   */\n  getCurrentNumberOfSlicesBeforeTime(time) {\n    const keys = Object.keys(this.#timeOrigins);\n    if (keys.length === 0) {\n      return undefined;\n    }\n    let count = 0;\n    for (let i = 0; i < keys.length; ++i) {\n      const key = keys[i];\n      if (parseInt(key, 10) === time) {\n        break;\n      }\n      count += this.#timeOrigins[key].length;\n    }\n    return count;\n  }\n\n  /**\n   * Get the object origin.\n   * This should be the lowest origin to ease calculations (?).\n   *\n   * @returns {Point3D} The object origin.\n   */\n  getOrigin() {\n    return this.#origins[0];\n  }\n\n  /**\n   * Get the object origins.\n   *\n   * @returns {Point3D[]} The object origins.\n   */\n  getOrigins() {\n    return this.#origins;\n  }\n\n  /**\n   * Check if a point is in the origin list.\n   *\n   * @param {Point3D} point3D The point to check.\n   * @param {number} tol The comparison tolerance\n   *   default to Number.EPSILON.\n   * @returns {boolean} True if in list.\n   */\n  includesOrigin(point3D, tol) {\n    for (let i = 0; i < this.#origins.length; ++i) {\n      if (this.#origins[i].isSimilar(point3D, tol)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the object size.\n   * Warning: the size comes as stored in DICOM, meaning that it could\n   * be oriented.\n   *\n   * @param {Matrix33} [viewOrientation] The view orientation (optional).\n   * @returns {Size} The object size.\n   */\n  getSize(viewOrientation) {\n    let res = this.#size;\n    if (viewOrientation && typeof viewOrientation !== 'undefined') {\n      let values = getOrientedArray3D(\n        [\n          this.#size.get(0),\n          this.#size.get(1),\n          this.#size.get(2)\n        ],\n        viewOrientation);\n      values = values.map(Math.abs);\n      res = new Size(values.concat(this.#size.getValues().slice(3)));\n    }\n    return res;\n  }\n\n  /**\n   * Calculate slice spacing from origins and replace current\n   *   if needed.\n   */\n  #updateSliceSpacing() {\n    const geoSliceSpacing = getSliceGeometrySpacing(this.#origins);\n    // update local if needed\n    if (typeof geoSliceSpacing !== 'undefined' &&\n      this.#spacing.get(2) !== geoSliceSpacing) {\n      logger.trace('Using geometric spacing ' + geoSliceSpacing +\n        ' instead of tag spacing ' + this.#spacing.get(2));\n      const values = this.#spacing.getValues();\n      values[2] = geoSliceSpacing;\n      this.#spacing = new Spacing(values);\n    }\n  }\n\n  /**\n   * Get the object spacing.\n   * Warning: the spacing comes as stored in DICOM, meaning that it could\n   * be oriented.\n   *\n   * @param {Matrix33} [viewOrientation] The view orientation (optional).\n   * @returns {Spacing} The object spacing.\n   */\n  getSpacing(viewOrientation) {\n    // update slice spacing after appendSlice\n    if (this.#newOrigins) {\n      this.#updateSliceSpacing();\n      this.#newOrigins = false;\n    }\n    let res = this.#spacing;\n    if (viewOrientation && typeof viewOrientation !== 'undefined') {\n      let orientedValues = getOrientedArray3D(\n        [\n          this.#spacing.get(0),\n          this.#spacing.get(1),\n          this.#spacing.get(2)\n        ],\n        viewOrientation);\n      orientedValues = orientedValues.map(Math.abs);\n      res = new Spacing(orientedValues);\n    }\n    return res;\n  }\n\n  /**\n   * Get the image spacing in real world.\n   *\n   * @returns {Spacing} The object spacing.\n   */\n  getRealSpacing() {\n    // asOneAndZeros to not change spacing values...\n    return this.getSpacing(\n      this.#orientation.getInverse().asOneAndZeros()\n    );\n  }\n\n  /**\n   * Get the object orientation.\n   *\n   * @returns {Matrix33} The object orientation.\n   */\n  getOrientation() {\n    return this.#orientation;\n  }\n\n  /**\n   * Get the slice position of a point in the current slice layout.\n   * Slice indices increase with decreasing origins (high index -> low origin),\n   * this simplified the handling of reconstruction since it means\n   * the displayed data is in the same 'direction' as the extracted data.\n   * As seen in the getOrigin method, the main origin is the lowest one.\n   * This implies that the index to world and reverse method do some flipping\n   * magic...\n   *\n   * @param {Point3D} point The point to evaluate.\n   * @param {number} time Optional time index.\n   * @returns {number} The slice index.\n   */\n  getSliceIndex(point, time) {\n    // cannot use this.worldToIndex(point).getK() since\n    // we cannot guaranty consecutive slices...\n\n    let localOrigins = this.#origins;\n    if (typeof time !== 'undefined') {\n      localOrigins = this.#timeOrigins[time];\n    }\n\n    // find the closest origin\n    const closestOriginIndex = point.getClosest(localOrigins);\n    const closestOrigin = localOrigins[closestOriginIndex];\n\n    // direction between the input point and the closest origin\n    const pointDir = point.minus(closestOrigin);\n\n    // use third orientation matrix column as plane normal vector\n    const normal = new Vector3D(\n      this.#orientation.get(0, 2),\n      this.#orientation.get(1, 2),\n      this.#orientation.get(2, 2)\n    );\n\n    // codirectional vectors: above slice index\n    // oposite vectors: below slice index\n    const isCodirectional = normal.isCodirectional(pointDir);\n    const sliceIndex = isCodirectional\n      ? closestOriginIndex + 1 : closestOriginIndex;\n\n    return sliceIndex;\n  }\n\n  /**\n   * Append an origin to the geometry.\n   *\n   * @param {Point3D} origin The origin to append.\n   * @param {number} index The index at which to append.\n   * @param {number} [time] Optional time index.\n   */\n  appendOrigin(origin, index, time) {\n    // equal callback\n    const equalToOrigin = function (element) {\n      return element.equals(origin);\n    };\n    if (typeof time !== 'undefined') {\n      // check if not already in list\n      const found = this.#timeOrigins[time].find(equalToOrigin);\n      if (typeof found !== 'undefined') {\n        throw new Error('Cannot append same time origin twice');\n      }\n      // add in origin array\n      this.#timeOrigins[time].splice(index, 0, origin);\n    }\n    if (typeof time === 'undefined' || time === this.#initialTime) {\n      // check if not already in list\n      const found = this.#origins.find(equalToOrigin);\n      if (typeof found !== 'undefined') {\n        throw new Error('Cannot append same origin twice');\n      }\n      // update flag\n      this.#newOrigins = true;\n      // add in origin array\n      this.#origins.splice(index, 0, origin);\n      // increment second dimension\n      const values = this.#size.getValues();\n      values[2] += 1;\n      this.#size = new Size(values);\n    }\n  }\n\n  /**\n   * Append a frame to the geometry.\n   *\n   * @param {Point3D} origin The origin to append.\n   * @param {number} time Optional time index.\n   */\n  appendFrame(origin, time) {\n    // add origin to list\n    this.#timeOrigins[time] = [origin];\n    // increment third dimension\n    const sizeValues = this.#size.getValues();\n    const spacingValues = this.#spacing.getValues();\n    if (sizeValues.length === 4) {\n      sizeValues[3] += 1;\n    } else {\n      sizeValues.push(2);\n      spacingValues.push(1);\n    }\n    this.#size = new Size(sizeValues);\n    this.#spacing = new Spacing(spacingValues);\n  }\n\n  /**\n   * Get a string representation of the geometry.\n   *\n   * @returns {string} The geometry as a string.\n   */\n  toString() {\n    return 'Origin: ' + this.getOrigin() +\n      ', Size: ' + this.getSize() +\n      ', Spacing: ' + this.getSpacing() +\n      ', Orientation: ' + this.getOrientation();\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Geometry} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getOrigin().equals(rhs.getOrigin()) &&\n      this.getSize().equals(rhs.getSize()) &&\n      this.getSpacing().equals(rhs.getSpacing());\n  }\n\n  /**\n   * Check that a point is within bounds.\n   *\n   * @param {Point} point The point to check.\n   * @returns {boolean} True if the given coordinates are within bounds.\n   */\n  isInBounds(point) {\n    return this.isIndexInBounds(this.worldToIndex(point));\n  }\n\n  /**\n   * Check that a index is within bounds.\n   *\n   * @param {Index} index The index to check.\n   * @param {number[]} [dirs] Optional list of directions to check.\n   * @returns {boolean} True if the given coordinates are within bounds.\n   */\n  isIndexInBounds(index, dirs) {\n    return this.getSize().isInBounds(index, dirs);\n  }\n\n  /**\n   * Convert an index into world coordinates.\n   *\n   * @param {Index} index The index to convert.\n   * @returns {Point} The corresponding point.\n   */\n  indexToWorld(index) {\n    // apply spacing\n    // (spacing is oriented, apply before orientation)\n    const spacing = this.getSpacing();\n    const orientedPoint3D = new Point3D(\n      index.get(0) * spacing.get(0),\n      index.get(1) * spacing.get(1),\n      index.get(2) * spacing.get(2)\n    );\n    // de-orient\n    const point3D = this.getOrientation().multiplyPoint3D(orientedPoint3D);\n    // keep >3d values\n    const values = index.getValues();\n    const origin = this.getOrigin();\n    values[0] = origin.getX() + point3D.getX();\n    values[1] = origin.getY() + point3D.getY();\n    values[2] = origin.getZ() + point3D.getZ();\n    // return point\n    return new Point(values);\n  }\n\n  /**\n   * Convert a 3D point into world coordinates.\n   *\n   * @param {Point3D} point The 3D point to convert.\n   * @returns {Point3D} The corresponding world 3D point.\n   */\n  pointToWorld(point) {\n    // apply spacing\n    // (spacing is oriented, apply before orientation)\n    const spacing = this.getSpacing();\n    const orientedPoint3D = new Point3D(\n      point.getX() * spacing.get(0),\n      point.getY() * spacing.get(1),\n      point.getZ() * spacing.get(2)\n    );\n    // de-orient\n    const point3D = this.getOrientation().multiplyPoint3D(orientedPoint3D);\n    // return point3D\n    const origin = this.getOrigin();\n    return new Point3D(\n      origin.getX() + point3D.getX(),\n      origin.getY() + point3D.getY(),\n      origin.getZ() + point3D.getZ()\n    );\n  }\n\n  /**\n   * Convert world coordinates into an index.\n   *\n   * @param {Point} point The point to convert.\n   * @returns {Index} The corresponding index.\n   */\n  worldToIndex(point) {\n    // compensate for origin\n    // (origin is not oriented, compensate before orientation)\n    // TODO: use slice origin...\n    const origin = this.getOrigin();\n    const point3D = new Point3D(\n      point.get(0) - origin.getX(),\n      point.get(1) - origin.getY(),\n      point.get(2) - origin.getZ()\n    );\n    // orient\n    const orientedPoint3D =\n      this.getOrientation().getInverse().multiplyPoint3D(point3D);\n    // keep >3d values\n    const values = point.getValues();\n    // apply spacing and round\n    const spacing = this.getSpacing();\n    values[0] = Math.round(orientedPoint3D.getX() / spacing.get(0));\n    values[1] = Math.round(orientedPoint3D.getY() / spacing.get(1));\n    values[2] = Math.round(orientedPoint3D.getZ() / spacing.get(2));\n\n    // return index\n    return new Index(values);\n  }\n\n  /**\n   * Convert world coordinates into an point.\n   *\n   * @param {Point} point The world point to convert.\n   * @returns {Point3D} The corresponding point.\n   */\n  worldToPoint(point) {\n    // compensate for origin\n    // (origin is not oriented, compensate before orientation)\n    const origin = this.getOrigin();\n    const point3D = new Point3D(\n      point.get(0) - origin.getX(),\n      point.get(1) - origin.getY(),\n      point.get(2) - origin.getZ()\n    );\n    // orient\n    const orientedPoint3D =\n      this.getOrientation().getInverse().multiplyPoint3D(point3D);\n    // keep >3d values\n    const values = point.getValues();\n    // apply spacing and round\n    const spacing = this.getSpacing();\n    values[0] = orientedPoint3D.getX() / spacing.get(0);\n    values[1] = orientedPoint3D.getY() / spacing.get(1);\n    values[2] = orientedPoint3D.getZ() / spacing.get(2);\n\n    // return index\n    return new Point3D(values[0], values[1], values[2]);\n  }\n\n} // class Geometry\n\n/**\n * Get the oriented values of an input 3D array.\n *\n * @param {number[]} array3D The 3D array.\n * @param {Matrix33} orientation The orientation 3D matrix.\n * @returns {number[]} The values reordered according to the orientation.\n */\nexport function getOrientedArray3D(array3D, orientation) {\n  // values = orientation * orientedValues\n  // -> inv(orientation) * values = orientedValues\n  return orientation.getInverse().multiplyArray3D(array3D);\n}\n\n/**\n * Get the raw values of an oriented input 3D array.\n *\n * @param {number[]} array3D The 3D array.\n * @param {Matrix33} orientation The orientation 3D matrix.\n * @returns {number[]} The values reordered to compensate the orientation.\n */\nexport function getDeOrientedArray3D(array3D, orientation) {\n  // values = orientation * orientedValues\n  return orientation.multiplyArray3D(array3D);\n}\n\n/**\n * Get the slice spacing from the difference in the Z directions\n * of input origins.\n *\n * @param {Point3D[]} origins An array of Point3D.\n * @returns {number|undefined} The spacing.\n */\nexport function getSliceGeometrySpacing(origins) {\n  // check origins\n  if (origins.length <= 1) {\n    return;\n  }\n\n  const spacings = [];\n  for (let i = 0; i < origins.length - 1; ++i) {\n    const origin1 = origins[i];\n    const origin2 = origins[i + 1];\n    const sliceSpacing = origin1.getDistance(origin2);\n    if (sliceSpacing === 0) {\n      throw new Error('Zero slice spacing ' +\n        origin1.toString() + ' ' + origin2.toString());\n    }\n    spacings.push(sliceSpacing);\n  }\n\n  // use rounded mean value as spacing\n  const stats = getBasicStats(spacings);\n  const spacing = precisionRound(stats.mean, 4);\n\n  // warn if non constant\n  if (stats.stdDev > REAL_WORLD_EPSILON) {\n    logger.warn('Varying slice spacing, value: ' + spacing +\n      ' (mean: ' + stats.mean +\n      ', min: ' + stats.min +\n      ', max: ' + stats.max +\n      ', stdDev: ' + stats.stdDev + ')');\n  }\n\n  return spacing;\n}\n","import {DataElement} from './dataElement';\n\n/**\n * Pad an input string with a '0' to form a 2 digit one.\n *\n * @param {string} str The string to pad.\n * @returns {string} The padded string.\n */\nfunction padZeroTwoDigit(str) {\n  return ('0' + str).slice(-2);\n}\n\n/**\n * Get a 'date' object with {year, monthIndex, day} ready for the\n *   Date constructor from a DICOM element with vr=DA.\n *\n * @param {DataElement} element The DICOM element with date information.\n * @returns {{year, monthIndex, day}|undefined} The 'date' object.\n */\nexport function getDate(element) {\n  if (typeof element === 'undefined') {\n    return undefined;\n  }\n  if (element.value.length !== 1) {\n    return undefined;\n  }\n  const daValue = element.value[0];\n  // Two possible formats:\n  // - standard 'YYYYMMDD'\n  // - non-standard 'YYYY.MM.DD' (previous ACR-NEMA)\n  let monthBeginIndex = 4;\n  let dayBeginIndex = 6;\n  if (daValue.length === 10) {\n    monthBeginIndex = 5;\n    dayBeginIndex = 8;\n  }\n  const daYears = parseInt(daValue.substring(0, 4), 10);\n  // 0-11 range\n  const daMonthIndex = daValue.length >= monthBeginIndex + 2\n    ? parseInt(daValue.substring(\n      monthBeginIndex, monthBeginIndex + 2), 10) - 1 : 0;\n  const daDay = daValue.length === dayBeginIndex + 2\n    ? parseInt(daValue.substring(\n      dayBeginIndex, dayBeginIndex + 2), 10) : 0;\n  return {\n    year: daYears,\n    monthIndex: daMonthIndex,\n    day: daDay\n  };\n}\n\n/**\n * Get a time object with {hours, minutes, seconds} ready for the\n *   Date constructor from a DICOM element with vr=TM.\n *\n * @param {DataElement} element The DICOM element with date information.\n * @returns {{hours, minutes, seconds, milliseconds}|undefined} The time object.\n */\nexport function getTime(element) {\n  if (typeof element === 'undefined') {\n    return undefined;\n  }\n  if (element.value.length !== 1) {\n    return undefined;\n  }\n  // format: HH[MMSS.FFFFFF]\n  const tmValue = element.value[0];\n  const tmHours = parseInt(tmValue.substring(0, 2), 10);\n  const tmMinutes = tmValue.length >= 4\n    ? parseInt(tmValue.substring(2, 4), 10) : 0;\n  const tmSeconds = tmValue.length >= 6\n    ? parseInt(tmValue.substring(4, 6), 10) : 0;\n  const tmFracSecondsStr = tmValue.length >= 8\n    ? tmValue.substring(7, 10) : 0;\n  const tmMilliSeconds = tmFracSecondsStr === 0 ? 0\n    : parseInt(tmFracSecondsStr, 10) *\n      Math.pow(10, 3 - tmFracSecondsStr.length);\n  return {\n    hours: tmHours,\n    minutes: tmMinutes,\n    seconds: tmSeconds,\n    milliseconds: tmMilliSeconds\n  };\n}\n\n/**\n * Get a 'dateTime' object with {date, time} ready for the\n *   Date constructor from a DICOM element with vr=DT.\n *\n * @param {DataElement} element The DICOM element with date-time information.\n * @returns {{date, time}|undefined} The time object.\n */\nexport function getDateTime(element) {\n  if (typeof element === 'undefined') {\n    return undefined;\n  }\n  if (element.value.length !== 1) {\n    return undefined;\n  }\n  // format: YYYYMMDDHHMMSS.FFFFFF&ZZXX\n  const dtFullValue = element.value[0];\n  // remove offset (&ZZXX)\n  const dtValue = dtFullValue.split('&')[0];\n  const dateDataElement = new DataElement('DA');\n  dateDataElement.value = [dtValue.substring(0, 8)];\n  const dtDate = getDate(dateDataElement);\n  const timeDataElement = new DataElement('TM');\n  timeDataElement.value = [dtValue.substring(8)];\n  const dtTime = dtValue.length >= 9\n    ? getTime(timeDataElement) : undefined;\n  return {\n    date: dtDate,\n    time: dtTime\n  };\n}\n\n/**\n * Extract date values from a Date object.\n *\n * @param {Date} date The input date.\n * @returns {{year, monthIndex, day}} A 'date' object.\n */\nexport function dateToDateObj(date) {\n  return {\n    year: date.getFullYear().toString(),\n    monthIndex: padZeroTwoDigit((date.getMonth() + 1).toString()),\n    day: padZeroTwoDigit(date.getDate().toString())\n  };\n}\n\n/**\n * Extract time values from a Date object.\n *\n * @param {Date} date The input date.\n * @returns {{hours, minutes, seconds}} A 'time' object.\n */\nexport function dateToTimeObj(date) {\n  return {\n    hours: padZeroTwoDigit(date.getHours().toString()),\n    minutes: padZeroTwoDigit(date.getMinutes().toString()),\n    seconds: padZeroTwoDigit(date.getSeconds().toString())\n  };\n}\n\n/**\n * Get a DICOM formated date string.\n *\n * @param {{year, monthIndex, day}} dateObj The date to format.\n * @returns {string} The formated date.\n */\nexport function getDicomDate(dateObj) {\n  // YYYYMMDD\n  return (\n    dateObj.year +\n    dateObj.monthIndex +\n    dateObj.day\n  );\n}\n\n/**\n * Get a DICOM formated time string.\n *\n * @param {{hours, minutes, seconds}} dateObj The date to format.\n * @returns {string} The formated time.\n */\nexport function getDicomTime(dateObj) {\n  // HHMMSS\n  return (\n    dateObj.hours +\n    dateObj.minutes +\n    dateObj.seconds\n  );\n}\n\n/**\n * Get a DICOM formated datetime string.\n *\n * @param {{date, time}} datetime The datetime to format.\n * @returns {string} The formated datetime.\n */\nexport function getDicomDateTime(datetime) {\n  // HHMMSS\n  let res = getDicomDate(datetime.date);\n  if (typeof datetime.time !== 'undefined') {\n    res += getDicomTime(datetime.time);\n  }\n  return res;\n}\n","import {Vector3D} from './vector';\nimport {\n  Matrix33,\n  getIdentityMat33\n} from './matrix';\n\n/**\n * Create a 3x3 coronal (xzy) matrix.\n *\n * @returns {Matrix33} The coronal matrix.\n */\nexport function getCoronalMat33() {\n  /* eslint-disable @stylistic/js/array-element-newline */\n  return new Matrix33([\n    1, 0, 0,\n    0, 0, 1,\n    0, -1, 0\n  ]);\n  /* eslint-enable @stylistic/js/array-element-newline */\n}\n\n/**\n * Create a 3x3 sagittal (yzx) matrix.\n *\n * @returns {Matrix33} The sagittal matrix.\n */\nexport function getSagittalMat33() {\n  /* eslint-disable @stylistic/js/array-element-newline */\n  return new Matrix33([\n    0, 0, -1,\n    1, 0, 0,\n    0, -1, 0\n  ]);\n  /* eslint-enable @stylistic/js/array-element-newline */\n}\n\n/**\n * Default anatomical plane orientations.\n */\nexport const Orientation = {\n  /**\n   * Axial, also known as transverse.\n   */\n  Axial: 'axial',\n  /**\n   * Coronal, also known as frontal.\n   */\n  Coronal: 'coronal',\n  /**\n   * Sagittal, also known as anteroposterior.\n   */\n  Sagittal: 'sagittal'\n};\n\n/**\n * Get an orientation matrix from a name.\n *\n * @param {string} name The orientation name.\n * @returns {Matrix33|undefined} The orientation matrix.\n */\nexport function getMatrixFromName(name) {\n  let matrix;\n  if (name === Orientation.Axial) {\n    matrix = getIdentityMat33();\n  } else if (name === Orientation.Coronal) {\n    matrix = getCoronalMat33();\n  } else if (name === Orientation.Sagittal) {\n    matrix = getSagittalMat33();\n  }\n  return matrix;\n}\n\n/**\n * Get the orientation code of an orientation matrix. Each letter defines\n * the towards direction. Letters are: R (right), L (left),\n * A (anterior), P (posterior), I (inferior) and S (superior).\n *\n * @param {Matrix33} matrix The orientation matrix.\n * @returns {string} The orientation code.\n */\nexport function getOrientationStringLPS(matrix) {\n  const v0 = new Vector3D(\n    matrix.get(0, 0),\n    matrix.get(1, 0),\n    matrix.get(2, 0)\n  );\n  const v1 = new Vector3D(\n    matrix.get(0, 1),\n    matrix.get(1, 1),\n    matrix.get(2, 1)\n  );\n  const v2 = new Vector3D(\n    matrix.get(0, 2),\n    matrix.get(1, 2),\n    matrix.get(2, 2)\n  );\n  return getVectorStringLPS(v0) +\n    getVectorStringLPS(v1) +\n    getVectorStringLPS(v2);\n}\n\n/**\n * Get the orientation code of an orientation vector.\n * Credits: David Clunie, {@link https://www.dclunie.com/medical-image-faq/html/part2.html}.\n *\n * @param {Vector3D} vector The orientation vector.\n * @returns {string} The orientation code.\n */\nfunction getVectorStringLPS(vector) {\n  let abs = new Vector3D(\n    Math.abs(vector.getX()),\n    Math.abs(vector.getY()),\n    Math.abs(vector.getZ())\n  );\n\n  let orientation = '';\n  const orientationX = vector.getX() < 0 ? 'R' : 'L';\n  const orientationY = vector.getY() < 0 ? 'A' : 'P';\n  // as defined in DICOM\n  //const orientationZ = vector.getZ() < 0 ? 'F' : 'H';\n  const orientationZ = vector.getZ() < 0 ? 'I' : 'S';\n\n  const threshold = 0.0001;\n\n  for (let i = 0; i < 3; i++) {\n    if (abs.getX() > threshold &&\n      abs.getX() > abs.getY() &&\n      abs.getX() > abs.getZ()) {\n      orientation += orientationX;\n      abs = new Vector3D(0, abs.getY(), abs.getZ());\n    } else if (abs.getY() > threshold &&\n      abs.getY() > abs.getX() &&\n      abs.getY() > abs.getZ()) {\n      orientation += orientationY;\n      abs = new Vector3D(abs.getX(), 0, abs.getZ());\n    } else if (abs.getZ() > threshold &&\n      abs.getZ() > abs.getX() &&\n      abs.getZ() > abs.getY()) {\n      orientation += orientationZ;\n      abs = new Vector3D(abs.getX(), abs.getY(), 0);\n    } else {\n      break;\n    }\n  }\n\n  return orientation;\n}\n\n/**\n * Get the LPS 'group' (axial, coronal or sagittal) from a LPS code.\n *\n * @param {string} code The LPS code string.\n * @returns {string|undefined} The group.\n */\nfunction getLPSGroup(code) {\n  let orientStr;\n  const axialCodes =\n    ['LPS', 'LAI', 'RPI', 'RAS', 'ALS', 'ARI', 'PLI', 'PRS'];\n  const coronalCodes =\n    ['LSA', 'LIP', 'RSP', 'RIA', 'ILA', 'IRP', 'SLP', 'SRA'];\n  const sagittalCodes =\n    ['PSL', 'PIR', 'ASR', 'AIL', 'IAR', 'IPL', 'SAL', 'SPR'];\n  if (axialCodes.includes(code)) {\n    orientStr = Orientation.Axial;\n  } else if (coronalCodes.includes(code)) {\n    orientStr = Orientation.Coronal;\n  } else if (sagittalCodes.includes(code)) {\n    orientStr = Orientation.Sagittal;\n  }\n  return orientStr;\n}\n\n/**\n * Get the name of an image orientation patient.\n *\n * @param {number[]} cosines The image orientation\n *   patient cosines (6 values).\n * @returns {string|undefined} The orientation\n *   name: axial, coronal or sagittal.\n */\nexport function getOrientationName(cosines) {\n  let name;\n  const orientMatrix = getOrientationFromCosines(cosines);\n  if (typeof orientMatrix !== 'undefined') {\n    const lpsStr = getOrientationStringLPS(orientMatrix.asOneAndZeros());\n    name = getLPSGroup(lpsStr);\n  }\n  return name;\n}\n\n/**\n * Get the orientation matrix associated to the direction cosines.\n *\n * @param {number[]} cosines The image orientation\n *   patient cosines (6 values).\n * @returns {Matrix33|undefined} The orientation matrix.\n */\nexport function getOrientationFromCosines(cosines) {\n  let orientationMatrix;\n  if (typeof cosines !== 'undefined' && cosines.length === 6) {\n    const rowCosines = new Vector3D(cosines[0], cosines[1], cosines[2]);\n    const colCosines = new Vector3D(cosines[3], cosines[4], cosines[5]);\n    const normal = rowCosines.crossProduct(colCosines);\n    /* eslint-disable @stylistic/js/array-element-newline */\n    orientationMatrix = new Matrix33([\n      rowCosines.getX(), colCosines.getX(), normal.getX(),\n      rowCosines.getY(), colCosines.getY(), normal.getY(),\n      rowCosines.getZ(), colCosines.getZ(), normal.getZ()\n    ]);\n    /* eslint-enable @stylistic/js/array-element-newline */\n  }\n  return orientationMatrix;\n}\n\n/**\n * Get the direction cosines from an orientation matrix.\n *\n * @param {Matrix33} matrix The input matrix.\n * @returns {number[]} The image orientation\n *   patient cosines (6 values).\n */\nexport function getCosinesFromOrientation(matrix) {\n  return [\n    matrix.get(0, 0),\n    matrix.get(1, 0),\n    matrix.get(2, 0),\n    matrix.get(0, 1),\n    matrix.get(1, 1),\n    matrix.get(2, 1)\n  ];\n}\n\n/**\n * Get the view orientation according to an image and target orientation.\n * The view orientation is used to go from target to image space.\n *\n * @param {Matrix33} imageOrientation The image geometry.\n * @param {Matrix33} targetOrientation The target orientation.\n * @returns {Matrix33} The view orientation.\n */\nexport function getViewOrientation(imageOrientation, targetOrientation) {\n  let viewOrientation = getIdentityMat33();\n  if (typeof targetOrientation !== 'undefined') {\n    // i: image, v: view, t: target, O: orientation, P: point\n    // [Img] -- Oi --> [Real] <-- Ot -- [Target]\n    // Pi = (Oi)-1 * Ot * Pt = Ov * Pt\n    // -> Ov = (Oi)-1 * Ot\n    // TODO: asOneAndZeros simplifies but not nice...\n    viewOrientation =\n      imageOrientation.asOneAndZeros().getInverse().multiply(targetOrientation);\n  }\n  // TODO: why abs???\n  return viewOrientation.getAbs();\n}\n\n/**\n * Get the target orientation according to an image and view orientation.\n * The target orientation is used to go from target to real space.\n *\n * @param {Matrix33} imageOrientation The image geometry.\n * @param {Matrix33} viewOrientation The view orientation.\n * @returns {Matrix33} The target orientation.\n */\nexport function getTargetOrientation(imageOrientation, viewOrientation) {\n  // i: image, v: view, t: target, O: orientation, P: point\n  // [Img] -- Oi --> [Real] <-- Ot -- [Target]\n  // Pi = (Oi)-1 * Ot * Pt = Ov * Pt\n  // -> Ot = Oi * Ov\n  // note: asOneAndZeros as in getViewOrientation...\n  let targetOrientation =\n    imageOrientation.asOneAndZeros().multiply(viewOrientation);\n\n  // TODO: why abs???\n  const simpleImageOrientation = imageOrientation.asOneAndZeros().getAbs();\n  if (simpleImageOrientation.equals(getCoronalMat33().getAbs())) {\n    targetOrientation = targetOrientation.getAbs();\n  }\n\n  return targetOrientation;\n}\n","import {\n  DicomParser,\n  getTransferSyntaxName\n} from './dicomParser';\nimport {\n  getDate,\n  getTime,\n  getDateTime\n} from './dicomDate';\nimport {\n  isPixelDataTag,\n  isItemDelimitationItemTag,\n  isSequenceDelimitationItemTag,\n  getItemTag,\n  getItemDelimitationItemTag,\n  getSequenceDelimitationItemTag,\n  getPixelDataTag,\n  getTagFromKey\n} from './dicomTag';\nimport {isNativeLittleEndian} from './dataReader';\nimport {getOrientationFromCosines} from '../math/orientation';\nimport {Spacing} from '../image/spacing';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Tag} from './dicomTag';\nimport {DataElement} from './dataElement';\nimport {Matrix33} from '../math/matrix';\n/* eslint-enable no-unused-vars */\n\n/**\n * @typedef {Object<string, DataElement>} DataElements\n */\n\n/**\n * Dump the DICOM tags to a string in the same way as the\n * DCMTK `dcmdump` command (https://support.dcmtk.org/docs-dcmrt/dcmdump.html).\n *\n * @param {Object<string, DataElement>} dicomElements The dicom elements.\n * @returns {string} The dumped file.\n */\nexport function dcmdump(dicomElements) {\n  const keys = Object.keys(dicomElements);\n  let result = '\\n';\n  result += '# Dicom-File-Format\\n';\n  result += '\\n';\n  result += '# Dicom-Meta-Information-Header\\n';\n  result += '# Used TransferSyntax: ';\n  if (isNativeLittleEndian()) {\n    result += 'Little Endian Explicit\\n';\n  } else {\n    result += 'NOT Little Endian Explicit\\n';\n  }\n  let dicomElement = null;\n  let tag = null;\n  let checkHeader = true;\n  for (let i = 0, leni = keys.length; i < leni; ++i) {\n    dicomElement = dicomElements[keys[i]];\n    tag = getTagFromKey(keys[i]);\n    if (checkHeader && tag.getGroup() !== '0002') {\n      result += '\\n';\n      result += '# Dicom-Data-Set\\n';\n      result += '# Used TransferSyntax: ';\n      const syntax = dicomElements['00020010'].value[0];\n      result += getTransferSyntaxName(syntax);\n      result += '\\n';\n      checkHeader = false;\n    }\n    result += getElementAsString(tag, dicomElement) + '\\n';\n  }\n  return result;\n}\n\n/**\n * Get a data element value as a string.\n *\n * @param {Tag} tag The DICOM tag.\n * @param {object} dicomElement The DICOM element.\n * @param {boolean} [pretty] When set to true, returns a 'pretified' content.\n * @returns {string} A string representation of the DICOM element.\n */\nfunction getElementValueAsString(tag, dicomElement, pretty) {\n  let str = '';\n  const strLenLimit = 65;\n\n  // dafault to pretty output\n  if (typeof pretty === 'undefined') {\n    pretty = true;\n  }\n  // check dicom element input\n  if (typeof dicomElement === 'undefined' || dicomElement === null) {\n    return str;\n  }\n\n  // Polyfill for Number.isInteger.\n  const isInteger = Number.isInteger || function (value) {\n    return typeof value === 'number' &&\n      isFinite(value) &&\n      Math.floor(value) === value;\n  };\n\n  // TODO Support sequences.\n\n  if (dicomElement.vr !== 'SQ' &&\n    dicomElement.value.length === 1 && dicomElement.value[0] === '') {\n    str += '(no value available)';\n  } else if (isPixelDataTag(tag) &&\n    dicomElement.undefinedLength) {\n    str = '(PixelSequence)';\n  } else if (dicomElement.vr === 'DA' && pretty) {\n    const daObj = getDate(dicomElement);\n    const da = new Date(daObj.year, daObj.monthIndex, daObj.day);\n    str = da.toLocaleDateString();\n  } else if (dicomElement.vr === 'TM' && pretty) {\n    const tmObj = getTime(dicomElement);\n    str = tmObj.hours + ':' + tmObj.minutes + ':' + tmObj.seconds;\n  } else {\n    let isOtherVR = false;\n    if (dicomElement.vr.length !== 0) {\n      isOtherVR = (dicomElement.vr[0].toUpperCase() === 'O');\n    }\n    const isFloatNumberVR = (dicomElement.vr === 'FL' ||\n      dicomElement.vr === 'FD' ||\n      dicomElement.vr === 'DS');\n    let valueStr = '';\n    for (let k = 0, lenk = dicomElement.value.length; k < lenk; ++k) {\n      valueStr = '';\n      if (k !== 0) {\n        valueStr += '\\\\';\n      }\n      if (isFloatNumberVR) {\n        const num = Number(dicomElement.value[k]);\n        if (!isInteger(num) && pretty) {\n          valueStr += num.toPrecision(4);\n        } else {\n          valueStr += num.toString();\n        }\n      } else if (isOtherVR) {\n        let tmp = dicomElement.value[k].toString(16);\n        if (dicomElement.vr === 'OB') {\n          tmp = '00'.substring(0, 2 - tmp.length) + tmp;\n        } else {\n          tmp = '0000'.substring(0, 4 - tmp.length) + tmp;\n        }\n        valueStr += tmp;\n      } else {\n        valueStr += dicomElement.value[k];\n      }\n      // check length\n      if (str.length + valueStr.length <= strLenLimit) {\n        str += valueStr;\n      } else {\n        str += '...';\n        break;\n      }\n    }\n  }\n  return str;\n}\n\n/**\n * Get a data element as a string.\n *\n * @param {Tag} tag The DICOM tag.\n * @param {object} dicomElement The DICOM element.\n * @param {string} [prefix] A string to prepend this one.\n * @returns {string} The element as a string.\n */\nfunction getElementAsString(tag, dicomElement, prefix) {\n  // default prefix\n  prefix = prefix || '';\n\n  // get tag anme from dictionary\n  const tagName = tag.getNameFromDictionary();\n\n  let deSize = dicomElement.value.length;\n  let isOtherVR = false;\n  if (dicomElement.vr.length !== 0) {\n    isOtherVR = (dicomElement.vr[0].toUpperCase() === 'O');\n  }\n\n  // no size for delimitations\n  if (isItemDelimitationItemTag(tag) ||\n    isSequenceDelimitationItemTag(tag)) {\n    deSize = 0;\n  } else if (isOtherVR) {\n    deSize = 1;\n  }\n\n  const isPixSequence = (isPixelDataTag(tag) &&\n    dicomElement.undefinedLength);\n\n  let line = null;\n\n  // (group,element)\n  line = '(';\n  line += tag.getGroup().toLowerCase();\n  line += ',';\n  line += tag.getElement().toLowerCase();\n  line += ') ';\n  // value representation\n  line += dicomElement.vr;\n  // value\n  if (dicomElement.vr !== 'SQ' &&\n    dicomElement.value.length === 1 &&\n    dicomElement.value[0] === '') {\n    line += ' (no value available)';\n    deSize = 0;\n  } else {\n    // simple number display\n    if (dicomElement.vr === 'na') {\n      line += ' ';\n      line += dicomElement.value[0];\n    } else if (isPixSequence) {\n      // pixel sequence\n      line += ' (PixelSequence #=' + deSize + ')';\n    } else if (dicomElement.vr === 'SQ') {\n      line += ' (Sequence with';\n      if (dicomElement.undefinedLength) {\n        line += ' undefined';\n      } else {\n        line += ' explicit';\n      }\n      line += ' length #=';\n      line += dicomElement.value.length;\n      line += ')';\n    } else if (isOtherVR ||\n        dicomElement.vr === 'pi' ||\n        dicomElement.vr === 'UL' ||\n        dicomElement.vr === 'US' ||\n        dicomElement.vr === 'SL' ||\n        dicomElement.vr === 'SS' ||\n        dicomElement.vr === 'FL' ||\n        dicomElement.vr === 'FD' ||\n        dicomElement.vr === 'AT') {\n      // 'O'ther array, limited display length\n      line += ' ';\n      line += getElementValueAsString(tag, dicomElement, false);\n    } else {\n      // default\n      line += ' [';\n      line += getElementValueAsString(tag, dicomElement, false);\n      line += ']';\n    }\n  }\n\n  // align #\n  const nSpaces = 55 - line.length;\n  if (nSpaces > 0) {\n    for (let s = 0; s < nSpaces; ++s) {\n      line += ' ';\n    }\n  }\n  line += ' # ';\n  if (dicomElement.vl < 100) {\n    line += ' ';\n  }\n  if (dicomElement.vl < 10) {\n    line += ' ';\n  }\n  line += dicomElement.vl;\n  line += ', ';\n  line += deSize; //dictElement[1];\n  line += ' ';\n  if (tagName !== null) {\n    line += tagName;\n  } else {\n    line += 'Unknown Tag & Data';\n  }\n\n  let message = null;\n\n  // continue for sequence\n  if (dicomElement.vr === 'SQ') {\n    let item = null;\n    for (let l = 0, lenl = dicomElement.value.length; l < lenl; ++l) {\n      item = dicomElement.value[l];\n      const itemKeys = Object.keys(item);\n      if (itemKeys.length === 0) {\n        continue;\n      }\n\n      // get the item element\n      const itemTag = getItemTag();\n      const itemElement = item['FFFEE000'];\n      message = '(Item with';\n      if (itemElement.undefinedLength) {\n        message += ' undefined';\n      } else {\n        message += ' explicit';\n      }\n      message += ' length #=' + (itemKeys.length - 1) + ')';\n      itemElement.value = [message];\n      itemElement.vr = 'na';\n\n      line += '\\n';\n      line += getElementAsString(itemTag, itemElement, prefix + '  ');\n\n      for (let m = 0, lenm = itemKeys.length; m < lenm; ++m) {\n        const itemTag = getTagFromKey(itemKeys[m]);\n        if (itemKeys[m] !== 'xFFFEE000') {\n          line += '\\n';\n          line += getElementAsString(itemTag, item[itemKeys[m]],\n            prefix + '    ');\n        }\n      }\n\n      message = '(ItemDelimitationItem';\n      if (!itemElement.undefinedLength) {\n        message += ' for re-encoding';\n      }\n      message += ')';\n      const itemDelimTag = getItemDelimitationItemTag();\n      const itemDelimElement = {\n        vr: 'na',\n        vl: '0',\n        value: [message]\n      };\n      line += '\\n';\n      line += getElementAsString(\n        itemDelimTag, itemDelimElement, prefix + '  ');\n\n    }\n\n    message = '(SequenceDelimitationItem';\n    if (!dicomElement.undefinedLength) {\n      message += ' for re-encod.';\n    }\n    message += ')';\n    const sqDelimTag = getSequenceDelimitationItemTag();\n    const sqDelimElement = {\n      vr: 'na',\n      vl: '0',\n      value: [message]\n    };\n    line += '\\n';\n    line += getElementAsString(sqDelimTag, sqDelimElement, prefix);\n  } else if (isPixSequence) {\n    // pixel sequence\n    let pixItem = null;\n    for (let n = 0, lenn = dicomElement.value.length; n < lenn; ++n) {\n      pixItem = dicomElement.value[n];\n      line += '\\n';\n      pixItem.vr = 'pi';\n      line += getElementAsString(\n        getPixelDataTag(), pixItem, prefix + '  ');\n    }\n\n    const pixDelimTag = getSequenceDelimitationItemTag();\n    const pixDelimElement = {\n      vr: 'na',\n      vl: '0',\n      value: ['(SequenceDelimitationItem)']\n    };\n    line += '\\n';\n    line += getElementAsString(pixDelimTag, pixDelimElement, prefix);\n  }\n\n  return prefix + line;\n}\n\n/**\n * Extract the 2D size from dicom elements.\n *\n * @param {DataElements} elements The DICOM elements.\n * @returns {number[]} The size.\n */\nexport function getImage2DSize(elements) {\n  // rows\n  const rows = elements['00280010'];\n  if (typeof rows === 'undefined') {\n    throw new Error('Missing DICOM image number of rows');\n  }\n  if (rows.value.length === 0) {\n    throw new Error('Empty DICOM image number of rows');\n  }\n  // columns\n  const columns = elements['00280011'];\n  if (typeof columns === 'undefined') {\n    throw new Error('Missing DICOM image number of columns');\n  }\n  if (columns.value.length === 0) {\n    throw new Error('Empty DICOM image number of columns');\n  }\n  return [columns.value[0], rows.value[0]];\n}\n\n/**\n * Get the pixel spacing from the different spacing tags.\n *\n * @param {DataElements} elements The DICOM elements.\n * @returns {Spacing} The read spacing or the default [1,1].\n */\nexport function getPixelSpacing(elements) {\n  // default\n  let rowSpacing = 1;\n  let columnSpacing = 1;\n\n  // 1. PixelSpacing\n  // 2. ImagerPixelSpacing\n  // 3. NominalScannedPixelSpacing\n  // 4. PixelAspectRatio\n  const keys = ['00280030', '00181164', '00182010', '00280034'];\n  for (let k = 0; k < keys.length; ++k) {\n    const spacing = elements[keys[k]];\n    if (spacing && spacing.value.length === 2) {\n      // spacing order: [row, column]\n      rowSpacing = parseFloat(spacing.value[0]);\n      columnSpacing = parseFloat(spacing.value[1]);\n      break;\n    }\n  }\n\n  // check\n  if (columnSpacing === 0) {\n    logger.warn('Zero column spacing.');\n    columnSpacing = 1;\n  }\n  if (rowSpacing === 0) {\n    logger.warn('Zero row spacing.');\n    rowSpacing = 1;\n  }\n\n  // return\n  // (slice spacing will be calculated using the image position patient)\n  return new Spacing([columnSpacing, rowSpacing, 1]);\n}\n\n/**\n * Get the pixel data unit.\n *\n * @param {DataElements} elements The DICOM elements.\n * @returns {string|null} The unit value if available.\n */\nexport function getPixelUnit(elements) {\n  let unit;\n  // 1. RescaleType\n  // 2. Units (for PET)\n  const keys = ['00281054', '00541001'];\n  for (let i = 0; i < keys.length; ++i) {\n    const element = elements[keys[i]];\n    if (typeof element !== 'undefined') {\n      unit = element.value[0];\n      break;\n    }\n  }\n  // default rescale type for CT\n  if (typeof unit === 'undefined') {\n    const element = elements['00080060'];\n    if (typeof element !== 'undefined') {\n      const modality = element.value[0];\n      if (modality === 'CT') {\n        unit = 'HU';\n      }\n    }\n  }\n  return unit;\n}\n\n/**\n * Check the dimension organization from a dicom element.\n *\n * @param {DataElements} dataElements The root dicom element.\n * @returns {object} The dimension organizations and indices.\n */\nexport function getDimensionOrganization(dataElements) {\n  // Dimension Organization Sequence (required)\n  const orgSq = dataElements['00209221'];\n  if (typeof orgSq === 'undefined' || orgSq.value.length !== 1) {\n    throw new Error('Unsupported dimension organization sequence length');\n  }\n  // Dimension Organization UID\n  const orgUID = orgSq.value[0]['00209164'].value[0];\n\n  // Dimension Index Sequence (conditionally required)\n  const indices = [];\n  const indexSqElem = dataElements['00209222'];\n  if (typeof indexSqElem !== 'undefined') {\n    const indexSq = indexSqElem.value;\n    // expecting 2D index\n    if (indexSq.length !== 2) {\n      throw new Error('Unsupported dimension index sequence length');\n    }\n    let indexPointer;\n    for (let i = 0; i < indexSq.length; ++i) {\n      // Dimension Organization UID (required)\n      const indexOrg = indexSq[i]['00209164'].value[0];\n      if (indexOrg !== orgUID) {\n        throw new Error(\n          'Dimension Index Sequence contains a unknown Dimension Organization');\n      }\n      // Dimension Index Pointer (required)\n      indexPointer = indexSq[i]['00209165'].value[0];\n\n      const index = {\n        DimensionOrganizationUID: indexOrg,\n        DimensionIndexPointer: indexPointer\n      };\n      // Dimension Description Label (optional)\n      if (typeof indexSq[i]['00209421'] !== 'undefined') {\n        index.DimensionDescriptionLabel = indexSq[i]['00209421'].value[0];\n      }\n      // store\n      indices.push(index);\n    }\n    // expecting Image Position at last position\n    if (indexPointer !== '(0020,0032)') {\n      throw new Error('Unsupported non image position as last index');\n    }\n  }\n\n  return {\n    organizations: {\n      value: [\n        {\n          DimensionOrganizationUID: orgUID\n        }\n      ]\n    },\n    indices: {\n      value: indices\n    }\n  };\n}\n\n/**\n * Get a spacing object from a dicom measure element.\n *\n * @param {DataElements} dataElements The dicom element.\n * @returns {Spacing} A spacing object.\n */\nexport function getSpacingFromMeasure(dataElements) {\n  // Pixel Spacing\n  if (typeof dataElements['00280030'] === 'undefined') {\n    return null;\n  }\n  const pixelSpacing = dataElements['00280030'];\n  // spacing order: [row, column]\n  const spacingValues = [\n    parseFloat(pixelSpacing.value[1]),\n    parseFloat(pixelSpacing.value[0]),\n  ];\n  // Spacing Between Slices\n  if (typeof dataElements['00180088'] !== 'undefined') {\n    spacingValues.push(parseFloat(dataElements['00180088'].value[0]));\n  }\n  return new Spacing(spacingValues);\n}\n\n/**\n * Get an orientation matrix from a dicom orientation element.\n *\n * @param {DataElements} dataElements The dicom element.\n * @returns {Matrix33|undefined} The orientation matrix.\n */\nexport function getOrientationMatrix(dataElements) {\n  const imageOrientationPatient = dataElements['00200037'];\n  let orientationMatrix;\n  // slice orientation (cosines are matrices' columns)\n  // http://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.7.6.2.html#sect_C.7.6.2.1.1\n  if (typeof imageOrientationPatient !== 'undefined') {\n    orientationMatrix =\n      getOrientationFromCosines(\n        imageOrientationPatient.value.map((item) => parseFloat(item))\n      );\n  }\n  return orientationMatrix;\n}\n\n/**\n * Get a dicom item from a measure sequence.\n *\n * @param {Spacing} spacing The spacing object.\n * @returns {object} The dicom item.\n */\nexport function getDicomMeasureItem(spacing) {\n  return {\n    SpacingBetweenSlices: spacing.get(2),\n    PixelSpacing: [spacing.get(1), spacing.get(0)]\n  };\n}\n\n/**\n * Get a dicom element from a plane orientation sequence.\n *\n * @param {Matrix33} orientation The image orientation.\n * @returns {object} The dicom element.\n */\nexport function getDicomPlaneOrientationItem(orientation) {\n  return {\n    ImageOrientationPatient: [\n      orientation.get(0, 0),\n      orientation.get(1, 0),\n      orientation.get(2, 0),\n      orientation.get(0, 1),\n      orientation.get(1, 1),\n      orientation.get(2, 1)\n    ]\n  };\n}\n\n/**\n * Check an input tag.\n *\n * @param {object} element The element to check.\n * @param {string} name The element name.\n * @param {Array} [values] The expected values.\n * @returns {string} A warning if the element is not as expected.\n */\nfunction checkTag(element, name, values) {\n  let warning = '';\n  if (typeof element === 'undefined') {\n    warning += ' ' + name + ' is undefined,';\n  } else if (element.value.length === 0) {\n    warning += ' ' + name + ' is empty,';\n  } else {\n    if (typeof values !== 'undefined') {\n      for (let i = 0; i < values.length; ++i) {\n        if (!element.value.includes(values[i])) {\n          warning += ' ' + name + ' does not contain ' + values[i] +\n            ' (value: ' + element.value + '),';\n        }\n      }\n    }\n  }\n  return warning;\n}\n\n/**\n * Get the decayed dose (Bq).\n *\n * @param {object} elements The DICOM elements to check.\n * @returns {object} The value and a warning if\n *   the elements are not as expected.\n */\nfunction getDecayedDose(elements) {\n  let warning = '';\n  let warn;\n\n  // SeriesDate (type1)\n  const seriesDateEl = elements['00080021'];\n  const seriesDateObj = getDate(seriesDateEl);\n\n  let totalDose;\n  let halfLife;\n  let radioStart;\n\n  const radioInfoSqStr = 'RadiopharmaceuticalInformationSequence (00540016)';\n  const radioInfoSq = elements['00540016'];\n  warning += checkTag(radioInfoSq, radioInfoSqStr);\n  if (typeof radioInfoSq !== 'undefined') {\n    if (radioInfoSq.value.length !== 1) {\n      logger.warn(\n        'Found more than 1 istopes in RadiopharmaceuticalInformation Sequence.'\n      );\n    }\n\n    // RadionuclideTotalDose (type3, Bq)\n    const totalDoseStr = 'RadionuclideTotalDose (00181074)';\n    const totalDoseEl = radioInfoSq.value[0]['00181074'];\n    warn = checkTag(totalDoseEl, totalDoseStr);\n    if (warn.length === 0) {\n      const dose = parseFloat(totalDoseEl.value[0]);\n      if (!isNaN(dose)) {\n        totalDose = dose;\n      } else {\n        warning += ' TotalDose is not a number';\n      }\n    } else {\n      warning += warn;\n    }\n\n    // RadionuclideHalfLife (type3, seconds)\n    const halfLifeStr = 'RadionuclideHalfLife (00181075)';\n    const halfLifeEl = radioInfoSq.value[0]['00181075'];\n    warn = checkTag(halfLifeEl, halfLifeStr);\n    if (warn.length === 0) {\n      const hl = parseFloat(halfLifeEl.value[0]);\n      if (!isNaN(hl)) {\n        halfLife = hl;\n      } else {\n        warning += ' HalfLife is not a number';\n      }\n    } else {\n      warning += warn;\n    }\n\n    // RadiopharmaceuticalStartDateTime (type3)\n    const radioStartDateTimeEl = radioInfoSq.value[0]['00181078'];\n    let radioStartDateObj;\n    let radioStartTimeObj;\n    if (typeof radioStartDateTimeEl === 'undefined') {\n      // use seriesDate as radioStartDate\n      radioStartDateObj = seriesDateObj;\n      // try RadiopharmaceuticalStartTime (type3)\n      const radioStartTimeEl = radioInfoSq.value[0]['00181072'];\n      radioStartTimeObj = getTime(radioStartTimeEl);\n    } else {\n      const radioStartDateTime = getDateTime(radioStartDateTimeEl);\n      radioStartDateObj = radioStartDateTime.date;\n      radioStartTimeObj = radioStartDateTime.time;\n    }\n    if (typeof radioStartTimeObj === 'undefined') {\n      radioStartTimeObj = {\n        hours: 0, minutes: 0, seconds: 0, milliseconds: 0\n      };\n    }\n    radioStart = new Date(\n      radioStartDateObj.year,\n      radioStartDateObj.monthIndex,\n      radioStartDateObj.day,\n      radioStartTimeObj.hours,\n      radioStartTimeObj.minutes,\n      radioStartTimeObj.seconds,\n      radioStartTimeObj.milliseconds\n    );\n  }\n\n  // SeriesTime (type1)\n  const seriesTimeEl = elements['00080031'];\n  const seriesTimeObj = getTime(seriesTimeEl);\n  // Series date/time\n  let scanStart = new Date(\n    seriesDateObj.year,\n    seriesDateObj.monthIndex,\n    seriesDateObj.day,\n    seriesTimeObj.hours,\n    seriesTimeObj.minutes,\n    seriesTimeObj.seconds,\n    seriesTimeObj.milliseconds\n  );\n\n  // scanStart Date check\n  // AcquisitionDate (type3)\n  const acqDateEl = elements['00080022'];\n  // AcquisitionTime (type3)\n  const acqTimeEl = elements['00080032'];\n  if (typeof acqDateEl !== 'undefined' &&\n    typeof acqTimeEl !== 'undefined') {\n    const acqDateObj = getDate(acqDateEl);\n    const acqTimeObj = getTime(acqTimeEl);\n    const acqDate = new Date(\n      acqDateObj.year,\n      acqDateObj.monthIndex,\n      acqDateObj.day,\n      acqTimeObj.hours,\n      acqTimeObj.minutes,\n      acqTimeObj.seconds,\n      acqTimeObj.milliseconds\n    );\n\n    if (scanStart > acqDate) {\n      const diff = scanStart.getTime() - acqDate.getTime();\n      const warn = 'Series date/time is after Aquisition date/time (diff=' +\n        diff.toString() + 'ms) ';\n      logger.debug(warn);\n\n      // back compute from center (average count rate) of time window\n      // for bed position (frame) in series (reliable in all cases)\n\n      let frameRefTime = 0;\n      const frameRefTimeElStr = 'FrameReferenceTime (00541300)';\n      const frameRefTimeEl = elements['00541300'];\n      warning += checkTag(frameRefTimeEl, frameRefTimeElStr);\n      if (typeof frameRefTimeEl !== 'undefined') {\n        frameRefTime = frameRefTimeEl.value[0];\n      }\n      let actualFrameDuration = 0;\n      const actualFrameDurationElStr = 'ActualFrameDuration (0018,1242)';\n      const actualFrameDurationEl = elements['00181242'];\n      warning += checkTag(actualFrameDurationEl, actualFrameDurationElStr);\n      if (typeof actualFrameDurationEl !== 'undefined') {\n        actualFrameDuration = actualFrameDurationEl.value[0];\n      }\n      if (frameRefTime > 0 && actualFrameDuration > 0) {\n        // convert to seconds\n        actualFrameDuration = actualFrameDuration / 1000;\n        frameRefTime = frameRefTime / 1000;\n        const decayConstant = Math.log(2) / halfLife;\n        const decayDuringFrame = decayConstant * actualFrameDuration;\n        const averageCountRateTimeWithinFrame =\n          1 /\n          decayConstant *\n          Math.log(decayDuringFrame / (1 - Math.exp(-decayDuringFrame)));\n        const offsetSeconds = averageCountRateTimeWithinFrame - frameRefTime;\n        scanStart = new Date(\n          acqDateObj.year,\n          acqDateObj.monthIndex,\n          acqDateObj.day,\n          acqTimeObj.hours,\n          acqTimeObj.minutes,\n          acqTimeObj.seconds + offsetSeconds,\n          acqTimeObj.milliseconds\n        );\n      }\n    }\n  }\n\n  // decayed dose (Bq)\n  let decayedDose;\n  if (typeof scanStart !== 'undefined' &&\n    typeof radioStart !== 'undefined' &&\n    typeof totalDose !== 'undefined' &&\n    typeof halfLife !== 'undefined') {\n    // decay time (s) (Date diff is in milliseconds)\n    const decayTime = (scanStart.getTime() - radioStart.getTime()) / 1000;\n    const decay = Math.pow(2, (-decayTime / halfLife));\n    decayedDose = totalDose * decay;\n  }\n\n  return {\n    value: decayedDose,\n    warning: warning\n  };\n}\n\n/**\n * Get the PET SUV factor.\n *\n * Ref:\n * - {@link https://qibawiki.rsna.org/index.php/Standardized_Uptake_Value_(SUV)#SUV_Calculation},\n * - {@link https://qibawiki.rsna.org/images/6/62/SUV_vendorneutral_pseudocode_happypathonly_20180626_DAC.pdf},\n * - {@link https://qibawiki.rsna.org/images/8/86/SUV_vendorneutral_pseudocode_20180626_DAC.pdf}.\n *\n * @param {object} elements The DICOM elements.\n * @returns {object} The value and a warning if\n *   the elements are not as expected.\n */\nexport function getSuvFactor(elements) {\n  let warning = '';\n\n  // CorrectedImage (type2): must contain ATTN and DECY\n  const corrImageTagStr = 'Corrected Image (00280051)';\n  const corrImageEl = elements['00280051'];\n  warning += checkTag(corrImageEl, corrImageTagStr, ['ATTN', 'DECY']);\n  // DecayCorrection (type1): must be START\n  const decayCorrTagStr = 'Decay Correction (00541102)';\n  const decayCorrEl = elements['00541102'];\n  warning += checkTag(decayCorrEl, decayCorrTagStr, ['START']);\n  // Units (type1): must be BQML\n  const unitTagStr = 'Units (00541001)';\n  const unitEl = elements['00541001'];\n  warning += checkTag(unitEl, unitTagStr, ['BQML']);\n\n  // PatientWeight (type3, kg)\n  let patWeight;\n  const patientWeightStr = ' PatientWeight (00101030)';\n  const patWeightEl = elements['00101030'];\n  const warn = checkTag(patWeightEl, patientWeightStr);\n  if (warn.length === 0) {\n    const weight = parseFloat(patWeightEl.value[0]);\n    if (!isNaN(weight)) {\n      patWeight = weight;\n    } else {\n      warning += ' PatientWeight is not a number';\n    }\n  } else {\n    warning += warn;\n  }\n\n  // Decayed dose (Bq)\n  const decayedDose = getDecayedDose(elements);\n  warning += decayedDose.warning;\n\n  const result = {};\n  if (warning.length !== 0) {\n    result.warning = 'Cannot calculate PET SUV:' + warning;\n  } else {\n    // SUV factor (grams/Bq)\n    result.value = (patWeight * 1000) / decayedDose.value;\n  }\n\n  return result;\n}\n\n/**\n * Get the file list from a DICOMDIR.\n *\n * @param {object} data The buffer data of the DICOMDIR.\n * @returns {Array|undefined} The file list as an array ordered by\n *   STUDY > SERIES > IMAGES.\n */\nexport function getFileListFromDicomDir(data) {\n  // parse file\n  const parser = new DicomParser();\n  parser.parse(data);\n  const elements = parser.getDicomElements();\n\n  // Directory Record Sequence\n  if (typeof elements['00041220'] === 'undefined' ||\n    typeof elements['00041220'].value === 'undefined') {\n    logger.warn('No Directory Record Sequence found in DICOMDIR.');\n    return undefined;\n  }\n  const dirSeq = elements['00041220'].value;\n\n  if (dirSeq.length === 0) {\n    logger.warn('The Directory Record Sequence of the DICOMDIR is empty.');\n    return undefined;\n  }\n\n  const records = [];\n  let series = null;\n  let study = null;\n  for (let i = 0; i < dirSeq.length; ++i) {\n    // Directory Record Type\n    if (typeof dirSeq[i]['00041430'] === 'undefined' ||\n      typeof dirSeq[i]['00041430'].value === 'undefined') {\n      continue;\n    }\n    const recType = dirSeq[i]['00041430'].value[0];\n\n    // supposed to come in order...\n    if (recType === 'STUDY') {\n      study = [];\n      records.push(study);\n    } else if (recType === 'SERIES') {\n      series = [];\n      study.push(series);\n    } else if (recType === 'IMAGE') {\n      // Referenced File ID\n      if (typeof dirSeq[i]['00041500'] === 'undefined' ||\n        typeof dirSeq[i]['00041500'].value === 'undefined') {\n        continue;\n      }\n      const refFileIds = dirSeq[i]['00041500'].value;\n      // join ids\n      series.push(refFileIds.join('/'));\n    }\n  }\n  return records;\n}\n\n/**\n * Methods used to extract values from DICOM elements.\n *\n * Implemented as class and method to allow for override via its prototype.\n */\nexport class TagValueExtractor {\n  /**\n   * Get the time.\n   *\n   * @param {Object<string, DataElement>} _elements The DICOM elements.\n   * @returns {number|undefined} The time value if available.\n   */\n  getTime(_elements) {\n    // default returns undefined\n    return undefined;\n  }\n}\n","import {Size} from './size';\nimport {Geometry} from './geometry';\nimport {RescaleSlopeAndIntercept} from './rsi';\nimport {WindowLevel} from './windowLevel';\nimport {Image} from './image';\nimport {luts} from './luts';\nimport {\n  isJpeg2000TransferSyntax,\n  isJpegBaselineTransferSyntax,\n  isJpegLosslessTransferSyntax\n} from '../dicom/dicomParser';\nimport {\n  getImage2DSize,\n  getPixelSpacing,\n  getPixelUnit,\n  TagValueExtractor,\n  getSuvFactor,\n  getOrientationMatrix\n} from '../dicom/dicomElementsWrapper';\nimport {Point3D} from '../math/point';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from '../dicom/dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * @typedef {Object<string, DataElement>} DataElements\n */\n\n/**\n * {@link Image} factory.\n */\nexport class ImageFactory {\n\n  /**\n   * Possible warning created by checkElements.\n   *\n   * @type {string|undefined}\n   */\n  #warning;\n\n  /**\n   * The PET SUV factor.\n   *\n   * @type {number|undefined}\n   */\n  #suvFactor;\n\n  /**\n   * Get a warning string if elements are not as expected.\n   * Created by checkElements.\n   *\n   * @returns {string|undefined} The warning.\n   */\n  getWarning() {\n    return this.#warning;\n  }\n\n  /**\n   * Check dicom elements. Throws an error if not suitable.\n   *\n   * @param {DataElements} dataElements The DICOM data elements.\n   * @returns {string|undefined} A possible warning.\n   */\n  checkElements(dataElements) {\n    // reset\n    this.#warning = undefined;\n    // will throw if columns or rows is not defined\n    getImage2DSize(dataElements);\n    // check PET SUV\n    let modality;\n    const element = dataElements['00080060'];\n    if (typeof element !== 'undefined') {\n      modality = element.value[0];\n      if (modality === 'PT') {\n        const suvFactor = getSuvFactor(dataElements);\n        this.#suvFactor = suvFactor.value;\n        this.#warning = suvFactor.warning;\n      }\n    }\n\n    return this.#warning;\n  }\n\n  /**\n   * Get an {@link Image} object from the read DICOM file.\n   *\n   * @param {DataElements} dataElements The DICOM tags.\n   * @param {Uint8Array | Int8Array |\n   *   Uint16Array | Int16Array |\n   *   Uint32Array | Int32Array} pixelBuffer The pixel buffer.\n   * @param {number} numberOfFiles The input number of files.\n   * @returns {Image} A new Image.\n   */\n  create(dataElements, pixelBuffer, numberOfFiles) {\n    const size2D = getImage2DSize(dataElements);\n    const sizeValues = [size2D[0], size2D[1], 1];\n\n    // NumberOfFrames\n    const numberOfFramesEl = dataElements['00280008'];\n    if (typeof numberOfFramesEl !== 'undefined') {\n      const number = parseInt(numberOfFramesEl.value[0], 10);\n      if (number > 1) {\n        sizeValues.push(number);\n      }\n    }\n\n    // image size\n    const size = new Size(sizeValues);\n\n    // image spacing\n    const spacing = getPixelSpacing(dataElements);\n\n    // TransferSyntaxUID\n    const syntax = dataElements['00020010'].value[0];\n    const jpeg2000 = isJpeg2000TransferSyntax(syntax);\n    const jpegBase = isJpegBaselineTransferSyntax(syntax);\n    const jpegLoss = isJpegLosslessTransferSyntax(syntax);\n\n    // ImagePositionPatient\n    const imagePositionPatient = dataElements['00200032'];\n    // slice position\n    let slicePosition = new Array(0, 0, 0);\n    if (typeof imagePositionPatient !== 'undefined') {\n      slicePosition = [\n        parseFloat(imagePositionPatient.value[0]),\n        parseFloat(imagePositionPatient.value[1]),\n        parseFloat(imagePositionPatient.value[2])\n      ];\n    }\n\n    // Image orientation patient\n    const orientationMatrix = getOrientationMatrix(dataElements);\n\n    // geometry\n    const origin = new Point3D(\n      slicePosition[0], slicePosition[1], slicePosition[2]);\n    const extractor = new TagValueExtractor();\n    const time = extractor.getTime(dataElements);\n    const geometry = new Geometry(\n      origin, size, spacing, orientationMatrix, time);\n\n    // SOP Instance UID\n    let sopInstanceUid;\n    const siu = dataElements['00080018'];\n    if (typeof siu !== 'undefined') {\n      sopInstanceUid = siu.value[0];\n    }\n\n    // Sample per pixels\n    let samplesPerPixel = 1;\n    const spp = dataElements['00280002'];\n    if (typeof spp !== 'undefined') {\n      samplesPerPixel = spp.value[0];\n    }\n\n    // check buffer size\n    const bufferSize = size.getTotalSize() * samplesPerPixel;\n    if (bufferSize !== pixelBuffer.length) {\n      logger.warn('Badly sized pixel buffer: ' +\n        pixelBuffer.length + ' != ' + bufferSize);\n      if (bufferSize < pixelBuffer.length) {\n        pixelBuffer = pixelBuffer.slice(0, size.getTotalSize());\n      } else {\n        throw new Error('Underestimated buffer size, can\\'t fix it...');\n      }\n    }\n\n    // image\n    const image = new Image(geometry, pixelBuffer, [sopInstanceUid]);\n    // PhotometricInterpretation\n    const photometricInterpretation = dataElements['00280004'];\n    if (typeof photometricInterpretation !== 'undefined') {\n      let photo = photometricInterpretation.value[0].toUpperCase();\n      // jpeg decoders output RGB data\n      if ((jpeg2000 || jpegBase || jpegLoss) &&\n        (photo !== 'MONOCHROME1' && photo !== 'MONOCHROME2')) {\n        photo = 'RGB';\n      }\n      // check samples per pixels\n      if (photo === 'RGB' && samplesPerPixel === 1) {\n        photo = 'PALETTE COLOR';\n      }\n      image.setPhotometricInterpretation(photo);\n    }\n    // PlanarConfiguration\n    const planarConfiguration = dataElements['00280006'];\n    if (typeof planarConfiguration !== 'undefined') {\n      image.setPlanarConfiguration(planarConfiguration.value[0]);\n    }\n\n    // rescale slope and intercept\n    let slope = 1;\n    // RescaleSlope\n    const rescaleSlope = dataElements['00281053'];\n    if (typeof rescaleSlope !== 'undefined') {\n      const value = parseFloat(rescaleSlope.value[0]);\n      if (!isNaN(value)) {\n        slope = value;\n      }\n    }\n    let intercept = 0;\n    // RescaleIntercept\n    const rescaleIntercept = dataElements['00281052'];\n    if (typeof rescaleIntercept !== 'undefined') {\n      const value = parseFloat(rescaleIntercept.value[0]);\n      if (!isNaN(value)) {\n        intercept = value;\n      }\n    }\n\n    // meta information\n    const meta = {\n      numberOfFiles: numberOfFiles\n    };\n\n    // Modality\n    const modality = dataElements['00080060'];\n    if (typeof modality !== 'undefined') {\n      meta.Modality = modality.value[0];\n    }\n\n    // PET SUV\n    let isPetWithSuv = false;\n    let intensityFactor = 1;\n    if (typeof this.#suvFactor !== 'undefined') {\n      isPetWithSuv = true;\n      intensityFactor = this.#suvFactor;\n      logger.info('Applying PET SUV calibration: ' + intensityFactor);\n      slope *= intensityFactor;\n      intercept *= intensityFactor;\n    }\n    const rsi = new RescaleSlopeAndIntercept(slope, intercept);\n    image.setRescaleSlopeAndIntercept(rsi);\n\n    const safeGet = function (key) {\n      let res;\n      const element = dataElements[key];\n      if (typeof element !== 'undefined') {\n        res = element.value[0];\n      }\n      return res;\n    };\n\n    // defaults\n    meta.TransferSyntaxUID = safeGet('00020010');\n    meta.MediaStorageSOPClassUID = safeGet('00020002');\n    meta.SOPClassUID = safeGet('00080016');\n    meta.Modality = safeGet('00080060');\n    meta.ImageType = safeGet('00080008');\n    meta.SamplesPerPixel = safeGet('00280002');\n    meta.PhotometricInterpretation = safeGet('00280004');\n    meta.PixelRepresentation = safeGet('00280103');\n    meta.BitsAllocated = safeGet('00280100');\n    meta.BitsStored = safeGet('00280101');\n    meta.HighBit = safeGet('00280102');\n\n    // Study\n    meta.StudyDate = safeGet('00080020');\n    meta.StudyTime = safeGet('00080030');\n    meta.StudyInstanceUID = safeGet('0020000D');\n    meta.StudyID = safeGet('00200010');\n    // Series\n    meta.SeriesInstanceUID = safeGet('0020000E');\n    meta.SeriesNumber = safeGet('00200011');\n    // ReferringPhysicianName\n    meta.ReferringPhysicianName = safeGet('00080090');\n    // patient info\n    meta.PatientName = safeGet('00100010');\n    meta.PatientID = safeGet('00100020');\n    meta.PatientBirthDate = safeGet('00100030');\n    meta.PatientSex = safeGet('00100040');\n    // General Equipment Module\n    meta.Manufacturer = safeGet('00080070');\n    meta.ManufacturerModelName = safeGet('00081090');\n    meta.DeviceSerialNumber = safeGet('00181000');\n    meta.SoftwareVersions = safeGet('00181020');\n\n    meta.ImageOrientationPatient = safeGet('00200037');\n    meta.FrameOfReferenceUID = safeGet('00200052');\n\n    // PixelRepresentation -> is signed\n    meta.IsSigned = meta.PixelRepresentation === 1;\n    // local pixel unit\n    if (isPetWithSuv) {\n      meta.pixelUnit = 'SUV';\n    } else {\n      const pixelUnit = getPixelUnit(dataElements);\n      if (typeof pixelUnit !== 'undefined') {\n        meta.pixelUnit = pixelUnit;\n      }\n    }\n    // window level presets\n    const windowPresets = {};\n    const windowCenter = dataElements['00281050'];\n    const windowWidth = dataElements['00281051'];\n    const windowCWExplanation = dataElements['00281055'];\n    if (typeof windowCenter !== 'undefined' &&\n      typeof windowWidth !== 'undefined') {\n      let name;\n      for (let j = 0; j < windowCenter.value.length; ++j) {\n        const center = parseFloat(windowCenter.value[j]);\n        let width = parseFloat(windowWidth.value[j]);\n        if (center && width && width !== 0) {\n          name = '';\n          if (typeof windowCWExplanation !== 'undefined') {\n            name = windowCWExplanation.value[j];\n          }\n          if (name === '') {\n            name = 'Default' + j;\n          }\n          width *= intensityFactor;\n          if (width < 1) {\n            width = 1;\n          }\n          windowPresets[name] = {\n            wl: [new WindowLevel(\n              center * intensityFactor,\n              width\n            )],\n            name: name\n          };\n        }\n        if (width === 0) {\n          logger.warn('Zero window width found in DICOM.');\n        }\n      }\n    }\n    meta.windowPresets = windowPresets;\n\n    // PALETTE COLOR luts\n    if (image.getPhotometricInterpretation() === 'PALETTE COLOR') {\n      // Red Palette Color Lookup Table Data\n      const redLutElement = dataElements['00281201'];\n      // Green Palette Color Lookup Table Data\n      const greenLutElement = dataElements['00281202'];\n      // Blue Palette Color Lookup Table Data\n      const blueLutElement = dataElements['00281203'];\n      let redLut;\n      let greenLut;\n      let blueLut;\n      // check red palette descriptor (should all be equal)\n      // Red Palette Color Lookup Table Descriptor\n      // 0: number of entries in the lookup table\n      // 1: first input value mapped\n      // 2: number of bits for each entry in the Lookup Table Data (8 or 16)\n      const descriptor = dataElements['00281101'];\n      if (typeof descriptor !== 'undefined' &&\n        descriptor.value.length === 3) {\n        if (descriptor.value[2] === 16) {\n          let doScale = false;\n          // (C.7.6.3.1.5 Palette Color Lookup Table Descriptor)\n          // Some implementations have encoded 8 bit entries with 16 bits\n          // allocated, padding the high bits;\n          let descSize = descriptor.value[0];\n          // (C.7.6.3.1.5 Palette Color Lookup Table Descriptor)\n          // The first Palette Color Lookup Table Descriptor value is the\n          // number of entries in the lookup table. When the number of table\n          // entries is equal to 216 then this value shall be 0.\n          if (descSize === 0) {\n            descSize = 65536;\n          }\n          // red palette VL\n          // TODO vl is undefined, find info elsewhere...\n          const vlSize = redLutElement.vl;\n          // check double size\n          if (vlSize !== 2 * descSize) {\n            doScale = true;\n            logger.info('16bits lut but size is not double. desc: ' +\n              descSize + ' vl: ' + vlSize);\n          }\n          // (C.7.6.3.1.6 Palette Color Lookup Table Data)\n          // Palette color values must always be scaled across the full\n          // range of available intensities\n          const bitsAllocated = parseInt(\n            dataElements['00280100'].value[0], 10);\n          if (bitsAllocated === 8) {\n            doScale = true;\n            logger.info(\n              'Scaling 16bits color lut since bits allocated is 8.');\n          }\n\n          if (doScale) {\n            const scaleTo8 = function (value) {\n              return value >> 8;\n            };\n\n            redLut = redLutElement.value.map(scaleTo8);\n            greenLut = greenLutElement.value.map(scaleTo8);\n            blueLut = blueLutElement.value.map(scaleTo8);\n          }\n        } else if (descriptor.value[2] === 8) {\n          // lut with vr=OW was read as Uint16, convert it to Uint8\n          logger.info(\n            'Scaling 16bits color lut since the lut descriptor is 8.');\n          let clone = redLutElement.value.slice(0);\n          // @ts-expect-error\n          redLut = Array.from(new Uint8Array(clone.buffer));\n          clone = greenLutElement.value.slice(0);\n          // @ts-expect-error\n          greenLut = Array.from(new Uint8Array(clone.buffer));\n          clone = blueLutElement.value.slice(0);\n          // @ts-expect-error\n          blueLut = Array.from(new Uint8Array(clone.buffer));\n        }\n      }\n      // set the palette\n      luts['palette'] = {\n        red: redLut,\n        green: greenLut,\n        blue: blueLut\n      };\n    }\n\n    // RecommendedDisplayFrameRate\n    const recommendedDisplayFrameRate = dataElements['00082144'];\n    if (typeof recommendedDisplayFrameRate !== 'undefined') {\n      meta.RecommendedDisplayFrameRate = parseInt(\n        recommendedDisplayFrameRate.value[0], 10);\n    }\n\n    // store the meta data\n    image.setMeta(meta);\n\n    return image;\n  }\n\n}","/**\n * Data writer.\n */\nexport class DataWriter {\n\n  /**\n   * Is the endianness Little Endian.\n   *\n   * @type {boolean}\n   */\n  #isLittleEndian = true;\n\n  /**\n   * The main data view.\n   *\n   * @type {DataView}\n   */\n  #view;\n\n  /**\n   * @param {ArrayBuffer} buffer The input array buffer.\n   * @param {boolean} [isLittleEndian] Flag to tell if the data is\n   *   little or big endian.\n   */\n  constructor(buffer, isLittleEndian) {\n    // Set endian flag if not defined.\n    if (typeof isLittleEndian !== 'undefined') {\n      this.#isLittleEndian = isLittleEndian;\n    }\n    this.#view = new DataView(buffer);\n  }\n\n  /**\n   * Write Uint8 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint8(byteOffset, value) {\n    this.#view.setUint8(byteOffset, value);\n    return byteOffset + Uint8Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Int8 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt8(byteOffset, value) {\n    this.#view.setInt8(byteOffset, value);\n    return byteOffset + Int8Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Uint16 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint16(byteOffset, value) {\n    this.#view.setUint16(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Uint16Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Int16 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt16(byteOffset, value) {\n    this.#view.setInt16(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Int16Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Uint32 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint32(byteOffset, value) {\n    this.#view.setUint32(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Uint32Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Uint64 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {bigint} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint64(byteOffset, value) {\n    this.#view.setBigUint64(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + BigUint64Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Int32 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt32(byteOffset, value) {\n    this.#view.setInt32(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Int32Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Int64 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {bigint} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt64(byteOffset, value) {\n    this.#view.setBigInt64(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + BigInt64Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Float32 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeFloat32(byteOffset, value) {\n    this.#view.setFloat32(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Float32Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Float64 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeFloat64(byteOffset, value) {\n    this.#view.setFloat64(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Float64Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write string data of length 4 as hexadecimal (no '0x' prefix).\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {string} str The hexadecimal string to write ('####').\n   * @returns {number} The new offset position.\n   */\n  writeHex(byteOffset, str) {\n    // remove first two chars and parse\n    const value = parseInt(str, 16);\n    this.#view.setUint16(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Uint16Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write a boolean array as binary.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeBinaryArray(byteOffset, array) {\n    if (array.length % 8 !== 0) {\n      throw new Error('Cannot write boolean array as binary.');\n    }\n    let byte = null;\n    let val = null;\n    for (let i = 0, len = array.length; i < len; i += 8) {\n      byte = 0;\n      for (let j = 0; j < 8; ++j) {\n        val = array[i + j] === 0 ? 0 : 1;\n        byte += val << j;\n      }\n      byteOffset = this.writeUint8(byteOffset, byte);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Uint8 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array|Uint8Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint8Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeUint8(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Int8 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt8Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeInt8(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Uint16 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint16Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeUint16(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Int16 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt16Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeInt16(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Uint32 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint32Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeUint32(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Uint64 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint64Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeUint64(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Int32 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt32Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeInt32(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Int64 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt64Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeInt64(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Float32 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeFloat32Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeFloat32(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Float64 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeFloat64Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeFloat64(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n} // class DataWriter\n","import {\n  is32bitVLVR,\n  isCharSetStringVR,\n  vrTypes\n} from './dictionary';\nimport {\n  Tag,\n  getTagFromDictionary,\n  getTagFromKey,\n  getItemTag,\n  getItemDelimitationItemTag,\n  getSequenceDelimitationItemTag,\n  getFileMetaInformationGroupLengthTag,\n  isPixelDataTag,\n  isItemTag,\n  isItemDelimitationItemTag,\n  tagCompareFunction\n} from './dicomTag';\nimport {\n  getDwvVersion,\n  isImplicitTransferSyntax,\n  isBigEndianTransferSyntax,\n  getDataElementPrefixByteSize\n} from './dicomParser';\nimport {DataElement} from './dataElement';\nimport {DataWriter} from './dataWriter';\nimport {DataReader} from './dataReader';\nimport {logger} from '../utils/logger';\n\n/**\n * Get the dwv UID prefix.\n * Issued by Medical Connections Ltd (www.medicalconnections.co.uk)\n *   on 25/10/2017.\n *\n * @returns {string} The dwv UID prefix.\n */\nfunction getDwvUIDPrefix() {\n  return '1.2.826.0.1.3680043.9.7278.1';\n}\n\n// local generated uid counter\nlet _uidCount = 0;\n\n/**\n * Writer rule.\n */\nexport class WriterRule {\n  /**\n   * Rule action: `copy`, `remove`, `clear` or `replace`.\n   *\n   * @type {string}\n   */\n  action;\n  /**\n   * Optional value to use for replace action.\n   *\n   * @type {any|undefined}\n   */\n  value;\n\n  /**\n   * @param {string} action The rule action.\n   */\n  constructor(action) {\n    this.action = action;\n  }\n}\n\n/**\n * Possible writer actions.\n *\n * @type {Object<string, Function>}\n */\nconst writerActions = {\n  copy: function (item) {\n    return item;\n  },\n  remove: function () {\n    return null;\n  },\n  clear: function (item) {\n    item.value = [];\n    return item;\n  },\n  replace: function (item, value) {\n    item.value = [value];\n    return item;\n  }\n};\n\n/**\n * Get simple (non official) DICOM anonymisation rules.\n *\n * @returns {Object<string, WriterRule>} The rules.\n */\nexport function getDefaultAnonymisationRules() {\n  return {\n    default: {action: 'copy', value: null},\n    PatientName: {action: 'replace', value: 'Anonymized'}, // tag\n    'Meta Element': {action: 'copy', value: null}, // group '0002'\n    Acquisition: {action: 'copy', value: null}, // group '0018'\n    'Image Presentation': {action: 'copy', value: null}, // group '0028'\n    Procedure: {action: 'copy', value: null}, // group '0040'\n    'Pixel Data': {action: 'copy', value: null} // group '7fe0'\n  };\n}\n\n/**\n * Get a UID for a DICOM tag.\n *\n * Note: Use {@link https://github.com/uuidjs/uuid}?\n *\n * Ref:\n * - {@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/chapter_9.html},\n * - {@link http://dicomiseasy.blogspot.com/2011/12/chapter-4-dicom-objects-in-chapter-3.html},\n * - {@link https://stackoverflow.com/questions/46304306/how-to-generate-unique-dicom-uid}.\n *\n * @param {string} tagName The input tag.\n * @returns {string} The corresponding UID.\n */\nexport function getUID(tagName) {\n  const prefix = getDwvUIDPrefix() + '.';\n  let uid = '';\n  if (tagName === 'ImplementationClassUID') {\n    uid = prefix + getDwvVersion();\n  } else {\n    // date (only numbers), do not keep milliseconds\n    const date = (new Date()).toISOString().replace(/\\D/g, '');\n    const datePart = '.' + date.substring(0, 14);\n    // count\n    _uidCount += 1;\n    const countPart = '.' + _uidCount;\n\n    // uid = prefix . tag . date . count\n    uid = prefix;\n\n    // limit tag part to not exceed 64 length\n    const nonTagLength = prefix.length + countPart.length + datePart.length;\n    const leni = Math.min(tagName.length, 64 - nonTagLength);\n    if (leni > 1) {\n      let tagNumber = '';\n      for (let i = 0; i < leni; ++i) {\n        tagNumber += tagName.charCodeAt(i);\n      }\n      uid += tagNumber.substring(0, leni);\n    }\n\n    // finish\n    uid += datePart + countPart;\n  }\n  return uid;\n}\n\n/**\n * Return true if the input number is even.\n *\n * @param {number} number The number to check.\n * @returns {boolean} True is the number is even.\n */\nfunction isEven(number) {\n  return number % 2 === 0;\n}\n\n/**\n * Is the input VR a VR that stores data in a typed array.\n * TODO: include ox and xs?\n *\n * @param {string} vr The element VR.\n * @returns {boolean} True if the VR is a typed array one.\n */\nfunction isTypedArrayVr(vr) {\n  const vrType = vrTypes[vr];\n  return typeof vrType !== 'undefined' &&\n    vrType !== 'string';\n}\n\n/**\n * Is the input VR a string VR.\n *\n * @param {string} vr The element VR.\n * @returns {boolean} True if the VR is a string one.\n */\nfunction isStringVr(vr) {\n  const vrType = vrTypes[vr];\n  return typeof vrType !== 'undefined' &&\n    vrType === 'string';\n}\n\n/**\n * Is the input VR a VR that could need padding.\n *\n * See {@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_6.2.html}.\n *\n * @param {string} vr The element VR.\n * @returns {boolean} True if the VR needs padding.\n */\nfunction isVrToPad(vr) {\n  return isStringVr(vr) || vr === 'OB';\n}\n\n/**\n * Get the VR specific padding value.\n *\n * @param {string} vr The element VR.\n * @returns {string} The value used to pad.\n */\nfunction getVrPad(vr) {\n  let pad = '';\n  if (isStringVr(vr)) {\n    if (vr === 'UI') {\n      pad = '\\0';\n    } else {\n      pad = ' ';\n    }\n  }\n  return pad;\n}\n\n/**\n * Push a value at the end of an input Uint8Array.\n *\n * @param {Array|Uint8Array} arr The input array.\n * @param {Array|Uint8Array} value The value to push.\n * @returns {Uint8Array} The new array.\n */\nfunction uint8ArrayPush(arr, value) {\n  const newArr = new Uint8Array(arr.length + 1);\n  newArr.set(arr);\n  newArr.set(value, arr.length);\n  return newArr;\n}\n\n/**\n * Pad an input OB value.\n *\n * @param {Array|Uint8Array} value The input value.\n * @returns {Array|Uint8Array} The padded input.\n */\nfunction padOBValue(value) {\n  if (value !== null &&\n    typeof value !== 'undefined' &&\n    typeof value.length !== 'undefined') {\n    // calculate size and pad if needed\n    if (value.length !== 0 &&\n      typeof value[0].length !== 'undefined') {\n      // handle array of array\n      let size = 0;\n      for (let i = 0; i < value.length; ++i) {\n        size += value[i].length;\n      }\n      if (!isEven(size)) {\n        value[value.length - 1] = uint8ArrayPush(\n          value[value.length - 1], [0]);\n      }\n    } else {\n      if (!isEven(value.length)) {\n        value = uint8ArrayPush(value, [0]);\n      }\n    }\n  } else {\n    throw new Error('Cannot pad undefined or null OB value.');\n  }\n  // uint8ArrayPush may create a new array so we\n  // need to return it\n  return value;\n}\n\n/**\n * Helper method to flatten an array of typed arrays to 2D typed array.\n *\n * @param {Array} initialArray Array of typed arrays.\n * @returns {object} A typed array containing all values.\n */\nfunction flattenArrayOfTypedArrays(initialArray) {\n  const initialArrayLength = initialArray.length;\n  const arrayLength = initialArray[0].length;\n  // If this is not a array of arrays, just return the initial one:\n  if (typeof arrayLength === 'undefined') {\n    return initialArray;\n  }\n\n  const flattenendArrayLength = initialArrayLength * arrayLength;\n\n  const flattenedArray = new initialArray[0].constructor(flattenendArrayLength);\n\n  for (let i = 0; i < initialArrayLength; i++) {\n    const indexFlattenedArray = i * arrayLength;\n    flattenedArray.set(initialArray[i], indexFlattenedArray);\n  }\n  return flattenedArray;\n}\n\n/**\n * Default text encoder.\n */\nclass DefaultTextEncoder {\n  /**\n   * Encode an input string.\n   *\n   * @param {string} str The string to encode.\n   * @returns {Uint8Array} The encoded string.\n   */\n  encode(str) {\n    const result = new Uint8Array(str.length);\n    for (let i = 0, leni = str.length; i < leni; ++i) {\n      result[i] = str.charCodeAt(i);\n    }\n    return result;\n  }\n}\n\n/**\n * Small list of used tag keys.\n */\nconst TagKeys = {\n  TransferSyntax: '00020010',\n  SpecificCharacterSet: '00080005',\n  BitsAllocated: '00280100',\n};\n\n/**\n * DICOM writer.\n *\n * @example\n * // add link to html\n * const link = document.createElement(\"a\");\n * link.appendChild(document.createTextNode(\"download\"));\n * const div = document.getElementById(\"dwv\");\n * div.appendChild(link);\n * // XMLHttpRequest onload callback\n * const onload = function (event) {\n *   const parser = new dwv.DicomParser();\n *   parser.parse(event.target.response);\n *   // create writer\n *   const writer = new dwv.DicomWriter();\n *   // get buffer using default rules\n *   const dicomBuffer = writer.getBuffer(parser.getDicomElements());\n *   // create blob\n *   const blob = new Blob([dicomBuffer], {type: 'application/dicom'});\n *   // add blob to download link\n *   link.href = URL.createObjectURL(blob);\n *   link.download = \"anonym.dcm\";\n * };\n * // DICOM file request\n * const request = new XMLHttpRequest();\n * const url = 'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm';\n * request.open('GET', url);\n * request.responseType = 'arraybuffer';\n * request.onload = onload;\n * request.send();\n */\nexport class DicomWriter {\n\n  /**\n   * Flag to use VR=UN for private sequences, default to false\n   * (mainly used in tests).\n   *\n   * @type {boolean}\n   */\n  #useUnVrForPrivateSq = false;\n\n  /**\n   * Flag to activate or not the vr=UN tag check and fix\n   * if present in the dictionary. Default to true.\n   *\n   * @type {boolean}\n   */\n  #fixUnknownVR = true;\n\n  /**\n   * Default rules: just copy.\n   *\n   * @type {Object<string, WriterRule>}\n   */\n  #defaultRules = {\n    default: {action: 'copy', value: null}\n  };\n\n  /**\n   * Writing rules.\n   *\n   * @type {Object<string, WriterRule>}\n   */\n  #rules = this.#defaultRules;\n\n  /**\n   * List of compulsory tags keys.\n   *\n   * @type {string[]}\n   */\n  #compulsoryTags = [];\n\n  /**\n   * Default text encoder.\n   *\n   * @type {DefaultTextEncoder}\n   */\n  #defaultTextEncoder = new DefaultTextEncoder();\n\n  /**\n   * Special text encoder.\n   *\n   * @type {DefaultTextEncoder|TextEncoder}\n   */\n  #textEncoder = this.#defaultTextEncoder;\n\n  /**\n   * Set the use UN VR for private sequence flag.\n   *\n   * @param {boolean} flag True to use UN VR.\n   */\n  setUseUnVrForPrivateSq(flag) {\n    this.#useUnVrForPrivateSq = flag;\n  }\n\n  /**\n   * Set the vr=UN check and fix flag.\n   *\n   * @param {boolean} flag True to activate the check and fix.\n   */\n  setFixUnknownVR(flag) {\n    this.#fixUnknownVR = flag;\n  }\n\n  /**\n   * Set the writing rules.\n   * List of writer rules indexed by either `default`,\n   *   tagKey, tagName or groupName.\n   * Each DICOM element will be checked to see if a rule is applicable.\n   * First checked by tagKey, tagName and then by groupName,\n   * if nothing is found the default rule is applied.\n   *\n   * @param {Object<string, WriterRule>} rules The input rules.\n   * @param {boolean} [addMissingTags] If true, explicit tags that\n   *   have replace rule and a value will be\n   *   added if missing. Defaults to false.\n   */\n  setRules(rules, addMissingTags) {\n    this.#rules = rules;\n\n    // default compulsory list is empty\n    this.#compulsoryTags = [];\n\n    // use replace rule tags as compulsory tags\n    if (addMissingTags) {\n      const keys = Object.keys(rules);\n      for (const key of keys) {\n        const rule = rules[key];\n        if (rule.action === 'replace' &&\n          typeof rule.value !== 'undefined' &&\n          rule.value !== null) {\n          // check if key really exists\n          let isKey = false;\n          if (key.length === 8) {\n            const tag = getTagFromKey(key);\n            isKey = typeof tag.getNameFromDictionary() !== 'undefined';\n          }\n          // get tag key, rules can use key or tag name\n          let tagKey;\n          if (isKey) {\n            tagKey = key;\n          } else {\n            // try tag name\n            const tag = getTagFromDictionary(key);\n            if (typeof tag !== 'undefined') {\n              tagKey = tag.getKey();\n            }\n          }\n          // add to list\n          if (typeof tagKey !== 'undefined') {\n            this.#compulsoryTags.push(tagKey);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Encode string data.\n   *\n   * @param {string} str The string to encode.\n   * @returns {Uint8Array} The encoded string.\n   */\n  #encodeString(str) {\n    return this.#defaultTextEncoder.encode(str);\n  }\n\n  /**\n   * Encode data as a UTF-8.\n   *\n   * @param {string} str The string to write.\n   * @returns {Uint8Array} The encoded string.\n   */\n  #encodeSpecialString(str) {\n    return this.#textEncoder.encode(str);\n  }\n\n  /**\n   * Use a TextEncoder instead of the default text decoder.\n   */\n  useSpecialTextEncoder() {\n    /**\n     * The text encoder.\n     *\n     * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/API/TextEncoder}.\n     *\n     * @external TextEncoder\n     */\n    this.#textEncoder = new TextEncoder();\n  }\n\n  /**\n   * Get the element to write according to the class rules.\n   * Priority order: tagName, groupName, default.\n   *\n   * @param {DataElement} element The element to check.\n   * @returns {DataElement|null} The element to write, can be null.\n   */\n  getElementToWrite(element) {\n    // get group and tag string name\n    const groupName = element.tag.getGroupName();\n    const tagName = element.tag.getNameFromDictionary();\n\n    // apply rules:\n    let rule;\n    if (typeof this.#rules[element.tag.getKey()] !== 'undefined') {\n      // 1. tag itself\n      rule = this.#rules[element.tag.getKey()];\n    } else if (typeof tagName !== 'undefined' &&\n      typeof this.#rules[tagName] !== 'undefined') {\n      // 2. tag name\n      rule = this.#rules[tagName];\n    } else if (typeof this.#rules[groupName] !== 'undefined') {\n      // 3. group name\n      rule = this.#rules[groupName];\n    } else {\n      // 4. default\n      rule = this.#rules['default'];\n    }\n    // apply action on element and return\n    return writerActions[rule.action](element, rule.value);\n  }\n\n  /**\n   * Write a list of items.\n   *\n   * @param {DataWriter} writer The raw data writer.\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} items The list of items to write.\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\n   * @returns {number} The new offset position.\n   */\n  #writeDataElementItems(\n    writer, byteOffset, items, isImplicit) {\n    let item;\n    for (let i = 0; i < items.length; ++i) {\n      item = items[i];\n      if (item.length === 0) {\n        continue;\n      }\n      // item element (create new to not modify original)\n      let undefinedLength = false;\n      const itemTag = item.find((subItem) => isItemTag(subItem.tag));\n      if (typeof itemTag !== 'undefined' &&\n        typeof itemTag.undefinedLength !== 'undefined') {\n        undefinedLength = itemTag.undefinedLength;\n      }\n      const itemElement = new DataElement('NONE');\n      itemElement.vl = undefinedLength ? 0xffffffff : itemTag.vl,\n      itemElement.tag = getItemTag();\n      itemElement.value = [];\n      byteOffset = this.#writeDataElement(\n        writer, itemElement, byteOffset, isImplicit);\n      // write rest\n      for (const subItem of item) {\n        if (!isItemTag(subItem.tag) &&\n          !isItemDelimitationItemTag(subItem.tag)) {\n          byteOffset = this.#writeDataElement(\n            writer, subItem, byteOffset, isImplicit);\n        }\n      }\n      // item delimitation\n      if (undefinedLength) {\n        const itemDelimElement = new DataElement('NONE');\n        itemDelimElement.vl = 0;\n        itemDelimElement.tag = getItemDelimitationItemTag();\n        itemDelimElement.value = [];\n        byteOffset = this.#writeDataElement(\n          writer, itemDelimElement, byteOffset, isImplicit);\n      }\n    }\n\n    // return new offset\n    return byteOffset;\n  }\n\n  /**\n   * Write data with a specific Value Representation (VR).\n   *\n   * @param {DataWriter} writer The raw data writer.\n   * @param {DataElement} element The element to write.\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} value The array to write.\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\n   * @returns {number} The new offset position.\n   */\n  #writeDataElementValue(\n    writer, element, byteOffset, value, isImplicit) {\n\n    const startOffset = byteOffset;\n\n    if (element.vr === 'NONE') {\n      // nothing to do!\n    } else if (value instanceof Uint8Array) {\n      // binary data has been expanded 8 times at read\n      if (value.length === 8 * element.vl) {\n        byteOffset = writer.writeBinaryArray(byteOffset, value);\n      } else {\n        byteOffset = writer.writeUint8Array(byteOffset, value);\n      }\n    } else if (value instanceof Int8Array) {\n      byteOffset = writer.writeInt8Array(byteOffset, value);\n    } else if (value instanceof Uint16Array) {\n      byteOffset = writer.writeUint16Array(byteOffset, value);\n    } else if (value instanceof Int16Array) {\n      byteOffset = writer.writeInt16Array(byteOffset, value);\n    } else if (value instanceof Uint32Array) {\n      byteOffset = writer.writeUint32Array(byteOffset, value);\n    } else if (value instanceof Int32Array) {\n      byteOffset = writer.writeInt32Array(byteOffset, value);\n    } else if (value instanceof BigUint64Array) {\n      byteOffset = writer.writeUint64Array(byteOffset, value);\n    } else if (value instanceof BigInt64Array) {\n      byteOffset = writer.writeInt64Array(byteOffset, value);\n    } else {\n      // switch according to VR if input type is undefined\n      const vrType = vrTypes[element.vr];\n      if (typeof vrType !== 'undefined') {\n        if (vrType === 'Uint8') {\n          byteOffset = writer.writeUint8Array(byteOffset, value);\n        } else if (vrType === 'Uint16') {\n          byteOffset = writer.writeUint16Array(byteOffset, value);\n        } else if (vrType === 'Int16') {\n          byteOffset = writer.writeInt16Array(byteOffset, value);\n        } else if (vrType === 'Uint32') {\n          byteOffset = writer.writeUint32Array(byteOffset, value);\n        } else if (vrType === 'Int32') {\n          byteOffset = writer.writeInt32Array(byteOffset, value);\n        } else if (vrType === 'Uint64') {\n          byteOffset = writer.writeUint64Array(byteOffset, value);\n        } else if (vrType === 'Int64') {\n          byteOffset = writer.writeInt64Array(byteOffset, value);\n        } else if (vrType === 'Float32') {\n          byteOffset = writer.writeFloat32Array(byteOffset, value);\n        } else if (vrType === 'Float64') {\n          byteOffset = writer.writeFloat64Array(byteOffset, value);\n        } else if (vrType === 'string') {\n          byteOffset = writer.writeUint8Array(byteOffset, value);\n        } else {\n          throw new Error('Unknown VR type: ' + vrType);\n        }\n      } else if (element.vr === 'SQ') {\n        byteOffset = this.#writeDataElementItems(\n          writer, byteOffset, value, isImplicit);\n      } else if (element.vr === 'AT') {\n        for (let i = 0; i < value.length; ++i) {\n          const hexString = value[i] + '';\n          const hexString1 = hexString.substring(1, 5);\n          const hexString2 = hexString.substring(6, 10);\n          const dec1 = parseInt(hexString1, 16);\n          const dec2 = parseInt(hexString2, 16);\n          const atValue = [dec1, dec2];\n          byteOffset = writer.writeUint16Array(byteOffset, atValue);\n        }\n      } else if (element.vr === 'xs') {\n        // TODO would be better to use pixelRepresentation in if\n        if (value instanceof Int16Array) {\n          byteOffset = writer.writeInt16Array(byteOffset, value);\n        } else {\n          byteOffset = writer.writeUint16Array(byteOffset, value);\n        }\n      } else {\n        logger.warn('Unknown VR: ' + element.vr);\n      }\n    }\n\n    if (element.vr !== 'SQ' && element.vr !== 'NONE') {\n      const diff = byteOffset - startOffset;\n      if (diff !== element.vl) {\n        let message = 'Offset difference and VL are not equal: ' +\n          diff + ' != ' + element.vl;\n        message += ' (';\n        if (typeof element.tag !== 'undefined') {\n          message += element.tag + ', ';\n        }\n        message += 'vr:' + element.vr + ')';\n        logger.warn(message);\n      }\n    }\n\n    // return new offset\n    return byteOffset;\n  }\n\n  /**\n   * Write a pixel data element.\n   *\n   * @param {DataWriter} writer The raw data writer.\n   * @param {DataElement} element The element to write.\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} value The array to write.\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\n   * @returns {number} The new offset position.\n   */\n  #writePixelDataElementValue(\n    writer, element, byteOffset, value, isImplicit) {\n    // undefined length flag\n    let undefinedLength = false;\n    if (typeof element.undefinedLength !== 'undefined') {\n      undefinedLength = element.undefinedLength;\n    }\n    // explicit length\n    if (!undefinedLength) {\n      let finalValue = value[0];\n      // flatten multi frame\n      if (value.length > 1) {\n        finalValue = flattenArrayOfTypedArrays(value);\n      }\n      // write\n      byteOffset = this.#writeDataElementValue(\n        writer, element, byteOffset, finalValue, isImplicit);\n    } else {\n      // pixel data as sequence\n      const item = {};\n      // first item: basic offset table\n      item['FFFEE000'] = {\n        tag: getItemTag(),\n        vr: 'NONE',\n        vl: 0,\n        value: []\n      };\n      // data\n      for (let i = 0; i < value.length; ++i) {\n        item[i] = {\n          tag: getItemTag(),\n          vr: element.vr,\n          vl: value[i].length,\n          value: value[i]\n        };\n      }\n      // write\n      byteOffset = this.#writeDataElementItems(\n        writer, byteOffset, [item], isImplicit);\n    }\n\n    // return new offset\n    return byteOffset;\n  }\n\n  /**\n   * Write a data element.\n   *\n   * @param {DataWriter} writer The raw data writer.\n   * @param {DataElement} element The DICOM data element to write.\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\n   * @returns {number} The new offset position.\n   */\n  #writeDataElement(\n    writer, element, byteOffset, isImplicit) {\n    const isTagWithVR = element.tag.isWithVR();\n    const is32bitVL = (isImplicit || !isTagWithVR)\n      ? true : is32bitVLVR(element.vr);\n    // group\n    byteOffset = writer.writeHex(byteOffset, element.tag.getGroup());\n    // element\n    byteOffset = writer.writeHex(byteOffset, element.tag.getElement());\n    // VR\n    let vr = element.vr;\n    // use VR=UN for private sequence\n    if (this.#useUnVrForPrivateSq &&\n      element.tag.isPrivate() &&\n      vr === 'SQ') {\n      logger.warn('Write element using VR=UN for private sequence.');\n      vr = 'UN';\n    }\n    if (isTagWithVR && !isImplicit) {\n      byteOffset = writer.writeUint8Array(byteOffset, this.#encodeString(vr));\n      // reserved 2 bytes for 32bit VL\n      if (is32bitVL) {\n        byteOffset += 2;\n      }\n    }\n\n    let undefinedLengthSequence = false;\n    if (element.vr === 'SQ' ||\n      isPixelDataTag(element.tag)) {\n      if (typeof element.undefinedLength !== 'undefined') {\n        undefinedLengthSequence = element.undefinedLength;\n      }\n    }\n    let undefinedLengthItem = false;\n    if (isItemTag(element.tag)) {\n      if (typeof element.undefinedLength !== 'undefined') {\n        undefinedLengthItem = element.undefinedLength;\n      }\n    }\n\n    // update vl for sequence or item with undefined length\n    let vl = element.vl;\n    if (undefinedLengthSequence || undefinedLengthItem) {\n      vl = 0xffffffff;\n    }\n    // VL\n    if (is32bitVL) {\n      byteOffset = writer.writeUint32(byteOffset, vl);\n    } else {\n      byteOffset = writer.writeUint16(byteOffset, vl);\n    }\n\n    // value\n    let value = element.value;\n    // check value\n    if (typeof value === 'undefined') {\n      value = [];\n    }\n    // write\n    if (isPixelDataTag(element.tag)) {\n      byteOffset = this.#writePixelDataElementValue(\n        writer, element, byteOffset, value, isImplicit);\n    } else {\n      byteOffset = this.#writeDataElementValue(\n        writer, element, byteOffset, value, isImplicit);\n    }\n\n    // sequence delimitation item for sequence with undefined length\n    if (undefinedLengthSequence) {\n      const seqDelimElement = new DataElement('NONE');\n      seqDelimElement.vl = 0;\n      seqDelimElement.tag = getSequenceDelimitationItemTag();\n      seqDelimElement.value = [];\n      byteOffset = this.#writeDataElement(\n        writer, seqDelimElement, byteOffset, isImplicit);\n    }\n\n    // return new offset\n    return byteOffset;\n  }\n\n  /**\n   * Get the ArrayBuffer corresponding to input DICOM elements.\n   *\n   * @param {Object<string, DataElement>} dataElements The elements to write.\n   * @returns {ArrayBuffer} The elements as a buffer.\n   */\n  getBuffer(dataElements) {\n    // Transfer Syntax\n    const syntax = dataElements[TagKeys.TransferSyntax].value[0];\n    const isImplicit = isImplicitTransferSyntax(syntax);\n    const isBigEndian = isBigEndianTransferSyntax(syntax);\n    // Specific CharacterSet\n    if (typeof dataElements[TagKeys.SpecificCharacterSet] !== 'undefined') {\n      const oldscs = dataElements[TagKeys.SpecificCharacterSet].value[0];\n      // force UTF-8 if not default character set\n      if (typeof oldscs !== 'undefined' && oldscs !== 'ISO-IR 6') {\n        logger.debug('Change charset to UTF, was: ' + oldscs);\n        this.useSpecialTextEncoder();\n        dataElements[TagKeys.SpecificCharacterSet].value = ['ISO_IR 192'];\n      }\n    }\n    // Bits Allocated (for image data)\n    let bitsAllocated;\n    if (typeof dataElements[TagKeys.BitsAllocated] !== 'undefined') {\n      bitsAllocated = dataElements[TagKeys.BitsAllocated].value[0];\n    }\n\n    // calculate buffer size and split elements (meta and non meta)\n    let totalSize = 128 + 4; // DICM\n    let localSize = 0;\n    const metaElements = [];\n    const rawElements = [];\n    let element;\n    let groupName;\n    let metaLength = 0;\n    // FileMetaInformationGroupLength\n    const fmiglTag = getFileMetaInformationGroupLengthTag();\n    // FileMetaInformationVersion\n    const fmivTag = new Tag('0002', '0001');\n    // ImplementationClassUID\n    const icUIDTag = new Tag('0002', '0012');\n    // ImplementationVersionName\n    const ivnTag = new Tag('0002', '0013');\n\n    // missing tag list: start as a copy of compulsory\n    const missingTags = this.#compulsoryTags.slice();\n\n    // loop through elements to get the buffer size\n    const keys = Object.keys(dataElements);\n    for (let i = 0, leni = keys.length; i < leni; ++i) {\n      const originalElement = dataElements[keys[i]];\n      originalElement.tag = getTagFromKey(keys[i]);\n      element = this.getElementToWrite(originalElement);\n      if (element !== null &&\n        !fmiglTag.equals(element.tag) &&\n        !fmivTag.equals(element.tag) &&\n        !icUIDTag.equals(element.tag) &&\n        !ivnTag.equals(element.tag)) {\n        localSize = 0;\n\n        // check if compulsory tag, if present remove from missing list\n        const index = missingTags.indexOf(element.tag.getKey());\n        if (index !== -1) {\n          missingTags.splice(index, 1);\n        }\n\n        // XB7 2020-04-17\n        // Check if UN can be converted to correct VR.\n        // This check must be done BEFORE calculating totalSize,\n        // otherwise there may be extra null bytes at the end of the file\n        // (dcmdump may crash because of these bytes)\n        if (this.#fixUnknownVR) {\n          checkAndFixUnknownVR(element, !isBigEndian);\n        }\n\n        // update value and vl\n        this.#setElementValue(\n          element, element.value, isImplicit, bitsAllocated);\n\n        // tag group name\n        groupName = element.tag.getGroupName();\n\n        // prefix\n        if (groupName === 'Meta Element') {\n          localSize += getDataElementPrefixByteSize(element.vr, false);\n        } else {\n          localSize += getDataElementPrefixByteSize(\n            element.vr, isImplicit);\n        }\n\n        // value\n        localSize += element.vl;\n\n        // sort elements\n        if (groupName === 'Meta Element') {\n          metaElements.push(element);\n          metaLength += localSize;\n        } else {\n          rawElements.push(element);\n        }\n\n        // add to total size\n        totalSize += localSize;\n      }\n    }\n\n    // add compulsory tags to output data if not present\n    for (const key of missingTags) {\n      const tag = getTagFromKey(key);\n      const dataElement = new DataElement(tag.getVrFromDictionary());\n      dataElement.tag = tag;\n      // rules are indexed by key or tag name\n      let value;\n      if (typeof this.#rules[key] !== 'undefined') {\n        value = this.#rules[key].value;\n      } else {\n        const name = tag.getNameFromDictionary();\n        value = this.#rules[name].value;\n      }\n      // add element\n      let size = getDataElementPrefixByteSize(dataElement.vr, isImplicit);\n      size += this.#setElementValue(dataElement, [value], isImplicit);\n      rawElements.push(dataElement);\n      totalSize += size;\n    }\n\n    // FileMetaInformationVersion\n    const fmiv = getDataElement('FileMetaInformationVersion');\n    let fmivSize = getDataElementPrefixByteSize(fmiv.vr, false);\n    fmivSize += this.#setElementValue(fmiv, [0, 1], false);\n    metaElements.push(fmiv);\n    metaLength += fmivSize;\n    totalSize += fmivSize;\n    // ImplementationClassUID\n    const icUID = getDataElement('ImplementationClassUID');\n    let icUIDSize = getDataElementPrefixByteSize(icUID.vr, false);\n    const icUIDValue =\n      getUID('ImplementationClassUID').replace('-beta', '.99');\n    icUIDSize += this.#setElementValue(icUID, [icUIDValue], false);\n    metaElements.push(icUID);\n    metaLength += icUIDSize;\n    totalSize += icUIDSize;\n    // ImplementationVersionName\n    const ivn = getDataElement('ImplementationVersionName');\n    let ivnSize = getDataElementPrefixByteSize(ivn.vr, false);\n    const dwvVersion = getDwvVersion().replace('-beta', '.99');\n    const ivnValue = 'DWV_' + dwvVersion;\n    ivnSize += this.#setElementValue(ivn, [ivnValue], false);\n    metaElements.push(ivn);\n    metaLength += ivnSize;\n    totalSize += ivnSize;\n\n    // sort elements\n    const elemSortFunc = function (a, b) {\n      return tagCompareFunction(a.tag, b.tag);\n    };\n    metaElements.sort(elemSortFunc);\n    rawElements.sort(elemSortFunc);\n\n    // create the FileMetaInformationGroupLength element\n    const fmigl = getDataElement('FileMetaInformationGroupLength');\n    let fmiglSize = getDataElementPrefixByteSize(fmigl.vr, false);\n    fmiglSize += this.#setElementValue(\n      fmigl, new Uint32Array([metaLength]), false);\n    totalSize += fmiglSize;\n\n    // create buffer\n    const buffer = new ArrayBuffer(totalSize);\n    const metaWriter = new DataWriter(buffer);\n    const dataWriter = new DataWriter(buffer, !isBigEndian);\n\n    let offset = 128;\n    // DICM\n    offset = metaWriter.writeUint8Array(offset, this.#encodeString('DICM'));\n    // FileMetaInformationGroupLength\n    offset = this.#writeDataElement(metaWriter, fmigl, offset, false);\n    // write meta\n    for (let j = 0, lenj = metaElements.length; j < lenj; ++j) {\n      offset = this.#writeDataElement(\n        metaWriter, metaElements[j], offset, false);\n    }\n\n    // check meta position\n    const preambleSize = 128 + 4;\n    const metaOffset = preambleSize + fmiglSize + metaLength;\n    if (offset !== metaOffset) {\n      logger.warn('Bad size calculation... meta offset: ' + offset +\n        ', calculated size:' + metaOffset +\n        ' (diff:' + (offset - metaOffset) + ')');\n    }\n\n    // write non meta\n    for (let k = 0, lenk = rawElements.length; k < lenk; ++k) {\n      offset = this.#writeDataElement(\n        dataWriter, rawElements[k], offset, isImplicit);\n    }\n\n    // check final position\n    if (offset !== totalSize) {\n      logger.warn('Bad size calculation... final offset: ' + offset +\n        ', calculated size:' + totalSize +\n        ' (diff:' + (offset - totalSize) + ')');\n    }\n    // return\n    return buffer;\n  }\n\n  /**\n   * Set a DICOM element value according to its VR (Value Representation).\n   *\n   * @param {DataElement} element The DICOM element to set the value.\n   * @param {object} value The value to set.\n   * @param {boolean} isImplicit Does the data use implicit VR?\n   * @param {number} [bitsAllocated] Bits allocated used for pixel data.\n   * @returns {number} The total element size.\n   */\n  #setElementValue(\n    element, value, isImplicit, bitsAllocated) {\n    // byte size of the element\n    let size = 0;\n    // special sequence case\n    if (element.vr === 'SQ') {\n\n      if (value !== null && value !== 0) {\n        const newItems = [];\n\n        // explicit or undefined length sequence\n        let undefinedLength = false;\n        if (typeof element.undefinedLength !== 'undefined') {\n          undefinedLength = element.undefinedLength;\n          delete element.undefinedLength;\n        }\n\n        // items\n        for (let i = 0; i < value.length; ++i) {\n          const oldItemElements = value[i];\n          const newItemElements = [];\n          let subSize = 0;\n\n          // check data\n          if (oldItemElements === null || oldItemElements === 0) {\n            continue;\n          }\n\n          // possible local bitsAllocated\n          let sqBitsAllocated = bitsAllocated;\n          const dataElement = oldItemElements[TagKeys.BitsAllocated];\n          if (typeof dataElement !== 'undefined' &&\n            typeof dataElement.value !== 'undefined') {\n            sqBitsAllocated = dataElement.value[0];\n          }\n\n          // elements\n          const itemKeys = Object.keys(oldItemElements);\n          for (let j = 0, lenj = itemKeys.length; j < lenj; ++j) {\n            const itemKey = itemKeys[j];\n            const subElement = oldItemElements[itemKey];\n            subElement.tag = getTagFromKey(itemKey);\n\n            if (isItemTag(subElement.tag)) {\n              continue;\n            }\n            // set item value\n            subSize += this.#setElementValue(\n              subElement, subElement.value, isImplicit, sqBitsAllocated);\n            newItemElements.push(subElement);\n            // add prefix size\n            subSize += getDataElementPrefixByteSize(\n              subElement.vr, isImplicit);\n          }\n\n          // add item element (used to store its size)\n          const itemElement = {\n            tag: getItemTag(),\n            vr: 'NONE',\n            vl: subSize,\n            value: []\n          };\n          if (undefinedLength) {\n            itemElement.undefinedLength = undefinedLength;\n          }\n          newItemElements.push(itemElement);\n          subSize += getDataElementPrefixByteSize(\n            itemElement.vr, isImplicit);\n\n          // add item delimitation size\n          if (undefinedLength) {\n            subSize += getDataElementPrefixByteSize(\n              'NONE', isImplicit);\n          }\n\n          // sort\n          const elemSortFunc = function (a, b) {\n            return tagCompareFunction(a.tag, b.tag);\n          };\n          newItemElements.sort(elemSortFunc);\n\n          size += subSize;\n          newItems.push(newItemElements);\n        }\n\n        // add sequence delimitation size\n        if (undefinedLength) {\n          size += getDataElementPrefixByteSize('NONE', isImplicit);\n        }\n\n        // update sequence element\n        element.value = newItems;\n        element.vl = size;\n        if (undefinedLength) {\n          element.undefinedLength = undefinedLength;\n        }\n      }\n    } else {\n      // pad if necessary\n      if (isVrToPad(element.vr)) {\n        const padStr = getVrPad(element.vr);\n        // encode string\n        // TODO: not sure for UN...\n        if (isStringVr(element.vr)) {\n          let pad;\n          if (isCharSetStringVR(element.vr)) {\n            value = this.#encodeSpecialString(value.join('\\\\'));\n            pad = this.#encodeSpecialString(padStr);\n          } else {\n            value = this.#encodeString(value.join('\\\\'));\n            pad = this.#encodeString(padStr);\n          }\n          if (!isEven(value.length)) {\n            value = uint8ArrayPush(value, pad);\n          }\n        } else if (element.vr === 'OB') {\n          value = padOBValue(value);\n        }\n      }\n\n      // calculate byte size\n      size = 0;\n      if (element.vr === 'AT') {\n        size = 4 * value.length;\n      } else if (element.vr === 'xs') {\n        size = value.length * Uint16Array.BYTES_PER_ELEMENT;\n      } else if (isTypedArrayVr(element.vr) || element.vr === 'ox') {\n        if (isPixelDataTag(element.tag) &&\n          Array.isArray(value)) {\n          size = 0;\n          for (let b = 0; b < value.length; ++b) {\n            size += value[b].length;\n          }\n        } else {\n          size = value.length;\n        }\n\n        // convert size to bytes\n        const vrType = vrTypes[element.vr];\n        if (isPixelDataTag(element.tag) || element.vr === 'ox') {\n          if (element.undefinedLength) {\n            const itemPrefixSize =\n              getDataElementPrefixByteSize('NONE', isImplicit);\n            // offset table\n            size += itemPrefixSize;\n            // pixel items\n            size += itemPrefixSize * value.length;\n            // add sequence delimitation size\n            size += itemPrefixSize;\n          } else {\n            // use bitsAllocated for pixel data\n            // no need to multiply for 8 bits\n            if (typeof bitsAllocated !== 'undefined') {\n              if (bitsAllocated === 1) {\n                // binary data\n                size /= 8;\n              } else if (bitsAllocated === 16) {\n                size *= Uint16Array.BYTES_PER_ELEMENT;\n              }\n            }\n          }\n        } else if (typeof vrType !== 'undefined') {\n          const bpe = getBpeForVrType(vrType);\n          if (typeof bpe !== 'undefined') {\n            size *= bpe;\n          } else {\n            throw new Error('Unknown bytes per element for VR type: ' + vrType);\n          }\n        } else {\n          throw new Error('Unsupported element: ' + element.vr);\n        }\n      } else {\n        size = value.length;\n      }\n\n      element.value = value;\n      element.vl = size;\n    }\n\n    // return the size of that data\n    return size;\n  }\n\n} // class DicomWriter\n\n/**\n * Fix for broken DICOM elements: replace \"UN\" with correct VR if the\n * element exists in dictionary.\n *\n * @param {DataElement} element The DICOM element.\n * @param {boolean} [isLittleEndian] Flag to tell if the data is little\n *   or big endian (default: true).\n */\nfunction checkAndFixUnknownVR(element, isLittleEndian) {\n  if (element.vr === 'UN') {\n    const dictVr = element.tag.getVrFromDictionary();\n    if (typeof dictVr !== 'undefined' && element.vr !== dictVr) {\n      element.vr = dictVr;\n      // cast typed array value from Uint8 to vr type\n      const vrType = vrTypes[element.vr];\n      if (typeof vrType !== 'undefined' &&\n        vrType !== 'Uint8' &&\n        vrType !== 'string') {\n        const data = getUint8ToVrValue(\n          element.value, element.vr, isLittleEndian);\n        if (typeof data !== 'undefined') {\n          element.value = data;\n        }\n      }\n      logger.info('Element ' + element.tag.getGroup() +\n        ' ' + element.tag.getElement() +\n        ' VR changed from UN to ' + element.vr);\n    }\n  }\n}\n\n/**\n * Get the casted typed array value from Uint8 to vr type.\n *\n * @param {object} value The value to cast.\n * @param {string} vr The DICOM element VR.\n * @param {boolean} [isLittleEndian] Flag to tell if the data is little\n *   or big endian (default: true).\n * @returns {object} The element value casted to the vr type.\n */\nfunction getUint8ToVrValue(value, vr, isLittleEndian) {\n  let data;\n  if (typeof value.buffer === 'undefined') {\n    return data;\n  }\n  const reader = new DataReader(value.buffer, isLittleEndian);\n  const offset = value.byteOffset;\n  const vl = value.length; // size before cast\n  const vrType = vrTypes[vr];\n  if (vrType === 'Uint16') {\n    data = reader.readUint16Array(offset, vl);\n  } else if (vrType === 'Uint32') {\n    data = reader.readUint32Array(offset, vl);\n  } else if (vrType === 'Uint64') {\n    data = reader.readUint64Array(offset, vl);\n  } else if (vrType === 'Int16') {\n    data = Array.from(reader.readInt16Array(offset, vl));\n  } else if (vrType === 'Int32') {\n    data = Array.from(reader.readInt32Array(offset, vl));\n  } else if (vrType === 'Int64') {\n    data = reader.readInt64Array(offset, vl);\n  } else if (vrType === 'Float32') {\n    data = Array.from(reader.readFloat32Array(offset, vl));\n  } else if (vrType === 'Float64') {\n    data = Array.from(reader.readFloat64Array(offset, vl));\n  }\n  return data;\n}\n\n/**\n * Get a DICOM element from its tag name (value set separatly).\n *\n * @param {string} tagName The string tag name.\n * @returns {DataElement} The DICOM element.\n */\nfunction getDataElement(tagName) {\n  const tag = getTagFromDictionary(tagName);\n  const element = new DataElement(tag.getVrFromDictionary());\n  element.tag = tag;\n  return element;\n}\n\n/**\n * Get the number of bytes per element for a given VR type.\n *\n * @param {string} vrType The VR type as defined in the dictionary.\n * @returns {number} The bytes per element.\n */\nfunction getBpeForVrType(vrType) {\n  let bpe;\n  if (vrType === 'Uint8') {\n    bpe = Uint8Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Uint16') {\n    bpe = Uint16Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Int16') {\n    bpe = Int16Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Uint32') {\n    bpe = Uint32Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Int32') {\n    bpe = Int32Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Float32') {\n    bpe = Float32Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Float64') {\n    bpe = Float64Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Uint64') {\n    bpe = BigUint64Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Int64') {\n    bpe = BigInt64Array.BYTES_PER_ELEMENT;\n  }\n  return bpe;\n}\n\n/**\n * Get the DICOM elements from a 'simple' DICOM tags object.\n * The input object is a simplified version of the oficial DICOM json with\n * tag names instead of keys and direct values (no value property) for\n * simple tags. See synthetic test data (in tests/dicom) for examples.\n *\n * @param {Object<string, any>} simpleTags The 'simple' DICOM\n *   tags object.\n * @returns {Object<string, DataElement>} The DICOM elements.\n */\nexport function getElementsFromJSONTags(simpleTags) {\n  const keys = Object.keys(simpleTags);\n  const dataElements = {};\n  for (let k = 0, len = keys.length; k < len; ++k) {\n    // get the DICOM element definition from its name\n    const tag = getTagFromDictionary(keys[k]);\n    if (typeof tag === 'undefined') {\n      continue;\n    }\n    const vr = tag.getVrFromDictionary();\n    // tag value\n    let value;\n    let undefinedLength = false;\n    const simpleTag = simpleTags[keys[k]];\n    if (vr === 'SQ') {\n      const items = [];\n      if (typeof simpleTag.undefinedLength !== 'undefined') {\n        undefinedLength = simpleTag.undefinedLength;\n      }\n      if (typeof simpleTag.value !== 'undefined' &&\n        simpleTag.value !== null) {\n        for (let i = 0; i < simpleTag.value.length; ++i) {\n          items.push(getElementsFromJSONTags(simpleTag.value[i]));\n        }\n      } else {\n        logger.trace('Undefined or null simpleTag SQ value.');\n      }\n      value = items;\n    } else {\n      if (Array.isArray(simpleTag)) {\n        value = simpleTag;\n      } else {\n        value = [simpleTag];\n      }\n    }\n    // create element\n    const dataElement = new DataElement(vr);\n    dataElement.tag = tag;\n    dataElement.value = value;\n    if (undefinedLength) {\n      dataElement.undefinedLength = undefinedLength;\n    }\n    // store\n    dataElements[tag.getKey()] = dataElement;\n  }\n  // return\n  // @ts-expect-error\n  return dataElements;\n}\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from './dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * DICOM code tag keys.\n */\nconst TagKeys = {\n  CodeValue: '00080100',\n  CodingSchemeDesignator: '00080102',\n  CodeMeaning: '00080104',\n  LongCodeValue: '00080119',\n  URNCodeValue: '00080120'\n};\n\n/**\n * DICOM code: item of a basic code sequence.\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_8.8.html}.\n */\nexport class DicomCode {\n  /**\n   * Code meaning.\n   *\n   * @type {string}\n   */\n  meaning;\n  /**\n   * Code value.\n   *\n   * @type {string|undefined}\n   */\n  value;\n  /**\n   * Long code value.\n   *\n   * @type {string|undefined}\n   */\n  longValue;\n  /**\n   * URN code value.\n   *\n   * @type {string|undefined}\n   */\n  urnValue;\n  /**\n   * Coding scheme designator.\n   *\n   * @type {string|undefined}\n   */\n  schemeDesignator;\n\n  /**\n   * @param {string} meaning The code meaning.\n   */\n  constructor(meaning) {\n    this.meaning = meaning;\n  }\n\n  /**\n   * Get a string representation of this object.\n   *\n   * @returns {string} The code as string.\n   */\n  toString() {\n    return '(' + this.value + ', ' +\n      this.schemeDesignator + ', \\'' +\n      this.meaning + '\\')';\n  }\n}\n\n/**\n * Check if two code objects are equal.\n *\n * @param {DicomCode} code1 The first code.\n * @param {DicomCode} code2 The second code.\n * @returns {boolean} True if both codes are equal.\n */\nexport function isEqualCode(code1, code2) {\n  return Object.keys(code1).length === Object.keys(code2).length &&\n  Object.keys(code1).every(key =>\n    Object.prototype.hasOwnProperty.call(code2, key) &&\n    code1[key] === code2[key]\n  );\n}\n\n/**\n * Get a code object from a dicom element.\n *\n * @param {Object<string, DataElement>} dataElements The dicom element.\n * @returns {DicomCode} A code object.\n */\nexport function getCode(dataElements) {\n  // meaning -> CodeMeaning (type1)\n  const code = new DicomCode(dataElements[TagKeys.CodeMeaning].value[0]);\n  // value -> CodeValue (type1C)\n  // longValue -> LongCodeValue (type1C)\n  // urnValue -> URNCodeValue (type1C)\n  if (typeof dataElements[TagKeys.CodeValue] !== 'undefined') {\n    code.value = dataElements[TagKeys.CodeValue].value[0];\n  } else if (typeof dataElements[TagKeys.LongCodeValue] !== 'undefined') {\n    code.longValue = dataElements[TagKeys.LongCodeValue].value[0];\n  } else if (typeof dataElements[TagKeys.URNCodeValue] !== 'undefined') {\n    code.urnValue = dataElements[TagKeys.URNCodeValue].value[0];\n  } else {\n    throw new Error(\n      'Invalid code with no value, no long value and no urn value.');\n  }\n  // schemeDesignator -> CodingSchemeDesignator (type1C)\n  if (typeof code.value !== 'undefined' ||\n    typeof code.longValue !== 'undefined') {\n    if (typeof dataElements[TagKeys.CodingSchemeDesignator] !== 'undefined') {\n      code.schemeDesignator =\n        dataElements[TagKeys.CodingSchemeDesignator].value[0];\n    } else {\n      throw new Error(\n        'No coding sheme designator when code value or long value is present');\n    }\n  }\n  return code;\n}\n\n/**\n * Get a simple dicom element item from a code object.\n *\n * @param {DicomCode} code The code object.\n * @returns {Object<string, any>} The item as a list of (key, value) pairs.\n */\nexport function getDicomCodeItem(code) {\n  // dicom item (tags are in group/element order)\n  const item = {};\n  // value\n  if (typeof code.value !== 'undefined') {\n    item.CodeValue = code.value;\n  } else if (typeof code.longValue !== 'undefined') {\n    item.LongCodeValue = code.longValue;\n  } else if (typeof code.urnValue !== 'undefined') {\n    item.URNCodeValue = code.urnValue;\n  }\n  // CodingSchemeDesignator\n  if (typeof code.schemeDesignator !== 'undefined') {\n    item.CodingSchemeDesignator = code.schemeDesignator;\n  }\n  // CodeMeaning\n  item.CodeMeaning = code.meaning;\n  // return\n  return item;\n}\n\n/**\n * DICOM codes.\n * List: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part16/chapter_d.html}.\n */\nconst DcmCodes = {\n  111030: 'Image Region',\n  112039: 'Tracking Identifier',\n  112040: 'Tracking Unique Identifier',\n  113048: 'Pixel by pixel Maximum',\n  113049: 'Pixel by pixel mean',\n  113051: 'Pixel by pixel Minimum',\n  113061: 'Standard Deviation',\n  113076: 'Segmentation',\n  121055: 'Path',\n  121207: 'Height',\n  121322: 'Source image for image processing operation',\n  121324: 'Source Image',\n  122438: 'Reference Points',\n  125007: 'Measurement Group',\n  125309: 'Short label',\n  128773: 'Reference Geometry'\n};\n\n/**\n * SNOMED-CT codes.\n * List: {@link https://browser.ihtsdotools.org}.\n */\nconst SctCodes = {\n  1483009: 'Angle',\n  42798000: 'Area',\n  103355008: 'Width',\n  103339001: 'Long axis',\n  103340004: 'Short axis',\n  131190003: 'Radius',\n  261665006: 'Unknown',\n  410668003: 'Length',\n  718499004: 'Color'\n};\n\n/**\n * UCUM codes.\n * Definition: {@link https://unitsofmeasure.org/ucum}.\n * List: {@link https://ucum.nlm.nih.gov/ucum-lhc/demo.html}.\n */\nconst UcumCodes = {\n  1: 'No units',\n  mm: 'Millimeter',\n  deg: 'Degree - plane angle',\n  cm2: 'Square centimeter',\n  'cm2/ml': 'Square centimeter per milliliter',\n  '/cm': 'Per centimeter',\n  'g/ml': 'Gram per milliliter',\n  'g/ml{SUVbw}': 'Standardized Uptake Value body weight',\n  'mg/ml': 'Milligram per milliliter',\n  'umol/ml': 'Micromole per milliliter',\n  'Bq/ml': 'Becquerels per milliliter',\n  'mg/min/ml': 'Milligrams per minute per milliliter',\n  'umol/min/ml': 'Micromole per minute per milliliter',\n  'ml/min/g': 'Milliliter per minute per gram',\n  'ml/g': 'Milliliter per gram',\n  'ml/min/ml': 'Milliliter per minute per milliliter',\n  'ml/ml': 'Milliliter per milliliter',\n  '%': 'Percentage',\n  '[hnsf\\'U]': 'Hounsfield unit',\n  '10*23/ml': 'Electron density',\n  '{counts}': 'Counts',\n  '{counts}/s': 'Counts per second',\n  '{propcounts}': 'Proportional to counts',\n  '{propcounts}/s': 'Proportional to counts per second',\n};\n\n/**\n * Get a DICOM code from a value (~id).\n *\n * @param {string} value The code value.\n * @param {string} scheme The scheme designator.\n * @returns {DicomCode|undefined} The DICOM code.\n */\nfunction getDicomCode(value, scheme) {\n  let meaning;\n  if (scheme === 'DCM') {\n    meaning = DcmCodes[value];\n  } else if (scheme === 'SCT') {\n    meaning = SctCodes[value];\n  } else if (scheme === 'UCUM') {\n    meaning = UcumCodes[value];\n  }\n  let code;\n  if (typeof meaning !== 'undefined') {\n    code = new DicomCode(meaning);\n    code.schemeDesignator = scheme;\n    code.value = value;\n  }\n  return code;\n}\n\n/**\n * Get a measurement group DICOM code.\n *\n * @returns {DicomCode} The code.\n */\nexport function getMeasurementGroupCode() {\n  return getDicomCode('125007', 'DCM');\n}\n\n/**\n * Get an image region DICOM code.\n *\n * @returns {DicomCode} The code.\n */\nexport function getImageRegionCode() {\n  return getDicomCode('111030', 'DCM');\n}\n\n/**\n * Get a reference geometry DICOM code.\n *\n * @returns {DicomCode} The code.\n */\nexport function getReferenceGeometryCode() {\n  return getDicomCode('128773', 'DCM');\n}\n\n/**\n * Get a path DICOM code.\n *\n * @returns {DicomCode} The code.\n */\nexport function getPathCode() {\n  return getDicomCode('121055', 'DCM');\n}\n\n/**\n * Get a source image DICOM code.\n *\n * @returns {DicomCode} The code.\n */\nexport function getSourceImageCode() {\n  return getDicomCode('121324', 'DCM');\n}\n\n/**\n * Get a tracking identifier DICOM code.\n *\n * @returns {DicomCode} The code.\n */\nexport function getTrackingIdentifierCode() {\n  return getDicomCode('112039', 'DCM');\n}\n\n/**\n * Get a segmentation DICOM code.\n *\n * @returns {DicomCode} The code.\n */\nexport function getSegmentationCode() {\n  return getDicomCode('113076', 'DCM');\n}\n\n/**\n * Get a source image for processing DICOM code.\n *\n * @returns {DicomCode} The code.\n */\nexport function getSourceImageForProcessingCode() {\n  return getDicomCode('121322', 'DCM');\n}\n\n/**\n * Get a short label DICOM code.\n *\n * @returns {DicomCode} The code.\n */\nexport function getShortLabelCode() {\n  return getDicomCode('125309', 'DCM');\n}\n\n/**\n * Get a reference points DICOM code.\n *\n * @returns {DicomCode} The code.\n */\nexport function getReferencePointsCode() {\n  return getDicomCode('122438', 'DCM');\n}\n\n/**\n * Get a colour DICOM code.\n *\n * @returns {DicomCode} The code.\n */\nexport function getColourCode() {\n  return getDicomCode('718499004', 'SCT');\n}\n\n/**\n * Quantification name to dictionary item.\n */\nconst QuantificationName2DictItem = {\n  angle: {key: '1483009', scheme: 'SCT'},\n  length: {key: '410668003', scheme: 'SCT'},\n  surface: {key: '42798000', scheme: 'SCT'},\n  height: {key: '121207', scheme: 'DCM'},\n  width: {key: '103355008', scheme: 'SCT'},\n  radius: {key: '131190003', scheme: 'SCT'},\n  a: {key: '103339001', scheme: 'SCT'},\n  b: {key: '103340004', scheme: 'SCT'},\n  min: {key: '113051', scheme: 'DCM'},\n  max: {key: '113048', scheme: 'DCM'},\n  mean: {key: '113049', scheme: 'DCM'},\n  stddev: {key: '113061', scheme: 'DCM'},\n  // median\n  // 25th percentile\n  // 75th percentile\n};\n\n/**\n * Get a concept name DICOM code.\n *\n * @param {string} name The measurment name as defined\n *   in a quantification object.\n * @returns {DicomCode|undefined} The code.\n */\nexport function getConceptNameCode(name) {\n  const item = QuantificationName2DictItem[name];\n  let code;\n  if (typeof item !== 'undefined') {\n    code = getDicomCode(item.key, item.scheme);\n  }\n  return code;\n}\n\n/**\n * Get the DICOM code for a quantification name.\n *\n * @param {DicomCode} code The Dicom code.\n * @returns {string|undefined} The quantification name.\n */\nexport function getQuantificationName(code) {\n  let name;\n  for (const propKey in QuantificationName2DictItem) {\n    const item = QuantificationName2DictItem[propKey];\n    if (item.scheme === code.schemeDesignator &&\n      item.key === code.value) {\n      name = propKey;\n      break;\n    }\n  }\n  return name;\n}\n\n/**\n * Quantification unit to UCUM key. Associated tags:\n * - Rescale type {@link https://dicom.innolitics.com/ciods/computed-radiography-image/modality-lut/00281054},\n * - Units {@link https://dicom.innolitics.com/ciods/positron-emission-tomography-image/pet-series/00541001}.\n * - SUV {@link https://dicom.nema.org/medical/dicom/current/output/chtml/part16/sect_CID_85.html}.\n */\nconst QuantificationUnit2UcumKey = {\n  'unit.mm': 'mm',\n  'unit.cm2': 'cm2',\n  'unit.degree': 'deg',\n  // OD optical density\n  HU: '[hnsf\\'U]',\n  // US: '1', // duplicates 'NONE'\n  MGML: 'mg/ml',\n  // Z_EFF Effective Atomic Number (i.e., Effective-Z)\n  ED: '10*23/ml',\n  // EDW Electron density normalized\n  // HU_MOD Modified Hounsfield Unit\n  PCT: '%',\n  CNTS: '{counts}',\n  NONE: '1',\n  CM2: 'cm2',\n  CM2ML: 'cm2/ml',\n  PCNT: '%',\n  CPS: '{counts}/s',\n  BQML: 'Bq/ml',\n  MGMINML: 'mg/min/ml',\n  UMOLMINML: 'umol/min/ml',\n  MLMING: 'ml/min/g',\n  MLG: 'ml/g',\n  '1CM': '/cm',\n  UMOLML: 'umol/ml',\n  PROPCNTS: '{propcounts}',\n  PROPCPS: '{propcounts}/s',\n  MLMINML: 'ml/min/ml',\n  MLML: 'ml/ml',\n  GML: 'g/ml',\n  //STDDEV\n  SUV: 'g/ml{SUVbw}',\n};\n\n/**\n * Get a measurement units DICOM code.\n *\n * @param {string} name The unit name as defined in a quantification object.\n * @returns {DicomCode|undefined} The code.\n */\nexport function getMeasurementUnitsCode(name) {\n  const key = QuantificationUnit2UcumKey[name];\n  let code;\n  if (typeof key !== 'undefined') {\n    code = getDicomCode(key, 'UCUM');\n  } else if (typeof key === 'undefined') {\n    // no unit\n    code = getDicomCode('1', 'UCUM');\n  }\n  return code;\n}\n\n/**\n * Get a quantification unit name.\n *\n * @param {DicomCode} code The code to get the unit from.\n * @returns {string} The quantification unit.\n */\nexport function getQuantificationUnit(code) {\n  let unit;\n  for (const propKey in QuantificationUnit2UcumKey) {\n    const ucumKey = QuantificationUnit2UcumKey[propKey];\n    if (code.schemeDesignator === 'UCUM' &&\n      ucumKey === code.value) {\n      unit = propKey;\n      break;\n    }\n  }\n  return unit;\n}\n","import {\n  isEqualRgb,\n  cielabToSrgb,\n  uintLabToLab,\n  labToUintLab,\n  srgbToCielab\n} from '../utils/colour';\nimport {\n  getCode,\n  getDicomCodeItem\n} from './dicomCode';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {RGB} from '../utils/colour';\nimport {DataElement} from './dataElement';\nimport {DicomCode} from './dicomCode';\n/* eslint-enable no-unused-vars */\n\n/**\n * Related DICOM tag keys.\n */\nconst TagKeys = {\n  SegmentNumber: '00620004',\n  SegmentLabel: '00620005',\n  SegmentAlgorithmType: '00620008',\n  SegmentAlgorithmName: '00620009',\n  RecommendedDisplayGrayscaleValue: '0062000C',\n  RecommendedDisplayCIELabValue: '0062000D',\n  SegmentedPropertyCategoryCodeSequence: '00620003',\n  SegmentedPropertyTypeCodeSequence: '0062000F',\n  TrackingID: '00620020',\n  TrackingUID: '00620021'\n};\n\n/**\n * DICOM (mask) segment: item of a SegmentSequence (0062,0002).\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.8.20.4.html}.\n */\nexport class MaskSegment {\n  /**\n   * Segment number (0062,0004).\n   *\n   * @type {number}\n   */\n  number;\n  /**\n   * Segment label (0062,0005).\n   *\n   * @type {string}\n   */\n  label;\n  /**\n   * Segment algorithm type (0062,0008).\n   *\n   * @type {string}\n   */\n  algorithmType;\n  /**\n   * Segment algorithm name (0062,0009).\n   *\n   * @type {string|undefined}\n   */\n  algorithmName;\n  /**\n   * Segment display value as simple value.\n   *\n   * @type {number|undefined}\n   */\n  displayValue;\n  /**\n   * Segment display value as RGB colour ({r,g,b}).\n   *\n   * @type {RGB|undefined}\n   */\n  displayRGBValue;\n  /**\n   * Segment property code: specific property\n   * the segment represents (0062,000F).\n   *\n   * @type {DicomCode|undefined}\n   */\n  propertyTypeCode;\n  /**\n   * Segment property category code: general category\n   * of the property the segment represents (0062,0003).\n   *\n   * @type {DicomCode|undefined}\n   */\n  propertyCategoryCode;\n  /**\n   * Segment tracking UID (0062,0021).\n   *\n   * @type {string|undefined}\n   */\n  trackingUid;\n  /**\n   * Segment tracking id: text label for the UID (0062,0020).\n   *\n   * @type {string|undefined}\n   */\n  trackingId;\n\n  /**\n   * @param {number} number The segment number.\n   * @param {string} label The segment label.\n   * @param {string} algorithmType The segment number.\n   */\n  constructor(number, label, algorithmType) {\n    this.number = number;\n    this.label = label;\n    this.algorithmType = algorithmType;\n  }\n}\n\n/**\n * Get a segment object from a dicom element.\n *\n * @param {Object<string, DataElement>} dataElements The dicom element.\n * @returns {MaskSegment} A segment object.\n */\nexport function getSegment(dataElements) {\n  // number -> SegmentNumber (type1)\n  // label -> SegmentLabel (type1)\n  // algorithmType -> SegmentAlgorithmType (type1)\n  const segment = new MaskSegment(\n    dataElements[TagKeys.SegmentNumber].value[0],\n    dataElements[TagKeys.SegmentLabel]\n      ? dataElements[TagKeys.SegmentLabel].value[0] : 'n/a',\n    dataElements[TagKeys.SegmentAlgorithmType].value[0]\n  );\n  // algorithmName -> SegmentAlgorithmName (type1C)\n  if (typeof dataElements[TagKeys.SegmentAlgorithmName] !== 'undefined') {\n    segment.algorithmName = dataElements[TagKeys.SegmentAlgorithmName].value[0];\n  }\n  // // required if type is not MANUAL\n  // if (segment.algorithmType !== 'MANUAL' &&\n  //   (typeof segment.algorithmName === 'undefined' ||\n  //   segment.algorithmName.length === 0)) {\n  //   throw new Error('Empty algorithm name for non MANUAL algorithm type.');\n  // }\n  // displayValue ->\n  // - RecommendedDisplayGrayscaleValue\n  // - RecommendedDisplayCIELabValue converted to RGB\n  if (typeof dataElements[TagKeys.RecommendedDisplayGrayscaleValue] !==\n    'undefined') {\n    segment.displayValue =\n      dataElements[TagKeys.RecommendedDisplayGrayscaleValue].value[0];\n  } else if (typeof dataElements[TagKeys.RecommendedDisplayCIELabValue] !==\n    'undefined') {\n    const cielabElement =\n      dataElements[TagKeys.RecommendedDisplayCIELabValue].value;\n    const rgb = cielabToSrgb(uintLabToLab({\n      l: cielabElement[0],\n      a: cielabElement[1],\n      b: cielabElement[2]\n    }));\n    segment.displayRGBValue = rgb;\n  }\n  // Segmented Property Category Code Sequence (type1, only one)\n  if (typeof dataElements[TagKeys.SegmentedPropertyCategoryCodeSequence] !==\n    'undefined') {\n    segment.propertyCategoryCode =\n      getCode(\n        dataElements[TagKeys.SegmentedPropertyCategoryCodeSequence].value[0]\n      );\n  } else {\n    throw new Error('Missing Segmented Property Category Code Sequence.');\n  }\n  // Segmented Property Type Code Sequence (type1)\n  if (typeof dataElements[TagKeys.SegmentedPropertyTypeCodeSequence] !==\n    'undefined') {\n    segment.propertyTypeCode =\n      getCode(dataElements[TagKeys.SegmentedPropertyTypeCodeSequence].value[0]);\n  } else {\n    throw new Error('Missing Segmented Property Type Code Sequence.');\n  }\n  // tracking Id and UID (type1C)\n  if (typeof dataElements[TagKeys.TrackingID] !== 'undefined') {\n    segment.trackingId = dataElements[TagKeys.TrackingID].value[0];\n    segment.trackingUid = dataElements[TagKeys.TrackingUID].value[0];\n  }\n\n  return segment;\n}\n\n/**\n * Check if two segment objects are equal.\n *\n * @param {MaskSegment} seg1 The first segment.\n * @param {MaskSegment} seg2 The second segment.\n * @returns {boolean} True if both segment are equal.\n */\nexport function isEqualSegment(seg1, seg2) {\n  // basics\n  if (typeof seg1 === 'undefined' ||\n    typeof seg2 === 'undefined' ||\n    seg1 === null ||\n    seg2 === null) {\n    return false;\n  }\n  let isEqual = seg1.number === seg2.number &&\n    seg1.label === seg2.label &&\n    seg1.algorithmType === seg2.algorithmType;\n  // display value\n  if (typeof seg1.displayRGBValue !== 'undefined' &&\n    typeof seg2.displayRGBValue !== 'undefined') {\n    isEqual = isEqual &&\n      isEqualRgb(seg1.displayRGBValue, seg2.displayRGBValue);\n  } else if (typeof seg1.displayValue !== 'undefined' &&\n    typeof seg2.displayValue !== 'undefined') {\n    isEqual = isEqual &&\n      seg1.displayValue === seg2.displayValue;\n  } else {\n    isEqual = false;\n  }\n  // algorithmName\n  if (typeof seg1.algorithmName !== 'undefined') {\n    if (typeof seg2.algorithmName === 'undefined') {\n      isEqual = false;\n    } else {\n      isEqual = isEqual &&\n        seg1.algorithmName === seg2.algorithmName;\n    }\n  }\n\n  return isEqual;\n}\n\n/**\n * Check if two segment objects are similar: either the\n * number or the displayValue are equal.\n *\n * @param {MaskSegment} seg1 The first segment.\n * @param {MaskSegment} seg2 The second segment.\n * @returns {boolean} True if both segment are similar.\n */\nexport function isSimilarSegment(seg1, seg2) {\n  // basics\n  if (typeof seg1 === 'undefined' ||\n    typeof seg2 === 'undefined' ||\n    seg1 === null ||\n    seg2 === null) {\n    return false;\n  }\n  let isSimilar = seg1.number === seg2.number;\n  // display value\n  if (typeof seg1.displayRGBValue !== 'undefined' &&\n    typeof seg2.displayRGBValue !== 'undefined') {\n    isSimilar = isSimilar ||\n      isEqualRgb(seg1.displayRGBValue, seg2.displayRGBValue);\n  } else if (typeof seg1.displayValue !== 'undefined' &&\n    typeof seg2.displayValue !== 'undefined') {\n    isSimilar = isSimilar ||\n      seg1.displayValue === seg2.displayValue;\n  } else {\n    isSimilar = false;\n  }\n\n  return isSimilar;\n}\n\n/**\n * Get a dicom simple tag from a segment object.\n *\n * @param {MaskSegment} segment The segment object.\n * @returns {Object<string, any>} The item as a list of (key, value) pairs.\n */\nexport function getDicomSegmentItem(segment) {\n  let algoType = segment.algorithmType;\n  if (algoType === undefined) {\n    algoType = 'MANUAL';\n  }\n  // dicom item (tags are in group/element order)\n  const segmentItem = {\n    SegmentNumber: segment.number,\n    SegmentLabel: segment.label,\n    SegmentAlgorithmType: algoType\n  };\n  // SegmentAlgorithmName\n  if (algoType !== 'MANUAL' && segment.algorithmName !== undefined) {\n    segmentItem.SegmentAlgorithmName = segment.algorithmName;\n  }\n  // RecommendedDisplay value\n  if (segment.displayRGBValue) {\n    const cieLab = labToUintLab(srgbToCielab(segment.displayRGBValue));\n    segmentItem.RecommendedDisplayCIELabValue = [\n      Math.round(cieLab.l),\n      Math.round(cieLab.a),\n      Math.round(cieLab.b)\n    ];\n  } else {\n    segmentItem.RecommendedDisplayGrayscaleValue = segment.displayValue;\n  }\n  // SegmentedPropertyCategoryCodeSequence\n  if (segment.propertyCategoryCode) {\n    segmentItem.SegmentedPropertyCategoryCodeSequence = {\n      value: [getDicomCodeItem(segment.propertyCategoryCode)]\n    };\n  }\n  // SegmentedPropertyTypeCodeSequence\n  if (segment.propertyTypeCode) {\n    segmentItem.SegmentedPropertyTypeCodeSequence = {\n      value: [getDicomCodeItem(segment.propertyTypeCode)]\n    };\n  }\n  // tracking\n  if (segment.trackingId) {\n    segmentItem.TrackingID = segment.trackingId;\n    segmentItem.TrackingUID = segment.trackingUid;\n  }\n  // return\n  return segmentItem;\n}\n","import {getSpacingFromMeasure} from './dicomElementsWrapper';\nimport {logger} from '../utils/logger';\nimport {arrayEquals} from '../utils/array';\nimport {\n  getDicomCodeItem,\n  getSegmentationCode,\n  getSourceImageForProcessingCode\n} from './dicomCode';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from './dataElement';\nimport {Spacing} from '../image/spacing';\n/* eslint-enable no-unused-vars */\n\n/**\n * Related DICOM tag keys.\n */\nconst TagKeys = {\n  DerivationImageSequence: '00089124',\n  SourceImageSequence: '00082112',\n  ReferencedSOPClassUID: '00081150',\n  ReferencedSOPInstanceUID: '00081155',\n  FrameContentSequence: '00209111',\n  DimensionIndexValue: '00209157',\n  SegmentIdentificationSequence: '0062000A',\n  ReferencedSegmentNumber: '0062000B',\n  PlanePositionSequence: '00209113',\n  ImagePosition: '00200032',\n  PlaneOrientationSequence: '00209116',\n  ImageOrientation: '00200037',\n  PixelMeasuresSequence: '00289110'\n};\n\n/**\n * DICOM segment frame info: item of a\n *  PerframeFunctionalGroupsSequence (5200,9230).\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.7.6.16.html}.\n */\nexport class DicomSegmentFrameInfo {\n  /**\n   * The dimension index.\n   *\n   * @type {number[]}\n   */\n  dimIndex;\n  /**\n   * The frame image position patient.\n   *\n   * @type {number[]}\n   */\n  imagePosPat;\n  /**\n   * List of derivation images.\n   *\n   * @type {Array}\n   */\n  derivationImages;\n  /**\n   * The reference segment number.\n   *\n   * @type {number}\n   */\n  refSegmentNumber;\n\n  /**\n   * The frame image orientation.\n   *\n   * @type {number[]|undefined}\n   */\n  imageOrientationPatient;\n  /**\n   * The frame spacing.\n   *\n   * @type {Spacing|undefined}\n   */\n  spacing;\n\n  /**\n   * @param {number[]} dimIndex The dimension index.\n   * @param {number[]} imagePosPat The frame image position patient.\n   * @param {Array} derivationImages List of derivation images.\n   * @param {number} refSegmentNumber The reference segment number.\n   */\n  constructor(dimIndex, imagePosPat, derivationImages, refSegmentNumber) {\n    this.dimIndex = dimIndex;\n    this.imagePosPat = imagePosPat;\n    this.derivationImages = derivationImages;\n    this.refSegmentNumber = refSegmentNumber;\n  }\n}\n\n/**\n * Get a frame information object from a dicom element.\n *\n * @param {Object<string, DataElement>} dataElements The dicom element.\n * @returns {DicomSegmentFrameInfo} A frame information object.\n */\nexport function getSegmentFrameInfo(dataElements) {\n  // Derivation Image Sequence\n  const derivationImages = [];\n  if (typeof dataElements[TagKeys.DerivationImageSequence] !== 'undefined') {\n    const derivationImageSq =\n      dataElements[TagKeys.DerivationImageSequence].value;\n    // Source Image Sequence\n    for (let i = 0; i < derivationImageSq.length; ++i) {\n      const sourceImages = [];\n      if (typeof derivationImageSq[i][TagKeys.SourceImageSequence] !==\n        'undefined') {\n        const sourceImageSq =\n          derivationImageSq[i][TagKeys.SourceImageSequence].value;\n        for (let j = 0; j < sourceImageSq.length; ++j) {\n          const sourceImage = {};\n          // Referenced SOP Class UID\n          if (typeof sourceImageSq[j][TagKeys.ReferencedSOPClassUID] !==\n            'undefined') {\n            sourceImage.referencedSOPClassUID =\n              sourceImageSq[j][TagKeys.ReferencedSOPClassUID].value[0];\n          }\n          // Referenced SOP Instance UID\n          if (typeof sourceImageSq[j][TagKeys.ReferencedSOPInstanceUID] !==\n            'undefined') {\n            sourceImage.referencedSOPInstanceUID =\n              sourceImageSq[j][TagKeys.ReferencedSOPInstanceUID].value[0];\n          }\n          sourceImages.push(sourceImage);\n        }\n      }\n      derivationImages.push({\n        sourceImages: sourceImages\n      });\n    }\n  }\n  // Frame Content Sequence (required, only one)\n  const frameContentSq = dataElements[TagKeys.FrameContentSequence].value;\n  // Dimension Index Value\n  const dimIndex = frameContentSq[0][TagKeys.DimensionIndexValue].value;\n  // Segment Identification Sequence (required, only one)\n  const segmentIdSq = dataElements[TagKeys.SegmentIdentificationSequence].value;\n  // Referenced Segment Number\n  const refSegmentNumber =\n    parseInt(segmentIdSq[0][TagKeys.ReferencedSegmentNumber].value[0], 0);\n  // Plane Position Sequence (required, only one)\n  const planePosSq = dataElements[TagKeys.PlanePositionSequence].value;\n  // Image Position (Patient) (conditionally required)\n  const imagePosPat = planePosSq[0][TagKeys.ImagePosition].value;\n  for (let p = 0; p < imagePosPat.length; ++p) {\n    imagePosPat[p] = parseFloat(imagePosPat[p]);\n  }\n  const frameInfo = new DicomSegmentFrameInfo(\n    dimIndex,\n    imagePosPat,\n    derivationImages,\n    refSegmentNumber\n  );\n  // Plane Orientation Sequence\n  if (typeof dataElements[TagKeys.PlaneOrientationSequence] !== 'undefined') {\n    const framePlaneOrientationSeq =\n      dataElements[TagKeys.PlaneOrientationSequence];\n    if (framePlaneOrientationSeq.value.length !== 0) {\n      // should only be one Image Orientation (Patient)\n      const frameImageOrientation =\n        framePlaneOrientationSeq.value[0][TagKeys.ImageOrientation].value;\n      if (typeof frameImageOrientation !== 'undefined') {\n        frameInfo.imageOrientationPatient = frameImageOrientation;\n      }\n    }\n  }\n  // Pixel Measures Sequence\n  if (typeof dataElements[TagKeys.PixelMeasuresSequence] !== 'undefined') {\n    const framePixelMeasuresSeq = dataElements[TagKeys.PixelMeasuresSequence];\n    if (framePixelMeasuresSeq.value.length !== 0) {\n      // should only be one\n      const frameSpacing =\n        getSpacingFromMeasure(framePixelMeasuresSeq.value[0]);\n      if (typeof frameSpacing !== 'undefined') {\n        frameInfo.spacing = frameSpacing;\n      }\n    } else {\n      logger.warn(\n        'No shared functional group pixel measure sequence items.');\n    }\n  }\n\n  return frameInfo;\n}\n\n/**\n * Check if two frame info objects are equal.\n *\n * @param {DicomSegmentFrameInfo} dsfi1 The first frame info.\n * @param {DicomSegmentFrameInfo} dsfi2 The second frame info.\n * @returns {boolean} True if both frame info are equal.\n */\nexport function isEqualSegmentFrameInfo(dsfi1, dsfi2) {\n  // basics\n  if (typeof dsfi1 === 'undefined' ||\n    typeof dsfi2 === 'undefined' ||\n    dsfi1 === null ||\n    dsfi2 === null) {\n    return false;\n  }\n  let isEqual =\n    arrayEquals(dsfi1.dimIndex, dsfi2.dimIndex) &&\n    arrayEquals(dsfi1.imagePosPat, dsfi2.imagePosPat) &&\n    dsfi1.refSegmentNumber === dsfi2.refSegmentNumber;\n\n  isEqual = isEqual &&\n    dsfi1.derivationImages.length === dsfi2.derivationImages.length;\n  for (let i = 0; i < dsfi1.derivationImages.length; ++i) {\n    const derivationImage1 = dsfi1.derivationImages[i];\n    const derivationImage2 = dsfi2.derivationImages[i];\n    isEqual = isEqual &&\n      derivationImage1.sourceImages.length ===\n        derivationImage2.sourceImages.length;\n    for (let j = 0; j < derivationImage1.length; ++j) {\n      const sourceImage1 = derivationImage1.sourceImages[j];\n      const sourceImage2 = derivationImage2.sourceImages[j];\n      isEqual = isEqual &&\n        sourceImage1.referencedSOPClassUID ===\n          sourceImage2.referencedSOPClassUID &&\n        sourceImage1.referencedSOPInstanceUID ===\n          sourceImage2.referencedSOPInstanceUID;\n    }\n  }\n\n  return isEqual;\n}\n\n/**\n * Get a dicom item from a frame information object.\n *\n * @param {object} frameInfo The frame information object.\n * @returns {Object<string, any>} The item as a list of (key, value) pairs.\n */\nexport function getDicomSegmentFrameInfoItem(frameInfo) {\n  const item = {\n    FrameContentSequence: {\n      value: [\n        {\n          DimensionIndexValues: frameInfo.dimIndex\n        }\n      ]\n    },\n    PlanePositionSequence: {\n      value: [\n        {\n          ImagePositionPatient: frameInfo.imagePosPat\n        }\n      ]\n    },\n    SegmentIdentificationSequence: {\n      value: [\n        {\n          ReferencedSegmentNumber: frameInfo.refSegmentNumber\n        }\n      ]\n    }\n  };\n  // optional DerivationImageSequence\n  if (frameInfo.derivationImages !== undefined) {\n    const sourceImgPurposeOfReferenceCode =\n      getDicomCodeItem(getSourceImageForProcessingCode());\n    const segDerivationCode =\n      getDicomCodeItem(getSegmentationCode());\n\n    const derivationImageItems = [];\n    for (const derivationImage of frameInfo.derivationImages) {\n      const sourceImages = [];\n      for (const sourceImage of derivationImage.sourceImages) {\n        sourceImages.push({\n          PurposeOfReferenceCodeSequence: {\n            value: [sourceImgPurposeOfReferenceCode]\n          },\n          ReferencedSOPClassUID: sourceImage.referencedSOPClassUID,\n          ReferencedSOPInstanceUID: sourceImage.referencedSOPInstanceUID\n        });\n      }\n\n      derivationImageItems.push({\n        DerivationCodeSequence: {\n          value: [segDerivationCode]\n        },\n        SourceImageSequence: {\n          value: sourceImages\n        }\n      });\n    }\n\n    item.DerivationImageSequence = {\n      value: derivationImageItems\n    };\n  }\n\n  return item;\n}\n","import {\n  dateToDateObj,\n  getDicomDate,\n  dateToTimeObj,\n  getDicomTime,\n} from '../dicom/dicomDate';\nimport {\n  getImage2DSize,\n  getSpacingFromMeasure,\n  getDimensionOrganization,\n  getDicomMeasureItem,\n  getDicomPlaneOrientationItem\n} from '../dicom/dicomElementsWrapper';\nimport {Tag} from '../dicom/dicomTag';\nimport {getElementsFromJSONTags} from '../dicom/dicomWriter';\nimport {\n  getSegment,\n  getDicomSegmentItem,\n} from '../dicom/dicomSegment';\nimport {\n  getSegmentFrameInfo,\n  getDicomSegmentFrameInfoItem\n} from '../dicom/dicomSegmentFrameInfo';\nimport {transferSyntaxKeywords} from '../dicom/dictionary';\nimport {Image} from '../image/image';\nimport {Geometry} from '../image/geometry';\nimport {Point, Point3D} from '../math/point';\nimport {Vector3D} from '../math/vector';\nimport {Index} from '../math/index';\nimport {Matrix33, REAL_WORLD_EPSILON} from '../math/matrix';\nimport {logger} from '../utils/logger';\nimport {arraySortEquals} from '../utils/array';\nimport {Size} from './size';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from '../dicom/dataElement';\nimport {MaskSegment} from '../dicom/dicomSegment';\n/* eslint-enable no-unused-vars */\n\n/**\n * @typedef {Object<string, DataElement>} DataElements\n */\n\n/**\n * Check two position patients for equality.\n *\n * @param {*} pos1 The first position patient.\n * @param {*} pos2 The second position patient.\n * @returns {boolean} True is equal.\n */\nfunction equalPosPat(pos1, pos2) {\n  return JSON.stringify(pos1) === JSON.stringify(pos2);\n}\n\n/**\n * @callback compareFn\n * @param {object} a The first object.\n * @param {object} b The first object.\n * @returns {number} >0 to sort a after b, <0 to sort a before b,\n *   0 to not change order.\n */\n\n/**\n * Get a position patient compare function accroding to an\n * input orientation.\n *\n * @param {Matrix33} orientation The orientation matrix.\n * @returns {compareFn} The position compare function.\n */\nfunction getComparePosPat(orientation) {\n  const invOrientation = orientation.getInverse();\n  return function (pos1, pos2) {\n    const p1 = invOrientation.multiplyArray3D(pos1);\n    const p2 = invOrientation.multiplyArray3D(pos2);\n    return p1[2] - p2[2];\n  };\n}\n\n/**\n * Merge two tag lists.\n *\n * @param {object} tags1 Base list, will be modified.\n * @param {object} tags2 List to merge.\n */\nfunction mergeTags(tags1, tags2) {\n  const keys2 = Object.keys(tags2);\n  for (const tagName2 of keys2) {\n    if (tags1[tagName2] !== undefined) {\n      logger.trace('Overwritting tag: ' + tagName2);\n    }\n    tags1[tagName2] = tags2[tagName2];\n  }\n}\n\n/**\n * Check that a DICOM tag definition is present in a parsed element.\n *\n * @param {DataElements} dataElements The root dicom element.\n * @param {object} tagDefinition The tag definition as {name, tag, type, enum}.\n */\nfunction checkTag(dataElements, tagDefinition) {\n  const element = dataElements[tagDefinition.tag];\n  // check null and undefined\n  if (tagDefinition.type === 1 || tagDefinition.type === 2) {\n    if (typeof element === 'undefined') {\n      throw new Error('Missing or empty ' + tagDefinition.name);\n    }\n  } else {\n    if (typeof element === 'undefined') {\n      // non mandatory value, exit\n      return;\n    }\n  }\n  let includes = false;\n  let tagValue;\n  if (element.value.length === 1) {\n    tagValue = element.value[0];\n  } else {\n    tagValue = element.value;\n  }\n  if (Array.isArray(tagValue)) {\n    for (let i = 0; i < tagDefinition.enum.length; ++i) {\n      if (!Array.isArray(tagDefinition.enum[i])) {\n        throw new Error('Cannot compare array and non array tag value.');\n      }\n      if (arraySortEquals(tagDefinition.enum[i], tagValue)) {\n        includes = true;\n        break;\n      }\n    }\n  } else {\n    includes = tagDefinition.enum.includes(tagValue);\n  }\n  if (!includes) {\n    throw new Error(\n      'Unsupported ' + tagDefinition.name + ' value: ' + tagValue);\n  }\n}\n\n/**\n * Create ROI slice buffers.\n *\n * @param {Image} image The mask image.\n * @param {MaskSegment[]} segments The mask segments.\n * @param {number} sliceOffset The slice offset.\n * @returns {object} The ROI slice image buffers.\n */\nfunction createRoiSliceBuffers(\n  image,\n  segments,\n  sliceOffset\n) {\n  // access functions\n  const numberOfComponents = image.getNumberOfComponents();\n  const isRGB = numberOfComponents === 3;\n  let getPixelValue;\n  let equalValues;\n  if (isRGB) {\n    getPixelValue = function (inputOffset) {\n      return {\n        r: image.getValueAtOffset(inputOffset),\n        g: image.getValueAtOffset(inputOffset + 1),\n        b: image.getValueAtOffset(inputOffset + 2)\n      };\n    };\n    equalValues = function (value, segment) {\n      return (\n        segment.displayRGBValue !== undefined &&\n        value.r === segment.displayRGBValue.r &&\n        value.g === segment.displayRGBValue.g &&\n        value.b === segment.displayRGBValue.b\n      );\n    };\n  } else {\n    getPixelValue = function (inputOffset) {\n      return image.getValueAtOffset(inputOffset);\n    };\n    equalValues = function (value, segment) {\n      return value === segment.displayValue;\n    };\n  }\n\n  // create binary mask buffers\n  const geometry = image.getGeometry();\n  const size = geometry.getSize();\n  const sliceSize = size.getDimSize(2);\n  const buffers = {};\n  for (let o = 0; o < sliceSize; ++o) {\n    const inputOffset = (sliceOffset + o) * numberOfComponents;\n    const pixelValue = getPixelValue(inputOffset);\n    for (const segment of segments) {\n      const number2 = segment.number - 1;\n      if (equalValues(pixelValue, segment)) {\n        if (buffers[number2] === undefined) {\n          buffers[number2] = new Uint8Array(sliceSize);\n        }\n        buffers[number2][o] = 1;\n      }\n    }\n  }\n  return buffers;\n}\n\n/**\n * Create ROI buffers.\n *\n * @param {Image} image The mask image.\n * @param {MaskSegment[]} segments The mask segments.\n * @returns {object} The ROI buffers.\n */\nfunction createRoiBuffers(image, segments) {\n  const geometry = image.getGeometry();\n  const size = geometry.getSize();\n\n  // image buffer to multi frame\n  const sliceSize = size.getDimSize(2);\n  const roiBuffers = {};\n  for (let k = 0; k < size.get(2); ++k) {\n    const sliceOffset = k * sliceSize;\n    // create slice buffers\n    const buffers = createRoiSliceBuffers(image, segments, sliceOffset);\n    // store slice buffers\n    const keys0 = Object.keys(buffers);\n    for (const key0 of keys0) {\n      if (roiBuffers[key0] === undefined) {\n        roiBuffers[key0] = {};\n      }\n      // ordering by slice index (follows posPat)\n      roiBuffers[key0][k] = buffers[key0];\n    }\n  }\n  return roiBuffers;\n}\n\n/**\n * List of DICOM Seg required tags.\n */\nconst RequiredDicomSegTags = [\n  {\n    name: 'TransferSyntaxUID',\n    tag: '00020010',\n    type: '1',\n    enum: [\n      transferSyntaxKeywords.ImplicitVRLittleEndian,\n      transferSyntaxKeywords.ExplicitVRLittleEndian,\n      transferSyntaxKeywords.ExplicitVRBigEndian\n    ]\n  },\n  {\n    name: 'MediaStorageSOPClassUID',\n    tag: '00020002',\n    type: '1',\n    enum: ['1.2.840.10008.5.1.4.1.1.66.4']\n  },\n  {\n    name: 'SOPClassUID',\n    tag: '00020002',\n    type: '1',\n    enum: ['1.2.840.10008.5.1.4.1.1.66.4']\n  },\n  {\n    name: 'Modality',\n    tag: '00080060',\n    type: '1',\n    enum: ['SEG']\n  },\n  {\n    name: 'SegmentationType',\n    tag: '00620001',\n    type: '1',\n    enum: ['BINARY']\n  },\n  {\n    name: 'DimensionOrganizationType',\n    tag: '00209311',\n    type: '3',\n    enum: ['3D']\n  },\n  {\n    name: 'ImageType',\n    tag: '00080008',\n    type: '1',\n    enum: [['DERIVED', 'PRIMARY']]\n  },\n  {\n    name: 'SamplesPerPixel',\n    tag: '00280002',\n    type: '1',\n    enum: [1]\n  },\n  {\n    name: 'PhotometricInterpretation',\n    tag: '00280004',\n    type: '1',\n    enum: ['MONOCHROME2']\n  },\n  {\n    name: 'PixelRepresentation',\n    tag: '00280103',\n    type: '1',\n    enum: [0]\n  },\n  {\n    name: 'BitsAllocated',\n    tag: '00280100',\n    type: '1',\n    enum: [1]\n  },\n  {\n    name: 'BitsStored',\n    tag: '00280101',\n    type: '1',\n    enum: [1]\n  },\n  {\n    name: 'HighBit',\n    tag: '00280102',\n    type: '1',\n    enum: [0]\n  },\n];\n\n/**\n * Get the default DICOM seg tags as an object.\n *\n * @returns {object} The default tags.\n */\nexport function getDefaultDicomSegJson() {\n  const tags = {};\n  for (let i = 0; i < RequiredDicomSegTags.length; ++i) {\n    const reqTag = RequiredDicomSegTags[i];\n    tags[reqTag.name] = reqTag.enum[0];\n  }\n  return tags;\n}\n\n/**\n * Mask {@link Image} factory.\n */\nexport class MaskFactory {\n\n  /**\n   * Possible warning created by checkElements.\n   *\n   * @type {string|undefined}\n   */\n  #warning;\n\n  /**\n   * Get a warning string if elements are not as expected.\n   * Created by checkElements.\n   *\n   * @returns {string|undefined} The warning.\n   */\n  getWarning() {\n    return this.#warning;\n  }\n\n  /**\n   * Check dicom elements. Throws an error if not suitable.\n   *\n   * @param {Object<string, DataElement>} _dicomElements The DICOM tags.\n   * @returns {string|undefined} A possible warning.\n   */\n  checkElements(_dicomElements) {\n    // does nothing\n    return;\n  }\n\n  /**\n   * Get an {@link Image} object from the read DICOM file.\n   *\n   * @param {Object<string, DataElement>} dataElements The DICOM tags.\n   * @param {Uint8Array | Int8Array |\n   *   Uint16Array | Int16Array |\n   *   Uint32Array | Int32Array} pixelBuffer The pixel buffer.\n   * @returns {Image} A new Image.\n   */\n  create(dataElements, pixelBuffer) {\n    // check required and supported tags\n    for (let d = 0; d < RequiredDicomSegTags.length; ++d) {\n      checkTag(dataElements, RequiredDicomSegTags[d]);\n    }\n\n    // image size\n    const size2D = getImage2DSize(dataElements);\n    const size = new Size([size2D[0], size2D[1], 1]);\n\n    const sliceSize = size.getTotalSize();\n\n    // frames\n    let frames = 1;\n    const framesElem = dataElements['00280008'];\n    if (typeof framesElem !== 'undefined') {\n      frames = parseInt(framesElem.value[0], 10);\n    }\n\n    if (frames !== pixelBuffer.length / sliceSize) {\n      throw new Error(\n        'Buffer and numberOfFrames meta are not equal.' +\n        frames + ' ' + pixelBuffer.length / sliceSize);\n    }\n\n    // Dimension Organization and Index\n    const dimension = getDimensionOrganization(dataElements);\n\n    // Segment Sequence\n    const segSequence = dataElements['00620002'];\n    if (typeof segSequence === 'undefined') {\n      throw new Error('Missing or empty segmentation sequence');\n    }\n    const segments = [];\n    let storeAsRGB = false;\n    for (let i = 0; i < segSequence.value.length; ++i) {\n      const segment = getSegment(segSequence.value[i]);\n      if (typeof segment.displayRGBValue !== 'undefined') {\n        // create rgb image\n        storeAsRGB = true;\n      }\n      // store\n      segments.push(segment);\n    }\n\n\n    // Shared Functional Groups Sequence\n    let spacing;\n    let imageOrientationPatient;\n    const sharedFunctionalGroupsSeq = dataElements['52009229'];\n    if (typeof sharedFunctionalGroupsSeq !== 'undefined') {\n      // should be only one\n      const funcGroup0 = sharedFunctionalGroupsSeq.value[0];\n      // Plane Orientation Sequence\n      if (typeof funcGroup0['00209116'] !== 'undefined') {\n        const planeOrientationSeq = funcGroup0['00209116'];\n        if (planeOrientationSeq.value.length !== 0) {\n          // should be only one\n          imageOrientationPatient =\n            planeOrientationSeq.value[0]['00200037'].value;\n        } else {\n          logger.warn(\n            'No shared functional group plane orientation sequence items.');\n        }\n      }\n      // Pixel Measures Sequence\n      if (typeof funcGroup0['00289110'] !== 'undefined') {\n        const pixelMeasuresSeq = funcGroup0['00289110'];\n        if (pixelMeasuresSeq.value.length !== 0) {\n          // should be only one\n          spacing = getSpacingFromMeasure(pixelMeasuresSeq.value[0]);\n        } else {\n          logger.warn(\n            'No shared functional group pixel measure sequence items.');\n        }\n      }\n    }\n\n    const includesPosPat = function (arr, val) {\n      return arr.some(function (arrVal) {\n        return equalPosPat(val, arrVal);\n      });\n    };\n\n    const findIndexPosPat = function (arr, val) {\n      return arr.findIndex(function (arrVal) {\n        return equalPosPat(val, arrVal);\n      });\n    };\n\n    // Per-frame Functional Groups Sequence\n    const perFrameFuncGroupSequence = dataElements['52009230'];\n    if (typeof perFrameFuncGroupSequence === 'undefined') {\n      throw new Error('Missing or empty per frame functional sequence');\n    }\n    if (frames !== perFrameFuncGroupSequence.value.length) {\n      throw new Error(\n        'perFrameFuncGroupSequence meta and numberOfFrames are not equal.');\n    }\n    // create frame info object from per frame func\n    const frameInfos = [];\n    for (let j = 0; j < perFrameFuncGroupSequence.value.length; ++j) {\n      frameInfos.push(\n        getSegmentFrameInfo(perFrameFuncGroupSequence.value[j]));\n    }\n\n    // check frame infos\n    const framePosPats = [];\n    for (let ii = 0; ii < frameInfos.length; ++ii) {\n      if (!includesPosPat(framePosPats, frameInfos[ii].imagePosPat)) {\n        framePosPats.push(frameInfos[ii].imagePosPat);\n      }\n      // store orientation if needed, avoid multi\n      if (typeof frameInfos[ii].imageOrientationPatient !== 'undefined') {\n        if (typeof imageOrientationPatient === 'undefined') {\n          imageOrientationPatient = frameInfos[ii].imageOrientationPatient;\n        } else {\n          if (!arraySortEquals(\n            imageOrientationPatient, frameInfos[ii].imageOrientationPatient)) {\n            throw new Error('Unsupported multi orientation dicom seg.');\n          }\n        }\n      }\n      // store spacing if needed, avoid multi\n      if (typeof frameInfos[ii].spacing !== 'undefined') {\n        if (typeof spacing === 'undefined') {\n          spacing = frameInfos[ii].spacing;\n        } else {\n          if (!spacing.equals(frameInfos[ii].spacing)) {\n            throw new Error('Unsupported multi resolution dicom seg.');\n          }\n        }\n      }\n    }\n\n    // check spacing and orientation\n    if (typeof spacing === 'undefined') {\n      throw new Error('No spacing found for DICOM SEG');\n    }\n    if (spacing.length() !== 3) {\n      throw new Error('Incomplete spacing found for DICOM SEG');\n    }\n    if (typeof imageOrientationPatient === 'undefined') {\n      throw new Error('No imageOrientationPatient found for DICOM SEG');\n    }\n    if (imageOrientationPatient.length !== 6) {\n      throw new Error('Incomplete imageOrientationPatient found for DICOM SEG');\n    }\n\n    // orientation\n    const rowCosines = new Vector3D(\n      parseFloat(imageOrientationPatient[0]),\n      parseFloat(imageOrientationPatient[1]),\n      parseFloat(imageOrientationPatient[2]));\n    const colCosines = new Vector3D(\n      parseFloat(imageOrientationPatient[3]),\n      parseFloat(imageOrientationPatient[4]),\n      parseFloat(imageOrientationPatient[5]));\n    const normal = rowCosines.crossProduct(colCosines);\n    /* eslint-disable @stylistic/js/array-element-newline */\n    const orientationMatrix = new Matrix33([\n      rowCosines.getX(), colCosines.getX(), normal.getX(),\n      rowCosines.getY(), colCosines.getY(), normal.getY(),\n      rowCosines.getZ(), colCosines.getZ(), normal.getZ()\n    ]);\n    /* eslint-enable @stylistic/js/array-element-newline */\n\n    // sort positions patient\n    framePosPats.sort(getComparePosPat(orientationMatrix));\n\n    const point3DFromArray = function (arr) {\n      return new Point3D(arr[0], arr[1], arr[2]);\n    };\n\n    // frame origins\n    const frameOrigins = [];\n    for (let n = 0; n < framePosPats.length; ++n) {\n      frameOrigins.push(point3DFromArray(framePosPats[n]));\n    }\n\n    // tmp geometry with correct spacing but only one slice\n    const tmpGeometry = new Geometry(\n      frameOrigins[0], size, spacing, orientationMatrix);\n\n    // origin distance test\n    // TODO: maybe use sliceSpacing / 10\n    const isAboveEpsilon = function (value) {\n      let res = value > REAL_WORLD_EPSILON;\n      if (res) {\n        // try larger epsilon\n        res = value > REAL_WORLD_EPSILON * 10;\n        if (!res) {\n          // warn if epsilon < value < epsilon * 10\n          logger.warn(\n            'Using larger real world epsilon in SEG pos pat adding'\n          );\n        } else {\n          res = value > REAL_WORLD_EPSILON * 100;\n          if (!res) {\n            // warn if epsilon < value < epsilon * 100\n            logger.warn(\n              'Using larger+ real world epsilon in SEG pos pat adding'\n            );\n          }\n        }\n      }\n      return res;\n    };\n\n    // add possibly missing posPats\n    const posPats = [];\n    posPats.push(framePosPats[0]);\n    let sliceIndex = 0;\n    for (let g = 1; g < framePosPats.length; ++g) {\n      ++sliceIndex;\n      let index = new Index([0, 0, sliceIndex]);\n      let point = tmpGeometry.indexToWorld(index).get3D();\n      const frameOrigin = frameOrigins[g];\n      // check if more pos pats are needed\n      let dist = frameOrigin.getDistance(point);\n      const distPrevious = dist;\n      // TODO: good threshold?\n      while (isAboveEpsilon(dist)) {\n        logger.debug('Adding intermediate pos pats for DICOM seg at ' +\n          point.toString());\n        posPats.push([point.getX(), point.getY(), point.getZ()]);\n        ++sliceIndex;\n        index = new Index([0, 0, sliceIndex]);\n        point = tmpGeometry.indexToWorld(index).get3D();\n        dist = frameOrigin.getDistance(point);\n        if (dist > distPrevious) {\n          throw new Error(\n            'Test distance is increasing when adding intermediate pos pats');\n        }\n      }\n      // add frame pos pat\n      posPats.push(framePosPats[g]);\n    }\n\n    // as many slices as posPats\n    const numberOfSlices = posPats.length;\n\n    // final geometry\n    const geometry = new Geometry(\n      frameOrigins[0], size, spacing, orientationMatrix);\n    const uids = ['0'];\n    for (let m = 1; m < numberOfSlices; ++m) {\n      geometry.appendOrigin(point3DFromArray(posPats[m]), m);\n      uids.push(m.toString());\n    }\n\n    const getFindSegmentFunc = function (number) {\n      return function (item) {\n        return item.number === number;\n      };\n    };\n\n    // create output buffer\n    const mul = storeAsRGB ? 3 : 1;\n    const buffer =\n      // @ts-ignore\n      new pixelBuffer.constructor(mul * sliceSize * numberOfSlices);\n    buffer.fill(0);\n    // merge frame buffers\n    let sliceOffset = null;\n    let frameOffset = null;\n    for (let f = 0; f < frameInfos.length; ++f) {\n      // get the slice index from the position in the posPat array\n      sliceIndex = findIndexPosPat(posPats, frameInfos[f].imagePosPat);\n      frameOffset = sliceSize * f;\n      sliceOffset = sliceSize * sliceIndex;\n      // get the frame display value\n      const frameSegment = segments.find(\n        getFindSegmentFunc(frameInfos[f].refSegmentNumber)\n      );\n      for (let l = 0; l < sliceSize; ++l) {\n        if (pixelBuffer[frameOffset + l] !== 0) {\n          const offset = mul * (sliceOffset + l);\n          if (storeAsRGB) {\n            buffer[offset] = frameSegment.displayRGBValue.r;\n            buffer[offset + 1] = frameSegment.displayRGBValue.g;\n            buffer[offset + 2] = frameSegment.displayRGBValue.b;\n          } else {\n            buffer[offset] = frameSegment.displayValue;\n          }\n        }\n      }\n    }\n\n    // create image\n    const image = new Image(geometry, buffer, uids);\n    if (storeAsRGB) {\n      image.setPhotometricInterpretation('RGB');\n    }\n    // meta information\n    const meta = getDefaultDicomSegJson();\n    const safeGet = function (key) {\n      let res;\n      const element = dataElements[key];\n      if (typeof element !== 'undefined') {\n        res = element.value[0];\n      }\n      return res;\n    };\n    // Study\n    meta.StudyDate = safeGet('00080020');\n    meta.StudyTime = safeGet('00080030');\n    meta.StudyInstanceUID = safeGet('0020000D');\n    meta.StudyID = safeGet('00200010');\n    // Series\n    meta.SeriesDate = safeGet('00080021');\n    meta.SeriesTime = safeGet('00080031');\n    meta.SeriesInstanceUID = safeGet('0020000E');\n    meta.SeriesNumber = safeGet('00200011');\n    // ReferringPhysicianName\n    meta.ReferringPhysicianName = safeGet('00080090');\n    // patient info\n    meta.PatientName = safeGet('00100010');\n    meta.PatientID = safeGet('00100020');\n    meta.PatientBirthDate = safeGet('00100030');\n    meta.PatientSex = safeGet('00100040');\n    // Enhanced General Equipment Module\n    meta.Manufacturer = safeGet('00080070');\n    meta.ManufacturerModelName = safeGet('00081090');\n    meta.DeviceSerialNumber = safeGet('00181000');\n    meta.SoftwareVersions = safeGet('00181020');\n    // dicom seg dimension\n    meta.DimensionOrganizationSequence = dimension.organizations;\n    meta.DimensionIndexSequence = dimension.indices;\n    // custom\n    meta.custom = {\n      segments: segments,\n      frameInfos: frameInfos,\n      SOPInstanceUID: dataElements['00080018'].value[0]\n    };\n\n    // number of files: in this case equal to number slices,\n    //   used to calculate buffer size\n    meta.numberOfFiles = numberOfSlices;\n    // FrameOfReferenceUID (optional)\n    const frameOfReferenceUID = dataElements['00200052'];\n    if (frameOfReferenceUID) {\n      meta.FrameOfReferenceUID = frameOfReferenceUID.value[0];\n    }\n    // LossyImageCompression (optional)\n    const lossyImageCompression = dataElements['00282110'];\n    if (lossyImageCompression) {\n      meta.LossyImageCompression = lossyImageCompression.value[0];\n    }\n\n    image.setMeta(meta);\n\n    return image;\n  }\n\n  /**\n   * Convert a mask image into a DICOM segmentation object.\n   *\n   * @param {Image} image The mask image.\n   * @param {MaskSegment[]} segments The mask segments.\n   * @param {Image} sourceImage The source image.\n   * @param {Object<string, any>} [extraTags] Optional list of extra tags.\n   * @returns {Object<string, DataElement>} A list of dicom elements.\n   */\n  toDicom(\n    image,\n    segments,\n    sourceImage,\n    extraTags\n  ) {\n    // original image tags\n    const tags = image.getMeta();\n\n    // use image segments if not provided as input\n    if (segments === undefined) {\n      segments = tags.segments;\n    }\n\n    const geometry = image.getGeometry();\n    const size = geometry.getSize();\n\n    // (not in meta)\n    tags.Rows = size.get(1);\n    tags.Columns = size.get(0);\n    // update content tags\n    const now = new Date();\n    tags.ContentDate = getDicomDate(dateToDateObj(now));\n    tags.ContentTime = getDicomTime(dateToTimeObj(now));\n\n    // keep source image StudyInstanceUID\n    if (sourceImage !== undefined) {\n      tags.StudyInstanceUID = (sourceImage.getMeta()).StudyInstanceUID;\n    }\n\n    // segments\n    const segmentItems = [];\n    for (const segment of segments) {\n      segmentItems.push(getDicomSegmentItem(segment));\n    }\n    tags.SegmentSequence = {\n      value: segmentItems\n    };\n\n    // Shared Functional Groups Sequence\n    tags.SharedFunctionalGroupsSequence = {\n      value: [\n        {\n          PlaneOrientationSequence: {\n            value: [getDicomPlaneOrientationItem(geometry.getOrientation())]\n          },\n          PixelMeasuresSequence: {\n            value: [getDicomMeasureItem(geometry.getSpacing())]\n          }\n        }\n      ]\n    };\n\n    // image buffer to multi frame\n    const roiBuffers = createRoiBuffers(image, segments);\n\n    const frameInfos = [];\n\n    // flatten buffer array\n    const finalBuffers = [];\n    const referencedSOPs = [];\n    for (const segment of segments) {\n      const number40 = segment.number;\n      const number4 = number40 - 1;\n      // check if buffer has values\n      if (roiBuffers[number4] === undefined) {\n        continue;\n      }\n      const keys1 = Object.keys(roiBuffers[number4]);\n      // revert slice order\n      for (let k1 = keys1.length - 1; k1 >= 0; --k1) {\n        const key1 = Number.parseInt(keys1[k1], 10);\n        finalBuffers.push(roiBuffers[number4][key1]);\n        // frame info\n        const posPat = image.getGeometry().getOrigins()[key1];\n        const posPatArray = [posPat.getX(), posPat.getY(), posPat.getZ()];\n        const frameInfo = {\n          dimIndex: [number40, keys1.length - k1],\n          imagePosPat: posPatArray,\n          refSegmentNumber: number40\n        };\n        // derivation image info\n        if (sourceImage !== undefined) {\n          const sourceGeometry = sourceImage.getGeometry();\n          const sourceIndex = sourceGeometry.worldToIndex(\n            new Point([posPat.getX(), posPat.getY(), posPat.getZ()])\n          );\n          frameInfo.derivationImages = [\n            {\n              sourceImages: [\n                {\n                  referencedSOPInstanceUID:\n                    sourceImage.getImageUid(sourceIndex),\n                  referencedSOPClassUID:\n                    (sourceImage.getMeta()).SOPClassUID\n                }\n              ]\n            }\n          ];\n          // store as tag\n          referencedSOPs.push({\n            ReferencedSOPInstanceUID:\n              sourceImage.getImageUid(sourceIndex),\n            ReferencedSOPClassUID:\n              (sourceImage.getMeta()).SOPClassUID\n          });\n        }\n        frameInfos.push(frameInfo);\n      }\n    }\n\n    tags.NumberOfFrames = finalBuffers.length.toString();\n\n    // frame infos\n    const frameInfosTag = [];\n    for (const frameInfo of frameInfos) {\n      frameInfosTag.push(getDicomSegmentFrameInfoItem(frameInfo));\n    }\n    tags.PerFrameFunctionalGroupsSequence = {\n      value: frameInfosTag\n    };\n\n    // also store referenced SOPs in ReferencedSeriesSequence\n    if (sourceImage !== undefined) {\n      const refSeriesTag = [];\n      refSeriesTag.push({\n        ReferencedInstanceSequence: {\n          value: referencedSOPs\n        },\n        SeriesInstanceUID: (sourceImage.getMeta()).SeriesInstanceUID\n      });\n      tags.ReferencedSeriesSequence = {\n        value: refSeriesTag\n      };\n    }\n\n    // merge extra tags if provided\n    if (extraTags !== undefined) {\n      mergeTags(tags, extraTags);\n    }\n\n    // convert JSON to DICOM element object\n    const dicomElements = getElementsFromJSONTags(tags);\n\n    // pixel value length: divide by 8 to trigger binary write\n    const sliceSize = size.getDimSize(2);\n    const pixVl = (finalBuffers.length * sliceSize) / 8;\n    const de = new DataElement('OB');\n    de.tag = new Tag('7FE0', '0010');\n    de.vl = pixVl;\n    de.value = finalBuffers;\n    dicomElements['7FE00010'] = de;\n\n    return dicomElements;\n  }\n\n} // class MaskFactory\n","import {Index} from '../math/index';\nimport {Point3D} from '../math/point';\nimport {logger} from '../utils/logger';\nimport {arrayContains} from '../utils/array';\nimport {getTypedArray} from '../dicom/dicomParser';\nimport {ListenerHandler} from '../utils/listen';\nimport {colourRange} from './iterator';\nimport {RescaleSlopeAndIntercept} from './rsi';\nimport {ImageFactory} from './imageFactory';\nimport {MaskFactory} from './maskFactory';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Geometry} from './geometry';\nimport {Matrix33} from '../math/matrix';\nimport {NumberRange} from '../math/stats';\nimport {DataElement} from '../dicom/dataElement';\nimport {RGB} from '../utils/colour';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get the slice index of an input slice into a volume geometry.\n *\n * @param {Geometry} volumeGeometry The volume geometry.\n * @param {Geometry} sliceGeometry The slice geometry.\n * @returns {Index} The index of the slice in the volume geomtry.\n */\nfunction getSliceIndex(volumeGeometry, sliceGeometry) {\n  // possible time\n  const timeId = sliceGeometry.getInitialTime();\n  // index values\n  const values = [];\n  // x, y\n  values.push(0);\n  values.push(0);\n  // z\n  values.push(volumeGeometry.getSliceIndex(sliceGeometry.getOrigin(), timeId));\n  // time\n  if (typeof timeId !== 'undefined') {\n    values.push(timeId);\n  }\n  // return index\n  return new Index(values);\n}\n\n/**\n * Create an Image from DICOM elements.\n *\n * @param {Object<string, DataElement>} elements The DICOM elements.\n * @returns {Image} The Image object.\n */\nexport function createImage(elements) {\n  const factory = new ImageFactory();\n  return factory.create(\n    elements,\n    elements['7FE00010'].value[0],\n    1\n  );\n}\n\n/**\n * Create a mask Image from DICOM elements.\n *\n * @param {Object<string, DataElement>} elements The DICOM elements.\n * @returns {Image} The mask Image object.\n */\nexport function createMaskImage(elements) {\n  const factory = new MaskFactory();\n  return factory.create(\n    elements,\n    elements['7FE00010'].value[0]\n  );\n}\n\n/**\n * Image class.\n * Usable once created, optional are:\n * - rescale slope and intercept (default 1:0),\n * - photometric interpretation (default MONOCHROME2),\n * - planar configuration (default RGBRGB...).\n *\n * @example\n * // XMLHttpRequest onload callback\n * const onload = function (event) {\n *   // parse the dicom buffer\n *   const dicomParser = new dwv.DicomParser();\n *   dicomParser.parse(event.target.response);\n *   // create the image object\n *   const image = dwv.createImage(dicomParser.getDicomElements());\n *   // result div\n *   const div = document.getElementById('dwv');\n *   // display the image size\n *   const size = image.getGeometry().getSize();\n *   div.appendChild(document.createTextNode(\n *     'Size: ' + size.toString() +\n *     ' (should be 256,256,1)'));\n *   // break line\n *   div.appendChild(document.createElement('br'));\n *   // display a pixel value\n *   div.appendChild(document.createTextNode(\n *     'Pixel @ [128,40,0]: ' +\n *     image.getRescaledValue(128,40,0) +\n *     ' (should be 101)'));\n * };\n * // DICOM file request\n * const request = new XMLHttpRequest();\n * const url = 'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm';\n * request.open('GET', url);\n * request.responseType = 'arraybuffer';\n * request.onload = onload;\n * request.send();\n */\nexport class Image {\n\n  /**\n   * Data geometry.\n   *\n   * @type {Geometry}\n   */\n  #geometry;\n\n  /**\n   * List of compatible typed arrays.\n   *\n   * @typedef {(\n   *   Uint8Array | Int8Array |\n   *   Uint16Array | Int16Array |\n   *   Uint32Array | Int32Array\n   * )} TypedArray\n   */\n\n  /**\n   * Data buffer.\n   *\n   * @type {TypedArray}\n   */\n  #buffer;\n\n  /**\n   * Image UIDs.\n   *\n   * @type {string[]}\n   */\n  #imageUids;\n\n  /**\n   * Constant rescale slope and intercept (default).\n   *\n   * @type {RescaleSlopeAndIntercept}\n   */\n  #rsi = new RescaleSlopeAndIntercept(1, 0);\n\n  /**\n   * Varying rescale slope and intercept.\n   *\n   * @type {RescaleSlopeAndIntercept[]}\n   */\n  #rsis = null;\n\n  /**\n   * Flag to know if the RSIs are all identity (1,0).\n   *\n   * @type {boolean}\n   */\n  #isIdentityRSI = true;\n\n  /**\n   * Flag to know if the RSIs are all equals.\n   *\n   * @type {boolean}\n   */\n  #isConstantRSI = true;\n\n  /**\n   * Photometric interpretation (MONOCHROME, RGB...).\n   *\n   * @type {string}\n   */\n  #photometricInterpretation = 'MONOCHROME2';\n\n  /**\n   * Planar configuration for RGB data (`0:RGBRGBRGBRGB...` or\n   *   `1:RRR...GGG...BBB...`).\n   *\n   * @type {number}\n   */\n  #planarConfiguration = 0;\n\n  /**\n   * Number of components.\n   *\n   * @type {number}\n   */\n  #numberOfComponents;\n\n  /**\n   * Meta information.\n   *\n   * @type {Object<string, any>}\n   */\n  #meta = {};\n\n  /**\n   * Data range.\n   *\n   * @type {NumberRange}\n   */\n  #dataRange = null;\n\n  /**\n   * Rescaled data range.\n   *\n   * @type {NumberRange}\n   */\n  #rescaledDataRange = null;\n\n  /**\n   * Histogram.\n   *\n   * @type {Array}\n   */\n  #histogram = null;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * @param {Geometry} geometry The geometry of the image.\n   * @param {TypedArray} buffer The image data as a one dimensional buffer.\n   * @param {string[]} [imageUids] An array of Uids indexed to slice number.\n   */\n  constructor(geometry, buffer, imageUids) {\n    this.#geometry = geometry;\n    this.#buffer = buffer;\n    this.#imageUids = imageUids;\n\n    this.#numberOfComponents = this.#buffer.length / (\n      this.#geometry.getSize().getTotalSize());\n  }\n\n  /**\n   * Get the image UID at a given index.\n   *\n   * @param {Index} [index] The index at which to get the id.\n   * @returns {string} The UID.\n   */\n  getImageUid(index) {\n    let uid = this.#imageUids[0];\n    if (this.#imageUids.length !== 1 && typeof index !== 'undefined') {\n      uid = this.#imageUids[this.getSecondaryOffset(index)];\n    }\n    return uid;\n  }\n\n  /**\n   * Get the image origin for a image UID.\n   *\n   * @param {string} uid The UID.\n   * @returns {Point3D|undefined} The origin.\n   */\n  getOriginForImageUid(uid) {\n    let origin;\n    const uidIndex = this.#imageUids.indexOf(uid);\n    if (uidIndex !== -1) {\n      const origins = this.getGeometry().getOrigins();\n      origin = origins[uidIndex];\n    }\n    return origin;\n  }\n\n  /**\n   * Check if the image includes an UID.\n   *\n   * @param {string} uid The UID.\n   * @returns {boolean} True if present.\n   */\n  includesImageUid(uid) {\n    return this.#imageUids.includes(uid);\n  }\n\n  /**\n   * Check if this image includes the input uids.\n   *\n   * @param {string[]} uids UIDs to test for presence.\n   * @returns {boolean} True if all uids are in this image uids.\n   */\n  containsImageUids(uids) {\n    return arrayContains(this.#imageUids, uids);\n  }\n\n  /**\n   * Get the geometry of the image.\n   *\n   * @returns {Geometry} The geometry.\n   */\n  getGeometry() {\n    return this.#geometry;\n  }\n\n  /**\n   * Get the data buffer of the image.\n   *\n   * @todo Dangerous...\n   * @returns {TypedArray} The data buffer of the image.\n   */\n  getBuffer() {\n    return this.#buffer;\n  }\n\n  /**\n   * Can the image values be quantified?\n   *\n   * @returns {boolean} True if only one component.\n   */\n  canQuantify() {\n    return this.getNumberOfComponents() === 1;\n  }\n\n  /**\n   * Can window and level be applied to the data?\n   *\n   * @returns {boolean} True if the data is monochrome.\n   * @deprecated Please use isMonochrome instead.\n   */\n  canWindowLevel() {\n    return this.isMonochrome();\n  }\n\n  /**\n   * Is the data monochrome.\n   *\n   * @returns {boolean} True if the data is monochrome.\n   */\n  isMonochrome() {\n    return this.getPhotometricInterpretation()\n      .match(/MONOCHROME/) !== null;\n  }\n\n  /**\n   * Can the data be scrolled?\n   *\n   * @param {Matrix33} viewOrientation The view orientation.\n   * @returns {boolean} True if the data has a third dimension greater than one\n   *   after applying the view orientation.\n   */\n  canScroll(viewOrientation) {\n    const size = this.getGeometry().getSize();\n    // also check the numberOfFiles in case we are in the middle of a load\n    let nFiles = 1;\n    if (typeof this.#meta.numberOfFiles !== 'undefined') {\n      nFiles = this.#meta.numberOfFiles;\n    }\n    return size.canScroll(viewOrientation) || nFiles !== 1;\n  }\n\n  /**\n   * Get the secondary offset max.\n   *\n   * @returns {number} The maximum offset.\n   */\n  #getSecondaryOffsetMax() {\n    return this.#geometry.getSize().getTotalSize(2);\n  }\n\n  /**\n   * Get the secondary offset: an offset that takes into account\n   *   the slice and above dimension numbers.\n   *\n   * @param {Index} index The index.\n   * @returns {number} The offset.\n   */\n  getSecondaryOffset(index) {\n    return this.#geometry.getSize().indexToOffset(index, 2);\n  }\n\n  /**\n   * Get the rescale slope and intercept.\n   *\n   * @param {Index} [index] The index (only needed for non constant rsi).\n   * @returns {RescaleSlopeAndIntercept} The rescale slope and intercept.\n   */\n  getRescaleSlopeAndIntercept(index) {\n    let res = this.#rsi;\n    if (!this.isConstantRSI()) {\n      if (typeof index === 'undefined') {\n        throw new Error('Cannot get non constant RSI with empty slice index.');\n      }\n      const offset = this.getSecondaryOffset(index);\n      if (typeof this.#rsis[offset] !== 'undefined') {\n        res = this.#rsis[offset];\n      } else {\n        logger.warn('undefined non constant rsi at ' + offset);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Get the rsi at a specified (secondary) offset.\n   *\n   * @param {number} offset The desired (secondary) offset.\n   * @returns {RescaleSlopeAndIntercept} The coresponding rsi.\n   */\n  #getRescaleSlopeAndInterceptAtOffset(offset) {\n    return this.#rsis[offset];\n  }\n\n  /**\n   * Set the rescale slope and intercept.\n   *\n   * @param {RescaleSlopeAndIntercept} inRsi The input rescale\n   *   slope and intercept.\n   * @param {number} [offset] The rsi offset (only needed for non constant rsi).\n   */\n  setRescaleSlopeAndIntercept(inRsi, offset) {\n    // update identity flag\n    this.#isIdentityRSI = this.#isIdentityRSI && inRsi.isID();\n    // update constant flag\n    if (!this.#isConstantRSI) {\n      if (typeof offset === 'undefined') {\n        throw new Error(\n          'Cannot store non constant RSI with empty slice index.');\n      }\n      this.#rsis.splice(offset, 0, inRsi);\n    } else {\n      if (!this.#rsi.equals(inRsi)) {\n        if (typeof offset === 'undefined') {\n          // no slice index, replace existing\n          this.#rsi = inRsi;\n        } else {\n          // first non constant rsi\n          this.#isConstantRSI = false;\n          // switch to non constant mode\n          this.#rsis = [];\n          // initialise RSIs\n          for (let i = 0, leni = this.#getSecondaryOffsetMax(); i < leni; ++i) {\n            this.#rsis.push(this.#rsi);\n          }\n          // store\n          this.#rsi = null;\n          this.#rsis.splice(offset, 0, inRsi);\n        }\n      }\n    }\n  }\n\n  /**\n   * Are all the RSIs identity (1,0).\n   *\n   * @returns {boolean} True if they are.\n   */\n  isIdentityRSI() {\n    return this.#isIdentityRSI;\n  }\n\n  /**\n   * Are all the RSIs equal.\n   *\n   * @returns {boolean} True if they are.\n   */\n  isConstantRSI() {\n    return this.#isConstantRSI;\n  }\n\n  /**\n   * Get the photometricInterpretation of the image.\n   *\n   * @returns {string} The photometricInterpretation of the image.\n   */\n  getPhotometricInterpretation() {\n    return this.#photometricInterpretation;\n  }\n\n  /**\n   * Set the photometricInterpretation of the image.\n   *\n   * @param {string} interp The photometricInterpretation of the image.\n   */\n  setPhotometricInterpretation(interp) {\n    this.#photometricInterpretation = interp;\n  }\n\n  /**\n   * Get the planarConfiguration of the image.\n   *\n   * @returns {number} The planarConfiguration of the image.\n   */\n  getPlanarConfiguration() {\n    return this.#planarConfiguration;\n  }\n\n  /**\n   * Set the planarConfiguration of the image.\n   *\n   * @param {number} config The planarConfiguration of the image.\n   */\n  setPlanarConfiguration(config) {\n    this.#planarConfiguration = config;\n  }\n\n  /**\n   * Get the numberOfComponents of the image.\n   *\n   * @returns {number} The numberOfComponents of the image.\n   */\n  getNumberOfComponents() {\n    return this.#numberOfComponents;\n  }\n\n  /**\n   * Get the meta information of the image.\n   *\n   * @returns {Object<string, any>} The meta information of the image.\n   */\n  getMeta() {\n    return this.#meta;\n  }\n\n  /**\n   * Set the meta information of the image.\n   *\n   * @param {Object<string, any>} rhs The meta information of the image.\n   */\n  setMeta(rhs) {\n    this.#meta = rhs;\n  }\n\n  /**\n   * Get value at offset. Warning: No size check...\n   *\n   * @param {number} offset The desired offset.\n   * @returns {number} The value at offset.\n   */\n  getValueAtOffset(offset) {\n    return this.#buffer[offset];\n  }\n\n  /**\n   * Get the offsets where the buffer equals the input value.\n   * Loops through the whole volume, can get long for big data...\n   *\n   * @param {number|RGB} value The value to check.\n   * @returns {number[]} The list of offsets.\n   */\n  getOffsets(value) {\n    // value to array\n    let bufferValue;\n    if (typeof value === 'number') {\n      if (this.#numberOfComponents !== 1) {\n        throw new Error(\n          'Number of components is not 1 for getting single value.');\n      }\n      bufferValue = [value];\n    } else if (typeof value.r !== 'undefined' &&\n      typeof value.g !== 'undefined' &&\n      typeof value.b !== 'undefined') {\n      if (this.#numberOfComponents !== 3) {\n        throw new Error(\n          'Number of components is not 3 for getting RGB value.');\n      }\n      bufferValue = [value.r, value.g, value.b];\n    }\n\n    // main loop\n    const offsets = [];\n    let equal;\n    for (let i = 0; i < this.#buffer.length; i = i + this.#numberOfComponents) {\n      equal = true;\n      for (let j = 0; j < this.#numberOfComponents; ++j) {\n        if (this.#buffer[i + j] !== bufferValue[j]) {\n          equal = false;\n          break;\n        }\n      }\n      if (equal) {\n        offsets.push(i);\n      }\n    }\n    return offsets;\n  }\n\n  /**\n   * Check if the input values are in the buffer.\n   * Could loop through the whole volume, can get long for big data...\n   *\n   * @param {Array} values The values to check.\n   * @returns {boolean[]} A list of booleans for each input value,\n   *   set to true if the value is present in the buffer.\n   */\n  hasValues(values) {\n    // check input\n    if (typeof values === 'undefined' ||\n      values.length === 0) {\n      return [];\n    }\n    // final array value\n    const finalValues = [];\n    for (let v1 = 0; v1 < values.length; ++v1) {\n      if (this.#numberOfComponents === 1) {\n        finalValues.push([values[v1]]);\n      } else if (this.#numberOfComponents === 3) {\n        finalValues.push([\n          values[v1].r,\n          values[v1].g,\n          values[v1].b\n        ]);\n      }\n    }\n    // find callback\n    let equalFunc;\n    if (this.#numberOfComponents === 1) {\n      equalFunc = function (a, b) {\n        return a[0] === b[0];\n      };\n    } else if (this.#numberOfComponents === 3) {\n      equalFunc = function (a, b) {\n        return a[0] === b[0] &&\n          a[1] === b[1] &&\n          a[2] === b[2];\n      };\n    }\n    const getEqualCallback = function (value) {\n      return function (item) {\n        return equalFunc(item, value);\n      };\n    };\n    // main loop\n    const res = new Array(values.length);\n    res.fill(false);\n    const valuesToFind = finalValues.slice();\n    let equal;\n    let indicesToRemove;\n    for (let i = 0, leni = this.#buffer.length;\n      i < leni; i = i + this.#numberOfComponents) {\n      indicesToRemove = [];\n      for (let v = 0; v < valuesToFind.length; ++v) {\n        equal = true;\n        // check value(s)\n        for (let j = 0; j < this.#numberOfComponents; ++j) {\n          if (this.#buffer[i + j] !== valuesToFind[v][j]) {\n            equal = false;\n            break;\n          }\n        }\n        // if found, store answer and add to indices to remove\n        if (equal) {\n          const valIndex = finalValues.findIndex(\n            getEqualCallback(valuesToFind[v]));\n          res[valIndex] = true;\n          indicesToRemove.push(v);\n        }\n      }\n      // remove found values\n      for (let r = 0; r < indicesToRemove.length; ++r) {\n        valuesToFind.splice(indicesToRemove[r], 1);\n      }\n      // exit if no values to find\n      if (valuesToFind.length === 0) {\n        break;\n      }\n    }\n    // return\n    return res;\n  }\n\n  /**\n   * Clone the image.\n   *\n   * @returns {Image} A clone of this image.\n   */\n  clone() {\n    // clone the image buffer\n    const clonedBuffer = this.#buffer.slice(0);\n    // create the image copy\n    const copy = new Image(this.getGeometry(), clonedBuffer, this.#imageUids);\n    // copy the RSI(s)\n    if (this.isConstantRSI()) {\n      copy.setRescaleSlopeAndIntercept(this.getRescaleSlopeAndIntercept());\n    } else {\n      for (let i = 0; i < this.#getSecondaryOffsetMax(); ++i) {\n        copy.setRescaleSlopeAndIntercept(\n          this.#getRescaleSlopeAndInterceptAtOffset(i), i);\n      }\n    }\n    // copy extras\n    copy.setPhotometricInterpretation(this.getPhotometricInterpretation());\n    copy.setPlanarConfiguration(this.getPlanarConfiguration());\n    copy.setMeta(this.getMeta());\n    // return\n    return copy;\n  }\n\n  /**\n   * Re-allocate buffer memory to an input size.\n   *\n   * @param {number} size The new size.\n   */\n  #realloc(size) {\n    // save buffer\n    let tmpBuffer = this.#buffer;\n    // create new\n    this.#buffer = getTypedArray(\n      this.#buffer.BYTES_PER_ELEMENT * 8,\n      this.#meta.IsSigned ? 1 : 0,\n      size);\n    if (this.#buffer === null) {\n      throw new Error('Cannot reallocate data for image.');\n    }\n    // put old in new\n    this.#buffer.set(tmpBuffer);\n    // clean\n    tmpBuffer = null;\n  }\n\n  /**\n   * Append a slice to the image.\n   *\n   * @param {Image} rhs The slice to append.\n   * @fires Image#imagegeometrychange\n   */\n  appendSlice(rhs) {\n    // check input\n    if (rhs === null) {\n      throw new Error('Cannot append null slice');\n    }\n    const rhsSize = rhs.getGeometry().getSize();\n    let size = this.#geometry.getSize();\n    if (rhsSize.get(2) !== 1) {\n      throw new Error('Cannot append more than one slice');\n    }\n    if (size.get(0) !== rhsSize.get(0)) {\n      throw new Error('Cannot append a slice with different number of columns');\n    }\n    if (size.get(1) !== rhsSize.get(1)) {\n      throw new Error('Cannot append a slice with different number of rows');\n    }\n    if (!this.#geometry.getOrientation().equals(\n      rhs.getGeometry().getOrientation(), 0.0001)) {\n      throw new Error('Cannot append a slice with different orientation');\n    }\n    if (this.#photometricInterpretation !==\n      rhs.getPhotometricInterpretation()) {\n      throw new Error(\n        'Cannot append a slice with different photometric interpretation');\n    }\n    // all meta should be equal\n    for (const key in this.#meta) {\n      if (key === 'windowPresets' || key === 'numberOfFiles' ||\n        key === 'custom') {\n        continue;\n      }\n      if (this.#meta[key] !== rhs.getMeta()[key]) {\n        throw new Error('Cannot append a slice with different ' + key +\n          ': ' + this.#meta[key] + ' != ' + rhs.getMeta()[key]);\n      }\n    }\n\n    // update ranges\n    const rhsRange = rhs.getDataRange();\n    const range = this.getDataRange();\n    this.#dataRange = {\n      min: Math.min(rhsRange.min, range.min),\n      max: Math.max(rhsRange.max, range.max),\n    };\n    const rhsResRange = rhs.getRescaledDataRange();\n    const resRange = this.getRescaledDataRange();\n    this.#rescaledDataRange = {\n      min: Math.min(rhsResRange.min, resRange.min),\n      max: Math.max(rhsResRange.max, resRange.max),\n    };\n\n    // possible time\n    const timeId = rhs.getGeometry().getInitialTime();\n\n    // append frame if needed\n    let isNewFrame = false;\n    if (typeof timeId !== 'undefined' &&\n      !this.#geometry.hasSlicesAtTime(timeId)) {\n      // update grometry\n      this.appendFrame(timeId, rhs.getGeometry().getOrigin());\n      // update size\n      size = this.#geometry.getSize();\n      // update flag\n      isNewFrame = true;\n    }\n\n    // get slice index\n    const index = getSliceIndex(this.#geometry, rhs.getGeometry());\n\n    // calculate slice size\n    const sliceSize = this.#numberOfComponents * size.getDimSize(2);\n\n    // create full buffer if not done yet\n    if (typeof this.#meta.numberOfFiles === 'undefined') {\n      throw new Error('Missing number of files for buffer manipulation.');\n    }\n    const fullBufferSize = sliceSize * this.#meta.numberOfFiles;\n    if (this.#buffer.length !== fullBufferSize) {\n      this.#realloc(fullBufferSize);\n    }\n\n    // slice index\n    const sliceIndex = index.get(2);\n\n    // slice index including possible 4D\n    let fullSliceIndex = sliceIndex;\n    if (typeof timeId !== 'undefined') {\n      fullSliceIndex +=\n        this.#geometry.getCurrentNumberOfSlicesBeforeTime(timeId);\n    }\n    // offset of the input slice\n    const indexOffset = fullSliceIndex * sliceSize;\n    const maxOffset =\n      this.#geometry.getCurrentTotalNumberOfSlices() * sliceSize;\n    // move content if needed\n    if (indexOffset < maxOffset) {\n      this.#buffer.set(\n        this.#buffer.subarray(indexOffset, maxOffset),\n        indexOffset + sliceSize\n      );\n    }\n    // add new slice content\n    this.#buffer.set(rhs.getBuffer(), indexOffset);\n\n    // update geometry\n    if (!isNewFrame) {\n      this.#geometry.appendOrigin(\n        rhs.getGeometry().getOrigin(), sliceIndex, timeId);\n    }\n    // update rsi\n    // (rhs should just have one rsi)\n    this.setRescaleSlopeAndIntercept(\n      rhs.getRescaleSlopeAndIntercept(), fullSliceIndex);\n\n    // current number of images\n    const numberOfImages = this.#imageUids.length;\n\n    // insert sop instance UIDs\n    this.#imageUids.splice(fullSliceIndex, 0, rhs.getImageUid());\n\n    // update window presets\n    if (typeof this.#meta.windowPresets !== 'undefined') {\n      const windowPresets = this.#meta.windowPresets;\n      const rhsPresets = rhs.getMeta().windowPresets;\n      const keys = Object.keys(rhsPresets);\n      let pkey = null;\n      for (let i = 0; i < keys.length; ++i) {\n        pkey = keys[i];\n        const rhsPreset = rhsPresets[pkey];\n        const windowPreset = windowPresets[pkey];\n        if (typeof windowPreset !== 'undefined') {\n          // if not set or false, check perslice\n          if (typeof windowPreset.perslice === 'undefined' ||\n            windowPreset.perslice === false) {\n            // if different preset.wl, mark it as perslice\n            if (!windowPreset.wl[0].equals(rhsPreset.wl[0])) {\n              windowPreset.perslice = true;\n              // fill wl array with copy of wl[0]\n              // (loop on number of images minus the existing one)\n              for (let j = 0; j < numberOfImages - 1; ++j) {\n                windowPreset.wl.push(windowPreset.wl[0]);\n              }\n            }\n          }\n          // store (first) rhs preset.wl if needed\n          if (typeof windowPreset.perslice !== 'undefined' &&\n            windowPreset.perslice === true) {\n            windowPresets[pkey].wl.splice(\n              fullSliceIndex, 0, rhsPreset.wl[0]);\n          }\n        } else {\n          // if not defined (it should be), store all\n          windowPresets[pkey] = rhsPresets[pkey];\n        }\n      }\n    }\n    /**\n     * Image geometry change event.\n     *\n     * @event Image#imagegeometrychange\n     * @type {object}\n     */\n    this.#fireEvent({type: 'imagegeometrychange'});\n  }\n\n  /**\n   * Append a frame buffer to the image.\n   *\n   * @param {object} frameBuffer The frame buffer to append.\n   * @param {number} frameIndex The frame index.\n   */\n  appendFrameBuffer(frameBuffer, frameIndex) {\n    // create full buffer if not done yet\n    const size = this.#geometry.getSize();\n    const frameSize = this.#numberOfComponents * size.getDimSize(2);\n    if (typeof this.#meta.numberOfFiles === 'undefined') {\n      throw new Error('Missing number of files for frame buffer manipulation.');\n    }\n    const fullBufferSize = frameSize * this.#meta.numberOfFiles;\n    if (this.#buffer.length !== fullBufferSize) {\n      this.#realloc(fullBufferSize);\n    }\n    // check index\n    if (frameIndex >= this.#meta.numberOfFiles) {\n      logger.warn('Ignoring frame at index ' + frameIndex +\n        ' (size: ' + this.#meta.numberOfFiles + ')');\n      return;\n    }\n    // append\n    this.#buffer.set(frameBuffer, frameSize * frameIndex);\n    // update geometry\n    this.appendFrame(frameIndex, new Point3D(0, 0, 0));\n  }\n\n  /**\n   * Append a frame to the image.\n   *\n   * @param {number} time The frame time value.\n   * @param {Point3D} origin The origin of the frame.\n   */\n  appendFrame(time, origin) {\n    this.#geometry.appendFrame(origin, time);\n    this.#fireEvent({type: 'appendframe'});\n    // memory will be updated at the first appendSlice or appendFrameBuffer\n  }\n\n  /**\n   * Get the data range.\n   *\n   * @returns {NumberRange} The data range.\n   */\n  getDataRange() {\n    if (!this.#dataRange) {\n      this.#dataRange = this.calculateDataRange();\n    }\n    return this.#dataRange;\n  }\n\n  /**\n   * Get the rescaled data range.\n   *\n   * @returns {NumberRange} The rescaled data range.\n   */\n  getRescaledDataRange() {\n    if (!this.#rescaledDataRange) {\n      this.#rescaledDataRange = this.calculateRescaledDataRange();\n    }\n    return this.#rescaledDataRange;\n  }\n\n  /**\n   * Get the histogram.\n   *\n   * @returns {Array} The histogram.\n   */\n  getHistogram() {\n    if (!this.#histogram) {\n      const res = this.calculateHistogram();\n      this.#dataRange = res.dataRange;\n      this.#rescaledDataRange = res.rescaledDataRange;\n      this.#histogram = res.histogram;\n    }\n    return this.#histogram;\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  // ****************************************\n  // image data modifiers... carefull...\n  // ****************************************\n\n  /**\n   * Set the inner buffer values at given offsets.\n   *\n   * @param {number[]} offsets List of offsets where to set the data.\n   * @param {number|RGB} value The value to set at the given offsets.\n   * @fires Image#imagecontentchange\n   */\n  setAtOffsets(offsets, value) {\n    // value to array\n    let bufferValue;\n    if (typeof value === 'number') {\n      if (this.#numberOfComponents !== 1) {\n        throw new Error(\n          'Number of components is not 1 for setting single value.');\n      }\n      bufferValue = [value];\n    } else if (typeof value.r !== 'undefined' &&\n      typeof value.g !== 'undefined' &&\n      typeof value.b !== 'undefined') {\n      if (this.#numberOfComponents !== 3) {\n        throw new Error(\n          'Number of components is not 3 for setting RGB value.');\n      }\n      bufferValue = [value.r, value.g, value.b];\n    }\n\n    let offset;\n    for (let i = 0, leni = offsets.length; i < leni; ++i) {\n      offset = offsets[i];\n      for (let j = 0; j < this.#numberOfComponents; ++j) {\n        this.#buffer[offset + j] = bufferValue[j];\n      }\n    }\n    // fire imagecontentchange\n    this.#fireEvent({type: 'imagecontentchange'});\n  }\n\n  /**\n   * Set the inner buffer values at given offsets.\n   *\n   * @param {number[][]} offsetsLists List of offset lists where\n   *   to set the data.\n   * @param {RGB} value The value to set at the given offsets.\n   * @returns {Array} A list of objects representing the original values before\n   *  replacing them.\n   * @fires Image#imagecontentchange\n   */\n  setAtOffsetsAndGetOriginals(offsetsLists, value) {\n    const originalColoursLists = [];\n\n    // update and store\n    for (let j = 0; j < offsetsLists.length; ++j) {\n      const offsets = offsetsLists[j];\n      // first colour\n      let offset = offsets[0] * 3;\n      let previousColour = {\n        r: this.#buffer[offset],\n        g: this.#buffer[offset + 1],\n        b: this.#buffer[offset + 2]\n      };\n      // original value storage\n      const originalColours = [];\n      originalColours.push({\n        index: 0,\n        colour: previousColour\n      });\n      for (let i = 0; i < offsets.length; ++i) {\n        offset = offsets[i] * 3;\n        const currentColour = {\n          r: this.#buffer[offset],\n          g: this.#buffer[offset + 1],\n          b: this.#buffer[offset + 2]\n        };\n        // check if new colour\n        if (previousColour.r !== currentColour.r ||\n          previousColour.g !== currentColour.g ||\n          previousColour.b !== currentColour.b) {\n          // store new colour\n          originalColours.push({\n            index: i,\n            colour: currentColour\n          });\n          previousColour = currentColour;\n        }\n        // write update colour\n        this.#buffer[offset] = value.r;\n        this.#buffer[offset + 1] = value.g;\n        this.#buffer[offset + 2] = value.b;\n      }\n      originalColoursLists.push(originalColours);\n    }\n    // fire imagecontentchange\n    this.#fireEvent({type: 'imagecontentchange'});\n    return originalColoursLists;\n  }\n\n  /**\n   * Set the inner buffer values at given offsets.\n   *\n   * @param {number[][]} offsetsLists List of offset lists\n   *   where to set the data.\n   * @param {RGB|Array} value The value to set at the given offsets.\n   * @fires Image#imagecontentchange\n   */\n  setAtOffsetsWithIterator(offsetsLists, value) {\n    for (let j = 0; j < offsetsLists.length; ++j) {\n      const offsets = offsetsLists[j];\n      let iterator;\n      if (Array.isArray(value)) {\n        // input value is a list of iterators\n        // created by setAtOffsetsAndGetOriginals\n        iterator = colourRange(\n          value[j], offsets.length);\n      } else if (typeof value.r !== 'undefined' &&\n        typeof value.g !== 'undefined' &&\n        typeof value.b !== 'undefined') {\n        // input value is a simple color\n        iterator = colourRange(\n          [{index: 0, colour: value}], offsets.length);\n      }\n\n      // set values\n      let ival = iterator.next();\n      while (!ival.done) {\n        const offset = offsets[ival.index] * 3;\n        this.#buffer[offset] = ival.value.r;\n        this.#buffer[offset + 1] = ival.value.g;\n        this.#buffer[offset + 2] = ival.value.b;\n        ival = iterator.next();\n      }\n    }\n    /**\n     * Image change event.\n     *\n     * @event Image#imagecontentchange\n     * @type {object}\n     */\n    this.#fireEvent({type: 'imagecontentchange'});\n  }\n\n  /**\n   * Get the value of the image at a specific coordinate.\n   *\n   * @param {number} i The X index.\n   * @param {number} j The Y index.\n   * @param {number} k The Z index.\n   * @param {number} f The frame number.\n   * @returns {number} The value at the desired position.\n   * Warning: No size check...\n   */\n  getValue(i, j, k, f) {\n    const frame = (f || 0);\n    const index = new Index([i, j, k, frame]);\n    return this.getValueAtOffset(\n      this.getGeometry().getSize().indexToOffset(index));\n  }\n\n  /**\n   * Get the value of the image at a specific index.\n   *\n   * @param {Index} index The index.\n   * @returns {number} The value at the desired position.\n   * Warning: No size check...\n   */\n  getValueAtIndex(index) {\n    return this.getValueAtOffset(\n      this.getGeometry().getSize().indexToOffset(index));\n  }\n\n  /**\n   * Get the rescaled value of the image at a specific position.\n   *\n   * @param {number} i The X index.\n   * @param {number} j The Y index.\n   * @param {number} k The Z index.\n   * @param {number} f The frame number.\n   * @returns {number} The rescaled value at the desired position.\n   * Warning: No size check...\n   */\n  getRescaledValue(i, j, k, f) {\n    if (typeof f === 'undefined') {\n      f = 0;\n    }\n    let val = this.getValue(i, j, k, f);\n    if (!this.isIdentityRSI()) {\n      if (this.isConstantRSI()) {\n        val = this.getRescaleSlopeAndIntercept().apply(val);\n      } else {\n        const values = [i, j, k, f];\n        const index = new Index(values);\n        val = this.getRescaleSlopeAndIntercept(index).apply(val);\n      }\n    }\n    return val;\n  }\n\n  /**\n   * Get the rescaled value of the image at a specific index.\n   *\n   * @param {Index} index The index.\n   * @returns {number} The rescaled value at the desired position.\n   * Warning: No size check...\n   */\n  getRescaledValueAtIndex(index) {\n    return this.getRescaledValueAtOffset(\n      this.getGeometry().getSize().indexToOffset(index)\n    );\n  }\n\n  /**\n   * Get the rescaled value of the image at a specific offset.\n   *\n   * @param {number} offset The desired offset.\n   * @returns {number} The rescaled value at the desired offset.\n   * Warning: No size check...\n   */\n  getRescaledValueAtOffset(offset) {\n    let val = this.getValueAtOffset(offset);\n    if (!this.isIdentityRSI()) {\n      if (this.isConstantRSI()) {\n        val = this.getRescaleSlopeAndIntercept().apply(val);\n      } else {\n        const index = this.getGeometry().getSize().offsetToIndex(offset);\n        val = this.getRescaleSlopeAndIntercept(index).apply(val);\n      }\n    }\n    return val;\n  }\n\n  /**\n   * Calculate the data range of the image.\n   * WARNING: for speed reasons, only calculated on the first frame...\n   *\n   * @returns {object} The range {min, max}.\n   */\n  calculateDataRange() {\n    let min = this.getValueAtOffset(0);\n    let max = min;\n    let value = 0;\n    const size = this.getGeometry().getSize();\n    let leni = size.getTotalSize();\n    // max to 3D\n    if (size.length() >= 3) {\n      leni = size.getDimSize(3);\n    }\n    for (let i = 0; i < leni; ++i) {\n      value = this.getValueAtOffset(i);\n      if (value > max) {\n        max = value;\n      }\n      if (value < min) {\n        min = value;\n      }\n    }\n    // return\n    return {min: min, max: max};\n  }\n\n  /**\n   * Calculate the rescaled data range of the image.\n   * WARNING: for speed reasons, only calculated on the first frame...\n   *\n   * @returns {object} The range {min, max}.\n   */\n  calculateRescaledDataRange() {\n    if (this.isIdentityRSI()) {\n      return this.getDataRange();\n    } else if (this.isConstantRSI()) {\n      const range = this.getDataRange();\n      const resmin = this.getRescaleSlopeAndIntercept().apply(range.min);\n      const resmax = this.getRescaleSlopeAndIntercept().apply(range.max);\n      return {\n        min: ((resmin < resmax) ? resmin : resmax),\n        max: ((resmin > resmax) ? resmin : resmax)\n      };\n    } else {\n      let rmin = this.getRescaledValueAtOffset(0);\n      let rmax = rmin;\n      let rvalue = 0;\n      const size = this.getGeometry().getSize();\n      let leni = size.getTotalSize();\n      // max to 3D\n      if (size.length() === 3) {\n        leni = size.getDimSize(3);\n      }\n      for (let i = 0; i < leni; ++i) {\n        rvalue = this.getRescaledValueAtOffset(i);\n        if (rvalue > rmax) {\n          rmax = rvalue;\n        }\n        if (rvalue < rmin) {\n          rmin = rvalue;\n        }\n      }\n      // return\n      return {min: rmin, max: rmax};\n    }\n  }\n\n  /**\n   * Calculate the histogram of the image.\n   *\n   * @returns {object} The histogram, data range and rescaled data range.\n   */\n  calculateHistogram() {\n    const size = this.getGeometry().getSize();\n    const histo = [];\n    let min = this.getValueAtOffset(0);\n    let max = min;\n    let value = 0;\n    let rmin = this.getRescaledValueAtOffset(0);\n    let rmax = rmin;\n    let rvalue = 0;\n    for (let i = 0, leni = size.getTotalSize(); i < leni; ++i) {\n      value = this.getValueAtOffset(i);\n      if (value > max) {\n        max = value;\n      }\n      if (value < min) {\n        min = value;\n      }\n      rvalue = this.getRescaledValueAtOffset(i);\n      if (rvalue > rmax) {\n        rmax = rvalue;\n      }\n      if (rvalue < rmin) {\n        rmin = rvalue;\n      }\n      histo[rvalue] = (histo[rvalue] || 0) + 1;\n    }\n    // set data range\n    const dataRange = {min: min, max: max};\n    const rescaledDataRange = {min: rmin, max: rmax};\n    // generate data for plotting\n    const histogram = [];\n    for (let b = rmin; b <= rmax; ++b) {\n      histogram.push([b, (histo[b] || 0)]);\n    }\n    // return\n    return {\n      dataRange: dataRange,\n      rescaledDataRange: rescaledDataRange,\n      histogram: histogram\n    };\n  }\n\n  /**\n   * Convolute the image with a given 2D kernel.\n   *\n   * Note: Uses raw buffer values.\n   *\n   * @param {number[]} weights The weights of the 2D kernel as a 3x3 matrix.\n   * @returns {Image} The convoluted image.\n   */\n  convolute2D(weights) {\n    if (weights.length !== 9) {\n      throw new Error(\n        'The convolution matrix does not have a length of 9; it has ' +\n        weights.length);\n    }\n\n    const newImage = this.clone();\n    const newBuffer = newImage.getBuffer();\n\n    const imgSize = this.getGeometry().getSize();\n    const dimOffset = imgSize.getDimSize(2) * this.getNumberOfComponents();\n    for (let k = 0; k < imgSize.get(2); ++k) {\n      this.convoluteBuffer(weights, newBuffer, k * dimOffset);\n    }\n\n    return newImage;\n  }\n\n  /**\n   * Convolute an image buffer with a given 2D kernel.\n   *\n   * Note: Uses raw buffer values.\n   *\n   * @param {number[]} weights The weights of the 2D kernel as a 3x3 matrix.\n   * @param {TypedArray} buffer The buffer to convolute.\n   * @param {number} startOffset The index to start at.\n   */\n  convoluteBuffer(\n    weights, buffer, startOffset) {\n    const imgSize = this.getGeometry().getSize();\n    const ncols = imgSize.get(0);\n    const nrows = imgSize.get(1);\n    const ncomp = this.getNumberOfComponents();\n\n    // number of component and planar configuration vars\n    let factor = 1;\n    let componentOffset = 1;\n    if (ncomp === 3) {\n      if (this.getPlanarConfiguration() === 0) {\n        factor = 3;\n      } else {\n        componentOffset = imgSize.getDimSize(2);\n      }\n    }\n\n    // allow special indent for matrices\n    /*jshint indent:false */\n\n    // default weight offset matrix\n    const wOff = [];\n    wOff[0] = (-ncols - 1) * factor;\n    wOff[1] = (-ncols) * factor;\n    wOff[2] = (-ncols + 1) * factor;\n    wOff[3] = -factor;\n    wOff[4] = 0;\n    wOff[5] = 1 * factor;\n    wOff[6] = (ncols - 1) * factor;\n    wOff[7] = (ncols) * factor;\n    wOff[8] = (ncols + 1) * factor;\n\n    // border weight offset matrices\n    // borders are extended (see http://en.wikipedia.org/wiki/Kernel_%28image_processing%29)\n\n    // i=0, j=0\n    const wOff00 = [];\n    wOff00[0] = wOff[4]; wOff00[1] = wOff[4]; wOff00[2] = wOff[5];\n    wOff00[3] = wOff[4]; wOff00[4] = wOff[4]; wOff00[5] = wOff[5];\n    wOff00[6] = wOff[7]; wOff00[7] = wOff[7]; wOff00[8] = wOff[8];\n    // i=0, j=*\n    const wOff0x = [];\n    wOff0x[0] = wOff[1]; wOff0x[1] = wOff[1]; wOff0x[2] = wOff[2];\n    wOff0x[3] = wOff[4]; wOff0x[4] = wOff[4]; wOff0x[5] = wOff[5];\n    wOff0x[6] = wOff[7]; wOff0x[7] = wOff[7]; wOff0x[8] = wOff[8];\n    // i=0, j=nrows\n    const wOff0n = [];\n    wOff0n[0] = wOff[1]; wOff0n[1] = wOff[1]; wOff0n[2] = wOff[2];\n    wOff0n[3] = wOff[4]; wOff0n[4] = wOff[4]; wOff0n[5] = wOff[5];\n    wOff0n[6] = wOff[4]; wOff0n[7] = wOff[4]; wOff0n[8] = wOff[5];\n\n    // i=*, j=0\n    const wOffx0 = [];\n    wOffx0[0] = wOff[3]; wOffx0[1] = wOff[4]; wOffx0[2] = wOff[5];\n    wOffx0[3] = wOff[3]; wOffx0[4] = wOff[4]; wOffx0[5] = wOff[5];\n    wOffx0[6] = wOff[6]; wOffx0[7] = wOff[7]; wOffx0[8] = wOff[8];\n    // i=*, j=* -> wOff\n    // i=*, j=nrows\n    const wOffxn = [];\n    wOffxn[0] = wOff[0]; wOffxn[1] = wOff[1]; wOffxn[2] = wOff[2];\n    wOffxn[3] = wOff[3]; wOffxn[4] = wOff[4]; wOffxn[5] = wOff[5];\n    wOffxn[6] = wOff[3]; wOffxn[7] = wOff[4]; wOffxn[8] = wOff[5];\n\n    // i=ncols, j=0\n    const wOffn0 = [];\n    wOffn0[0] = wOff[3]; wOffn0[1] = wOff[4]; wOffn0[2] = wOff[4];\n    wOffn0[3] = wOff[3]; wOffn0[4] = wOff[4]; wOffn0[5] = wOff[4];\n    wOffn0[6] = wOff[6]; wOffn0[7] = wOff[7]; wOffn0[8] = wOff[7];\n    // i=ncols, j=*\n    const wOffnx = [];\n    wOffnx[0] = wOff[0]; wOffnx[1] = wOff[1]; wOffnx[2] = wOff[1];\n    wOffnx[3] = wOff[3]; wOffnx[4] = wOff[4]; wOffnx[5] = wOff[4];\n    wOffnx[6] = wOff[6]; wOffnx[7] = wOff[7]; wOffnx[8] = wOff[7];\n    // i=ncols, j=nrows\n    const wOffnn = [];\n    wOffnn[0] = wOff[0]; wOffnn[1] = wOff[1]; wOffnn[2] = wOff[1];\n    wOffnn[3] = wOff[3]; wOffnn[4] = wOff[4]; wOffnn[5] = wOff[4];\n    wOffnn[6] = wOff[3]; wOffnn[7] = wOff[4]; wOffnn[8] = wOff[4];\n\n    // restore indent for rest of method\n    /*jshint indent:4 */\n\n    // loop vars\n    let pixelOffset = startOffset;\n    let newValue = 0;\n    let wOffFinal = [];\n    for (let c = 0; c < ncomp; ++c) {\n      // component offset\n      pixelOffset += c * componentOffset;\n      for (let j = 0; j < nrows; ++j) {\n        for (let i = 0; i < ncols; ++i) {\n          wOffFinal = wOff;\n          // special border cases\n          if (i === 0 && j === 0) {\n            wOffFinal = wOff00;\n          } else if (i === 0 && j === (nrows - 1)) {\n            wOffFinal = wOff0n;\n          } else if (i === (ncols - 1) && j === 0) {\n            wOffFinal = wOffn0;\n          } else if (i === (ncols - 1) && j === (nrows - 1)) {\n            wOffFinal = wOffnn;\n          } else if (i === 0 && j !== (nrows - 1) && j !== 0) {\n            wOffFinal = wOff0x;\n          } else if (i === (ncols - 1) && j !== (nrows - 1) && j !== 0) {\n            wOffFinal = wOffnx;\n          } else if (i !== 0 && i !== (ncols - 1) && j === 0) {\n            wOffFinal = wOffx0;\n          } else if (i !== 0 && i !== (ncols - 1) && j === (nrows - 1)) {\n            wOffFinal = wOffxn;\n          }\n          // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n          newValue = 0;\n          for (let wi = 0; wi < 9; ++wi) {\n            newValue += this.getValueAtOffset(\n              pixelOffset + wOffFinal[wi]) * weights[wi];\n          }\n          buffer[pixelOffset] = newValue;\n          // increment pixel offset\n          pixelOffset += factor;\n        }\n      }\n    }\n  }\n\n  /**\n   * Transform an image using a specific operator.\n   * WARNING: no size check!\n   *\n   * @param {Function} operator The operator to use when transforming.\n   * @returns {Image} The transformed image.\n   * Note: Uses the raw buffer values.\n   */\n  transform(operator) {\n    const newImage = this.clone();\n    const newBuffer = newImage.getBuffer();\n    for (let i = 0, leni = newBuffer.length; i < leni; ++i) {\n      newBuffer[i] = operator(newImage.getValueAtOffset(i));\n    }\n    return newImage;\n  }\n\n  /**\n   * Compose this image with another one and using a specific operator.\n   * WARNING: no size check!\n   *\n   * @param {Image} rhs The image to compose with.\n   * @param {Function} operator The operator to use when composing.\n   * @returns {Image} The composed image.\n   * Note: Uses the raw buffer values.\n   */\n  compose(rhs, operator) {\n    const newImage = this.clone();\n    const newBuffer = newImage.getBuffer();\n    for (let i = 0, leni = newBuffer.length; i < leni; ++i) {\n      // using the operator on the local buffer, i.e. the\n      // latest (not original) data\n      newBuffer[i] = Math.floor(\n        operator(this.getValueAtOffset(i), rhs.getValueAtOffset(i))\n      );\n    }\n    return newImage;\n  }\n\n} // class Image\n","import {View} from './view';\nimport {luts} from './luts';\nimport {\n  WindowLevel,\n  defaultPresets\n} from './windowLevel';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\nimport {DataElement} from '../dicom/dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * {@link View} factory.\n */\nexport class ViewFactory {\n\n  /**\n   * Get an View object from the read DICOM file.\n   *\n   * @param {Object<string, DataElement>} dataElements The DICOM tags.\n   * @param {Image} image The associated image.\n   * @returns {View} The new View.\n   */\n  create(dataElements, image) {\n    // view\n    const view = new View(image);\n\n    // default color map\n    if (image.getPhotometricInterpretation() === 'MONOCHROME1') {\n      view.setColourMap('invPlain');\n    } else if (image.getPhotometricInterpretation() === 'PALETTE COLOR') {\n      if (typeof luts['palette'] !== 'undefined') {\n        view.setColourMap('palette');\n      } else {\n        logger.warn('Cannot find Palette lut');\n      }\n    }\n\n    // window level presets\n    let windowPresets = {};\n    // image presets\n    if (typeof image.getMeta().windowPresets !== 'undefined') {\n      windowPresets = image.getMeta().windowPresets;\n    }\n    // min/max\n    // Not filled yet since it is stil too costly to calculate min/max\n    // for each slice... It will be filled at first use\n    // (see view.setWindowLevelPreset).\n    // Order is important, if no wl from DICOM, this will be the default.\n    windowPresets.minmax = {name: 'minmax'};\n    // optional modality presets\n    if (typeof defaultPresets !== 'undefined') {\n      const modality = image.getMeta().Modality;\n      for (const key in defaultPresets[modality]) {\n        const preset = defaultPresets[modality][key];\n        windowPresets[key] = {\n          wl: [new WindowLevel(preset.center, preset.width)],\n          name: key\n        };\n      }\n    }\n\n    // store\n    view.setWindowPresets(windowPresets);\n\n    // initialise the view\n    view.init();\n\n    return view;\n  }\n\n} // class ViewFactory\n","import {Index} from '../math/index';\nimport {ModalityLut} from './modalityLut';\nimport {WindowLut} from './windowLut';\nimport {luts} from './luts';\nimport {VoiLut} from './voiLut';\nimport {WindowLevel} from './windowLevel';\nimport {generateImageDataMonochrome} from './viewMonochrome';\nimport {generateImageDataPaletteColor} from './viewPaletteColor';\nimport {generateImageDataRgb} from './viewRgb';\nimport {generateImageDataYbrFull} from './viewYbrFull';\nimport {ViewFactory} from './viewFactory';\nimport {isIdentityMat33} from '../math/matrix';\nimport {getSliceIterator} from '../image/iterator';\nimport {ListenerHandler} from '../utils/listen';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\nimport {RescaleSlopeAndIntercept} from './rsi';\nimport {ColourMap} from './luts';\nimport {Matrix33} from '../math/matrix';\nimport {\n  Point,\n  Point3D\n} from '../math/point';\nimport {DataElement} from '../dicom/dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * List of view event names.\n *\n * @type {string[]}\n */\nexport const viewEventNames = [\n  'wlchange',\n  'wlpresetadd',\n  'colourmapchange',\n  'positionchange',\n  'opacitychange',\n  'alphafuncchange'\n];\n\n/**\n * Create a View from DICOM elements and image.\n *\n * @param {Object<string, DataElement>} elements The DICOM elements.\n * @param {Image} image The associated image.\n * @returns {View} The View object.\n */\nexport function createView(elements, image) {\n  const factory = new ViewFactory();\n  return factory.create(elements, image);\n}\n\n/**\n * View class.\n *\n * Need to set the window lookup table once created\n * (either directly or with helper methods).\n *\n * @example\n * // XMLHttpRequest onload callback\n * const onload = function (event) {\n *   // parse the dicom buffer\n *   const dicomParser = new dwv.DicomParser();\n *   dicomParser.parse(event.target.response);\n *   // create the image object\n *   const image = dwv.createImage(dicomParser.getDicomElements());\n *   // create the view\n *   const view = dwv.createView(dicomParser.getDicomElements(), image);\n *   // setup canvas\n *   const canvas = document.createElement('canvas');\n *   canvas.width = 256;\n *   canvas.height = 256;\n *   const ctx = canvas.getContext(\"2d\");\n *   // update the image data\n *   const imageData = ctx.createImageData(256, 256);\n *   view.generateImageData(imageData);\n *   ctx.putImageData(imageData, 0, 0);\n *   // update html\n *   const div = document.getElementById('dwv');\n *   div.appendChild(canvas);;\n * };\n * // DICOM file request\n * const request = new XMLHttpRequest();\n * const url = 'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm';\n * request.open('GET', url);\n * request.responseType = 'arraybuffer';\n * request.onload = onload;\n * request.send();\n */\nexport class View {\n\n  /**\n   * The associated image.\n   *\n   * @type {Image}\n   */\n  #image;\n\n  /**\n   * Window lookup tables, indexed per Rescale Slope and Intercept (RSI).\n   *\n   * @type {WindowLut}\n   */\n  #windowLut;\n\n  /**\n   * Flag for image constant RSI.\n   *\n   * @type {boolean}\n   */\n  #isConstantRSI;\n\n  /**\n   * Window presets.\n   * Minmax will be filled at first use (see view.setWindowLevelPreset).\n   *\n   * @type {object}\n   */\n  #windowPresets = {minmax: {name: 'minmax'}};\n\n  /**\n   * Current window preset name.\n   *\n   * @type {string}\n   */\n  #currentPresetName = null;\n\n  /**\n   * Current window level.\n   *\n   * @type {WindowLevel}\n   */\n  #currentWl;\n\n  /**\n   * Colour map name.\n   *\n   * @type {string}\n   */\n  #colourMapName = 'plain';\n\n  /**\n   * Current position as a Point.\n   * Store position and not index to stay geometry independent.\n   *\n   * @type {Point}\n   */\n  #currentPosition = null;\n\n  /**\n   * View orientation. Undefined will use the original slice ordering.\n   *\n   * @type {Matrix33}\n   */\n  #orientation;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * @param {Image} image The associated image.\n   */\n  constructor(image) {\n    this.#image = image;\n\n    // listen to appendframe event to update the current position\n    //   to add the extra dimension\n    this.#image.addEventListener('appendframe', () => {\n      // update current position if first appendFrame\n      const index = this.getCurrentIndex();\n      if (index.length() === 3) {\n        // add dimension\n        const values = index.getValues();\n        values.push(0);\n        this.setCurrentIndex(new Index(values));\n      }\n    });\n  }\n\n  /**\n   * Get the associated image.\n   *\n   * @returns {Image} The associated image.\n   */\n  getImage() {\n    return this.#image;\n  }\n\n  /**\n   * Set the associated image.\n   *\n   * @param {Image} inImage The associated image.\n   */\n  setImage(inImage) {\n    this.#image = inImage;\n  }\n\n  /**\n   * Get the view orientation.\n   *\n   * @returns {Matrix33} The orientation matrix.\n   */\n  getOrientation() {\n    return this.#orientation;\n  }\n\n  /**\n   * Set the view orientation.\n   *\n   * @param {Matrix33} mat33 The orientation matrix.\n   */\n  setOrientation(mat33) {\n    this.#orientation = mat33;\n  }\n\n  /**\n   * Initialise the view: set initial index.\n   */\n  init() {\n    this.setInitialIndex();\n  }\n\n  /**\n   * Set the initial index to the middle position.\n   */\n  setInitialIndex() {\n    const geometry = this.#image.getGeometry();\n    const size = geometry.getSize();\n    const values = new Array(size.length());\n    values.fill(0);\n    // middle\n    values[0] = Math.floor(size.get(0) / 2);\n    values[1] = Math.floor(size.get(1) / 2);\n    values[2] = Math.floor(size.get(2) / 2);\n    this.setCurrentIndex(new Index(values), true);\n  }\n\n  /**\n   * Get the milliseconds per frame from frame rate.\n   *\n   * @param {number} recommendedDisplayFrameRate Recommended Display Frame Rate.\n   * @returns {number} The milliseconds per frame.\n   */\n  getPlaybackMilliseconds(recommendedDisplayFrameRate) {\n    if (!recommendedDisplayFrameRate) {\n      // Default to 10 FPS if none is found in the meta\n      recommendedDisplayFrameRate = 10;\n    }\n    // round milliseconds per frame to nearest whole number\n    return Math.round(1000 / recommendedDisplayFrameRate);\n  }\n\n  /**\n   * Per value alpha function.\n   *\n   * @param {number[]|number} _value The pixel value.\n   *   Can be a number for monochrome data or an array for RGB data.\n   * @param {number} _index The index of the value.\n   * @returns {number} The coresponding alpha [0,255].\n   */\n  #alphaFunction = function (_value, _index) {\n    // default always returns fully visible\n    return 0xff;\n  };\n\n  /**\n   * @callback alphaFn\n   * @param {number[]|number} value The pixel value.\n   * @param {number} index The values' index.\n   * @returns {number} The opacity of the input value.\n   */\n\n  /**\n   * Get the alpha function.\n   *\n   * @returns {alphaFn} The function.\n   */\n  getAlphaFunction() {\n    return this.#alphaFunction;\n  }\n\n  /**\n   * Set alpha function.\n   *\n   * @param {alphaFn} func The function.\n   * @fires View#alphafuncchange\n   */\n  setAlphaFunction(func) {\n    this.#alphaFunction = func;\n    /**\n     * Alpha func change event.\n     *\n     * @event View#alphafuncchange\n     * @type {object}\n     */\n    this.#fireEvent({\n      type: 'alphafuncchange'\n    });\n  }\n\n  /**\n   * Get the window LUT of the image.\n   * Warning: can be undefined in no window/level was set.\n   *\n   * @returns {WindowLut} The window LUT of the image.\n   * @fires View#wlchange\n   */\n  #getCurrentWindowLut() {\n    // special case for 'perslice' presets\n    if (this.#currentPresetName &&\n      typeof this.#windowPresets[this.#currentPresetName] !== 'undefined' &&\n      typeof this.#windowPresets[this.#currentPresetName].perslice !==\n        'undefined' &&\n      this.#windowPresets[this.#currentPresetName].perslice === true) {\n      // check position\n      if (!this.getCurrentIndex()) {\n        this.setInitialIndex();\n      }\n      // get the slice window level\n      const currentIndex = this.getCurrentIndex();\n      const offset = this.#image.getSecondaryOffset(currentIndex);\n      const currentPreset = this.#windowPresets[this.#currentPresetName];\n      const sliceWl = currentPreset.wl[offset];\n      // set window level: will send a change event, mark it as silent as\n      // this change is always triggered by a position change\n      this.setWindowLevel(sliceWl, this.#currentPresetName, true);\n    }\n\n    // if no current, use first id\n    if (typeof this.#currentWl === 'undefined') {\n      this.setWindowLevelPresetById(0, true);\n    }\n\n    // get the window lut\n    if (typeof this.#isConstantRSI === 'undefined' ||\n      this.#image.isConstantRSI() !== this.#isConstantRSI) {\n      this.#isConstantRSI = this.#image.isConstantRSI();\n      // set or update windowLut if isConstantRSI has changed\n      // (can be different at first slice and after having loaded\n      //  the full volume...)\n      let rsi;\n      let isDiscrete;\n      if (this.#isConstantRSI) {\n        rsi = this.#image.getRescaleSlopeAndIntercept();\n        isDiscrete = true;\n      } else {\n        rsi = new RescaleSlopeAndIntercept(1, 0);\n        isDiscrete = false;\n      }\n      // create the rescale lookup table\n      const modalityLut = new ModalityLut(\n        rsi,\n        this.#image.getMeta().BitsStored);\n      // create the window lookup table\n      this.#windowLut = new WindowLut(\n        modalityLut,\n        this.#image.getMeta().IsSigned,\n        isDiscrete);\n    }\n\n    // update VOI lut if not present or its window level\n    // is different from the current one\n    const voiLut = this.#windowLut.getVoiLut();\n    let voiLutWl;\n    if (typeof voiLut !== 'undefined') {\n      voiLutWl = voiLut.getWindowLevel();\n    }\n    if (typeof voiLut === 'undefined' ||\n      !this.#currentWl.equals(voiLutWl)) {\n      // set lut window level\n      const voiLut = new VoiLut(this.#currentWl);\n      this.#windowLut.setVoiLut(voiLut);\n    }\n\n    // return\n    return this.#windowLut;\n  }\n\n  /**\n   * Get the window presets.\n   *\n   * @returns {object} The window presets.\n   */\n  getWindowPresets() {\n    return this.#windowPresets;\n  }\n\n  /**\n   * Get the window presets names.\n   *\n   * @returns {string[]} The list of window presets names.\n   */\n  getWindowPresetsNames() {\n    return Object.keys(this.#windowPresets);\n  }\n\n  /**\n   * Set the window presets.\n   *\n   * @param {object} presets The window presets.\n   */\n  setWindowPresets(presets) {\n    this.#windowPresets = presets;\n  }\n\n  /**\n   * Add window presets to the existing ones.\n   *\n   * @param {object} presets The window presets.\n   */\n  addWindowPresets(presets) {\n    const keys = Object.keys(presets);\n    let key = null;\n    for (let i = 0; i < keys.length; ++i) {\n      key = keys[i];\n      if (typeof this.#windowPresets[key] !== 'undefined') {\n        if (typeof this.#windowPresets[key].perslice !== 'undefined' &&\n          this.#windowPresets[key].perslice === true) {\n          throw new Error('Cannot add perslice preset');\n        } else {\n          // update existing\n          this.#windowPresets[key] = presets[key];\n        }\n      } else {\n        // add new\n        this.#windowPresets[key] = presets[key];\n        // fire event\n        /**\n         * Window/level add preset event.\n         *\n         * @event View#wlpresetadd\n         * @type {object}\n         * @property {string} name The name of the preset.\n         */\n        this.#fireEvent({\n          type: 'wlpresetadd',\n          name: key\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the current window level preset name.\n   *\n   * @returns {string} The preset name.\n   */\n  getCurrentWindowPresetName() {\n    return this.#currentPresetName;\n  }\n\n  /**\n   * Get the colour map of the image.\n   *\n   * @returns {string} The colour map name.\n   */\n  getColourMap() {\n    return this.#colourMapName;\n  }\n\n  /**\n   * Get the colour map object.\n   *\n   * @returns {ColourMap} The colour map.\n   */\n  #getColourMapLut() {\n    return luts[this.#colourMapName];\n  }\n\n  /**\n   * Set the colour map of the image.\n   *\n   * @param {string} name The colour map name.\n   * @fires View#colourmapchange\n   */\n  setColourMap(name) {\n    // check if we have it\n    if (!luts[name]) {\n      throw new Error('Unknown colour map: \\'' + name + '\\'');\n    }\n\n    this.#colourMapName = name;\n\n    /**\n     * Color change event.\n     *\n     * @event View#colourmapchange\n     * @type {object}\n     * @property {Array} value The changed value.\n     */\n    this.#fireEvent({\n      type: 'colourmapchange',\n      value: [name]\n    });\n  }\n\n  /**\n   * Get the current position.\n   *\n   * @returns {Point} The current position.\n   */\n  getCurrentPosition() {\n    return this.#currentPosition;\n  }\n\n  /**\n   * Get the current index.\n   *\n   * @returns {Index} The current index.\n   */\n  getCurrentIndex() {\n    const position = this.getCurrentPosition();\n    if (!position) {\n      return null;\n    }\n    const geometry = this.getImage().getGeometry();\n    return geometry.worldToIndex(position);\n  }\n\n  /**\n   * Get the SOP image UID of the current image.\n   *\n   * @returns {string} The UID.\n   */\n  getCurrentImageUid() {\n    return this.#image.getImageUid(this.getCurrentIndex());\n  }\n\n  /**\n   * Get the image origin for a image UID.\n   *\n   * @param {string} uid The UID.\n   * @returns {Point3D|undefined} The origin.\n   */\n  getOriginForImageUid(uid) {\n    return this.#image.getOriginForImageUid(uid);\n  }\n\n  /**\n   * Check if the image includes an UID.\n   *\n   * @param {string} uid The UID.\n   * @returns {boolean} True if present.\n   */\n  includesImageUid(uid) {\n    return this.#image.includesImageUid(uid);\n  }\n\n  /**\n   * Check if the current position (default) or\n   * the provided position is in bounds.\n   *\n   * @param {Point} [position] Optional position.\n   * @returns {boolean} True is the position is in bounds.\n   */\n  isPositionInBounds(position) {\n    if (typeof position === 'undefined') {\n      position = this.#currentPosition;\n    }\n    const geometry = this.#image.getGeometry();\n    const index = geometry.worldToIndex(position);\n    const dirs = [this.getScrollIndex()];\n    if (index.length() === 4) {\n      dirs.push(3);\n    }\n    return geometry.isIndexInBounds(index, dirs);\n  }\n\n  /**\n   * Get the first origin or at a given position.\n   *\n   * @param {Point} [position] Optional position.\n   * @returns {Point3D} The origin.\n   */\n  getOrigin(position) {\n    const geometry = this.#image.getGeometry();\n    let originIndex = 0;\n    if (typeof position !== 'undefined') {\n      const index = geometry.worldToIndex(position);\n      // index is reoriented, 2 is scroll index\n      originIndex = index.get(2);\n    }\n    return geometry.getOrigins()[originIndex];\n  }\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point} position The new position.\n   * @param {boolean} [silent] Flag to fire event or not.\n   * @returns {boolean} False if not in bounds.\n   * @fires View#positionchange\n   */\n  setCurrentPosition(position, silent) {\n    // send invalid event if not in bounds\n    const geometry = this.#image.getGeometry();\n    const index = geometry.worldToIndex(position);\n    const dirs = [this.getScrollIndex()];\n    if (index.length() === 4) {\n      dirs.push(3);\n    }\n    if (!geometry.isIndexInBounds(index, dirs)) {\n      if (!silent) {\n        this.#currentPosition = position;\n        // fire event with valid: false\n        this.#fireEvent({\n          type: 'positionchange',\n          value: [\n            index.getValues(),\n            position.getValues(),\n          ],\n          valid: false\n        });\n      }\n      return false;\n    }\n    return this.setCurrentIndex(index, silent);\n  }\n\n  /**\n   * Set the current index.\n   *\n   * @param {Index} index The new index.\n   * @param {boolean} [silent] Flag to fire event or not.\n   * @returns {boolean} False if not in bounds.\n   * @fires View#positionchange\n   */\n  setCurrentIndex(index, silent) {\n    // check input\n    if (typeof silent === 'undefined') {\n      silent = false;\n    }\n\n    const geometry = this.#image.getGeometry();\n    const position = geometry.indexToWorld(index);\n\n    // check if possible\n    const dirs = [this.getScrollIndex()];\n    if (index.length() === 4) {\n      dirs.push(3);\n    }\n    if (!geometry.isIndexInBounds(index, dirs)) {\n      if (!silent) {\n        this.#currentPosition = position;\n        // fire event with valid: false\n        this.#fireEvent({\n          type: 'positionchange',\n          value: [\n            index.getValues(),\n            position.getValues(),\n          ],\n          valid: false\n        });\n      }\n\n      // do no send invalid positionchange event: avoid empty repaint\n      return false;\n    }\n\n    // calculate diff dims before updating internal\n    let diffDims = null;\n    let currentIndex = null;\n    if (this.getCurrentPosition()) {\n      currentIndex = this.getCurrentIndex();\n    }\n    if (currentIndex) {\n      if (currentIndex.canCompare(index)) {\n        diffDims = currentIndex.compare(index);\n      } else {\n        diffDims = [];\n        const minLen = Math.min(currentIndex.length(), index.length());\n        for (let i = 0; i < minLen; ++i) {\n          if (currentIndex.get(i) !== index.get(i)) {\n            diffDims.push(i);\n          }\n        }\n        const maxLen = Math.max(currentIndex.length(), index.length());\n        for (let j = minLen; j < maxLen; ++j) {\n          diffDims.push(j);\n        }\n      }\n    } else {\n      diffDims = [];\n      for (let k = 0; k < index.length(); ++k) {\n        diffDims.push(k);\n      }\n    }\n\n    // assign\n    this.#currentPosition = position;\n\n    if (!silent) {\n      /**\n       * Position change event.\n       *\n       * @event View#positionchange\n       * @type {object}\n       * @property {Array} value The changed value as [index, pixelValue].\n       * @property {number[]} diffDims An array of modified indices.\n       */\n      const posEvent = {\n        type: 'positionchange',\n        value: [\n          index.getValues(),\n          position.getValues(),\n        ],\n        diffDims: diffDims,\n        data: {\n          imageUid: this.#image.getImageUid(index)\n        }\n      };\n\n      // add value if possible\n      if (this.#image.canQuantify()) {\n        const pixValue = this.#image.getRescaledValueAtIndex(index);\n        posEvent.value.push(pixValue);\n      }\n\n      // fire\n      this.#fireEvent(posEvent);\n    }\n\n    // all good\n    return true;\n  }\n\n  /**\n   * Set the view window/level.\n   *\n   * @param {WindowLevel} wl The window and level.\n   * @param {string} [name] Associated preset name, defaults to 'manual'.\n   * Warning: uses the latest set rescale LUT or the default linear one.\n   * @param {boolean} [silent] Flag to launch events with skipGenerate.\n   * @fires View#wlchange\n   */\n  setWindowLevel(wl, name, silent) {\n    // check input\n    if (typeof name === 'undefined') {\n      name = 'manual';\n    }\n    if (name !== 'manual' &&\n      typeof this.#windowPresets[name] === 'undefined') {\n      throw new Error('Unknown window level preset: \\'' + name + '\\'');\n    }\n    if (typeof silent === 'undefined') {\n      silent = false;\n    }\n\n    // check if new wl\n    const isNewWl = !wl.equals(this.#currentWl);\n    // check if new name\n    const isNewName = this.#currentPresetName !== name;\n\n    // compare to previous if present\n    if (isNewWl || isNewName) {\n      // assign\n      this.#currentWl = wl;\n      this.#currentPresetName = name;\n\n      // update manual\n      if (name === 'manual') {\n        if (typeof this.#windowPresets[name] !== 'undefined') {\n          this.#windowPresets[name].wl[0] = wl;\n        } else {\n          // add if not present\n          this.addWindowPresets({\n            manual: {\n              wl: [wl],\n              name: 'manual'\n            }\n          });\n        }\n      }\n\n      /**\n       * Window/level change event.\n       *\n       * @event View#wlchange\n       * @type {object}\n       * @property {Array} value The changed value.\n       * @property {number} wc The new window center value.\n       * @property {number} ww The new window wdth value.\n       * @property {boolean} skipGenerate Flag to skip view generation.\n       */\n      this.#fireEvent({\n        type: 'wlchange',\n        value: [wl.center, wl.width, name],\n        wc: wl.center,\n        ww: wl.width,\n        skipGenerate: silent\n      });\n    }\n  }\n\n  /**\n   * Get the window/level.\n   *\n   * @returns {WindowLevel} The window and level.\n   */\n  getWindowLevel() {\n    // same as #currentWl...\n    const windowLut = this.#getCurrentWindowLut();\n    return windowLut.getVoiLut().getWindowLevel();\n  }\n\n  /**\n   * Set the window level to the preset with the input name.\n   *\n   * @param {string} name The name of the preset to activate.\n   * @param {boolean} [silent] Flag to launch events with skipGenerate.\n   */\n  setWindowLevelPreset(name, silent) {\n    const preset = this.getWindowPresets()[name];\n    if (typeof preset === 'undefined') {\n      throw new Error('Unknown window level preset: \\'' + name + '\\'');\n    }\n    // special min/max\n    if (name === 'minmax' && typeof preset.wl === 'undefined') {\n      preset.wl = [this.getWindowLevelMinMax()];\n    }\n    // default to first\n    let wl = preset.wl[0];\n    // check if 'perslice' case\n    if (typeof preset.perslice !== 'undefined' &&\n      preset.perslice === true) {\n      const offset = this.#image.getSecondaryOffset(this.getCurrentIndex());\n      wl = preset.wl[offset];\n    }\n    // set w/l\n    this.setWindowLevel(wl, name, silent);\n  }\n\n  /**\n   * Set the window level to the preset with the input id.\n   *\n   * @param {number} id The id of the preset to activate.\n   * @param {boolean} [silent] Flag to launch events with skipGenerate.\n   */\n  setWindowLevelPresetById(id, silent) {\n    const keys = Object.keys(this.getWindowPresets());\n    this.setWindowLevelPreset(keys[id], silent);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Get the image window/level that covers the full data range.\n   * Warning: uses the latest set rescale LUT or the default linear one.\n   *\n   * @returns {WindowLevel} A min/max window level.\n   */\n  getWindowLevelMinMax() {\n    const range = this.getImage().getRescaledDataRange();\n    const min = range.min;\n    const max = range.max;\n    let width = max - min;\n    // full black / white images, defaults to 1.\n    if (width < 1) {\n      logger.warn('Zero or negative window width, defaulting to one.');\n      width = 1;\n    }\n    const center = min + width / 2;\n    return new WindowLevel(center, width);\n  }\n\n  /**\n   * Set the image window/level to cover the full data range.\n   * Warning: uses the latest set rescale LUT or the default linear one.\n   */\n  setWindowLevelMinMax() {\n    // calculate center and width\n    const wl = this.getWindowLevelMinMax();\n    // set window level\n    this.setWindowLevel(wl, 'minmax');\n  }\n\n  /**\n   * Generate display image data to be given to a canvas.\n   *\n   * @param {ImageData} data The iamge data to fill in.\n   * @param {Index} index Optional index at which to generate,\n   *   otherwise generates at current index.\n   */\n  generateImageData(data, index) {\n    // check index\n    if (typeof index === 'undefined') {\n      if (!this.getCurrentIndex()) {\n        this.setInitialIndex();\n      }\n      index = this.getCurrentIndex();\n    }\n\n    const image = this.getImage();\n    const isRescaled = !image.isConstantRSI();\n    const iterator = getSliceIterator(\n      image, index, isRescaled, this.getOrientation());\n\n    const photoInterpretation = image.getPhotometricInterpretation();\n    switch (photoInterpretation) {\n    case 'MONOCHROME1':\n    case 'MONOCHROME2':\n      generateImageDataMonochrome(\n        data,\n        iterator,\n        this.getAlphaFunction(),\n        this.#getCurrentWindowLut(),\n        this.#getColourMapLut()\n      );\n      break;\n\n    case 'PALETTE COLOR':\n      generateImageDataPaletteColor(\n        data,\n        iterator,\n        this.getAlphaFunction(),\n        this.#getColourMapLut(),\n        image.getMeta().BitsStored === 16\n      );\n      break;\n\n    case 'RGB':\n      generateImageDataRgb(\n        data,\n        iterator,\n        this.getAlphaFunction()\n      );\n      break;\n\n    case 'YBR_FULL':\n      generateImageDataYbrFull(\n        data,\n        iterator,\n        this.getAlphaFunction()\n      );\n      break;\n\n    default:\n      throw new Error(\n        'Unsupported photometric interpretation: ' + photoInterpretation);\n    }\n  }\n\n  /**\n   * Get the scroll dimension index.\n   *\n   * @returns {number} The index.\n   */\n  getScrollIndex() {\n    let index = null;\n    const orientation = this.getOrientation();\n    if (typeof orientation !== 'undefined') {\n      index = orientation.getThirdColMajorDirection();\n    } else {\n      index = 2;\n    }\n    return index;\n  }\n\n  /**\n   * Is this view in the same orientation as the image aquisition.\n   *\n   * @returns {boolean} True if in aquisition plane.\n   */\n  isAquisitionOrientation() {\n    return isIdentityMat33(this.#orientation);\n  }\n\n} // class View\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {WindowLut} from './windowLut';\nimport {ColourMap} from './luts';\n/* eslint-enable no-unused-vars */\n\n/**\n * Generate image data for 'MONOCHROME*' photometric interpretation.\n *\n * @param {ImageData} array The array to store the outut data.\n * @param {object} iterator Position iterator.\n * @param {Function} alphaFunc The alpha function.\n * @param {WindowLut} windowLut The window/level LUT.\n * @param {ColourMap} colourMap The colour map.\n */\nexport function generateImageDataMonochrome(\n  array,\n  iterator,\n  alphaFunc,\n  windowLut,\n  colourMap) {\n  let index = 0;\n  let pxValue = 0;\n  let ival = iterator.next();\n  while (!ival.done) {\n    // pixel value\n    pxValue = windowLut.getValue(ival.value);\n    // store data\n    array.data[index] = colourMap.red[pxValue];\n    array.data[index + 1] = colourMap.green[pxValue];\n    array.data[index + 2] = colourMap.blue[pxValue];\n    array.data[index + 3] = alphaFunc(ival.value, ival.index);\n    // increment\n    index += 4;\n    ival = iterator.next();\n  }\n}\n","import {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ColourMap} from './luts';\n/* eslint-enable no-unused-vars */\n\n/**\n * Generate image data for 'PALETTE COLOR' photometric interpretation.\n *\n * @param {ImageData} array The array to store the outut data.\n * @param {object} iterator Position iterator.\n * @param {Function} alphaFunc The alpha function.\n * @param {ColourMap} colourMap The colour map.\n * @param {boolean} is16BitsStored Flag to know if the data is 16bits.\n */\nexport function generateImageDataPaletteColor(\n  array,\n  iterator,\n  alphaFunc,\n  colourMap,\n  is16BitsStored) {\n  // right shift 8\n  const to8 = function (value) {\n    return value >> 8;\n  };\n\n  if (is16BitsStored) {\n    logger.info('Scaling 16bits data to 8bits.');\n  }\n\n  let index = 0;\n  let pxValue = 0;\n  let ival = iterator.next();\n  while (!ival.done) {\n    // pixel value\n    pxValue = ival.value;\n    // store data\n    // TODO check pxValue fits in lut\n    if (is16BitsStored) {\n      array.data[index] = to8(colourMap.red[pxValue]);\n      array.data[index + 1] = to8(colourMap.green[pxValue]);\n      array.data[index + 2] = to8(colourMap.blue[pxValue]);\n    } else {\n      array.data[index] = colourMap.red[pxValue];\n      array.data[index + 1] = colourMap.green[pxValue];\n      array.data[index + 2] = colourMap.blue[pxValue];\n    }\n    array.data[index + 3] = alphaFunc(pxValue, ival.index);\n    // increment\n    index += 4;\n    ival = iterator.next();\n  }\n}\n","/**\n * Generate image data for 'RGB' photometric interpretation.\n *\n * @param {ImageData} array The array to store the outut data.\n * @param {object} iterator Position iterator.\n * @param {Function} alphaFunc The alpha function.\n */\nexport function generateImageDataRgb(\n  array,\n  iterator,\n  alphaFunc) {\n  let index = 0;\n  let ival = iterator.next();\n  while (!ival.done) {\n    // store data\n    array.data[index] = ival.value[0];\n    array.data[index + 1] = ival.value[1];\n    array.data[index + 2] = ival.value[2];\n    array.data[index + 3] = alphaFunc(ival.value, ival.index);\n    // increment\n    index += 4;\n    ival = iterator.next();\n  }\n}\n","import {ybrToRgb} from '../utils/colour';\n\n/**\n * Generate image data for 'YBR_FULL' photometric interpretation.\n *\n * @param {ImageData} array The array to store the outut data.\n * @param {object} iterator Position iterator.\n * @param {Function} alphaFunc The alpha function.\n */\nexport function generateImageDataYbrFull(\n  array,\n  iterator,\n  alphaFunc) {\n  let index = 0;\n  let rgb = null;\n  let ival = iterator.next();\n  while (!ival.done) {\n    // convert ybr to rgb\n    rgb = ybrToRgb(ival.value[0], ival.value[1], ival.value[2]);\n    // store data\n    array.data[index] = rgb.r;\n    array.data[index + 1] = rgb.g;\n    array.data[index + 2] = rgb.b;\n    array.data[index + 3] = alphaFunc(ival.value, ival.index);\n    // increment\n    index += 4;\n    ival = iterator.next();\n  }\n}\n","import {Vector3D} from '../math/vector';\nimport {Point3D, Point2D} from '../math/point';\nimport {isIdentityMat33} from '../math/matrix';\nimport {\n  getCosinesFromOrientation,\n  getTargetOrientation\n} from '../math/orientation';\nimport {getOrientedArray3D, getDeOrientedArray3D} from './geometry';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point} from '../math/point';\nimport {Index} from '../math/index';\nimport {Geometry} from '../image/geometry';\nimport {Matrix33} from '../math/matrix';\nimport {Spacing} from './spacing';\nimport {Scalar2D, Scalar3D} from '../math/scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * Plane geometry helper.\n */\nexport class PlaneHelper {\n\n  /**\n   * The image geometry.\n   *\n   * @type {Geometry}\n   */\n  #imageGeometry;\n\n  /**\n   * The associated spacing.\n   *\n   * @type {Spacing}\n   */\n  #spacing;\n\n  /**\n   * The image orientation.\n   *\n   * @type {Matrix33}\n   */\n  #imageOrientation;\n\n  /**\n   * The viewe orientation.\n   *\n   * @type {Matrix33}\n   */\n  #viewOrientation;\n\n  /**\n   * The target orientation.\n   *\n   * @type {Matrix33}\n   */\n  #targetOrientation;\n\n  /**\n   * @param {Geometry} imageGeometry The image geometry.\n   * @param {Matrix33} viewOrientation The view orientation.\n   */\n  constructor(imageGeometry, viewOrientation) {\n    this.#imageGeometry = imageGeometry;\n    this.#spacing = imageGeometry.getRealSpacing();\n    this.#imageOrientation = imageGeometry.getOrientation();\n    this.#viewOrientation = viewOrientation;\n\n    this.#targetOrientation = getTargetOrientation(\n      this.#imageOrientation, viewOrientation);\n  }\n\n  /**\n   * Get the view orientation.\n   *\n   * @returns {Matrix33} The orientation matrix.\n   */\n  getViewOrientation() {\n    return this.#viewOrientation;\n  }\n\n  /**\n   * Get the target orientation.\n   *\n   * @returns {Matrix33} The orientation matrix.\n   */\n  getTargetOrientation() {\n    return this.#targetOrientation;\n  }\n\n  /**\n   * Get a 3D offset from a plane one.\n   *\n   * @param {Scalar2D} offset2D The plane offset as {x,y}.\n   * @returns {Vector3D} The 3D world offset.\n   */\n  getOffset3DFromPlaneOffset(offset2D) {\n    // make 3D\n    const planeOffset = new Vector3D(\n      offset2D.x, offset2D.y, 0);\n    // de-orient\n    const pixelOffset = this.getTargetDeOrientedVector3D(planeOffset);\n    // ~indexToWorld\n    return new Vector3D(\n      pixelOffset.getX() * this.#spacing.get(0),\n      pixelOffset.getY() * this.#spacing.get(1),\n      pixelOffset.getZ() * this.#spacing.get(2));\n  }\n\n  /**\n   * Get a plane offset from a 3D one.\n   *\n   * @param {Scalar3D} offset3D The 3D offset as {x,y,z}.\n   * @returns {Scalar2D} The plane offset as {x,y}.\n   */\n  getPlaneOffsetFromOffset3D(offset3D) {\n    // ~worldToIndex\n    const pixelOffset = new Vector3D(\n      offset3D.x / this.#spacing.get(0),\n      offset3D.y / this.#spacing.get(1),\n      offset3D.z / this.#spacing.get(2));\n    // orient\n    const planeOffset = this.getTargetOrientedVector3D(pixelOffset);\n    // make 2D\n    return {\n      x: planeOffset.getX(),\n      y: planeOffset.getY()\n    };\n  }\n\n  /**\n   * Orient an input vector from real to target space.\n   *\n   * @param {Vector3D} vector The input vector.\n   * @returns {Vector3D} The oriented vector.\n   */\n  getTargetOrientedVector3D(vector) {\n    let planeVector = vector;\n    if (typeof this.#targetOrientation !== 'undefined') {\n      planeVector =\n        this.#targetOrientation.getInverse().multiplyVector3D(vector);\n    }\n    return planeVector;\n  }\n\n  /**\n   * De-orient an input vector from target to real space.\n   *\n   * @param {Vector3D} planeVector The input vector.\n   * @returns {Vector3D} The de-orienteded vector.\n   */\n  getTargetDeOrientedVector3D(planeVector) {\n    let vector = planeVector;\n    if (typeof this.#targetOrientation !== 'undefined') {\n      vector = this.#targetOrientation.multiplyVector3D(planeVector);\n    }\n    return vector;\n  }\n\n  /**\n   * De-orient an input point from target to real space.\n   *\n   * @param {Point3D} planePoint The input point.\n   * @returns {Point3D} The de-orienteded point.\n   */\n  getTargetDeOrientedPoint3D(planePoint) {\n    let point = planePoint;\n    if (typeof this.#targetOrientation !== 'undefined') {\n      point = this.#targetOrientation.multiplyPoint3D(planePoint);\n    }\n    return point;\n  }\n\n  /**\n   * Orient an input vector from target to image space.\n   *\n   * @param {Vector3D} planeVector The input vector.\n   * @returns {Vector3D} The orienteded vector.\n   */\n  getImageOrientedVector3D(planeVector) {\n    let vector = planeVector;\n    if (typeof this.#viewOrientation !== 'undefined') {\n      // image oriented => view de-oriented\n      const values = getDeOrientedArray3D(\n        [\n          planeVector.getX(),\n          planeVector.getY(),\n          planeVector.getZ()\n        ],\n        this.#viewOrientation);\n      vector = new Vector3D(\n        values[0],\n        values[1],\n        values[2]\n      );\n    }\n    return vector;\n  }\n\n  /**\n   * Orient an input point from target to image space.\n   *\n   * @param {Point3D} planePoint The input vector.\n   * @returns {Point3D} The orienteded vector.\n   */\n  getImageOrientedPoint3D(planePoint) {\n    let point = planePoint;\n    if (typeof this.#viewOrientation !== 'undefined') {\n      // image oriented => view de-oriented\n      const values = getDeOrientedArray3D(\n        [\n          planePoint.getX(),\n          planePoint.getY(),\n          planePoint.getZ()\n        ],\n        this.#viewOrientation);\n      point = new Point3D(\n        values[0],\n        values[1],\n        values[2]\n      );\n    }\n    return point;\n  }\n\n  /**\n   * De-orient an input vector from image to target space.\n   *\n   * @param {Vector3D} vector The input vector.\n   * @returns {Vector3D} The de-orienteded vector.\n   */\n  getImageDeOrientedVector3D(vector) {\n    let planeVector = vector;\n    if (typeof this.#viewOrientation !== 'undefined') {\n      // image de-oriented => view oriented\n      const orientedValues = getOrientedArray3D(\n        [\n          vector.getX(),\n          vector.getY(),\n          vector.getZ()\n        ],\n        this.#viewOrientation);\n      planeVector = new Vector3D(\n        orientedValues[0],\n        orientedValues[1],\n        orientedValues[2]\n      );\n    }\n    return planeVector;\n  }\n\n  /**\n   * De-orient an input point from image to target space.\n   *\n   * @param {Point3D} point The input point.\n   * @returns {Point3D} The de-orienteded point.\n   */\n  getImageDeOrientedPoint3D(point) {\n    let planePoint = point;\n    if (typeof this.#viewOrientation !== 'undefined') {\n      // image de-oriented => view oriented\n      const orientedValues = getOrientedArray3D(\n        [\n          point.getX(),\n          point.getY(),\n          point.getZ()\n        ],\n        this.#viewOrientation);\n      planePoint = new Point3D(\n        orientedValues[0],\n        orientedValues[1],\n        orientedValues[2]\n      );\n    }\n    return planePoint;\n  }\n\n  /**\n   * Get a world position from a 2D plane position.\n   *\n   * @param {Point2D} point2D The input point.\n   * @param {number} k The slice index.\n   * @returns {Point3D} The associated position.\n   */\n  getPositionFromPlanePoint(point2D, k) {\n    const planePoint = new Point3D(point2D.getX(), point2D.getY(), k);\n    // de-orient\n    const point = this.getImageOrientedPoint3D(planePoint);\n    // ~indexToWorld to not loose precision\n    return this.#imageGeometry.pointToWorld(point);\n  }\n\n  /**\n   * Get a list of points that define the plane at position k.\n   *\n   * @param {number} k The slice index value.\n   * @returns {Point3D[]} An origin and 2 cosines vectors.\n   */\n  getPlanePoints(k) {\n    // use target orientation\n    const cosines = getCosinesFromOrientation(this.#targetOrientation);\n    return [\n      this.getPositionFromPlanePoint(new Point2D(0, 0), k),\n      new Point3D(cosines[0], cosines[1], cosines[2]),\n      new Point3D(cosines[3], cosines[4], cosines[5])\n    ];\n  }\n\n  /**\n   * Image world to index.\n   *\n   * @param {Point} point The input point.\n   * @returns {Index} The corresponding index.\n   */\n  worldToIndex(point) {\n    return this.#imageGeometry.worldToIndex(point);\n  }\n\n  /**\n   * Is this view in the same orientation as the image aquisition.\n   *\n   * @returns {boolean} True if in aquisition plane.\n   */\n  isAquisitionOrientation() {\n    return isIdentityMat33(this.#viewOrientation);\n  }\n\n  /**\n   * Reorder values to follow target orientation.\n   *\n   * @param {Scalar3D} values Values as {x,y,z}.\n   * @returns {Scalar3D} Reoriented values as {x,y,z}.\n   */\n  getTargetOrientedPositiveXYZ(values) {\n    const orientedValues = getOrientedArray3D(\n      [\n        values.x,\n        values.y,\n        values.z\n      ],\n      this.#targetOrientation);\n    return {\n      x: orientedValues[0],\n      y: orientedValues[1],\n      z: orientedValues[2]\n    };\n  }\n\n  /**\n   * Get the (view) scroll dimension index.\n   *\n   * @returns {number} The index.\n   */\n  getScrollIndex() {\n    let index = null;\n    if (typeof this.#viewOrientation !== 'undefined') {\n      index = this.#viewOrientation.getThirdColMajorDirection();\n    } else {\n      index = 2;\n    }\n    return index;\n  }\n\n  /**\n   * Get the native (image) scroll dimension index.\n   *\n   * @returns {number} The index.\n   */\n  getNativeScrollIndex() {\n    let index = null;\n    if (typeof this.#imageOrientation !== 'undefined') {\n      index = this.#imageOrientation.getThirdColMajorDirection();\n    } else {\n      index = 2;\n    }\n    return index;\n  }\n\n} // class PlaneHelper\n","import {Index} from '../math/index';\nimport {Vector3D} from '../math/vector';\nimport {Point3D} from '../math/point';\nimport {isIdentityMat33} from '../math/matrix';\nimport {Size} from '../image/size';\nimport {Spacing} from '../image/spacing';\nimport {Image} from '../image/image';\nimport {Geometry} from '../image/geometry';\nimport {PlaneHelper} from '../image/planeHelper';\nimport {\n  getSliceIterator,\n  getIteratorValues,\n  getRegionSliceIterator,\n  getVariableRegionSliceIterator\n} from '../image/iterator';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {View} from '../image/view';\nimport {WindowLevel} from '../image/windowLevel';\nimport {Point, Point2D} from '../math/point';\nimport {Scalar2D} from '../math/scalar';\nimport {Matrix33} from '../math/matrix';\nimport {ViewLayer} from '../gui/viewLayer';\n/* eslint-enable no-unused-vars */\n\n/**\n * View controller.\n */\nexport class ViewController {\n\n  /**\n   * Associated View.\n   *\n   * @type {View}\n   */\n  #view;\n\n  /**\n   * Plane helper.\n   *\n   * @type {PlaneHelper}\n   */\n  #planeHelper;\n\n  /**\n   * Third dimension player ID (created by setInterval).\n   *\n   * @type {number|undefined}\n   */\n  #playerID;\n\n  /**\n   * Is DICOM seg mask flag.\n   *\n   * @type {boolean}\n   */\n  #isMask = false;\n\n  /**\n   * @param {View} view The associated view.\n   */\n  constructor(view) {\n    // check view\n    if (typeof view.getImage() === 'undefined') {\n      throw new Error('View does not have an image, cannot setup controller');\n    }\n\n    this.#view = view;\n\n    // setup the plane helper\n    this.#planeHelper = new PlaneHelper(\n      view.getImage().getGeometry(),\n      view.getOrientation()\n    );\n\n    // mask segment helper\n    if (view.getImage().getMeta().Modality === 'SEG') {\n      this.#isMask = true;\n    }\n  }\n\n  /**\n   * Get the plane helper.\n   *\n   * @returns {PlaneHelper} The helper.\n   */\n  getPlaneHelper() {\n    return this.#planeHelper;\n  }\n\n  /**\n   * Check is the associated image is a mask.\n   *\n   * @returns {boolean} True if the associated image is a mask.\n   */\n  isMask() {\n    return this.#isMask;\n  }\n\n  /**\n   * Initialise the controller.\n   */\n  initialise() {\n    // set window/level to first preset\n    this.setWindowLevelPresetById(0);\n    // default position\n    this.setCurrentPosition(this.getPositionFromPlanePoint(\n      new Point2D(0, 0)\n    ));\n  }\n\n  /**\n   * Get the image modality.\n   *\n   * @returns {string} The modality.\n   */\n  getModality() {\n    return this.#view.getImage().getMeta().Modality;\n  }\n\n  /**\n   * Get the window/level presets names.\n   *\n   * @returns {string[]} The presets names.\n   */\n  getWindowLevelPresetsNames() {\n    return this.#view.getWindowPresetsNames();\n  }\n\n  /**\n   * Add window/level presets to the view.\n   *\n   * @param {object} presets A preset object.\n   * @returns {object} The list of presets.\n   */\n  addWindowLevelPresets(presets) {\n    return this.#view.addWindowPresets(presets);\n  }\n\n  /**\n   * Set the window level to the preset with the input name.\n   *\n   * @param {string} name The name of the preset to activate.\n   */\n  setWindowLevelPreset(name) {\n    this.#view.setWindowLevelPreset(name);\n  }\n\n  /**\n   * Set the window level to the preset with the input id.\n   *\n   * @param {number} id The id of the preset to activate.\n   */\n  setWindowLevelPresetById(id) {\n    this.#view.setWindowLevelPresetById(id);\n  }\n\n  /**\n   * Check if the controller is playing.\n   *\n   * @returns {boolean} True if the controler is playing.\n   */\n  isPlaying() {\n    return (typeof this.#playerID !== 'undefined');\n  }\n\n  /**\n   * Get the current position.\n   *\n   * @returns {Point} The position.\n   */\n  getCurrentPosition() {\n    return this.#view.getCurrentPosition();\n  }\n\n  /**\n   * Get the current index.\n   *\n   * @returns {Index} The current index.\n   */\n  getCurrentIndex() {\n    return this.#view.getCurrentIndex();\n  }\n\n  /**\n   * Get the SOP image UID of the current image.\n   *\n   * @returns {string} The UID.\n   */\n  getCurrentImageUid() {\n    return this.#view.getCurrentImageUid();\n  }\n\n  /**\n   * Get the image origin for a image UID.\n   *\n   * @param {string} uid The UID.\n   * @returns {Point3D|undefined} The origin.\n   */\n  getOriginForImageUid(uid) {\n    return this.#view.getOriginForImageUid(uid);\n  }\n\n  /**\n   * Check if the image includes an UID.\n   *\n   * @param {string} uid The UID.\n   * @returns {boolean} True if present.\n   */\n  includesImageUid(uid) {\n    return this.#view.includesImageUid(uid);\n  }\n\n  /**\n   * Get the current oriented index.\n   *\n   * @returns {Index} The index.\n   */\n  getCurrentOrientedIndex() {\n    let res = this.#view.getCurrentIndex();\n    if (typeof this.#view.getOrientation() !== 'undefined') {\n      // view oriented => image de-oriented\n      const vector = this.#planeHelper.getImageDeOrientedVector3D(\n        new Vector3D(res.get(0), res.get(1), res.get(2))\n      );\n      res = new Index([\n        vector.getX(), vector.getY(), vector.getZ()\n      ]);\n    }\n    return res;\n  }\n\n  /**\n   * Get the scroll index.\n   *\n   * @returns {number} The index.\n   */\n  getScrollIndex() {\n    return this.#view.getScrollIndex();\n  }\n\n  /**\n   * Get the current scroll index value.\n   *\n   * @returns {object} The value.\n   */\n  getCurrentScrollIndexValue() {\n    return this.#view.getCurrentIndex().get(this.#view.getScrollIndex());\n  }\n\n  /**\n   * Get the first origin or at a given position.\n   *\n   * @param {Point} [position] Optional position.\n   * @returns {Point3D} The origin.\n   */\n  getOrigin(position) {\n    return this.#view.getOrigin(position);\n  }\n\n  /**\n   * Is this view in the same orientation as the image aquisition.\n   *\n   * @returns {boolean} True if in aquisition plane.\n   */\n  isAquisitionOrientation() {\n    return this.#view.isAquisitionOrientation();\n  }\n\n  /**\n   * Get a list of points that define the plane at position k.\n   *\n   * @param {number} k The slice index value.\n   * @returns {Point3D[]} A couple of 3D points.\n   */\n  getPlanePoints(k) {\n    return this.#planeHelper.getPlanePoints(k);\n  }\n\n  /**\n   * Get the current scroll position value.\n   *\n   * @returns {object} The value.\n   */\n  getCurrentScrollPosition() {\n    const scrollIndex = this.#view.getScrollIndex();\n    return this.#view.getCurrentPosition().get(scrollIndex);\n  }\n\n  /**\n   * Generate display image data to be given to a canvas.\n   *\n   * @param {ImageData} array The array to fill in.\n   * @param {Index} [index] Optional index at which to generate,\n   *   otherwise generates at current index.\n   */\n  generateImageData(array, index) {\n    this.#view.generateImageData(array, index);\n  }\n\n  /**\n   * Set the associated image.\n   *\n   * @param {Image} img The associated image.\n   */\n  setImage(img) {\n    this.#view.setImage(img);\n  }\n\n  /**\n   * Get the current view (2D) spacing.\n   *\n   * @returns {Scalar2D} The spacing as a 2D array.\n   */\n  get2DSpacing() {\n    const spacing = this.#view.getImage().getGeometry().getSpacing(\n      this.#view.getOrientation());\n    return spacing.get2D();\n  }\n\n  /**\n   * Get the image rescaled value at the input position.\n   *\n   * @param {Point} position The input position.\n   * @returns {number|undefined} The image value or undefined if out of bounds\n   *   or no quantifiable (for ex RGB).\n   */\n  getRescaledImageValue(position) {\n    const image = this.#view.getImage();\n    if (!image.canQuantify()) {\n      return;\n    }\n    const geometry = image.getGeometry();\n    const index = geometry.worldToIndex(position);\n    let value;\n    if (geometry.isIndexInBounds(index)) {\n      value = image.getRescaledValueAtIndex(index);\n    }\n    return value;\n  }\n\n  /**\n   * Get the image pixel unit.\n   *\n   * @returns {string} The unit.\n   */\n  getPixelUnit() {\n    return this.#view.getImage().getMeta().pixelUnit;\n  }\n\n  /**\n   * Extract a slice from an image at the given index and orientation.\n   *\n   * @param {Image} image The image to parse.\n   * @param {Index} index The current index.\n   * @param {boolean} isRescaled Flag for rescaled values (default false).\n   * @param {Matrix33} orientation The desired orientation.\n   * @returns {Image} The extracted slice.\n   */\n  #getSlice(image, index, isRescaled, orientation) {\n    // generate slice values\n    const sliceIter = getSliceIterator(\n      image,\n      index,\n      isRescaled,\n      orientation\n    );\n    const sliceValues = getIteratorValues(sliceIter);\n    // oriented geometry\n    const orientedSize = image.getGeometry().getSize(orientation);\n    const sizeValues = orientedSize.getValues();\n    sizeValues[2] = 1;\n    const sliceSize = new Size(sizeValues);\n    const orientedSpacing = image.getGeometry().getSpacing(orientation);\n    const spacingValues = orientedSpacing.getValues();\n    spacingValues[2] = 1;\n    const sliceSpacing = new Spacing(spacingValues);\n    const sliceOrigin = new Point3D(0, 0, 0);\n    const sliceGeometry =\n      new Geometry(sliceOrigin, sliceSize, sliceSpacing);\n    // slice image\n    // @ts-ignore\n    return new Image(sliceGeometry, sliceValues);\n  }\n\n  /**\n   * Get some values from the associated image in a region.\n   *\n   * @param {Point2D} min Minimum point.\n   * @param {Point2D} max Maximum point.\n   * @returns {Array} A list of values.\n   */\n  getImageRegionValues(min, max) {\n    let image = this.#view.getImage();\n    const orientation = this.#view.getOrientation();\n    let currentIndex = this.getCurrentIndex();\n    let rescaled = true;\n\n    // create oriented slice if needed\n    if (!isIdentityMat33(orientation)) {\n      image = this.#getSlice(image, currentIndex, rescaled, orientation);\n      // update position\n      currentIndex = new Index([0, 0, 0]);\n      rescaled = false;\n    }\n\n    // get region values\n    const iter = getRegionSliceIterator(\n      image, currentIndex, rescaled, min, max);\n    let values = [];\n    if (iter) {\n      values = getIteratorValues(iter);\n    }\n    return values;\n  }\n\n  /**\n   * Get some values from the associated image in variable regions.\n   *\n   * @param {number[][][]} regions A list of [x, y] pairs (min, max).\n   * @returns {Array} A list of values.\n   */\n  getImageVariableRegionValues(regions) {\n    let image = this.#view.getImage();\n    const orientation = this.#view.getOrientation();\n    let currentIndex = this.getCurrentIndex();\n    let rescaled = true;\n\n    // create oriented slice if needed\n    if (!isIdentityMat33(orientation)) {\n      image = this.#getSlice(image, currentIndex, rescaled, orientation);\n      // update position\n      currentIndex = new Index([0, 0, 0]);\n      rescaled = false;\n    }\n\n    // get region values\n    const iter = getVariableRegionSliceIterator(\n      image, currentIndex, rescaled, regions);\n    let values = [];\n    if (iter) {\n      values = getIteratorValues(iter);\n    }\n    return values;\n  }\n\n  /**\n   * Can the image values be quantified?\n   *\n   * @returns {boolean} True if possible.\n   */\n  canQuantifyImage() {\n    return this.#view.getImage().canQuantify();\n  }\n\n  /**\n   * Can window and level be applied to the data?\n   *\n   * @returns {boolean} True if possible.\n   * @deprecated Please use isMonochrome instead.\n   */\n  canWindowLevel() {\n    return this.isMonochrome();\n  }\n\n  /**\n   * Is the data monochrome.\n   *\n   * @returns {boolean} True if the data is monochrome.\n   */\n  isMonochrome() {\n    return this.#view.getImage().isMonochrome();\n  }\n\n  /**\n   * Can the data be scrolled?\n   *\n   * @returns {boolean} True if the data has either the third dimension\n   * or above greater than one.\n   */\n  canScroll() {\n    return this.#view.getImage().canScroll(this.#view.getOrientation());\n  }\n\n  /**\n   * Get the oriented image size.\n   *\n   * @returns {Size} The size.\n   */\n  getImageSize() {\n    return this.#view.getImage().getGeometry().getSize(\n      this.#view.getOrientation());\n  }\n\n\n  /**\n   * Is the data size larger than one in the given dimension?\n   *\n   * @param {number} dim The dimension.\n   * @returns {boolean} True if the image size is larger than one\n   *   in the given dimension.\n   */\n  moreThanOne(dim) {\n    return this.getImageSize().moreThanOne(dim);\n  }\n\n  /**\n   * Get the image world (mm) 2D size.\n   *\n   * @returns {Scalar2D} The 2D size as {x,y}.\n   */\n  getImageWorldSize() {\n    const geometry = this.#view.getImage().getGeometry();\n    const size = geometry.getSize(this.#view.getOrientation()).get2D();\n    const spacing = geometry.getSpacing(this.#view.getOrientation()).get2D();\n    return {\n      x: size.x * spacing.x,\n      y: size.y * spacing.y\n    };\n  }\n\n  /**\n   * Get the image rescaled data range.\n   *\n   * @returns {object} The range as {min, max}.\n   */\n  getImageRescaledDataRange() {\n    return this.#view.getImage().getRescaledDataRange();\n  }\n\n  /**\n   * Compare the input meta data to the associated image one.\n   *\n   * @param {object} meta The meta data.\n   * @returns {boolean} True if the associated image has equal meta data.\n   */\n  equalImageMeta(meta) {\n    const imageMeta = this.#view.getImage().getMeta();\n    // loop through input meta keys\n    const metaKeys = Object.keys(meta);\n    for (let i = 0; i < metaKeys.length; ++i) {\n      const metaKey = metaKeys[i];\n      if (typeof imageMeta[metaKey] === 'undefined') {\n        return false;\n      }\n      if (imageMeta[metaKey] !== meta[metaKey]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Check if the current position (default) or\n   * the provided position is in bounds.\n   *\n   * @param {Point} [position] Optional position.\n   * @returns {boolean} True is the position is in bounds.\n   */\n  isPositionInBounds(position) {\n    return this.#view.isPositionInBounds(position);\n  }\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point} pos The position.\n   * @param {boolean} [silent] If true, does not fire a\n   *   positionchange event.\n   * @returns {boolean} False if not in bounds.\n   */\n  setCurrentPosition(pos, silent) {\n    return this.#view.setCurrentPosition(pos, silent);\n  }\n\n  /**\n   * Get a world position from a 2D plane position.\n   *\n   * @param {Point2D} point2D The input point.\n   * @param {number} [k] Optional slice index,\n   *   if undefined, uses the current one.\n   * @returns {Point} The associated position.\n   */\n  getPositionFromPlanePoint(point2D, k) {\n    // keep third direction\n    if (typeof k === 'undefined') {\n      k = this.getCurrentScrollIndexValue();\n    }\n    const planePoint = new Point3D(point2D.getX(), point2D.getY(), k);\n    // de-orient\n    const point = this.#planeHelper.getImageOrientedPoint3D(planePoint);\n    // ~indexToWorld to not loose precision\n    const geometry = this.#view.getImage().getGeometry();\n    const point3D = geometry.pointToWorld(point);\n    // merge with current position to keep extra dimensions\n    return this.getCurrentPosition().mergeWith3D(point3D);\n  }\n\n  /**\n   * Get a 2D plane position from a world position.\n   *\n   * @param {Point} point The 3D position.\n   * @returns {Point2D} The 2D position.\n   */\n  getPlanePositionFromPosition(point) {\n    // orient\n    const geometry = this.#view.getImage().getGeometry();\n    // ~worldToIndex to not loose precision\n    const point3D = geometry.worldToPoint(point);\n    const planePoint = this.#planeHelper.getImageDeOrientedPoint3D(point3D);\n    // return\n    return new Point2D(\n      planePoint.getX(),\n      planePoint.getY(),\n    );\n  }\n\n  /**\n   * Get the index of a world position.\n   *\n   * @param {Point} point The 3D position.\n   * @returns {Index} The index.\n   */\n  getIndexFromPosition(point) {\n    // orient\n    const geometry = this.#view.getImage().getGeometry();\n    // ~worldToIndex to not loose precision\n    return geometry.worldToIndex(point);\n  }\n\n  /**\n   * Set the current index.\n   *\n   * @param {Index} index The index.\n   * @param {boolean} [silent] If true, does not fire a positionchange event.\n   * @returns {boolean} False if not in bounds.\n   */\n  setCurrentIndex(index, silent) {\n    return this.#view.setCurrentIndex(index, silent);\n  }\n\n  /**\n   * Get a plane 3D position from a plane 2D position: does not compensate\n   *   for the image origin. Needed for setting the scale center...\n   *\n   * @param {Point2D} point2D The 2D position.\n   * @returns {Point3D} The 3D point.\n   */\n  getPlanePositionFromPlanePoint(point2D) {\n    // keep third direction\n    const k = this.getCurrentScrollIndexValue();\n    const planePoint = new Point3D(point2D.getX(), point2D.getY(), k);\n    // de-orient\n    const point = this.#planeHelper.getTargetDeOrientedPoint3D(planePoint);\n    // ~indexToWorld to not loose precision\n    const geometry = this.#view.getImage().getGeometry();\n    const spacing = geometry.getRealSpacing();\n    return new Point3D(\n      point.getX() * spacing.get(0),\n      point.getY() * spacing.get(1),\n      point.getZ() * spacing.get(2));\n  }\n\n  /**\n   * Get a 3D offset from a plane one.\n   *\n   * @param {Scalar2D} offset2D The plane offset as {x,y}.\n   * @returns {Vector3D} The 3D world offset.\n   */\n  getOffset3DFromPlaneOffset(offset2D) {\n    return this.#planeHelper.getOffset3DFromPlaneOffset(offset2D);\n  }\n\n  /**\n   * Get the current index incremented in the input direction.\n   *\n   * @param {number} dim The direction in which to increment.\n   * @returns {Index} The resulting index.\n   */\n  #getIncrementIndex(dim) {\n    const index = this.getCurrentIndex();\n    const values = new Array(index.length());\n    values.fill(0);\n    if (dim < values.length) {\n      values[dim] = 1;\n    } else {\n      console.warn('Cannot increment given index: ', dim, values.length);\n    }\n    const incr = new Index(values);\n    return index.add(incr);\n  }\n\n  /**\n   * Get the current index decremented in the input direction.\n   *\n   * @param {number} dim The direction in which to decrement.\n   * @returns {Index} The resulting index.\n   */\n  #getDecrementIndex(dim) {\n    const index = this.getCurrentIndex();\n    const values = new Array(index.length());\n    values.fill(0);\n    if (dim < values.length) {\n      values[dim] = -1;\n    } else {\n      console.warn('Cannot decrement given index: ', dim, values.length);\n    }\n    const incr = new Index(values);\n    return index.add(incr);\n  }\n\n  /**\n   * Get the current index incremented in the scroll direction.\n   *\n   * @returns {Index} The resulting index.\n   */\n  #getIncrementScrollIndex() {\n    return this.#getIncrementIndex(this.getScrollIndex());\n  }\n\n  /**\n   * Get the current index decremented in the scroll direction.\n   *\n   * @returns {Index} The resulting index.\n   */\n  #getDecrementScrollIndex() {\n    return this.#getDecrementIndex(this.getScrollIndex());\n  }\n\n  /**\n   * Get the current position incremented in the input direction.\n   *\n   * @param {number} dim The direction in which to increment.\n   * @returns {Point} The resulting point.\n   */\n  getIncrementPosition(dim) {\n    const geometry = this.#view.getImage().getGeometry();\n    return geometry.indexToWorld(this.#getIncrementIndex(dim));\n  }\n\n  /**\n   * Get the current position decremented in the input direction.\n   *\n   * @param {number} dim The direction in which to decrement.\n   * @returns {Point} The resulting point.\n   */\n  getDecrementPosition(dim) {\n    const geometry = this.#view.getImage().getGeometry();\n    return geometry.indexToWorld(this.#getDecrementIndex(dim));\n  }\n\n  /**\n   * Get the current position decremented in the scroll direction.\n   *\n   * @returns {Point} The resulting point.\n   */\n  getIncrementScrollPosition() {\n    const geometry = this.#view.getImage().getGeometry();\n    return geometry.indexToWorld(this.#getIncrementScrollIndex());\n  }\n\n  /**\n   * Get the current position decremented in the scroll direction.\n   *\n   * @returns {Point} The resulting point.\n   */\n  getDecrementScrollPosition() {\n    const geometry = this.#view.getImage().getGeometry();\n    return geometry.indexToWorld(this.#getDecrementScrollIndex());\n  }\n\n  /**\n   * Increment the provided dimension.\n   *\n   * @param {number} dim The dimension to increment.\n   * @param {boolean} [silent] Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  incrementIndex(dim, silent) {\n    return this.setCurrentIndex(this.#getIncrementIndex(dim), silent);\n  }\n\n  /**\n   * Decrement the provided dimension.\n   *\n   * @param {number} dim The dimension to increment.\n   * @param {boolean} [silent] Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  decrementIndex(dim, silent) {\n    return this.setCurrentIndex(this.#getDecrementIndex(dim), silent);\n  }\n\n  /**\n   * Decrement the scroll dimension index.\n   *\n   * @param {boolean} [silent] Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  decrementScrollIndex(silent) {\n    return this.setCurrentIndex(this.#getDecrementScrollIndex(), silent);\n  }\n\n  /**\n   * Increment the scroll dimension index.\n   *\n   * @param {boolean} [silent] Do not send event.\n   * @returns {boolean} False if not in bounds.\n   */\n  incrementScrollIndex(silent) {\n    return this.setCurrentIndex(this.#getIncrementScrollIndex(), silent);\n  }\n\n  /**\n   * Scroll play: loop through all slices.\n   */\n  play() {\n    // ensure data is scrollable: dim >= 3\n    if (!this.canScroll()) {\n      return;\n    }\n    if (typeof this.#playerID === 'undefined') {\n      const image = this.#view.getImage();\n      const recommendedDisplayFrameRate =\n        image.getMeta().RecommendedDisplayFrameRate;\n      const milliseconds = this.#view.getPlaybackMilliseconds(\n        recommendedDisplayFrameRate);\n      const size = image.getGeometry().getSize();\n      const canScroll3D = size.canScroll3D();\n\n      this.#playerID = window.setInterval(() => {\n        let canDoMore = false;\n        if (canScroll3D) {\n          canDoMore = this.incrementScrollIndex();\n        } else {\n          canDoMore = this.incrementIndex(3);\n        }\n        // end of scroll, loop back\n        if (!canDoMore) {\n          const pos1 = this.getCurrentIndex();\n          const values = pos1.getValues();\n          const orientation = this.#view.getOrientation();\n          if (canScroll3D) {\n            values[orientation.getThirdColMajorDirection()] = 0;\n          } else {\n            values[3] = 0;\n          }\n          const index = new Index(values);\n          const geometry = this.#view.getImage().getGeometry();\n          this.setCurrentPosition(geometry.indexToWorld(index));\n        }\n      }, milliseconds);\n    } else {\n      this.stop();\n    }\n  }\n\n  /**\n   * Stop scroll playing.\n   */\n  stop() {\n    if (typeof this.#playerID !== 'undefined') {\n      clearInterval(this.#playerID);\n      this.#playerID = undefined;\n    }\n  }\n\n  /**\n   * Get the window/level.\n   *\n   * @returns {WindowLevel} The window and level.\n   */\n  getWindowLevel() {\n    return this.#view.getWindowLevel();\n  }\n\n  /**\n   * Get the current window level preset name.\n   *\n   * @returns {string} The preset name.\n   */\n  getCurrentWindowPresetName() {\n    return this.#view.getCurrentWindowPresetName();\n  }\n\n  /**\n   * Set the window and level.\n   *\n   * @param {WindowLevel} wl The window and level.\n   */\n  setWindowLevel(wl) {\n    this.#view.setWindowLevel(wl);\n  }\n\n  /**\n   * Get the colour map.\n   *\n   * @returns {string} The colour map name.\n   */\n  getColourMap() {\n    return this.#view.getColourMap();\n  }\n\n  /**\n   * Set the colour map.\n   *\n   * @param {string} name The colour map name.\n   */\n  setColourMap(name) {\n    this.#view.setColourMap(name);\n  }\n\n  /**\n   * @callback alphaFn\n   * @param {number[]|number} value The pixel value.\n   * @param {number} index The values' index.\n   * @returns {number} The opacity of the input value.\n   */\n\n  /**\n   * Set the view per value alpha function.\n   *\n   * @param {alphaFn} func The function.\n   */\n  setViewAlphaFunction(func) {\n    this.#view.setAlphaFunction(func);\n  }\n\n  /**\n   * Bind the view image to the provided layer.\n   *\n   * @param {ViewLayer} viewLayer The layer to bind.\n   */\n  bindImageAndLayer(viewLayer) {\n    const image = this.#view.getImage();\n    image.addEventListener('imagecontentchange',\n      viewLayer.onimagecontentchange\n    );\n    image.addEventListener('imagegeometrychange',\n      viewLayer.onimagegeometrychange\n    );\n  }\n\n  /**\n   * Unbind the view image to the provided layer.\n   *\n   * @param {ViewLayer} viewLayer The layer to bind.\n   */\n  unbindImageAndLayer(viewLayer) {\n    const image = this.#view.getImage();\n    image.removeEventListener('imagecontentchange',\n      viewLayer.onimagecontentchange\n    );\n    image.removeEventListener('imagegeometrychange',\n      viewLayer.onimagegeometrychange\n    );\n  }\n\n} // class ViewController\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get a normalised spin speed in the Y direction to try to support\n * trackpads (small and large deltaY) and mouse wheel (large deltaY).\n * Should return 1 or -1 for a single mouse wheel tick.\n *\n * @param {object} event The wheel event.\n * @returns {number} The normalised spin Y.\n */\nfunction getSpinY(event) {\n  // (notes of 03/2024)\n\n  // firefox seems to change the value of deltaY\n  // if you ask for deltaMode before (?????)\n\n  // deltaY (for a single mouse wheel tick):\n  // - chrome: [linux] 120, [mac]: 4\n  // - firefox: [linux] 132, [mac]: 16\n\n  // wheelDelta (for a single mouse wheel tick):\n  // - chrome: [linux] 120, [mac]: 240\n  // - firefox: [linux] 120, [mac]: 48\n\n  // -> using wheelDelta for mouse wheel detection as\n  //    it is consistently larger than trackpad scroll\n\n  // wheelDeltaY and deltaY do not go in the same direction,\n  // using -deltaY so that they do...\n\n  if (typeof event.wheelDeltaY === 'undefined') {\n    //logger.warn('No wheel delta, scroll could be tricky...);\n    return -event.deltaY;\n  } else {\n    const threshold = 45;\n    if (event.wheelDeltaY > threshold) {\n      return 1;\n    } else if (event.wheelDeltaY < -threshold) {\n      return -1;\n    } else {\n      return -event.deltaY / 60;\n    }\n  }\n}\n\n/**\n * Class to sum wheel events and know if that sum\n * corresponds to a 'tick'.\n */\nclass ScrollSum {\n  /**\n   * The scroll sum.\n   *\n   * @type {number}\n   */\n  #sum = 0;\n\n  /**\n   * Get the scroll sum.\n   *\n   * @returns {number} The scroll sum.\n   */\n  getSum() {\n    return this.#sum;\n  }\n\n  /**\n   * Add scroll.\n   *\n   * @param {object} event The wheel event.\n   */\n  add(event) {\n    this.#sum += getSpinY(event);\n  }\n\n  /**\n   * Clear the scroll sum.\n   */\n  clear() {\n    this.#sum = 0;\n  }\n\n  /**\n   * Does the accumulated scroll correspond to a 'tick'.\n   *\n   * @returns {boolean} True if the sum corresponds to a 'tick'.\n   */\n  isTick() {\n    return Math.abs(this.#sum) >= 1;\n  }\n}\n\n/**\n * Scroll wheel class: provides a wheel event handler\n *   that scroll the corresponding data.\n */\nexport class ScrollWheel {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Accumulated scroll.\n   *\n   * @type {ScrollSum}\n   */\n  #scrollSum = new ScrollSum();\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {WheelEvent} event The mouse wheel event.\n   */\n  wheel(event) {\n    this.#scrollSum.add(event);\n    const up = this.#scrollSum.getSum() >= 0;\n\n    // exit if no tick\n    if (!this.#scrollSum.isTick()) {\n      return;\n    } else {\n      this.#scrollSum.clear();\n    }\n\n    // prevent default page scroll\n    event.preventDefault();\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    let newPosition;\n    if (layerGroup.canScroll()) {\n      if (up) {\n        newPosition = viewController.getIncrementScrollPosition();\n      } else {\n        newPosition = viewController.getDecrementScrollPosition();\n      }\n    } else if (layerGroup.moreThanOne(3)) {\n      if (up) {\n        newPosition = viewController.getIncrementPosition(3);\n      } else {\n        newPosition = viewController.getDecrementPosition(3);\n      }\n    }\n\n    // set all layers if at least one can be set\n    if (typeof newPosition !== 'undefined' &&\n      layerGroup.isPositionInBounds(newPosition)) {\n      viewController.setCurrentPosition(newPosition);\n    }\n  }\n\n} // ScrollWheel class\n","import {Point2D} from './point';\nimport {\n  isSimilar,\n  REAL_WORLD_EPSILON,\n} from './matrix';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ViewController} from '../app/viewController';\nimport {Scalar2D} from './scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * Line shape.\n */\nexport class Line {\n\n  /**\n   * Line begin point.\n   *\n   * @type {Point2D}\n   */\n  #begin;\n\n  /**\n   * Line end point.\n   *\n   * @type {Point2D}\n   */\n  #end;\n\n  /**\n   * @param {Point2D} begin A Point2D representing the beginning\n   *   of the line.\n   * @param {Point2D} end A Point2D representing the end of the line.\n   */\n  constructor(begin, end) {\n    this.#begin = begin;\n    this.#end = end;\n  }\n\n  /**\n   * Get the begin point of the line.\n   *\n   * @returns {Point2D} The beginning point of the line.\n   */\n  getBegin() {\n    return this.#begin;\n  }\n\n  /**\n   * Get the end point of the line.\n   *\n   * @returns {Point2D} The ending point of the line.\n   */\n  getEnd() {\n    return this.#end;\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Line} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getBegin().equals(rhs.getBegin()) &&\n      this.getEnd().equals(rhs.getEnd());\n  }\n\n  /**\n   * Get the line delta in the X direction.\n   *\n   * @returns {number} The delta in the X direction.\n   */\n  getDeltaX() {\n    return this.getEnd().getX() - this.getBegin().getX();\n  }\n\n  /**\n   * Get the line delta in the Y direction.\n   *\n   * @returns {number} The delta in the Y direction.\n   */\n  getDeltaY() {\n    return this.getEnd().getY() - this.getBegin().getY();\n  }\n\n  /**\n   * Get the length of the line.\n   *\n   * @returns {number} The length of the line.\n   */\n  getLength() {\n    return Math.sqrt(\n      this.getDeltaX() * this.getDeltaX() +\n      this.getDeltaY() * this.getDeltaY()\n    );\n  }\n\n  /**\n   * Get the length of the line according to a  spacing.\n   *\n   * @param {Scalar2D} spacing2D The 2D spacing.\n   * @returns {number} The length of the line with spacing\n   *  or null for null spacings.\n   */\n  getWorldLength(spacing2D) {\n    let wlen = null;\n    if (spacing2D !== null) {\n      const dxs = this.getDeltaX() * spacing2D.x;\n      const dys = this.getDeltaY() * spacing2D.y;\n      wlen = Math.sqrt(dxs * dxs + dys * dys);\n    }\n    return wlen;\n  }\n\n  /**\n   * Get the mid point of the line.\n   *\n   * @returns {Point2D} The mid point of the line.\n   */\n  getMidpoint() {\n    return new Point2D(\n      (this.getBegin().getX() + this.getEnd().getX()) / 2,\n      (this.getBegin().getY() + this.getEnd().getY()) / 2\n    );\n  }\n\n  /**\n   * Get the centroid of the line.\n   *\n   * @returns {Point2D} THe centroid point.\n   */\n  getCentroid() {\n    return this.getMidpoint();\n  }\n\n  /**\n   * Get the slope of the line.\n   *\n   * @returns {number} The slope of the line.\n   */\n  getSlope() {\n    return this.getDeltaY() / this.getDeltaX();\n  }\n\n  /**\n   * Get the intercept of the line.\n   *\n   * @returns {number} The slope of the line.\n   */\n  getIntercept() {\n    return (\n      this.getEnd().getX() * this.getBegin().getY() -\n      this.getBegin().getX() * this.getEnd().getY()\n    ) / this.getDeltaX();\n  }\n\n  /**\n   * Get the inclination of the line.\n   *\n   * @returns {number} The inclination of the line.\n   */\n  getInclination() {\n    // tan(theta) = slope\n    const angle =\n      Math.atan2(this.getDeltaY(), this.getDeltaX()) * 180 / Math.PI;\n    // shift?\n    return 180 - angle;\n  }\n\n  /**\n   * Quantify a line according to view information.\n   *\n   * @param {ViewController} viewController The associated view controller.\n   * @returns {object} A quantification object.\n   */\n  quantify(viewController) {\n    const quant = {};\n    // length\n    const spacing2D = viewController.get2DSpacing();\n    const length = this.getWorldLength(spacing2D);\n    if (length !== null) {\n      quant.length = {value: length, unit: 'unit.mm'};\n    }\n    // return\n    return quant;\n  }\n\n} // Line class\n\n/**\n * Get the angle between two lines in degree.\n *\n * @param {Line} line0 The first line.\n * @param {Line} line1 The second line.\n * @returns {number} The angle.\n */\nexport function getAngle(line0, line1) {\n  const dx0 = line0.getDeltaX();\n  const dy0 = line0.getDeltaY();\n  const dx1 = line1.getDeltaX();\n  const dy1 = line1.getDeltaY();\n  // dot = ||a||*||b||*cos(theta)\n  const dot = dx0 * dx1 + dy0 * dy1;\n  // cross = ||a||*||b||*sin(theta)\n  const det = dx0 * dy1 - dy0 * dx1;\n  // tan = sin / cos\n  const angle = Math.atan2(det, dot) * 180 / Math.PI;\n  // complementary angle\n  // shift?\n  return 360 - (180 - angle);\n}\n\n/**\n * Check if two lines are orthogonal.\n *\n * @param {Line} line0 The first line.\n * @param {Line} line1 The second line.\n * @returns {boolean} True if both lines are orthogonal.\n */\nexport function areOrthogonal(line0, line1) {\n  const dx0 = line0.getDeltaX();\n  const dy0 = line0.getDeltaY();\n  const dx1 = line1.getDeltaX();\n  const dy1 = line1.getDeltaY();\n  // dot = ||a||*||b||*cos(theta)\n  return (dx0 * dx1 + dy0 * dy1) === 0;\n}\n\n/**\n * Check if a point is in a line coordinate range.\n *\n * @param {Point2D} point The input point.\n * @param {Line} line The input line.\n * @returns {boolean} True if the input point is in the line coordinate range.\n */\nexport function isPointInLineRange(point, line) {\n  const minX = Math.min(line.getBegin().getX(), line.getEnd().getX());\n  const maxX = Math.max(line.getBegin().getX(), line.getEnd().getX());\n  const minY = Math.min(line.getBegin().getY(), line.getEnd().getY());\n  const maxY = Math.max(line.getBegin().getY(), line.getEnd().getY());\n  return point.getX() >= minX &&\n    point.getX() <= maxX &&\n    point.getY() >= minY &&\n    point.getY() <= maxY;\n}\n\n/**\n * Get a perpendicular line to an input one at a given point.\n *\n * @param {Line} line The line to be perpendicular to.\n * @param {Point2D} point The middle point of the perpendicular line.\n * @param {number} length The length of the perpendicular line.\n * @param {Scalar2D} [spacing] Optional image spacing, default to [1,1].\n * @returns {Line} The perpendicular line.\n */\nexport function getPerpendicularLine(line, point, length, spacing) {\n  if (typeof spacing === 'undefined') {\n    spacing = {x: 1, y: 1};\n  }\n  const sx2 = spacing.x * spacing.x;\n  const sy2 = spacing.y * spacing.y;\n  // a0 * a1 = -1 (in square space)\n  const perpSlope = -sx2 / (sy2 * line.getSlope());\n  // y0 = a1*x0 + b1 -> b1 = y0 - a1*x0\n  const prepIntercept = point.getY() - perpSlope * point.getX();\n  // return\n  return getLineFromEquation(perpSlope, prepIntercept, point, length, spacing);\n}\n\n/**\n * Get a perpendicular line to an input one at a given distance\n *   of its begin point.\n *\n * @param {Line} line The line to be perpendicular to.\n * @param {number} distance The distance to the input line begin point.\n * @param {number} length The length of the perpendicular line.\n * @param {Scalar2D} [spacing] Optional image spacing, default to [1,1].\n * @returns {Line} The perpendicular line.\n */\nexport function getPerpendicularLineAtDistance(\n  line, distance, length, spacing) {\n  // get a line along the input one and centered on begin point\n  const lineFromEq = getLineFromEquation(\n    line.getSlope(),\n    line.getIntercept(),\n    line.getBegin(),\n    distance,\n    spacing\n  );\n  // select the point on the input line\n  let startPoint;\n  if (isPointInLineRange(lineFromEq.getBegin(), line)) {\n    startPoint = lineFromEq.getBegin();\n  } else {\n    startPoint = lineFromEq.getEnd();\n  }\n  // use it as base for a perpendicular line\n  return getPerpendicularLine(line, startPoint, length, spacing);\n}\n\n/**\n * Get a line from an equation, a middle point and a length.\n *\n * @param {number} slope The line slope.\n * @param {number} intercept The line intercept.\n * @param {Point2D} point The middle point of the line.\n * @param {number} length The line length.\n * @param {Scalar2D} [spacing] Optional image spacing, default to [1,1].\n * @returns {Line} The resulting line.\n */\nexport function getLineFromEquation(slope, intercept, point, length, spacing) {\n  if (typeof spacing === 'undefined') {\n    spacing = {x: 1, y: 1};\n  }\n  // begin point\n  let beginX = 0;\n  let beginY = 0;\n  // end point\n  let endX = 0;\n  let endY = 0;\n\n  if (isSimilar(slope, 0, REAL_WORLD_EPSILON)) {\n    // slope = ~0 -> horizontal input line\n    beginX = point.getX() - length / (2 * spacing.x);\n    beginY = point.getY();\n    endX = point.getX() + length / (2 * spacing.x);\n    endY = point.getY();\n  } else if (Math.abs(slope) > 1e6) {\n    // slope = ~(+/-)Infinity -> vertical input line\n    beginX = point.getX();\n    beginY = point.getY() - length / (2 * spacing.y);\n    endX = point.getX();\n    endY = point.getY() + length / (2 * spacing.y);\n  } else {\n    const sx2 = spacing.x * spacing.x;\n    const sy2 = spacing.y * spacing.y;\n\n    // 1. [length] sx^2 * (x - x0)^2 + sy^2 * (y - y0)^2 = d^2\n    // 2. [slope] a = (y - y0) / (x - x0) -> y - y0 = a*(x - x0)\n    // ->  sx^2 * (x - x0)^2 + sy^2 * a^2 * (x - x0)^2 = d^2\n    // ->  (x - x0)^2 = d^2 / (sx^2 + sy^2 * a^2)\n    // -> x = x0 +- d / sqrt(sx^2 + sy^2 * a^2)\n\n    // length is the distance between begin and end,\n    // point is half way between both -> d = length / 2\n    const dx = length / (2 * Math.sqrt(sx2 + sy2 * slope * slope));\n\n    // begin point\n    beginX = point.getX() - dx;\n    beginY = slope * beginX + intercept;\n    // end point\n    endX = point.getX() + dx;\n    endY = slope * endX + intercept;\n  }\n  return new Line(\n    new Point2D(beginX, beginY),\n    new Point2D(endX, endY));\n}\n","import {logger} from '../utils/logger';\nimport {ListenerHandler} from '../utils/listen';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Annotation} from './annotation';\nimport {ViewController} from '../app/viewController';\n/* eslint-enable no-unused-vars */\n\n/**\n * Annotation group.\n */\nexport class AnnotationGroup {\n  /**\n   * @type {Annotation[]}\n   */\n  #list;\n\n  /**\n   * Annotation meta data.\n   *\n   * @type {Object<string, any>}\n   */\n  #meta = {};\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Editable flag.\n   *\n   * @type {boolean}\n   */\n  #editable;\n\n  /**\n   * Group colour as hex string. If defined, it will be used as\n   *   default colour for new annotations in draw tool.\n   *\n   * @type {string|undefined}\n   */\n  #colour;\n\n  /**\n   * @param {Annotation[]} [list] Optional list, will\n   *   create new if not provided.\n   */\n  constructor(list) {\n    if (typeof list !== 'undefined') {\n      this.#list = list;\n    } else {\n      this.#list = [];\n    }\n    this.#editable = true;\n  }\n\n  /**\n   * Get the annotation group as an array.\n   *\n   * @returns {Annotation[]} The array.\n   */\n  getList() {\n    return this.#list;\n  }\n\n  /**\n   * Get the number of annotations of this list.\n   *\n   * @returns {number} The number of annotations.\n   */\n  getLength() {\n    return this.#list.length;\n  }\n\n  /**\n   * Check if the annotation group is editable.\n   *\n   * @returns {boolean} True if editable.\n   */\n  isEditable() {\n    return this.#editable;\n  }\n\n  /**\n   * Set the annotation group editability.\n   *\n   * @param {boolean} flag True to make the annotation group editable.\n   */\n  setEditable(flag) {\n    this.#editable = flag;\n    this.#fireEvent({\n      type: 'annotationgroupeditablechange',\n      data: flag\n    });\n  }\n\n  /**\n   * Get the group colour.\n   *\n   * @returns {string} The colour as hex string.\n   */\n  getColour() {\n    return this.#colour;\n  }\n\n  /**\n   * Set the group colour.\n   *\n   * @param {string} colour The colour as hex string.\n   */\n  setColour(colour) {\n    this.#colour = colour;\n  }\n\n  /**\n   * Add a new annotation.\n   *\n   * @param {Annotation} annotation The annotation to add.\n   */\n  add(annotation) {\n    this.#list.push(annotation);\n    this.#fireEvent({\n      type: 'annotationadd',\n      data: annotation\n    });\n  }\n\n  /**\n   * Update an existing annotation.\n   *\n   * @param {Annotation} annotation The annotation to update.\n   * @param {string[]} [propKeys] Optional properties that got updated.\n   */\n  update(annotation, propKeys) {\n    const index = this.#list.findIndex((item) => item.id === annotation.id);\n    if (index !== -1) {\n      this.#list[index] = annotation;\n      this.#fireEvent({\n        type: 'annotationupdate',\n        data: annotation,\n        keys: propKeys\n      });\n    } else {\n      logger.warn('Cannot find annotation to update');\n    }\n  }\n\n  /**\n   * Remove an annotation.\n   *\n   * @param {string} id The id of the annotation to remove.\n   */\n  remove(id) {\n    const index = this.#list.findIndex((item) => item.id === id);\n    if (index !== -1) {\n      const annotation = this.#list.splice(index, 1)[0];\n      this.#fireEvent({\n        type: 'annotationremove',\n        data: annotation\n      });\n    } else {\n      logger.warn('Cannot find annotation to remove');\n    }\n  }\n\n  /**\n   * Set the associated view controller.\n   *\n   * @param {ViewController} viewController The associated view controller.\n   */\n  setViewController(viewController) {\n    for (const item of this.#list) {\n      item.setViewController(viewController);\n      item.updateQuantification();\n    }\n  }\n\n  /**\n   * Find an annotation.\n   *\n   * @param {string} id The id of the annotation to find.\n   * @returns {Annotation|undefined} The found annotation.\n   */\n  find(id) {\n    return this.#list.find((item) => item.id === id);\n  }\n\n  /**\n   * Get the meta data.\n   *\n   * @returns {Object<string, any>} The meta data.\n   */\n  getMeta() {\n    return this.#meta;\n  }\n\n  /**\n   * Check if this list contains a meta data value.\n   *\n   * @param {string} key The key to check.\n   * @returns {boolean} True if the meta data is present.\n   */\n  hasMeta(key) {\n    return typeof this.#meta[key] !== 'undefined';\n  }\n\n  /**\n   * Get a meta data value.\n   *\n   * @param {string} key The meta data key.\n   * @returns {string|object} The meta data value.\n   */\n  getMetaValue(key) {\n    return this.#meta[key];\n  }\n\n  /**\n   * Set a meta data.\n   *\n   * @param {string} key The meta data key.\n   * @param {string|object} value The value of the meta data.\n   */\n  setMetaValue(key, value) {\n    this.#meta[key] = value;\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n}\n","import {AnnotationGroup} from '../image/annotationGroup';\nimport {\n  RemoveAnnotationCommand,\n  UpdateAnnotationCommand\n} from '../tools/drawCommands';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Annotation} from '../image/annotation';\n/* eslint-enable no-unused-vars */\n\n/**\n * Draw controller.\n */\nexport class DrawController {\n\n  /**\n   * The annotation group.\n   *\n   * @type {AnnotationGroup}\n   */\n  #annotationGroup;\n\n  /**\n   * Get an annotation.\n   *\n   * @param {string} id The annotation id.\n   * @returns {Annotation|undefined} The annotation.\n   */\n  getAnnotation(id) {\n    return this.#annotationGroup.find(id);\n  }\n\n  /**\n   * Get the annotation group.\n   *\n   * @returns {AnnotationGroup} The list.\n   */\n  getAnnotationGroup() {\n    return this.#annotationGroup;\n  }\n\n  /**\n   * Check if the annotation group is editable.\n   *\n   * @returns {boolean} True if editable.\n   */\n  isAnnotationGroupEditable() {\n    return this.#annotationGroup.isEditable();\n  }\n\n  /**\n   * Set the annotation group editability.\n   *\n   * @param {boolean} flag True to make the annotation group editable.\n   */\n  setAnnotationGroupEditable(flag) {\n    this.#annotationGroup.setEditable(flag);\n  }\n\n  /**\n   * Add an annotation.\n   *\n   * @param {Annotation} annotation The annotation to add.\n   */\n  addAnnotation(annotation) {\n    this.#annotationGroup.add(annotation);\n  }\n\n  /**\n   * Update an anotation from the list.\n   *\n   * @param {Annotation} annotation The annotation to update.\n   * @param {string[]} [propKeys] Optional properties that got updated.\n   */\n  updateAnnotation(annotation, propKeys) {\n    this.#annotationGroup.update(annotation, propKeys);\n  }\n\n  /**\n   * Remove an anotation for the list.\n   *\n   * @param {string} id The id of the annotation to remove.\n   */\n  removeAnnotation(id) {\n    this.#annotationGroup.remove(id);\n  }\n\n  /**\n   * Remove an annotation via a remove command (triggers draw actions).\n   *\n   * @param {string} id The annotation id.\n   * @param {Function} exeCallback The undo stack callback.\n   */\n  removeAnnotationWithCommand(id, exeCallback) {\n    const annotation = this.getAnnotation(id);\n    if (typeof annotation === 'undefined') {\n      logger.warn(\n        'Cannot create remove command for undefined annotation: ' + id);\n      return;\n    }\n    // create remove annotation command\n    const command = new RemoveAnnotationCommand(annotation, this);\n    // add command to undo stack\n    exeCallback(command);\n    // execute command: triggers draw remove\n    command.execute();\n  }\n\n  /**\n   * Update an annotation via an update command (triggers draw actions).\n   *\n   * @param {string} id The annotation id.\n   * @param {object} originalProps The original annotation properties\n   *   that will be updated.\n   * @param {object} newProps The new annotation properties\n   *   that will replace the original ones.\n   * @param {Function} exeCallback The undo stack callback.\n   */\n  updateAnnotationWithCommand(id, originalProps, newProps, exeCallback) {\n    const annotation = this.getAnnotation(id);\n    if (typeof annotation === 'undefined') {\n      logger.warn(\n        'Cannot create update command for undefined annotation: ' + id);\n      return;\n    }\n    // create remove annotation command\n    const command = new UpdateAnnotationCommand(\n      annotation, originalProps, newProps, this);\n    // add command to undo stack\n    exeCallback(command);\n    // execute command: triggers draw remove\n    command.execute();\n  }\n\n  /**\n   * Remove all annotations via remove commands (triggers draw actions).\n   *\n   * @param {Function} exeCallback The undo stack callback.\n   */\n  removeAllAnnotationsWithCommand(exeCallback) {\n    for (const annotation of this.#annotationGroup.getList()) {\n      this.removeAnnotationWithCommand(annotation.id, exeCallback);\n    }\n  }\n\n  /**\n   * @param {AnnotationGroup} [group] Optional annotation group.\n   */\n  constructor(group) {\n    if (typeof group !== 'undefined') {\n      this.#annotationGroup = group;\n    } else {\n      this.#annotationGroup = new AnnotationGroup();\n    }\n  }\n\n  /**\n   * Check if the annotation group contains a meta data value.\n   *\n   * @param {string} key The key to check.\n   * @returns {boolean} True if the meta data is present.\n   */\n  hasAnnotationMeta(key) {\n    return this.#annotationGroup.hasMeta(key);\n  }\n\n  /**\n   * Set an annotation meta data.\n   *\n   * @param {string} key The meta data to set.\n   * @param {string} value The value of the meta data.\n   */\n  setAnnotationMeta(key, value) {\n    this.#annotationGroup.setMetaValue(key, value);\n  }\n\n} // class DrawController\n","import {getShadowColour} from '../utils/colour';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Scalar2D} from '../math/scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * Style class.\n */\nexport class Style {\n  /**\n   * Font size.\n   *\n   * @type {number}\n   */\n  #fontSize = 10;\n\n  /**\n   * Font family.\n   *\n   * @type {string}\n   */\n  #fontFamily = 'Verdana';\n\n  /**\n   * Text colour.\n   *\n   * @type {string}\n   */\n  #textColour = '#fff';\n\n  /**\n   * Line colour.\n   *\n   * @type {string}\n   */\n  #lineColour = '#ffff80';\n\n  /**\n   * Base scale.\n   *\n   * @type {Scalar2D}\n   */\n  #baseScale = {x: 1, y: 1};\n\n  /**\n   * Zoom scale.\n   *\n   * @type {Scalar2D}\n   */\n  #zoomScale = {x: 1, y: 1};\n\n  /**\n   * Stroke width.\n   *\n   * @type {number}\n   */\n  #strokeWidth = 2;\n\n  /**\n   * Shadow offset.\n   *\n   * @type {Scalar2D}\n   */\n  #shadowOffset = {x: 0.25, y: 0.25};\n\n  /**\n   * Tag opacity.\n   *\n   * @type {number}\n   */\n  #tagOpacity = 0.2;\n\n  /**\n   * Text padding.\n   *\n   * @type {number}\n   */\n  #textPadding = 3;\n\n  /**\n   * Get the font family.\n   *\n   * @returns {string} The font family.\n   */\n  getFontFamily() {\n    return this.#fontFamily;\n  }\n\n  /**\n   * Get the font size.\n   *\n   * @returns {number} The font size.\n   */\n  getFontSize() {\n    return this.#fontSize;\n  }\n\n  /**\n   * Get the stroke width.\n   *\n   * @returns {number} The stroke width.\n   */\n  getStrokeWidth() {\n    return this.#strokeWidth;\n  }\n\n  /**\n   * Get the text colour.\n   *\n   * @returns {string} The text colour.\n   */\n  getTextColour() {\n    return this.#textColour;\n  }\n\n  /**\n   * Get the line colour.\n   *\n   * @returns {string} The line colour.\n   */\n  getLineColour() {\n    return this.#lineColour;\n  }\n\n  /**\n   * Set the line colour.\n   *\n   * @param {string} colour The line colour.\n   */\n  setLineColour(colour) {\n    this.#lineColour = colour;\n  }\n\n  /**\n   * Set the base scale.\n   *\n   * @param {Scalar2D} scale The scale as {x,y}.\n   */\n  setBaseScale(scale) {\n    this.#baseScale = scale;\n  }\n\n  /**\n   * Set the zoom scale.\n   *\n   * @param {Scalar2D} scale The scale as {x,y}.\n   */\n  setZoomScale(scale) {\n    this.#zoomScale = scale;\n  }\n\n  /**\n   * Get the base scale.\n   *\n   * @returns {Scalar2D} The scale as {x,y}.\n   */\n  getBaseScale() {\n    return this.#baseScale;\n  }\n\n  /**\n   * Get the zoom scale.\n   *\n   * @returns {Scalar2D} The scale as {x,y}.\n   */\n  getZoomScale() {\n    return this.#zoomScale;\n  }\n\n  /**\n   * Scale an input value using the base scale.\n   *\n   * @param {number} value The value to scale.\n   * @returns {number} The scaled value.\n   */\n  scale(value) {\n    // TODO: 2D?\n    return value / this.#baseScale.x;\n  }\n\n  /**\n   * Apply zoom scale on an input value.\n   *\n   * @param {number} value The value to scale.\n   * @returns {Scalar2D} The scaled value as {x,y}.\n   */\n  applyZoomScale(value) {\n    return {\n      x: value / this.#zoomScale.x,\n      y: value / this.#zoomScale.y\n    };\n  }\n\n  /**\n   * Multiply an input value by the zoom ratio (zx/zy).\n   *\n   * @param {number} value The value to scale.\n   * @returns {number} The scaled value.\n   */\n  applyZoomRatio(value) {\n    return value * this.#zoomScale.x / this.#zoomScale.y;\n  }\n\n  /**\n   * Get the shadow offset.\n   *\n   * @returns {Scalar2D} The offset as {x,y}.\n   */\n  getShadowOffset() {\n    return this.#shadowOffset;\n  }\n\n  /**\n   * Get the tag opacity.\n   *\n   * @returns {number} The opacity.\n   */\n  getTagOpacity() {\n    return this.#tagOpacity;\n  }\n\n  /**\n   * Get the text padding.\n   *\n   * @returns {number} The padding.\n   */\n  getTextPadding() {\n    return this.#textPadding;\n  }\n\n  /**\n   * Get the font definition string.\n   *\n   * @returns {string} The font definition string.\n   */\n  getFontStr() {\n    return ('normal ' + this.getFontSize() + 'px sans-serif');\n  }\n\n  /**\n   * Get the line height.\n   *\n   * @returns {number} The line height.\n   */\n  getLineHeight() {\n    return (this.getFontSize() + this.getFontSize() / 5);\n  }\n\n  /**\n   * Get the font size scaled to the display.\n   *\n   * @returns {number} The scaled font size.\n   */\n  getScaledFontSize() {\n    return this.scale(this.getFontSize());\n  }\n\n  /**\n   * Get the stroke width scaled to the display.\n   *\n   * @returns {number} The scaled stroke width.\n   */\n  getScaledStrokeWidth() {\n    return this.scale(this.getStrokeWidth());\n  }\n\n  /**\n   * Get the shadow line colour.\n   *\n   * @returns {string} The shadow line colour.\n   */\n  getShadowLineColour() {\n    return getShadowColour(this.getLineColour());\n  }\n\n} // class Style\n","import {Point2D} from '../math/point';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Scalar2D} from '../math/scalar';\nimport {Style} from '../gui/style';\n// external\nimport Konva from 'konva';\n/* eslint-enable no-unused-vars */\n\n/**\n * Is an input node's name 'label'.\n *\n * @param {Konva.Node} node A Konva node.\n * @returns {boolean} True if the node's name is 'label'.\n */\nexport function isNodeNameLabel(node) {\n  return node.name() === 'label';\n}\n\n/**\n * Is an input node's name 'shape'.\n *\n * @param {Konva.Node} node A Konva node.\n * @returns {boolean} True if the node's name is 'shape'.\n */\nexport function isNodeNameShape(node) {\n  return node.name() === 'shape';\n}\n\n/**\n * Is an input node a position node.\n *\n * @param {Konva.Node} node A Konva node.\n * @returns {boolean} True if the node's name is 'position-group'.\n */\nexport function isPositionNode(node) {\n  return node.name() === 'position-group';\n}\n\n/**\n * @callback testFn\n * @param {Konva.Node} node The node.\n * @returns {boolean} True if the node passes the test.\n */\n\n/**\n * Get a lambda to check a node's id.\n *\n * @param {string} id The id to check.\n * @returns {testFn} A function to check a node's id.\n */\nexport function isNodeWithId(id) {\n  return function (node) {\n    return node.id() === id;\n  };\n}\n\n/**\n * Draw Debug flag.\n */\nexport const DRAW_DEBUG = false;\n\n/**\n * Get the default anchor shape.\n *\n * @param {number} x The X position.\n * @param {number} y The Y position.\n * @param {string} id The shape id.\n * @param {Style} style The application style.\n * @returns {Konva.Ellipse} The default anchor shape.\n */\nexport function getDefaultAnchor(x, y, id, style) {\n  const radius = style.applyZoomScale(6);\n  const absRadius = {\n    x: Math.abs(radius.x),\n    y: Math.abs(radius.y)\n  };\n  return new Konva.Ellipse({\n    x: x,\n    y: y,\n    stroke: '#999',\n    fill: 'rgba(100,100,100,0.7',\n    strokeWidth: style.getStrokeWidth(),\n    strokeScaleEnabled: false,\n    radius: absRadius,\n    radiusX: absRadius.x,\n    radiusY: absRadius.y,\n    name: 'anchor',\n    id: id.toString(),\n    dragOnTop: false,\n    draggable: true,\n    visible: false\n  });\n}\n\n/**\n * Bound a node position.\n *\n * @param {Konva.Node} node The node to bound the position.\n * @param {Point2D} min The minimum position.\n * @param {Point2D} max The maximum position.\n * @returns {boolean} True if the position was corrected.\n */\nfunction boundNodePosition(node, min, max) {\n  let changed = false;\n  if (node.x() < min.getX()) {\n    node.x(min.getX());\n    changed = true;\n  } else if (node.x() > max.getX()) {\n    node.x(max.getX());\n    changed = true;\n  }\n  if (node.y() < min.getY()) {\n    node.y(min.getY());\n    changed = true;\n  } else if (node.y() > max.getY()) {\n    node.y(max.getY());\n    changed = true;\n  }\n  return changed;\n}\n\n/**\n * Get a shape top left position range.\n *\n * @param {Scalar2D} stageSize The stage size as {x,y}.\n * @param {Konva.Shape} shape The shape to evaluate.\n * @returns {object} The range as {min, max}.\n */\nexport function getShapePositionRange(stageSize, shape) {\n  const min = new Point2D(0, 0);\n  const max = new Point2D(\n    stageSize.x - Math.abs(shape.width()),\n    stageSize.y - Math.abs(shape.height())\n  );\n\n  return {min: min, max: max};\n}\n\n/**\n * Is an input shape top left position in the input range.\n *\n * @param {Konva.Shape} shape The shape to evaluate.\n * @param {Point2D} min The minimum top left position.\n * @param {Point2D} max The maximum top left position.\n * @returns {boolean} True if in range.\n */\nexport function isShapeInRange(shape, min, max) {\n  // use client rect to get the shape's top left position\n  const boundRect = shape.getClientRect({relativeTo: shape.getParent()});\n  return boundRect.x > min.getX() &&\n    boundRect.x < max.getX() &&\n    boundRect.y > min.getY() &&\n    boundRect.y < max.getY();\n}\n\n/**\n * Validate an anchor position.\n *\n * @param {Scalar2D} stageSize The stage size {x,y}.\n * @param {Konva.Shape} anchor The anchor to evaluate.\n * @returns {boolean} True if the position was corrected.\n */\nexport function validateAnchorPosition(stageSize, anchor) {\n  const group = anchor.getParent();\n\n  const min = new Point2D(\n    -group.x(),\n    -group.y()\n  );\n  const max = new Point2D(\n    stageSize.x - group.x(),\n    stageSize.y - group.y()\n  );\n\n  return boundNodePosition(anchor, min, max);\n}\n","import {Point2D} from './point';\nimport {getStats} from './stats';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ViewController} from '../app/viewController';\nimport {Scalar2D} from './scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * Mulitply the three inputs if the last two are not null.\n *\n * @param {number} a The first input.\n * @param {number} b The second input.\n * @param {number} c The third input.\n * @returns {number} The multiplication of the three inputs or\n *  null if one of the last two is null.\n */\nfunction mulABC(a, b, c) {\n  let res = null;\n  if (b !== null && c !== null) {\n    res = a * b * c;\n  }\n  return res;\n}\n\n/**\n * Rectangle shape.\n */\nexport class Rectangle {\n\n  /**\n   * Rectangle begin point.\n   *\n   * @type {Point2D}\n   */\n  #begin;\n\n  /**\n   * Rectangle end point.\n   *\n   * @type {Point2D}\n   */\n  #end;\n\n  /**\n   * @param {Point2D} begin A Point2D representing the beginning\n   *   of the rectangle.\n   * @param {Point2D} end A Point2D representing the end\n   *   of the rectangle.\n   */\n  constructor(begin, end) {\n    this.#begin = new Point2D(\n      Math.min(begin.getX(), end.getX()),\n      Math.min(begin.getY(), end.getY())\n    );\n    this.#end = new Point2D(\n      Math.max(begin.getX(), end.getX()),\n      Math.max(begin.getY(), end.getY())\n    );\n  }\n\n  /**\n   * Get the begin point of the rectangle.\n   *\n   * @returns {Point2D} The begin point of the rectangle.\n   */\n  getBegin() {\n    return this.#begin;\n  }\n\n  /**\n   * Get the end point of the rectangle.\n   *\n   * @returns {Point2D} The end point of the rectangle.\n   */\n  getEnd() {\n    return this.#end;\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Rectangle} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getBegin().equals(rhs.getBegin()) &&\n      this.getEnd().equals(rhs.getEnd());\n  }\n\n  /**\n   * Get the surface of the rectangle.\n   *\n   * @returns {number} The surface of the rectangle.\n   */\n  getSurface() {\n    const begin = this.getBegin();\n    const end = this.getEnd();\n    return Math.abs(end.getX() - begin.getX()) *\n      Math.abs(end.getY() - begin.getY());\n  }\n\n  /**\n   * Get the surface of the rectangle according to a spacing.\n   *\n   * @param {Scalar2D} spacing2D The 2D spacing.\n   * @returns {number} The surface of the rectangle multiplied by the given\n   *  spacing or null for null spacings.\n   */\n  getWorldSurface(spacing2D) {\n    return mulABC(this.getSurface(), spacing2D.x, spacing2D.y);\n  }\n\n  /**\n   * Get the real width of the rectangle.\n   *\n   * @returns {number} The real width of the rectangle.\n   */\n  getRealWidth() {\n    return this.getEnd().getX() - this.getBegin().getX();\n  }\n\n  /**\n   * Get the real height of the rectangle.\n   *\n   * @returns {number} The real height of the rectangle.\n   */\n  getRealHeight() {\n    return this.getEnd().getY() - this.getBegin().getY();\n  }\n\n  /**\n   * Get the width of the rectangle.\n   *\n   * @returns {number} The width of the rectangle.\n   */\n  getWidth() {\n    return Math.abs(this.getRealWidth());\n  }\n\n  /**\n   * Get the height of the rectangle.\n   *\n   * @returns {number} The height of the rectangle.\n   */\n  getHeight() {\n    return Math.abs(this.getRealHeight());\n  }\n\n  /**\n   * Get the rounded limits of the rectangle.\n   *\n   * @returns {object} The rounded limits as {min, max} (Point2D).\n   */\n  getRound() {\n    const roundBegin = new Point2D(\n      Math.round(this.getBegin().getX()),\n      Math.round(this.getBegin().getY())\n    );\n    const roundEnd = new Point2D(\n      Math.round(this.getEnd().getX()),\n      Math.round(this.getEnd().getY())\n    );\n    return {\n      min: roundBegin,\n      max: roundEnd\n    };\n  }\n\n  /**\n   * Get the centroid of the rectangle.\n   *\n   * @returns {Point2D} The centroid point.\n   */\n  getCentroid() {\n    return new Point2D(\n      this.getBegin().getX() + this.getWidth() / 2,\n      this.getBegin().getY() + this.getHeight() / 2\n    );\n  }\n\n  /**\n   * Quantify a rectangle according to view information.\n   *\n   * @param {ViewController} viewController The associated view controller.\n   * @param {string[]} flags A list of stat values to calculate.\n   * @returns {object} A quantification object.\n   */\n  quantify(viewController, flags) {\n    const quant = {};\n    // shape quantification\n    const spacing2D = viewController.get2DSpacing();\n    quant.width = {\n      value: this.getWidth() * spacing2D.x,\n      unit: 'unit.mm'\n    };\n    quant.height = {\n      value: this.getHeight() * spacing2D.y,\n      unit: 'unit.mm'\n    };\n    const surface = this.getWorldSurface(spacing2D);\n    if (surface !== null) {\n      quant.surface = {\n        value: surface / 100,\n        unit: 'unit.cm2'\n      };\n    }\n\n    // pixel values quantification\n    if (viewController.canQuantifyImage()) {\n      const round = this.getRound();\n      const values = viewController.getImageRegionValues(round.min, round.max);\n      const unit = viewController.getPixelUnit();\n      const quantif = getStats(values, flags);\n      quant.min = {value: quantif.min, unit: unit};\n      quant.max = {value: quantif.max, unit: unit};\n      quant.mean = {value: quantif.mean, unit: unit};\n      quant.stdDev = {value: quantif.stdDev, unit: unit};\n      if (typeof quantif.median !== 'undefined') {\n        quant.median = {value: quantif.median, unit: unit};\n      }\n      if (typeof quantif.p25 !== 'undefined') {\n        quant.p25 = {value: quantif.p25, unit: unit};\n      }\n      if (typeof quantif.p75 !== 'undefined') {\n        quant.p75 = {value: quantif.p75, unit: unit};\n      }\n    }\n\n    // return\n    return quant;\n  }\n\n} // Rectangle class\n","import {Point2D} from '../math/point';\n\n/**\n * Region Of Interest shape.\n * Note: should be a closed path.\n */\nexport class ROI {\n\n  /**\n   * List of points.\n   *\n   * @type {Point2D[]}\n   */\n  #points = [];\n\n  /**\n   * @param {Point2D[]} [points] Optional initial point list.\n   */\n  constructor(points) {\n    if (typeof points !== 'undefined') {\n      this.#points = points;\n    }\n  }\n\n  /**\n   * Get a point of the list at a given index.\n   *\n   * @param {number} index The index of the point to get\n   *   (beware, no size check).\n   * @returns {Point2D|undefined} The Point2D at the given index.\n   */\n  getPoint(index) {\n    return this.#points[index];\n  }\n\n  /**\n   * Get the point list.\n   *\n   * @returns {Point2D[]} The list.\n   */\n  getPoints() {\n    return this.#points;\n  }\n\n  /**\n   * Get the length of the point list.\n   *\n   * @returns {number} The length of the point list.\n   */\n  getLength() {\n    return this.#points.length;\n  }\n\n  /**\n   * Add a point to the ROI.\n   *\n   * @param {Point2D} point The Point2D to add.\n   */\n  addPoint(point) {\n    this.#points.push(point);\n  }\n\n  /**\n   * Add points to the ROI.\n   *\n   * @param {Point2D[]} rhs The array of POints2D to add.\n   */\n  addPoints(rhs) {\n    this.#points = this.#points.concat(rhs);\n  }\n\n  /**\n   * Get the centroid of the roi. Only valid for\n   * a non-self-intersecting closed polygon.\n   * Ref: {@link https://en.wikipedia.org/wiki/Centroid#Of_a_polygon}.\n   *\n   * @returns {Point2D} The centroid point.\n   */\n  getCentroid() {\n    let a = 0;\n    let cx = 0;\n    let cy = 0;\n    for (let i = 0; i < this.#points.length; ++i) {\n      const pi = this.#points[i];\n      let pi1;\n      if (i === this.#points.length - 1) {\n        pi1 = this.#points[0];\n      } else {\n        pi1 = this.#points[i + 1];\n      }\n      const ai = pi.getX() * pi1.getY() - pi1.getX() * pi.getY();\n      a += ai;\n      cx += (pi.getX() + pi1.getX()) * ai;\n      cy += (pi.getY() + pi1.getY()) * ai;\n    }\n    a *= 0.5;\n    const a1 = 1 / (6 * a);\n    cx *= a1;\n    cy *= a1;\n\n    return new Point2D(cx, cy);\n  }\n\n} // ROI class\n","import {Line, getAngle} from './line';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D} from '../math/point';\nimport {ViewController} from '../app/viewController';\n/* eslint-enable no-unused-vars */\n\n/**\n * Protractor shape: 3 points from which to calculate an angle.\n */\nexport class Protractor {\n\n  /**\n   * List of points.\n   *\n   * @type {Point2D[]}\n   */\n  #points;\n\n  /**\n   * @param {Point2D[]} points The list of Point2D that make\n   *   the protractor.\n   */\n  constructor(points) {\n    if (points.length > 3) {\n      throw new Error('Too many points for a protractor');\n    }\n    this.#points = points.slice(0, 3);\n  }\n\n  /**\n   * Get a point of the list.\n   *\n   * @param {number} index The index of the point\n   *   to get (beware, no size check).\n   * @returns {Point2D|undefined} The Point2D at the given index.\n   */\n  getPoint(index) {\n    return this.#points[index];\n  }\n\n  /**\n   * Get the length of the path (should be 3).\n   *\n   * @returns {number} The length of the path.\n   */\n  getLength() {\n    return this.#points.length;\n  }\n\n  /**\n   * Get the centroid of the protractor.\n   *\n   * @returns {Point2D} THe centroid point.\n   */\n  getCentroid() {\n    return this.#points[1];\n  }\n\n  /**\n   * Quantify a path according to view information.\n   *\n   * @param {ViewController} _viewController The associated view controller.\n   * @param {string[]} _flags A list of stat values to calculate.\n   * @returns {object} A quantification object.\n   */\n  quantify(_viewController, _flags) {\n    const quant = {};\n    if (this.#points.length === 3) {\n      const line0 = new Line(this.#points[0], this.#points[1]);\n      const line1 = new Line(this.#points[1], this.#points[2]);\n      let angle = getAngle(line0, line1);\n      if (angle > 180) {\n        angle = 360 - angle;\n      }\n      quant.angle = {\n        value: angle,\n        unit: 'unit.degree'\n      };\n    }\n    return quant;\n  }\n\n} // Protractor class\n","import {getStats} from './stats';\nimport {Index} from './index';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D} from '../math/point';\nimport {ViewController} from '../app/viewController';\nimport {Scalar2D} from './scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * Mulitply the three inputs if the last two are not null.\n *\n * @param {number} a The first input.\n * @param {number} b The second input.\n * @param {number} c The third input.\n * @returns {number} The multiplication of the three inputs or\n *  null if one of the last two is null.\n */\nfunction mulABC(a, b, c) {\n  let res = null;\n  if (b !== null && c !== null) {\n    res = a * b * c;\n  }\n  return res;\n}\n\n/**\n * Ellipse shape.\n */\nexport class Ellipse {\n\n  /**\n   * Ellipse centre.\n   *\n   * @type {Point2D}\n   */\n  #centre;\n\n  /**\n   * Ellipse horizontal radius.\n   *\n   * @type {number}\n   */\n  #a;\n\n  /**\n   * Ellipse vertical radius.\n   *\n   * @type {number}\n   */\n  #b;\n\n  /**\n   * @param {Point2D} centre A Point2D representing the centre\n   *   of the ellipse.\n   * @param {number} a The radius of the ellipse on the horizontal axe.\n   * @param {number} b The radius of the ellipse on the vertical axe.\n   */\n  constructor(centre, a, b) {\n    this.#centre = centre;\n    this.#a = a;\n    this.#b = b;\n  }\n\n  /**\n   * Get the centre (point) of the ellipse.\n   *\n   * @returns {Point2D} The center (point) of the ellipse.\n   */\n  getCenter() {\n    return this.#centre;\n  }\n\n  /**\n   * Get the centroid of the ellipse.\n   *\n   * @returns {Point2D} The centroid point.\n   */\n  getCentroid() {\n    return this.#centre;\n  }\n\n  /**\n   * Get the radius of the ellipse on the horizontal axe.\n   *\n   * @returns {number} The radius of the ellipse on the horizontal axe.\n   */\n  getA() {\n    return this.#a;\n  }\n\n  /**\n   * Get the radius of the ellipse on the vertical axe.\n   *\n   * @returns {number} The radius of the ellipse on the vertical axe.\n   */\n  getB() {\n    return this.#b;\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Ellipse} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getCenter().equals(rhs.getCenter()) &&\n      this.getA() === rhs.getA() &&\n      this.getB() === rhs.getB();\n  }\n\n  /**\n   * Get the surface of the ellipse.\n   *\n   * @returns {number} The surface of the ellipse.\n   */\n  getSurface() {\n    return Math.PI * this.getA() * this.getB();\n  }\n\n  /**\n   * Get the surface of the ellipse according to a spacing.\n   *\n   * @param {Scalar2D} spacing2D The 2D spacing.\n   * @returns {number} The surface of the ellipse multiplied by the given\n   *  spacing or null for null spacings.\n   */\n  getWorldSurface(spacing2D) {\n    return mulABC(this.getSurface(), spacing2D.x, spacing2D.y);\n  }\n\n  /**\n   * Get the rounded limits of the ellipse.\n   *\n   * See: {@link https://en.wikipedia.org/wiki/Ellipse#Standard_equation}.\n   *\n   * Ellipse formula: `x*x / a*a + y*y / b*b = 1`.\n   *\n   * Implies: `y = (+-)(b/a) * sqrt(a*a - x*x)`.\n   *\n   * @returns {number[][][]} The rounded limits:\n   *  list of [x, y] pairs (min, max).\n   */\n  getRound() {\n    const centerX = this.getCenter().getX();\n    const centerY = this.getCenter().getY();\n    const radiusX = this.getA();\n    const radiusY = this.getB();\n    const radiusRatio = radiusX / radiusY;\n    const rySquare = Math.pow(radiusY, 2);\n    // Y bounds\n    const minY = centerY - radiusY;\n    const maxY = centerY + radiusY;\n    const regions = [];\n    // loop through lines and store limits\n    for (let y = minY; y < maxY; ++y) {\n      const diff = rySquare - Math.pow(y - centerY, 2);\n      // remove small values (possibly negative)\n      if (Math.abs(diff) < 1e-7) {\n        continue;\n      }\n      const transX = radiusRatio * Math.sqrt(diff);\n      // remove small values\n      if (transX < 0.5) {\n        continue;\n      }\n      regions.push([\n        [Math.round(centerX - transX), Math.round(y)],\n        [Math.round(centerX + transX), Math.round(y)]\n      ]);\n    }\n    return regions;\n  }\n\n  /**\n   * Quantify an ellipse according to view information.\n   *\n   * @param {ViewController} viewController The associated view controller.\n   * @param {string[]} flags A list of stat values to calculate.\n   * @returns {object} A quantification object.\n   */\n  quantify(viewController, flags) {\n    const quant = {};\n    // shape quantification\n    const spacing2D = viewController.get2DSpacing();\n    quant.a = {\n      value: this.getA() * spacing2D.x,\n      unit: 'unit.mm'\n    };\n    quant.b = {\n      value: this.getB() * spacing2D.y,\n      unit: 'unit.mm'\n    };\n    const surface = this.getWorldSurface(spacing2D);\n    if (surface !== null) {\n      quant.surface = {\n        value: surface / 100,\n        unit: 'unit.cm2'\n      };\n    }\n\n    // pixel values quantification\n    if (viewController.canQuantifyImage()) {\n      const regions = this.getRound();\n      if (regions.length !== 0) {\n        const values = viewController.getImageVariableRegionValues(regions);\n        const unit = viewController.getPixelUnit();\n        const quantif = getStats(values, flags);\n        quant.min = {value: quantif.min, unit: unit};\n        quant.max = {value: quantif.max, unit: unit};\n        quant.mean = {value: quantif.mean, unit: unit};\n        quant.stdDev = {value: quantif.stdDev, unit: unit};\n        if (typeof quantif.median !== 'undefined') {\n          quant.median = {value: quantif.median, unit: unit};\n        }\n        if (typeof quantif.p25 !== 'undefined') {\n          quant.p25 = {value: quantif.p25, unit: unit};\n        }\n        if (typeof quantif.p75 !== 'undefined') {\n          quant.p75 = {value: quantif.p75, unit: unit};\n        }\n      }\n    }\n\n    // return\n    return quant;\n  }\n\n} // Ellipse class\n\n/**\n * Get the indices that form a ellpise.\n *\n * @param {Index} center The ellipse center.\n * @param {number[]} radius The 2 ellipse radiuses.\n * @param {number[]} dir The 2 ellipse directions.\n * @returns {Index[]} The indices of the ellipse.\n */\nexport function getEllipseIndices(center, radius, dir) {\n  const centerValues = center.getValues();\n  // keep all values for possible extra dimensions\n  const values = centerValues.slice();\n  const indices = [];\n  const radiusI = radius[0];\n  const radiusJ = radius[1];\n  const radiusRatio = radiusI / radiusJ;\n  const radiusJ2 = Math.pow(radiusJ, 2);\n  const di = dir[0];\n  const dj = dir[1];\n  // deduce 4 positions from top right\n  for (let j = 0; j < radiusJ; ++j) {\n    // right triangle formed by radiuses, j and len\n    // ellipse: i*i / a*a + j*j / b*b = 1\n    // -> i = a/b * sqrt(b*b - j*j)\n    const len = Math.round(\n      radiusRatio * Math.sqrt(radiusJ2 - Math.pow(j, 2)));\n    const jmax = centerValues[dj] + j;\n    const jmin = centerValues[dj] - j;\n    for (let i = 0; i < len; ++i) {\n      const imax = centerValues[di] + i;\n      const imin = centerValues[di] - i;\n\n      // right\n      values[di] = imax;\n      // right - top\n      values[dj] = jmax;\n      indices.push(new Index(values.slice()));\n      // right - bottom\n      if (jmin !== jmax) {\n        values[dj] = jmin;\n        indices.push(new Index(values.slice()));\n      }\n\n      // left\n      if (imin !== imax) {\n        values[di] = imin;\n        // left - top\n        values[dj] = jmax;\n        indices.push(new Index(values.slice()));\n        // left - bottom\n        if (jmin !== jmax) {\n          values[dj] = jmin;\n          indices.push(new Index(values.slice()));\n        }\n      }\n    }\n  }\n  return indices;\n}\n","import {getStats} from './stats';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D} from '../math/point';\nimport {ViewController} from '../app/viewController';\nimport {Scalar2D} from './scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * Mulitply the three inputs if the last two are not null.\n *\n * @param {number} a The first input.\n * @param {number} b The second input.\n * @param {number} c The third input.\n * @returns {number} The multiplication of the three inputs or\n *  null if one of the last two is null.\n */\nfunction mulABC(a, b, c) {\n  let res = null;\n  if (b !== null && c !== null) {\n    res = a * b * c;\n  }\n  return res;\n}\n\n/**\n * Circle shape.\n */\nexport class Circle {\n\n  /**\n   * Circle centre.\n   *\n   * @type {Point2D}\n   */\n  #centre;\n\n  /**\n   * Circle radius.\n   *\n   * @type {number}\n   */\n  #radius;\n\n  /**\n   * @param {Point2D} centre A Point2D representing the centre\n   *   of the circle.\n   * @param {number} radius The radius of the circle.\n   */\n  constructor(centre, radius) {\n    this.#centre = centre;\n    this.#radius = radius;\n  }\n\n  /**\n   * Get the centre (point) of the circle.\n   *\n   * @returns {Point2D} The center (point) of the circle.\n   */\n  getCenter() {\n    return this.#centre;\n  }\n\n  /**\n   * Get the centroid of the circle.\n   *\n   * @returns {Point2D} The centroid point.\n   */\n  getCentroid() {\n    return this.#centre;\n  }\n\n  /**\n   * Get the radius of the circle.\n   *\n   * @returns {number} The radius of the circle.\n   */\n  getRadius() {\n    return this.#radius;\n  }\n\n\n  /**\n   * Check for equality.\n   *\n   * @param {Circle} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getCenter().equals(rhs.getCenter()) &&\n      this.getRadius() === rhs.getRadius();\n  }\n\n  /**\n   * Get the surface of the circle.\n   *\n   * @returns {number} The surface of the circle.\n   */\n  getSurface() {\n    return Math.PI * this.getRadius() * this.getRadius();\n  }\n\n  /**\n   * Get the surface of the circle according to a spacing.\n   *\n   * @param {Scalar2D} spacing2D The 2D spacing.\n   * @returns {number} The surface of the circle multiplied by the given\n   *  spacing or null for null spacings.\n   */\n  getWorldSurface(spacing2D) {\n    return mulABC(this.getSurface(), spacing2D.x, spacing2D.y);\n  }\n\n  /**\n   * Get the rounded limits of the circle.\n   *\n   * See: {@link https://en.wikipedia.org/wiki/Circle#Equations}.\n   *\n   * Circle formula: `x*x + y*y = r*r`.\n   *\n   * Implies: `y = (+-) sqrt(r*r - x*x)`.\n   *\n   * @returns {number[][][]} The rounded limits:\n   *  list of [x, y] pairs (min, max).\n   */\n  getRound() {\n    const centerX = this.getCenter().getX();\n    const centerY = this.getCenter().getY();\n    const radius = this.getRadius();\n    const rSquare = Math.pow(radius, 2);\n    // Y bounds\n    const minY = centerY - radius;\n    const maxY = centerY + radius;\n    const regions = [];\n    // loop through lines and store limits\n    for (let y = minY; y < maxY; ++y) {\n      const diff = rSquare - Math.pow(y - centerY, 2);\n      // remove small values (possibly negative)\n      if (Math.abs(diff) < 1e-7) {\n        continue;\n      }\n      const transX = Math.sqrt(diff);\n      // remove small values\n      if (transX < 0.5) {\n        continue;\n      }\n      regions.push([\n        [Math.round(centerX - transX), Math.round(y)],\n        [Math.round(centerX + transX), Math.round(y)]\n      ]);\n    }\n    return regions;\n  }\n\n  /**\n   * Quantify an circle according to view information.\n   *\n   * @param {ViewController} viewController The associated view controller.\n   * @param {string[]} flags A list of stat values to calculate.\n   * @returns {object} A quantification object.\n   */\n  quantify(viewController, flags) {\n    const quant = {};\n    // shape quantification\n    const spacing2D = viewController.get2DSpacing();\n    quant.radius = {\n      value: this.getRadius() * spacing2D.x,\n      unit: 'unit.mm'\n    };\n    const surface = this.getWorldSurface(spacing2D);\n    if (surface !== null) {\n      quant.surface = {\n        value: surface / 100,\n        unit: 'unit.cm2'\n      };\n    }\n\n    // pixel values quantification\n    if (viewController.canQuantifyImage()) {\n      const regions = this.getRound();\n      if (regions.length !== 0) {\n        const values = viewController.getImageVariableRegionValues(regions);\n        const unit = viewController.getPixelUnit();\n        const quantif = getStats(values, flags);\n        quant.min = {value: quantif.min, unit: unit};\n        quant.max = {value: quantif.max, unit: unit};\n        quant.mean = {value: quantif.mean, unit: unit};\n        quant.stdDev = {value: quantif.stdDev, unit: unit};\n        if (typeof quantif.median !== 'undefined') {\n          quant.median = {value: quantif.median, unit: unit};\n        }\n        if (typeof quantif.p25 !== 'undefined') {\n          quant.p25 = {value: quantif.p25, unit: unit};\n        }\n        if (typeof quantif.p75 !== 'undefined') {\n          quant.p75 = {value: quantif.p75, unit: unit};\n        }\n      }\n    }\n\n    // return\n    return quant;\n  }\n\n} // Circle class\n","import {logger} from '../utils/logger';\nimport {UpdateAnnotationCommand} from './drawCommands';\nimport {validateAnchorPosition} from './drawBounds';\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\nimport {DrawLayer} from '../gui/drawLayer';\nimport {Annotation} from '../image/annotation';\n/* eslint-enable no-unused-vars */\n\n/**\n * Draw shape editor.\n */\nexport class DrawShapeEditor {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Event callback.\n   *\n   * @type {Function}\n   */\n  #eventCallback;\n\n  /**\n   * @param {App} app The associated application.\n   * @param {Function} eventCallback Event callback.\n   */\n  constructor(app, eventCallback) {\n    this.#app = app;\n    this.#eventCallback = eventCallback;\n  }\n\n  /**\n   * Current shape factory.\n   *\n   * @type {object}\n   */\n  #currentFactory = null;\n\n  /**\n   * Edited shape.\n   *\n   * @type {Konva.Shape}\n   */\n  #shape = null;\n\n  /**\n   * Associated draw layer. Used to bound anchor move.\n   *\n   * @type {DrawLayer}\n   */\n  #drawLayer;\n\n  /**\n   * The associated annotation.\n   *\n   * @type {Annotation}\n   */\n  #annotation;\n\n  /**\n   * Active flag.\n   *\n   * @type {boolean}\n   */\n  #isActive = false;\n\n  /**\n   * @callback eventFn\n   * @param {object} event The event.\n   */\n\n  /**\n   * Set the shape to edit.\n   *\n   * @param {Konva.Shape} inshape The shape to edit.\n   * @param {DrawLayer} drawLayer The associated draw layer.\n   * @param {Annotation} annotation The associated annotation.\n   */\n  setShape(inshape, drawLayer, annotation) {\n    this.#shape = inshape;\n    this.#drawLayer = drawLayer;\n    this.#annotation = annotation;\n\n    if (this.#shape) {\n      // remove old anchors\n      this.#removeAnchors();\n\n      this.#currentFactory = annotation.getFactory();\n      if (this.#currentFactory === null) {\n        throw new Error('Could not find a factory to update shape.');\n      }\n\n      // add new anchors\n      this.#addAnchors();\n    }\n  }\n\n  /**\n   * Get the edited shape.\n   *\n   * @returns {Konva.Shape} The edited shape.\n   */\n  getShape() {\n    return this.#shape;\n  }\n\n  /**\n   * Get the edited annotation.\n   *\n   * @returns {Annotation} The annotation.\n   */\n  getAnnotation() {\n    return this.#annotation;\n  }\n\n  /**\n   * Get the active flag.\n   *\n   * @returns {boolean} The active flag.\n   */\n  isActive() {\n    return this.#isActive;\n  }\n\n  /**\n   * Enable the editor. Redraws the layer.\n   */\n  enable() {\n    this.#isActive = true;\n    if (this.#shape) {\n      this.#setAnchorsVisible(true);\n      if (this.#shape.getLayer()) {\n        this.#shape.getLayer().draw();\n      }\n    }\n  }\n\n  /**\n   * Disable the editor. Redraws the layer.\n   */\n  disable() {\n    this.#isActive = false;\n    if (this.#shape) {\n      this.#setAnchorsVisible(false);\n      if (this.#shape.getLayer()) {\n        this.#shape.getLayer().draw();\n      }\n    }\n  }\n\n  /**\n   * Reset the editor.\n   */\n  reset() {\n    this.#shape = undefined;\n    this.#drawLayer = undefined;\n    this.#annotation = undefined;\n  }\n\n  /**\n   * Reset the anchors.\n   */\n  resetAnchors() {\n    // remove previous controls\n    this.#removeAnchors();\n    // add anchors\n    this.#addAnchors();\n    // set them visible\n    this.#setAnchorsVisible(true);\n  }\n\n  /**\n   * Apply a function on all anchors.\n   *\n   * @param {object} func A f(shape) function.\n   */\n  #applyFuncToAnchors(func) {\n    if (this.#shape && this.#shape.getParent()) {\n      const anchors = this.#shape.getParent().find('.anchor');\n      anchors.forEach(func);\n    }\n  }\n\n  /**\n   * Set anchors visibility.\n   *\n   * @param {boolean} flag The visible flag.\n   */\n  #setAnchorsVisible(flag) {\n    this.#applyFuncToAnchors(function (anchor) {\n      anchor.visible(flag);\n    });\n  }\n\n  /**\n   * Set anchors active.\n   *\n   * @param {boolean} flag The active (on/off) flag.\n   */\n  setAnchorsActive(flag) {\n    let func = null;\n    if (flag) {\n      func = (anchor) => {\n        this.#setAnchorOn(anchor);\n      };\n    } else {\n      func = (anchor) => {\n        this.#setAnchorOff(anchor);\n      };\n    }\n    this.#applyFuncToAnchors(func);\n  }\n\n  /**\n   * Remove anchors.\n   */\n  #removeAnchors() {\n    this.#applyFuncToAnchors(function (anchor) {\n      anchor.remove();\n    });\n  }\n\n  /**\n   * Add the shape anchors.\n   */\n  #addAnchors() {\n    // exit if no shape or no layer\n    if (!this.#shape || !this.#shape.getLayer()) {\n      return;\n    }\n    // get shape group\n    const group = this.#shape.getParent();\n\n    // activate and add anchors to group\n    const anchors =\n      this.#currentFactory.getAnchors(this.#shape, this.#app.getStyle());\n    for (let i = 0; i < anchors.length; ++i) {\n      // set anchor on\n      this.#setAnchorOn(anchors[i]);\n      // add the anchor to the group\n      group.add(anchors[i]);\n    }\n  }\n\n  /**\n   * Set the anchor on listeners.\n   *\n   * @param {Konva.Ellipse} anchor The anchor to set on.\n   */\n  #setAnchorOn(anchor) {\n    let originalProps;\n\n    // drag start listener\n    anchor.on('dragstart.edit', (event) => {\n      // prevent bubbling upwards\n      event.cancelBubble = true;\n      // store original properties\n      originalProps = {\n        mathShape: this.#annotation.mathShape,\n        referencePoints: this.#annotation.referencePoints\n      };\n    });\n    // drag move listener\n    anchor.on('dragmove.edit', (event) => {\n      const anchor = event.target;\n      if (!(anchor instanceof Konva.Shape)) {\n        return;\n      }\n      // validate the anchor position\n      validateAnchorPosition(this.#drawLayer.getBaseSize(), anchor);\n      if (typeof this.#currentFactory.constrainAnchorMove !== 'undefined') {\n        this.#currentFactory.constrainAnchorMove(anchor);\n      }\n\n      // udpate annotation\n      this.#currentFactory.updateAnnotationOnAnchorMove(\n        this.#annotation, anchor);\n      // udpate shape\n      this.#currentFactory.updateShapeGroupOnAnchorMove(\n        this.#annotation, anchor, this.#app.getStyle());\n\n      // redraw\n      if (anchor.getLayer()) {\n        anchor.getLayer().draw();\n      } else {\n        logger.warn('No layer to draw the anchor!');\n      }\n      // prevent bubbling upwards\n      event.cancelBubble = true;\n    });\n    // drag end listener\n    anchor.on('dragend.edit', (event) => {\n      // update annotation command\n      const newProps = {\n        mathShape: this.#annotation.mathShape,\n        referencePoints: this.#annotation.referencePoints\n      };\n      const command = new UpdateAnnotationCommand(\n        this.#annotation,\n        originalProps,\n        newProps,\n        this.#drawLayer.getDrawController()\n      );\n      // add command to undo stack\n      this.#app.addToUndoStack(command);\n      // fire event manually since command is not executed\n      this.#eventCallback({\n        type: 'annotationupdate',\n        data: this.#annotation,\n        dataid: this.#drawLayer.getDataId(),\n        keys: Object.keys(newProps)\n      });\n      // update original properties\n      originalProps = {\n        mathShape: newProps.mathShape,\n        referencePoints: newProps.referencePoints\n      };\n\n      // prevent bubbling upwards\n      event.cancelBubble = true;\n    });\n    // mouse down listener\n    anchor.on('mousedown touchstart', (event) => {\n      const anchor = event.target;\n      anchor.moveToTop();\n    });\n    // mouse over styling\n    anchor.on('mouseover.edit', (event) => {\n      const anchor = event.target;\n      if (!(anchor instanceof Konva.Shape)) {\n        return;\n      }\n      // style is handled by the group\n      anchor.stroke('#ddd');\n      if (anchor.getLayer()) {\n        anchor.getLayer().draw();\n      } else {\n        logger.warn('No layer to draw the anchor!');\n      }\n    });\n    // mouse out styling\n    anchor.on('mouseout.edit', (event) => {\n      const anchor = event.target;\n      if (!(anchor instanceof Konva.Shape)) {\n        return;\n      }\n      // style is handled by the group\n      anchor.stroke('#999');\n      if (anchor.getLayer()) {\n        anchor.getLayer().draw();\n      } else {\n        logger.warn('No layer to draw the anchor!');\n      }\n    });\n  }\n\n  /**\n   * Set the anchor off listeners.\n   *\n   * @param {Konva.Ellipse} anchor The anchor to set off.\n   */\n  #setAnchorOff(anchor) {\n    anchor.off('dragstart.edit');\n    anchor.off('dragmove.edit');\n    anchor.off('dragend.edit');\n    anchor.off('mousedown touchstart');\n    anchor.off('mouseover.edit');\n    anchor.off('mouseout.edit');\n  }\n\n} // class Editor\n","import Konva from 'konva';\n\n/* eslint-disable no-unused-vars */\nimport {Scalar2D} from '../math/scalar';\nimport {DrawLayer} from '../gui/drawLayer';\n/* eslint-enable no-unused-vars */\n\nexport class DrawTrash {\n  /**\n   * Trash draw: a cross.\n   *\n   * @type {Konva.Group}\n   */\n  #trash;\n\n  constructor() {\n    this.createTrashIcon();\n\n  }\n\n  /**\n   * Creates the trash icon o positionates it.\n   */\n  createTrashIcon() {\n    this.#trash = new Konva.Group();\n    // first line of the cross\n    const trashLine1 = new Konva.Line({\n      points: [-10, -10, 10, 10],\n      stroke: 'red'\n    });\n    // second line of the cross\n    const trashLine2 = new Konva.Line({\n      points: [10, -10, -10, 10],\n      stroke: 'red'\n    });\n    this.#trash.width(20);\n    this.#trash.height(20);\n    this.#trash.add(trashLine1);\n    this.#trash.add(trashLine2);\n  }\n\n  /**\n   *\n   * Activates the trash, by showing the icon into the layer draw layer.\n   *\n   * @param {DrawLayer} drawLayer The draw layer where to draw.\n   */\n  activate(drawLayer) {\n    const stage = drawLayer.getKonvaStage();\n    const scale = stage.scale();\n    const konvaLayer = drawLayer.getKonvaLayer();\n    const invscale = {x: 1 / scale.x, y: 1 / scale.y};\n    this.#trash.x(stage.offset().x + (stage.width() / (2 * scale.x)));\n    this.#trash.y(stage.offset().y + (stage.height() / (15 * scale.y)));\n    this.#trash.scale(invscale);\n    konvaLayer.add(this.#trash);\n    // draw\n    konvaLayer.draw();\n  }\n\n  /**\n   *\n   * Change colour on trash over.\n   *\n   * @param {Scalar2D} eventPosition The event drag move position.\n   * @param {Konva.Group} shapeGroup The shape group whose colour\n   *   must be change.\n   * @param {string} originalShapeColour The original shape colour.\n   */\n  changeChildrenColourOnTrashHover(eventPosition,\n    shapeGroup, originalShapeColour) {\n    if (this.isOverTrash(eventPosition)) {\n      this.changeGroupChildrenColour(this.#trash, 'orange');\n      this.changeGroupChildrenColour(shapeGroup, 'red');\n      return;\n\n    }\n    this.changeGroupChildrenColour(this.#trash, 'red');\n    this.changeGroupChildrenColour(shapeGroup, originalShapeColour);\n  }\n\n  /**\n   * Change colour on trash out.\n   *\n   * @param {Konva.Group} group The group whose colour must be change.\n   * @param {string} colour The new colour to be set.\n   */\n  changeGroupChildrenColour(group, colour) {\n    group.getChildren().forEach(function (tshape) {\n      if (tshape instanceof Konva.Shape &&\n        typeof tshape.stroke !== 'undefined') {\n        tshape.stroke(colour);\n      }\n    });\n  }\n\n  /**\n   * Removes the trash from the draw layer.\n   */\n  remove() {\n    this.#trash.remove();\n  }\n\n  /**\n   * Determines if the event is over trash.\n   *\n   * @param {Scalar2D} eventPosition The event position.\n   * @returns {boolean} True if the event is over trash.\n   */\n  isOverTrash(eventPosition) {\n    const trashHalfWidth =\n        this.#trash.width() * Math.abs(this.#trash.scaleX()) / 2;\n    const trashHalfHeight =\n        this.#trash.height() * Math.abs(this.#trash.scaleY()) / 2;\n    return Math.abs(eventPosition.x - this.#trash.x()) < trashHalfWidth &&\n        Math.abs(eventPosition.y - this.#trash.y()) < trashHalfHeight;\n  }\n\n}","import {\n  getMousePoint,\n  customUI\n} from '../gui/generic';\nimport {\n  RemoveAnnotationCommand,\n  UpdateAnnotationCommand\n} from './drawCommands';\nimport {\n  isNodeNameShape,\n  isNodeNameLabel,\n  getShapePositionRange,\n  isShapeInRange\n} from './drawBounds';\nimport {DrawShapeEditor} from './drawShapeEditor';\nimport {DrawTrash} from './drawTrash';\n\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\nimport {Scalar2D} from '../math/scalar';\nimport {DrawLayer} from '../gui/drawLayer';\nimport {Annotation} from '../image/annotation';\nimport {Point2D} from '../math/point';\n/* eslint-enable no-unused-vars */\n\n/**\n * Draw shape handler: handle action on existing shapes.\n */\nexport class DrawShapeHandler {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Shape editor.\n   *\n   * @type {DrawShapeEditor}\n   */\n  #shapeEditor;\n\n  /**\n   * Trash draw: a cross.\n   *\n   * @type {DrawTrash}\n   */\n  #trash;\n\n  /**\n   * Mouse cursor.\n   *\n   * @type {string}\n   */\n  #mouseOverCursor = 'pointer';\n\n  /**\n   * Original mouse cursor.\n   *\n   * @type {string}\n   */\n  #originalCursor;\n\n  /**\n   * Shape with mouse over.\n   *\n   * @type {Konva.Group}\n   */\n  #mouseOverShapeGroup;\n\n  /**\n   * Event callback.\n   *\n   * @type {Function}\n   */\n  #eventCallback;\n\n  /**\n   * @callback eventFn\n   * @param {object} event The event.\n   */\n\n  /**\n   * @param {App} app The associated application.\n   * @param {Function} eventCallback Event callback.\n   */\n  constructor(app, eventCallback) {\n    this.#app = app;\n    this.#eventCallback = eventCallback;\n    this.#shapeEditor = new DrawShapeEditor(app, eventCallback);\n    this.#trash = new DrawTrash();\n  }\n\n  /**\n   * Set the draw editor shape.\n   *\n   * @param {Konva.Shape} shape The shape to edit.\n   * @param {DrawLayer} drawLayer The layer the shape belongs to.\n   */\n  setEditorShape(shape, drawLayer) {\n    const drawController = drawLayer.getDrawController();\n    if (shape &&\n      shape instanceof Konva.Shape &&\n      shape !== this.#shapeEditor.getShape() &&\n      drawController.isAnnotationGroupEditable()) {\n      // disable\n      this.#shapeEditor.disable();\n      // set shape\n      this.#shapeEditor.setShape(\n        shape,\n        drawLayer,\n        drawLayer.getDrawController().getAnnotation(shape.getParent().id()));\n      // enable\n      this.#shapeEditor.enable();\n    }\n  }\n\n  /**\n   * Get the currently edited shape group.\n   *\n   * @returns {Konva.Group|undefined} The edited group.\n   */\n  getEditorShapeGroup() {\n    let res;\n    if (this.#shapeEditor.isActive()) {\n      res = this.#shapeEditor.getShape().getParent();\n      if (!(res instanceof Konva.Group)) {\n        return;\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Get the currently edited annotation.\n   *\n   * @returns {Annotation|undefined} The edited annotation.\n   */\n  getEditorAnnotation() {\n    let res;\n    if (this.#shapeEditor.isActive()) {\n      res = this.#shapeEditor.getAnnotation();\n    }\n    return res;\n  }\n\n  /**\n   * Disable and reset the shape editor.\n   */\n  disableAndResetEditor() {\n    this.#shapeEditor.disable();\n    this.#shapeEditor.reset();\n  }\n\n  /**\n   * Get the real position from an event.\n   * TODO: use layer method?\n   *\n   * @param {Scalar2D} index The input index as {x,y}.\n   * @param {DrawLayer} drawLayer The origin draw layer.\n   * @returns {Scalar2D} The real position in the image as {x,y}.\n   */\n  #getRealPosition(index, drawLayer) {\n    const stage = drawLayer.getKonvaStage();\n    return {\n      x: stage.offset().x + index.x / stage.scale().x,\n      y: stage.offset().y + index.y / stage.scale().y\n    };\n  }\n\n  /**\n   * Store specific mouse over cursor.\n   *\n   * @param {string} cursor The cursor name.\n   */\n  storeMouseOverCursor(cursor) {\n    this.#mouseOverCursor = cursor;\n  }\n\n  /**\n   * Handle shape group mouseover.\n   */\n  #onMouseOverShapeGroup() {\n    // mouse cursor\n    this.#originalCursor = document.body.style.cursor;\n    document.body.style.cursor = this.#mouseOverCursor;\n    // shape opacity\n    this.#mouseOverShapeGroup.opacity(0.75);\n  }\n\n  /**\n   * Handle shape group mouseout.\n   */\n  onMouseOutShapeGroup() {\n    // mouse cursor\n    if (typeof this.#originalCursor !== 'undefined') {\n      document.body.style.cursor = this.#originalCursor;\n      this.#originalCursor = undefined;\n    }\n    // shape opacity\n    if (typeof this.#mouseOverShapeGroup !== 'undefined') {\n      this.#mouseOverShapeGroup.opacity(1);\n    }\n  }\n\n  /**\n   * Add shape group mouse over and out listeners: updates\n   *   shape group opacity and cursor.\n   *\n   * @param {Konva.Group} shapeGroup The shape group.\n   */\n  #addShapeOverListeners(shapeGroup) {\n    // handle mouse over\n    shapeGroup.on('mouseover', () => {\n      this.#mouseOverShapeGroup = shapeGroup;\n      this.#onMouseOverShapeGroup();\n    });\n\n    // handle mouse out\n    shapeGroup.on('mouseout', () => {\n      this.onMouseOutShapeGroup();\n      this.#mouseOverShapeGroup = undefined;\n    });\n  }\n\n  /**\n   * Remove shape group mouse over and out listeners.\n   *\n   * @param {Konva.Group} shapeGroup The shape group.\n   */\n  #removeShapeOverListeners(shapeGroup) {\n    shapeGroup.off('mouseover');\n    shapeGroup.off('mouseout');\n  }\n\n  /**\n   * Add shape group listeners.\n   *\n   * @param {Konva.Group} shapeGroup The shape group to set on.\n   * @param {Annotation} annotation The associated annotation.\n   * @param {DrawLayer} drawLayer The origin draw layer.\n   */\n  addShapeGroupListeners(shapeGroup, annotation, drawLayer) {\n    // shape mouse over\n    this.#addShapeOverListeners(shapeGroup);\n\n    // make shape draggable\n    this.#addShapeListeners(shapeGroup, annotation, drawLayer);\n\n    // make label draggable\n    this.#addLabelListeners(shapeGroup, annotation, drawLayer);\n\n    // double click handling: update annotation text\n    shapeGroup.on('dblclick', () => {\n      // original text expr\n      const originalTextExpr = annotation.textExpr;\n\n      const onSaveCallback = (annotation) => {\n        // new text expr\n        const newTextExpr = annotation.textExpr;\n        // create annotation update command\n        const command = new UpdateAnnotationCommand(\n          annotation,\n          {textExpr: originalTextExpr},\n          {textExpr: newTextExpr},\n          drawLayer.getDrawController()\n        );\n        // add command to undo stack\n        this.#app.addToUndoStack(command);\n        // execute command\n        command.execute();\n      };\n\n      // call roi dialog\n      customUI.openRoiDialog(annotation, onSaveCallback);\n    });\n  }\n\n  /**\n   * Add shape listeners.\n   *\n   * @param {Konva.Group} shapeGroup The shape group to get the shape from.\n   * @param {Annotation} annotation The associated annotation.\n   * @param {DrawLayer} drawLayer The origin draw layer.\n   */\n  #addShapeListeners(shapeGroup, annotation, drawLayer) {\n    const konvaLayer = drawLayer.getKonvaLayer();\n\n    const shape = shapeGroup.getChildren(isNodeNameShape)[0];\n    if (!(shape instanceof Konva.Shape)) {\n      return;\n    }\n    shape.draggable(true);\n\n    // cache vars\n    let dragStartPos;\n    let previousPos;\n    let originalProps;\n    let colour;\n\n    // drag start event handling\n    shape.on('dragstart.draw', (event) => {\n      // store colour\n      colour = shape.stroke();\n      // store pos\n      dragStartPos = {\n        x: shape.x(),\n        y: shape.y()\n      };\n      previousPos = {\n        x: event.target.x(),\n        y: event.target.y()\n      };\n      // store original properties\n      originalProps = {\n        mathShape: annotation.mathShape,\n        referencePoints: annotation.referencePoints\n      };\n\n      // display trash\n      this.#trash.activate(drawLayer);\n      // deactivate anchors to avoid events on null shape\n      this.#shapeEditor.setAnchorsActive(false);\n      // draw\n      konvaLayer.draw();\n    });\n\n    // drag move event handling\n    shape.on('dragmove.draw', (event) => {\n      // if out of range, reset shape position and exit\n      const range = getShapePositionRange(drawLayer.getBaseSize(), shape);\n      if (range && !isShapeInRange(shape, range.min, range.max)) {\n        shape.x(previousPos.x);\n        shape.y(previousPos.y);\n        return;\n      }\n\n      // move associated shapes (but not label)\n      const diff = {\n        x: event.target.x() - previousPos.x,\n        y: event.target.y() - previousPos.y\n      };\n      const children = shapeGroup.getChildren();\n      const labelWithDefaultPosition =\n        typeof annotation.labelPosition === 'undefined';\n      for (const child of children) {\n        // skip shape and label with defined position\n        if (child === event.target ||\n          (child.name() === 'label' && !labelWithDefaultPosition)\n        ) {\n          continue;\n        }\n        // move other nodes\n        child.move(diff);\n      }\n\n      // store pos\n      previousPos = {\n        x: event.target.x(),\n        y: event.target.y()\n      };\n\n      // get appropriate factory\n      const factory = annotation.getFactory();\n      // update annotation\n      factory.updateAnnotationOnTranslation(annotation, diff);\n      // update label\n      factory.updateLabelContent(annotation, shapeGroup, this.#app.getStyle());\n\n      // highlight trash when on it\n      const mousePoint = getMousePoint(event.evt);\n      const offset = {\n        x: mousePoint.getX(),\n        y: mousePoint.getY()\n      };\n      const eventPos = this.#getRealPosition(offset, drawLayer);\n      this.#trash.changeChildrenColourOnTrashHover(eventPos,\n        shapeGroup, colour);\n      // draw\n      konvaLayer.draw();\n    });\n\n    // drag end event handling\n    shape.on('dragend.draw', (event) => {\n      // remove trash\n      this.#trash.remove();\n      // activate(false) will also trigger a dragend.draw\n      if (typeof event === 'undefined' ||\n        typeof event.evt === 'undefined') {\n        return;\n      }\n      const pos = {x: shape.x(), y: shape.y()};\n      // delete case\n      const mousePoint = getMousePoint(event.evt);\n      const offset = {\n        x: mousePoint.getX(),\n        y: mousePoint.getY()\n      };\n      const eventPos = this.#getRealPosition(offset, drawLayer);\n      if (this.#trash.isOverTrash(eventPos)) {\n        // compensate for the drag translation\n        shapeGroup.x(dragStartPos.x);\n        shapeGroup.y(dragStartPos.y);\n        // disable editor\n        this.#shapeEditor.disable();\n        this.#shapeEditor.reset();\n        this.#trash.changeGroupChildrenColour(shapeGroup, colour);\n        // reset math shape (for undo)\n        annotation.mathShape = originalProps.mathShape;\n        annotation.referencePoints = originalProps.referencePoints;\n\n        // create remove annotation command\n        const command = new RemoveAnnotationCommand(\n          annotation,\n          drawLayer.getDrawController()\n        );\n        // add command to undo stack\n        this.#app.addToUndoStack(command);\n        // execute command: triggers draw remove\n        command.execute();\n\n        // reset cursor\n        this.onMouseOutShapeGroup();\n      } else {\n        const translation = {\n          x: pos.x - dragStartPos.x,\n          y: pos.y - dragStartPos.y\n        };\n        if (translation.x !== 0 || translation.y !== 0) {\n          // update annotation command\n          const newProps = {\n            mathShape: annotation.mathShape,\n            referencePoints: annotation.referencePoints\n          };\n          const command = new UpdateAnnotationCommand(\n            annotation,\n            originalProps,\n            newProps,\n            drawLayer.getDrawController()\n          );\n          // add command to undo stack\n          this.#app.addToUndoStack(command);\n          // fire event manually since command is not executed\n          this.#eventCallback({\n            type: 'annotationupdate',\n            data: annotation,\n            dataid: drawLayer.getDataId(),\n            keys: Object.keys(newProps)\n          });\n          // update original shape\n          originalProps = {\n            mathShape: newProps.mathShape,\n            referencePoints: newProps.referencePoints\n          };\n        }\n        // reset anchors\n        this.#shapeEditor.setAnchorsActive(true);\n        this.#shapeEditor.resetAnchors();\n      }\n      // draw\n      konvaLayer.draw();\n      // reset start position\n      dragStartPos = {\n        x: shape.x(),\n        y: shape.y()\n      };\n    });\n  }\n\n  /**\n   * Add label listeners.\n   *\n   * @param {Konva.Group} shapeGroup The shape group to get the label from.\n   * @param {Annotation} annotation The associated annotation.\n   * @param {DrawLayer} drawLayer The origin draw layer.\n   */\n  #addLabelListeners(shapeGroup, annotation, drawLayer) {\n    const label = shapeGroup.getChildren(isNodeNameLabel)[0];\n    if (!(label instanceof Konva.Label)) {\n      return;\n    }\n    label.draggable(true);\n\n    // cache vars\n    let dragStartPos;\n    let originalLabelPosition;\n\n    // drag start event handling\n    label.on('dragstart.draw', (/*event*/) => {\n      // store pos\n      dragStartPos = {\n        x: label.x(),\n        y: label.y()\n      };\n      // store original position\n      originalLabelPosition = annotation.labelPosition;\n    });\n\n    // drag end event handling\n    label.on('dragend.draw', (/*event*/) => {\n      const translation = {\n        x: label.x() - dragStartPos.x,\n        y: label.y() - dragStartPos.y\n      };\n      if (translation.x !== 0 || translation.y !== 0) {\n        const newLabelPosition = new Point2D(label.x(), label.y());\n        // set label position\n        annotation.labelPosition = newLabelPosition;\n        // update annotation command\n        const command = new UpdateAnnotationCommand(\n          annotation,\n          {labelPosition: originalLabelPosition},\n          {labelPosition: newLabelPosition},\n          drawLayer.getDrawController()\n        );\n        // add command to undo stack\n        this.#app.addToUndoStack(command);\n        // fire event manually since command is not executed\n        this.#eventCallback({\n          type: 'annotationupdate',\n          data: annotation,\n          dataid: drawLayer.getDataId(),\n          keys: ['labelPosition']\n        });\n        // update original position\n        originalLabelPosition = newLabelPosition;\n      }\n      dragStartPos = {x: label.x(), y: label.y()};\n    });\n  }\n\n  /**\n   * Remove shape group listeners.\n   *\n   * @param {Konva.Group} shapeGroup The shape group to set off.\n   */\n  removeShapeListeners(shapeGroup) {\n    // mouse over\n    this.#removeShapeOverListeners(shapeGroup);\n    // double click\n    shapeGroup.off('dblclick');\n    // remove listeners from shape\n    const shape = shapeGroup.getChildren(isNodeNameShape)[0];\n    if (shape instanceof Konva.Shape) {\n      shape.draggable(false);\n      shape.off('dragstart.draw');\n      shape.off('dragmove.draw');\n      shape.off('dragend.draw');\n    }\n    // remove listeners from label\n    const label = shapeGroup.getChildren(isNodeNameLabel)[0];\n    if (label instanceof Konva.Label) {\n      label.draggable(false);\n      label.off('dragstart.draw');\n      label.off('dragend.draw');\n    }\n  }\n} // DrawShapeHandler class","import {ListenerHandler} from '../utils/listen';\nimport {DrawController} from '../app/drawController';\nimport {getScaledOffset} from './layerGroup';\nimport {InteractionEventNames} from './generic';\nimport {logger} from '../utils/logger';\nimport {toStringId} from '../utils/array';\nimport {precisionRound} from '../utils/string';\nimport {AddAnnotationCommand} from '../tools/drawCommands';\nimport {\n  isNodeWithId,\n  isPositionNode,\n  isNodeNameShape,\n  isNodeNameLabel\n} from '../tools/drawBounds';\nimport {Style} from '../gui/style';\nimport {Line} from '../math/line';\nimport {Rectangle} from '../math/rectangle';\nimport {ROI} from '../math/roi';\nimport {Protractor} from '../math/protractor';\nimport {Ellipse} from '../math/ellipse';\nimport {Circle} from '../math/circle';\nimport {Point2D} from '../math/point';\n\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point, Point3D} from '../math/point';\nimport {Index} from '../math/index';\nimport {Vector3D} from '../math/vector';\nimport {Scalar2D, Scalar3D} from '../math/scalar';\nimport {PlaneHelper} from '../image/planeHelper';\nimport {Annotation} from '../image/annotation';\nimport {AnnotationGroup} from '../image/annotationGroup';\nimport {DrawShapeHandler} from '../tools/drawShapeHandler';\n/* eslint-enable no-unused-vars */\n\n/**\n * Debug function to output the layer hierarchy as text.\n *\n * @param {object} layer The Konva layer.\n * @param {string} prefix A display prefix (used in recursion).\n * @returns {string} A text representation of the hierarchy.\n */\n// function getHierarchyLog(layer, prefix) {\n//   if (typeof prefix === 'undefined') {\n//     prefix = '';\n//   }\n//   const kids = layer.getChildren();\n//   let log = prefix + '|__ ' + layer.name() + ': ' + layer.id() + '\\n';\n//   for (let i = 0; i < kids.length; ++i) {\n//     log += getHierarchyLog(kids[i], prefix + '    ');\n//   }\n//   return log;\n// }\n\n/**\n * Draw layer.\n */\nexport class DrawLayer {\n\n  /**\n   * The container div.\n   *\n   * @type {HTMLDivElement}\n   */\n  #containerDiv;\n\n  /**\n   * Konva stage.\n   *\n   * @type {Konva.Stage}\n   */\n  #konvaStage = null;\n\n  /**\n   * The layer base size as {x,y}.\n   *\n   * @type {Scalar2D}\n   */\n  #baseSize;\n\n  /**\n   * The layer base spacing as {x,y}.\n   *\n   * @type {Scalar2D}\n   */\n  #baseSpacing;\n\n  /**\n   * The layer fit scale.\n   *\n   * @type {Scalar2D}\n   */\n  #fitScale = {x: 1, y: 1};\n\n  /**\n   * The layer flip scale.\n   *\n   * @type {Scalar3D}\n   */\n  #flipScale = {x: 1, y: 1, z: 1};\n\n  /**\n   * The base layer offset.\n   *\n   * @type {Scalar2D}\n   */\n  #baseOffset = {x: 0, y: 0};\n\n  /**\n   * The view offset.\n   *\n   * @type {Scalar2D}\n   */\n  #viewOffset = {x: 0, y: 0};\n\n  /**\n   * The zoom offset.\n   *\n   * @type {Scalar2D}\n   */\n  #zoomOffset = {x: 0, y: 0};\n\n  /**\n   * The flip offset.\n   *\n   * @type {Scalar2D}\n   */\n  #flipOffset = {x: 0, y: 0};\n\n  /**\n   * The draw controller.\n   *\n   * @type {DrawController}\n   */\n  #drawController;\n\n  /**\n   * The plane helper.\n   *\n   * @type {PlaneHelper}\n   */\n  #planeHelper;\n\n  /**\n   * The associated data id.\n   *\n   * @type {string}\n   */\n  #dataId;\n\n  /**\n   * The reference layer id.\n   *\n   * @type {string}\n   */\n  #referenceLayerId;\n\n  /**\n   * Current position group id.\n   *\n   * @type {string}\n   */\n  #currentPosGroupId = null;\n\n  /**\n   * Draw shape handler.\n   *\n   * @type {DrawShapeHandler|undefined}\n   */\n  #shapeHandler;\n\n  /**\n   * Visible labels flag.\n   *\n   * @type {boolean}\n   */\n  #visibleLabels = true;\n\n  /**\n   * @param {HTMLDivElement} containerDiv The layer div, its id will be used\n   *   as this layer id.\n   */\n  constructor(containerDiv) {\n    this.#containerDiv = containerDiv;\n    // specific css class name\n    this.#containerDiv.className += ' drawLayer';\n  }\n\n  /**\n   * Set the draw shape handler.\n   *\n   * @param {DrawShapeHandler|undefined} handler The shape handler.\n   */\n  setShapeHandler(handler) {\n    this.#shapeHandler = handler;\n  }\n\n  /**\n   * Get the associated data id.\n   *\n   * @returns {string} The id.\n   */\n  getDataId() {\n    return this.#dataId;\n  }\n\n  /**\n   * Get the reference data id.\n   *\n   * @returns {string} The id.\n   */\n  getReferenceLayerId() {\n    return this.#referenceLayerId;\n  }\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the Konva stage.\n   *\n   * @returns {Konva.Stage} The stage.\n   */\n  getKonvaStage() {\n    return this.#konvaStage;\n  }\n\n  /**\n   * Get the Konva layer.\n   *\n   * @returns {Konva.Layer} The layer.\n   */\n  getKonvaLayer() {\n    // there should only be one layer\n    return this.#konvaStage.getLayers()[0];\n  }\n\n  /**\n   * Get the draw controller.\n   *\n   * @returns {DrawController} The controller.\n   */\n  getDrawController() {\n    return this.#drawController;\n  }\n\n  /**\n   * Set the plane helper.\n   *\n   * @param {PlaneHelper} helper The helper.\n   */\n  setPlaneHelper(helper) {\n    this.#planeHelper = helper;\n  }\n\n  // common layer methods [start] ---------------\n\n  /**\n   * Get the id of the layer.\n   *\n   * @returns {string} The string id.\n   */\n  getId() {\n    return this.#containerDiv.id;\n  }\n\n  /**\n   * Remove the HTML element from the DOM.\n   */\n  removeFromDOM() {\n    this.#containerDiv.remove();\n  }\n\n  /**\n   * Get the layer base size (without scale).\n   *\n   * @returns {Scalar2D} The size as {x,y}.\n   */\n  getBaseSize() {\n    return this.#baseSize;\n  }\n\n  /**\n   * Get the layer opacity.\n   *\n   * @returns {number} The opacity ([0:1] range).\n   */\n  getOpacity() {\n    return this.#konvaStage.opacity();\n  }\n\n  /**\n   * Set the layer opacity.\n   *\n   * @param {number} alpha The opacity ([0:1] range).\n   */\n  setOpacity(alpha) {\n    this.#konvaStage.opacity(Math.min(Math.max(alpha, 0), 1));\n  }\n\n  /**\n   * Add a flip offset along the layer X axis.\n   */\n  addFlipOffsetX() {\n    // flip offset\n    const scale = this.#konvaStage.scale();\n    const size = this.#konvaStage.size();\n    this.#flipOffset.x += size.width / scale.x;\n    // apply\n    const offset = this.#konvaStage.offset();\n    offset.x += this.#flipOffset.x;\n    this.#konvaStage.offset(offset);\n  }\n\n  /**\n   * Add a flip offset along the layer Y axis.\n   */\n  addFlipOffsetY() {\n    // flip offset\n    const scale = this.#konvaStage.scale();\n    const size = this.#konvaStage.size();\n    this.#flipOffset.y += size.height / scale.y;\n    // apply\n    const offset = this.#konvaStage.offset();\n    offset.y += this.#flipOffset.y;\n    this.#konvaStage.offset(offset);\n  }\n\n  /**\n   * Flip the scale along the layer X axis.\n   */\n  flipScaleX() {\n    this.#flipScale.x *= -1;\n  }\n\n  /**\n   * Flip the scale along the layer Y axis.\n   */\n  flipScaleY() {\n    this.#flipScale.y *= -1;\n  }\n\n  /**\n   * Flip the scale along the layer Z axis.\n   */\n  flipScaleZ() {\n    this.#flipScale.z *= -1;\n  }\n\n  /**\n   * Set the layer scale.\n   *\n   * @param {Scalar3D} newScale The scale as {x,y,z}.\n   * @param {Point3D} [center] The scale center.\n   */\n  setScale(newScale, center) {\n    const orientedNewScale =\n      this.#planeHelper.getTargetOrientedPositiveXYZ({\n        x: newScale.x * this.#flipScale.x,\n        y: newScale.y * this.#flipScale.y,\n        z: newScale.z * this.#flipScale.z,\n      });\n    const finalNewScale = {\n      x: this.#fitScale.x * orientedNewScale.x,\n      y: this.#fitScale.y * orientedNewScale.y\n    };\n\n    const offset = this.#konvaStage.offset();\n\n    if (Math.abs(newScale.x) === 1 &&\n      Math.abs(newScale.y) === 1 &&\n      Math.abs(newScale.z) === 1) {\n      // reset zoom offset for scale=1\n      const resetOffset = {\n        x: offset.x - this.#zoomOffset.x,\n        y: offset.y - this.#zoomOffset.y\n      };\n      // store new offset\n      this.#zoomOffset = {x: 0, y: 0};\n      this.#konvaStage.offset(resetOffset);\n    } else {\n      if (typeof center !== 'undefined') {\n        let worldCenter = this.#planeHelper.getPlaneOffsetFromOffset3D({\n          x: center.getX(),\n          y: center.getY(),\n          z: center.getZ()\n        });\n        // center was obtained with viewLayer.displayToMainPlanePos\n        // compensated for baseOffset\n        // TODO: justify...\n        worldCenter = {\n          x: worldCenter.x + this.#baseOffset.x,\n          y: worldCenter.y + this.#baseOffset.y\n        };\n\n        const newOffset = getScaledOffset(\n          offset, this.#konvaStage.scale(), finalNewScale, worldCenter);\n\n        const newZoomOffset = {\n          x: this.#zoomOffset.x + newOffset.x - offset.x,\n          y: this.#zoomOffset.y + newOffset.y - offset.y\n        };\n        // store new offset\n        this.#zoomOffset = newZoomOffset;\n        this.#konvaStage.offset(newOffset);\n      }\n    }\n\n    this.#konvaStage.scale(finalNewScale);\n    // update labels\n    this.#updateLabelScale(finalNewScale);\n  }\n\n  /**\n   * Initialise the layer scale.\n   *\n   * @param {Scalar3D} newScale The scale as {x,y,z}.\n   * @param {Scalar2D} absoluteZoomOffset The zoom offset as {x,y}\n   *   without the fit scale (as provided by getAbsoluteZoomOffset).\n   */\n  initScale(newScale, absoluteZoomOffset) {\n    const orientedNewScale = this.#planeHelper.getTargetOrientedPositiveXYZ({\n      x: newScale.x * this.#flipScale.x,\n      y: newScale.y * this.#flipScale.y,\n      z: newScale.z * this.#flipScale.z,\n    });\n    const finalNewScale = {\n      x: this.#fitScale.x * orientedNewScale.x,\n      y: this.#fitScale.y * orientedNewScale.y\n    };\n    this.#konvaStage.scale(finalNewScale);\n\n    this.#zoomOffset = {\n      x: absoluteZoomOffset.x / this.#fitScale.x,\n      y: absoluteZoomOffset.y / this.#fitScale.y\n    };\n    const offset = this.#konvaStage.offset();\n    this.#konvaStage.offset({\n      x: offset.x + this.#zoomOffset.x,\n      y: offset.y + this.#zoomOffset.y\n    });\n  }\n\n  /**\n   * Set the layer offset.\n   *\n   * @param {Scalar3D} newOffset The offset as {x,y,z}.\n   */\n  setOffset(newOffset) {\n    const planeNewOffset =\n      this.#planeHelper.getPlaneOffsetFromOffset3D(newOffset);\n    this.#konvaStage.offset({\n      x: planeNewOffset.x +\n        this.#viewOffset.x +\n        this.#baseOffset.x +\n        this.#zoomOffset.x +\n        this.#flipOffset.x,\n      y: planeNewOffset.y +\n        this.#viewOffset.y +\n        this.#baseOffset.y +\n        this.#zoomOffset.y +\n        this.#flipOffset.y\n    });\n  }\n\n  /**\n   * Set the base layer offset. Updates the layer offset.\n   *\n   * @param {Vector3D} scrollOffset The scroll offset vector.\n   * @param {Vector3D} planeOffset The plane offset vector.\n   * @returns {boolean} True if the offset was updated.\n   */\n  setBaseOffset(scrollOffset, planeOffset) {\n    const scrollIndex = this.#planeHelper.getNativeScrollIndex();\n    const newOffset = this.#planeHelper.getPlaneOffsetFromOffset3D({\n      x: scrollIndex === 0 ? scrollOffset.getX() : planeOffset.getX(),\n      y: scrollIndex === 1 ? scrollOffset.getY() : planeOffset.getY(),\n      z: scrollIndex === 2 ? scrollOffset.getZ() : planeOffset.getZ(),\n    });\n    const needsUpdate = this.#baseOffset.x !== newOffset.x ||\n      this.#baseOffset.y !== newOffset.y;\n    // reset offset if needed\n    if (needsUpdate) {\n      const offset = this.#konvaStage.offset();\n      this.#konvaStage.offset({\n        x: offset.x - this.#baseOffset.x + newOffset.x,\n        y: offset.y - this.#baseOffset.y + newOffset.y\n      });\n      this.#baseOffset = newOffset;\n    }\n    return needsUpdate;\n  }\n\n  /**\n   * Display the layer.\n   *\n   * @param {boolean} flag Whether to display the layer or not.\n   */\n  display(flag) {\n    this.#containerDiv.style.display = flag ? '' : 'none';\n  }\n\n  /**\n   * Check if the layer is visible.\n   *\n   * @returns {boolean} True if the layer is visible.\n   */\n  isVisible() {\n    return this.#containerDiv.style.display === '';\n  }\n\n  /**\n   * Draw the content (imageData) of the layer.\n   * The imageData variable needs to be set.\n   */\n  draw() {\n    this.#konvaStage.draw();\n  }\n\n  /**\n   * Initialise the layer: set the canvas and context.\n   *\n   * @param {Scalar2D} size The image size as {x,y}.\n   * @param {Scalar2D} spacing The image spacing as {x,y}.\n   * @param {string} refLayerId The reference image dataId.\n   */\n  initialise(size, spacing, refLayerId) {\n    // set locals\n    this.#baseSize = size;\n    this.#baseSpacing = spacing;\n    this.#referenceLayerId = refLayerId;\n\n    // create stage\n    this.#konvaStage = new Konva.Stage({\n      container: this.#containerDiv,\n      width: this.#baseSize.x,\n      height: this.#baseSize.y,\n      listening: false\n    });\n    // reset style\n    // (avoids a not needed vertical scrollbar)\n    this.#konvaStage.getContent().setAttribute('style', '');\n\n    // create layer\n    const konvaLayer = new Konva.Layer({\n      listening: false,\n      visible: true\n    });\n    this.#konvaStage.add(konvaLayer);\n  }\n\n  /**\n   * Set the annotation group.\n   *\n   * @param {AnnotationGroup} annotationGroup The annotation group.\n   * @param {string} dataId The associated data id.\n   * @param {object} exeCallback The undo stack callback.\n   */\n  setAnnotationGroup(annotationGroup, dataId, exeCallback) {\n    this.#dataId = dataId;\n    // local listeners\n    annotationGroup.addEventListener('annotationadd', (event) => {\n      // draw annotation\n      this.#addAnnotationDraw(event.data, true);\n      this.getKonvaLayer().draw();\n    });\n    annotationGroup.addEventListener('annotationupdate', (event) => {\n      // update annotation draw\n      this.#updateAnnotationDraw(event.data);\n      this.getKonvaLayer().draw();\n    });\n    annotationGroup.addEventListener('annotationremove', (event) => {\n      // remove annotation draw\n      this.#removeAnnotationDraw(event.data);\n      this.getKonvaLayer().draw();\n    });\n    annotationGroup.addEventListener(\n      'annotationgroupeditablechange',\n      (event) => {\n        this.activateCurrentPositionShapes(event.data);\n      }\n    );\n\n    // create draw controller\n    this.#drawController = new DrawController(annotationGroup);\n\n    // annotations are allready in the annotation list,\n    // -> no need to add them, just draw and save command\n    if (annotationGroup.getLength() !== 0) {\n      for (const annotation of annotationGroup.getList()) {\n        // draw annotation\n        this.#addAnnotationDraw(annotation, false);\n        // create the draw command\n        const command = new AddAnnotationCommand(\n          annotation, this.getDrawController());\n        // add command to undo stack\n        exeCallback(command);\n      }\n    }\n  }\n\n  /**\n   * Activate shapes at current position.\n   *\n   * @param {boolean} flag The flag to activate or not.\n   */\n  activateCurrentPositionShapes(flag) {\n    const konvaLayer = this.getKonvaLayer();\n\n    // stop listening\n    this.#konvaStage.listening(false);\n\n    if (typeof this.#shapeHandler !== 'undefined') {\n      // reset shape editor (remove anchors)\n      this.#shapeHandler.disableAndResetEditor();\n      // remove listeners for all position groups\n      const allPosGroups = konvaLayer.getChildren();\n      for (const posGroup of allPosGroups) {\n        if (posGroup instanceof Konva.Group) {\n          posGroup.getChildren().forEach((group) => {\n            if (group instanceof Konva.Group) {\n              this.#shapeHandler.removeShapeListeners(group);\n            }\n          });\n        }\n      }\n    }\n\n    // activate shape listeners if possible\n    const drawController = this.getDrawController();\n    if (flag &&\n      drawController.getAnnotationGroup().isEditable()) {\n      // shape groups at the current position\n      const shapeGroups =\n        this.getCurrentPosGroup().getChildren();\n      // listen if we have shapes\n      if (shapeGroups.length !== 0) {\n        this.#konvaStage.listening(true);\n        konvaLayer.listening(true);\n      }\n      // add listeners for position group\n      if (typeof this.#shapeHandler !== 'undefined') {\n        shapeGroups.forEach((group) => {\n          if (group instanceof Konva.Group) {\n            const annotation = drawController.getAnnotation(group.id());\n            this.#shapeHandler.addShapeGroupListeners(group, annotation, this);\n          }\n        });\n      }\n    }\n\n    konvaLayer.draw();\n  }\n\n  /**\n   * Get the position group id for an annotation.\n   *\n   * @param {Annotation} annotation The target annotation.\n   * @returns {string|undefined} The group id.\n   */\n  #getAnnotationPosGroupId(annotation) {\n    let points;\n    // annotation planePoints are only present\n    // for non aquisition plane\n    if (typeof annotation.planePoints !== 'undefined') {\n      // use plane points\n      points = annotation.planePoints;\n    } else {\n      // just use plane origin\n      points = [annotation.planeOrigin];\n    }\n    return this.#getPositionId(points);\n  }\n\n  /**\n   * Get a string id from input plane points.\n   *\n   * @param {Point3D[]} points A list of points that defined a plane.\n   * @returns {string} The string id.\n   */\n  #getPositionId(points) {\n    let res = '';\n    for (const point of points) {\n      if (res.length !== 0) {\n        res += '-';\n      }\n      const posValues = [\n        precisionRound(point.getX(), 2),\n        precisionRound(point.getY(), 2),\n        precisionRound(point.getZ(), 2),\n      ];\n      res += toStringId(posValues);\n    }\n    return res;\n  }\n\n  /**\n   * Find the shape group associated to an annotation.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @returns {Konva.Group|undefined} The shape group.\n   */\n  #findShapeGroup(annotation) {\n    let res;\n\n    const posGroupId = this.#getAnnotationPosGroupId(annotation);\n    const layerChildren = this.getKonvaLayer().getChildren(\n      isNodeWithId(posGroupId));\n    if (layerChildren.length !== 0) {\n      const posGroup = layerChildren[0];\n      if (!(posGroup instanceof Konva.Group)) {\n        return;\n      }\n      const posChildren = posGroup.getChildren(\n        isNodeWithId(annotation.id));\n      if (posChildren.length !== 0 &&\n        posChildren[0] instanceof Konva.Group) {\n        res = posChildren[0];\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Draw an annotation: create the shape group and add it to\n   *   the Konva layer.\n   *\n   * @param {Annotation} annotation The annotation to draw.\n   * @param {boolean} visible The position group visibility.\n   */\n  #addAnnotationDraw(annotation, visible) {\n    // check for compatible view\n    if (!annotation.isCompatibleView(this.#planeHelper)) {\n      return;\n    }\n    const posGroupId = this.#getAnnotationPosGroupId(annotation);\n    // Get or create position-group if it does not exist and\n    // append it to konvaLayer\n    let posGroup = this.getKonvaLayer().getChildren(\n      isNodeWithId(posGroupId))[0];\n    if (typeof posGroup === 'undefined') {\n      posGroup = new Konva.Group({\n        id: posGroupId,\n        name: 'position-group',\n        visible: visible\n      });\n      this.getKonvaLayer().add(posGroup);\n    }\n    if (!(posGroup instanceof Konva.Group)) {\n      return;\n    };\n\n    const style = new Style();\n    const stage = this.getKonvaStage();\n    style.setZoomScale(stage.scale());\n\n    // shape group (use first one since it will be removed from\n    // the group when we change it)\n    const factory = annotation.getFactory();\n    const shapeGroup = factory.createShapeGroup(annotation, style);\n    // add group to posGroup (switches its parent)\n    posGroup.add(shapeGroup);\n\n    // activate shape if possible\n    if (visible &&\n      typeof this.#shapeHandler !== 'undefined'\n    ) {\n      this.#shapeHandler.addShapeGroupListeners(shapeGroup, annotation, this);\n    }\n    // set label visibility\n    this.setLabelVisibility(shapeGroup);\n  }\n\n  /**\n   * Remove an annotation draw.\n   *\n   * @param {Annotation} annotation The annotation to remove.\n   * @returns {boolean} True if the shape group has been found and removed.\n   */\n  #removeAnnotationDraw(annotation) {\n    const shapeGroup = this.#findShapeGroup(annotation);\n    if (!(shapeGroup instanceof Konva.Group)) {\n      logger.debug('No shape group to remove');\n      return false;\n    };\n    shapeGroup.remove();\n    return true;\n  }\n\n  /**\n   * Update an annotation draw.\n   *\n   * @param {Annotation} annotation The annotation to update.\n   */\n  #updateAnnotationDraw(annotation) {\n    // update quantification after math shape update\n    annotation.updateQuantification();\n    // update draw if needed\n    if (this.#removeAnnotationDraw(annotation)) {\n      this.#addAnnotationDraw(annotation, true);\n    }\n  }\n\n  /**\n   * Fit the layer to its parent container.\n   *\n   * @param {Scalar2D} containerSize The container size as {x,y}.\n   * @param {number} divToWorldSizeRatio The div to world size ratio.\n   * @param {Scalar2D} fitOffset The fit offset as {x,y}.\n   */\n  fitToContainer(containerSize, divToWorldSizeRatio, fitOffset) {\n    // update konva\n    this.#konvaStage.width(containerSize.x);\n    this.#konvaStage.height(containerSize.y);\n\n    // fit scale\n    const divToImageSizeRatio = {\n      x: divToWorldSizeRatio * this.#baseSpacing.x,\n      y: divToWorldSizeRatio * this.#baseSpacing.y\n    };\n    // #scale = inputScale * fitScale * flipScale\n    // flipScale does not change here, we can omit it\n    // newScale = (#scale / fitScale) * newFitScale\n    const newScale = {\n      x: this.#konvaStage.scale().x * divToImageSizeRatio.x / this.#fitScale.x,\n      y: this.#konvaStage.scale().y * divToImageSizeRatio.y / this.#fitScale.y\n    };\n\n    // set scales if different from previous\n    if (this.#konvaStage.scale().x !== newScale.x ||\n      this.#konvaStage.scale().y !== newScale.y) {\n      this.#fitScale = divToImageSizeRatio;\n      this.#konvaStage.scale(newScale);\n    }\n\n    // view offset\n    const newViewOffset = {\n      x: fitOffset.x / divToImageSizeRatio.x,\n      y: fitOffset.y / divToImageSizeRatio.y\n    };\n    // flip offset\n    const scaledImageSize = {\n      x: containerSize.x / divToImageSizeRatio.x,\n      y: containerSize.y / divToImageSizeRatio.y\n    };\n    const newFlipOffset = {\n      x: this.#flipOffset.x !== 0 ? scaledImageSize.x : 0,\n      y: this.#flipOffset.y !== 0 ? scaledImageSize.y : 0,\n    };\n\n    // set offsets if different from previous\n    if (this.#viewOffset.x !== newViewOffset.x ||\n      this.#viewOffset.y !== newViewOffset.y ||\n      this.#flipOffset.x !== newFlipOffset.x ||\n      this.#flipOffset.y !== newFlipOffset.y) {\n      // update global offset\n      this.#konvaStage.offset({\n        x: this.#konvaStage.offset().x +\n          newViewOffset.x - this.#viewOffset.x +\n          newFlipOffset.x - this.#flipOffset.x,\n        y: this.#konvaStage.offset().y +\n          newViewOffset.y - this.#viewOffset.y +\n          newFlipOffset.y - this.#flipOffset.y,\n      });\n      // update private local offsets\n      this.#flipOffset = newFlipOffset;\n      this.#viewOffset = newViewOffset;\n    }\n  }\n\n  /**\n   * Check the visibility of an annotation.\n   *\n   * @param {string} id The id of the annotation.\n   * @returns {boolean} True if the annotation is visible.\n   */\n  isAnnotationVisible(id) {\n    // get the group (annotation and group have same id)\n    const group = this.getGroup(id);\n    if (typeof group === 'undefined') {\n      return false;\n    }\n    // get visibility\n    return group.isVisible();\n  }\n\n  /**\n   * Set the visibility of an annotation.\n   *\n   * @param {string} id The id of the annotation.\n   * @param {boolean} [visible] True to set to visible,\n   *   will toggle visibility if not defined.\n   * @returns {boolean} False if the annotation shape cannot be found.\n   */\n  setAnnotationVisibility(id, visible) {\n    // get the group (annotation and group have same id)\n    const group = this.getGroup(id);\n    if (typeof group === 'undefined') {\n      return false;\n    }\n    // if not set, toggle visibility\n    if (typeof visible === 'undefined') {\n      visible = !group.isVisible();\n    }\n    group.visible(visible);\n\n    // udpate\n    this.draw();\n\n    return true;\n  }\n\n  /**\n   * Set the visibility of all labels.\n   *\n   * @param {boolean} [visible] True to set to visible,\n   *   will toggle visibility if not defined.\n   */\n  setLabelsVisibility(visible) {\n    this.#visibleLabels = visible;\n\n    const posGroups = this.getKonvaLayer().getChildren();\n    for (const posGroup of posGroups) {\n      if (posGroup instanceof Konva.Group) {\n        const shapeGroups = posGroup.getChildren();\n        for (const shapeGroup of shapeGroups) {\n          if (shapeGroup instanceof Konva.Group) {\n            this.#setLabelVisibility(shapeGroup, visible);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Set a shape group label visibility.\n   *\n   * @param {Konva.Group} shapeGroup The shape group.\n   * @param {boolean} [visible] True to set to visible,\n   *   will toggle visibility if not defined.\n   */\n  #setLabelVisibility(shapeGroup, visible) {\n    const label = shapeGroup.getChildren(isNodeNameLabel)[0];\n    if (!(label instanceof Konva.Label)) {\n      return;\n    }\n    // if not set, toggle visibility\n    if (typeof visible === 'undefined') {\n      visible = !label.isVisible();\n    }\n    // set visible only for non empty text\n    if (typeof label.getText() !== 'undefined' &&\n      label.getText().text().length !== 0) {\n      label.visible(visible);\n    }\n  }\n\n  /**\n   * Set a shape group label visibility according to\n   *  this layer setting.\n   *\n   * @param {Konva.Group} shapeGroup The shape group.\n   */\n  setLabelVisibility(shapeGroup) {\n    this.#setLabelVisibility(shapeGroup, this.#visibleLabels);\n  }\n\n  /**\n   * Delete a Draw from the stage.\n   *\n   * @deprecated\n   * @param {string} _id The id of the group to delete.\n   * @param {Function} _exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   */\n  deleteDraw(_id, _exeCallback) {\n    // does nothing\n  }\n\n  /**\n   * Delete all Draws from the stage.\n   *\n   * @deprecated\n   * @param {Function} _exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   */\n  deleteDraws(_exeCallback) {\n    // does nothing\n  }\n\n  /**\n   * Get the total number of draws of this layer\n   * (at all positions).\n   *\n   * @returns {number|undefined} The total number of draws.\n   */\n  getNumberOfDraws() {\n    const posGroups = this.getKonvaLayer().getChildren();\n    let count = 0;\n    for (const posGroup of posGroups) {\n      if (posGroup instanceof Konva.Group) {\n        count += posGroup.getChildren().length;\n      }\n    }\n    return count;\n  }\n\n  /**\n   * Enable and listen to container interaction events.\n   */\n  bindInteraction() {\n    this.#konvaStage.listening(true);\n    // allow pointer events\n    this.#containerDiv.style.pointerEvents = 'auto';\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      this.#containerDiv.addEventListener(names[i], this.#fireEvent);\n    }\n  }\n\n  /**\n   * Disable and stop listening to container interaction events.\n   */\n  unbindInteraction() {\n    this.#konvaStage.listening(false);\n    // disable pointer events\n    this.#containerDiv.style.pointerEvents = 'none';\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      this.#containerDiv.removeEventListener(names[i], this.#fireEvent);\n    }\n  }\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point} position The new position.\n   * @param {Index} [index] Optional coresponding index.\n   * @returns {boolean} True if the position was updated.\n   */\n  setCurrentPosition(position, index) {\n    if (typeof index === 'undefined') {\n      index = this.#planeHelper.worldToIndex(position);\n    }\n    const scrollIndex = this.#planeHelper.getScrollIndex();\n    const scrollIndexValue = index.get(scrollIndex);\n    const planePoints = this.#planeHelper.getPlanePoints(scrollIndexValue);\n    let points;\n    if (this.#planeHelper.isAquisitionOrientation()) {\n      // just use plane origin\n      points = [planePoints[0]];\n    } else {\n      // use plane points\n      points = planePoints;\n    }\n    const posGroupId = this.#getPositionId(points);\n\n    this.#activateDrawLayer(posGroupId);\n    // TODO: add check\n    this.#fireEvent({\n      type: 'positionchange',\n      value: [\n        index.getValues(),\n        position.getValues(),\n      ],\n      valid: true\n    });\n\n    return true;\n  }\n\n  /**\n   * Activate the current draw layer.\n   *\n   * @param {string} posGroupId The position group ID.\n   */\n  #activateDrawLayer(posGroupId) {\n    this.#currentPosGroupId = posGroupId;\n\n    // get all position groups\n    const posGroups = this.getKonvaLayer().getChildren(isPositionNode);\n    // reset or set the visible property\n    let visible;\n    for (let i = 0, leni = posGroups.length; i < leni; ++i) {\n      visible = false;\n      if (posGroups[i].id() === this.#currentPosGroupId) {\n        visible = true;\n      }\n      // group members inherit the visible property\n      posGroups[i].visible(visible);\n    }\n\n    // show current draw layer\n    this.getKonvaLayer().draw();\n  }\n\n  /**\n   * Get the current position group.\n   *\n   * @returns {Konva.Group|undefined} The Konva.Group.\n   */\n  getCurrentPosGroup() {\n    // get position groups\n    const posGroups = this.getKonvaLayer().getChildren((node) => {\n      return node.id() === this.#currentPosGroupId;\n    });\n    // if one group, use it\n    // if no group, create one\n    let posGroup;\n    if (posGroups.length === 1) {\n      if (posGroups[0] instanceof Konva.Group) {\n        posGroup = posGroups[0];\n      }\n    } else if (posGroups.length === 0) {\n      posGroup = new Konva.Group();\n      posGroup.name('position-group');\n      posGroup.id(this.#currentPosGroupId);\n      posGroup.visible(true); // dont inherit\n      // add new group to layer\n      this.getKonvaLayer().add(posGroup);\n    } else {\n      logger.warn('Unexpected number of draw position groups');\n    }\n    // return\n    return posGroup;\n  }\n\n  /**\n   * Get a Konva group using its id.\n   *\n   * @param {string} id The group id.\n   * @returns {object|undefined} The Konva group.\n   */\n  getGroup(id) {\n    const group = this.getKonvaLayer().findOne('#' + id);\n    if (typeof group === 'undefined') {\n      logger.warn('Cannot find node with id: ' + id);\n    }\n    return group;\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    event.srclayerid = this.getId();\n    event.dataid = this.#dataId;\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  // common layer methods [end] ---------------\n\n  /**\n   * Update label scale: compensate for it so\n   *   that label size stays visually the same.\n   *\n   * @param {Scalar2D} scale The scale to compensate for as {x,y}.\n   */\n  #updateLabelScale(scale) {\n    // same formula as in labelFactory::create\n    // compensate for scale and times 2 so that font 10 looks like a 10\n    const ratioX = 2 / scale.x;\n    const ratioY = 2 / scale.y;\n    // compensate scale for labels\n    const labels = this.#konvaStage.find('Label');\n    for (let i = 0; i < labels.length; ++i) {\n      labels[i].scale({x: ratioX, y: ratioY});\n    }\n  }\n\n} // DrawLayer class\n\n// *************************\n// legacy code to allow to convert old state into annotation\n// *************************\n\n/**\n * Draw meta data.\n */\nexport class DrawMeta {\n  /**\n   * Draw quantification.\n   *\n   * @type {object}\n   */\n  quantification;\n\n  /**\n   * Draw text expression. Can contain variables surrounded with '{}' that will\n   * be extracted from the quantification object.\n   *\n   * @type {string}\n   */\n  textExpr;\n}\n\n/**\n * Draw details.\n */\nexport class DrawDetails {\n  /**\n   * The draw ID.\n   *\n   * @type {number}\n   */\n  id;\n\n  /**\n   * The draw position: an Index converted to string.\n   *\n   * @type {string}\n   */\n  position;\n\n  /**\n   * The draw type.\n   *\n   * @type {string}\n   */\n  type;\n\n  /**\n   * The draw color: for example 'green', '#00ff00' or 'rgb(0,255,0)'.\n   *\n   * @type {string}\n   */\n  color;\n\n  /**\n   * The draw meta.\n   *\n   * @type {DrawMeta}\n   */\n  meta;\n}\n\n/**\n * Convert a KonvaLayer object to a list of annotations.\n *\n * @param {Array} drawings An array of drawings stored\n *   with 'KonvaLayer().toObject()'.\n * @param {DrawDetails[]} drawingsDetails An array of drawings details.\n * @returns {Annotation[]} The associated list of annotations.\n */\nexport function konvaToAnnotation(drawings, drawingsDetails) {\n  const annotations = [];\n\n  // regular Konva deserialize\n  const stateLayer = Konva.Node.create(drawings);\n\n  // get all position groups\n  const statePosGroups = stateLayer.getChildren(isPositionNode);\n\n  for (let i = 0, leni = statePosGroups.length; i < leni; ++i) {\n    const statePosGroup = statePosGroups[i];\n    const statePosKids = statePosGroup.getChildren();\n    for (let j = 0, lenj = statePosKids.length; j < lenj; ++j) {\n      const annotation = new Annotation();\n\n      // shape group (use first one since it will be removed from\n      // the group when we change it)\n      const stateGroup = statePosKids[0];\n      // annotation id\n      annotation.id = stateGroup.id();\n\n      // shape\n      const shape = stateGroup.getChildren(isNodeNameShape)[0];\n      // annotation colour\n      annotation.colour = shape.stroke();\n\n      if (stateGroup.name() === 'line-group') {\n        const points = shape.points();\n        annotation.mathShape = new Point2D(points[0], points[1]);\n        annotation.referencePoints = [\n          new Point2D(points[2], points[3])\n        ];\n      } else if (stateGroup.name() === 'ruler-group') {\n        const points = shape.points();\n        annotation.mathShape = new Line(\n          new Point2D(points[0], points[1]),\n          new Point2D(points[2], points[3])\n        );\n      } else if (stateGroup.name() === 'rectangle-group') {\n        annotation.mathShape = new Rectangle(\n          new Point2D(shape.x(), shape.y()),\n          new Point2D(shape.x() + shape.width(), shape.y() + shape.height())\n        );\n      } else if (stateGroup.name() === 'roi-group') {\n        const points = shape.points();\n        const pointsArray = [];\n        for (let i = 0; i < points.length; i = i + 2) {\n          pointsArray.push(new Point2D(points[i], points[i + 1]));\n        }\n        annotation.mathShape = new ROI(pointsArray);\n      } else if (stateGroup.name() === 'freeHand-group') {\n        logger.warn('Converting freehand into ROI shape');\n        const points = shape.points();\n        const pointsArray = [];\n        for (let i = 0; i < points.length; i = i + 2) {\n          pointsArray.push(new Point2D(points[i], points[i + 1]));\n        }\n        annotation.mathShape = new ROI(pointsArray);\n      } else if (stateGroup.name() === 'protractor-group') {\n        const points = shape.points();\n        annotation.mathShape = new Protractor([\n          new Point2D(points[0], points[1]),\n          new Point2D(points[2], points[3]),\n          new Point2D(points[4], points[5])\n        ]);\n      } else if (stateGroup.name() === 'ellipse-group') {\n        const absPosition = shape.absolutePosition();\n        annotation.mathShape = new Ellipse(\n          new Point2D(absPosition.x, absPosition.y),\n          shape.radiusX(),\n          shape.radiusY()\n        );\n      } else if (stateGroup.name() === 'circle-group') {\n        const absPosition = shape.absolutePosition();\n        annotation.mathShape = new Circle(\n          new Point2D(absPosition.x, absPosition.y),\n          shape.radius()\n        );\n      }\n\n      // details\n      if (drawingsDetails) {\n        const details = drawingsDetails[stateGroup.id()];\n        annotation.textExpr = details.meta.textExpr;\n        annotation.quantification = details.meta.quantification;\n      }\n\n      annotations.push(annotation);\n    }\n  }\n\n  return annotations;\n}\n","// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {DrawLayer} from '../gui/drawLayer';\nimport {Annotation} from '../image/annotation';\nimport {DrawController} from '../app/drawController';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get the display name of the input shape.\n *\n * @param {Konva.Shape} shape The Konva shape.\n * @returns {string} The display name.\n */\nexport function getShapeDisplayName(shape) {\n  let displayName = 'shape';\n  if (shape instanceof Konva.Line) {\n    if (shape.points().length === 4) {\n      displayName = 'line';\n    } else if (shape.points().length === 6) {\n      displayName = 'protractor';\n    } else {\n      displayName = 'roi';\n    }\n  } else if (shape instanceof Konva.Rect) {\n    displayName = 'rectangle';\n  } else if (shape instanceof Konva.Ellipse) {\n    displayName = 'ellipse';\n  }\n  // return\n  return displayName;\n}\n\n/**\n * Add annotation command.\n */\nexport class AddAnnotationCommand {\n  /**\n   * @type {Annotation}\n   */\n  #annotation;\n\n  /**\n   * @type {DrawController}\n   */\n  #drawController;\n\n  /**\n   * @param {Annotation} annotation The annotation to add.\n   * @param {DrawController} drawController The associated draw controller.\n   */\n  constructor(annotation, drawController) {\n    this.#annotation = annotation;\n    this.#drawController = drawController;\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'AddAnnotation-' + this.#annotation.id;\n  }\n\n  /**\n   * Execute the command.\n   */\n  execute() {\n    this.#drawController.addAnnotation(this.#annotation);\n  }\n\n  /**\n   * Undo the command.\n   */\n  undo() {\n    this.#drawController.removeAnnotation(this.#annotation.id);\n  }\n}\n\n/**\n * Remove annotation command.\n */\nexport class RemoveAnnotationCommand {\n  /**\n   * @type {Annotation}\n   */\n  #annotation;\n\n  /**\n   * @type {DrawController}\n   */\n  #drawController;\n\n  /**\n   * @param {Annotation} annotation The annotation to remove.\n   * @param {DrawController} drawController The associated draw controller.\n   */\n  constructor(annotation, drawController) {\n    this.#annotation = annotation;\n    this.#drawController = drawController;\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'RemoveAnnotation-' + this.#annotation.id;\n  }\n\n  /**\n   * Execute the command.\n   */\n  execute() {\n    this.#drawController.removeAnnotation(this.#annotation.id);\n  }\n\n  /**\n   * Undo the command.\n   */\n  undo() {\n    this.#drawController.addAnnotation(this.#annotation);\n  }\n}\n\n/**\n * Update annotation command.\n */\nexport class UpdateAnnotationCommand {\n  /**\n   * @type {Annotation}\n   */\n  #annotation;\n\n  /**\n   * @type {DrawController}\n   */\n  #drawController;\n\n  /**\n   * Original annotation properties.\n   *\n   * @type {object}\n   */\n  #originalProps;\n\n  /**\n   * New annotation properties.\n   *\n   * @type {object}\n   */\n  #newProps;\n\n  /**\n   * @param {Annotation} annotation The annotation to update.\n   * @param {object} originaProps The original annotation properties.\n   * @param {object} newProps The new annotation properties.\n   * @param {DrawController} drawController The associated draw controller.\n   */\n  constructor(annotation, originaProps, newProps, drawController) {\n    this.#annotation = annotation;\n    this.#drawController = drawController;\n    this.#originalProps = originaProps;\n    this.#newProps = newProps;\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'UpdateAnnotation-' + this.#annotation.id;\n  }\n\n  /**\n   * Execute the command.\n   */\n  execute() {\n    const keys = Object.keys(this.#newProps);\n    for (const key of keys) {\n      this.#annotation[key] = this.#newProps[key];\n    }\n    this.#drawController.updateAnnotation(this.#annotation, keys);\n  }\n\n  /**\n   * Undo the command.\n   */\n  undo() {\n    const keys = Object.keys(this.#originalProps);\n    for (const key of keys) {\n      this.#annotation[key] = this.#originalProps[key];\n    }\n    this.#drawController.updateAnnotation(this.#annotation, keys);\n  }\n}\n/**\n * Draw group command.\n *\n * TODO: remove.\n */\nexport class DrawGroupCommand {\n\n  /**\n   * The group to draw.\n   *\n   * @type {Konva.Group}\n   */\n  #group;\n\n  /**\n   * The shape display name.\n   *\n   * @type {string}\n   */\n  #name;\n\n  /**\n   * The draw layer.\n   *\n   * @type {DrawLayer}\n   */\n  #layer;\n\n  /**\n   * Flag to send events.\n   *\n   * @type {boolean}\n   */\n  #isSilent;\n\n  /**\n   * The group parent.\n   *\n   * @type {object}\n   */\n  #parent;\n\n  /**\n   * @param {Konva.Group} group The group draw.\n   * @param {string} name The shape display name.\n   * @param {DrawLayer} layer The layer where to draw the group.\n   * @param {boolean} [silent] Whether to send a creation event or not.\n   */\n  constructor(group, name, layer, silent) {\n    this.#group = group;\n    this.#name = name;\n    this.#layer = layer;\n    this.#isSilent = (typeof silent === 'undefined') ? false : silent;\n    this.#parent = group.getParent();\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Draw-' + this.#name;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires DrawGroupCommand#drawcreate\n   */\n  execute() {\n    // add the group to the parent (in case of undo/redo)\n    this.#parent.add(this.#group);\n    // draw\n    this.#layer.getKonvaLayer().draw();\n    // callback\n    if (!this.#isSilent) {\n      /**\n       * Draw create event.\n       *\n       * @event DrawGroupCommand#drawcreate\n       * @type {object}\n       * @property {string} id The id of the created draw.\n       * @property {string} srclayerid The id of the layer of the draw.\n       * @property {string} dataid The associated data id.\n       */\n      this.onExecute({\n        type: 'drawcreate',\n        id: this.#group.id(),\n        srclayerid: this.#layer.getId(),\n        dataid: this.#layer.getDataId()\n      });\n    }\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires DeleteGroupCommand#drawdelete\n   */\n  undo() {\n    // remove the group from the parent layer\n    this.#group.remove();\n    // draw\n    this.#layer.getKonvaLayer().draw();\n    // callback\n    this.onUndo({\n      type: 'drawdelete',\n      id: this.#group.id(),\n      srclayerid: this.#layer.getId(),\n      dataid: this.#layer.getDataId()\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // DrawGroupCommand class\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D} from '../math/point';\n/* eslint-enable no-unused-vars */\n\n/**\n * Path shape.\n */\nexport class Path {\n\n  /**\n   * @param {Point2D[]} [inputPointArray] The list of Point2D that make\n   *   the path (optional).\n   * @param {number[]} [inputControlPointIndexArray] The list of control\n   *  point of path, as indexes (optional).\n   * Note: first and last point do not need to be equal.\n   */\n  constructor(inputPointArray, inputControlPointIndexArray) {\n    /**\n     * List of points.\n     *\n     * @type {Point2D[]}\n     */\n    this.pointArray = inputPointArray ? inputPointArray.slice() : [];\n    /**\n     * List of control points.\n     *\n     * @type {number[]}\n     */\n    this.controlPointIndexArray = inputControlPointIndexArray\n      ? inputControlPointIndexArray.slice() : [];\n  }\n\n  /**\n   * Get a point of the list.\n   *\n   * @param {number} index The index of the point\n   *   to get (beware, no size check).\n   * @returns {Point2D} The Point2D at the given index.\n   */\n  getPoint(index) {\n    return this.pointArray[index];\n  }\n\n  /**\n   * Is the given point a control point.\n   *\n   * @param {Point2D} point The Point2D to check.\n   * @returns {boolean} True if a control point.\n   */\n  isControlPoint(point) {\n    const index = this.pointArray.indexOf(point);\n    if (index !== -1) {\n      return this.controlPointIndexArray.indexOf(index) !== -1;\n    } else {\n      throw new Error('Error: isControlPoint called with not in list point.');\n    }\n  }\n\n  /**\n   * Get the length of the path.\n   *\n   * @returns {number} The length of the path.\n   */\n  getLength() {\n    return this.pointArray.length;\n  }\n\n  /**\n   * Add a point to the path.\n   *\n   * @param {Point2D} point The Point2D to add.\n   */\n  addPoint(point) {\n    this.pointArray.push(point);\n  }\n\n  /**\n   * Add a control point to the path.\n   *\n   * @param {Point2D} point The Point2D to make a control point.\n   */\n  addControlPoint(point) {\n    const index = this.pointArray.indexOf(point);\n    if (index !== -1) {\n      this.controlPointIndexArray.push(index);\n    } else {\n      throw new Error(\n        'Cannot mark a non registered point as control point.');\n    }\n  }\n\n  /**\n   * Add points to the path.\n   *\n   * @param {Point2D[]} newPointArray The list of Point2D to add.\n   */\n  addPoints(newPointArray) {\n    this.pointArray = this.pointArray.concat(newPointArray);\n  }\n\n  /**\n   * Append a Path to this one.\n   *\n   * @param {Path} other The Path to append.\n   */\n  appenPath(other) {\n    const oldSize = this.pointArray.length;\n    this.pointArray = this.pointArray.concat(other.pointArray);\n    const indexArray = [];\n    for (let i = 0; i < other.controlPointIndexArray.length; ++i) {\n      indexArray[i] = other.controlPointIndexArray[i] + oldSize;\n    }\n    this.controlPointIndexArray =\n      this.controlPointIndexArray.concat(indexArray);\n  }\n\n} // Path class\n","/**\n * Circular Bucket Queue.\n *\n * Returns input'd points in sorted order. All operations run in roughly O(1)\n * time (for input with small cost values), but it has a strict requirement:\n *\n * If the most recent point had a cost of c, any points added should have a cost\n * c' in the range c <= c' <= c + (capacity - 1).\n */\nexport class BucketQueue {\n\n  /**\n   * @param {number} bits Number of bits.\n   * @param {Function} cost_functor The cost functor.\n   */\n  constructor(bits, cost_functor) {\n    this.bucketCount = 1 << bits; // # of buckets = 2^bits\n    this.mask = this.bucketCount - 1; // 2^bits - 1 = index mask\n    this.size = 0;\n\n    this.loc = 0; // Current index in bucket list\n    // Cost defaults to item value\n    this.cost = (typeof (cost_functor) !== 'undefined')\n      ? cost_functor : function (item) {\n        return item;\n      };\n    this.buckets = this.buildArray(this.bucketCount);\n  }\n\n  push(item) {\n    // Prepend item to the list in the appropriate bucket\n    const bucket = this.getBucket(item);\n    item.next = this.buckets[bucket];\n    this.buckets[bucket] = item;\n\n    this.size++;\n  }\n\n  pop() {\n    if (this.size === 0) {\n      throw new Error('Cannot pop, bucketQueue is empty.');\n    }\n\n    // Find first empty bucket\n    while (this.buckets[this.loc] === null) {\n      this.loc = (this.loc + 1) % this.bucketCount;\n    }\n\n    // All items in bucket have same cost, return the first one\n    const ret = this.buckets[this.loc];\n    this.buckets[this.loc] = ret.next;\n    ret.next = null;\n\n    this.size--;\n    return ret;\n  }\n\n  // TODO: needs at least two items...\n  remove(item) {\n    // Tries to remove item from queue. Returns true on success, false otherwise\n    if (!item) {\n      return false;\n    }\n\n    // To find node, go to bucket and search through unsorted list.\n    const bucket = this.getBucket(item);\n    let node = this.buckets[bucket];\n\n    while (node !== null &&\n      !(node.next !== null &&\n      item.x === node.next.x &&\n      item.y === node.next.y)) {\n      node = node.next;\n    }\n\n    if (node === null) {\n      // Item not in list, ergo item not in queue\n      return false;\n    } else {\n      // Found item, do standard list node deletion\n      node.next = node.next.next;\n\n      this.size--;\n      return true;\n    }\n  }\n\n  isEmpty() {\n    return this.size === 0;\n  }\n\n  getBucket(item) {\n    // Bucket index is the masked cost\n    return this.cost(item) & this.mask;\n  }\n\n  buildArray(newSize) {\n    // Create array and initialze pointers to null\n    const buckets = new Array(newSize);\n\n    for (let i = 0; i < buckets.length; i++) {\n      buckets[i] = null;\n    }\n\n    return buckets;\n  }\n\n} // class BucketQueue\n","import {BucketQueue} from './bucketQueue';\n\n// Pre-created to reduce allocation in inner loops\nconst __twothirdpi = (2 / (3 * Math.PI));\n\n/**\n * Compute grey scale.\n *\n * @param {Array} data The input data.\n * @param {number} width The width of the output.\n * @param {number} height The height of the output.\n * @returns {object} A greyscale object.\n */\nfunction computeGreyscale(data, width, height) {\n  // Returns 2D augmented array containing greyscale data\n  // Greyscale values found by averaging colour channels\n  // Input should be in a flat RGBA array, with values between 0 and 255\n  const greyscale = {\n    data: []\n  };\n\n  // Compute actual values\n  for (let y = 0; y < height; y++) {\n    greyscale.data[y] = [];\n\n    for (let x = 0; x < width; x++) {\n      const p = (y * width + x) * 4;\n      greyscale.data[y][x] = (data[p] + data[p + 1] + data[p + 2]) / (3 * 255);\n    }\n  }\n\n  // Augment with convenience functions\n  greyscale.dx = function (x, y) {\n    if (x + 1 === this.data[y].length) {\n      // If we're at the end, back up one\n      x--;\n    }\n    return this.data[y][x + 1] - this.data[y][x];\n  };\n\n  greyscale.dy = function (x, y) {\n    if (y + 1 === this.data.length) {\n      // If we're at the end, back up one\n      y--;\n    }\n    return this.data[y][x] - this.data[y + 1][x];\n  };\n\n  greyscale.gradMagnitude = function (x, y) {\n    const dx = this.dx(x, y);\n    const dy = this.dy(x, y);\n    return Math.sqrt(dx * dx + dy * dy);\n  };\n\n  greyscale.laplace = function (x, y) {\n    // Laplacian of Gaussian\n    let lap = -16 * this.data[y][x];\n    lap += this.data[y - 2][x];\n    lap += this.data[y - 1][x - 1] +\n      2 * this.data[y - 1][x] +\n      this.data[y - 1][x + 1];\n    lap += this.data[y][x - 2] +\n      2 * this.data[y][x - 1] +\n      2 * this.data[y][x + 1] +\n      this.data[y][x + 2];\n    lap += this.data[y + 1][x - 1] +\n      2 * this.data[y + 1][x] +\n      this.data[y + 1][x + 1];\n    lap += this.data[y + 2][x];\n\n    return lap;\n  };\n\n  return greyscale;\n}\n\n/**\n * Compute gradient.\n *\n * @param {object} greyscale The input greyscale.\n * @returns {object} A gradient object.\n */\nfunction computeGradient(greyscale) {\n  // Returns a 2D array of gradient magnitude values for greyscale. The values\n  // are scaled between 0 and 1, and then flipped, so that it works as a cost\n  // function.\n  const gradient = [];\n\n  let max = 0; // Maximum gradient found, for scaling purposes\n\n  let x = 0;\n  let y = 0;\n\n  for (y = 0; y < greyscale.data.length - 1; y++) {\n    gradient[y] = [];\n\n    for (x = 0; x < greyscale.data[y].length - 1; x++) {\n      gradient[y][x] = greyscale.gradMagnitude(x, y);\n      max = Math.max(gradient[y][x], max);\n    }\n\n    gradient[y][greyscale.data[y].length - 1] =\n      gradient[y][greyscale.data.length - 2];\n  }\n\n  gradient[greyscale.data.length - 1] = [];\n  for (let i = 0; i < gradient[0].length; i++) {\n    gradient[greyscale.data.length - 1][i] =\n      gradient[greyscale.data.length - 2][i];\n  }\n\n  // Flip and scale.\n  for (y = 0; y < gradient.length; y++) {\n    for (x = 0; x < gradient[y].length; x++) {\n      // @ts-ignore\n      gradient[y][x] = 1 - (gradient[y][x] / max);\n    }\n  }\n\n  return gradient;\n}\n\n/**\n * @param {object} greyscale The input greyscale.\n * @returns {object} A laplace object.\n */\nfunction computeLaplace(greyscale) {\n  // Returns a 2D array of Laplacian of Gaussian values\n  const laplace = [];\n\n  // Make the edges low cost here.\n\n  laplace[0] = [];\n  laplace[1] = [];\n  for (let i = 1; i < greyscale.data.length; i++) {\n    // Pad top, since we can't compute Laplacian\n    laplace[0][i] = 1;\n    laplace[1][i] = 1;\n  }\n\n  for (let y = 2; y < greyscale.data.length - 2; y++) {\n    laplace[y] = [];\n    // Pad left, ditto\n    laplace[y][0] = 1;\n    laplace[y][1] = 1;\n\n    for (let x = 2; x < greyscale.data[y].length - 2; x++) {\n      // Threshold needed to get rid of clutter.\n      laplace[y][x] = (greyscale.laplace(x, y) > 0.33) ? 0 : 1;\n    }\n\n    // Pad right, ditto\n    laplace[y][greyscale.data[y].length - 2] = 1;\n    laplace[y][greyscale.data[y].length - 1] = 1;\n  }\n\n  laplace[greyscale.data.length - 2] = [];\n  laplace[greyscale.data.length - 1] = [];\n  for (let j = 1; j < greyscale.data.length; j++) {\n    // Pad bottom, ditto\n    laplace[greyscale.data.length - 2][j] = 1;\n    laplace[greyscale.data.length - 1][j] = 1;\n  }\n\n  return laplace;\n}\n\n/**\n * Compute the X gradient.\n *\n * @param {object} greyscale The values.\n * @returns {Array} The gradient.\n */\nfunction computeGradX(greyscale) {\n  // Returns 2D array of x-gradient values for greyscale\n  const gradX = [];\n\n  for (let y = 0; y < greyscale.data.length; y++) {\n    gradX[y] = [];\n\n    for (let x = 0; x < greyscale.data[y].length - 1; x++) {\n      gradX[y][x] = greyscale.dx(x, y);\n    }\n\n    gradX[y][greyscale.data[y].length - 1] =\n      gradX[y][greyscale.data[y].length - 2];\n  }\n\n  return gradX;\n}\n\n/**\n * Compute the Y gradient.\n *\n * @param {object} greyscale The values.\n * @returns {Array} The gradient.\n */\nfunction computeGradY(greyscale) {\n  // Returns 2D array of y-gradient values for greyscale\n  const gradY = [];\n\n  for (let y = 0; y < greyscale.data.length - 1; y++) {\n    gradY[y] = [];\n\n    for (let x = 0; x < greyscale.data[y].length; x++) {\n      gradY[y][x] = greyscale.dy(x, y);\n    }\n  }\n\n  gradY[greyscale.data.length - 1] = [];\n  for (let i = 0; i < greyscale.data[0].length; i++) {\n    gradY[greyscale.data.length - 1][i] = gradY[greyscale.data.length - 2][i];\n  }\n\n  return gradY;\n}\n\n/**\n * Compute the gradient unit vector.\n *\n * @param {Array} gradX The X gradient.\n * @param {Array} gradY The Y gradient.\n * @param {number} px The point X.\n * @param {number} py The point Y.\n * @param {object} out The result.\n */\nfunction gradUnitVector(gradX, gradY, px, py, out) {\n  // Returns the gradient vector at (px,py), scaled to a magnitude of 1\n  const ox = gradX[py][px];\n  const oy = gradY[py][px];\n\n  let gvm = Math.sqrt(ox * ox + oy * oy);\n  gvm = Math.max(gvm, 1e-100); // To avoid possible divide-by-0 errors\n\n  out.x = ox / gvm;\n  out.y = oy / gvm;\n}\n\n/**\n * Compute the gradient direction.\n *\n * @param {Array} gradX The X gradient.\n * @param {Array} gradY The Y gradient.\n * @param {number} px The point X.\n * @param {number} py The point Y.\n * @param {number} qx The q X.\n * @param {number} qy The q Y.\n * @returns {number} The direction.\n */\nfunction gradDirection(gradX, gradY, px, py, qx, qy) {\n  const __dgpuv = {x: -1, y: -1};\n  const __gdquv = {x: -1, y: -1};\n  // Compute the gradiant direction, in radians, between to points\n  gradUnitVector(gradX, gradY, px, py, __dgpuv);\n  gradUnitVector(gradX, gradY, qx, qy, __gdquv);\n\n  let dp = __dgpuv.y * (qx - px) - __dgpuv.x * (qy - py);\n  let dq = __gdquv.y * (qx - px) - __gdquv.x * (qy - py);\n\n  // Make sure dp is positive, to keep things consistant\n  if (dp < 0) {\n    dp = -dp;\n    dq = -dq;\n  }\n\n  if (px !== qx && py !== qy) {\n    // We're going diagonally between pixels\n    dp *= Math.SQRT1_2;\n    dq *= Math.SQRT1_2;\n  }\n\n  return __twothirdpi * (Math.acos(dp) + Math.acos(dq));\n}\n\n/**\n * Compute the sides.\n *\n * @param {number} dist The distance.\n * @param {Array} gradX The X gradient.\n * @param {Array} gradY The Y gradient.\n * @param {object} greyscale The value.\n * @returns {object} The sides.\n */\nfunction computeSides(dist, gradX, gradY, greyscale) {\n  // Returns 2 2D arrays, containing inside and outside greyscale values.\n  // These greyscale values are the intensity just a little bit along the\n  // gradient vector, in either direction, from the supplied point. These\n  // values are used when using active-learning Intelligent Scissors\n\n  const sides = {};\n  sides.inside = [];\n  sides.outside = [];\n\n  const guv = {x: -1, y: -1}; // Current gradient unit vector\n\n  for (let y = 0; y < gradX.length; y++) {\n    sides.inside[y] = [];\n    sides.outside[y] = [];\n\n    for (let x = 0; x < gradX[y].length; x++) {\n      gradUnitVector(gradX, gradY, x, y, guv);\n\n      //(x, y) rotated 90 = (y, -x)\n\n      let ix = Math.round(x + dist * guv.y);\n      let iy = Math.round(y - dist * guv.x);\n      let ox = Math.round(x - dist * guv.y);\n      let oy = Math.round(y + dist * guv.x);\n\n      ix = Math.max(Math.min(ix, gradX[y].length - 1), 0);\n      ox = Math.max(Math.min(ox, gradX[y].length - 1), 0);\n      iy = Math.max(Math.min(iy, gradX.length - 1), 0);\n      oy = Math.max(Math.min(oy, gradX.length - 1), 0);\n\n      sides.inside[y][x] = greyscale.data[iy][ix];\n      sides.outside[y][x] = greyscale.data[oy][ox];\n    }\n  }\n\n  return sides;\n}\n\n/**\n * Gaussian blur an input buffer.\n *\n * @param {Array} buffer The input buffer.\n * @param {Array} out The result.\n */\nfunction gaussianBlur(buffer, out) {\n  // Smooth values over to fill in gaps in the mapping\n  out[0] = 0.4 * buffer[0] + 0.5 * buffer[1] + 0.1 * buffer[1];\n  out[1] = 0.25 * buffer[0] + 0.4 * buffer[1] + 0.25 * buffer[2] +\n    0.1 * buffer[3];\n\n  for (let i = 2; i < buffer.length - 2; i++) {\n    out[i] = 0.05 * buffer[i - 2] + 0.25 * buffer[i - 1] +\n      0.4 * buffer[i] + 0.25 * buffer[i + 1] + 0.05 * buffer[i + 2];\n  }\n\n  const len = buffer.length;\n  out[len - 2] = 0.25 * buffer[len - 1] + 0.4 * buffer[len - 2] +\n    0.25 * buffer[len - 3] + 0.1 * buffer[len - 4];\n  out[len - 1] = 0.4 * buffer[len - 1] + 0.5 * buffer[len - 2] +\n    0.1 * buffer[len - 3];\n}\n\n/**\n * Scissors.\n *\n * Ref: Eric N. Mortensen, William A. Barrett, Interactive Segmentation with\n *   Intelligent Scissors, Graphical Models and Image Processing, Volume 60,\n *   Issue 5, September 1998, Pages 349-384, ISSN 1077-3169,\n *   DOI: 10.1006/gmip.1998.0480.\n *\n * See: {@link http://www.sciencedirect.com/science/article/B6WG4-45JB8WN-9/2/6fe59d8089fd1892c2bfb82283065579}.\n *\n * Highly inspired from: {@link http://code.google.com/p/livewire-javascript/}.\n */\nexport class Scissors {\n\n  constructor() {\n    this.width = -1;\n    this.height = -1;\n\n    this.curPoint = null; // Corrent point we're searching on.\n    this.searchGranBits = 8; // Bits of resolution for BucketQueue.\n    this.searchGran = 1 << this.searchGranBits; //bits.\n    this.pointsPerPost = 500;\n\n    // Precomputed image data. All in ranges 0 >= x >= 1 and\n    //   all inverted (1 - x).\n    this.greyscale = null; // Greyscale of image\n    this.laplace = null; // Laplace zero-crossings (either 0 or 1).\n    this.gradient = null; // Gradient magnitudes.\n    this.gradX = null; // X-differences.\n    this.gradY = null; // Y-differences.\n\n    // Matrix mapping point => parent along shortest-path to root.\n    this.parents = null;\n\n    this.working = false; // Currently computing shortest paths?\n\n    // Begin Training:\n    this.trained = false;\n    this.trainingPoints = null;\n\n    this.edgeWidth = 2;\n    this.trainingLength = 32;\n\n    this.edgeGran = 256;\n    this.edgeTraining = null;\n\n    this.gradPointsNeeded = 32;\n    this.gradGran = 1024;\n    this.gradTraining = null;\n\n    this.insideGran = 256;\n    this.insideTraining = null;\n\n    this.outsideGran = 256;\n    this.outsideTraining = null;\n  }\n  // End Training\n\n\n  // Begin training methods //\n  getTrainingIdx(granularity, value) {\n    return Math.round((granularity - 1) * value);\n  }\n\n  getTrainedEdge(edge) {\n    return this.edgeTraining[this.getTrainingIdx(this.edgeGran, edge)];\n  }\n\n  getTrainedGrad(grad) {\n    return this.gradTraining[this.getTrainingIdx(this.gradGran, grad)];\n  }\n\n  getTrainedInside(inside) {\n    return this.insideTraining[this.getTrainingIdx(this.insideGran, inside)];\n  }\n\n  getTrainedOutside(outside) {\n    return this.outsideTraining[this.getTrainingIdx(this.outsideGran, outside)];\n  }\n  // End training methods //\n\n  setWorking(working) {\n    // Sets working flag\n    this.working = working;\n  }\n\n  setDimensions(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n\n  setData(data) {\n    if (this.width === -1 || this.height === -1) {\n      // The width and height should have already been set\n      throw new Error('Dimensions have not been set.');\n    }\n\n    this.greyscale = computeGreyscale(data, this.width, this.height);\n    this.laplace = computeLaplace(this.greyscale);\n    this.gradient = computeGradient(this.greyscale);\n    this.gradX = computeGradX(this.greyscale);\n    this.gradY = computeGradY(this.greyscale);\n\n    const sides = computeSides(\n      this.edgeWidth, this.gradX, this.gradY, this.greyscale);\n    this.inside = sides.inside;\n    this.outside = sides.outside;\n    this.edgeTraining = [];\n    this.gradTraining = [];\n    this.insideTraining = [];\n    this.outsideTraining = [];\n  }\n\n  findTrainingPoints(p) {\n    // Grab the last handful of points for training\n    const points = [];\n\n    if (this.parents !== null) {\n      for (let i = 0; i < this.trainingLength && p; i++) {\n        points.push(p);\n        p = this.parents[p.y][p.x];\n      }\n    }\n\n    return points;\n  }\n\n  resetTraining() {\n    this.trained = false; // Training is ignored with this flag set\n  }\n\n  doTraining(p) {\n    // Compute training weights and measures\n    this.trainingPoints = this.findTrainingPoints(p);\n\n    if (this.trainingPoints.length < 8) {\n      return; // Not enough points, I think. It might crash if length = 0.\n    }\n\n    const buffer = [];\n    this.calculateTraining(\n      buffer, this.edgeGran, this.greyscale, this.edgeTraining);\n    this.calculateTraining(\n      buffer, this.gradGran, this.gradient, this.gradTraining);\n    this.calculateTraining(\n      buffer, this.insideGran, this.inside, this.insideTraining);\n    this.calculateTraining(\n      buffer, this.outsideGran, this.outside, this.outsideTraining);\n\n    if (this.trainingPoints.length < this.gradPointsNeeded) {\n      // If we have two few training points, the gradient weight map might not\n      // be smooth enough, so average with normal weights.\n      this.addInStaticGrad(this.trainingPoints.length, this.gradPointsNeeded);\n    }\n\n    this.trained = true;\n  }\n\n  calculateTraining(\n    buffer, granularity, input, output) {\n    let i = 0;\n    // Build a map of raw-weights to trained-weights by favoring input values\n    buffer.length = granularity;\n    for (i = 0; i < granularity; i++) {\n      buffer[i] = 0;\n    }\n\n    let maxVal = 1;\n    for (i = 0; i < this.trainingPoints.length; i++) {\n      const p = this.trainingPoints[i];\n      const idx = this.getTrainingIdx(granularity, input[p.y][p.x]);\n      buffer[idx] += 1;\n\n      maxVal = Math.max(maxVal, buffer[idx]);\n    }\n\n    // Invert and scale.\n    for (i = 0; i < granularity; i++) {\n      buffer[i] = 1 - buffer[i] / maxVal;\n    }\n\n    // Blur it, as suggested. Gets rid of static.\n    gaussianBlur(buffer, output);\n  }\n\n  addInStaticGrad(have, need) {\n    // Average gradient raw-weights to trained-weights map with standard weight\n    // map so that we don't end up with something to spiky\n    for (let i = 0; i < this.gradGran; i++) {\n      this.gradTraining[i] = Math.min(\n        this.gradTraining[i],\n        1 - i * (need - have) / (need * this.gradGran)\n      );\n    }\n  }\n\n  gradDirection(px, py, qx, qy) {\n    return gradDirection(this.gradX, this.gradY, px, py, qx, qy);\n  }\n\n  dist(px, py, qx, qy) {\n    // The grand culmunation of most of the code: the weighted distance function\n    let grad = this.gradient[qy][qx];\n\n    if (px === qx || py === qy) {\n      // The distance is Euclidean-ish; non-diagonal edges should be shorter\n      grad *= Math.SQRT1_2;\n    }\n\n    const lap = this.laplace[qy][qx];\n    const dir = this.gradDirection(px, py, qx, qy);\n\n    if (this.trained) {\n      // Apply training magic\n      const gradT = this.getTrainedGrad(grad);\n      const edgeT = this.getTrainedEdge(this.greyscale.data[py][px]);\n      const insideT = this.getTrainedInside(this.inside[py][px]);\n      const outsideT = this.getTrainedOutside(this.outside[py][px]);\n\n      return 0.3 * gradT + 0.3 * lap + 0.1 * (dir + edgeT + insideT + outsideT);\n    } else {\n      // Normal weights\n      return 0.43 * grad + 0.43 * lap + 0.11 * dir;\n    }\n  }\n\n  adj(p) {\n    const list = [];\n\n    const sx = Math.max(p.x - 1, 0);\n    const sy = Math.max(p.y - 1, 0);\n    const ex = Math.min(p.x + 1, this.greyscale.data[0].length - 1);\n    const ey = Math.min(p.y + 1, this.greyscale.data.length - 1);\n\n    let idx = 0;\n    for (let y = sy; y <= ey; y++) {\n      for (let x = sx; x <= ex; x++) {\n        if (x !== p.x || y !== p.y) {\n          list[idx++] = {x: x, y: y};\n        }\n      }\n    }\n\n    return list;\n  }\n\n  #costFunction = (p) => {\n    return Math.round(this.searchGran * this.cost[p.y][p.x]);\n  };\n\n  setPoint(sp) {\n    this.setWorking(true);\n\n    this.curPoint = sp;\n\n    let x = 0;\n    let y = 0;\n\n    this.visited = [];\n    for (y = 0; y < this.height; y++) {\n      this.visited[y] = [];\n      for (x = 0; x < this.width; x++) {\n        this.visited[y][x] = false;\n      }\n    }\n\n    this.parents = [];\n    for (y = 0; y < this.height; y++) {\n      this.parents[y] = [];\n    }\n\n    this.cost = [];\n    for (y = 0; y < this.height; y++) {\n      this.cost[y] = [];\n      for (x = 0; x < this.width; x++) {\n        this.cost[y][x] = Number.MAX_VALUE;\n      }\n    }\n    this.cost[sp.y][sp.x] = 0;\n\n    this.pq = new BucketQueue(this.searchGranBits, this.#costFunction);\n    this.pq.push(sp);\n  }\n\n  doWork() {\n    if (!this.working) {\n      return;\n    }\n\n    this.timeout = null;\n\n    let pointCount = 0;\n    const newPoints = [];\n    while (!this.pq.isEmpty() && pointCount < this.pointsPerPost) {\n      const p = this.pq.pop();\n      newPoints.push(p);\n      newPoints.push(this.parents[p.y][p.x]);\n\n      this.visited[p.y][p.x] = true;\n\n      const adjList = this.adj(p);\n      for (let i = 0; i < adjList.length; i++) {\n        const q = adjList[i];\n\n        const pqCost = this.cost[p.y][p.x] + this.dist(p.x, p.y, q.x, q.y);\n\n        if (pqCost < this.cost[q.y][q.x]) {\n          if (this.cost[q.y][q.x] !== Number.MAX_VALUE) {\n            // Already in PQ, must remove it so we can re-add it.\n            this.pq.remove(q);\n          }\n\n          this.cost[q.y][q.x] = pqCost;\n          this.parents[q.y][q.x] = p;\n          this.pq.push(q);\n        }\n      }\n\n      pointCount++;\n    }\n\n    return newPoints;\n  }\n\n} // Scissors class\n","// linting 'type {Object.<bla, bla>}' will give:\n// warning  Use object shorthand or index signatures instead of `Object`,\n//   e.g., `{[key: string]: string}` jsdoc/check-types\n// pb: jsdoc does not support the object shorthand\n//   and ignoring will give vscode warning since the doc linting is not\n//   activated by default.\n\n// Overridable default object.\nexport const defaults = {\n  /**\n   * List of default window level presets.\n   *\n   * @type {Object.<string, Object.<string, string>>}\n   */\n  labelText: {\n    arrow: {\n      '*': ''\n    },\n    circle: {\n      '*': '{surface}'\n    },\n    ellipse: {\n      '*': '{surface}'\n    },\n    protractor: {\n      '*': '{angle}'\n    },\n    rectangle: {\n      '*': '{surface}'\n    },\n    roi: {\n      '*': ''\n    },\n    ruler: {\n      '*': '{length}'\n    }\n  }\n};\n","// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D} from '../math/point';\nimport {Style} from '../gui/style';\nimport {Annotation} from '../image/annotation';\n/* eslint-enable no-unused-vars */\n\n/**\n * Label factory to create and update shape label.\n */\nexport class LabelFactory {\n\n  /**\n   * Default position getter.\n   *\n   * @type {Function}\n   */\n  #defaultPositionGetter;\n\n  /**\n   * @param {Function} positionGetter Default position getter.\n   */\n  constructor(positionGetter) {\n    this.#defaultPositionGetter = positionGetter;\n  }\n\n  /**\n   * Get the annotation label position.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @returns {Point2D} The position.\n   */\n  getPosition(annotation) {\n    let position = annotation.labelPosition;\n    if (typeof position === 'undefined') {\n      position = this.#defaultPositionGetter(annotation);\n    }\n    return position;\n  }\n\n  /**\n   * Creates the konva label.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Style} style The drawing style.\n   * @returns {Konva.Label} The Konva label.\n   */\n  create(annotation, style) {\n    // konva text\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: annotation.colour,\n      padding: style.getTextPadding(),\n      shadowColor: style.getShadowLineColour(),\n      shadowOffset: style.getShadowOffset(),\n      name: 'text'\n    });\n    const labelText = annotation.getText();\n    ktext.setText(labelText);\n\n    // times 2 so that the font size 10 looks like a 10...\n    // (same logic as in the DrawController::updateLabelScale)\n    const zoomScale = style.applyZoomScale(1);\n    const labelScale = {\n      x: 2 * zoomScale.x,\n      y: 2 * zoomScale.y\n    };\n\n    // konva label\n    const labelPosition = this.getPosition(annotation);\n    const klabel = new Konva.Label({\n      x: labelPosition.getX(),\n      y: labelPosition.getY(),\n      scale: labelScale,\n      visible: labelText.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: annotation.colour,\n      opacity: style.getTagOpacity()\n    }));\n\n    return klabel;\n  }\n\n  /**\n   * Update the shape label position.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Group} group The shape group.\n   */\n  updatePosition(annotation, group) {\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    if (!(klabel instanceof Konva.Label)) {\n      return;\n    }\n    // update position\n    const labelPosition = this.getPosition(annotation);\n    klabel.position({\n      x: labelPosition.getX(),\n      y: labelPosition.getY()\n    });\n  }\n\n  /**\n   * Update the shape label.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Group} group The shape group.\n   */\n  updateContent(annotation, group) {\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    if (!(klabel instanceof Konva.Label)) {\n      return;\n    }\n    // update text\n    const text = annotation.getText();\n    const ktext = klabel.getText();\n    ktext.setText(text);\n    // hide if visible and empty\n    if (klabel.visible()) {\n      klabel.visible(text.length !== 0);\n    }\n  }\n\n} // LabelFactory","// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\n/* eslint-enable no-unused-vars */\n\n/**\n * Threshold an image between an input minimum and maximum.\n */\nexport class Threshold {\n  /**\n   * Threshold minimum.\n   *\n   * @type {number}\n   */\n  #min = 0;\n\n  /**\n   * Threshold maximum.\n   *\n   * @type {number}\n   */\n  #max = 0;\n\n  /**\n   * Get the threshold minimum.\n   *\n   * @returns {number} The threshold minimum.\n   */\n  getMin() {\n    return this.#min;\n  }\n\n  /**\n   * Set the threshold minimum.\n   *\n   * @param {number} val The threshold minimum.\n   */\n  setMin(val) {\n    this.#min = val;\n  }\n\n  /**\n   * Get the threshold maximum.\n   *\n   * @returns {number} The threshold maximum.\n   */\n  getMax() {\n    return this.#max;\n  }\n\n  /**\n   * Set the threshold maximum.\n   *\n   * @param {number} val The threshold maximum.\n   */\n  setMax(val) {\n    this.#max = val;\n  }\n\n  /**\n   * Get the name of the filter.\n   *\n   * @returns {string} The name of the filter.\n   */\n  getName() {\n    return 'Threshold';\n  }\n\n  /**\n   * Original image.\n   *\n   * @type {Image}\n   */\n  #originalImage = null;\n\n  /**\n   * Set the original image.\n   *\n   * @param {Image} image The original image.\n   */\n  setOriginalImage(image) {\n    this.#originalImage = image;\n  }\n\n  /**\n   * Get the original image.\n   *\n   * @returns {Image} The original image.\n   */\n  getOriginalImage() {\n    return this.#originalImage;\n  }\n\n  /**\n   * Transform the main image using this filter.\n   *\n   * @returns {Image} The transformed image.\n   */\n  update() {\n    const image = this.getOriginalImage();\n    const imageMin = image.getDataRange().min;\n    const threshFunction = (value) => {\n      if (value < this.getMin() || value > this.getMax()) {\n        return imageMin;\n      } else {\n        return value;\n      }\n    };\n    return image.transform(threshFunction);\n  }\n\n} // class Threshold\n\n/**\n * Sharpen an image using a sharpen convolution matrix.\n */\nexport class Sharpen {\n  /**\n   * Get the name of the filter.\n   *\n   * @returns {string} The name of the filter.\n   */\n  getName() {\n    return 'Sharpen';\n  }\n\n  /**\n   * Original image.\n   *\n   * @type {Image}\n   */\n  #originalImage = null;\n\n  /**\n   * Set the original image.\n   *\n   * @param {Image} image The original image.\n   */\n  setOriginalImage(image) {\n    this.#originalImage = image;\n  }\n\n  /**\n   * Get the original image.\n   *\n   * @returns {Image} The original image.\n   */\n  getOriginalImage() {\n    return this.#originalImage;\n  }\n\n  /**\n   * Transform the main image using this filter.\n   *\n   * @returns {Image} The transformed image.\n   */\n  update() {\n    const image = this.getOriginalImage();\n    /* eslint-disable @stylistic/js/array-element-newline */\n    return image.convolute2D([\n      0, -1, 0,\n      -1, 5, -1,\n      0, -1, 0\n    ]);\n    /* eslint-enable @stylistic/js/array-element-newline */\n  }\n\n} // class Sharpen\n\n/**\n * Apply a Sobel filter to an image.\n */\nexport class Sobel {\n  /**\n   * Get the name of the filter.\n   *\n   * @returns {string} The name of the filter.\n   */\n  getName() {\n    return 'Sobel';\n  }\n\n  /**\n   * Original image.\n   *\n   * @type {Image}\n   */\n  #originalImage = null;\n\n  /**\n   * Set the original image.\n   *\n   * @param {Image} image The original image.\n   */\n  setOriginalImage(image) {\n    this.#originalImage = image;\n  }\n\n  /**\n   * Get the original image.\n   *\n   * @returns {Image} The original image.\n   */\n  getOriginalImage() {\n    return this.#originalImage;\n  }\n\n  /**\n   * Transform the main image using this filter.\n   *\n   * @returns {Image} The transformed image.\n   */\n  update() {\n    const image = this.getOriginalImage();\n    /* eslint-disable @stylistic/js/array-element-newline */\n    const gradX = image.convolute2D([\n      1, 0, -1,\n      2, 0, -2,\n      1, 0, -1\n    ]);\n    const gradY = image.convolute2D([\n      1, 2, 1,\n      0, 0, 0,\n      -1, -2, -1\n    ]);\n    /* eslint-enable @stylistic/js/array-element-newline */\n    return gradX.compose(gradY, function (x, y) {\n      return Math.sqrt(x * x + y * y);\n    });\n  }\n\n} // class Sobel\n","import {ListenerHandler} from '../utils/listen';\nimport {\n  Threshold as ThresholdFilter,\n  Sobel as SobelFilter,\n  Sharpen as SharpenFilter\n} from '../image/filter';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * Filter tool.\n */\nexport class Filter {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Filter list.\n   *\n   * @type {object}\n   */\n  #filterList = null;\n\n  /**\n   * Selected filter.\n   *\n   * @type {object}\n   */\n  #selectedFilter = 0;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} bool Flag to activate or not.\n   */\n  activate(bool) {\n    // setup event listening\n    for (const key in this.#filterList) {\n      if (bool) {\n        this.#filterList[key].addEventListener('filterrun', this.#fireEvent);\n        this.#filterList[key].addEventListener('filter-undo', this.#fireEvent);\n      } else {\n        this.#filterList[key].removeEventListener(\n          'filterrun', this.#fireEvent);\n        this.#filterList[key].removeEventListener(\n          'filter-undo', this.#fireEvent);\n      }\n    }\n  }\n\n  /**\n   * Set the tool options.\n   *\n   * @param {object} options The list of filter names amd classes.\n   */\n  setOptions(options) {\n    this.#filterList = {};\n    // try to instanciate filters from the options\n    for (const key in options) {\n      this.#filterList[key] = new options[key](this.#app);\n    }\n  }\n\n  /**\n   * Get the type of tool options: here 'instance' since the filter\n   * list contains instances of each possible filter.\n   *\n   * @returns {string} The type.\n   */\n  getOptionsType() {\n    return 'instance';\n  }\n\n  /**\n   * Initialise the filter. Called once the image is loaded.\n   */\n  init() {\n    // setup event listening\n    for (const key in this.#filterList) {\n      this.#filterList[key].init();\n    }\n  }\n\n  /**\n   * Handle keydown event.\n   *\n   * @param {object} event The keydown event.\n   */\n  keydown = (event) => {\n    event.context = 'Filter';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Get the list of event names that this tool can fire.\n   *\n   * @returns {string[]} The list of event names.\n   */\n  getEventNames() {\n    return ['filterrun', 'filterundo'];\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Get the selected filter.\n   *\n   * @returns {object} The selected filter.\n   */\n  getSelectedFilter() {\n    return this.#selectedFilter;\n  }\n\n  /**\n   * Set the tool live features: filter name.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.filterName !== 'undefined') {\n      // check if we have it\n      if (!this.hasFilter(features.filterName)) {\n        throw new Error('Unknown filter: \\'' + features.filterName + '\\'');\n      }\n      // de-activate last selected\n      if (this.#selectedFilter) {\n        this.#selectedFilter.activate(false);\n      }\n      // enable new one\n      this.#selectedFilter = this.#filterList[features.filterName];\n      // activate the selected filter\n      this.#selectedFilter.activate(true);\n    }\n    if (typeof features.run !== 'undefined' && features.run) {\n      let args = {};\n      if (typeof features.runArgs !== 'undefined') {\n        args = features.runArgs;\n      }\n      this.getSelectedFilter().run(args);\n    }\n  }\n\n  /**\n   * Get the list of filters.\n   *\n   * @returns {Array} The list of filter objects.\n   */\n  getFilterList() {\n    return this.#filterList;\n  }\n\n  /**\n   * Check if a filter is in the filter list.\n   *\n   * @param {string} name The name to check.\n   * @returns {string} The filter list element for the given name.\n   */\n  hasFilter(name) {\n    return this.#filterList[name];\n  }\n\n} // class Filter\n\n/**\n * Threshold filter tool.\n */\nexport class Threshold {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Associated filter.\n   *\n   * @type {object}\n   */\n  #filter = new ThresholdFilter();\n\n  /**\n   * Flag to know wether to reset the image or not.\n   *\n   * @type {boolean}\n   */\n  #resetImage = true;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Activate the filter.\n   *\n   * @param {boolean} bool Flag to activate or not.\n   */\n  activate(bool) {\n    // reset the image when the tool is activated\n    if (bool) {\n      this.#resetImage = true;\n    }\n  }\n\n  /**\n   * Initialise the filter. Called once the image is loaded.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Run the filter.\n   *\n   * @param {*} args The filter arguments.\n   */\n  run(args) {\n    if (typeof args.dataId === 'undefined') {\n      throw new Error('No dataId to run threshod filter on.');\n    }\n    this.#filter.setMin(args.min);\n    this.#filter.setMax(args.max);\n    // reset the image if asked\n    if (this.#resetImage) {\n      const image = this.#app.getData(args.dataId).image;\n      this.#filter.setOriginalImage(image);\n      this.#resetImage = false;\n    }\n    const command = new RunFilterCommand(this.#filter, args.dataId, this.#app);\n    command.onExecute = this.#fireEvent;\n    command.onUndo = this.#fireEvent;\n    command.execute();\n    // save command in undo stack\n    this.#app.addToUndoStack(command);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *  event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // class Threshold\n\n/**\n * Sharpen filter tool.\n */\nexport class Sharpen {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Activate the filter.\n   *\n   * @param {boolean} _bool Flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the filter. Called once the image is loaded.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Run the filter.\n   *\n   * @param {*} args The filter arguments.\n   */\n  run(args) {\n    if (typeof args.dataId === 'undefined') {\n      throw new Error('No dataId to run sharpen filter on.');\n    }\n    const filter = new SharpenFilter();\n    const image = this.#app.getData(args.dataId).image;\n    filter.setOriginalImage(image);\n    const command = new RunFilterCommand(filter, args.dataId, this.#app);\n    command.onExecute = this.#fireEvent;\n    command.onUndo = this.#fireEvent;\n    command.execute();\n    // save command in undo stack\n    this.#app.addToUndoStack(command);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *    event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // filter.Sharpen\n\n/**\n * Sobel filter tool.\n */\nexport class Sobel {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Activate the filter.\n   *\n   * @param {boolean} _bool Flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the filter. Called once the image is loaded.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Run the filter.\n   *\n   * @param {*} args The filter arguments.\n   */\n  run(args) {\n    if (typeof args.dataId === 'undefined') {\n      throw new Error('No dataId to run sobel filter on.');\n    }\n    const filter = new SobelFilter();\n    const image = this.#app.getData(args.dataId).image;\n    filter.setOriginalImage(image);\n    const command = new RunFilterCommand(filter, args.dataId, this.#app);\n    command.onExecute = this.#fireEvent;\n    command.onUndo = this.#fireEvent;\n    command.execute();\n    // save command in undo stack\n    this.#app.addToUndoStack(command);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *  event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // class filter.Sobel\n\n/**\n * Run filter command.\n */\nexport class RunFilterCommand {\n\n  /**\n   * The filter to run.\n   *\n   * @type {object}\n   */\n  #filter;\n\n  /**\n   * Data id.\n   *\n   * @type {string}\n   */\n  #dataId;\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {object} filter The filter to run.\n   * @param {string} dataId The data to filter.\n   * @param {App} app The associated application.\n   */\n  constructor(filter, dataId, app) {\n    this.#filter = filter;\n    this.#dataId = dataId;\n    this.#app = app;\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Filter-' + this.#filter.getName();\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires RunFilterCommand#filterrun\n   */\n  execute() {\n    // run filter and set app image\n    this.#app.setImage(this.#dataId, this.#filter.update());\n    // update display\n    this.#app.render(this.#dataId);\n    /**\n     * Filter run event.\n     *\n     * @event RunFilterCommand#filterrun\n     * @type {object}\n     * @property {string} type The event type: filterrun.\n     * @property {number} id The id of the run command.\n     */\n    const event = {\n      type: 'filterrun',\n      id: this.getName(),\n      dataId: this.#dataId\n    };\n    // callback\n    this.onExecute(event);\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires RunFilterCommand#filterundo\n   */\n  undo() {\n    // reset the image\n    this.#app.setImage(this.#dataId, this.#filter.getOriginalImage());\n    // update display\n    this.#app.render(this.#dataId);\n    /**\n     * Filter undo event.\n     *\n     * @event RunFilterCommand#filterundo\n     * @type {object}\n     * @property {string} type The event type: filterundo.\n     * @property {number} id The id of the undone run command.\n     */\n    const event = {\n      type: 'filterundo',\n      id: this.getName(),\n      dataid: this.#dataId\n    }; // callback\n    this.onUndo(event);\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // RunFilterCommand class\n","import {WindowLevel} from './windowLevel';\nimport {Scroll} from './scroll';\nimport {ZoomAndPan} from './zoomPan';\nimport {Opacity} from './opacity';\nimport {Draw} from './draw';\nimport {Floodfill} from './floodfill';\nimport {Livewire} from './livewire';\n\nimport {ArrowFactory} from './arrow';\nimport {CircleFactory} from './circle';\nimport {EllipseFactory} from './ellipse';\nimport {ProtractorFactory} from './protractor';\nimport {RectangleFactory} from './rectangle';\nimport {RoiFactory} from './roi';\nimport {RulerFactory} from './ruler';\n\nimport {Filter, Threshold, Sobel, Sharpen} from './filter';\n\n/**\n * List of client provided tools to be added to\n * the default ones.\n *\n * @example\n * // custom tool\n * class AlertTool {\n *   mousedown() {alert('AlertTool mousedown');}\n *   init() {}\n *   activate() {}\n * }\n * // pass it to dwv tool list\n * dwv.toolList['Alert'] = AlertTool;\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n * const viewConfigs = {'*': [viewConfig0]};\n * const options = new dwv.AppOptions(viewConfigs);\n * options.tools = {Alert: {}};\n * app.init(options);\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('Alert');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n *\n * @type {Object<string, any>}\n */\nexport const toolList = {};\n\n/**\n * List of client provided tool options to be added to\n * the default ones.\n *\n * @example\n * // custom factory\n * class LoveFactory {\n *   getName() {return 'love';}\n *   static supports(mathShape) {return mathShape instanceof ROI;}\n *   getNPoints() {return 1;}\n *   getTimeout() {return 0;}\n *   setAnnotationMathShape(annotation, points) {\n *     const px = points[0].getX();\n *     const py = points[0].getY();\n *     annotation.mathShape = new dwv.ROI([\n *       new dwv.Point2D(px+15,py), new dwv.Point2D(px+10,py-10),\n *       new dwv.Point2D(px,py), new dwv.Point2D(px-10,py-10),\n *       new dwv.Point2D(px-15,py), new dwv.Point2D(px,py+20)\n *     ]);\n *     annotation.getFactory = function () {return new LoveFactory();}\n *   }\n *   createShapeGroup(annotation, style) {\n *     const roi = annotation.mathShape;\n *     // konva line\n *     const arr = [];\n *     for (let i = 0; i < roi.getLength(); ++i) {\n *       arr.push(roi.getPoint(i).getX());\n *       arr.push(roi.getPoint(i).getY());\n *     }\n *     const shape = new Konva.Line({\n *       name: 'shape', points: arr,\n *       stroke: 'red', strokeWidth: 2,\n *       closed: true\n *     });\n *     // konva group\n *     const group = new Konva.Group();\n *     group.name('love-group');\n *     group.visible(true);\n *     group.id(annotation.id);\n *     group.add(shape);\n *     return group;\n *   }\n * }\n * // pass it to dwv option list\n * dwv.toolOptions['draw'] = {LoveFactory};\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n * const viewConfigs = {'*': [viewConfig0]};\n * const options = new dwv.AppOptions(viewConfigs);\n * options.tools = {Draw: {options: ['Love']}};\n * app.init(options);\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('Draw');\n *   app.setToolFeatures({shapeName: 'Love'});\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n *\n * @type {Object<string, Object<string, any>>}\n */\nexport const toolOptions = {};\n\n/**\n * Default tool list.\n *\n * @type {Object<string, any>}\n */\nexport const defaultToolList = {\n  WindowLevel,\n  Scroll,\n  ZoomAndPan,\n  Opacity,\n  Draw,\n  Filter,\n  Floodfill,\n  Livewire\n};\n\n/**\n * Default tool options.\n *\n * @type {Object<string, Object<string, any>>}\n */\nexport const defaultToolOptions = {\n  draw: {\n    ArrowFactory,\n    CircleFactory,\n    EllipseFactory,\n    ProtractorFactory,\n    RectangleFactory,\n    RoiFactory,\n    RulerFactory\n  },\n  filter: {\n    Threshold,\n    Sobel,\n    Sharpen\n  }\n};","import {ScrollWheel} from './scrollWheel';\nimport {\n  getMousePoint,\n  getTouchPoints\n} from '../gui/generic';\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {\n  validateWindowWidth,\n  WindowLevel as WindowLevelValues\n} from '../image/windowLevel';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\nimport {Point2D} from '../math/point';\n/* eslint-enable no-unused-vars */\n\n/**\n * WindowLevel tool: handle window/level related events.\n *\n * @example\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n * const viewConfigs = {'*': [viewConfig0]};\n * const options = new dwv.AppOptions(viewConfigs);\n * options.tools = {WindowLevel: new dwv.ToolConfig()};\n * app.init(options);\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('WindowLevel');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n */\nexport class WindowLevel {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Start point.\n   *\n   * @type {Point2D}\n   */\n  #startPoint;\n\n  /**\n   * Scroll wheel handler.\n   *\n   * @type {ScrollWheel}\n   */\n  #scrollWhell;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n    this.#scrollWhell = new ScrollWheel(app);\n  }\n\n  /**\n   * Start tool interaction.\n   *\n   * @param {Point2D} point The start point.\n   * @param {string} divId The layer group divId.\n   */\n  #start(point, divId) {\n    // check if possible\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    if (!viewController.isMonochrome()) {\n      return;\n    }\n\n    this.#started = true;\n    this.#startPoint = point;\n  }\n\n  /**\n   * Update tool interaction.\n   *\n   * @param {Point2D} point The update point.\n   * @param {string} divId The layer group divId.\n   */\n  #update(point, divId) {\n    // check start flag\n    if (!this.#started) {\n      return;\n    }\n\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n\n    // difference to last position\n    const diffX = point.getX() - this.#startPoint.getX();\n    const diffY = this.#startPoint.getY() - point.getY();\n    // data range\n    const range = viewController.getImageRescaledDataRange();\n    // 1/1000 seems to give reasonable results...\n    const pixelToIntensity = (range.max - range.min) * 0.01;\n\n    // calculate new window level\n    const center = viewController.getWindowLevel().center;\n    const width = viewController.getWindowLevel().width;\n    const windowCenter = center + Math.round(diffY * pixelToIntensity);\n    let windowWidth = width + Math.round(diffX * pixelToIntensity);\n    // bound window width\n    windowWidth = validateWindowWidth(windowWidth);\n    // set\n    const wl = new WindowLevelValues(windowCenter, windowWidth);\n    viewController.setWindowLevel(wl);\n\n    // store position\n    this.#startPoint = point;\n  }\n\n  /**\n   * Finish tool interaction.\n   */\n  #finish() {\n    if (this.#started) {\n      this.#started = false;\n    }\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#start(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#update(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    this.#finish();\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} _event The mouse out event.\n   */\n  mouseout = (_event) => {\n    this.#finish();\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#start(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#update(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} _event The touch end event.\n   */\n  touchend = (_event) => {\n    this.#finish();\n  };\n\n  /**\n   * Handle double click event.\n   *\n   * @param {object} event The double click event.\n   */\n  dblclick = (event) => {\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const mousePoint = getMousePoint(event);\n\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const index = viewLayer.displayToPlaneIndex(mousePoint);\n    const viewController = viewLayer.getViewController();\n    // exit if not possible\n    if (!viewController.isMonochrome()) {\n      return;\n    }\n\n    // update view controller\n    const image = this.#app.getData(viewLayer.getDataId()).image;\n    const wl = new WindowLevelValues(\n      image.getRescaledValueAtIndex(\n        viewController.getCurrentIndex().getWithNew2D(\n          index.get(0),\n          index.get(1)\n        )\n      ),\n      viewController.getWindowLevel().width\n    );\n    viewController.setWindowLevel(wl);\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {WheelEvent} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    this.#scrollWhell.wheel(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'WindowLevel';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} _bool The flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Set the tool live features: does nothing.\n   *\n   * @param {object} _features The list of features.\n   */\n  setFeatures(_features) {\n    // does nothing\n  }\n\n} // WindowLevel class\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {\n  getMousePoint,\n  getTouchPoints\n} from '../gui/generic';\nimport {ScrollWheel} from './scrollWheel';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\nimport {Point2D} from '../math/point';\n/* eslint-enable no-unused-vars */\n\n/**\n * Scroll class.\n *\n * @example\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n * const viewConfigs = {'*': [viewConfig0]};\n * const options = new dwv.AppOptions(viewConfigs);\n * options.tools = {Scroll: new dwv.ToolConfig()};\n * app.init(options);\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('Scroll');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm',\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323707.dcm',\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323563.dcm'\n * ]);\n * @example <caption>Example with slider</caption>\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n * const viewConfigs = {'*': [viewConfig0]};\n * const options = new dwv.AppOptions(viewConfigs);\n * options.tools = {Scroll: new dwv.ToolConfig()};\n * app.init(options);\n * // create range\n * const range = document.createElement('input');\n * range.type = 'range';\n * range.min = 0;\n * range.id = 'sliceRange';\n * document.body.appendChild(range);\n * // update app on slider change\n * range.oninput = function () {\n *   const lg = app.getLayerGroupByDivId('layerGroup0');\n *   const vc = lg.getActiveViewLayer().getViewController();\n *   const index = vc.getCurrentIndex();\n *   const values = index.getValues();\n *   values[2] = this.value;\n *   vc.setCurrentIndex(new dwv.Index(values));\n * }\n * // activate tool and update range max on load\n * app.addEventListener('load', function () {\n *   app.setTool('Scroll');\n *   const size = app.getData(0).image.getGeometry().getSize();\n *   range.max = size.get(2) - 1;\n * });\n * // update slider on slice change (for ex via mouse wheel)\n * app.addEventListener('positionchange', function () {\n *   const lg = app.getLayerGroupByDivId('layerGroup0');\n *   const vc = lg.getActiveViewLayer().getViewController();\n *   range.value = vc.getCurrentIndex().get(2);\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm',\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323707.dcm',\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323563.dcm'\n * ]);\n */\nexport class Scroll {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Start point.\n   *\n   * @type {Point2D}\n   */\n  #startPoint;\n\n  /**\n   * Scroll wheel handler.\n   *\n   * @type {ScrollWheel}\n   */\n  #scrollWhell;\n\n  /**\n   * Touch timer ID (created by setTimeout).\n   *\n   * @type {number}\n   */\n  #touchTimerID;\n\n  /**\n   * Option to show or not a value tooltip on mousemove.\n   *\n   * @type {boolean}\n   */\n  #displayTooltip = false;\n\n  /**\n   * Current layer group div id.\n   *\n   * @type {string}\n   */\n  #currentDivId;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n    this.#scrollWhell = new ScrollWheel(app);\n  }\n\n  /**\n   * Start tool interaction.\n   *\n   * @param {Point2D} point The start point.\n   * @param {string} divId The layer group divId.\n   */\n  #start(point, divId) {\n    // optional tooltip\n    this.#removeTooltipDiv();\n\n    // stop viewer if playing\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n    if (viewController.isPlaying()) {\n      viewController.stop();\n    }\n\n    // start flag\n    this.#started = true;\n    this.#startPoint = point;\n\n    // update controller position\n    const planePos = viewLayer.displayToPlanePos(point);\n    const position = viewController.getPositionFromPlanePoint(planePos);\n    viewController.setCurrentPosition(position);\n  }\n\n  /**\n   * Update tool interaction.\n   *\n   * @param {Point2D} point The update point.\n   * @param {string} divId The layer group divId.\n   */\n  #update(point, divId) {\n    if (!this.#started) {\n      // optional tooltip\n      if (this.#displayTooltip) {\n        this.#showTooltip(point, divId);\n      }\n      return;\n    }\n\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n\n    let newPosition;\n\n    // difference to last Y position\n    const diffY = point.getY() - this.#startPoint.getY();\n    const yMove = (Math.abs(diffY) > 15);\n    // do not trigger for small moves\n    if (yMove && layerGroup.canScroll()) {\n      // update view controller\n      if (diffY > 0) {\n        newPosition = viewController.getDecrementScrollPosition();\n      } else {\n        newPosition = viewController.getIncrementScrollPosition();\n      }\n    }\n\n    // difference to last X position\n    const diffX = point.getX() - this.#startPoint.getX();\n    const xMove = (Math.abs(diffX) > 15);\n    // do not trigger for small moves\n    if (xMove && layerGroup.moreThanOne(3)) {\n      // update view controller\n      if (diffX > 0) {\n        newPosition = viewController.getIncrementPosition(3);\n      } else {\n        newPosition = viewController.getDecrementPosition(3);\n      }\n    }\n\n    // set all layers if at least one can be set\n    if (typeof newPosition !== 'undefined' &&\n      layerGroup.isPositionInBounds(newPosition)) {\n      viewController.setCurrentPosition(newPosition);\n    }\n\n    // reset origin point\n    if (xMove || yMove) {\n      this.#startPoint = point;\n    }\n  }\n\n  /**\n   * Finish tool interaction.\n   */\n  #finish() {\n    if (this.#started) {\n      this.#started = false;\n    }\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#start(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#update(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    this.#finish();\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} _event The mouse out event.\n   */\n  mouseout = (_event) => {\n    this.#finish();\n    // remove possible tooltip div\n    this.#removeTooltipDiv();\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    // long touch triggers the dblclick\n    // @ts-ignore\n    this.#touchTimerID = setTimeout(() => {\n      this.dblclick(event);\n    }, 500);\n    // call start\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#start(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    // abort timer if move\n    if (this.#touchTimerID !== null) {\n      clearTimeout(this.#touchTimerID);\n      this.#touchTimerID = null;\n    }\n    // call update\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#update(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} _event The touch end event.\n   */\n  touchend = (_event) => {\n    // abort timer\n    if (this.#touchTimerID !== null) {\n      clearTimeout(this.#touchTimerID);\n      this.#touchTimerID = null;\n    }\n    // call mouse equivalent\n    this.#finish();\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {WheelEvent} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    this.#scrollWhell.wheel(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'Scroll';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Handle double click.\n   *\n   * @param {object} event The key down event.\n   */\n  dblclick = (event) => {\n    const layerDetails = getLayerDetailsFromEvent(event);\n\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    viewController.play();\n  };\n\n  /**\n   * Display a tooltip at the given point.\n   *\n   * @param {Point2D} point The update point.\n   * @param {string} divId The layer group divId.\n   */\n  #showTooltip(point, divId) {\n    // get layer group\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    this.#currentDivId = divId;\n    // show new tooltip\n    layerGroup.showTooltip(point);\n  }\n\n  /**\n   * Remove the last tooltip html div.\n   */\n  #removeTooltipDiv() {\n    if (typeof this.#currentDivId !== 'undefined') {\n      const layerGroup = this.#app.getLayerGroupByDivId(this.#currentDivId);\n      layerGroup.removeTooltipDiv();\n      this.#currentDivId = undefined;\n    }\n  }\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} _bool The flag to activate or not.\n   */\n  activate(_bool) {\n    // remove tooltip html when deactivating\n    if (!_bool) {\n      this.#removeTooltipDiv();\n    }\n  }\n\n  /**\n   * Set the tool live features: disaply tooltip.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.displayTooltip !== 'undefined') {\n      this.#displayTooltip = features.displayTooltip;\n    }\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n} // Scroll class\n","import {Point2D} from '../math/point';\nimport {Line} from '../math/line';\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {\n  getMousePoint,\n  getTouchPoints\n} from '../gui/generic';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * ZoomAndPan class.\n *\n * @example\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n * const viewConfigs = {'*': [viewConfig0]};\n * const options = new dwv.AppOptions(viewConfigs);\n * options.tools = {ZoomAndPan: new dwv.ToolConfig()};\n * app.init(options);\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('ZoomAndPan');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n */\nexport class ZoomAndPan {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Start point.\n   *\n   * @type {Point2D}\n   */\n  #startPoint;\n\n  /**\n   * Move flag: true if mouse or touch move.\n   *\n   * @type {boolean}\n   */\n  #hasMoved;\n\n  /**\n   * Line between input points.\n   *\n   * @type {Line}\n   */\n  #pointsLine;\n\n  /**\n   * PointsLine midpoint.\n   *\n   * @type {Point2D}\n   */\n  #midPoint;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Start tool interaction.\n   *\n   * @param {Point2D} point The start point.\n   */\n  #start(point) {\n    this.#started = true;\n    this.#startPoint = point;\n    this.#hasMoved = false;\n  }\n\n  /**\n   * Two touch start.\n   *\n   * @param {Point2D[]} points The start points.\n   */\n  #twoTouchStart = (points) => {\n    this.#started = true;\n    this.#startPoint = points[0];\n    this.#hasMoved = false;\n    // points line\n    this.#pointsLine = new Line(points[0], points[1]);\n    this.#midPoint = this.#pointsLine.getMidpoint();\n  };\n\n  /**\n   * Update tool interaction.\n   *\n   * @param {Point2D} point The update point.\n   * @param {string} divId The layer group divId.\n   */\n  #update(point, divId) {\n    if (!this.#started) {\n      return;\n    }\n    this.#hasMoved = true;\n\n    // calculate translation\n    const tx = point.getX() - this.#startPoint.getX();\n    const ty = point.getY() - this.#startPoint.getY();\n    // apply translation\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n    const planeOffset = viewLayer.displayToPlaneScale(\n      new Point2D(tx, ty)\n    );\n    const offset3D = viewController.getOffset3DFromPlaneOffset({\n      x: planeOffset.getX(),\n      y: planeOffset.getY()\n    });\n    layerGroup.addTranslation({\n      x: offset3D.getX(),\n      y: offset3D.getY(),\n      z: offset3D.getZ()\n    });\n    layerGroup.draw();\n    // reset origin point\n    this.#startPoint = point;\n  }\n\n  /**\n   * Two touch update.\n   *\n   * @param {Point2D[]} points The update points.\n   * @param {string} divId The layer group divId.\n   */\n  #twoTouchUpdate = (points, divId) => {\n    if (!this.#started) {\n      return;\n    }\n    this.#hasMoved = true;\n\n    const newLine = new Line(points[0], points[1]);\n    const lineRatio = newLine.getLength() / this.#pointsLine.getLength();\n\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n\n    if (lineRatio === 1) {\n      // scroll mode\n      // difference  to last position\n      const diffY = points[0].getY() - this.#startPoint.getY();\n      // do not trigger for small moves\n      if (Math.abs(diffY) < 15) {\n        return;\n      }\n      // update view controller\n      if (layerGroup.canScroll()) {\n        let newPosition;\n        if (diffY > 0) {\n          newPosition = viewController.getIncrementScrollPosition();\n        } else {\n          newPosition = viewController.getDecrementScrollPosition();\n        }\n        // set all layers if at least one can be set\n        if (typeof newPosition !== 'undefined' &&\n          layerGroup.isPositionInBounds(newPosition)) {\n          viewController.setCurrentPosition(newPosition);\n        }\n      }\n    } else {\n      // zoom mode\n      const zoom = (lineRatio - 1) / 10;\n      if (Math.abs(zoom) % 0.1 <= 0.05 &&\n        typeof this.#midPoint !== 'undefined') {\n        const planePos = viewLayer.displayToMainPlanePos(this.#midPoint);\n        const center = viewController.getPlanePositionFromPlanePoint(planePos);\n        layerGroup.addScale(zoom, center);\n        layerGroup.draw();\n      }\n    }\n  };\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point2D} point The update point.\n   * @param {string} divId The layer group divId.\n   */\n  #setCurrentPosition(point, divId) {\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n    const planePos = viewLayer.displayToPlanePos(point);\n    const position = viewController.getPositionFromPlanePoint(planePos);\n    viewController.setCurrentPosition(position);\n  }\n\n  /**\n   * Finish tool interaction.\n   */\n  #finish() {\n    if (this.#started) {\n      this.#started = false;\n    }\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    const mousePoint = getMousePoint(event);\n    this.#start(mousePoint);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#update(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} event The mouse up event.\n   */\n  mouseup = (event) => {\n    // update position if no move\n    if (!this.#hasMoved) {\n      const mousePoint = getMousePoint(event);\n      const layerDetails = getLayerDetailsFromEvent(event);\n      this.#setCurrentPosition(mousePoint, layerDetails.groupDivId);\n    }\n    this.#finish();\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} _event The mouse out event.\n   */\n  mouseout = (_event) => {\n    this.#finish();\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    const touchPoints = getTouchPoints(event);\n    if (touchPoints.length === 1) {\n      this.#start(touchPoints[0]);\n    } else if (touchPoints.length === 2) {\n      this.#twoTouchStart(touchPoints);\n    }\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    if (touchPoints.length === 1) {\n      this.#update(touchPoints[0], layerDetails.groupDivId);\n    } else if (touchPoints.length === 2) {\n      this.#twoTouchUpdate(touchPoints, layerDetails.groupDivId);\n    }\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    // update position if no move\n    if (!this.#hasMoved) {\n      const mousePoint = getMousePoint(event);\n      const layerDetails = getLayerDetailsFromEvent(event);\n      this.#setCurrentPosition(mousePoint, layerDetails.groupDivId);\n    }\n    this.#finish();\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {object} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    // prevent default page scroll\n    event.preventDefault();\n\n    const step = -event.deltaY / 500;\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const mousePoint = getMousePoint(event);\n\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n    const planePos = viewLayer.displayToMainPlanePos(mousePoint);\n    const center = viewController.getPlanePositionFromPlanePoint(planePos);\n    layerGroup.addScale(step, center);\n    layerGroup.draw();\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'ZoomAndPan';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} _bool The flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Set the tool live features: does nothing.\n   *\n   * @param {object} _features The list of features.\n   */\n  setFeatures(_features) {\n    // does nothing\n  }\n\n} // ZoomAndPan class\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {ScrollWheel} from './scrollWheel';\nimport {\n  getMousePoint,\n  getTouchPoints\n} from '../gui/generic';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\nimport {Point2D} from '../math/point';\n/* eslint-enable no-unused-vars */\n\n/**\n * Opacity class.\n *\n * @example\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n * const viewConfigs = {'*': [viewConfig0]};\n * const options = new dwv.AppOptions(viewConfigs);\n * options.tools = {Opacity: new dwv.ToolConfig()};\n * app.init(options);\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('Opacity');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n */\nexport class Opacity {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Start point.\n   *\n   * @type {Point2D}\n   */\n  #startPoint;\n\n  /**\n   * Scroll wheel handler.\n   *\n   * @type {ScrollWheel}\n   */\n  #scrollWhell;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n    this.#scrollWhell = new ScrollWheel(app);\n  }\n\n  /**\n   * Start tool interaction.\n   *\n   * @param {Point2D} point The start point.\n   */\n  #start(point) {\n    this.#started = true;\n    this.#startPoint = point;\n  }\n\n  /**\n   * Update tool interaction.\n   *\n   * @param {Point2D} point The update point.\n   * @param {string} divId The layer group divId.\n   */\n  #update(point, divId) {\n    if (!this.#started) {\n      return;\n    }\n\n    // difference to last X position\n    const diffX = point.getX() - this.#startPoint.getX();\n    const xMove = (Math.abs(diffX) > 15);\n    // do not trigger for small moves\n    if (xMove) {\n      const layerGroup = this.#app.getLayerGroupByDivId(divId);\n      const viewLayer = layerGroup.getActiveViewLayer();\n      const op = viewLayer.getOpacity();\n      viewLayer.setOpacity(op + (diffX / 200));\n      viewLayer.draw();\n\n      // reset origin point\n      this.#startPoint = point;\n    }\n  }\n\n  /**\n   * Finish tool interaction.\n   */\n  #finish() {\n    if (this.#started) {\n      this.#started = false;\n    }\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    const mousePoint = getMousePoint(event);\n    this.#start(mousePoint);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#update(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    this.#finish();\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} _event The mouse out event.\n   */\n  mouseout = (_event) => {\n    this.#finish();\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    const touchPoints = getTouchPoints(event);\n    this.#start(touchPoints[0]);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#update(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} _event The touch end event.\n   */\n  touchend = (_event) => {\n    this.#finish();\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {object} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    this.#scrollWhell.wheel(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'Opacity';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} _bool The flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Set the tool live features: does nothing.\n   *\n   * @param {object} _features The list of features.\n   */\n  setFeatures(_features) {\n    // does nothing\n  }\n\n} // Opacity class\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {\n  getMousePoint,\n  getTouchPoints\n} from '../gui/generic';\nimport {guid} from '../math/stats';\nimport {logger} from '../utils/logger';\nimport {\n  AddAnnotationCommand,\n  RemoveAnnotationCommand\n} from './drawCommands';\nimport {\n  isNodeNameShape,\n} from './drawBounds';\nimport {Annotation} from '../image/annotation';\nimport {ScrollWheel} from './scrollWheel';\n\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\nimport {Style} from '../gui/style';\nimport {LayerGroup} from '../gui/layerGroup';\nimport {Point2D} from '../math/point';\nimport {DrawLayer} from '../gui/drawLayer';\nimport {DrawShapeHandler} from './drawShapeHandler';\n/* eslint-enable no-unused-vars */\n\n/**\n * Drawing tool.\n *\n * This tool is responsible for the draw of layer group structure.\n *\n * ```\n * drawLayer\n * |_ positionGroup: {name=\"position-group\", id=\"#2-0#_#3-1\"}\n *    |_ shapeGroup: {name=\"{shape name}-group\", id=\"#\"}\n *       |_ shape: {name=\"shape\"},\n *       |_ label: {name=\"label\"},\n *       |_ extra: line tick, protractor arc...\n * ```\n *\n * Discussion:\n * - posGroup > shapeGroup:\n *   (pro) slice/frame display: 1 loop -\n *   (cons) multi-slice shape splitted in positionGroups.\n * - shapeGroup > posGroup:\n *   (pros) more logical -\n *   (cons) slice/frame display: 2 loops.\n */\nexport class Draw {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Scroll wheel handler.\n   *\n   * @type {ScrollWheel}\n   */\n  #scrollWhell;\n\n  /**\n   * Drawing style.\n   *\n   * @type {Style}\n   */\n  #style;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #isDrawing = false;\n\n  /**\n   * Shape factory list.\n   *\n   * @type {object}\n   */\n  #shapeFactoryList = null;\n\n  /**\n   * Current shape factory.\n   *\n   * @type {object}\n   */\n  #currentFactory = null;\n\n  /**\n   * Current shape group.\n   *\n   * @type {object}\n   */\n  #tmpShapeGroup = null;\n\n  /**\n   * Shape name.\n   *\n   * @type {string}\n   */\n  #shapeName;\n\n  /**\n   * List of points.\n   *\n   * @type {Point2D[]}\n   */\n  #points = [];\n\n  /**\n   * Last selected point.\n   *\n   * @type {Point2D}\n   */\n  #lastPoint = null;\n\n  /**\n   * With scroll flag.\n   *\n   * @type {boolean}\n   */\n  #withScroll = true;\n\n  /**\n   * Black list: list of dataIds for which draw layer creation\n   *   is forbidden.\n   */\n  #blacklist = [];\n\n  /**\n   * Shape handler: activate listeners on existing shape.\n   *\n   * @type {DrawShapeHandler}\n   */\n  #shapeHandler;\n\n  /**\n   * Auto shape colour: will use defaults colours and\n   * vary them according to the layer.\n   *\n   * @type {boolean}\n   */\n  #autoShapeColour = false;\n\n  /**\n   * Event listeners.\n   */\n  #listeners = {};\n\n  /**\n   * Flag to know if the last added point was made by mouse move.\n   *\n   * @type {boolean}\n   */\n  #lastIsMouseMovePoint = false;\n\n  /**\n   * Callback store to allow attach/detach.\n   *\n   * @type {Array}\n   */\n  #callbackStore = [];\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n    this.#scrollWhell = new ScrollWheel(app);\n    this.#shapeHandler = new DrawShapeHandler(app, this.#fireEvent);\n\n    this.#style = app.getStyle();\n  }\n\n\n  /**\n   * Start tool interaction.\n   *\n   * @param {Point2D} point The start point.\n   * @param {string} divId The layer group divId.\n   */\n  #switchEditOrCreateShapeGroup(point, divId) {\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    let drawLayer = layerGroup.getActiveDrawLayer();\n\n    if (typeof drawLayer === 'undefined') {\n      const viewLayer = layerGroup.getActiveViewLayer();\n      const refDataId = viewLayer.getDataId();\n      const refData = this.#app.getData(refDataId);\n      const refMeta = refData.image.getMeta();\n      const seriesInstanceUID = refMeta.SeriesInstanceUID;\n      // check black list\n      if (this.#blacklist.includes(seriesInstanceUID)) {\n        this.#fireEvent({\n          type: 'warn',\n          message: 'Cannot create draw layer, data is in black list'\n        });\n        return;\n      }\n      // create new data\n      const data = this.#app.createAnnotationData(refDataId);\n      // render (will create draw layer)\n      this.#app.addAndRenderAnnotationData(data, divId, refDataId);\n      // get draw layer\n      drawLayer = layerGroup.getActiveDrawLayer();\n      // set the layer shape handler\n      drawLayer.setShapeHandler(this.#shapeHandler);\n      // set active to bind to toolboxController\n      layerGroup.setActiveDrawLayerByDataId(drawLayer.getDataId());\n    }\n\n    // data should exist / be created\n    const data = drawLayer.getDrawController().getAnnotationGroup();\n\n    const stage = drawLayer.getKonvaStage();\n\n    // update scale\n    this.#style.setZoomScale(stage.scale());\n\n    if (data.isEditable()) {\n      // determine if the click happened on an existing shape or not\n      const kshape = stage.getIntersection({\n        x: point.getX(),\n        y: point.getY()\n      });\n      if (kshape) {\n        // select shape for edition\n        this.#selectShapeGroup(drawLayer, kshape);\n      } else {\n        // create new shape\n        this.#startShapeGroupCreation(layerGroup, point);\n      }\n    }\n  }\n\n  /**\n   * Initializes the new shape creation:\n   * - Updates the started variable,\n   * - Gets the factory,\n   * - Initializes the points array.\n   *\n   * @param {LayerGroup} layerGroup The layer group where the user clicks.\n   * @param {Point2D} point The start point where the user clicks.\n   */\n  #startShapeGroupCreation(layerGroup, point) {\n    // disable edition\n    this.#shapeHandler.disableAndResetEditor();\n    this.#setToDrawingState();\n    // store point\n    const viewLayer = layerGroup.getActiveViewLayer();\n    this.#lastPoint = viewLayer.displayToPlanePos(point);\n    this.#points.push(this.#lastPoint);\n  }\n\n  /**\n   * Sets the variables to drawing state:\n   * - Updates is drawing variable,\n   * - Initializes the current factory,\n   * - Resets points.\n   */\n  #setToDrawingState() {\n    // start storing points\n    this.#isDrawing = true;\n    // set factory\n    this.#currentFactory = new this.#shapeFactoryList[this.#shapeName]();\n    // clear array\n    this.#points = [];\n  }\n\n  /**\n   * Resets the variables to not drawing state:\n   * - Destroys tmp shape group,\n   * - Updates is drawing variable,\n   * - Resets points.\n   */\n  #setToNotDrawingState() {\n    this.#isDrawing = false;\n    this.#points = [];\n  }\n\n  /**\n   * Selects a shape group.\n   *\n   * @param {DrawLayer} drawLayer The draw layer where to draw.\n   * @param {Konva.Shape} kshape The shape that has been selected.\n   */\n  #selectShapeGroup(drawLayer, kshape) {\n    const group = kshape.getParent();\n    const selectedShape = group.find('.shape')[0];\n    if (!(selectedShape instanceof Konva.Shape)) {\n      return;\n    }\n    this.#fireEvent({\n      type: 'annotationselect',\n      annotationId: group.id()\n    });\n    this.#shapeHandler.setEditorShape(selectedShape, drawLayer);\n  }\n\n  /**\n   * Update tool interaction.\n   *\n   * @param {Point2D} point The update point.\n   * @param {string} divId The layer group divId.\n   */\n  #updateShapeGroupCreation(point, divId) {\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const pos = viewLayer.displayToPlanePos(point);\n\n    // draw line to current pos\n    if (Math.abs(pos.getX() - this.#lastPoint.getX()) > 0 ||\n      Math.abs(pos.getY() - this.#lastPoint.getY()) > 0) {\n      // clear last mouse move point\n      if (this.#lastIsMouseMovePoint) {\n        this.#points.pop();\n      }\n      // current point\n      this.#lastPoint = pos;\n      // mark it as temporary\n      this.#lastIsMouseMovePoint = true;\n      // add it to the list\n      this.#points.push(this.#lastPoint);\n      // update points\n      this.#onNewPoints(this.#points, layerGroup);\n    }\n  }\n\n  /**\n   * Finish tool interaction.\n   *\n   * @param {string} divId The layer group divId.\n   */\n  #finishShapeGroupCreation(divId) {\n    // exit if no points\n    if (this.#points.length === 0) {\n      logger.warn('Draw mouseup but no points...');\n      return;\n    }\n\n    // do we have all the needed points\n    if (this.#points.length === this.#currentFactory.getNPoints()) {\n      // store points\n      const layerGroup =\n        this.#app.getLayerGroupByDivId(divId);\n      this.#onFinalPoints(this.#points, layerGroup);\n      this.#setToNotDrawingState();\n    }\n\n    // reset mouse move point flag\n    this.#lastIsMouseMovePoint = false;\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    // exit if not started draw\n    if (this.#isDrawing) {\n      return;\n    }\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#switchEditOrCreateShapeGroup(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    // exit if not started draw\n    if (!this.#isDrawing) {\n      return;\n    }\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#updateShapeGroupCreation(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} event The mouse up event.\n   */\n  mouseup = (event) => {\n    // exit if not started draw\n    if (!this.#isDrawing) {\n      return;\n    }\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#finishShapeGroupCreation(layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle double click event: some tools use it to finish interaction.\n   *\n   * @param {object} event The double click event.\n   */\n  dblclick = (event) => {\n    // only end by double click undefined NPoints\n    if (this.#currentFactory &&\n      typeof this.#currentFactory.getNPoints() !== 'undefined') {\n      return;\n    }\n    // exit if not started draw\n    if (!this.#isDrawing) {\n      return;\n    }\n    // exit if no points\n    if (this.#points.length === 0) {\n      logger.warn('Draw dblclick but no points...');\n      return;\n    }\n\n    // store points\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    this.#onFinalPoints(this.#points, layerGroup);\n    this.#setToNotDrawingState();\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    // exit if not started draw\n    if (!this.#isDrawing) {\n      return;\n    }\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#finishShapeGroupCreation(layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    // exit if not started draw\n    if (this.#isDrawing) {\n      return;\n    }\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#switchEditOrCreateShapeGroup(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    // exit if not started draw\n    if (!this.#isDrawing) {\n      return;\n    }\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const touchPoints = getTouchPoints(event);\n\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const pos = viewLayer.displayToPlanePos(touchPoints[0]);\n\n    if (Math.abs(pos.getX() - this.#lastPoint.getX()) > 0 ||\n      Math.abs(pos.getY() - this.#lastPoint.getY()) > 0) {\n      // clear last added point from the list (but not the first one)\n      if (this.#points.length !== 1) {\n        this.#points.pop();\n      }\n      // current point\n      this.#lastPoint = pos;\n      // add current one to the list\n      this.#points.push(this.#lastPoint);\n      // allow for anchor points\n      if (this.#points.length < this.#currentFactory.getNPoints()) {\n        clearTimeout(this.timer);\n        this.timer = setTimeout(() => {\n          this.#points.push(this.#lastPoint);\n        }, this.#currentFactory.getTimeout());\n      }\n      // update points\n      this.#onNewPoints(this.#points, layerGroup);\n    }\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    this.dblclick(event);\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {WheelEvent} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    if (this.#withScroll) {\n      this.#scrollWhell.wheel(event);\n    }\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    // call app handler if we are not in the middle of a draw\n    if (!this.#isDrawing) {\n      event.context = 'Draw';\n      this.#app.onKeydown(event);\n    }\n\n    // press delete or backspace key\n    const annotation = this.#shapeHandler.getEditorAnnotation();\n    if ((event.key === 'Delete' ||\n      event.key === 'Backspace') &&\n      typeof annotation !== 'undefined') {\n      const layerGroup = this.#app.getActiveLayerGroup();\n      const drawLayer = layerGroup.getActiveDrawLayer();\n      const drawController = drawLayer.getDrawController();\n\n      // create remove annotation command\n      const command = new RemoveAnnotationCommand(annotation, drawController);\n      // add command to undo stack\n      this.#app.addToUndoStack(command);\n      // execute command: triggers draw remove\n      command.execute();\n\n      // reset cursor\n      this.#shapeHandler.onMouseOutShapeGroup();\n    }\n\n    // escape key: exit shape creation\n    if (event.key === 'Escape' && this.#tmpShapeGroup !== null) {\n      const konvaLayer = this.#tmpShapeGroup.getLayer();\n      // reset temporary shape group\n      this.#tmpShapeGroup.destroy();\n      this.#tmpShapeGroup = null;\n      // set state\n      this.#setToNotDrawingState();\n      // redraw\n      konvaLayer.draw();\n    }\n  };\n\n  /**\n   * Update the current draw with new points.\n   *\n   * @param {Point2D[]} tmpPoints The array of new points.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   */\n  #onNewPoints(tmpPoints, layerGroup) {\n    // remove temporary shape draw\n    if (this.#tmpShapeGroup) {\n      this.#tmpShapeGroup.destroy();\n      this.#tmpShapeGroup = null;\n    }\n\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const drawController = drawLayer.getDrawController();\n    const konvaLayer = drawLayer.getKonvaLayer();\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n\n    // auto mode: vary shape colour with layer id\n    if (this.#autoShapeColour) {\n      const colours = [\n        '#ffff80', '#ff80ff', '#80ffff', '#80ff80', '8080ff', 'ff8080'\n      ];\n      // warning: depends on layer id nomenclature\n      const drawLayerId = drawLayer.getId();\n      const layerId = drawLayerId.substring(drawLayerId.length - 1);\n      const layerIndex = parseInt(layerId, 10) - 1;\n      const colour = colours[layerIndex];\n      if (typeof colour !== 'undefined') {\n        this.#style.setLineColour(colour);\n      }\n    }\n\n    // create tmp annotation\n    const annotation = new Annotation();\n    // use group colour if defined\n    const groupColour = drawController.getAnnotationGroup().getColour();\n    if (typeof groupColour !== 'undefined') {\n      annotation.colour = groupColour;\n    } else {\n      annotation.colour = this.#style.getLineColour();\n    }\n    annotation.init(viewController);\n    // set annotation shape\n    this.#currentFactory.setAnnotationMathShape(annotation, tmpPoints);\n    // create shape group\n    this.#tmpShapeGroup =\n      this.#currentFactory.createShapeGroup(annotation, this.#style);\n    // set the label visibility\n    drawLayer.setLabelVisibility(this.#tmpShapeGroup);\n\n    // do not listen during creation\n    const shape = this.#tmpShapeGroup.getChildren(isNodeNameShape)[0];\n    shape.listening(false);\n    konvaLayer.listening(false);\n    // draw shape\n    konvaLayer.add(this.#tmpShapeGroup);\n    konvaLayer.draw();\n  }\n\n  /**\n   * Create the final shape from a point list.\n   *\n   * @param {Point2D[]} finalPoints The array of points.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   */\n  #onFinalPoints(finalPoints, layerGroup) {\n    // remove temporary shape draw\n    // (has to be done before sending add event)\n    if (this.#tmpShapeGroup) {\n      this.#tmpShapeGroup.destroy();\n      this.#tmpShapeGroup = null;\n    }\n\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const konvaLayer = drawLayer.getKonvaLayer();\n    const drawController = drawLayer.getDrawController();\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n\n    // create final annotation\n    const annotation = new Annotation();\n    // use group colour if defined\n    const groupColour = drawController.getAnnotationGroup().getColour();\n    if (typeof groupColour !== 'undefined') {\n      annotation.colour = groupColour;\n    } else {\n      annotation.colour = this.#style.getLineColour();\n    }\n    annotation.id = guid();\n    annotation.init(viewController);\n    // set annotation shape\n    this.#currentFactory.setAnnotationMathShape(annotation, finalPoints);\n\n    // create add annotation command\n    const command = new AddAnnotationCommand(annotation, drawController);\n    // add command to undo stack\n    this.#app.addToUndoStack(command);\n    // execute command: triggers draw creation\n    command.execute();\n\n    // re-activate layer\n    konvaLayer.listening(true);\n  }\n\n  /**\n   * Get a DrawLayer position callback.\n   *\n   * TODO: check need for store item removal.\n   *\n   * @param {DrawLayer} layer The layer to update.\n   * @returns {Function} The callback.\n   */\n  #getPositionCallback(layer) {\n    const layerId = layer.getId();\n    if (typeof this.#callbackStore[layerId] === 'undefined') {\n      this.#callbackStore[layerId] = () => {\n        layer.activateCurrentPositionShapes(true);\n      };\n    }\n    return this.#callbackStore[layerId];\n  }\n\n  /**\n   * Activate a draw layer.\n   *\n   * @param {DrawLayer} drawLayer The layer to update.\n   * @param {boolean} flag The flag to activate or not.\n   */\n  #activateLayer(drawLayer, flag) {\n    drawLayer.setShapeHandler(this.#shapeHandler);\n    drawLayer.activateCurrentPositionShapes(flag);\n    // update on position change\n    if (flag) {\n      this.#app.addEventListener('positionchange',\n        this.#getPositionCallback(drawLayer)\n      );\n    } else {\n      this.#app.removeEventListener('positionchange',\n        this.#getPositionCallback(drawLayer)\n      );\n    }\n  }\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} flag The flag to activate or not.\n   */\n  activate(flag) {\n    // force cursor if deactivate\n    if (!flag) {\n      this.#shapeHandler.onMouseOutShapeGroup();\n    }\n    // update draw layers\n    const drawLayers = this.#app.getDrawLayers();\n    for (const drawLayer of drawLayers) {\n      if (typeof drawLayer !== 'undefined') {\n        this.#activateLayer(drawLayer, flag);\n      }\n    }\n    // activate newly added layers\n    this.#app.addEventListener('drawlayeradd', (event) => {\n      const drawLayers = this.#app.getDrawLayers(function (item) {\n        return item.getId() === event.layerid;\n      });\n      // should be just one\n      if (drawLayers.length === 1) {\n        this.#activateLayer(drawLayers[0], flag);\n      }\n    });\n\n  }\n\n  /**\n   * Set the tool configuration options.\n   *\n   * @param {object} options The list of shape names amd classes.\n   */\n  setOptions(options) {\n    // save the options as the shape factory list\n    this.#shapeFactoryList = options;\n  }\n\n  /**\n   * Get the type of tool options: here 'factory' since the shape\n   * list contains factories to create each possible shape.\n   *\n   * @returns {string} The type.\n   */\n  getOptionsType() {\n    return 'factory';\n  }\n\n  /**\n   * Set the tool live features: shape colour and shape name.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.autoShapeColour !== 'undefined') {\n      this.#autoShapeColour = features.autoShapeColour;\n    }\n    if (typeof features.shapeColour !== 'undefined') {\n      this.#style.setLineColour(features.shapeColour);\n      this.#autoShapeColour = false;\n    }\n    if (typeof features.shapeName !== 'undefined') {\n      // check if we have it\n      if (!this.hasShape(features.shapeName)) {\n        throw new Error('Unknown shape: \\'' + features.shapeName + '\\'');\n      }\n      this.#shapeName = features.shapeName;\n    }\n    if (typeof features.mouseOverCursor !== 'undefined') {\n      this.#shapeHandler.storeMouseOverCursor(features.mouseOverCursor);\n    }\n    if (typeof features.withScroll !== 'undefined') {\n      this.#withScroll = features.withScroll;\n    }\n    if (typeof features.blacklist !== 'undefined') {\n      this.#blacklist = features.blacklist;\n    }\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Get the list of event names that this tool can fire.\n   *\n   * @returns {string[]} The list of event names.\n   */\n  getEventNames() {\n    return [\n      'annotationupdate', 'annotationselect', 'warn'\n    ];\n  }\n\n  /**\n   * Add an event listener on the app.\n   *\n   * @param {string} type The event type.\n   * @param {Function} listener The function associated with the provided\n   *   event type.\n   */\n  addEventListener(type, listener) {\n    if (typeof this.#listeners[type] === 'undefined') {\n      this.#listeners[type] = [];\n    }\n    this.#listeners[type].push(listener);\n  }\n\n  /**\n   * Remove an event listener from the app.\n   *\n   * @param {string} type The event type.\n   * @param {Function} listener The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, listener) {\n    if (typeof this.#listeners[type] === 'undefined') {\n      return;\n    }\n    for (let i = 0; i < this.#listeners[type].length; ++i) {\n      if (this.#listeners[type][i] === listener) {\n        this.#listeners[type].splice(i, 1);\n      }\n    }\n  }\n\n  // Private Methods -----------------------------------------------------------\n\n  /**\n   * Fire an event: call all associated listeners.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    if (typeof this.#listeners[event.type] === 'undefined') {\n      return;\n    }\n    for (let i = 0; i < this.#listeners[event.type].length; ++i) {\n      this.#listeners[event.type][i](event);\n    }\n  };\n\n  /**\n   * Check if the shape is in the shape list.\n   *\n   * @param {string} name The name of the shape.\n   * @returns {boolean} True if there is a factory for the shape.\n   */\n  hasShape(name) {\n    return typeof this.#shapeFactoryList[name] !== 'undefined';\n  }\n\n} // Draw class\n","import {Annotation} from '../image/annotation';\nimport {\n  AddAnnotationCommand,\n  UpdateAnnotationCommand\n} from '../tools/drawCommands';\n//import {RoiFactory} from '../tools/roi';\nimport {ROI} from '../math/roi';\nimport {guid} from '../math/stats';\nimport {Point2D} from '../math/point';\nimport {Style} from '../gui/style';\nimport {\n  getMousePoint,\n  getTouchPoints\n} from '../gui/generic';\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {ListenerHandler} from '../utils/listen';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\nimport {LayerGroup} from '../gui/layerGroup';\nimport {Scalar2D} from '../math/scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * The magic wand namespace.\n *\n * Ref: {@link https://github.com/Tamersoul/magic-wand-js}.\n *\n * @external MagicWand\n */\nimport MagicWand from 'magic-wand-tool';\n\n/**\n * Floodfill painting tool.\n */\nexport class Floodfill {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Original variables from external library. Used as in the lib example.\n   *\n   * @type {number}\n   */\n  #blurRadius = 5;\n  /**\n   * Original variables from external library. Used as in the lib example.\n   *\n   * @type {number}\n   */\n  #simplifyTolerant = 0;\n\n  /**\n   * Original variables from external library. Used as in the lib example.\n   *\n   * @type {number}\n   */\n  #simplifyCount = 2000;\n\n  /**\n   * Canvas info.\n   *\n   * @type {object}\n   */\n  #imageInfo = null;\n\n  /**\n   * Object created by MagicWand lib containing border points.\n   *\n   * @type {object}\n   */\n  #mask = null;\n\n  /**\n   * Threshold default tolerance of the tool border.\n   *\n   * @type {number}\n   */\n  #initialthreshold = 10;\n\n  /**\n   * Threshold tolerance of the tool border.\n   *\n   * @type {number}\n   */\n  #currentthreshold = null;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Current annotation.\n   *\n   * @type {Annotation}\n   */\n  #annotation;\n\n  /**\n   * Coordinates of the fist mousedown event.\n   *\n   * @type {object}\n   */\n  #initialpoint;\n\n  /**\n   * Floodfill border.\n   *\n   * @type {object}\n   */\n  #border = null;\n\n  /**\n   * List of parent points.\n   *\n   * @type {Point2D[]}\n   */\n  #parentPoints = [];\n\n  /**\n   * Assistant variable to paint border on all slices.\n   *\n   * @type {boolean}\n   */\n  #extender = false;\n\n  /**\n   * Drawing style.\n   *\n   * @type {Style}\n   */\n  #style = new Style();\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Set extend option for painting border on all slices.\n   *\n   * @param {boolean} bool The option to set.\n   */\n  setExtend(bool) {\n    this.#extender = bool;\n  }\n\n  /**\n   * Get extend option for painting border on all slices.\n   *\n   * @returns {boolean} The actual value of of the variable to use Floodfill\n   *   on museup.\n   */\n  getExtend() {\n    return this.#extender;\n  }\n\n  /**\n   * Get (x, y) coordinates referenced to the canvas.\n   *\n   * @param {Point2D} point The start point.\n   * @param {string} divId The layer group divId.\n   * @returns {Scalar2D} The coordinates as a {x,y}.\n   */\n  #getIndex = (point, divId) => {\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const index = viewLayer.displayToPlaneIndex(point);\n    return {\n      x: index.get(0),\n      y: index.get(1)\n    };\n  };\n\n  /**\n   * Calculate border.\n   *\n   * @param {object} points The input points.\n   * @param {number} threshold The threshold of the floodfill.\n   * @param {boolean} simple Return first points or a list.\n   * @returns {Point2D[]} The parent points.\n   */\n  #calcBorder(points, threshold, simple) {\n\n    this.#parentPoints = [];\n    const image = {\n      data: this.#imageInfo.data,\n      width: this.#imageInfo.width,\n      height: this.#imageInfo.height,\n      bytes: 4\n    };\n\n    this.#mask = MagicWand.floodFill(image, points.x, points.y, threshold);\n    this.#mask = MagicWand.gaussBlurOnlyBorder(this.#mask, this.#blurRadius);\n\n    let cs = MagicWand.traceContours(this.#mask);\n    cs = MagicWand.simplifyContours(\n      cs, this.#simplifyTolerant, this.#simplifyCount);\n\n    if (cs.length > 0 && cs[0].points[0].x) {\n      if (simple) {\n        return cs[0].points;\n      }\n      for (let j = 0, icsl = cs[0].points.length; j < icsl; j++) {\n        this.#parentPoints.push(new Point2D(\n          cs[0].points[j].x,\n          cs[0].points[j].y\n        ));\n      }\n      return this.#parentPoints;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Paint Floodfill.\n   *\n   * @param {object} point The start point.\n   * @param {number} threshold The border threshold.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   * @returns {boolean} False if no border.\n   */\n  #paintBorder(point, threshold, layerGroup) {\n    // Calculate the border\n    this.#border = this.#calcBorder(point, threshold, false);\n    // Paint the border\n    if (this.#border.length !== 0) {\n      const drawLayer = layerGroup.getActiveDrawLayer();\n      const drawController = drawLayer.getDrawController();\n\n      const newMathShape = new ROI(this.#border);\n\n      let command;\n      if (typeof this.#annotation === 'undefined') {\n        // create annotation\n        this.#annotation = new Annotation();\n        this.#annotation.colour = this.#style.getLineColour();\n        this.#annotation.id = guid();\n\n        const viewLayer = layerGroup.getActiveViewLayer();\n        const viewController = viewLayer.getViewController();\n        this.#annotation.init(viewController);\n\n        this.#annotation.mathShape = newMathShape;\n        command = new AddAnnotationCommand(\n          this.#annotation,\n          drawController\n        );\n      } else {\n        // update annotation\n        const originalMathShape = this.#annotation.mathShape;\n        command = new UpdateAnnotationCommand(\n          this.#annotation,\n          {mathShape: originalMathShape},\n          {mathShape: newMathShape},\n          drawController\n        );\n      }\n\n      // add command to undo stack\n      this.#app.addToUndoStack(command);\n      // execute command: triggers draw creation\n      command.execute();\n    }\n\n    return this.#border.length !== 0;\n  }\n\n  /**\n   * Create Floodfill in all the prev and next slices while border is found.\n   *\n   * @param {number} ini The first slice to extend to.\n   * @param {number} end The last slice to extend to.\n   * @param {object} layerGroup The origin layer group.\n   */\n  extend(ini, end, layerGroup) {\n    //avoid errors\n    if (!this.#initialpoint) {\n      throw '\\'initialpoint\\' not found. User must click before use extend!';\n    }\n\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n\n    const pos = viewController.getCurrentIndex();\n    const imageSize = viewController.getImageSize();\n    const threshold = this.#currentthreshold || this.#initialthreshold;\n\n    // Iterate over the next images and paint border on each slice.\n    for (let i = pos.get(2),\n      len = end\n        ? end : imageSize.get(2);\n      i < len; i++) {\n      if (!this.#paintBorder(this.#initialpoint, threshold, layerGroup)) {\n        break;\n      }\n      viewController.incrementIndex(2);\n    }\n    viewController.setCurrentPosition(pos);\n\n    // Iterate over the prev images and paint border on each slice.\n    for (let j = pos.get(2), jl = ini ? ini : 0; j > jl; j--) {\n      if (!this.#paintBorder(this.#initialpoint, threshold, layerGroup)) {\n        break;\n      }\n      viewController.decrementIndex(2);\n    }\n    viewController.setCurrentPosition(pos);\n  }\n\n  /**\n   * Event fired when threshold change.\n   *\n   * @param {number} _value Current threshold.\n   */\n  onThresholdChange(_value) {\n    // Defaults do nothing\n  }\n\n  /**\n   * Start tool interaction.\n   *\n   * @param {Point2D} point The start point.\n   * @param {string} divId The layer group divId.\n   */\n  #start(point, divId) {\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    let drawLayer = layerGroup.getActiveDrawLayer();\n\n    if (typeof drawLayer === 'undefined') {\n      const viewLayer = layerGroup.getActiveViewLayer();\n      const refDataId = viewLayer.getDataId();\n      // create new data\n      const data = this.#app.createAnnotationData(refDataId);\n      // render (will create draw layer)\n      this.#app.addAndRenderAnnotationData(data, divId, refDataId);\n      // get draw layer\n      drawLayer = layerGroup.getActiveDrawLayer();\n      // set active to bind to toolboxController\n      layerGroup.setActiveDrawLayerByDataId(drawLayer.getDataId());\n    }\n\n    this.#imageInfo = viewLayer.getImageData();\n    if (!this.#imageInfo) {\n      logger.error('No image found');\n      return;\n    }\n\n    // update zoom scale\n    this.#style.setZoomScale(\n      drawLayer.getKonvaLayer().getAbsoluteScale());\n\n    this.#started = true;\n    this.#initialpoint = this.#getIndex(point, divId);\n    this.#paintBorder(this.#initialpoint, this.#initialthreshold, layerGroup);\n    this.onThresholdChange(this.#initialthreshold);\n  }\n\n  /**\n   * Update tool interaction.\n   *\n   * @param {Point2D} point The update point.\n   * @param {string} divId The layer group divId.\n   */\n  #update(point, divId) {\n    if (!this.#started) {\n      return;\n    }\n\n    const movedpoint = this.#getIndex(point, divId);\n    this.#currentthreshold = Math.round(Math.sqrt(\n      Math.pow((this.#initialpoint.x - movedpoint.x), 2) +\n      Math.pow((this.#initialpoint.y - movedpoint.y), 2)) / 2);\n    this.#currentthreshold = this.#currentthreshold < this.#initialthreshold\n      ? this.#initialthreshold\n      : this.#currentthreshold - this.#initialthreshold;\n\n    this.#paintBorder(\n      this.#initialpoint,\n      this.#currentthreshold,\n      this.#app.getLayerGroupByDivId(divId)\n    );\n\n    this.onThresholdChange(this.#currentthreshold);\n  }\n\n  /**\n   * Finish tool interaction.\n   */\n  #finish() {\n    if (this.#started) {\n      this.#started = false;\n    }\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#start(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#update(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    this.#finish();\n    // TODO: re-activate\n    // if (this.#extender) {\n    //   const layerDetails = getLayerDetailsFromEvent(event);\n    //   const layerGroup =\n    //     this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    //   this.extend(layerGroup);\n    // }\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} _event The mouse out event.\n   */\n  mouseout = (_event) => {\n    this.#finish();\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#start(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#update(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} _event The touch end event.\n   */\n  touchend = (_event) => {\n    this.#finish();\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'Floodfill';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} bool The flag to activate or not.\n   */\n  activate(bool) {\n    if (bool) {\n      // init with the app window scale\n      this.#style.setBaseScale(this.#app.getBaseScale());\n      // set the default to the first in the list\n      this.setFeatures({shapeColour: this.#style.getLineColour()});\n    }\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Get the list of event names that this tool can fire.\n   *\n   * @returns {Array} The list of event names.\n   */\n  getEventNames() {\n    return ['drawcreate', 'drawchange', 'drawmove', 'drawdelete'];\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  // #fireEvent = (event) => {\n  //   this.#listenerHandler.fireEvent(event);\n  // };\n\n  /**\n   * Set the tool live features: shape colour.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.shapeColour !== 'undefined') {\n      this.#style.setLineColour(features.shapeColour);\n    }\n  }\n\n} // Floodfill class\n","import {Style} from '../gui/style';\nimport {\n  getMousePoint,\n  getTouchPoints\n} from '../gui/generic';\nimport {Point2D} from '../math/point';\nimport {Path} from '../math/path';\nimport {Scissors} from '../math/scissors';\nimport {guid} from '../math/stats';\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {ListenerHandler} from '../utils/listen';\nimport {ROI} from '../math/roi';\nimport {Annotation} from '../image/annotation';\nimport {\n  AddAnnotationCommand,\n  UpdateAnnotationCommand\n} from '../tools/drawCommands';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * Livewire painting tool.\n */\nexport class Livewire {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Start point.\n   *\n   * @type {Point2D}\n   */\n  #startPoint;\n\n  /**\n   * Current annotation.\n   *\n   * @type {Annotation}\n   */\n  #annotation;\n\n  /**\n   * Drawing style.\n   *\n   * @type {Style}\n   */\n  #style = new Style();\n\n  /**\n   * Path storage. Paths are stored in reverse order.\n   *\n   * @type {Path}\n   */\n  #path = new Path();\n\n  /**\n   * Current path storage. Paths are stored in reverse order.\n   *\n   * @type {Path}\n   */\n  #currentPath = new Path();\n\n  /**\n   * List of parent points.\n   *\n   * @type {Array}\n   */\n  #parentPoints = [];\n\n  /**\n   * Tolerance.\n   *\n   * @type {number}\n   */\n  #tolerance = 5;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Clear the parent points list.\n   *\n   * @param {object} imageSize The image size.\n   */\n  #clearParentPoints(imageSize) {\n    const nrows = imageSize.get(1);\n    for (let i = 0; i < nrows; ++i) {\n      this.#parentPoints[i] = [];\n    }\n  }\n\n  /**\n   * Clear the stored paths.\n   */\n  #clearPaths() {\n    this.#path = new Path();\n    this.#currentPath = new Path();\n  }\n\n  /**\n   * Scissor representation.\n   *\n   * @type {Scissors}\n   */\n  #scissors = new Scissors();\n\n  /**\n   * Start tool interaction.\n   *\n   * @param {Point2D} point The start point.\n   * @param {string} divId The layer group divId.\n   */\n  #start(point, divId) {\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const imageSize = viewLayer.getViewController().getImageSize();\n    const index = viewLayer.displayToPlaneIndex(point);\n\n    // first time\n    if (!this.#started) {\n      this.#started = true;\n      this.#startPoint = new Point2D(index.get(0), index.get(1));\n      // clear vars\n      this.#clearPaths();\n      this.#clearParentPoints(imageSize);\n      // get draw layer\n      let drawLayer = layerGroup.getActiveDrawLayer();\n      if (typeof drawLayer === 'undefined') {\n        const viewLayer = layerGroup.getActiveViewLayer();\n        const refDataId = viewLayer.getDataId();\n        // create new data\n        const data = this.#app.createAnnotationData(refDataId);\n        // render (will create draw layer)\n        this.#app.addAndRenderAnnotationData(data, divId, refDataId);\n        // get draw layer\n        drawLayer = layerGroup.getActiveDrawLayer();\n        // set active to bind to toolboxController\n        layerGroup.setActiveDrawLayerByDataId(drawLayer.getDataId());\n      }\n      // update zoom scale\n      this.#style.setZoomScale(\n        drawLayer.getKonvaLayer().getAbsoluteScale());\n      // do the training from the first point\n      const p = {x: index.get(0), y: index.get(1)};\n      this.#scissors.doTraining(p);\n      // add the initial point to the path\n      const p0 = new Point2D(index.get(0), index.get(1));\n      this.#path.addPoint(p0);\n      this.#path.addControlPoint(p0);\n    } else {\n      const diffX = Math.abs(index.get(0) - this.#startPoint.getX());\n      const diffY = Math.abs(index.get(1) - this.#startPoint.getY());\n      // final point: at 'tolerance' of the initial point\n      if (diffX < this.#tolerance &&\n        diffY < this.#tolerance) {\n        // finish\n        this.#finishShape();\n      } else {\n        // anchor point\n        this.#path = this.#currentPath;\n        this.#clearParentPoints(imageSize);\n        const pn = {x: index.get(0), y: index.get(1)};\n        this.#scissors.doTraining(pn);\n        this.#path.addControlPoint(this.#currentPath.getPoint(0));\n      }\n    }\n  }\n\n  /**\n   * Update tool interaction.\n   *\n   * @param {Point2D} point The update point.\n   * @param {string} divId The layer group divId.\n   */\n  #update(point, divId) {\n    if (!this.#started) {\n      return;\n    }\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const index = viewLayer.displayToPlaneIndex(point);\n\n    // set the point to find the path to\n    let p = {x: index.get(0), y: index.get(1)};\n    this.#scissors.setPoint(p);\n    // do the work\n    let results = [];\n    let stop = false;\n    while (!this.#parentPoints[p.y][p.x] && !stop) {\n      results = this.#scissors.doWork();\n\n      if (results.length === 0) {\n        stop = true;\n      } else {\n        // fill parents\n        for (let i = 0; i < results.length - 1; i += 2) {\n          const _p = results[i];\n          const _q = results[i + 1];\n          this.#parentPoints[_p.y][_p.x] = _q;\n        }\n      }\n    }\n\n    // get the path\n    this.#currentPath = new Path();\n    stop = false;\n    while (p && !stop) {\n      this.#currentPath.addPoint(new Point2D(p.x, p.y));\n      if (!this.#parentPoints[p.y]) {\n        stop = true;\n      } else {\n        if (!this.#parentPoints[p.y][p.x]) {\n          stop = true;\n        } else {\n          p = this.#parentPoints[p.y][p.x];\n        }\n      }\n    }\n    this.#currentPath.appenPath(this.#path);\n\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    const drawController = drawLayer.getDrawController();\n\n    const newMathShape = new ROI(this.#currentPath.pointArray);\n\n    let command;\n    if (typeof this.#annotation === 'undefined') {\n      // create annotation\n      this.#annotation = new Annotation();\n      this.#annotation.colour = this.#style.getLineColour();\n      this.#annotation.id = guid();\n\n      const viewLayer = layerGroup.getActiveViewLayer();\n      const viewController = viewLayer.getViewController();\n      this.#annotation.init(viewController);\n\n      this.#annotation.mathShape = newMathShape;\n      command = new AddAnnotationCommand(\n        this.#annotation,\n        drawController\n      );\n    } else {\n      // update annotation\n      const originalMathShape = this.#annotation.mathShape;\n      command = new UpdateAnnotationCommand(\n        this.#annotation,\n        {mathShape: originalMathShape},\n        {mathShape: newMathShape},\n        drawController\n      );\n    }\n\n    // add command to undo stack\n    this.#app.addToUndoStack(command);\n    // execute command: triggers draw creation\n    command.execute();\n  }\n\n  /**\n   * Finish a livewire (roi) shape.\n   */\n  #finishShape() {\n    // set flag\n    this.#started = false;\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#start(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#update(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup(_event) {\n    // nothing to do\n  }\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} _event The mouse out event.\n   */\n  mouseout = (_event) => {\n    // nothing to do\n  };\n\n  /**\n   * Handle double click event.\n   *\n   * @param {object} _event The double click event.\n   */\n  dblclick = (_event) => {\n    this.#finishShape();\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#start(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#update(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} _event The touch end event.\n   */\n  touchend = (_event) => {\n    // nothing to do\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'Livewire';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} bool The flag to activate or not.\n   */\n  activate(bool) {\n    // start scissors if displayed\n    if (bool) {\n      const layerGroup = this.#app.getActiveLayerGroup();\n      const viewLayer = layerGroup.getActiveViewLayer();\n\n      //scissors = new Scissors();\n      const imageSize = viewLayer.getViewController().getImageSize();\n      this.#scissors.setDimensions(\n        imageSize.get(0),\n        imageSize.get(1));\n      this.#scissors.setData(viewLayer.getImageData().data);\n\n      // init with the app window scale\n      this.#style.setBaseScale(this.#app.getBaseScale());\n      // set the default to the first in the list\n      this.setFeatures({shapeColour: this.#style.getLineColour()});\n    }\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Get the list of event names that this tool can fire.\n   *\n   * @returns {Array} The list of event names.\n   */\n  getEventNames() {\n    return ['drawcreate', 'drawchange', 'drawmove', 'drawdelete'];\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *    event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  // #fireEvent = (event) => {\n  //   this.#listenerHandler.fireEvent(event);\n  // };\n\n  /**\n   * Set the tool live features: shape colour.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.shapeColour !== 'undefined') {\n      this.#style.setLineColour(features.shapeColour);\n    }\n  }\n\n} // Livewire class\n","import {\n  Line,\n  getPerpendicularLine,\n  getPerpendicularLineAtDistance\n} from '../math/line';\nimport {Point2D} from '../math/point';\nimport {defaults} from '../app/defaults';\nimport {logger} from '../utils/logger';\nimport {DRAW_DEBUG, getDefaultAnchor} from './drawBounds';\nimport {LabelFactory} from './labelFactory';\n\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Style} from '../gui/style';\nimport {Annotation} from '../image/annotation';\n/* eslint-enable no-unused-vars */\n\n/**\n * Arrow factory.\n */\nexport class ArrowFactory {\n\n  /**\n   * The name of the factory.\n   *\n   * @type {string}\n   */\n  #name = 'arrow';\n\n  /**\n   * The associated label factory.\n   *\n   * @type {LabelFactory}\n   */\n  #labelFactory = new LabelFactory(this.#getDefaultLabelPosition);\n\n  /**\n   * Does this factory support the input math shape.\n   *\n   * @param {object} mathShape The mathematical shape.\n   * @returns {boolean} True if supported.\n   */\n  static supports(mathShape) {\n    return mathShape instanceof Point2D;\n  }\n\n  /**\n   * Get the name of the factory.\n   *\n   * @returns {string} The name.\n   */\n  getName() {\n    return this.#name;\n  }\n\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return this.#name + '-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Set an annotation math shape from input points.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {Point2D[]} points The points.\n   */\n  setAnnotationMathShape(annotation, points) {\n    annotation.mathShape = this.#calculateMathShape(points);\n    annotation.referencePoints = [points[1]];\n    annotation.setTextExpr(this.#getDefaultLabel());\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Create a line shape to be displayed.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Style} style The drawing style.\n   * @returns {Konva.Group} The Konva group.\n   */\n  createShapeGroup(annotation, style) {\n    // konva group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.visible(true);\n    group.id(annotation.id);\n    // konva shape\n    group.add(this.#createShape(annotation, style));\n    // extras\n    const extras = this.#createShapeExtras(annotation, style);\n    for (const extra of extras) {\n      group.add(extra);\n    }\n    // konva label\n    group.add(this.#labelFactory.create(annotation, style));\n    // konva shadow (if debug)\n    if (DRAW_DEBUG) {\n      group.add(this.#getDebugShadow(annotation));\n    }\n    return group;\n  }\n\n  /**\n   * Get anchors to update a line shape.\n   *\n   * @param {Konva.Line} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Konva.Ellipse[]} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    // compensate for possible shape drag\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      points[0] + shape.x(), points[1] + shape.y(), 'begin', style\n    ));\n    anchors.push(getDefaultAnchor(\n      points[2] + shape.x(), points[3] + shape.y(), 'end', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Constrain anchor movement.\n   *\n   * @param {Konva.Ellipse} _anchor The active anchor.\n   */\n  constrainAnchorMove(_anchor) {\n    // no constraints\n  }\n\n  /**\n   * Update shape and label on anchor move taking the updated\n   *   annotation as input.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} style The application style.\n   */\n  updateShapeGroupOnAnchorMove(annotation, anchor, style) {\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n\n    // update shape and anchors\n    this.#updateShape(annotation, anchor, style);\n    // update label\n    this.updateLabelContent(annotation, group, style);\n    // update label position if default position\n    if (typeof annotation.labelPosition === 'undefined') {\n      this.#labelFactory.updatePosition(annotation, group);\n    }\n    // update shadow\n    if (DRAW_DEBUG) {\n      this.#updateDebugShadow(annotation, group);\n    }\n  }\n\n  /**\n   * Update an annotation on anchor move.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {Konva.Shape} anchor The anchor.\n   */\n  updateAnnotationOnAnchorMove(annotation, anchor) {\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n    // associated shape\n    const kline = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(kline instanceof Konva.Line)) {\n      return;\n    }\n    // find anchors\n    const begin = group.getChildren(function (node) {\n      return node.id() === 'begin';\n    })[0];\n    const end = group.getChildren(function (node) {\n      return node.id() === 'end';\n    })[0];\n\n    // math shape\n    // compensate for possible shape drag\n    const pointBegin = new Point2D(\n      begin.x() - kline.x(),\n      begin.y() - kline.y()\n    );\n    const pointEnd = new Point2D(\n      end.x() - kline.x(),\n      end.y() - kline.y()\n    );\n    annotation.mathShape = pointBegin;\n    annotation.referencePoints = [pointEnd];\n    // quantification\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Update an annotation on translation (shape move).\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {object} translation The translation.\n   */\n  updateAnnotationOnTranslation(annotation, translation) {\n    // math shape\n    const point = annotation.mathShape;\n    const endPoint = annotation.referencePoints[0];\n    const line = new Line(point, endPoint);\n\n    const begin = line.getBegin();\n    const newBegin = new Point2D(\n      begin.getX() + translation.x,\n      begin.getY() + translation.y\n    );\n    const end = line.getEnd();\n    const newEnd = new Point2D(\n      end.getX() + translation.x,\n      end.getY() + translation.y\n    );\n    annotation.mathShape = newBegin;\n    annotation.referencePoints = [newEnd];\n    // quantification\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Update the shape label.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Group} group The shape group.\n   * @param {Style} _style The application style.\n   */\n  updateLabelContent(annotation, group, _style) {\n    this.#labelFactory.updateContent(annotation, group);\n  }\n\n  /**\n   * Calculate the mathematical shape from a list of points.\n   *\n   * @param {Point2D[]} points The points that define the shape.\n   * @returns {Point2D} The mathematical shape.\n   */\n  #calculateMathShape(points) {\n    return points[0];\n  }\n\n  /**\n   * Get the default labels.\n   *\n   * @returns {object} The label list.\n   */\n  #getDefaultLabel() {\n    return defaults.labelText.arrow;\n  }\n\n  /**\n   * Creates the konva shape.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Style} style The drawing style.\n   * @returns {Konva.Line} The konva shape.\n   */\n  #createShape(annotation, style) {\n    const point = annotation.mathShape;\n    const endPoint = annotation.referencePoints[0];\n    const line = new Line(point, endPoint);\n\n    // konva line\n    const kshape = new Konva.Line({\n      points: [\n        point.getX(),\n        point.getY(),\n        endPoint.getX(),\n        endPoint.getY()\n      ],\n      stroke: annotation.colour,\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n\n    // larger hitfunc\n    const tickLen = 20;\n    const linePerp0 = getPerpendicularLine(\n      line, point, tickLen, style.getZoomScale());\n    const linePerp1 = getPerpendicularLine(\n      line, endPoint, tickLen, style.getZoomScale());\n    kshape.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\n      context.closePath();\n      context.fillStrokeShape(kshape);\n    });\n\n    return kshape;\n  }\n\n  /**\n   * Creates the konva shape extras.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Style} style The drawing style.\n   * @returns {Array} The konva shape extras.\n   */\n  #createShapeExtras(annotation, style) {\n    const point = annotation.mathShape;\n    const endPoint = annotation.referencePoints[0];\n    const line = new Line(point, endPoint);\n\n    const tickLen = 20;\n    // perpendicular line at 2*tickLen\n    const perpLine = getPerpendicularLineAtDistance(\n      line, 2 * tickLen, tickLen, style.getZoomScale());\n\n    // triangle\n    const ktriangle = new Konva.Line({\n      points: [\n        line.getBegin().getX(),\n        line.getBegin().getY(),\n        perpLine.getBegin().getX(),\n        perpLine.getBegin().getY(),\n        perpLine.getEnd().getX(),\n        perpLine.getEnd().getY(),\n      ],\n      fill: annotation.colour,\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      closed: true,\n      name: 'shape-triangle'\n    });\n\n    return [ktriangle];\n  }\n\n  /**\n   * Get the default annotation label position.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @returns {Point2D} The position.\n   */\n  #getDefaultLabelPosition(annotation) {\n    const point = annotation.mathShape;\n    return point;\n  }\n\n  /**\n   * Update shape and label on anchor move taking the updated\n   *   annotation as input.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} style The application style.\n   */\n  #updateShape(annotation, anchor, style) {\n    const point = annotation.mathShape;\n    const endPoint = annotation.referencePoints[0];\n    const line = new Line(point, endPoint);\n\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n    // associated shape\n    const kline = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(kline instanceof Konva.Line)) {\n      return;\n    }\n\n    // reset position after possible shape drag\n    kline.position({x: 0, y: 0});\n    // update shape\n    kline.points([\n      point.getX(),\n      point.getY(),\n      endPoint.getX(),\n      endPoint.getY(),\n    ]);\n\n    // associated triangle shape\n    const ktriangle = group.getChildren(function (node) {\n      return node.name() === 'shape-triangle';\n    })[0];\n    if (!(ktriangle instanceof Konva.Line)) {\n      return;\n    }\n    // find anchors\n    const begin = group.getChildren(function (node) {\n      return node.id() === 'begin';\n    })[0];\n    const end = group.getChildren(function (node) {\n      return node.id() === 'end';\n    })[0];\n\n    // update 'self' (undo case)\n    switch (anchor.id()) {\n    case 'begin':\n      begin.x(anchor.x());\n      begin.y(anchor.y());\n      break;\n    case 'end':\n      end.x(anchor.x());\n      end.y(anchor.y());\n      break;\n    default:\n      logger.error('Unhandled anchor id: ' + anchor.id());\n      break;\n    }\n\n    const tickLen = 20;\n\n    // triangle\n    const perpLine = getPerpendicularLineAtDistance(\n      line, 2 * tickLen, tickLen, style.getZoomScale());\n    ktriangle.position({x: 0, y: 0});\n    ktriangle.points([\n      line.getBegin().getX(),\n      line.getBegin().getY(),\n      perpLine.getBegin().getX(),\n      perpLine.getBegin().getY(),\n      perpLine.getEnd().getX(),\n      perpLine.getEnd().getY(),\n    ]);\n\n    // larger hitfunc\n    const linePerp0 = getPerpendicularLine(\n      line, point, tickLen, style.getZoomScale());\n    const linePerp1 = getPerpendicularLine(\n      line, endPoint, tickLen, style.getZoomScale());\n    kline.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\n      context.closePath();\n      context.fillStrokeShape(kline);\n    });\n  }\n\n  /**\n   * Get the debug shadow.\n   *\n   * @param {Annotation} _annotation The annotation to shadow.\n   * @param {Konva.Group} [_group] The associated group.\n   * @returns {Konva.Group|undefined} The shadow konva group.\n   */\n  #getDebugShadow(_annotation, _group) {\n    return;\n  }\n\n  /**\n   * Update the debug shadow.\n   *\n   * @param {Annotation} _annotation The annotation to shadow.\n   * @param {Konva.Group} _group The associated group.\n   */\n  #updateDebugShadow(_annotation, _group) {\n    // does nothing\n  }\n\n} // class ArrowFactory\n","import {Circle} from '../math/circle';\nimport {Point2D} from '../math/point';\nimport {logger} from '../utils/logger';\nimport {defaults} from '../app/defaults';\nimport {DRAW_DEBUG, getDefaultAnchor} from './drawBounds';\nimport {LabelFactory} from './labelFactory';\n\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Style} from '../gui/style';\nimport {Annotation} from '../image/annotation';\n/* eslint-enable no-unused-vars */\n\n/**\n * Circle factory.\n */\nexport class CircleFactory {\n\n  /**\n   * The name of the factory.\n   *\n   * @type {string}\n   */\n  #name = 'circle';\n\n  /**\n   * The associated label factory.\n   *\n   * @type {LabelFactory}\n   */\n  #labelFactory = new LabelFactory(this.#getDefaultLabelPosition);\n\n  /**\n   * Does this factory support the input math shape.\n   *\n   * @param {object} mathShape The mathematical shape.\n   * @returns {boolean} True if supported.\n   */\n  static supports(mathShape) {\n    return mathShape instanceof Circle;\n  }\n\n  /**\n   * Get the name of the factory.\n   *\n   * @returns {string} The name.\n   */\n  getName() {\n    return this.#name;\n  }\n\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return this.#name + '-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Set an annotation math shape from input points.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {Point2D[]} points The points.\n   */\n  setAnnotationMathShape(annotation, points) {\n    annotation.mathShape = this.#calculateMathShape(points);\n    annotation.setTextExpr(this.#getDefaultLabel());\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Create a circle shape to be displayed.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Style} style The drawing style.\n   * @returns {Konva.Group} The Konva group.\n   */\n  createShapeGroup(annotation, style) {\n    // konva group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.visible(true);\n    group.id(annotation.id);\n    // konva shape\n    group.add(this.#createShape(annotation, style));\n    // konva label\n    group.add(this.#labelFactory.create(annotation, style));\n    // konva shadow (if debug)\n    if (DRAW_DEBUG) {\n      group.add(this.#getDebugShadow(annotation));\n    }\n    return group;\n  }\n\n  /**\n   * Get anchors to update a circle shape.\n   *\n   * @param {Konva.Circle} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Konva.Ellipse[]} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const centerX = shape.x();\n    const centerY = shape.y();\n    const radius = shape.radius();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      centerX - radius, centerY, 'left', style\n    ));\n    anchors.push(getDefaultAnchor(\n      centerX + radius, centerY, 'right', style\n    ));\n    anchors.push(getDefaultAnchor(\n      centerX, centerY + radius, 'bottom', style\n    ));\n    anchors.push(getDefaultAnchor(\n      centerX, centerY - radius, 'top', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Constrain anchor movement.\n   *\n   * @param {Konva.Ellipse} anchor The active anchor.\n   */\n  constrainAnchorMove(anchor) {\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n\n    // find special points\n    const left = group.getChildren(function (node) {\n      return node.id() === 'left';\n    })[0];\n    const right = group.getChildren(function (node) {\n      return node.id() === 'right';\n    })[0];\n    const bottom = group.getChildren(function (node) {\n      return node.id() === 'bottom';\n    })[0];\n    const top = group.getChildren(function (node) {\n      return node.id() === 'top';\n    })[0];\n\n    // update 'self' (undo case) and special points\n    switch (anchor.id()) {\n    case 'left':\n      // block y\n      left.y(right.y());\n      break;\n    case 'right':\n      // block y\n      right.y(left.y());\n      break;\n    case 'bottom':\n      // block x\n      bottom.x(top.x());\n      break;\n    case 'top':\n      // block x\n      top.x(bottom.x());\n      break;\n    default :\n      logger.error('Unhandled anchor id: ' + anchor.id());\n      break;\n    }\n  }\n\n  /**\n   * Update shape and label on anchor move taking the updated\n   *   annotation as input.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} style The application style.\n   */\n  updateShapeGroupOnAnchorMove(annotation, anchor, style) {\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n\n    // update shape and anchors\n    this.#updateShape(annotation, anchor, style);\n    // update label\n    this.updateLabelContent(annotation, group, style);\n    // update label position if default position\n    if (typeof annotation.labelPosition === 'undefined') {\n      this.#labelFactory.updatePosition(annotation, group);\n    }\n    // update shadow\n    if (DRAW_DEBUG) {\n      this.#updateDebugShadow(annotation, group);\n    }\n  }\n\n  /**\n   * Update an annotation on anchor move.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {Konva.Shape} anchor The anchor.\n   */\n  updateAnnotationOnAnchorMove(annotation, anchor) {\n    // math shape\n    const circle = annotation.mathShape;\n    const center = new Point2D(\n      circle.getCenter().getX(),\n      circle.getCenter().getY()\n    );\n    const anchorPoint = new Point2D(anchor.x(), anchor.y());\n    const newRadius = center.getDistance(anchorPoint);\n    annotation.mathShape = new Circle(center, newRadius);\n    // quantification\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Update an annotation on translation (shape move).\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {object} translation The translation.\n   */\n  updateAnnotationOnTranslation(annotation, translation) {\n    // math shape\n    const circle = annotation.mathShape;\n    const center = circle.getCenter();\n    const newCenter = new Point2D(\n      center.getX() + translation.x,\n      center.getY() + translation.y\n    );\n    annotation.mathShape = new Circle(newCenter, circle.getRadius());\n    // quantification\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Update the shape label.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Group} group The shape group.\n   * @param {Style} _style The application style.\n   */\n  updateLabelContent(annotation, group, _style) {\n    this.#labelFactory.updateContent(annotation, group);\n  }\n\n  /**\n   * Calculate the mathematical shape from a list of points.\n   *\n   * @param {Point2D[]} points The points that define the shape.\n   * @returns {Circle} The mathematical shape.\n   */\n  #calculateMathShape(points) {\n    // calculate radius\n    const a = Math.abs(points[0].getX() - points[1].getX());\n    const b = Math.abs(points[0].getY() - points[1].getY());\n    const radius = Math.round(Math.sqrt(a * a + b * b));\n    // physical shape\n    return new Circle(points[0], radius);\n  }\n\n  /**\n   * Get the default labels.\n   *\n   * @returns {object} The label list.\n   */\n  #getDefaultLabel() {\n    return defaults.labelText.circle;\n  }\n\n  /**\n   * Creates the konva shape.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Style} style The drawing style.\n   * @returns {Konva.Circle} The konva shape.\n   */\n  #createShape(annotation, style) {\n    const circle = annotation.mathShape;\n    // konva circle\n    return new Konva.Circle({\n      x: circle.getCenter().getX(),\n      y: circle.getCenter().getY(),\n      radius: circle.getRadius(),\n      stroke: annotation.colour,\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n  }\n\n  /**\n   * Get the default annotation label position.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @returns {Point2D} The position.\n   */\n  #getDefaultLabelPosition(annotation) {\n    const circle = annotation.mathShape;\n    const center = circle.getCenter();\n    const radius = circle.getRadius();\n    return new Point2D(\n      center.getX() - radius,\n      center.getY() + radius,\n    );\n  }\n\n  /**\n   * Update shape and label on anchor move taking the updated\n   *   annotation as input.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} _style The application style.\n   */\n  #updateShape(annotation, anchor, _style) {\n    const circle = annotation.mathShape;\n    const center = circle.getCenter();\n    const radius = circle.getRadius();\n\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n    // associated shape\n    const kcircle = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(kcircle instanceof Konva.Circle)) {\n      return;\n    }\n    // update shape: just update the radius\n    kcircle.radius(radius);\n\n    // find anchors\n    const left = group.getChildren(function (node) {\n      return node.id() === 'left';\n    })[0];\n    const right = group.getChildren(function (node) {\n      return node.id() === 'right';\n    })[0];\n    const bottom = group.getChildren(function (node) {\n      return node.id() === 'bottom';\n    })[0];\n    const top = group.getChildren(function (node) {\n      return node.id() === 'top';\n    })[0];\n\n    const swapX = right.x() < left.x() ? -1 : 1;\n    const swapY = top.y() < bottom.y() ? 1 : -1;\n\n    // update 'self' (undo case) and other anchors\n    switch (anchor.id()) {\n    case 'left':\n      // update self\n      left.x(anchor.x());\n      // update others\n      right.x(center.getX() + swapX * radius);\n      bottom.y(center.getY() + radius);\n      top.y(center.getY() - radius);\n      break;\n    case 'right':\n      // update self\n      right.x(anchor.x());\n      // update others\n      left.x(center.getX() - swapX * radius);\n      bottom.y(center.getY() + radius);\n      top.y(center.getY() - radius);\n      break;\n    case 'bottom':\n      // update self\n      bottom.y(anchor.y());\n      // update others\n      left.x(center.getX() - radius);\n      right.x(center.getX() + radius);\n      top.y(center.getY() - swapY * radius);\n      break;\n    case 'top':\n      // update self\n      top.y(anchor.y());\n      // update others\n      left.x(center.getX() - radius);\n      right.x(center.getX() + radius);\n      bottom.y(center.getY() + swapY * radius);\n      break;\n    default :\n      logger.error('Unhandled anchor id: ' + anchor.id());\n      break;\n    }\n  }\n\n  /**\n   * Get the debug shadow.\n   *\n   * @param {Annotation} annotation The annotation to shadow.\n   * @param {Konva.Group} [group] The associated group.\n   * @returns {Konva.Group|undefined} The shadow konva group.\n   */\n  #getDebugShadow(annotation, group) {\n    const circle = annotation.mathShape;\n\n    // possible group offset\n    let offsetX = 0;\n    let offsetY = 0;\n    if (typeof group !== 'undefined') {\n      offsetX = group.x();\n      offsetY = group.y();\n    }\n    const kshadow = new Konva.Group();\n    kshadow.name('shadow');\n    const regions = circle.getRound();\n    for (let i = 0; i < regions.length; ++i) {\n      const region = regions[i];\n      const minX = region[0][0];\n      const minY = region[0][1];\n      const maxX = region[1][0];\n      const pixelLine = new Konva.Rect({\n        x: minX - offsetX,\n        y: minY - offsetY,\n        width: maxX - minX,\n        height: 1,\n        fill: 'grey',\n        strokeWidth: 0,\n        strokeScaleEnabled: false,\n        opacity: 0.3,\n        name: 'shadow-element'\n      });\n      kshadow.add(pixelLine);\n    }\n    return kshadow;\n  }\n\n  /**\n   * Update the debug shadow.\n   *\n   * @param {Annotation} annotation The annotation to shadow.\n   * @param {Konva.Group} group The associated group.\n   */\n  #updateDebugShadow(annotation, group) {\n    const kshadow = group.getChildren(function (node) {\n      return node.name() === 'shadow';\n    })[0];\n    if (typeof kshadow !== 'undefined') {\n      // remove previous\n      kshadow.destroy();\n      // add new\n      group.add(this.#getDebugShadow(annotation, group));\n    }\n  }\n\n} // class CircleFactory\n","import {Ellipse} from '../math/ellipse';\nimport {Point2D} from '../math/point';\nimport {logger} from '../utils/logger';\nimport {defaults} from '../app/defaults';\nimport {DRAW_DEBUG, getDefaultAnchor} from './drawBounds';\nimport {LabelFactory} from './labelFactory';\n\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Style} from '../gui/style';\nimport {Annotation} from '../image/annotation';\n/* eslint-enable no-unused-vars */\n\n/**\n * Ellipse factory.\n */\nexport class EllipseFactory {\n\n  /**\n   * The name of the factory.\n   *\n   * @type {string}\n   */\n  #name = 'ellipse';\n\n  /**\n   * The associated label factory.\n   *\n   * @type {LabelFactory}\n   */\n  #labelFactory = new LabelFactory(this.#getDefaultLabelPosition);\n\n  /**\n   * Does this factory support the input math shape.\n   *\n   * @param {object} mathShape The mathematical shape.\n   * @returns {boolean} True if supported.\n   */\n  static supports(mathShape) {\n    return mathShape instanceof Ellipse;\n  }\n\n  /**\n   * Get the name of the factory.\n   *\n   * @returns {string} The name.\n   */\n  getName() {\n    return this.#name;\n  }\n\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return this.#name + '-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Set an annotation math shape from input points.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {Point2D[]} points The points.\n   */\n  setAnnotationMathShape(annotation, points) {\n    annotation.mathShape = this.#calculateMathShape(points);\n    annotation.setTextExpr(this.#getDefaultLabel());\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Create an ellipse shape to be displayed.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Style} style The drawing style.\n   * @returns {Konva.Group} The Konva group.\n   */\n  createShapeGroup(annotation, style) {\n    // konva group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.visible(true);\n    group.id(annotation.id);\n    // konva shape\n    group.add(this.#createShape(annotation, style));\n    // konva label\n    group.add(this.#labelFactory.create(annotation, style));\n    // konva shadow (if debug)\n    if (DRAW_DEBUG) {\n      group.add(this.#getDebugShadow(annotation));\n    }\n    return group;\n  }\n\n  /**\n   * Get anchors to update a ellipse shape.\n   *\n   * @param {Konva.Ellipse} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Konva.Ellipse[]} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const centerX = shape.x();\n    const centerY = shape.y();\n    const radius = shape.radius();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      centerX - radius.x, centerY, 'left', style\n    ));\n    anchors.push(getDefaultAnchor(\n      centerX + radius.x, centerY, 'right', style\n    ));\n    anchors.push(getDefaultAnchor(\n      centerX, centerY + radius.y, 'bottom', style\n    ));\n    anchors.push(getDefaultAnchor(\n      centerX, centerY - radius.y, 'top', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Constrain anchor movement.\n   *\n   * @param {Konva.Ellipse} anchor The active anchor.\n   */\n  constrainAnchorMove(anchor) {\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n\n    // find special points\n    const left = group.getChildren(function (node) {\n      return node.id() === 'left';\n    })[0];\n    const right = group.getChildren(function (node) {\n      return node.id() === 'right';\n    })[0];\n    const bottom = group.getChildren(function (node) {\n      return node.id() === 'bottom';\n    })[0];\n    const top = group.getChildren(function (node) {\n      return node.id() === 'top';\n    })[0];\n\n    // update 'self' (undo case) and special points\n    switch (anchor.id()) {\n    case 'left':\n      // block y\n      left.y(right.y());\n      break;\n    case 'right':\n      // block y\n      right.y(left.y());\n      break;\n    case 'bottom':\n      // block x\n      bottom.x(top.x());\n      break;\n    case 'top':\n      // block x\n      top.x(bottom.x());\n      break;\n    default :\n      logger.error('Unhandled anchor id: ' + anchor.id());\n      break;\n    }\n  }\n\n  /**\n   * Update shape and label on anchor move taking the updated\n   *   annotation as input.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} style The application style.\n   */\n  updateShapeGroupOnAnchorMove(annotation, anchor, style) {\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n\n    // update shape and anchors\n    this.#updateShape(annotation, anchor, style);\n    // update label\n    this.updateLabelContent(annotation, group, style);\n    // update label position if default position\n    if (typeof annotation.labelPosition === 'undefined') {\n      this.#labelFactory.updatePosition(annotation, group);\n    }\n    // update shadow\n    if (DRAW_DEBUG) {\n      this.#updateDebugShadow(annotation, group);\n    }\n  }\n\n  /**\n   * Update an annotation on anchor move.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {Konva.Shape} anchor The anchor.\n   */\n  updateAnnotationOnAnchorMove(annotation, anchor) {\n    // math shape\n    const ellipse = annotation.mathShape;\n    const center = ellipse.getCenter();\n    let radiusX = ellipse.getA();\n    let radiusY = ellipse.getB();\n\n    // update 'self' (undo case) and special points\n    switch (anchor.id()) {\n    case 'left':\n      radiusX = center.getX() - anchor.x();\n      break;\n    case 'right':\n      radiusX = anchor.x() - center.getX();\n      break;\n    case 'bottom':\n      radiusY = anchor.y() - center.getY();\n      break;\n    case 'top':\n      radiusY = center.getY() - anchor.y();\n      break;\n    default :\n      logger.error('Unhandled anchor id: ' + anchor.id());\n      break;\n    }\n\n    annotation.mathShape = new Ellipse(\n      center, Math.abs(radiusX), Math.abs(radiusY));\n    // quantification\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Update an annotation on translation (shape move).\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {object} translation The translation.\n   */\n  updateAnnotationOnTranslation(annotation, translation) {\n    // math shape\n    const ellipse = annotation.mathShape;\n    const center = ellipse.getCenter();\n    const newCenter = new Point2D(\n      center.getX() + translation.x,\n      center.getY() + translation.y\n    );\n    annotation.mathShape = new Ellipse(\n      newCenter, ellipse.getA(), ellipse.getB());\n    // quantification\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Update the shape label.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Group} group The shape group.\n   * @param {Style} _style The application style.\n   */\n  updateLabelContent(annotation, group, _style) {\n    this.#labelFactory.updateContent(annotation, group);\n  }\n\n  /**\n   * Calculate the mathematical shape from a list of points.\n   *\n   * @param {Point2D[]} points The points that define the shape.\n   * @returns {Ellipse} The mathematical shape.\n   */\n  #calculateMathShape(points) {\n    // calculate radius\n    const a = Math.abs(points[0].getX() - points[1].getX());\n    const b = Math.abs(points[0].getY() - points[1].getY());\n    // physical shape\n    return new Ellipse(points[0], a, b);\n  }\n\n  /**\n   * Get the default labels.\n   *\n   * @returns {object} The label list.\n   */\n  #getDefaultLabel() {\n    return defaults.labelText.ellipse;\n  }\n\n  /**\n   * Creates the konva shape.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Style} style The drawing style.\n   * @returns {Konva.Ellipse} The konva shape.\n   */\n  #createShape(annotation, style) {\n    const ellipse = annotation.mathShape;\n    const center = ellipse.getCenter();\n    const radius = {\n      x: ellipse.getA(),\n      y: ellipse.getB()\n    };\n    // konva circle\n    return new Konva.Ellipse({\n      x: center.getX(),\n      y: center.getY(),\n      radius: radius,\n      radiusX: radius.x,\n      radiusY: radius.y,\n      stroke: annotation.colour,\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n  }\n\n  /**\n   * Get the default annotation label position.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @returns {Point2D} The position.\n   */\n  #getDefaultLabelPosition(annotation) {\n    const ellipse = annotation.mathShape;\n    const center = ellipse.getCenter();\n    return new Point2D(\n      center.getX() - ellipse.getA(),\n      center.getY() + ellipse.getB()\n    );\n  }\n\n  /**\n   * Update shape on anchor move.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} _style The application style.\n   */\n  #updateShape(annotation, anchor, _style) {\n    const ellipse = annotation.mathShape;\n    const center = ellipse.getCenter();\n    const radiusX = ellipse.getA();\n    const radiusY = ellipse.getB();\n\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n    // associated shape\n    const kellipse = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(kellipse instanceof Konva.Ellipse)) {\n      return;\n    }\n    // update shape: just update radius\n    kellipse.radius({\n      x: radiusX,\n      y: radiusY\n    });\n\n    // find anchors\n    const left = group.getChildren(function (node) {\n      return node.id() === 'left';\n    })[0];\n    const right = group.getChildren(function (node) {\n      return node.id() === 'right';\n    })[0];\n    const bottom = group.getChildren(function (node) {\n      return node.id() === 'bottom';\n    })[0];\n    const top = group.getChildren(function (node) {\n      return node.id() === 'top';\n    })[0];\n\n    const swapX = right.x() < left.x() ? -1 : 1;\n    const swapY = top.y() < bottom.y() ? 1 : -1;\n\n    // update 'self' (undo case) and other anchors\n    switch (anchor.id()) {\n    case 'left':\n      // update self\n      left.x(anchor.x());\n      // update others\n      right.x(center.getX() + swapX * radiusX);\n      bottom.y(center.getY() + radiusY);\n      top.y(center.getY() - radiusY);\n      break;\n    case 'right':\n      // update self\n      right.x(anchor.x());\n      // update others\n      left.x(center.getX() - swapX * radiusX);\n      bottom.y(center.getY() + radiusY);\n      top.y(center.getY() - radiusY);\n      break;\n    case 'bottom':\n      // update self\n      bottom.y(anchor.y());\n      // update others\n      left.x(center.getX() - radiusX);\n      right.x(center.getX() + radiusX);\n      top.y(center.getY() - swapY * radiusY);\n      break;\n    case 'top':\n      // update self\n      top.y(anchor.y());\n      // update others\n      left.x(center.getX() - radiusX);\n      right.x(center.getX() + radiusX);\n      bottom.y(center.getY() + swapY * radiusY);\n      break;\n    default :\n      logger.error('Unhandled anchor id: ' + anchor.id());\n      break;\n    }\n  }\n\n  /**\n   * Get the debug shadow.\n   *\n   * @param {Annotation} annotation The annotation to shadow.\n   * @param {Konva.Group} [group] The associated group.\n   * @returns {Konva.Group|undefined} The shadow konva group.\n   */\n  #getDebugShadow(annotation, group) {\n    const ellipse = annotation.mathShape;\n\n    // possible group offset\n    let offsetX = 0;\n    let offsetY = 0;\n    if (typeof group !== 'undefined') {\n      offsetX = group.x();\n      offsetY = group.y();\n    }\n    const kshadow = new Konva.Group();\n    kshadow.name('shadow');\n    const regions = ellipse.getRound();\n    for (let i = 0; i < regions.length; ++i) {\n      const region = regions[i];\n      const minX = region[0][0];\n      const minY = region[0][1];\n      const maxX = region[1][0];\n      const pixelLine = new Konva.Rect({\n        x: minX - offsetX,\n        y: minY - offsetY,\n        width: maxX - minX,\n        height: 1,\n        fill: 'grey',\n        strokeWidth: 0,\n        strokeScaleEnabled: false,\n        opacity: 0.3,\n        name: 'shadow-element'\n      });\n      kshadow.add(pixelLine);\n    }\n    return kshadow;\n  }\n\n  /**\n   * Update the debug shadow.\n   *\n   * @param {Annotation} annotation The annotation to shadow.\n   * @param {Konva.Group} group The associated group.\n   */\n  #updateDebugShadow(annotation, group) {\n    const kshadow = group.getChildren(function (node) {\n      return node.name() === 'shadow';\n    })[0];\n    if (typeof kshadow !== 'undefined') {\n      // remove previous\n      kshadow.destroy();\n      // add new\n      group.add(this.#getDebugShadow(annotation, group));\n    }\n  }\n\n} // class EllipseFactory\n","import {Line, getAngle} from '../math/line';\nimport {Protractor} from '../math/protractor';\nimport {Point2D} from '../math/point';\nimport {defaults} from '../app/defaults';\nimport {DRAW_DEBUG, getDefaultAnchor} from './drawBounds';\nimport {LabelFactory} from './labelFactory';\n\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Style} from '../gui/style';\nimport {Annotation} from '../image/annotation';\n/* eslint-enable no-unused-vars */\n\n/**\n * Protractor factory.\n */\nexport class ProtractorFactory {\n\n  /**\n   * The name of the factory.\n   *\n   * @type {string}\n   */\n  #name = 'protractor';\n\n  /**\n   * The associated label factory.\n   *\n   * @type {LabelFactory}\n   */\n  #labelFactory = new LabelFactory(this.#getDefaultLabelPosition);\n\n  /**\n   * Does this factory support the input math shape.\n   *\n   * @param {object} mathShape The mathematical shape.\n   * @returns {boolean} True if supported.\n   */\n  static supports(mathShape) {\n    return mathShape instanceof Protractor;\n  }\n\n  /**\n   * Get the name of the factory.\n   *\n   * @returns {string} The name.\n   */\n  getName() {\n    return this.#name;\n  }\n\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return this.#name + '-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 3;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 500;\n  }\n\n  /**\n   * Set an annotation math shape from input points.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {Point2D[]} points The points.\n   */\n  setAnnotationMathShape(annotation, points) {\n    annotation.mathShape = this.#calculateMathShape(points);\n    annotation.setTextExpr(this.#getDefaultLabel());\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Create a line shape to be displayed.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Style} style The drawing style.\n   * @returns {Konva.Group} The Konva group.\n   */\n  createShapeGroup(annotation, style) {\n    const protractor = annotation.mathShape;\n\n    // konva group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.visible(true);\n    group.id(annotation.id);\n    // konva shape\n    group.add(this.#createShape(annotation, style));\n\n    if (protractor.getLength() === this.getNPoints()) {\n      // extras\n      const extras = this.#createShapeExtras(annotation, style);\n      for (const extra of extras) {\n        group.add(extra);\n      }\n      // konva label\n      group.add(this.#labelFactory.create(annotation, style));\n      // konva shadow (if debug)\n      if (DRAW_DEBUG) {\n        group.add(this.#getDebugShadow(annotation));\n      }\n    }\n    return group;\n  }\n\n  /**\n   * Get anchors to update a line shape.\n   *\n   * @param {Konva.Line} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Konva.Ellipse[]} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    // compensate for possible shape drag\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      points[0] + shape.x(), points[1] + shape.y(), 'begin', style\n    ));\n    anchors.push(getDefaultAnchor(\n      points[2] + shape.x(), points[3] + shape.y(), 'mid', style\n    ));\n    anchors.push(getDefaultAnchor(\n      points[4] + shape.x(), points[5] + shape.y(), 'end', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Constrain anchor movement.\n   *\n   * @param {Konva.Ellipse} _anchor The active anchor.\n   */\n  constrainAnchorMove(_anchor) {\n    // no constraints\n  }\n\n  /**\n   * Update shape and label on anchor move taking the updated\n   *   annotation as input.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} style The application style.\n   */\n  updateShapeGroupOnAnchorMove(annotation, anchor, style) {\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n\n    // update shape and anchors\n    this.#updateShape(annotation, anchor, style);\n    // update label\n    this.updateLabelContent(annotation, group, style);\n    // update label position if default position\n    if (typeof annotation.labelPosition === 'undefined') {\n      this.#labelFactory.updatePosition(annotation, group);\n    }\n    // update shadow\n    if (DRAW_DEBUG) {\n      this.#updateDebugShadow(annotation, group);\n    }\n  }\n\n  /**\n   * Update an annotation on anchor move.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {Konva.Shape} anchor The anchor.\n   */\n  updateAnnotationOnAnchorMove(annotation, anchor) {\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n    // associated shape\n    const kline = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(kline instanceof Konva.Line)) {\n      return;\n    }\n    // find special points\n    const begin = group.getChildren(function (node) {\n      return node.id() === 'begin';\n    })[0];\n    const mid = group.getChildren(function (node) {\n      return node.id() === 'mid';\n    })[0];\n    const end = group.getChildren(function (node) {\n      return node.id() === 'end';\n    })[0];\n\n    // math shape\n    // compensate for possible shape drag\n    const pointBegin = new Point2D(\n      begin.x() - kline.x(),\n      begin.y() - kline.y()\n    );\n    const pointMid = new Point2D(\n      mid.x() - kline.x(),\n      mid.y() - kline.y()\n    );\n    const pointEnd = new Point2D(\n      end.x() - kline.x(),\n      end.y() - kline.y()\n    );\n    annotation.mathShape = new Protractor([pointBegin, pointMid, pointEnd]);\n    // quantification\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Update an annotation on translation (shape move).\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {object} translation The translation.\n   */\n  updateAnnotationOnTranslation(annotation, translation) {\n    // math shape\n    const protractor = annotation.mathShape;\n    const newPointList = [];\n    for (let i = 0; i < 3; ++i) {\n      newPointList.push(new Point2D(\n        protractor.getPoint(i).getX() + translation.x,\n        protractor.getPoint(i).getY() + translation.y\n      ));\n    }\n    annotation.mathShape = new Protractor(newPointList);\n    // quantification\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Update the shape label.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Group} group The shape group.\n   * @param {Style} _style The application style.\n   */\n  updateLabelContent(annotation, group, _style) {\n    this.#labelFactory.updateContent(annotation, group);\n  }\n\n  /**\n   * Calculate the mathematical shape from a list of points.\n   *\n   * @param {Point2D[]} points The points that define the shape.\n   * @returns {Protractor} The mathematical shape.\n   */\n  #calculateMathShape(points) {\n    return new Protractor(points);\n  }\n\n  /**\n   * Get the default labels.\n   *\n   * @returns {object} The label list.\n   */\n  #getDefaultLabel() {\n    return defaults.labelText.protractor;\n  }\n\n  /**\n   * Creates the konva shape.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Style} style The drawing style.\n   * @returns {Konva.Line} The konva shape.\n   */\n  #createShape(annotation, style) {\n    const protractor = annotation.mathShape;\n    const points = [];\n    for (let i = 0; i < protractor.getLength(); ++i) {\n      points.push(protractor.getPoint(i).getX());\n      points.push(protractor.getPoint(i).getY());\n    }\n\n    // konva line\n    const kshape = new Konva.Line({\n      points: points,\n      stroke: annotation.colour,\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n\n    if (protractor.getLength() === this.getNPoints()) {\n      // larger hitfunc\n      kshape.hitFunc(function (context) {\n        context.beginPath();\n        context.moveTo(\n          protractor.getPoint(0).getX(), protractor.getPoint(0).getY());\n        context.lineTo(\n          protractor.getPoint(1).getX(), protractor.getPoint(1).getY());\n        context.lineTo(\n          protractor.getPoint(2).getX(), protractor.getPoint(2).getY());\n        context.closePath();\n        context.fillStrokeShape(kshape);\n      });\n    }\n\n    return kshape;\n  }\n\n  /**\n   * Creates the konva shape extras.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Style} style The drawing style.\n   * @returns {Array} The konva shape extras.\n   */\n  #createShapeExtras(annotation, style) {\n    const protractor = annotation.mathShape;\n    const line0 = new Line(\n      protractor.getPoint(0), protractor.getPoint(1));\n    const line1 = new Line(\n      protractor.getPoint(1), protractor.getPoint(2));\n\n    let angle = getAngle(line0, line1);\n    let inclination = line0.getInclination();\n    if (angle > 180) {\n      angle = 360 - angle;\n      inclination += angle;\n    }\n\n    const radius = Math.min(line0.getLength(), line1.getLength()) * 33 / 100;\n    const karc = new Konva.Arc({\n      innerRadius: radius,\n      outerRadius: radius,\n      stroke: annotation.colour,\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      angle: angle,\n      rotation: -inclination,\n      x: protractor.getPoint(1).getX(),\n      y: protractor.getPoint(1).getY(),\n      name: 'shape-arc'\n    });\n\n    return [karc];\n  }\n\n  /**\n   * Get the default annotation label position.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @returns {Point2D} The position.\n   */\n  #getDefaultLabelPosition(annotation) {\n    const protractor = annotation.mathShape;\n    const line0 = new Line(\n      protractor.getPoint(0), protractor.getPoint(1));\n    const line1 = new Line(\n      protractor.getPoint(1), protractor.getPoint(2));\n\n    const midX =\n      (line0.getMidpoint().getX() + line1.getMidpoint().getX()) / 2;\n    const midY =\n      (line0.getMidpoint().getY() + line1.getMidpoint().getY()) / 2;\n\n    return new Point2D(\n      midX,\n      midY\n    );\n  }\n\n  /**\n   * Update shape and label on anchor move taking the updated\n   *   annotation as input.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} _style The application style.\n   */\n  #updateShape(annotation, anchor, _style) {\n    const protractor = annotation.mathShape;\n    const line0 = new Line(\n      protractor.getPoint(0), protractor.getPoint(1));\n    const line1 = new Line(\n      protractor.getPoint(1), protractor.getPoint(2));\n\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n    // associated shape\n    const kline = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(kline instanceof Konva.Line)) {\n      return;\n    }\n\n    // reset position after possible shape drag\n    kline.position({x: 0, y: 0});\n    // update shape\n    kline.points([\n      protractor.getPoint(0).getX(),\n      protractor.getPoint(0).getY(),\n      protractor.getPoint(1).getX(),\n      protractor.getPoint(1).getY(),\n      protractor.getPoint(2).getX(),\n      protractor.getPoint(2).getY()\n    ]);\n\n    // associated arc\n    const karc = group.getChildren(function (node) {\n      return node.name() === 'shape-arc';\n    })[0];\n    if (!(karc instanceof Konva.Arc)) {\n      return;\n    }\n\n    // find special points\n    const begin = group.getChildren(function (node) {\n      return node.id() === 'begin';\n    })[0];\n    const mid = group.getChildren(function (node) {\n      return node.id() === 'mid';\n    })[0];\n    const end = group.getChildren(function (node) {\n      return node.id() === 'end';\n    })[0];\n\n    // update special points\n    switch (anchor.id()) {\n    case 'begin':\n      begin.x(anchor.x());\n      begin.y(anchor.y());\n      break;\n    case 'mid':\n      mid.x(anchor.x());\n      mid.y(anchor.y());\n      break;\n    case 'end':\n      end.x(anchor.x());\n      end.y(anchor.y());\n      break;\n    }\n\n    // angle\n    let angle = getAngle(line0, line1);\n    let inclination = line0.getInclination();\n    if (angle > 180) {\n      angle = 360 - angle;\n      inclination += angle;\n    }\n\n    // arc\n    const radius = Math.min(line0.getLength(), line1.getLength()) * 33 / 100;\n    karc.innerRadius(radius);\n    karc.outerRadius(radius);\n    karc.angle(angle);\n    karc.rotation(-inclination);\n    const arcPos = {x: mid.x(), y: mid.y()};\n    karc.position(arcPos);\n\n    // larger hitfunc\n    kline.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(\n        protractor.getPoint(0).getX(), protractor.getPoint(0).getY());\n      context.lineTo(\n        protractor.getPoint(1).getX(), protractor.getPoint(1).getY());\n      context.lineTo(\n        protractor.getPoint(2).getX(), protractor.getPoint(2).getY());\n      context.closePath();\n      context.fillStrokeShape(kline);\n    });\n  }\n\n  /**\n   * Get the debug shadow.\n   *\n   * @param {Annotation} _annotation The annotation to shadow.\n   * @param {Konva.Group} [_group] The associated group.\n   * @returns {Konva.Group|undefined} The shadow konva group.\n   */\n  #getDebugShadow(_annotation, _group) {\n    return;\n  }\n\n  /**\n   * Update the debug shadow.\n   *\n   * @param {Annotation} _annotation The annotation to shadow.\n   * @param {Konva.Group} _group The associated group.\n   */\n  #updateDebugShadow(_annotation, _group) {\n    // does nothing\n  }\n\n} // class ProtractorFactory\n","import {Rectangle} from '../math/rectangle';\nimport {Point2D} from '../math/point';\nimport {logger} from '../utils/logger';\nimport {defaults} from '../app/defaults';\nimport {DRAW_DEBUG, getDefaultAnchor} from './drawBounds';\nimport {LabelFactory} from './labelFactory';\n\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Style} from '../gui/style';\nimport {Annotation} from '../image/annotation';\n/* eslint-enable no-unused-vars */\n\n/**\n * Rectangle factory.\n */\nexport class RectangleFactory {\n\n  /**\n   * The name of the factory.\n   *\n   * @type {string}\n   */\n  #name = 'rectangle';\n\n  /**\n   * The associated label factory.\n   *\n   * @type {LabelFactory}\n   */\n  #labelFactory = new LabelFactory(this.#getDefaultLabelPosition);\n\n  /**\n   * Does this factory support the input math shape.\n   *\n   * @param {object} mathShape The mathematical shape.\n   * @returns {boolean} True if supported.\n   */\n  static supports(mathShape) {\n    return mathShape instanceof Rectangle;\n  }\n\n  /**\n   * Get the name of the factory.\n   *\n   * @returns {string} The name.\n   */\n  getName() {\n    return this.#name;\n  }\n\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return this.#name + '-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Set an annotation math shape from input points.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {Point2D[]} points The points.\n   */\n  setAnnotationMathShape(annotation, points) {\n    annotation.mathShape = this.#calculateMathShape(points);\n    annotation.setTextExpr(this.#getDefaultLabel());\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Create a rectangle shape to be displayed.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Style} style The drawing style.\n   * @returns {Konva.Group} The Konva group.\n   */\n  createShapeGroup(annotation, style) {\n    // konva group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.visible(true);\n    group.id(annotation.id);\n    // konva shape\n    group.add(this.#createShape(annotation, style));\n    // konva label\n    group.add(this.#labelFactory.create(annotation, style));\n    // konva shadow (if debug)\n    if (DRAW_DEBUG) {\n      group.add(this.#getDebugShadow(annotation));\n    }\n    return group;\n  }\n\n  /**\n   * Get anchors to update a rectangle shape.\n   *\n   * @param {Konva.Rect} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Konva.Ellipse[]} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const rectX = shape.x();\n    const rectY = shape.y();\n    const rectWidth = shape.width();\n    const rectHeight = shape.height();\n\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      rectX, rectY, 'topLeft', style\n    ));\n    anchors.push(getDefaultAnchor(\n      rectX + rectWidth, rectY, 'topRight', style\n    ));\n    anchors.push(getDefaultAnchor(\n      rectX + rectWidth, rectY + rectHeight, 'bottomRight', style\n    ));\n    anchors.push(getDefaultAnchor(\n      rectX, rectY + rectHeight, 'bottomLeft', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Constrain anchor movement.\n   *\n   * @param {Konva.Ellipse} _anchor The active anchor.\n   */\n  constrainAnchorMove(_anchor) {\n    // no constraints\n  }\n\n  /**\n   * Update shape and label on anchor move taking the updated\n   *   annotation as input.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} style The application style.\n   */\n  updateShapeGroupOnAnchorMove(annotation, anchor, style) {\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n\n    // update shape and anchors\n    this.#updateShape(annotation, anchor, style);\n    // update label\n    this.updateLabelContent(annotation, group, style);\n    // update label position if default position\n    if (typeof annotation.labelPosition === 'undefined') {\n      this.#labelFactory.updatePosition(annotation, group);\n    }\n    // update shadow\n    if (DRAW_DEBUG) {\n      this.#updateDebugShadow(annotation, group);\n    }\n  }\n\n  /**\n   * Update an annotation on anchor move.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {Konva.Shape} anchor The anchor.\n   */\n  updateAnnotationOnAnchorMove(annotation, anchor) {\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n    // find anchors\n    const topLeft = group.getChildren(function (node) {\n      return node.id() === 'topLeft';\n    })[0];\n    const bottomRight = group.getChildren(function (node) {\n      return node.id() === 'bottomRight';\n    })[0];\n\n    const pointTopLeft = new Point2D(\n      topLeft.x(),\n      topLeft.y()\n    );\n    const pointBottomRight = new Point2D(\n      bottomRight.x(),\n      bottomRight.y()\n    );\n    // new rect\n    annotation.mathShape = new Rectangle(pointTopLeft, pointBottomRight);\n    // quantification\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Update an annotation on translation (shape move).\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {object} translation The translation.\n   */\n  updateAnnotationOnTranslation(annotation, translation) {\n    // math shape\n    const rectangle = annotation.mathShape;\n    const begin = rectangle.getBegin();\n    const newBegin = new Point2D(\n      begin.getX() + translation.x,\n      begin.getY() + translation.y\n    );\n    const end = rectangle.getEnd();\n    const newEnd = new Point2D(\n      end.getX() + translation.x,\n      end.getY() + translation.y\n    );\n    annotation.mathShape = new Rectangle(newBegin, newEnd);\n    // quantification\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Update the shape label content.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Group} group The shape group.\n   * @param {Style} _style The application style.\n   */\n  updateLabelContent(annotation, group, _style) {\n    this.#labelFactory.updateContent(annotation, group);\n  }\n\n  /**\n   * Calculate the mathematical shape from a list of points.\n   *\n   * @param {Point2D[]} points The points that define the shape.\n   * @returns {Rectangle} The mathematical shape.\n   */\n  #calculateMathShape(points) {\n    return new Rectangle(points[0], points[1]);\n  }\n\n  /**\n   * Get the default labels.\n   *\n   * @returns {object} The label list.\n   */\n  #getDefaultLabel() {\n    return defaults.labelText.rectangle;\n  }\n\n  /**\n   * Creates the konva shape.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Style} style The drawing style.\n   * @returns {Konva.Rect} The konva shape.\n   */\n  #createShape(annotation, style) {\n    const rectangle = annotation.mathShape;\n    // konva rect\n    return new Konva.Rect({\n      x: rectangle.getBegin().getX(),\n      y: rectangle.getBegin().getY(),\n      width: rectangle.getWidth(),\n      height: rectangle.getHeight(),\n      stroke: annotation.colour,\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n  }\n\n  /**\n   * Get the default annotation label position.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @returns {Point2D} The position.\n   */\n  #getDefaultLabelPosition(annotation) {\n    const rectangle = annotation.mathShape;\n    return new Point2D(\n      rectangle.getBegin().getX(),\n      rectangle.getEnd().getY(),\n    );\n  }\n\n  /**\n   * Update shape on anchor move.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} _style The application style.\n   */\n  #updateShape(annotation, anchor, _style) {\n    const rectangle = annotation.mathShape;\n    const begin = rectangle.getBegin();\n\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n    // associated shape\n    const krect = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(krect instanceof Konva.Rect)) {\n      return;\n    }\n    // update shape\n    krect.position({\n      x: begin.getX(),\n      y: begin.getY()\n    });\n    krect.size({\n      width: rectangle.getWidth(),\n      height: rectangle.getHeight()\n    });\n\n    // find anchors\n    const topLeft = group.getChildren(function (node) {\n      return node.id() === 'topLeft';\n    })[0];\n    const topRight = group.getChildren(function (node) {\n      return node.id() === 'topRight';\n    })[0];\n    const bottomRight = group.getChildren(function (node) {\n      return node.id() === 'bottomRight';\n    })[0];\n    const bottomLeft = group.getChildren(function (node) {\n      return node.id() === 'bottomLeft';\n    })[0];\n\n    // update 'self' (undo case) and other anchors\n    switch (anchor.id()) {\n    case 'topLeft':\n      // update self\n      topLeft.x(anchor.x());\n      topLeft.y(anchor.y());\n      // update others\n      topRight.y(anchor.y());\n      bottomLeft.x(anchor.x());\n      break;\n    case 'topRight':\n      // update self\n      topRight.x(anchor.x());\n      topRight.y(anchor.y());\n      // update others\n      topLeft.y(anchor.y());\n      bottomRight.x(anchor.x());\n      break;\n    case 'bottomRight':\n      // update self\n      bottomRight.x(anchor.x());\n      bottomRight.y(anchor.y());\n      // update others\n      bottomLeft.y(anchor.y());\n      topRight.x(anchor.x());\n      break;\n    case 'bottomLeft':\n      // update self\n      bottomLeft.x(anchor.x());\n      bottomLeft.y(anchor.y());\n      // update others\n      bottomRight.y(anchor.y());\n      topLeft.x(anchor.x());\n      break;\n    default :\n      logger.error('Unhandled anchor id: ' + anchor.id());\n      break;\n    }\n  }\n\n  /**\n   * Get the debug shadow.\n   *\n   * @param {Annotation} annotation The anootation to shadow.\n   * @param {Konva.Group} [_group] The associated group.\n   * @returns {Konva.Rect} The shadow konva rect.\n   */\n  #getDebugShadow(annotation, _group) {\n    const rectangle = annotation.mathShape;\n    const round = rectangle.getRound();\n    const rWidth = round.max.getX() - round.min.getX();\n    const rHeight = round.max.getY() - round.min.getY();\n    return new Konva.Rect({\n      x: round.min.getX(),\n      y: round.min.getY(),\n      width: rWidth,\n      height: rHeight,\n      fill: 'grey',\n      strokeWidth: 0,\n      strokeScaleEnabled: false,\n      opacity: 0.3,\n      name: 'shadow'\n    });\n  }\n\n  /**\n   * Update the debug shadow.\n   *\n   * @param {Annotation} annotation The annotation to shadow.\n   * @param {Konva.Group} group The associated group.\n   */\n  #updateDebugShadow(annotation, group) {\n    const kshadow = group.getChildren(function (node) {\n      return node.name() === 'shadow';\n    })[0];\n    if (typeof kshadow !== 'undefined') {\n      // remove previous\n      kshadow.destroy();\n      // add new\n      group.add(this.#getDebugShadow(annotation, group));\n    }\n  }\n\n} // class RectangleFactory\n","import {ROI} from '../math/roi';\nimport {Point2D} from '../math/point';\nimport {defaults} from '../app/defaults';\nimport {DRAW_DEBUG, getDefaultAnchor} from './drawBounds';\nimport {LabelFactory} from './labelFactory';\n\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Style} from '../gui/style';\nimport {Annotation} from '../image/annotation';\n/* eslint-enable no-unused-vars */\n\n/**\n * ROI factory.\n */\nexport class RoiFactory {\n\n  /**\n   * The name of the factory.\n   *\n   * @type {string}\n   */\n  #name = 'roi';\n\n  /**\n   * The associated label factory.\n   *\n   * @type {LabelFactory}\n   */\n  #labelFactory = new LabelFactory(this.#getDefaultLabelPosition);\n\n  /**\n   * Does this factory support the input math shape.\n   *\n   * @param {object} mathShape The mathematical shape.\n   * @returns {boolean} True if supported.\n   */\n  static supports(mathShape) {\n    return mathShape instanceof ROI;\n  }\n\n  /**\n   * Get the name of the factory.\n   *\n   * @returns {string} The name.\n   */\n  getName() {\n    return this.#name;\n  }\n\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return this.#name + '-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number|undefined} The number of points.\n   */\n  getNPoints() {\n    // undefined to end with double click\n    return undefined;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 100;\n  }\n\n  /**\n   * Set an annotation math shape from input points.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {Point2D[]} points The points.\n   */\n  setAnnotationMathShape(annotation, points) {\n    annotation.mathShape = this.#calculateMathShape(points);\n    annotation.setTextExpr(this.#getDefaultLabel());\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Create a roi shape to be displayed.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Style} style The drawing style.\n   * @returns {Konva.Group} The Konva group.\n   */\n  createShapeGroup(annotation, style) {\n    // konva group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.visible(true);\n    group.id(annotation.id);\n    // konva shape\n    group.add(this.#createShape(annotation, style));\n    // konva label\n    group.add(this.#labelFactory.create(annotation, style));\n    // konva shadow (if debug)\n    if (DRAW_DEBUG) {\n      group.add(this.#getDebugShadow(annotation));\n    }\n    return group;\n  }\n\n  /**\n   * Get anchors to update a roi shape.\n   *\n   * @param {Konva.Line} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Konva.Ellipse[]} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    const anchors = [];\n    let index = 0;\n    for (let i = 0; i < points.length; i = i + 2) {\n      const px = points[i] + shape.x();\n      const py = points[i + 1] + shape.y();\n      anchors.push(getDefaultAnchor(\n        px, py, index.toString(), style\n      ));\n      ++index;\n    }\n    return anchors;\n  }\n\n  /**\n   * Constrain anchor movement.\n   *\n   * @param {Konva.Ellipse} _anchor The active anchor.\n   */\n  constrainAnchorMove(_anchor) {\n    // no constraints\n  }\n\n  /**\n   * Update shape and label on anchor move taking the updated\n   *   annotation as input.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} style The application style.\n   */\n  updateShapeGroupOnAnchorMove(annotation, anchor, style) {\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n\n    // update shape and anchors\n    this.#updateShape(annotation, anchor, style);\n    // update label\n    this.updateLabelContent(annotation, group, style);\n    // update label position if default position\n    if (typeof annotation.labelPosition === 'undefined') {\n      this.#labelFactory.updatePosition(annotation, group);\n    }\n    // update shadow\n    if (DRAW_DEBUG) {\n      this.#updateDebugShadow(annotation, group);\n    }\n  }\n\n  /**\n   * Update an annotation on anchor move.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {Konva.Shape} anchor The anchor.\n   */\n  updateAnnotationOnAnchorMove(annotation, anchor) {\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n    // associated shape\n    const kroi = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(kroi instanceof Konva.Line)) {\n      return;\n    }\n\n    // update the roi point and compensate for possible drag\n    // (the anchor id is the index of the point in the main list)\n    const roi = annotation.mathShape;\n    const points = roi.getPoints().slice();\n    const newPoint = new Point2D(\n      anchor.x() - kroi.x(),\n      anchor.y() - kroi.y()\n    );\n    const index = parseInt(anchor.id(), 10);\n    points[index] = newPoint;\n\n    // new math shape\n    annotation.mathShape = new ROI(points);\n    // quantification\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Update an annotation on translation (shape move).\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {object} translation The translation.\n   */\n  updateAnnotationOnTranslation(annotation, translation) {\n    // math shape\n    const roi = annotation.mathShape;\n    const newPoints = [];\n    for (let i = 0; i < roi.getLength(); ++i) {\n      newPoints.push(new Point2D(\n        roi.getPoint(i).getX() + translation.x,\n        roi.getPoint(i).getY() + translation.y\n      ));\n    }\n    annotation.mathShape = new ROI(newPoints);\n    // quantification\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Update the shape label.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Group} group The shape group.\n   * @param {Style} _style The application style.\n   */\n  updateLabelContent(annotation, group, _style) {\n    this.#labelFactory.updateContent(annotation, group);\n  }\n\n  /**\n   * Calculate the mathematical shape from a list of points.\n   *\n   * @param {Point2D[]} points The points that define the shape.\n   * @returns {ROI} The mathematical shape.\n   */\n  #calculateMathShape(points) {\n    return new ROI(points);\n  }\n\n  /**\n   * Get the default labels.\n   *\n   * @returns {object} The label list.\n   */\n  #getDefaultLabel() {\n    return defaults.labelText.roi;\n  }\n\n  /**\n   * Creates the konva shape.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Style} style The drawing style.\n   * @returns {Konva.Line} The konva shape.\n   */\n  #createShape(annotation, style) {\n    const roi = annotation.mathShape;\n    // konva line\n    const arr = [];\n    for (let i = 0; i < roi.getLength(); ++i) {\n      arr.push(roi.getPoint(i).getX());\n      arr.push(roi.getPoint(i).getY());\n    }\n    return new Konva.Line({\n      points: arr,\n      stroke: annotation.colour,\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape',\n      closed: true\n    });\n  }\n\n  /**\n   * Get the default annotation label position.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @returns {Point2D} The position.\n   */\n  #getDefaultLabelPosition(annotation) {\n    const roi = annotation.mathShape;\n    return new Point2D(\n      roi.getPoint(0).getX(),\n      roi.getPoint(0).getY()\n    );\n  }\n\n  /**\n   * Update shape on anchor move.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} _style The application style.\n   */\n  #updateShape(annotation, anchor, _style) {\n\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n    // associated shape\n    const kroi = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(kroi instanceof Konva.Line)) {\n      return;\n    }\n    // update the roi point and compensate for possible drag\n    // (the anchor id is the index of the point in the main list)\n    const points = kroi.points();\n    const index = parseInt(anchor.id(), 10) * 2;\n    points[index] = anchor.x() - kroi.x();\n    points[index + 1] = anchor.y() - kroi.y();\n    kroi.points(points);\n\n    // update self\n    const point = group.getChildren(function (node) {\n      return node.id() === anchor.id();\n    })[0];\n\n    point.x(anchor.x());\n    point.y(anchor.y());\n  }\n\n  /**\n   * Get the debug shadow.\n   *\n   * @param {Annotation} _annotation The anootation to shadow.\n   * @param {Konva.Group} [_group] The associated group.\n   * @returns {Konva.Line} The shadow konva line.\n   */\n  #getDebugShadow(_annotation, _group) {\n    // does nothing\n    return undefined;\n  }\n\n  /**\n   * Update the debug shadow.\n   *\n   * @param {Annotation} _annotation The annotation to shadow.\n   * @param {Konva.Group} _group The associated group.\n   */\n  #updateDebugShadow(_annotation, _group) {\n    // does nothing\n  }\n\n} // class RoiFactory\n","import {Line, getPerpendicularLine} from '../math/line';\nimport {Point2D} from '../math/point';\nimport {logger} from '../utils/logger';\nimport {defaults} from '../app/defaults';\nimport {DRAW_DEBUG, getDefaultAnchor} from './drawBounds';\nimport {LabelFactory} from './labelFactory';\n\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Style} from '../gui/style';\nimport {Annotation} from '../image/annotation';\n/* eslint-enable no-unused-vars */\n\n/**\n * Ruler factory.\n */\nexport class RulerFactory {\n\n  /**\n   * The name of the factory.\n   *\n   * @type {string}\n   */\n  #name = 'ruler';\n\n  /**\n   * The associated label factory.\n   *\n   * @type {LabelFactory}\n   */\n  #labelFactory = new LabelFactory(this.#getDefaultLabelPosition);\n\n  /**\n   * Does this factory support the input math shape.\n   *\n   * @param {object} mathShape The mathematical shape.\n   * @returns {boolean} True if supported.\n   */\n  static supports(mathShape) {\n    return mathShape instanceof Line;\n  }\n\n  /**\n   * Get the name of the factory.\n   *\n   * @returns {string} The name.\n   */\n  getName() {\n    return this.#name;\n  }\n\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return this.#name + '-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Set an annotation math shape from input points.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {Point2D[]} points The points.\n   */\n  setAnnotationMathShape(annotation, points) {\n    annotation.mathShape = this.#calculateMathShape(points);\n    annotation.setTextExpr(this.#getDefaultLabel());\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Create a line shape to be displayed.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Style} style The drawing style.\n   * @returns {Konva.Group} The Konva group.\n   */\n  createShapeGroup(annotation, style) {\n    // konva group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.visible(true);\n    group.id(annotation.id);\n    // konva shape\n    group.add(this.#createShape(annotation, style));\n    // extras\n    const extras = this.#createShapeExtras(annotation, style);\n    for (const extra of extras) {\n      group.add(extra);\n    }\n    // konva label\n    group.add(this.#labelFactory.create(annotation, style));\n    // konva shadow (if debug)\n    if (DRAW_DEBUG) {\n      group.add(this.#getDebugShadow(annotation));\n    }\n    return group;\n  }\n\n  /**\n   * Get anchors to update a line shape.\n   *\n   * @param {Konva.Line} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Konva.Ellipse[]} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const points = shape.points();\n\n    // compensate for possible shape drag\n    const anchors = [];\n    anchors.push(getDefaultAnchor(\n      points[0] + shape.x(), points[1] + shape.y(), 'begin', style\n    ));\n    anchors.push(getDefaultAnchor(\n      points[2] + shape.x(), points[3] + shape.y(), 'end', style\n    ));\n    return anchors;\n  }\n\n  /**\n   * Constrain anchor movement.\n   *\n   * @param {Konva.Ellipse} _anchor The active anchor.\n   */\n  constrainAnchorMove(_anchor) {\n    // no constraints\n  }\n\n  /**\n   * Update shape and label on anchor move taking the updated\n   *   annotation as input.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} style The application style.\n   */\n  updateShapeGroupOnAnchorMove(annotation, anchor, style) {\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n\n    // update shape and anchors\n    this.#updateShape(annotation, anchor, style);\n    // update label\n    this.updateLabelContent(annotation, group, style);\n    // update label position if default position\n    if (typeof annotation.labelPosition === 'undefined') {\n      this.#labelFactory.updatePosition(annotation, group);\n    }\n    // update shadow\n    if (DRAW_DEBUG) {\n      this.#updateDebugShadow(annotation, group);\n    }\n  }\n\n  /**\n   * Update an annotation on anchor move.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {Konva.Shape} anchor The anchor.\n   */\n  updateAnnotationOnAnchorMove(annotation, anchor) {\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n    // associated shape\n    const kline = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(kline instanceof Konva.Line)) {\n      return;\n    }\n    // find anchors\n    const begin = group.getChildren(function (node) {\n      return node.id() === 'begin';\n    })[0];\n    const end = group.getChildren(function (node) {\n      return node.id() === 'end';\n    })[0];\n\n    // math shape\n    // compensate for possible shape drag\n    const pointBegin = new Point2D(\n      begin.x() - kline.x(),\n      begin.y() - kline.y()\n    );\n    const pointEnd = new Point2D(\n      end.x() - kline.x(),\n      end.y() - kline.y()\n    );\n    annotation.mathShape = new Line(pointBegin, pointEnd);\n    // quantification\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Update an annotation on translation (shape move).\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {object} translation The translation.\n   */\n  updateAnnotationOnTranslation(annotation, translation) {\n    // math shape\n    const line = annotation.mathShape;\n    const begin = line.getBegin();\n    const newBegin = new Point2D(\n      begin.getX() + translation.x,\n      begin.getY() + translation.y\n    );\n    const end = line.getEnd();\n    const newEnd = new Point2D(\n      end.getX() + translation.x,\n      end.getY() + translation.y\n    );\n    annotation.mathShape = new Line(newBegin, newEnd);\n    // quantification\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Update the shape label.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Group} group The shape group.\n   * @param {Style} _style The application style.\n   */\n  updateLabelContent(annotation, group, _style) {\n    this.#labelFactory.updateContent(annotation, group);\n  }\n\n  /**\n   * Calculate the mathematical shape from a list of points.\n   *\n   * @param {Point2D[]} points The points that define the shape.\n   * @returns {Line} The mathematical shape.\n   */\n  #calculateMathShape(points) {\n    return new Line(points[0], points[1]);\n  }\n\n  /**\n   * Get the default labels.\n   *\n   * @returns {object} The label list.\n   */\n  #getDefaultLabel() {\n    return defaults.labelText.ruler;\n  }\n\n  /**\n   * Creates the konva shape.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Style} style The drawing style.\n   * @returns {Konva.Line} The konva shape.\n   */\n  #createShape(annotation, style) {\n    const line = annotation.mathShape;\n\n    // konva line\n    const kshape = new Konva.Line({\n      points: [\n        line.getBegin().getX(),\n        line.getBegin().getY(),\n        line.getEnd().getX(),\n        line.getEnd().getY()\n      ],\n      stroke: annotation.colour,\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n\n    // larger hitfunc\n    const tickLen = 20;\n    const linePerp0 = getPerpendicularLine(\n      line, line.getBegin(), tickLen, style.getZoomScale());\n    const linePerp1 = getPerpendicularLine(\n      line, line.getEnd(), tickLen, style.getZoomScale());\n    kshape.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\n      context.closePath();\n      context.fillStrokeShape(kshape);\n    });\n\n    return kshape;\n  }\n\n  /**\n   * Creates the konva shape extras.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Style} style The drawing style.\n   * @returns {Array} The konva shape extras.\n   */\n  #createShapeExtras(annotation, style) {\n    const line = annotation.mathShape;\n\n    const tickLen = 20;\n\n    // tick begin\n    const linePerp0 = getPerpendicularLine(\n      line, line.getBegin(), tickLen, style.getZoomScale());\n    const ktick0 = new Konva.Line({\n      points: [\n        linePerp0.getBegin().getX(),\n        linePerp0.getBegin().getY(),\n        linePerp0.getEnd().getX(),\n        linePerp0.getEnd().getY()\n      ],\n      stroke: annotation.colour,\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape-tick0'\n    });\n\n    // tick end\n    const linePerp1 = getPerpendicularLine(\n      line, line.getEnd(), tickLen, style.getZoomScale());\n    const ktick1 = new Konva.Line({\n      points: [\n        linePerp1.getBegin().getX(),\n        linePerp1.getBegin().getY(),\n        linePerp1.getEnd().getX(),\n        linePerp1.getEnd().getY()\n      ],\n      stroke: annotation.colour,\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape-tick1'\n    });\n\n    return [ktick0, ktick1];\n  }\n\n  /**\n   * Get the default annotation label position.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @returns {Point2D} The position.\n   */\n  #getDefaultLabelPosition(annotation) {\n    const line = annotation.mathShape;\n    const begin = line.getBegin();\n    const end = line.getEnd();\n    // lowest point\n    let res = begin;\n    if (begin.getY() < end.getY()) {\n      res = end;\n    }\n    return res;\n  }\n\n  /**\n   * Update shape and label on anchor move taking the updated\n   *   annotation as input.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} style The application style.\n   */\n  #updateShape(annotation, anchor, style) {\n    const line = annotation.mathShape;\n\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n    // associated shape\n    const kline = group.getChildren(function (node) {\n      return node.name() === 'shape';\n    })[0];\n    if (!(kline instanceof Konva.Line)) {\n      return;\n    }\n\n    // reset position after possible shape drag\n    kline.position({x: 0, y: 0});\n    // update shape\n    kline.points([\n      line.getBegin().getX(),\n      line.getBegin().getY(),\n      line.getEnd().getX(),\n      line.getEnd().getY(),\n    ]);\n\n    // associated tick0\n    const ktick0 = group.getChildren(function (node) {\n      return node.name() === 'shape-tick0';\n    })[0];\n    if (!(ktick0 instanceof Konva.Line)) {\n      return;\n    }\n    // associated tick1\n    const ktick1 = group.getChildren(function (node) {\n      return node.name() === 'shape-tick1';\n    })[0];\n    if (!(ktick1 instanceof Konva.Line)) {\n      return;\n    }\n    // find anchors\n    const begin = group.getChildren(function (node) {\n      return node.id() === 'begin';\n    })[0];\n    const end = group.getChildren(function (node) {\n      return node.id() === 'end';\n    })[0];\n\n    // update 'self' (undo case)\n    switch (anchor.id()) {\n    case 'begin':\n      begin.x(anchor.x());\n      begin.y(anchor.y());\n      break;\n    case 'end':\n      end.x(anchor.x());\n      end.y(anchor.y());\n      break;\n    default:\n      logger.error('Unhandled anchor id: ' + anchor.id());\n      break;\n    }\n\n    // tick\n    const tickLen = 20;\n    const linePerp0 = getPerpendicularLine(\n      line, line.getBegin(), tickLen, style.getZoomScale());\n    ktick0.position({x: 0, y: 0});\n    ktick0.points([linePerp0.getBegin().getX(),\n      linePerp0.getBegin().getY(),\n      linePerp0.getEnd().getX(),\n      linePerp0.getEnd().getY()]);\n    const linePerp1 = getPerpendicularLine(\n      line, line.getEnd(), tickLen, style.getZoomScale());\n    ktick1.position({x: 0, y: 0});\n    ktick1.points([linePerp1.getBegin().getX(),\n      linePerp1.getBegin().getY(),\n      linePerp1.getEnd().getX(),\n      linePerp1.getEnd().getY()]);\n\n    // larger hitfunc\n    kline.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\n      context.closePath();\n      context.fillStrokeShape(kline);\n    });\n  }\n\n  /**\n   * Get the debug shadow.\n   *\n   * @param {Annotation} _annotation The annotation to shadow.\n   * @param {Konva.Group} [_group] The associated group.\n   * @returns {Konva.Group|undefined} The shadow konva group.\n   */\n  #getDebugShadow(_annotation, _group) {\n    return;\n  }\n\n  /**\n   * Update the debug shadow.\n   *\n   * @param {Annotation} _annotation The annotation to shadow.\n   * @param {Konva.Group} _group The associated group.\n   */\n  #updateDebugShadow(_annotation, _group) {\n    // does nothing\n  }\n\n} // class RulerFactory\n","import {logger} from '../utils/logger';\nimport {getFlags, replaceFlags} from '../utils/string';\nimport {Point} from '../math/point';\nimport {getOrientationName} from '../math/orientation';\nimport {defaultToolOptions, toolOptions} from '../tools/index';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D, Point3D} from '../math/point';\nimport {ViewController} from '../app/viewController';\nimport {PlaneHelper} from './planeHelper';\n/* eslint-enable no-unused-vars */\n\n/**\n * Image annotation.\n */\nexport class Annotation {\n  /**\n   * The ID.\n   *\n   * @type {string}\n   */\n  id;\n\n  /**\n   * The reference image SOP UID.\n   *\n   * @type {string}\n   */\n  referenceSopUID;\n\n  /**\n   * The mathematical shape.\n   *\n   * @type {object}\n   */\n  mathShape;\n\n  /**\n   * Additional points used to define the annotation.\n   *\n   * @type {Point2D[]|undefined}\n   */\n  referencePoints;\n\n  /**\n   * The color: for example 'green', '#00ff00' or 'rgb(0,255,0)'.\n   *\n   * @type {string|undefined}\n   */\n  colour;\n\n  /**\n   * Annotation quantification.\n   *\n   * @type {object|undefined}\n   */\n  quantification;\n\n  /**\n   * Text expression. Can contain variables surrounded with '{}' that will\n   * be extracted from the quantification object.\n   *\n   * @type {string|undefined}\n   */\n  textExpr;\n\n  /**\n   * Label position. If undefined, the default shape\n   *   label position will be used.\n   *\n   * @type {Point2D|undefined}\n   */\n  labelPosition;\n\n  /**\n   * The plane origin, the 3D position of index [0, 0, k].\n   *\n   * @type {Point3D|undefined}\n   */\n  planeOrigin;\n\n  /**\n   * A couple of points that help define the annotation plane.\n   *\n   * @type {Point3D[]|undefined}\n   */\n  planePoints;\n\n  /**\n   * Associated view controller: needed for quantification and label.\n   *\n   * @type {ViewController|undefined}\n   */\n  #viewController;\n\n  /**\n   * Get the orientation name for this annotation.\n   *\n   * @returns {string|undefined} The orientation name,\n   *   undefined if same as reference data.\n   */\n  getOrientationName() {\n    let res;\n    if (typeof this.planePoints !== 'undefined') {\n      const cosines = this.planePoints[1].getValues().concat(\n        this.planePoints[2].getValues()\n      );\n      res = getOrientationName(cosines);\n    }\n    return res;\n  }\n\n  /**\n   * Initialise the annotation.\n   *\n   * @param {ViewController} viewController The associated view controller.\n   */\n  init(viewController) {\n    if (typeof this.referenceSopUID !== 'undefined') {\n      logger.debug('Cannot initialise annotation twice');\n      return;\n    }\n\n    this.#viewController = viewController;\n    // set UID\n    this.referenceSopUID = viewController.getCurrentImageUid();\n    // set plane origin (not saved with file)\n    this.planeOrigin =\n      viewController.getOriginForImageUid(this.referenceSopUID);\n    // set plane points if not aquisition orientation\n    // (planePoints are saved with file if present)\n    if (!viewController.isAquisitionOrientation()) {\n      this.planePoints = viewController.getPlanePoints(\n        viewController.getCurrentScrollIndexValue()\n      );\n    }\n  }\n\n  /**\n   * Check if an input view is compatible with the annotation.\n   *\n   * @param {PlaneHelper} planeHelper The input view to check.\n   * @returns {boolean} True if compatible view.\n   */\n  isCompatibleView(planeHelper) {\n    let res = false;\n\n    // TODO: add check for referenceSopUID\n\n    if (typeof this.planePoints === 'undefined') {\n      // non oriented view\n      if (planeHelper.isAquisitionOrientation()) {\n        res = true;\n      }\n    } else {\n      // oriented view: compare cosines (independent of slice index)\n      const inputPlanePoints = planeHelper.getPlanePoints(0);\n      if (inputPlanePoints[1].equals(this.planePoints[1]) &&\n        inputPlanePoints[2].equals(this.planePoints[2])) {\n        res = true;\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Set the associated view controller if it is compatible.\n   *\n   * @param {ViewController} viewController The view controller.\n   */\n  setViewController(viewController) {\n    // check uid\n    if (!viewController.includesImageUid(this.referenceSopUID)) {\n      return;\n    }\n    // check if same view\n    if (!this.isCompatibleView(viewController.getPlaneHelper())) {\n      return;\n    }\n    this.#viewController = viewController;\n\n    // set plane origin (not saved with file)\n    this.planeOrigin =\n      viewController.getOriginForImageUid(this.referenceSopUID);\n  }\n\n  /**\n   * Get the centroid of the math shape.\n   *\n   * @returns {Point|undefined} The 3D centroid point.\n   */\n  getCentroid() {\n    let res;\n    if (typeof this.#viewController !== 'undefined' &&\n      typeof this.mathShape.getCentroid !== 'undefined') {\n      // find the slice index of the annotation origin\n      let origin = this.planeOrigin;\n      if (typeof this.planePoints !== 'undefined') {\n        origin = this.planePoints[0];\n      }\n      const originPoint =\n        new Point([origin.getX(), origin.getY(), origin.getZ()]);\n      const originIndex =\n        this.#viewController.getIndexFromPosition(originPoint);\n      const scrollIndex = this.#viewController.getScrollIndex();\n      const k = originIndex.getValues()[scrollIndex];\n\n      // shape center converted to 3D\n      const planePoint = this.mathShape.getCentroid();\n      res = this.#viewController.getPositionFromPlanePoint(planePoint, k);\n    }\n    return res;\n  }\n\n  /**\n   * Set the annotation text expression.\n   *\n   * @param {Object.<string, string>} labelText The list of label\n   *   texts indexed by modality.\n   */\n  setTextExpr(labelText) {\n    if (typeof this.#viewController !== 'undefined') {\n      const modality = this.#viewController.getModality();\n\n      if (typeof labelText[modality] !== 'undefined') {\n        this.textExpr = labelText[modality];\n      } else {\n        this.textExpr = labelText['*'];\n      }\n    } else {\n      logger.warn('Cannot set text expr without a view controller');\n    }\n  }\n\n  /**\n   * Get the annotation label text by applying the\n   *   text expression on the current quantification.\n   *\n   * @returns {string} The resulting text.\n   */\n  getText() {\n    return replaceFlags(this.textExpr, this.quantification);\n  }\n\n  /**\n   * Update the annotation quantification.\n   */\n  updateQuantification() {\n    if (typeof this.#viewController !== 'undefined' &&\n      typeof this.mathShape.quantify !== 'undefined') {\n      this.quantification = this.mathShape.quantify(\n        this.#viewController,\n        getFlags(this.textExpr));\n    }\n  }\n\n  /**\n   * Get the math shape associated draw factory.\n   *\n   * @returns {object} The factory.\n   */\n  getFactory() {\n    let fac;\n    // check in user provided factories\n    if (typeof toolOptions.draw !== 'undefined') {\n      for (const factoryName in toolOptions.draw) {\n        const factory = toolOptions.draw[factoryName];\n        if (factory.supports(this.mathShape)) {\n          fac = new factory();\n          break;\n        }\n      }\n    }\n    // check in default factories\n    if (typeof fac === 'undefined') {\n      for (const factoryName in defaultToolOptions.draw) {\n        const factory = defaultToolOptions.draw[factoryName];\n        if (factory.supports(this.mathShape)) {\n          fac = new factory();\n          break;\n        }\n      }\n    }\n    if (typeof fac === 'undefined') {\n      logger.warn('No shape factory found for math shape');\n    }\n    return fac;\n  }\n}\n","import {logger} from '../utils/logger';\nimport {Point2D} from '../math/point';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Annotation} from '../image/annotation';\n/* eslint-enable no-unused-vars */\n\n/**\n * List of interaction event names.\n */\nexport const InteractionEventNames = [\n  'mousedown',\n  'mousemove',\n  'mouseup',\n  'mouseout',\n  'wheel',\n  'dblclick',\n  'touchstart',\n  'touchmove',\n  'touchend'\n];\n\n/**\n * Overridalbe custom UI object for client defined UI.\n */\nexport const customUI = {\n  /**\n   * Open a dialogue to edit roi data. Defaults to window.prompt.\n   *\n   * @param {Annotation} annotation The roi data.\n   * @param {Function} callback The callback to launch on dialogue exit.\n   */\n  openRoiDialog(annotation, callback) {\n    const textExpr = prompt('Label', annotation.textExpr);\n    if (textExpr !== null) {\n      annotation.textExpr = textExpr;\n      callback(annotation);\n    }\n  }\n};\n\n/**\n * Get the positions (without the parent offset) of a list of touch events.\n *\n * @param {Array} touches The list of touch events.\n * @returns {Point2D[]} The list of positions of the touch events.\n */\nfunction getTouchesPositions(touches) {\n  // get the touch offset from all its parents\n  let offsetLeft = 0;\n  let offsetTop = 0;\n  if (touches.length !== 0 &&\n    typeof touches[0].target !== 'undefined') {\n    let offsetParent = touches[0].target.offsetParent;\n    while (offsetParent) {\n      if (!isNaN(offsetParent.offsetLeft)) {\n        offsetLeft += offsetParent.offsetLeft;\n      }\n      if (!isNaN(offsetParent.offsetTop)) {\n        offsetTop += offsetParent.offsetTop;\n      }\n      offsetParent = offsetParent.offsetParent;\n    }\n  } else {\n    logger.debug('No touch target offset parent.');\n  }\n  // set its position\n  const positions = [];\n  for (let i = 0; i < touches.length; ++i) {\n    positions.push(new Point2D(\n      touches[i].pageX - offsetLeft,\n      touches[i].pageY - offsetTop\n    ));\n  }\n  return positions;\n}\n\n/**\n * Get the offsets of an input touch event.\n *\n * @param {object} event The event to get the offset from.\n * @returns {Point2D[]} The array of points.\n */\nexport function getTouchPoints(event) {\n  let positions = [];\n  if (typeof event.targetTouches !== 'undefined' &&\n    event.targetTouches.length !== 0) {\n    // see https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/targetTouches\n    positions = getTouchesPositions(event.targetTouches);\n  } else if (typeof event.changedTouches !== 'undefined' &&\n    event.changedTouches.length !== 0) {\n    // see https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/changedTouches\n    positions = getTouchesPositions(event.changedTouches);\n  }\n  return positions;\n}\n\n/**\n * Get the offset of an input mouse event.\n *\n * @param {object} event The event to get the offset from.\n * @returns {Point2D} The 2D point.\n */\nexport function getMousePoint(event) {\n  // offsetX/Y: the offset in the X coordinate of the mouse pointer\n  // between that event and the padding edge of the target node\n  // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/offsetX\n  // https://caniuse.com/mdn-api_mouseevent_offsetx\n  return new Point2D(\n    event.offsetX,\n    event.offsetY\n  );\n}\n\n/**\n * Test if a canvas with the input size can be created.\n *\n * Ref:\n * - {@link https://github.com/ivmartel/dwv/issues/902},\n * - {@link https://github.com/jhildenbiddle/canvas-size/blob/v1.2.4/src/canvas-test.js}.\n *\n * @param {number} width The canvas width.\n * @param {number} height The canvas height.\n * @returns {boolean} True is the canvas can be created.\n */\nexport function canCreateCanvas(width, height) {\n  // test canvas with input size\n  const testCvs = document.createElement('canvas');\n  testCvs.width = width;\n  testCvs.height = height;\n  // crop canvas to speed up test\n  const cropCvs = document.createElement('canvas');\n  cropCvs.width = 1;\n  cropCvs.height = 1;\n  // contexts\n  const testCtx = testCvs.getContext('2d');\n  const cropCtx = cropCvs.getContext('2d');\n  // set data\n  if (testCtx) {\n    testCtx.fillRect(width - 1, height - 1, 1, 1);\n    // Render the test pixel in the bottom-right corner of the\n    // test canvas in the top-left of the 1x1 crop canvas. This\n    // dramatically reducing the time for getImageData to complete.\n    cropCtx.drawImage(testCvs, width - 1, height - 1, 1, 1, 0, 0, 1, 1);\n  }\n  // Verify image data (alpha component, Pass = 255, Fail = 0)\n  return cropCtx && cropCtx.getImageData(0, 0, 1, 1).data[3] !== 0;\n}\n","import {Index} from '../math/index';\nimport {ListenerHandler} from '../utils/listen';\nimport {viewEventNames} from '../image/view';\nimport {ViewController} from '../app/viewController';\nimport {Point2D} from '../math/point';\nimport {\n  canCreateCanvas,\n  InteractionEventNames\n} from './generic';\nimport {getScaledOffset} from './layerGroup';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Vector3D} from '../math/vector';\nimport {Point, Point3D} from '../math/point';\nimport {Scalar2D, Scalar3D} from '../math/scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * View layer.\n */\nexport class ViewLayer {\n\n  /**\n   * Container div.\n   *\n   * @type {HTMLElement}\n   */\n  #containerDiv;\n\n  /**\n   * The view controller.\n   *\n   * @type {ViewController}\n   */\n  #viewController = null;\n\n  /**\n   * The main display canvas.\n   *\n   * @type {object}\n   */\n  #canvas = null;\n\n  /**\n   * The offscreen canvas: used to store the raw, unscaled pixel data.\n   *\n   * @type {object}\n   */\n  #offscreenCanvas = null;\n\n  /**\n   * The associated CanvasRenderingContext2D.\n   *\n   * @type {object}\n   */\n  #context = null;\n\n  /**\n   * Flag to know if the current position is valid.\n   *\n   * @type {boolean}\n   */\n  #isValidPosition = true;\n\n  /**\n   * The image data array.\n   *\n   * @type {ImageData}\n   */\n  #imageData = null;\n\n  /**\n   * The layer base size as {x,y}.\n   *\n   * @type {Scalar2D}\n   */\n  #baseSize;\n\n  /**\n   * The layer base spacing as {x,y}.\n   *\n   * @type {Scalar2D}\n   */\n  #baseSpacing;\n\n  /**\n   * The layer opacity.\n   *\n   * @type {number}\n   */\n  #opacity = 1;\n\n  /**\n   * The layer scale.\n   *\n   * @type {Scalar2D}\n   */\n  #scale = {x: 1, y: 1};\n\n  /**\n   * The layer fit scale.\n   *\n   * @type {Scalar2D}\n   */\n  #fitScale = {x: 1, y: 1};\n\n  /**\n   * The layer flip scale.\n   *\n   * @type {Scalar3D}\n   */\n  #flipScale = {x: 1, y: 1, z: 1};\n\n  /**\n   * The layer offset.\n   *\n   * @type {Scalar2D}\n   */\n  #offset = {x: 0, y: 0};\n\n  /**\n   * The base layer offset.\n   *\n   * @type {Scalar2D}\n   */\n  #baseOffset = {x: 0, y: 0};\n\n  /**\n   * The view offset.\n   *\n   * @type {Scalar2D}\n   */\n  #viewOffset = {x: 0, y: 0};\n\n  /**\n   * The zoom offset.\n   *\n   * @type {Scalar2D}\n   */\n  #zoomOffset = {x: 0, y: 0};\n\n  /**\n   * The flip offset.\n   *\n   * @type {Scalar2D}\n   */\n  #flipOffset = {x: 0, y: 0};\n\n  /**\n   * Data update flag.\n   *\n   * @type {boolean}\n   */\n  #needsDataUpdate = null;\n\n  /**\n   * The associated data id.\n   *\n   * @type {string}\n   */\n  #dataId;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Image smoothing flag.\n   *\n   * See: {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/imageSmoothingEnabled}.\n   *\n   * @type {boolean}\n   */\n  #imageSmoothing = false;\n\n  /**\n   * Layer group origin.\n   *\n   * @type {Point3D}\n   */\n  #layerGroupOrigin;\n\n  /**\n   * Layer group first origin.\n   *\n   * @type {Point3D}\n   */\n  #layerGroupOrigin0;\n\n  /**\n   * @param {HTMLElement} containerDiv The layer div, its id will be used\n   *   as this layer id.\n   */\n  constructor(containerDiv) {\n    this.#containerDiv = containerDiv;\n    // specific css class name\n    this.#containerDiv.className += ' viewLayer';\n  }\n\n  /**\n   * Get the associated data id.\n   *\n   * @returns {string} The data id.\n   */\n  getDataId() {\n    return this.#dataId;\n  }\n\n  /**\n   * Get the layer scale.\n   *\n   * @returns {Scalar2D} The scale as {x,y}.\n   */\n  getScale() {\n    return this.#scale;\n  }\n\n  /**\n   * Get the layer zoom offset without the fit scale.\n   *\n   * @returns {Scalar2D} The offset as {x,y}.\n   */\n  getAbsoluteZoomOffset() {\n    return {\n      x: this.#zoomOffset.x * this.#fitScale.x,\n      y: this.#zoomOffset.y * this.#fitScale.y\n    };\n  }\n\n  /**\n   * Set the imageSmoothing flag value.\n   *\n   * @param {boolean} flag True to enable smoothing.\n   */\n  setImageSmoothing(flag) {\n    this.#imageSmoothing = flag;\n  }\n\n  /**\n   * Set the associated view.\n   *\n   * @param {object} view The view.\n   * @param {string} dataId The associated data id.\n   */\n  setView(view, dataId) {\n    this.#dataId = dataId;\n    // local listeners\n    view.addEventListener('wlchange', this.#onWLChange);\n    view.addEventListener('colourmapchange', this.#onColourMapChange);\n    view.addEventListener('positionchange', this.#onPositionChange);\n    view.addEventListener('alphafuncchange', this.#onAlphaFuncChange);\n    // view events\n    for (let j = 0; j < viewEventNames.length; ++j) {\n      view.addEventListener(viewEventNames[j], this.#fireEvent);\n    }\n    // create view controller\n    this.#viewController = new ViewController(view);\n    // bind layer and image\n    this.bindImage();\n  }\n\n  /**\n   * Get the view controller.\n   *\n   * @returns {ViewController} The controller.\n   */\n  getViewController() {\n    return this.#viewController;\n  }\n\n  /**\n   * Get the canvas image data.\n   *\n   * @returns {object} The image data.\n   */\n  getImageData() {\n    return this.#imageData;\n  }\n\n  /**\n   * Handle an image set event.\n   *\n   * @param {object} event The event.\n   * @function\n   */\n  onimageset = (event) => {\n    // event.value = [index, image]\n    if (this.#dataId === event.dataid) {\n      this.#viewController.setImage(event.value[0]);\n      this.#setBaseSize(this.#viewController.getImageSize().get2D());\n      this.#needsDataUpdate = true;\n    }\n  };\n\n  /**\n   * Bind this layer to the view image.\n   */\n  bindImage() {\n    if (this.#viewController) {\n      this.#viewController.bindImageAndLayer(this);\n    }\n  }\n\n  /**\n   * Unbind this layer to the view image.\n   */\n  unbindImage() {\n    if (this.#viewController) {\n      this.#viewController.unbindImageAndLayer(this);\n    }\n  }\n\n  /**\n   * Handle an image content change event.\n   *\n   * @param {object} event The event.\n   * @function\n   */\n  onimagecontentchange = (event) => {\n    // event.value = [index]\n    if (this.#dataId === event.dataid) {\n      this.#isValidPosition = this.#viewController.isPositionInBounds();\n      // flag update and draw\n      this.#needsDataUpdate = true;\n      this.draw();\n    }\n  };\n\n  /**\n   * Handle an image change event.\n   *\n   * @param {object} event The event.\n   * @function\n   */\n  onimagegeometrychange = (event) => {\n    // event.value = [index]\n    if (this.#dataId === event.dataid) {\n      const vcSize = this.#viewController.getImageSize().get2D();\n      if (this.#baseSize.x !== vcSize.x ||\n        this.#baseSize.y !== vcSize.y) {\n        // size changed, recalculate base offset\n        // in case origin changed\n        if (typeof this.#layerGroupOrigin !== 'undefined' &&\n          typeof this.#layerGroupOrigin0 !== 'undefined') {\n          const origin0 = this.#viewController.getOrigin();\n          const scrollOffset = this.#layerGroupOrigin0.minus(origin0);\n          const origin = this.#viewController.getOrigin(\n            this.#viewController.getCurrentPosition()\n          );\n          const planeOffset = this.#layerGroupOrigin.minus(origin);\n          this.setBaseOffset(scrollOffset, planeOffset);\n        }\n        // update base size\n        this.#setBaseSize(vcSize);\n        // flag update and draw\n        this.#needsDataUpdate = true;\n        this.draw();\n      }\n    }\n  };\n\n  // common layer methods [start] ---------------\n\n  /**\n   * Get the id of the layer.\n   *\n   * @returns {string} The string id.\n   */\n  getId() {\n    return this.#containerDiv.id;\n  }\n\n  /**\n   * Remove the HTML element from the DOM.\n   */\n  removeFromDOM() {\n    this.#containerDiv.remove();\n  }\n\n  /**\n   * Get the layer base size (without scale).\n   *\n   * @returns {Scalar2D} The size as {x,y}.\n   */\n  getBaseSize() {\n    return this.#baseSize;\n  }\n\n  /**\n   * Get the image world (mm) 2D size.\n   *\n   * @returns {Scalar2D} The 2D size as {x,y}.\n   */\n  getImageWorldSize() {\n    return this.#viewController.getImageWorldSize();\n  }\n\n  /**\n   * Get the layer opacity.\n   *\n   * @returns {number} The opacity ([0:1] range).\n   */\n  getOpacity() {\n    return this.#opacity;\n  }\n\n  /**\n   * Set the layer opacity.\n   *\n   * @param {number} alpha The opacity ([0:1] range).\n   */\n  setOpacity(alpha) {\n    if (alpha === this.#opacity) {\n      return;\n    }\n\n    this.#opacity = Math.min(Math.max(alpha, 0), 1);\n\n    /**\n     * Opacity change event.\n     *\n     * @event App#opacitychange\n     * @type {object}\n     * @property {string} type The event type.\n     */\n    const event = {\n      type: 'opacitychange',\n      value: [this.#opacity]\n    };\n    this.#fireEvent(event);\n  }\n\n  /**\n   * Add a flip offset along the layer X axis.\n   */\n  addFlipOffsetX() {\n    this.#flipOffset.x += this.#canvas.width / this.#scale.x;\n    this.#offset.x += this.#flipOffset.x;\n  }\n\n  /**\n   * Add a flip offset along the layer Y axis.\n   */\n  addFlipOffsetY() {\n    this.#flipOffset.y += this.#canvas.height / this.#scale.y;\n    this.#offset.y += this.#flipOffset.y;\n  }\n\n  /**\n   * Flip the scale along the layer X axis.\n   */\n  flipScaleX() {\n    this.#flipScale.x *= -1;\n  }\n\n  /**\n   * Flip the scale along the layer Y axis.\n   */\n  flipScaleY() {\n    this.#flipScale.y *= -1;\n  }\n\n  /**\n   * Flip the scale along the layer Z axis.\n   */\n  flipScaleZ() {\n    this.#flipScale.z *= -1;\n  }\n\n  /**\n   * Set the layer scale.\n   *\n   * @param {Scalar3D} newScale The scale as {x,y,z}.\n   * @param {Point3D} [center] The scale center.\n   */\n  setScale(newScale, center) {\n    const helper = this.#viewController.getPlaneHelper();\n    const orientedNewScale = helper.getTargetOrientedPositiveXYZ({\n      x: newScale.x * this.#flipScale.x,\n      y: newScale.y * this.#flipScale.y,\n      z: newScale.z * this.#flipScale.z,\n    });\n    const finalNewScale = {\n      x: this.#fitScale.x * orientedNewScale.x,\n      y: this.#fitScale.y * orientedNewScale.y\n    };\n\n    if (Math.abs(newScale.x) === 1 &&\n      Math.abs(newScale.y) === 1 &&\n      Math.abs(newScale.z) === 1) {\n      // reset zoom offset for scale=1\n      const resetOffset = {\n        x: this.#offset.x - this.#zoomOffset.x,\n        y: this.#offset.y - this.#zoomOffset.y\n      };\n      // store new offset\n      this.#zoomOffset = {x: 0, y: 0};\n      this.#offset = resetOffset;\n    } else {\n      if (typeof center !== 'undefined') {\n        let worldCenter = helper.getPlaneOffsetFromOffset3D({\n          x: center.getX(),\n          y: center.getY(),\n          z: center.getZ()\n        });\n        // center was obtained with viewLayer.displayToMainPlanePos\n        // compensated for baseOffset\n        // TODO: justify...\n        worldCenter = {\n          x: worldCenter.x + this.#baseOffset.x,\n          y: worldCenter.y + this.#baseOffset.y\n        };\n\n        const newOffset = getScaledOffset(\n          this.#offset, this.#scale, finalNewScale, worldCenter);\n\n        const newZoomOffset = {\n          x: this.#zoomOffset.x + newOffset.x - this.#offset.x,\n          y: this.#zoomOffset.y + newOffset.y - this.#offset.y\n        };\n        // store new offset\n        this.#zoomOffset = newZoomOffset;\n        this.#offset = newOffset;\n      }\n    }\n\n    // store new scale\n    this.#scale = finalNewScale;\n  }\n\n  /**\n   * Initialise the layer scale.\n   *\n   * @param {Scalar3D} newScale The scale as {x,y,z}.\n   * @param {Scalar2D} absoluteZoomOffset The zoom offset as {x,y}\n   *   without the fit scale (as provided by getAbsoluteZoomOffset).\n   */\n  initScale(newScale, absoluteZoomOffset) {\n    const helper = this.#viewController.getPlaneHelper();\n    const orientedNewScale = helper.getTargetOrientedPositiveXYZ({\n      x: newScale.x * this.#flipScale.x,\n      y: newScale.y * this.#flipScale.y,\n      z: newScale.z * this.#flipScale.z,\n    });\n    const finalNewScale = {\n      x: this.#fitScale.x * orientedNewScale.x,\n      y: this.#fitScale.y * orientedNewScale.y\n    };\n    this.#scale = finalNewScale;\n\n    this.#zoomOffset = {\n      x: absoluteZoomOffset.x / this.#fitScale.x,\n      y: absoluteZoomOffset.y / this.#fitScale.y\n    };\n    this.#offset = {\n      x: this.#offset.x + this.#zoomOffset.x,\n      y: this.#offset.y + this.#zoomOffset.y\n    };\n  }\n\n  /**\n   * Set the base layer offset. Updates the layer offset.\n   *\n   * @param {Vector3D} scrollOffset The scroll offset vector.\n   * @param {Vector3D} planeOffset The plane offset vector.\n   * @param {Point3D} [layerGroupOrigin] The layer group origin.\n   * @param {Point3D} [layerGroupOrigin0] The layer group first origin.\n   * @returns {boolean} True if the offset was updated.\n   */\n  setBaseOffset(\n    scrollOffset, planeOffset,\n    layerGroupOrigin, layerGroupOrigin0) {\n    const helper = this.#viewController.getPlaneHelper();\n    const scrollIndex = helper.getNativeScrollIndex();\n    const newOffset = helper.getPlaneOffsetFromOffset3D({\n      x: scrollIndex === 0 ? scrollOffset.getX() : planeOffset.getX(),\n      y: scrollIndex === 1 ? scrollOffset.getY() : planeOffset.getY(),\n      z: scrollIndex === 2 ? scrollOffset.getZ() : planeOffset.getZ(),\n    });\n    const needsUpdate = this.#baseOffset.x !== newOffset.x ||\n      this.#baseOffset.y !== newOffset.y;\n    // store layer group origins\n    if (typeof layerGroupOrigin !== 'undefined' &&\n      typeof layerGroupOrigin0 !== 'undefined') {\n      this.#layerGroupOrigin = layerGroupOrigin;\n      this.#layerGroupOrigin0 = layerGroupOrigin0;\n    }\n    // reset offset if needed\n    if (needsUpdate) {\n      this.#offset = {\n        x: this.#offset.x - this.#baseOffset.x + newOffset.x,\n        y: this.#offset.y - this.#baseOffset.y + newOffset.y\n      };\n      this.#baseOffset = newOffset;\n    }\n    return needsUpdate;\n  }\n\n  /**\n   * Set the layer offset.\n   *\n   * @param {Scalar3D} newOffset The offset as {x,y,z}.\n   */\n  setOffset(newOffset) {\n    const helper = this.#viewController.getPlaneHelper();\n    const planeNewOffset = helper.getPlaneOffsetFromOffset3D(newOffset);\n    this.#offset = {\n      x: planeNewOffset.x +\n        this.#viewOffset.x +\n        this.#baseOffset.x +\n        this.#zoomOffset.x +\n        this.#flipOffset.x,\n      y: planeNewOffset.y +\n        this.#viewOffset.y +\n        this.#baseOffset.y +\n        this.#zoomOffset.y +\n        this.#flipOffset.y\n    };\n  }\n\n  /**\n   * Transform a display position to a 2D index.\n   *\n   * @param {Point2D} point2D The input point.\n   * @returns {Index} The equivalent 2D index.\n   */\n  displayToPlaneIndex(point2D) {\n    const planePos = this.displayToPlanePos(point2D);\n    return new Index([\n      Math.floor(planePos.getX()),\n      Math.floor(planePos.getY())\n    ]);\n  }\n\n  /**\n   * Remove scale from a display position.\n   *\n   * @param {Point2D} point2D The input point.\n   * @returns {Point2D} The de-scaled point.\n   */\n  displayToPlaneScale(point2D) {\n    return new Point2D(\n      point2D.getX() / this.#scale.x,\n      point2D.getY() / this.#scale.y\n    );\n  }\n\n  /**\n   * Get a plane position from a display position.\n   *\n   * @param {Point2D} point2D The input point.\n   * @returns {Point2D} The plane position.\n   */\n  displayToPlanePos(point2D) {\n    const deScaled = this.displayToPlaneScale(point2D);\n    return new Point2D(\n      deScaled.getX() + this.#offset.x,\n      deScaled.getY() + this.#offset.y\n    );\n  }\n\n  /**\n   * Get a display position from a plane position.\n   *\n   * @param {Point2D} point2D The input point.\n   * @returns {Point2D} The display position, can be individually\n   *   undefined if out of bounds.\n   */\n  planePosToDisplay(point2D) {\n    let posX =\n      (point2D.getX() - this.#offset.x + this.#baseOffset.x) * this.#scale.x;\n    let posY =\n      (point2D.getY() - this.#offset.y + this.#baseOffset.y) * this.#scale.y;\n    // check if in bounds\n    if (posX < 0 || posX >= this.#canvas.width) {\n      posX = undefined;\n    }\n    if (posY < 0 || posY >= this.#canvas.height) {\n      posY = undefined;\n    }\n    return new Point2D(posX, posY);\n  }\n\n  /**\n   * Get a main plane position from a display position.\n   *\n   * @param {Point2D} point2D The input point.\n   * @returns {Point2D} The main plane position.\n   */\n  displayToMainPlanePos(point2D) {\n    const planePos = this.displayToPlanePos(point2D);\n    return new Point2D(\n      planePos.getX() - this.#baseOffset.x,\n      planePos.getY() - this.#baseOffset.y\n    );\n  }\n\n  /**\n   * Display the layer.\n   *\n   * @param {boolean} flag Whether to display the layer or not.\n   */\n  display(flag) {\n    this.#containerDiv.style.display = flag ? '' : 'none';\n  }\n\n  /**\n   * Check if the layer is visible.\n   *\n   * @returns {boolean} True if the layer is visible.\n   */\n  isVisible() {\n    return this.#containerDiv.style.display === '';\n  }\n\n  /**\n   * Draw the content (imageData) of the layer.\n   * The imageData variable needs to be set.\n   *\n   * @fires App#renderstart\n   * @fires App#renderend\n   */\n  draw() {\n    // skip for non valid position\n    if (!this.#isValidPosition) {\n      return;\n    }\n\n    /**\n     * Render start event.\n     *\n     * @event App#renderstart\n     * @type {object}\n     * @property {string} type The event type.\n     */\n    let event = {\n      type: 'renderstart',\n      layerid: this.getId(),\n      dataid: this.getDataId()\n    };\n    this.#fireEvent(event);\n\n    // update data if needed\n    if (this.#needsDataUpdate) {\n      this.#updateImageData();\n    }\n\n    // context opacity\n    this.#context.globalAlpha = this.#opacity;\n\n    // clear context\n    this.clear();\n\n    // draw the cached canvas on the context\n    // transform takes as input a, b, c, d, e, f to create\n    // the transform matrix (column-major order):\n    // [ a c e ]\n    // [ b d f ]\n    // [ 0 0 1 ]\n    this.#context.setTransform(\n      this.#scale.x,\n      0,\n      0,\n      this.#scale.y,\n      -1 * this.#offset.x * this.#scale.x,\n      -1 * this.#offset.y * this.#scale.y\n    );\n\n    // disable smoothing (set just before draw, could be reset by resize)\n    this.#context.imageSmoothingEnabled = this.#imageSmoothing;\n    // draw image\n    this.#context.drawImage(this.#offscreenCanvas, 0, 0);\n\n    /**\n     * Render end event.\n     *\n     * @event App#renderend\n     * @type {object}\n     * @property {string} type The event type.\n     */\n    event = {\n      type: 'renderend',\n      layerid: this.getId(),\n      dataid: this.getDataId()\n    };\n    this.#fireEvent(event);\n  }\n\n  /**\n   * Initialise the layer: set the canvas and context.\n   *\n   * @param {Scalar2D} size The image size as {x,y}.\n   * @param {Scalar2D} spacing The image spacing as {x,y}.\n   * @param {number} alpha The initial data opacity.\n   */\n  initialise(size, spacing, alpha) {\n    // set locals\n    this.#baseSpacing = spacing;\n    this.#opacity = Math.min(Math.max(alpha, 0), 1);\n\n    // create canvas\n    // (canvas size is set in fitToContainer)\n    this.#canvas = document.createElement('canvas');\n    this.#containerDiv.appendChild(this.#canvas);\n\n    // check that the getContext method exists\n    if (!this.#canvas.getContext) {\n      alert('Error: no canvas.getContext method.');\n      return;\n    }\n    // get the 2D context\n    this.#context = this.#canvas.getContext('2d');\n    if (!this.#context) {\n      alert('Error: failed to get the 2D context.');\n      return;\n    }\n\n    // off screen canvas\n    this.#offscreenCanvas = document.createElement('canvas');\n\n    // set base size: needs an existing context and off screen canvas\n    this.#setBaseSize(size);\n\n    // update data on first draw\n    this.#needsDataUpdate = true;\n  }\n\n  /**\n   * Set the base size of the layer.\n   *\n   * @param {Scalar2D} size The size as {x,y}.\n   */\n  #setBaseSize(size) {\n    // check canvas creation\n    if (!canCreateCanvas(size.x, size.y)) {\n      throw new Error('Cannot create canvas with size ' +\n        size.x + ', ' + size.y);\n    }\n\n    // set local\n    this.#baseSize = size;\n\n    // off screen canvas\n    this.#offscreenCanvas.width = this.#baseSize.x;\n    this.#offscreenCanvas.height = this.#baseSize.y;\n    // original empty image data array\n    this.#context.clearRect(0, 0, this.#baseSize.x, this.#baseSize.y);\n    this.#imageData = this.#context.createImageData(\n      this.#baseSize.x, this.#baseSize.y);\n  }\n\n  /**\n   * Fit the layer to its parent container.\n   *\n   * @param {Scalar2D} containerSize The fit size as {x,y}.\n   * @param {number} divToWorldSizeRatio The div to world size ratio.\n   * @param {Scalar2D} fitOffset The fit offset as {x,y}.\n   */\n  fitToContainer(containerSize, divToWorldSizeRatio, fitOffset) {\n    let needsDraw = false;\n\n    // set canvas size if different from previous\n    if (this.#canvas.width !== containerSize.x ||\n      this.#canvas.height !== containerSize.y) {\n      if (!canCreateCanvas(containerSize.x, containerSize.y)) {\n        throw new Error('Cannot resize canvas ' +\n          containerSize.x + ', ' + containerSize.y);\n      }\n      // canvas size change triggers canvas reset\n      this.#canvas.width = containerSize.x;\n      this.#canvas.height = containerSize.y;\n      // update draw flag\n      needsDraw = true;\n    }\n\n    // fit scale\n    const divToImageSizeRatio = {\n      x: divToWorldSizeRatio * this.#baseSpacing.x,\n      y: divToWorldSizeRatio * this.#baseSpacing.y\n    };\n    // #scale = inputScale * fitScale * flipScale\n    // flipScale does not change here, we can omit it\n    // newScale = (#scale / fitScale) * newFitScale\n    const newScale = {\n      x: this.#scale.x * divToImageSizeRatio.x / this.#fitScale.x,\n      y: this.#scale.y * divToImageSizeRatio.y / this.#fitScale.y\n    };\n\n    // set scales if different from previous\n    if (this.#scale.x !== newScale.x ||\n      this.#scale.y !== newScale.y) {\n      this.#fitScale = divToImageSizeRatio;\n      this.#scale = newScale;\n      // update draw flag\n      needsDraw = true;\n    }\n\n    // view offset\n    const newViewOffset = {\n      x: fitOffset.x / divToImageSizeRatio.x,\n      y: fitOffset.y / divToImageSizeRatio.y\n    };\n    // flip offset\n    const scaledImageSize = {\n      x: containerSize.x / divToImageSizeRatio.x,\n      y: containerSize.y / divToImageSizeRatio.y\n    };\n    const newFlipOffset = {\n      x: this.#flipOffset.x !== 0 ? scaledImageSize.x : 0,\n      y: this.#flipOffset.y !== 0 ? scaledImageSize.y : 0,\n    };\n\n    // set offsets if different from previous\n    if (this.#viewOffset.x !== newViewOffset.x ||\n      this.#viewOffset.y !== newViewOffset.y ||\n      this.#flipOffset.x !== newFlipOffset.x ||\n      this.#flipOffset.y !== newFlipOffset.y) {\n      // update global offset\n      this.#offset = {\n        x: this.#offset.x +\n          newViewOffset.x - this.#viewOffset.x +\n          newFlipOffset.x - this.#flipOffset.x,\n        y: this.#offset.y +\n          newViewOffset.y - this.#viewOffset.y +\n          newFlipOffset.y - this.#flipOffset.y,\n      };\n      // update private local offsets\n      this.#flipOffset = newFlipOffset;\n      this.#viewOffset = newViewOffset;\n      // update draw flag\n      needsDraw = true;\n    }\n\n    // draw if needed\n    if (needsDraw) {\n      this.draw();\n    }\n  }\n\n  /**\n   * Enable and listen to container interaction events.\n   */\n  bindInteraction() {\n    // allow pointer events\n    this.#containerDiv.style.pointerEvents = 'auto';\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      const eventName = names[i];\n      const passive = eventName !== 'wheel';\n      this.#containerDiv.addEventListener(\n        eventName, this.#fireEvent, {passive: passive});\n    }\n  }\n\n  /**\n   * Disable and stop listening to container interaction events.\n   */\n  unbindInteraction() {\n    // disable pointer events\n    this.#containerDiv.style.pointerEvents = 'none';\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      this.#containerDiv.removeEventListener(names[i], this.#fireEvent);\n    }\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    event.srclayerid = this.getId();\n    event.dataid = this.#dataId;\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  // common layer methods [end] ---------------\n\n  /**\n   * Update the canvas image data.\n   */\n  #updateImageData() {\n    // generate image data\n    this.#viewController.generateImageData(this.#imageData);\n    // pass the data to the off screen canvas\n    this.#offscreenCanvas.getContext('2d').putImageData(this.#imageData, 0, 0);\n    // update data flag\n    this.#needsDataUpdate = false;\n  }\n\n  /**\n   * Handle window/level change.\n   *\n   * @param {object} event The event fired when changing the window/level.\n   */\n  #onWLChange = (event) => {\n    // generate and draw if no skip flag\n    const skip = typeof event.skipGenerate !== 'undefined' &&\n      event.skipGenerate === true;\n    if (!skip) {\n      this.#needsDataUpdate = true;\n      this.draw();\n    }\n  };\n\n  /**\n   * Handle colour map change.\n   *\n   * @param {object} event The event fired when changing the colour map.\n   */\n  #onColourMapChange = (event) => {\n    const skip = typeof event.skipGenerate !== 'undefined' &&\n      event.skipGenerate === true;\n    if (!skip) {\n      this.#needsDataUpdate = true;\n      this.draw();\n    }\n  };\n\n  /**\n   * Handle position change.\n   *\n   * @param {object} event The event fired when changing the position.\n   */\n  #onPositionChange = (event) => {\n    const skip = typeof event.skipGenerate !== 'undefined' &&\n      event.skipGenerate === true;\n    if (!skip) {\n      let valid = true;\n      if (typeof event.valid !== 'undefined') {\n        valid = event.valid;\n      }\n      // clear for non valid events\n      if (!valid) {\n        // clear only once\n        if (this.#isValidPosition) {\n          this.#isValidPosition = false;\n          this.clear();\n        }\n      } else {\n        // 3D dimensions\n        const dims3D = [0, 1, 2];\n        // remove scroll index\n        const indexScrollIndex =\n          dims3D.indexOf(this.#viewController.getScrollIndex());\n        dims3D.splice(indexScrollIndex, 1);\n        // remove non scroll index from diff dims\n        const diffDims = event.diffDims.filter(function (item) {\n          return dims3D.indexOf(item) === -1;\n        });\n        // update if we have something left\n        if (diffDims.length !== 0 || !this.#isValidPosition) {\n          // reset valid flag\n          this.#isValidPosition = true;\n          // reset update flag\n          this.#needsDataUpdate = true;\n          this.draw();\n        }\n      }\n    }\n  };\n\n  /**\n   * Handle alpha function change.\n   *\n   * @param {object} event The event fired when changing the function.\n   */\n  #onAlphaFuncChange = (event) => {\n    const skip = typeof event.skipGenerate !== 'undefined' &&\n      event.skipGenerate === true;\n    if (!skip) {\n      this.#needsDataUpdate = true;\n      this.draw();\n    }\n  };\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point} position The new position.\n   * @param {Index} _index The new index.\n   * @returns {boolean} True if the position was updated.\n   */\n  setCurrentPosition(position, _index) {\n    return this.#viewController.setCurrentPosition(position);\n  }\n\n  /**\n   * Clear the context.\n   */\n  clear() {\n    // clear the context: reset the transform first\n    // store the current transformation matrix\n    this.#context.save();\n    // use the identity matrix while clearing the canvas\n    this.#context.setTransform(1, 0, 0, 1, 0, 0);\n    this.#context.clearRect(0, 0, this.#canvas.width, this.#canvas.height);\n    // restore the transform\n    this.#context.restore();\n  }\n\n} // ViewLayer class\n","import {Index} from '../math/index';\nimport {Point} from '../math/point';\nimport {Vector3D} from '../math/vector';\nimport {viewEventNames} from '../image/view';\nimport {ListenerHandler} from '../utils/listen';\nimport {logger} from '../utils/logger';\nimport {precisionRound} from '../utils/string';\nimport {ViewLayer} from './viewLayer';\nimport {DrawLayer} from './drawLayer';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Matrix33} from '../math/matrix';\nimport {Point2D, Point3D} from '../math/point';\nimport {Scalar2D, Scalar3D} from '../math/scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get the layer div id.\n *\n * @param {string} groupDivId The layer group div id.\n * @param {number} layerIndex The layer index.\n * @returns {string} A string id.\n */\nexport function getLayerDivId(groupDivId, layerIndex) {\n  return groupDivId + '-layer-' + layerIndex;\n}\n\n/**\n * Get the layer details from a div id.\n *\n * @param {string} idString The layer div id.\n * @returns {object} The layer details as {groupDivId, layerIndex, layerId}.\n */\nexport function getLayerDetailsFromLayerDivId(idString) {\n  const split = idString.split('-layer-');\n  if (split.length !== 2) {\n    logger.warn('Not the expected layer div id format...');\n  }\n  return {\n    groupDivId: split[0],\n    layerIndex: split[1],\n    layerId: idString,\n  };\n}\n\n/**\n * Get the layer details from a mouse event.\n *\n * @param {object} event The event to get the layer div id from. Expecting\n * an event origininating from a canvas inside a layer HTML div\n * with the 'layer' class and id generated with `getLayerDivId`.\n * @returns {object} The layer details as {groupDivId, layerIndex, layerId}.\n */\nexport function getLayerDetailsFromEvent(event) {\n  let res = null;\n  // get the closest element from the event target and with the 'layer' class\n  const layerDiv = event.target.closest('.layer');\n  if (layerDiv && typeof layerDiv.id !== 'undefined') {\n    res = getLayerDetailsFromLayerDivId(layerDiv.id);\n  }\n  return res;\n}\n\n/**\n * Get a scaled offset to adapt to new scale and such as the input center\n * stays at the same position.\n *\n * @param {Scalar2D} offset The previous offset as {x,y}.\n * @param {Scalar2D} scale The previous scale as {x,y}.\n * @param {Scalar2D} newScale The new scale as {x,y}.\n * @param {Scalar2D} center The scale center as {x,y}.\n * @returns {Scalar2D} The scaled offset as {x,y}.\n */\nexport function getScaledOffset(offset, scale, newScale, center) {\n  // worldPoint = indexPoint / scale + offset\n  //=> indexPoint = (worldPoint - offset ) * scale\n\n  // plane center should stay the same:\n  // indexCenter / newScale + newOffset =\n  //   indexCenter / oldScale + oldOffset\n  //=> newOffset = indexCenter / oldScale + oldOffset -\n  //     indexCenter / newScale\n  //=> newOffset = worldCenter - indexCenter / newScale\n  const indexCenter = {\n    x: (center.x - offset.x) * scale.x,\n    y: (center.y - offset.y) * scale.y\n  };\n  return {\n    x: center.x - (indexCenter.x / newScale.x),\n    y: center.y - (indexCenter.y / newScale.y)\n  };\n}\n\n/**\n * Layer group.\n *\n * - Display position: {x,y},\n * - Plane position: Index (access: get(i)),\n * - (world) Position: Point3D (access: getX, getY, getZ).\n *\n * Display -> World:\n * - planePos = viewLayer.displayToPlanePos(displayPos)\n *   -> compensate for layer scale and offset,\n * - pos = viewController.getPositionFromPlanePoint(planePos).\n *\n * World -> Display:\n * - planePos = viewController.getOffset3DFromPlaneOffset(pos)\n *   no need yet for a planePos to displayPos...\n */\nexport class LayerGroup {\n\n  /**\n   * The container div.\n   *\n   * @type {HTMLElement}\n   */\n  #containerDiv;\n\n  // jsdoc does not like\n  // @type {(ViewLayer|DrawLayer)[]}\n\n  /**\n   * List of layers.\n   *\n   * @type {Array<ViewLayer|DrawLayer>}\n   */\n  #layers = [];\n\n  /**\n   * The layer scale as {x,y,z}.\n   *\n   * @type {Scalar3D}\n   */\n  #scale = {x: 1, y: 1, z: 1};\n\n  /**\n   * The base scale as {x,y,z}: all posterior scale will be on top of this one.\n   *\n   * @type {Scalar3D}\n   */\n  #baseScale = {x: 1, y: 1, z: 1};\n\n  /**\n   * The layer offset as {x,y,z}.\n   *\n   * @type {Scalar3D}\n   */\n  #offset = {x: 0, y: 0, z: 0};\n\n  /**\n   * Active view layer index.\n   *\n   * @type {number}\n   */\n  #activeViewLayerIndex = undefined;\n\n  /**\n   * Active draw layer index.\n   *\n   * @type {number}\n   */\n  #activeDrawLayerIndex = undefined;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Flag to activate crosshair or not.\n   *\n   * @type {boolean}\n   */\n  #showCrosshair = false;\n\n  /**\n   * Crosshair HTML elements.\n   *\n   * @type {HTMLElement[]}\n   */\n  #crosshairHtmlElements = [];\n\n  /**\n   * Tooltip HTML element.\n   *\n   * @type {HTMLElement}\n   */\n  #tooltipHtmlElement;\n\n  /**\n   * The current position used for the crosshair.\n   *\n   * @type {Point}\n   */\n  #currentPosition;\n\n  /**\n   * Image smoothing flag.\n   *\n   * @type {boolean}\n   */\n  #imageSmoothing = false;\n\n  /**\n   * @param {HTMLElement} containerDiv The associated HTML div.\n   */\n  constructor(containerDiv) {\n    this.#containerDiv = containerDiv;\n  }\n\n  /**\n   * Get the showCrosshair flag.\n   *\n   * @returns {boolean} True to display the crosshair.\n   */\n  getShowCrosshair() {\n    return this.#showCrosshair;\n  }\n\n  /**\n   * Set the showCrosshair flag.\n   *\n   * @param {boolean} flag True to display the crosshair.\n   */\n  setShowCrosshair(flag) {\n    this.#showCrosshair = flag;\n    if (flag) {\n      // listen to offset and zoom change\n      this.addEventListener('offsetchange', this.#updateCrosshairOnChange);\n      this.addEventListener('zoomchange', this.#updateCrosshairOnChange);\n      // show crosshair div\n      this.#showCrosshairDiv();\n    } else {\n      // listen to offset and zoom change\n      this.removeEventListener('offsetchange', this.#updateCrosshairOnChange);\n      this.removeEventListener('zoomchange', this.#updateCrosshairOnChange);\n      // remove crosshair div\n      this.#removeCrosshairDiv();\n    }\n  }\n\n  /**\n   * Set the imageSmoothing flag value.\n   *\n   * @param {boolean} flag True to enable smoothing.\n   */\n  setImageSmoothing(flag) {\n    this.#imageSmoothing = flag;\n    // set for existing layers\n    for (const layer of this.#layers) {\n      if (layer instanceof ViewLayer) {\n        layer.setImageSmoothing(flag);\n      }\n    }\n  }\n\n  /**\n   * Update crosshair on offset or zoom change.\n   *\n   * @param {object} _event The change event.\n   */\n  #updateCrosshairOnChange = (_event) => {\n    this.#showCrosshairDiv();\n  };\n\n  /**\n   * Get the Id of the container div.\n   *\n   * @returns {string} The id of the div.\n   */\n  getDivId() {\n    return this.#containerDiv.id;\n  }\n\n  /**\n   * Get the layer scale.\n   *\n   * @returns {Scalar3D} The scale as {x,y,z}.\n   */\n  getScale() {\n    return this.#scale;\n  }\n\n  /**\n   * Get the base scale.\n   *\n   * @returns {Scalar3D} The scale as {x,y,z}.\n   */\n  getBaseScale() {\n    return this.#baseScale;\n  }\n\n\n  /**\n   * Get the added scale: the scale added to the base scale.\n   *\n   * @returns {Scalar3D} The scale as {x,y,z}.\n   */\n  getAddedScale() {\n    return {\n      x: this.#scale.x / this.#baseScale.x,\n      y: this.#scale.y / this.#baseScale.y,\n      z: this.#scale.z / this.#baseScale.z\n    };\n  }\n\n  /**\n   * Get the layer offset.\n   *\n   * @returns {Scalar3D} The offset as {x,y,z}.\n   */\n  getOffset() {\n    return this.#offset;\n  }\n\n  /**\n   * Get the number of layers handled by this class.\n   *\n   * @returns {number} The number of layers.\n   */\n  getNumberOfLayers() {\n    let count = 0;\n    this.#layers.forEach(item => {\n      if (typeof item !== 'undefined') {\n        count++;\n      }\n    });\n    return count;\n  }\n\n  /**\n   * Check if this layerGroup contains a layer with the input id.\n   *\n   * @param {string} id The layer id to look for.\n   * @returns {boolean} True if this group contains\n   *   a layer with the input id.\n   */\n  includes(id) {\n    if (typeof id === 'undefined') {\n      return false;\n    }\n    for (const layer of this.#layers) {\n      if (typeof layer !== 'undefined' &&\n        layer.getId() === id) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get a list of view layers according to an input callback function.\n   *\n   * @param {Function} [callbackFn] A function that takes\n   *   a ViewLayer as input and returns a boolean. If undefined,\n   *   returns all view layers.\n   * @returns {ViewLayer[]} The layers that\n   *   satisfy the callbackFn.\n   */\n  getViewLayers(callbackFn) {\n    if (typeof callbackFn === 'undefined') {\n      callbackFn = function () {\n        return true;\n      };\n    }\n    const res = [];\n    for (const layer of this.#layers) {\n      if (layer instanceof ViewLayer &&\n        callbackFn(layer)) {\n        res.push(layer);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Test if one of the view layers satisfies an input callbackFn.\n   *\n   * @param {Function} callbackFn A function that takes\n   *   a ViewLayer as input and returns a boolean.\n   * @returns {boolean} True if one of the ViewLayers\n   *   satisfies the callbackFn.\n   */\n  someViewLayer(callbackFn) {\n    let hasOne = false;\n    for (const layer of this.#layers) {\n      if (layer instanceof ViewLayer &&\n        callbackFn(layer)) {\n        hasOne = true;\n        break;\n      }\n    }\n    return hasOne;\n  }\n\n  /**\n   * Get a list of draw layers according to an input callback function.\n   *\n   * @param {Function} [callbackFn] A function that takes\n   *   a DrawLayer as input and returns a boolean. If undefined,\n   *   returns all draw layers.\n   * @returns {DrawLayer[]} The layers that\n   *   satisfy the callbackFn.\n   */\n  getDrawLayers(callbackFn) {\n    if (typeof callbackFn === 'undefined') {\n      callbackFn = function () {\n        return true;\n      };\n    }\n    const res = [];\n    for (const layer of this.#layers) {\n      if (layer instanceof DrawLayer &&\n        callbackFn(layer)) {\n        res.push(layer);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Get the number of view layers handled by this class.\n   *\n   * @returns {number} The number of layers.\n   */\n  getNumberOfViewLayers() {\n    let count = 0;\n    this.#layers.forEach(item => {\n      if (typeof item !== 'undefined' &&\n        item instanceof ViewLayer) {\n        count++;\n      }\n    });\n    return count;\n  }\n\n  /**\n   * Get the active image layer.\n   *\n   * @returns {ViewLayer|undefined} The layer.\n   */\n  getActiveViewLayer() {\n    let layer;\n    if (typeof this.#activeViewLayerIndex !== 'undefined') {\n      const tmpLayer = this.#layers[this.#activeViewLayerIndex];\n      if (tmpLayer instanceof ViewLayer) {\n        layer = tmpLayer;\n      }\n    }\n    return layer;\n  }\n\n  /**\n   * Get the base view layer.\n   *\n   * @returns {ViewLayer|undefined} The layer.\n   */\n  getBaseViewLayer() {\n    // use first layer as base for calculating position and\n    // line sizes\n    let baseLayer;\n    for (const layer of this.#layers) {\n      if (layer instanceof ViewLayer) {\n        baseLayer = layer;\n        break;\n      }\n    }\n    if (typeof baseLayer === 'undefined') {\n      logger.warn('No layer found');\n      return;\n    }\n    return baseLayer;\n  }\n\n  /**\n   * Get the view layers associated to a data id.\n   *\n   * @param {string} dataId The data id.\n   * @returns {ViewLayer[]} The layers.\n   */\n  getViewLayersByDataId(dataId) {\n    const callbackFn = function (layer) {\n      return layer.getDataId() === dataId;\n    };\n    return this.getViewLayers(callbackFn);\n  }\n\n  /**\n   * Search view layers for equal imae meta data.\n   *\n   * @param {object} meta The meta data to find.\n   * @returns {ViewLayer[]} The list of view layers that contain matched data.\n   */\n  searchViewLayers(meta) {\n    const res = [];\n    for (const layer of this.#layers) {\n      if (layer instanceof ViewLayer) {\n        if (layer.getViewController().equalImageMeta(meta)) {\n          res.push(layer);\n        }\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Get the view layers data indices.\n   *\n   * @returns {string[]} The list of indices.\n   */\n  getViewDataIndices() {\n    const res = [];\n    for (const layer of this.#layers) {\n      if (layer instanceof ViewLayer) {\n        res.push(layer.getDataId());\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Get the active draw layer.\n   *\n   * @returns {DrawLayer|undefined} The layer.\n   */\n  getActiveDrawLayer() {\n    let layer;\n    if (typeof this.#activeDrawLayerIndex !== 'undefined') {\n      const tmpLayer = this.#layers[this.#activeDrawLayerIndex];\n      if (tmpLayer instanceof DrawLayer) {\n        layer = tmpLayer;\n      }\n    }\n    return layer;\n  }\n\n  /**\n   * Get the draw layers associated to a data id.\n   *\n   * @param {string} dataId The data id.\n   * @returns {DrawLayer[]} The layers.\n   */\n  getDrawLayersByDataId(dataId) {\n    const callbackFn = function (layer) {\n      return layer.getDataId() === dataId;\n    };\n    return this.getDrawLayers(callbackFn);\n  }\n\n  /**\n   * Set the active view layer.\n   *\n   * @param {number} index The index of the layer to set as active.\n   */\n  setActiveViewLayer(index) {\n    if (this.#layers[index] instanceof ViewLayer) {\n      this.#activeViewLayerIndex = index;\n      /**\n       * Active view layer change event.\n       *\n       * @event LayerGroup#activeviewlayerchange\n       * @type {object}\n       * @property {Array} value The changed value.\n       */\n      this.#fireEvent({\n        type: 'activelayerchange',\n        value: [this.#layers[index]]\n      });\n    } else {\n      logger.warn('No view layer to set as active with index: ' +\n        index);\n    }\n  }\n\n  /**\n   * Set the active view layer with a data id.\n   *\n   * @param {string} dataId The data id.\n   */\n  setActiveViewLayerByDataId(dataId) {\n    let index;\n    for (let i = 0; i < this.#layers.length; ++i) {\n      if (this.#layers[i] instanceof ViewLayer &&\n        this.#layers[i].getDataId() === dataId) {\n        // stop at first one\n        index = i;\n        break;\n      }\n    }\n    if (typeof index !== 'undefined') {\n      this.setActiveViewLayer(index);\n    } else {\n      logger.warn('No view layer to set as active with dataId: ' +\n        dataId);\n    }\n  }\n\n  /**\n   * Set the active draw layer.\n   *\n   * @param {number|undefined} index The index of the layer to set as active\n   *   or undefined to not set any.\n   */\n  setActiveDrawLayer(index) {\n    this.#activeDrawLayerIndex = index;\n    this.#fireEvent({\n      type: 'activelayerchange',\n      value: [this.#layers[index]]\n    });\n  }\n\n  /**\n   * Set the active draw layer with a data id.\n   *\n   * @param {string} dataId The data id.\n   */\n  setActiveDrawLayerByDataId(dataId) {\n    let index;\n    for (let i = 0; i < this.#layers.length; ++i) {\n      if (this.#layers[i] instanceof DrawLayer &&\n        this.#layers[i].getDataId() === dataId) {\n        // stop at first one\n        index = i;\n        break;\n      }\n    }\n    if (typeof index !== 'undefined') {\n      this.setActiveDrawLayer(index);\n    } else {\n      logger.warn('No draw layer to set as active with dataId: ' +\n        dataId);\n    }\n  }\n\n  /**\n   * Add a view layer.\n   *\n   * The new layer will be marked as the active view layer.\n   *\n   * @returns {ViewLayer} The created layer.\n   */\n  addViewLayer() {\n    // layer index\n    const viewLayerIndex = this.#layers.length;\n    // create div\n    const div = this.#getNextLayerDiv();\n    // prepend to container\n    this.#containerDiv.append(div);\n    // view layer\n    const layer = new ViewLayer(div);\n    layer.setImageSmoothing(this.#imageSmoothing);\n    // add layer\n    this.#layers.push(layer);\n    // mark it as active\n    this.setActiveViewLayer(viewLayerIndex);\n    // bind view layer events\n    this.#bindViewLayer(layer);\n    // return\n    return layer;\n  }\n\n  /**\n   * Add a draw layer.\n   *\n   * The new layer will be marked as the active draw layer.\n   *\n   * @returns {DrawLayer} The created layer.\n   */\n  addDrawLayer() {\n    // store active index\n    this.#activeDrawLayerIndex = this.#layers.length;\n    // create div\n    const div = this.#getNextLayerDiv();\n    // prepend to container\n    this.#containerDiv.append(div);\n    // draw layer\n    const layer = new DrawLayer(div);\n    // add layer\n    this.#layers.push(layer);\n    // bind draw layer events\n    this.#bindDrawLayer(layer);\n    // return\n    return layer;\n  }\n\n  /**\n   * Bind view layer events to this.\n   *\n   * @param {ViewLayer} viewLayer The view layer to bind.\n   */\n  #bindViewLayer(viewLayer) {\n    // listen to position change to update other group layers\n    viewLayer.addEventListener(\n      'positionchange', this.updateLayersToPositionChange);\n    // propagate view viewLayer-layer events\n    for (const eventName of viewEventNames) {\n      viewLayer.addEventListener(eventName, this.#fireEvent);\n    }\n    // propagate viewLayer events\n    viewLayer.addEventListener('renderstart', this.#fireEvent);\n    viewLayer.addEventListener('renderend', this.#fireEvent);\n  }\n\n  /**\n   * Un-bind a view layer events to this.\n   *\n   * @param {ViewLayer} viewLayer The view layer to unbind.\n   */\n  #unbindViewLayer(viewLayer) {\n    // stop listening to position change to update other group layers\n    viewLayer.removeEventListener(\n      'positionchange', this.updateLayersToPositionChange);\n    // stop propagating view viewLayer-layer events\n    for (const eventName of viewEventNames) {\n      viewLayer.removeEventListener(eventName, this.#fireEvent);\n    }\n    // stop propagating viewLayer events\n    viewLayer.removeEventListener('renderstart', this.#fireEvent);\n    viewLayer.removeEventListener('renderend', this.#fireEvent);\n\n    // stop view layer - image binding\n    // (binding is done in layer.setView)\n    viewLayer.unbindImage();\n  }\n\n  /**\n   * Bind draw layer events to this.\n   *\n   * @param {DrawLayer} drawLayer The draw layer to bind.\n   */\n  #bindDrawLayer(drawLayer) {\n    // listen to position change to update other group layers\n    drawLayer.addEventListener(\n      'positionchange', this.updateLayersToPositionChange);\n    drawLayer.addEventListener(\n      'positionchange', this.#fireEvent);\n    // propagate drawLayer events\n    drawLayer.addEventListener('drawcreate', this.#fireEvent);\n    drawLayer.addEventListener('drawdelete', this.#fireEvent);\n  }\n\n  /**\n   * Un-bind a draw layer events to this.\n   *\n   * @param {DrawLayer} drawLayer The draw layer to unbind.\n   */\n  #unbindDrawLayer(drawLayer) {\n    // stop listening to position change to update other group layers\n    drawLayer.removeEventListener(\n      'positionchange', this.updateLayersToPositionChange);\n    drawLayer.removeEventListener(\n      'positionchange', this.#fireEvent);\n    // propagate drawLayer events\n    drawLayer.removeEventListener('drawcreate', this.#fireEvent);\n    drawLayer.removeEventListener('drawdelete', this.#fireEvent);\n  }\n\n  /**\n   * Get the next layer DOM div.\n   *\n   * @returns {HTMLDivElement} A DOM div.\n   */\n  #getNextLayerDiv() {\n    const div = document.createElement('div');\n    div.id = getLayerDivId(this.getDivId(), this.#layers.length);\n    div.className = 'layer';\n    div.style.pointerEvents = 'none';\n    return div;\n  }\n\n  /**\n   * Empty the layer list.\n   */\n  empty() {\n    this.#layers = [];\n    // reset active indices\n    this.#activeViewLayerIndex = undefined;\n    this.#activeDrawLayerIndex = undefined;\n    // remove possible crosshair\n    this.#removeCrosshairDiv();\n    // clean container div\n    const previous = this.#containerDiv.getElementsByClassName('layer');\n    if (previous) {\n      while (previous.length > 0) {\n        previous[0].remove();\n      }\n    }\n  }\n\n  /**\n   * Remove all layers for a specific data.\n   *\n   * @param {string} dataId The data to remove its layers.\n   */\n  removeLayersByDataId(dataId) {\n    for (const layer of this.#layers) {\n      if (typeof layer !== 'undefined' &&\n        layer.getDataId() === dataId) {\n        this.removeLayer(layer);\n      }\n    }\n  }\n\n  /**\n   * Remove a layer from this layer group.\n   * Warning: if current active layer, the index will\n   *   be set to `undefined`. Call one of the setActive\n   *   methods to define the active index.\n   *\n   * @param {ViewLayer | DrawLayer} layer The layer to remove.\n   */\n  removeLayer(layer) {\n    // find layer\n    const index = this.#layers.findIndex((item) => item === layer);\n    if (index === -1) {\n      throw new Error('Cannot find layer to remove');\n    }\n    // unbind and update active index\n    if (layer instanceof ViewLayer) {\n      this.#unbindViewLayer(layer);\n      if (this.#activeViewLayerIndex === index) {\n        this.#activeViewLayerIndex = undefined;\n      }\n    } else {\n      this.#unbindDrawLayer(layer);\n      if (this.#activeDrawLayerIndex === index) {\n        this.#activeDrawLayerIndex = undefined;\n      }\n    }\n    // reset in storage\n    this.#layers[index] = undefined;\n    // update html\n    layer.removeFromDOM();\n  }\n\n  /**\n   * Show a crosshair at a given position.\n   *\n   * @param {Point} [position] The position where to show the crosshair,\n   *   defaults to current position.\n   */\n  #showCrosshairDiv(position) {\n    if (typeof position === 'undefined') {\n      position = this.#currentPosition;\n    }\n\n    // remove previous\n    this.#removeCrosshairDiv();\n\n    // use first layer as base for calculating position and\n    // line sizes\n    let baseLayer;\n    for (const layer of this.#layers) {\n      if (layer instanceof ViewLayer) {\n        baseLayer = layer;\n        break;\n      }\n    }\n    if (typeof baseLayer === 'undefined') {\n      logger.warn('No layer to show crosshair');\n      return;\n    }\n\n    const vc = baseLayer.getViewController();\n    const planePos = vc.getPlanePositionFromPosition(position);\n    const displayPos = baseLayer.planePosToDisplay(planePos);\n\n    // horizontal line\n    if (typeof displayPos.getY() !== 'undefined') {\n      const lineH = document.createElement('hr');\n      lineH.id = this.getDivId() + '-scroll-crosshair-horizontal';\n      lineH.className = 'horizontal';\n      lineH.style.width = this.#containerDiv.offsetWidth + 'px';\n      lineH.style.left = '0px';\n      lineH.style.top = displayPos.getY() + 'px';\n      // add to local array\n      this.#crosshairHtmlElements.push(lineH);\n      // add to html\n      this.#containerDiv.appendChild(lineH);\n    }\n\n    // vertical line\n    if (typeof displayPos.getX() !== 'undefined') {\n      const lineV = document.createElement('hr');\n      lineV.id = this.getDivId() + '-scroll-crosshair-vertical';\n      lineV.className = 'vertical';\n      lineV.style.width = this.#containerDiv.offsetHeight + 'px';\n      lineV.style.left = (displayPos.getX()) + 'px';\n      lineV.style.top = '0px';\n      // add to local array\n      this.#crosshairHtmlElements.push(lineV);\n      // add to html\n      this.#containerDiv.appendChild(lineV);\n    }\n  }\n\n  /**\n   * Remove crosshair divs.\n   */\n  #removeCrosshairDiv() {\n    for (const element of this.#crosshairHtmlElements) {\n      element.remove();\n    }\n    this.#crosshairHtmlElements = [];\n  }\n\n  /**\n   * Displays a tooltip in a temporary `span`.\n   * Works with css to hide/show the span only on mouse hover.\n   *\n   * @param {Point2D} point The update point.\n   */\n  showTooltip(point) {\n    // remove previous div\n    this.removeTooltipDiv();\n\n    const viewLayer = this.getActiveViewLayer();\n    const viewController = viewLayer.getViewController();\n    const planePos = viewLayer.displayToPlanePos(point);\n    const position = viewController.getPositionFromPlanePoint(planePos);\n    const value = viewController.getRescaledImageValue(position);\n\n    // create\n    if (typeof value !== 'undefined') {\n      const span = document.createElement('span');\n      span.id = 'scroll-tooltip';\n      // tooltip position\n      span.style.left = (point.getX() + 10) + 'px';\n      span.style.top = (point.getY() + 10) + 'px';\n      let text = precisionRound(value, 3).toString();\n      if (typeof viewController.getPixelUnit() !== 'undefined') {\n        text += ' ' + viewController.getPixelUnit();\n      }\n      span.appendChild(document.createTextNode(text));\n      // add to local var\n      this.#tooltipHtmlElement = span;\n      // add to html\n      this.#containerDiv.appendChild(span);\n    }\n  }\n\n  /**\n   * Remove the tooltip html div.\n   */\n  removeTooltipDiv() {\n    if (typeof this.#tooltipHtmlElement !== 'undefined') {\n      this.#tooltipHtmlElement.remove();\n      this.#tooltipHtmlElement = undefined;\n    }\n  }\n\n  /**\n   * Can the input position be set on one of the view layers.\n   *\n   * @param {Point} position The input position.\n   * @returns {boolean} True if one view layer accepts the input position.\n   */\n  isPositionInBounds(position) {\n    return this.someViewLayer(function (layer) {\n      return layer.getViewController().isPositionInBounds(position);\n    });\n  }\n\n  /**\n   * Can one of the view layers be scrolled.\n   *\n   * @returns {boolean} True if one view layer can be scrolled.\n   */\n  canScroll() {\n    return this.someViewLayer(function (layer) {\n      return layer.getViewController().canScroll();\n    });\n  }\n\n  /**\n   * Does one of the view layer have more than one slice in the\n   *   given dimension.\n   *\n   * @param {number} dim The input dimension.\n   * @returns {boolean} True if one view layer has more than one slice.\n   */\n  moreThanOne(dim) {\n    return this.someViewLayer(function (layer) {\n      return layer.getViewController().moreThanOne(dim);\n    });\n  }\n\n  /**\n   * Update layers (but not the active view layer) to a position change.\n   *\n   * @param {object} event The position change event.\n   * @function\n   */\n  updateLayersToPositionChange = (event) => {\n    // pause positionchange listeners\n    for (const layer of this.#layers) {\n      if (typeof layer !== 'undefined') {\n        layer.removeEventListener(\n          'positionchange', this.updateLayersToPositionChange);\n        layer.removeEventListener('positionchange', this.#fireEvent);\n      }\n    }\n\n    const index = new Index(event.value[0]);\n    const position = new Point(event.value[1]);\n\n    // store current position\n    this.#currentPosition = position;\n\n    if (this.#showCrosshair) {\n      this.#showCrosshairDiv(position);\n    }\n\n    // origin of the first view layer\n    const viewLayerOffsets = {};\n    let baseViewLayerOrigin0;\n    let baseViewLayerOrigin;\n    // update position for all layers except the source one\n    for (const layer of this.#layers) {\n      if (typeof layer === 'undefined') {\n        continue;\n      }\n      let hasSetOffset = false;\n\n      // view layer case: define and set offsets\n      if (layer instanceof ViewLayer) {\n        const vc = layer.getViewController();\n        // origin0 should always be there\n        const origin0 = vc.getOrigin();\n        // depending on position, origin could be undefined\n        const origin = vc.getOrigin(position);\n\n        let scrollOffset;\n        let planeOffset;\n\n        if (typeof baseViewLayerOrigin === 'undefined') {\n          // first view layer, store origins\n          baseViewLayerOrigin0 = origin0;\n          baseViewLayerOrigin = origin;\n          // no offset\n          scrollOffset = new Vector3D(0, 0, 0);\n          planeOffset = new Vector3D(0, 0, 0);\n        } else {\n          if (vc.isPositionInBounds(position) &&\n            typeof origin !== 'undefined') {\n            // TODO: compensate for possible different orientation between views\n            const scrollDiff = baseViewLayerOrigin0.minus(origin0);\n            scrollOffset = new Vector3D(\n              scrollDiff.getX(), scrollDiff.getY(), scrollDiff.getZ());\n            const planeDiff = baseViewLayerOrigin.minus(origin);\n            planeOffset = new Vector3D(\n              planeDiff.getX(), planeDiff.getY(), planeDiff.getZ());\n          }\n        }\n\n        // set and store offsets\n        if (typeof scrollOffset !== 'undefined' &&\n          typeof planeOffset !== 'undefined') {\n          hasSetOffset =\n            layer.setBaseOffset(\n              scrollOffset, planeOffset,\n              baseViewLayerOrigin, baseViewLayerOrigin0\n            );\n          // store\n          viewLayerOffsets[layer.getId()] = {\n            scroll: scrollOffset,\n            plane: planeOffset\n          };\n        }\n      }\n\n      // draw layer case: use associated view layer offsets\n      if (layer instanceof DrawLayer) {\n        const refOffsets = viewLayerOffsets[layer.getReferenceLayerId()];\n        if (typeof refOffsets !== 'undefined') {\n          hasSetOffset =\n            layer.setBaseOffset(refOffsets.scroll, refOffsets.plane);\n        }\n      }\n\n      // update position (triggers redraw)\n      let hasSetPos = false;\n      if (layer.getId() !== event.srclayerid) {\n        hasSetPos = layer.setCurrentPosition(position, index);\n      }\n\n      // force redraw if needed\n      if (!hasSetPos && hasSetOffset) {\n        layer.draw();\n      }\n    }\n\n    // re-start positionchange listeners\n    for (const layer of this.#layers) {\n      if (typeof layer !== 'undefined') {\n        layer.addEventListener(\n          'positionchange', this.updateLayersToPositionChange);\n        layer.addEventListener('positionchange', this.#fireEvent);\n      }\n    }\n  };\n\n  /**\n   * Calculate the div to world size ratio needed to fit\n   *   the largest data.\n   *\n   * @returns {number|undefined} The ratio.\n   */\n  getDivToWorldSizeRatio() {\n    // check container\n    if (this.#containerDiv.offsetWidth === 0 &&\n      this.#containerDiv.offsetHeight === 0) {\n      throw new Error('Cannot fit to zero sized container.');\n    }\n    // get max world size\n    const maxWorldSize = this.getMaxWorldSize();\n    if (typeof maxWorldSize === 'undefined') {\n      return undefined;\n    }\n    // if the container has a width but no height,\n    // resize it to follow the same ratio to completely\n    // fill the div with the image\n    if (this.#containerDiv.offsetHeight === 0) {\n      const ratioX = this.#containerDiv.offsetWidth / maxWorldSize.x;\n      const height = maxWorldSize.y * ratioX;\n      this.#containerDiv.style.height = height + 'px';\n    }\n    // return best fit\n    return Math.min(\n      this.#containerDiv.offsetWidth / maxWorldSize.x,\n      this.#containerDiv.offsetHeight / maxWorldSize.y\n    );\n  }\n\n  /**\n   * Fit to container: set the layers div to world size ratio.\n   *\n   * @param {number} divToWorldSizeRatio The ratio.\n   */\n  fitToContainer(divToWorldSizeRatio) {\n    // get maximum world size\n    const maxWorldSize = this.getMaxWorldSize();\n    // exit if none\n    if (typeof maxWorldSize === 'undefined') {\n      return;\n    }\n\n    const containerSize = {\n      x: this.#containerDiv.offsetWidth,\n      y: this.#containerDiv.offsetHeight\n    };\n    // offset to keep data centered\n    const fitOffset = {\n      x: -0.5 *\n        (containerSize.x - Math.floor(maxWorldSize.x * divToWorldSizeRatio)),\n      y: -0.5 *\n        (containerSize.y - Math.floor(maxWorldSize.y * divToWorldSizeRatio))\n    };\n\n    // apply to layers\n    for (const layer of this.#layers) {\n      if (typeof layer !== 'undefined') {\n        layer.fitToContainer(containerSize, divToWorldSizeRatio, fitOffset);\n      }\n    }\n\n    // update crosshair\n    if (this.#showCrosshair) {\n      this.#showCrosshairDiv();\n    }\n  }\n\n  /**\n   * Get the largest data world (mm) size.\n   *\n   * @returns {Scalar2D|undefined} The largest size as {x,y}.\n   */\n  getMaxWorldSize() {\n    let maxSize = {x: 0, y: 0};\n    for (const layer of this.#layers) {\n      if (layer instanceof ViewLayer) {\n        const size = layer.getImageWorldSize();\n        if (size.x > maxSize.x) {\n          maxSize.x = size.x;\n        }\n        if (size.y > maxSize.y) {\n          maxSize.y = size.y;\n        }\n      }\n    }\n    if (maxSize.x === 0 && maxSize.y === 0) {\n      maxSize = undefined;\n    }\n    return maxSize;\n  }\n\n  /**\n   * Flip all layers along the Z axis without offset compensation.\n   */\n  flipScaleZ() {\n    this.#baseScale.z *= -1;\n    this.setScale(this.#baseScale);\n  }\n\n  /**\n   * Add scale to the layers. Scale cannot go lower than 0.1.\n   *\n   * @param {number} scaleStep The scale to add.\n   * @param {Point3D} center The scale center Point3D.\n   */\n  addScale(scaleStep, center) {\n    const newScale = {\n      x: this.#scale.x * (1 + scaleStep),\n      y: this.#scale.y * (1 + scaleStep),\n      z: this.#scale.z * (1 + scaleStep)\n    };\n    this.setScale(newScale, center);\n  }\n\n  /**\n   * Set the layers' scale.\n   *\n   * @param {Scalar3D} newScale The scale to apply as {x,y,z}.\n   * @param {Point3D} [center] The scale center Point3D.\n   * @fires LayerGroup#zoomchange\n   */\n  setScale(newScale, center) {\n    this.#scale = newScale;\n    // apply to layers\n    for (const layer of this.#layers) {\n      if (typeof layer !== 'undefined') {\n        layer.setScale(this.#scale, center);\n      }\n    }\n\n    // event value\n    const value = [\n      newScale.x,\n      newScale.y,\n      newScale.z\n    ];\n    if (typeof center !== 'undefined') {\n      value.push(center.getX());\n      value.push(center.getY());\n      value.push(center.getZ());\n    }\n\n    /**\n     * Zoom change event.\n     *\n     * @event LayerGroup#zoomchange\n     * @type {object}\n     * @property {Array} value The changed value.\n     */\n    this.#fireEvent({\n      type: 'zoomchange',\n      value: value\n    });\n  }\n\n  /**\n   * Add translation to the layers.\n   *\n   * @param {Scalar3D} translation The translation as {x,y,z}.\n   */\n  addTranslation(translation) {\n    this.setOffset({\n      x: this.#offset.x - translation.x,\n      y: this.#offset.y - translation.y,\n      z: this.#offset.z - translation.z\n    });\n  }\n\n  /**\n   * Set the layers' offset.\n   *\n   * @param {Scalar3D} newOffset The offset as {x,y,z}.\n   * @fires LayerGroup#offsetchange\n   */\n  setOffset(newOffset) {\n    // store\n    this.#offset = newOffset;\n    // apply to layers\n    for (const layer of this.#layers) {\n      if (typeof layer !== 'undefined') {\n        layer.setOffset(this.#offset);\n      }\n    }\n\n    /**\n     * Offset change event.\n     *\n     * @event LayerGroup#offsetchange\n     * @type {object}\n     * @property {Array} value The changed value.\n     */\n    this.#fireEvent({\n      type: 'offsetchange',\n      value: [\n        this.#offset.x,\n        this.#offset.y,\n        this.#offset.z\n      ]\n    });\n  }\n\n  /**\n   * Reset the stage to its initial scale and no offset.\n   */\n  reset() {\n    this.setScale(this.#baseScale);\n    this.setOffset({x: 0, y: 0, z: 0});\n  }\n\n  /**\n   * Draw the layer.\n   */\n  draw() {\n    for (const layer of this.#layers) {\n      if (typeof layer !== 'undefined') {\n        layer.draw();\n      }\n    }\n  }\n\n  /**\n   * Display the layer.\n   *\n   * @param {boolean} flag Whether to display the layer or not.\n   */\n  display(flag) {\n    for (const layer of this.#layers) {\n      if (typeof layer !== 'undefined') {\n        layer.display(flag);\n      }\n    }\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // LayerGroup class\n","import {Point, Point3D} from '../math/point';\nimport {WindowLevel} from '../image/windowLevel';\nimport {LayerGroup} from './layerGroup';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ViewLayer} from '../gui/viewLayer';\nimport {DrawLayer} from '../gui/drawLayer';\n/* eslint-enable no-unused-vars */\n\n/**\n * Window/level binder.\n */\nexport class WindowLevelBinder {\n  getEventType = function () {\n    return 'wlchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      const viewLayers = layerGroup.getViewLayersByDataId(event.dataid);\n      if (viewLayers.length !== 0) {\n        const vc = viewLayers[0].getViewController();\n        if (event.value.length === 2) {\n          const wl = new WindowLevel(event.value[0], event.value[1]);\n          vc.setWindowLevel(wl);\n        }\n        if (event.value.length === 3) {\n          vc.setWindowLevelPreset(event.value[2]);\n        }\n      }\n    };\n  };\n}\n\n/**\n * Colour map binder.\n */\nexport class ColourMapBinder {\n  getEventType = function () {\n    return 'colourmapchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      const viewLayers = layerGroup.getViewLayersByDataId(event.dataid);\n      if (viewLayers.length !== 0) {\n        const vc = viewLayers[0].getViewController();\n        vc.setColourMap(event.value[0]);\n      }\n    };\n  };\n}\n\n/**\n * Position binder.\n */\nexport class PositionBinder {\n  getEventType = function () {\n    return 'positionchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      const pointValues = event.value[1];\n      const vc = layerGroup.getActiveViewLayer().getViewController();\n      // handle different number of dimensions\n      const currentPos = vc.getCurrentPosition();\n      const currentDims = currentPos.length();\n      const inputDims = pointValues.length;\n      if (inputDims !== currentDims) {\n        if (inputDims === currentDims - 1) {\n          // add missing dim, for ex: input 3D -> current 4D\n          pointValues.push(currentPos.get(currentDims - 1));\n        } else if (inputDims === currentDims + 1) {\n          // remove extra dim, for ex: input 4D -> current 3D\n          pointValues.pop();\n        }\n      }\n      vc.setCurrentPosition(new Point(pointValues));\n    };\n  };\n}\n\n/**\n * Zoom binder.\n */\nexport class ZoomBinder {\n  getEventType = function () {\n    return 'zoomchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      const scale = {\n        x: event.value[0],\n        y: event.value[1],\n        z: event.value[2]\n      };\n      let center;\n      if (event.value.length === 6) {\n        center = new Point3D(\n          event.value[3],\n          event.value[4],\n          event.value[5]\n        );\n      }\n      layerGroup.setScale(scale, center);\n      layerGroup.draw();\n    };\n  };\n}\n\n/**\n * Offset binder.\n */\nexport class OffsetBinder {\n  getEventType = function () {\n    return 'offsetchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      layerGroup.setOffset({\n        x: event.value[0],\n        y: event.value[1],\n        z: event.value[2]\n      });\n      layerGroup.draw();\n    };\n  };\n}\n\n/**\n * Opacity binder. Only propagates to view layers of the same data.\n */\nexport class OpacityBinder {\n  getEventType = function () {\n    return 'opacitychange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      // exit if no data id\n      if (typeof event.dataid === 'undefined') {\n        return;\n      }\n      // propagate to first view layer if it is not base layer\n      const viewLayers = layerGroup.getViewLayersByDataId(event.dataid);\n      const baseLayer = layerGroup.getBaseViewLayer();\n      if (viewLayers.length !== 0 && baseLayer !== viewLayers[0]) {\n        viewLayers[0].setOpacity(event.value);\n        viewLayers[0].draw();\n      }\n    };\n  };\n}\n\n/**\n * List of binders.\n */\nexport const binderList = {\n  WindowLevelBinder,\n  PositionBinder,\n  ZoomBinder,\n  OffsetBinder,\n  OpacityBinder,\n  ColourMapBinder\n};\n\n/**\n * Stage: controls a list of layer groups and their\n * synchronisation.\n */\nexport class Stage {\n\n  /**\n   * Associated layer groups.\n   *\n   * @type {LayerGroup[]}\n   */\n  #layerGroups = [];\n\n  /**\n   * Active layer group index.\n   *\n   * @type {number|undefined}\n   */\n  #activeLayerGroupIndex;\n\n  /**\n   * Image smoothing flag.\n   *\n   * @type {boolean}\n   */\n  #imageSmoothing = false;\n\n  // layer group binders\n  #binders = [];\n  // binder callbacks\n  #callbackStore = null;\n\n  /**\n   * Get the layer group at the given index.\n   *\n   * @param {number} index The index.\n   * @returns {LayerGroup|undefined} The layer group.\n   */\n  getLayerGroup(index) {\n    return this.#layerGroups[index];\n  }\n\n  /**\n   * Get the number of layer groups that form the stage.\n   *\n   * @returns {number} The number of layer groups.\n   */\n  getNumberOfLayerGroups() {\n    return this.#layerGroups.length;\n  }\n\n  /**\n   * Get the active layer group.\n   *\n   * @returns {LayerGroup|undefined} The layer group.\n   */\n  getActiveLayerGroup() {\n    return this.getLayerGroup(this.#activeLayerGroupIndex);\n  }\n\n  /**\n   * Set the active layer group.\n   *\n   * @param {number} index The layer group index.\n   */\n  setActiveLayerGroup(index) {\n    if (typeof this.getLayerGroup(index) !== 'undefined') {\n      this.#activeLayerGroupIndex = index;\n    } else {\n      logger.warn('No layer group to set as active with index: ' +\n        index);\n    }\n  }\n\n  /**\n   * Get the view layers associated to a data id.\n   *\n   * @param {string} dataId The data id.\n   * @returns {ViewLayer[]} The layers.\n   */\n  getViewLayersByDataId(dataId) {\n    let res = [];\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      res = res.concat(this.#layerGroups[i].getViewLayersByDataId(dataId));\n    }\n    return res;\n  }\n\n  /**\n   * Get a list of view layers according to an input callback function.\n   *\n   * @param {Function} [callbackFn] A function that takes\n   *   a ViewLayer as input and returns a boolean. If undefined,\n   *   returns all view layers.\n   * @returns {ViewLayer[]} The layers that\n   *   satisfy the callbackFn.\n   */\n  getViewLayers(callbackFn) {\n    let res = [];\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      res = res.concat(this.#layerGroups[i].getViewLayers(callbackFn));\n    }\n    return res;\n  }\n\n  /**\n   * Get the draw layers associated to a data id.\n   *\n   * @param {string} dataId The data id.\n   * @returns {DrawLayer[]} The layers.\n   */\n  getDrawLayersByDataId(dataId) {\n    let res = [];\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      res = res.concat(this.#layerGroups[i].getDrawLayersByDataId(dataId));\n    }\n    return res;\n  }\n\n  /**\n   * Get a list of draw layers according to an input callback function.\n   *\n   * @param {Function} [callbackFn] A function that takes\n   *   a DrawLayer as input and returns a boolean. If undefined,\n   *   returns all draw layers.\n   * @returns {DrawLayer[]} The layers that\n   *   satisfy the callbackFn.\n   */\n  getDrawLayers(callbackFn) {\n    let res = [];\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      res = res.concat(this.#layerGroups[i].getDrawLayers(callbackFn));\n    }\n    return res;\n  }\n\n  /**\n   * Add a layer group to the list.\n   *\n   * The new layer group will be marked as the active layer group.\n   *\n   * @param {object} htmlElement The HTML element of the layer group.\n   * @returns {LayerGroup} The newly created layer group.\n   */\n  addLayerGroup(htmlElement) {\n    this.#activeLayerGroupIndex = this.#layerGroups.length;\n    const layerGroup = new LayerGroup(htmlElement);\n    layerGroup.setImageSmoothing(this.#imageSmoothing);\n    // add to storage\n    const isBound = this.#callbackStore && this.#callbackStore.length !== 0;\n    if (isBound) {\n      this.unbindLayerGroups();\n    }\n    this.#layerGroups.push(layerGroup);\n    if (isBound) {\n      this.bindLayerGroups();\n    }\n    // return created group\n    return layerGroup;\n  }\n\n  /**\n   * Get a layer group from an HTML element id.\n   *\n   * @param {string} id The element id to find.\n   * @returns {LayerGroup} The layer group.\n   */\n  getLayerGroupByDivId(id) {\n    return this.#layerGroups.find(function (item) {\n      return item.getDivId() === id;\n    });\n  }\n\n  /**\n   * Set the layer groups binders.\n   *\n   * @param {Array} list The list of binder objects.\n   */\n  setBinders(list) {\n    if (typeof list === 'undefined' || list === null) {\n      throw new Error('Cannot set null or undefined binders');\n    }\n    if (this.#binders.length !== 0) {\n      this.unbindLayerGroups();\n    }\n    this.#binders = list.slice();\n    this.bindLayerGroups();\n  }\n\n  /**\n   * Empty the layer group list.\n   */\n  empty() {\n    this.unbindLayerGroups();\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      this.#layerGroups[i].empty();\n    }\n    this.#layerGroups = [];\n    this.#activeLayerGroupIndex = undefined;\n  }\n\n  /**\n   * Remove all layers for a specific data.\n   *\n   * @param {string} dataId The data to remove its layers.\n   */\n  removeLayersByDataId(dataId) {\n    for (const layerGroup of this.#layerGroups) {\n      layerGroup.removeLayersByDataId(dataId);\n    }\n  }\n\n  /**\n   * Remove a layer group from this stage.\n   *\n   * @param {LayerGroup} layerGroup The layer group to remove.\n   */\n  removeLayerGroup(layerGroup) {\n    // find layer\n    const index = this.#layerGroups.findIndex((item) => item === layerGroup);\n    if (index === -1) {\n      throw new Error('Cannot find layerGroup to remove');\n    }\n    // unbind\n    this.unbindLayerGroups();\n    // empty layer group\n    layerGroup.empty();\n    // remove from storage\n    this.#layerGroups.splice(index, 1);\n    // update active index\n    if (this.#activeLayerGroupIndex === index) {\n      this.#activeLayerGroupIndex = undefined;\n    }\n    // bind\n    this.bindLayerGroups();\n  }\n\n  /**\n   * Reset the stage: calls reset on all layer groups.\n   */\n  reset() {\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      this.#layerGroups[i].reset();\n    }\n  }\n\n  /**\n   * Draw the stage: calls draw on all layer groups.\n   */\n  draw() {\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      this.#layerGroups[i].draw();\n    }\n  }\n\n  /**\n   * Fit to container: synchronise the div to world size ratio\n   *   of the group layers.\n   */\n  fitToContainer() {\n    // find the minimum ratio\n    let minRatio;\n    const hasRatio = [];\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      const ratio = this.#layerGroups[i].getDivToWorldSizeRatio();\n      if (typeof ratio !== 'undefined') {\n        hasRatio.push(i);\n        if (typeof minRatio === 'undefined' || ratio < minRatio) {\n          minRatio = ratio;\n        }\n      }\n    }\n    // exit if no ratio\n    if (typeof minRatio === 'undefined') {\n      return;\n    }\n    // apply min ratio to layers\n    for (let j = 0; j < this.#layerGroups.length; ++j) {\n      if (hasRatio.includes(j)) {\n        this.#layerGroups[j].fitToContainer(minRatio);\n      }\n    }\n  }\n\n  /**\n   * Bind the layer groups of the stage.\n   */\n  bindLayerGroups() {\n    if (this.#layerGroups.length === 0 ||\n      this.#layerGroups.length === 1 ||\n      this.#binders.length === 0) {\n      return;\n    }\n    // create callback store\n    this.#callbackStore = new Array(this.#layerGroups.length);\n    // add listeners\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      for (let j = 0; j < this.#binders.length; ++j) {\n        this.#addEventListeners(i, this.#binders[j]);\n      }\n    }\n  }\n\n  /**\n   * Unbind the layer groups of the stage.\n   */\n  unbindLayerGroups() {\n    if (this.#layerGroups.length === 0 ||\n      this.#layerGroups.length === 1 ||\n      this.#binders.length === 0 ||\n      !this.#callbackStore) {\n      return;\n    }\n    // remove listeners\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      for (let j = 0; j < this.#binders.length; ++j) {\n        this.#removeEventListeners(i, this.#binders[j]);\n      }\n    }\n    // clear callback store\n    this.#callbackStore = null;\n  }\n\n  /**\n   * Set the imageSmoothing flag value.\n   *\n   * @param {boolean} flag True to enable smoothing.\n   */\n  setImageSmoothing(flag) {\n    this.#imageSmoothing = flag;\n    // set for existing layer groups\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      this.#layerGroups[i].setImageSmoothing(flag);\n    }\n  }\n\n  /**\n   * Get the binder callback function for a given layer group index.\n   * The function is created if not yet stored.\n   *\n   * @param {object} binder The layer binder.\n   * @param {number} index The index of the associated layer group.\n   * @returns {Function} The binder function.\n   */\n  #getBinderCallback(binder, index) {\n    if (typeof this.#callbackStore[index] === 'undefined') {\n      this.#callbackStore[index] = [];\n    }\n    const store = this.#callbackStore[index];\n    let binderObj = store.find(function (elem) {\n      return elem.binder === binder;\n    });\n    if (typeof binderObj === 'undefined') {\n      // create new callback object\n      binderObj = {\n        binder: binder,\n        callback: (event) => {\n          // stop listeners\n          this.#removeEventListeners(index, binder);\n          // apply binder\n          binder.getCallback(this.#layerGroups[index])(event);\n          // re-start listeners\n          this.#addEventListeners(index, binder);\n        }\n      };\n      this.#callbackStore[index].push(binderObj);\n    }\n    return binderObj.callback;\n  }\n\n  /**\n   * Add event listeners for a given layer group index and binder.\n   *\n   * @param {number} index The index of the associated layer group.\n   * @param {object} binder The layer binder.\n   */\n  #addEventListeners(index, binder) {\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      if (i !== index) {\n        this.#layerGroups[index].addEventListener(\n          binder.getEventType(),\n          this.#getBinderCallback(binder, i)\n        );\n      }\n    }\n  }\n\n  /**\n   * Remove event listeners for a given layer group index and binder.\n   *\n   * @param {number} index The index of the associated layer group.\n   * @param {object} binder The layer binder.\n   */\n  #removeEventListeners(index, binder) {\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      if (i !== index) {\n        this.#layerGroups[index].removeEventListener(\n          binder.getEventType(),\n          this.#getBinderCallback(binder, i)\n        );\n      }\n    }\n  }\n\n} // class Stage\n","import {Index} from '../math/index';\nimport {colourNameToHex} from '../utils/colour';\nimport {WindowLevel} from '../image/windowLevel';\n\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * State class.\n * Saves: data url/path, display info.\n *\n * History:\n * - v0.5 (dwv 0.30.0, 12/2021):\n *   - store position as array,\n *   - new draw position group key.\n * - v0.4 (dwv 0.29.0, 06/2021):\n *   - move drawing details into meta property,\n *   - remove scale center and translation, add offset.\n * - v0.3 (dwv v0.23.0, 03/2018):\n *   - new drawing structure, drawings are now the full layer object and\n *     using toObject to avoid saving a string representation,\n *   - new details structure: simple array of objects referenced by draw ids.\n * - v0.2 (dwv v0.17.0, 12/2016):\n *   - adds draw details: array [nslices][nframes] of detail objects.\n * - v0.1 (dwv v0.15.0, 07/2016):\n *   - adds version,\n *   - drawings: array [nslices][nframes] with all groups.\n * - initial release (dwv v0.10.0, 05/2015), no version number:\n *   - content: window-center, window-width, position, scale,\n *       scaleCenter, translation, drawings,\n *   - drawings: array [nslices] with all groups.\n */\nexport class State {\n  /**\n   * The state data id.\n   *\n   * @type {string}\n   */\n  #dataId;\n\n  /**\n   * @param {string} dataId The associated data id.\n   */\n  constructor(dataId) {\n    this.#dataId = dataId;\n  }\n\n  /**\n   * Load an application state from JSON.\n   *\n   * @param {string} json The state as a JSON string.\n   * @returns {object} The state object.\n   */\n  fromJSON(json) {\n    const data = JSON.parse(json);\n    let res = null;\n    if (data.version === '0.1') {\n      res = this.#readV01(data);\n    } else if (data.version === '0.2') {\n      res = this.#readV02(data);\n    } else if (data.version === '0.3') {\n      res = this.#readV03(data);\n    } else if (data.version === '0.4') {\n      res = this.#readV04(data);\n    } else if (data.version === '0.5') {\n      res = this.#readV05(data);\n    } else {\n      throw new Error('Unknown state file format version: \\'' +\n        data.version + '\\'.');\n    }\n    return res;\n  }\n\n  /**\n   * Load an application state from JSON.\n   *\n   * @param {App} app The app to apply the state to.\n   * @param {object} data The state data.\n   */\n  apply(app, data) {\n    const layerGroup = app.getActiveLayerGroup();\n    const viewController =\n      layerGroup.getActiveViewLayer().getViewController();\n    // display\n    const wl = new WindowLevel(data['window-center'], data['window-width']);\n    viewController.setWindowLevel(wl);\n    // position is index...\n    viewController.setCurrentIndex(new Index(data.position));\n    // apply saved scale on top of current base one\n    const baseScale = app.getActiveLayerGroup().getBaseScale();\n    let scale = null;\n    let offset = null;\n    if (typeof data.scaleCenter !== 'undefined') {\n      scale = {\n        x: data.scale * baseScale.x,\n        y: data.scale * baseScale.y,\n        z: 1\n      };\n      // ---- transform translation (now) ----\n      // Tx = -offset.x * scale.x\n      // => offset.x = -Tx / scale.x\n      // ---- transform translation (before) ----\n      // origin.x = centerX - (centerX - origin.x) * (newZoomX / zoom.x);\n      // (zoom.x -> initial zoom = base scale, origin.x = 0)\n      // Tx = origin.x + (trans.x * zoom.x)\n      const originX = data.scaleCenter.x - data.scaleCenter.x * data.scale;\n      const originY = data.scaleCenter.y - data.scaleCenter.y * data.scale;\n      const oldTx = originX + data.translation.x * scale.x;\n      const oldTy = originY + data.translation.y * scale.y;\n      offset = {\n        x: -oldTx / scale.x,\n        y: -oldTy / scale.y,\n        z: 0\n      };\n    } else {\n      scale = {\n        x: data.scale.x * baseScale.x,\n        y: data.scale.y * baseScale.y,\n        z: baseScale.z\n      };\n      offset = {\n        x: data.offset.x,\n        y: data.offset.y,\n        z: 0\n      };\n    }\n    app.getActiveLayerGroup().setScale(scale);\n    app.getActiveLayerGroup().setOffset(offset);\n    // drawings (will draw the draw layer)\n    app.setDrawings(data.drawings, data.drawingsDetails, this.#dataId);\n  }\n\n  /**\n   * Read an application state from an Object in v0.1 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  #readV01(data) {\n    // v0.1 -> v0.2\n    const v02DAndD = v01Tov02DrawingsAndDetails(data.drawings);\n    // v0.2 -> v0.3, v0.4\n    data.drawings = v02Tov03Drawings(v02DAndD.drawings).toObject();\n    data.drawingsDetails = v03Tov04DrawingsDetails(\n      v02DAndD.drawingsDetails);\n    // v0.4 -> v0.5\n    data = v04Tov05Data(data);\n    data.drawings = v04Tov05Drawings(data.drawings);\n    return data;\n  }\n\n  /**\n   * Read an application state from an Object in v0.2 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  #readV02(data) {\n    // v0.2 -> v0.3, v0.4\n    data.drawings = v02Tov03Drawings(data.drawings).toObject();\n    data.drawingsDetails = v03Tov04DrawingsDetails(\n      v02Tov03DrawingsDetails(data.drawingsDetails));\n    // v0.4 -> v0.5\n    data = v04Tov05Data(data);\n    data.drawings = v04Tov05Drawings(data.drawings);\n    return data;\n  }\n\n  /**\n   * Read an application state from an Object in v0.3 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  #readV03(data) {\n    // v0.3 -> v0.4\n    data.drawingsDetails = v03Tov04DrawingsDetails(data.drawingsDetails);\n    // v0.4 -> v0.5\n    data = v04Tov05Data(data);\n    data.drawings = v04Tov05Drawings(data.drawings);\n    return data;\n  }\n\n  /**\n   * Read an application state from an Object in v0.4 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  #readV04(data) {\n    // v0.4 -> v0.5\n    data = v04Tov05Data(data);\n    data.drawings = v04Tov05Drawings(data.drawings);\n    return data;\n  }\n  /**\n   * Read an application state from an Object in v0.5 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  #readV05(data) {\n    return data;\n  }\n\n} // State class\n\n/**\n * Convert drawings from v0.2 to v0.3:\n * - v0.2: one layer per slice/frame,\n * - v0.3: one layer, one group per slice. `setDrawing` expects the full stage.\n *\n * @param {Array} drawings An array of drawings.\n * @returns {object} The layer with the converted drawings.\n */\nfunction v02Tov03Drawings(drawings) {\n  // Auxiliar variables\n  let group, groupShapes, parentGroup;\n  // Avoid errors when dropping multiple states\n  //drawLayer.getChildren().each(function(node){\n  //    node.visible(false);\n  //});\n\n  /**\n   * Get the draw group id for a given position.\n   *\n   * @param {Index} currentPosition The current position.\n   * @returns {string} The group id.\n   */\n  function getDrawPositionGroupId(currentPosition) {\n    const sliceNumber = currentPosition.get(2);\n    const frameNumber = currentPosition.length() === 4\n      ? currentPosition.get(3) : 0;\n    return 'slice-' + sliceNumber + '_frame-' + frameNumber;\n  }\n\n  const drawLayer = new Konva.Layer({\n    listening: false,\n    visible: true\n  });\n\n  // Get the positions-groups data\n  const groupDrawings = typeof drawings === 'string'\n    ? JSON.parse(drawings) : drawings;\n  // Iterate over each position-groups\n  for (let k = 0, lenk = groupDrawings.length; k < lenk; ++k) {\n    // Iterate over each frame\n    for (let f = 0, lenf = groupDrawings[k].length; f < lenf; ++f) {\n      groupShapes = groupDrawings[k][f];\n      if (groupShapes.length !== 0) {\n        // Create position-group set as visible and append it to drawLayer\n        parentGroup = new Konva.Group({\n          id: getDrawPositionGroupId(new Index([1, 1, k, f])),\n          name: 'position-group',\n          visible: false\n        });\n\n        // Iterate over shapes-group\n        for (let g = 0, leng = groupShapes.length; g < leng; ++g) {\n          // create the konva group\n          group = Konva.Node.create(groupShapes[g]);\n          // enforce draggable: only the shape was draggable in v0.2,\n          // now the whole group is.\n          group.draggable(true);\n          group.getChildren().forEach(function (gnode) {\n            gnode.draggable(false);\n          });\n          // add to position group\n          parentGroup.add(group);\n        }\n        // add to layer\n        drawLayer.add(parentGroup);\n      }\n    }\n  }\n\n  return drawLayer;\n}\n\n/**\n * Convert drawings from v0.1 to v0.2:\n * - v0.1: text on its own,\n * - v0.2: text as part of label.\n *\n * @param {Array} inputDrawings An array of drawings.\n * @returns {object} The converted drawings.\n */\nfunction v01Tov02DrawingsAndDetails(inputDrawings) {\n  const newDrawings = [];\n  const drawingsDetails = {};\n\n  let drawGroups;\n  let drawGroup;\n  // loop over each slice\n  for (let k = 0, lenk = inputDrawings.length; k < lenk; ++k) {\n    // loop over each frame\n    newDrawings[k] = [];\n    for (let f = 0, lenf = inputDrawings[k].length; f < lenf; ++f) {\n      // draw group\n      drawGroups = inputDrawings[k][f];\n      const newFrameDrawings = [];\n      // Iterate over shapes-group\n      for (let g = 0, leng = drawGroups.length; g < leng; ++g) {\n        // create konva group from input\n        drawGroup = Konva.Node.create(drawGroups[g]);\n        // force visible (not set in state)\n        drawGroup.visible(true);\n        // label position\n        let pos = {x: 0, y: 0};\n        // update shape colour\n        const kshape = drawGroup.getChildren(function (node) {\n          return node.name() === 'shape';\n        })[0];\n        kshape.stroke(colourNameToHex(kshape.stroke()));\n        // special line case\n        if (drawGroup.name() === 'line-group') {\n          // update name\n          drawGroup.name('ruler-group');\n          // add ticks\n          const ktick0 = new Konva.Line({\n            points: [kshape.points()[0],\n              kshape.points()[1],\n              kshape.points()[0],\n              kshape.points()[1]],\n            name: 'shape-tick0'\n          });\n          drawGroup.add(ktick0);\n          const ktick1 = new Konva.Line({\n            points: [kshape.points()[2],\n              kshape.points()[3],\n              kshape.points()[2],\n              kshape.points()[3]],\n            name: 'shape-tick1'\n          });\n          drawGroup.add(ktick1);\n        }\n        // special protractor case: update arc name\n        const karcs = drawGroup.getChildren(function (node) {\n          return node.name() === 'arc';\n        });\n        if (karcs.length === 1) {\n          karcs[0].name('shape-arc');\n        }\n        // get its text\n        const ktexts = drawGroup.getChildren(function (node) {\n          return node.name() === 'text';\n        });\n        // update text: move it into a label\n        let ktext = new Konva.Text({\n          name: 'text',\n          text: ''\n        });\n        if (ktexts.length === 1) {\n          pos.x = ktexts[0].x();\n          pos.y = ktexts[0].y();\n          // remove it from the group\n          ktexts[0].remove();\n          // use it\n          ktext = ktexts[0];\n        } else {\n          // use shape position if no text\n          if (kshape.points().length !== 0) {\n            pos = {x: kshape.points()[0],\n              y: kshape.points()[1]};\n          }\n        }\n        // create new label with text and tag\n        const klabel = new Konva.Label({\n          x: pos.x,\n          y: pos.y,\n          name: 'label'\n        });\n        klabel.add(ktext);\n        klabel.add(new Konva.Tag());\n        // add label to group\n        drawGroup.add(klabel);\n        // add group to list\n        newFrameDrawings.push(JSON.stringify(drawGroup.toObject()));\n\n        // create details (v0.3 format)\n        let textExpr = ktext.text();\n        const txtLen = textExpr.length;\n        let quant = null;\n        // adapt to text with flag\n        if (drawGroup.name() === 'ruler-group') {\n          quant = {\n            length: {\n              value: parseFloat(textExpr.substring(0, txtLen - 2)),\n              unit: textExpr.substring(-2)\n            }\n          };\n          textExpr = '{length}';\n        } else if (drawGroup.name() === 'ellipse-group' ||\n                    drawGroup.name() === 'rectangle-group') {\n          quant = {\n            surface: {\n              value: parseFloat(textExpr.substring(0, txtLen - 3)),\n              unit: textExpr.substring(-3)\n            }\n          };\n          textExpr = '{surface}';\n        } else if (drawGroup.name() === 'protractor-group' ||\n                    drawGroup.name() === 'rectangle-group') {\n          quant = {\n            angle: {\n              value: parseFloat(textExpr.substring(0, txtLen - 1)),\n              unit: textExpr.substring(-1)\n            }\n          };\n          textExpr = '{angle}';\n        }\n        // set details\n        drawingsDetails[drawGroup.id()] = {\n          textExpr: textExpr,\n          longText: '',\n          quant: quant\n        };\n\n      }\n      newDrawings[k].push(newFrameDrawings);\n    }\n  }\n\n  return {drawings: newDrawings, drawingsDetails: drawingsDetails};\n}\n\n/**\n * Convert drawing details from v0.2 to v0.3:\n * - v0.2: array [nslices][nframes] with all,\n * - v0.3: simple array of objects referenced by draw ids.\n *\n * @param {Array} details An array of drawing details.\n * @returns {object} The converted drawings.\n */\nfunction v02Tov03DrawingsDetails(details) {\n  const res = {};\n  // Get the positions-groups data\n  const groupDetails = typeof details === 'string'\n    ? JSON.parse(details) : details;\n  // Iterate over each position-groups\n  for (let k = 0, lenk = groupDetails.length; k < lenk; ++k) {\n    // Iterate over each frame\n    for (let f = 0, lenf = groupDetails[k].length; f < lenf; ++f) {\n      // Iterate over shapes-group\n      for (let g = 0, leng = groupDetails[k][f].length; g < leng; ++g) {\n        const group = groupDetails[k][f][g];\n        res[group.id] = {\n          textExpr: group.textExpr,\n          longText: group.longText,\n          quant: group.quant\n        };\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Convert drawing details from v0.3 to v0.4:\n * - v0.3: properties at group root,\n * - v0.4: properties in group meta object.\n *\n * @param {Array} details An array of drawing details.\n * @returns {object} The converted drawings.\n */\nfunction v03Tov04DrawingsDetails(details) {\n  const res = {};\n  const keys = Object.keys(details);\n  // Iterate over each position-groups\n  for (let k = 0, lenk = keys.length; k < lenk; ++k) {\n    const detail = details[keys[k]];\n    res[keys[k]] = {\n      meta: {\n        textExpr: detail.textExpr,\n        longText: detail.longText,\n        quantification: detail.quant\n      }\n    };\n  }\n  return res;\n}\n\n/**\n * Convert drawing from v0.4 to v0.5:\n * - v0.4: position as object,\n * - v0.5: position as array.\n *\n * @param {object} data An array of drawing.\n * @returns {object} The converted drawings.\n */\nfunction v04Tov05Data(data) {\n  const pos = data.position;\n  data.position = [pos.i, pos.j, pos.k];\n  return data;\n}\n\n/**\n * Convert drawing from v0.4 to v0.5:\n * - v0.4: draw id as 'slice-0_frame-1',\n * - v0.5: draw id as '#2-0_#3-1'.\n *\n * @param {object} inputDrawings An array of drawing.\n * @returns {object} The converted drawings.\n */\nfunction v04Tov05Drawings(inputDrawings) {\n  // Iterate over each position-groups\n  const posGroups = inputDrawings.children;\n  for (let k = 0, lenk = posGroups.length; k < lenk; ++k) {\n    const posGroup = posGroups[k];\n    const id = posGroup.attrs.id;\n    const ids = id.split('_');\n    const sliceNumber = parseInt(ids[0].substring(6), 10); // 'slice-0'\n    const frameNumber = parseInt(ids[1].substring(6), 10); // 'frame-0'\n    let newId = '#2-';\n    if (sliceNumber === 0 && frameNumber !== 0) {\n      newId += frameNumber;\n    } else {\n      newId += sliceNumber;\n    }\n    posGroup.attrs.id = newId;\n  }\n  return inputDrawings;\n}\n","import {logger} from './logger';\nimport {splitKeyValueString} from './string';\n\n/**\n * Get an full object URL from a string uri.\n *\n * @param {string} uri A string representing the url.\n * @returns {URL} A URL object.\n */\nexport function getUrlFromUri(uri) {\n  // add base to allow for relative urls\n  // (base is not used for absolute urls)\n  let base;\n  if (window.location.origin !== 'null') {\n    base = window.location.origin;\n  }\n  return new URL(uri, base);\n}\n\n/**\n * Split an input URI:\n * 'root?key0=val00&key0=val01&key1=val10' returns\n * { base : root, query : [ key0 : [val00, val01], key1 : val1 ] }\n * Returns an empty object if the input string is not correct (null, empty...)\n * or if it is not a query string (no question mark).\n *\n * @param {string} uri The string to split.\n * @returns {object} The split string.\n */\nexport function splitUri(uri) {\n  // result\n  const result = {};\n  // check if query string\n  let sepIndex = null;\n  if (uri && (sepIndex = uri.indexOf('?')) !== -1) {\n    // base: before the '?'\n    result.base = uri.substring(0, sepIndex);\n    // query : after the '?' and until possible '#'\n    let hashIndex = uri.indexOf('#');\n    if (hashIndex === -1) {\n      hashIndex = uri.length;\n    }\n    const query = uri.substring(sepIndex + 1, hashIndex);\n    // split key/value pairs of the query\n    result.query = splitKeyValueString(query);\n  }\n  // return\n  return result;\n}\n\n/**\n * Get the query part, split into an array, of an input URI.\n * The URI scheme is: `base?query#fragment`.\n *\n * @param {string} uri The input URI.\n * @returns {object} The query part, split into an array, of the input URI.\n */\nexport function getUriQuery(uri) {\n  // split\n  const parts = splitUri(uri);\n  // check not empty\n  if (Object.keys(parts).length === 0) {\n    return null;\n  }\n  // return query\n  return parts.query;\n}\n\n/**\n * Generic URI query decoder.\n * Supports manifest:\n *   `[dwv root]?input=encodeURIComponent('[manifest file]')&type=manifest`.\n * Or encoded URI with base and key value/pairs:\n *   `[dwv root]?input=encodeURIComponent([root]?key0=value0&key1=value1)`.\n *\n * @param {object} query The query part to the input URI.\n * @param {Function} callback The function to call with the decoded file urls.\n * @param {object} options Optional url request options.\n */\nexport function decodeQuery(query, callback, options) {\n  // manifest\n  if (query.type && query.type === 'manifest') {\n    decodeManifestQuery(query, callback);\n  } else {\n    // default case: encoded URI with base and key/value pairs\n    callback(\n      decodeKeyValueUri(query.input, query.dwvReplaceMode),\n      options);\n  }\n}\n\n/**\n * Decode a Key/Value pair URI. If a key is repeated, the result\n *   be an array of base + each key.\n *\n * @param {string} uri The URI to decode.\n * @param {string} replaceMode The key replace mode. Can be:\n * - key (default): keep the key\n * - other than key: do not use the key\n *   'file' is a special case where the '?' of the query is not kept.\n * @returns {string[]} The list of input file urls.\n */\nexport function decodeKeyValueUri(uri, replaceMode) {\n  const result = [];\n\n  // repeat key replace mode (default to keep key)\n  let repeatKeyReplaceMode = 'key';\n  if (replaceMode) {\n    repeatKeyReplaceMode = replaceMode;\n  }\n\n  // decode input URI\n  const queryUri = decodeURIComponent(uri);\n  // get key/value pairs from input URI\n  const inputQueryPairs = splitUri(queryUri);\n  if (Object.keys(inputQueryPairs).length === 0) {\n    result.push(queryUri);\n  } else {\n    const keys = Object.keys(inputQueryPairs.query);\n    // find repeat key\n    let repeatKey = null;\n    for (let i = 0; i < keys.length; ++i) {\n      if (inputQueryPairs.query[keys[i]] instanceof Array) {\n        repeatKey = keys[i];\n        break;\n      }\n    }\n\n    if (!repeatKey) {\n      result.push(queryUri);\n    } else {\n      const repeatList = inputQueryPairs.query[repeatKey];\n      // build base uri\n      let baseUrl = inputQueryPairs.base;\n      // add '?' when:\n      // - base is not empty\n      // - the repeatKey is not 'file'\n      // root/path/to/?file=0.jpg&file=1.jpg\n      if (baseUrl !== '' && repeatKey !== 'file') {\n        baseUrl += '?';\n      }\n      let gotOneArg = false;\n      for (let j = 0; j < keys.length; ++j) {\n        if (keys[j] !== repeatKey) {\n          if (gotOneArg) {\n            baseUrl += '&';\n          }\n          baseUrl += keys[j] + '=' + inputQueryPairs.query[keys[j]];\n          gotOneArg = true;\n        }\n      }\n      // append built urls to result\n      let url;\n      for (let k = 0; k < repeatList.length; ++k) {\n        url = baseUrl;\n        if (gotOneArg) {\n          url += '&';\n        }\n        if (repeatKeyReplaceMode === 'key') {\n          url += repeatKey + '=';\n        }\n        // other than 'key' mode: do nothing\n        url += repeatList[k];\n        result.push(url);\n      }\n    }\n  }\n  // return\n  return result;\n}\n\n/**\n * Decode a manifest query.\n *\n * @external XMLHttpRequest\n * @param {object} query The manifest query: {input, nslices},\n * with input the input URI and nslices the number of slices.\n * @param {Function} callback The function to call with the decoded urls.\n */\nfunction decodeManifestQuery(query, callback) {\n  let uri = '';\n  if (query.input[0] === '/') {\n    uri = window.location.protocol + '//' + window.location.host;\n  }\n  // TODO: needs to be decoded (decodeURIComponent?\n  uri += query.input;\n\n  /**\n   * Handle error.\n   *\n   * @param {object} event The error event.\n   */\n  function onError(event) {\n    logger.warn('RequestError while receiving manifest: ' +\n      event.target.status);\n  }\n\n  /**\n   * Handle load.\n   *\n   * @param {object} event The load event.\n   */\n  function onLoad(event) {\n    callback(decodeManifest(event.target.responseXML, query.nslices));\n  }\n\n  const request = new XMLHttpRequest();\n  request.open('GET', decodeURIComponent(uri), true);\n  request.responseType = 'document';\n  request.onload = onLoad;\n  request.onerror = onError;\n  request.send(null);\n}\n\n/**\n * Decode an XML manifest.\n *\n * @param {object} manifest The manifest to decode.\n * @param {number} nslices The number of slices to load.\n * @returns {string[]} The decoded manifest.\n */\nexport function decodeManifest(manifest, nslices) {\n  const result = [];\n  // wado url\n  const wadoElement = manifest.getElementsByTagName('wado_query');\n  const wadoURL = wadoElement[0].getAttribute('wadoURL');\n  const rootURL = wadoURL + '?requestType=WADO&contentType=application/dicom&';\n  // patient list\n  const patientList = manifest.getElementsByTagName('Patient');\n  if (patientList.length > 1) {\n    logger.warn('More than one patient, loading first one.');\n  }\n  // study list\n  const studyList = patientList[0].getElementsByTagName('Study');\n  if (studyList.length > 1) {\n    logger.warn('More than one study, loading first one.');\n  }\n  const studyUID = studyList[0].getAttribute('StudyInstanceUID');\n  // series list\n  const seriesList = studyList[0].getElementsByTagName('Series');\n  if (seriesList.length > 1) {\n    logger.warn('More than one series, loading first one.');\n  }\n  const seriesUID = seriesList[0].getAttribute('SeriesInstanceUID');\n  // instance list\n  const instanceList = seriesList[0].getElementsByTagName('Instance');\n  // loop on instances and push links\n  let max = instanceList.length;\n  if (nslices < max) {\n    max = nslices;\n  }\n  for (let i = 0; i < max; ++i) {\n    const sopInstanceUID = instanceList[i].getAttribute('SOPInstanceUID');\n    const link = rootURL +\n        '&studyUID=' + studyUID +\n        '&seriesUID=' + seriesUID +\n        '&objectUID=' + sopInstanceUID;\n    result.push(link);\n  }\n  // return\n  return result;\n}\n","import {ListenerHandler} from './listen';\n\n/**\n * UndoStack class.\n */\nexport class UndoStack {\n  /**\n   * Array of commands.\n   *\n   * @type {Array}\n   */\n  #stack = [];\n\n  /**\n   * Current command index.\n   *\n   * @type {number}\n   */\n  #curCmdIndex = 0;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the stack size.\n   *\n   * @returns {number} The size of the stack.\n   */\n  getStackSize() {\n    return this.#stack.length;\n  }\n\n  /**\n   * Get the current stack index.\n   *\n   * @returns {number} The stack index.\n   */\n  getCurrentStackIndex() {\n    return this.#curCmdIndex;\n  }\n\n  /**\n   * Add a command to the stack.\n   *\n   * @param {object} cmd The command to add.\n   * @fires UndoStack#undoadd\n   */\n  add(cmd) {\n    // clear commands after current index\n    this.#stack = this.#stack.slice(0, this.#curCmdIndex);\n    // store command\n    this.#stack.push(cmd);\n    // increment index\n    ++this.#curCmdIndex;\n    /**\n     * Command add to undo stack event.\n     *\n     * @event UndoStack#undoadd\n     * @type {object}\n     * @property {string} command The name of the command added to the\n     *   undo stack.\n     */\n    this.#fireEvent({\n      type: 'undoadd',\n      command: cmd.getName()\n    });\n  }\n\n  /**\n   * Remove a command to the stack.\n   *\n   * @param {string} name The name of the command to remove.\n   * @returns {boolean} True if the command was found and removed.\n   * @fires UndoStack#undoremove\n   */\n  remove(name) {\n    let res = false;\n    const hasInputName = function (element) {\n      return element.getName() === name;\n    };\n    const index = this.#stack.findIndex(hasInputName);\n    if (index !== -1) {\n      // remove command\n      this.#stack.splice(index, 1);\n      // decrement index\n      --this.#curCmdIndex;\n      // result\n      res = true;\n      /**\n       * Command remove from undo stack event.\n       *\n       * @event UndoStack#undoremove\n       * @type {object}\n       * @property {string} command The name of the command added to the\n       *   undo stack.\n       */\n      this.#fireEvent({\n        type: 'undoremove',\n        command: name\n      });\n    }\n    return res;\n  }\n\n  /**\n   * Undo the last command.\n   *\n   * @fires UndoStack#undo\n   */\n  undo() {\n    // a bit inefficient...\n    if (this.#curCmdIndex > 0) {\n      // decrement command index\n      --this.#curCmdIndex;\n      // undo last command\n      this.#stack[this.#curCmdIndex].undo();\n      /**\n       * Command undo event.\n       *\n       * @event UndoStack#undo\n       * @type {object}\n       * @property {string} command The name of the undone command.\n       */\n      this.#fireEvent({\n        type: 'undo',\n        command: this.#stack[this.#curCmdIndex].getName()\n      });\n    }\n  }\n\n  /**\n   * Redo the last command.\n   *\n   * @fires UndoStack#redo\n   */\n  redo() {\n    if (this.#curCmdIndex < this.#stack.length) {\n      // run last command\n      this.#stack[this.#curCmdIndex].execute();\n      /**\n       * Command redo event.\n       *\n       * @event UndoStack#redo\n       * @type {object}\n       * @property {string} command The name of the redone command.\n       */\n      this.#fireEvent({\n        type: 'redo',\n        command: this.#stack[this.#curCmdIndex].getName()\n      });\n      // increment command index\n      ++this.#curCmdIndex;\n    }\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *    event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // UndoStack class\n","import {InteractionEventNames} from '../gui/generic';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {LayerGroup} from '../gui/layerGroup';\nimport {ViewLayer} from '../gui/viewLayer';\nimport {DrawLayer} from '../gui/drawLayer';\n/* eslint-enable no-unused-vars */\n\n/**\n * Toolbox controller.\n */\nexport class ToolboxController {\n\n  /**\n   * List of tools to control.\n   *\n   * @type {object}\n   */\n  #toolList;\n\n  /**\n   * Selected tool.\n   *\n   * @type {object}\n   */\n  #selectedTool = null;\n\n  /**\n   * Callback store to allow attach/detach.\n   *\n   * @type {Array}\n   */\n  #callbackStore = [];\n\n  /**\n   * Current layers bound to tool.\n   *\n   * @type {object}\n   */\n  #boundLayers = {};\n\n  /**\n   * @param {object} toolList The list of tool objects.\n   */\n  constructor(toolList) {\n    this.#toolList = toolList;\n  }\n\n  /**\n   * Initialise.\n   */\n  init() {\n    for (const key in this.#toolList) {\n      this.#toolList[key].init();\n    }\n    // enable shortcuts\n    this.enableShortcuts(true);\n  }\n\n  /**\n   * Enable or disable shortcuts. The 'init' methods enables shortcuts\n   *  by default. Call this method after init to disable shortcuts.\n   *\n   * @param {boolean} flag True to enable shortcuts.\n   */\n  enableShortcuts(flag) {\n    if (flag) {\n      window.addEventListener('keydown',\n        this.#getCallback('window', 'keydown'), true);\n    } else {\n      window.removeEventListener('keydown',\n        this.#getCallback('window', 'keydown'), true);\n    }\n  }\n\n  /**\n   * Get the tool list.\n   *\n   * @returns {Array} The list of tool objects.\n   */\n  getToolList() {\n    return this.#toolList;\n  }\n\n  /**\n   * Check if a tool is in the tool list.\n   *\n   * @param {string} name The name to check.\n   * @returns {boolean} The tool list element for the given name.\n   */\n  hasTool(name) {\n    return typeof this.getToolList()[name] !== 'undefined';\n  }\n\n  /**\n   * Get the selected tool.\n   *\n   * @returns {object} The selected tool.\n   */\n  getSelectedTool() {\n    return this.#selectedTool;\n  }\n\n  /**\n   * Get the selected tool event handler.\n   *\n   * @param {string} eventType The event type, for example\n   *   mousedown, touchstart...\n   * @returns {Function} The event handler.\n   */\n  getSelectedToolEventHandler(eventType) {\n    return this.getSelectedTool()[eventType];\n  }\n\n  /**\n   * Set the selected tool.\n   *\n   * @param {string} name The name of the tool.\n   */\n  setSelectedTool(name) {\n    // check if we have it\n    if (!this.hasTool(name)) {\n      throw new Error('Unknown tool: \\'' + name + '\\'');\n    }\n    // de-activate previous\n    if (this.#selectedTool) {\n      this.#selectedTool.activate(false);\n    }\n    // set internal var\n    this.#selectedTool = this.#toolList[name];\n    // activate new tool\n    this.#selectedTool.activate(true);\n  }\n\n  /**\n   * Set the selected tool live features.\n   *\n   * @param {object} list The list of features.\n   */\n  setToolFeatures(list) {\n    if (this.getSelectedTool()) {\n      this.getSelectedTool().setFeatures(list);\n    }\n  }\n\n  /**\n   * Listen to layer interaction events.\n   *\n   * @param {LayerGroup} layerGroup The associated layer group.\n   * @param {ViewLayer|DrawLayer} layer The layer to listen to.\n   */\n  bindLayerGroup(layerGroup, layer) {\n    const divId = layerGroup.getDivId();\n    // listen to active layer changes\n    layerGroup.addEventListener(\n      'activelayerchange', this.#getActiveLayerChangeHandler(divId));\n    // bind the layer\n    this.#internalBindLayerGroup(divId, layer);\n  }\n\n  /**\n   * Bind a layer group to this controller.\n   *\n   * @param {string} layerGroupDivId The layer group div id.\n   * @param {ViewLayer|DrawLayer} layer The layer.\n   */\n  #internalBindLayerGroup(layerGroupDivId, layer) {\n    // remove from local list if preset\n    if (typeof this.#boundLayers[layerGroupDivId] !== 'undefined') {\n      this.#unbindLayer(this.#boundLayers[layerGroupDivId]);\n    }\n    // replace layer in local list\n    this.#boundLayers[layerGroupDivId] = layer;\n    // bind layer\n    this.#bindLayer(layer);\n  }\n\n  /**\n   * Get an active layer change handler.\n   *\n   * @param {string} divId The associated layer group div id.\n   * @returns {Function} The event handler.\n   */\n  #getActiveLayerChangeHandler(divId) {\n    return (event) => {\n      const layer = event.value[0];\n      if (typeof layer !== 'undefined') {\n        this.#internalBindLayerGroup(divId, layer);\n      }\n    };\n  }\n\n  /**\n   * Add canvas mouse and touch listeners to a layer.\n   *\n   * @param {ViewLayer|DrawLayer} layer The layer to start listening to.\n   */\n  #bindLayer(layer) {\n    layer.bindInteraction();\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      layer.addEventListener(names[i],\n        this.#getCallback(layer.getId(), names[i]));\n    }\n  }\n\n  /**\n   * Remove canvas mouse and touch listeners to a layer.\n   *\n   * @param {ViewLayer|DrawLayer} layer The layer to stop listening to.\n   */\n  #unbindLayer(layer) {\n    layer.unbindInteraction();\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      layer.removeEventListener(names[i],\n        this.#getCallback(layer.getId(), names[i]));\n    }\n  }\n\n  /**\n   * Mou(se) and (T)ouch event handler. This function just determines\n   * the mouse/touch position relative to the canvas element.\n   * It then passes it to the current tool.\n   *\n   * @param {string} layerId The layer id.\n   * @param {string} eventType The event type.\n   * @returns {object} A callback for the provided layer and event.\n   */\n  #getCallback(layerId, eventType) {\n    if (typeof this.#callbackStore[layerId] === 'undefined') {\n      this.#callbackStore[layerId] = [];\n    }\n\n    if (typeof this.#callbackStore[layerId][eventType] === 'undefined') {\n      const applySelectedTool = (event) => {\n        // make sure we have a tool\n        if (this.#selectedTool) {\n          const func = this.#selectedTool[event.type];\n          if (func) {\n            func(event);\n          }\n        }\n      };\n      // store callback\n      this.#callbackStore[layerId][eventType] = applySelectedTool;\n    }\n\n    return this.#callbackStore[layerId][eventType];\n  }\n\n} // class ToolboxController\n","/**\n * Multiple progresses handler.\n * Stores a multi dimensional list of progresses to allow to\n * calculate a global progress.\n *\n */\nexport class MultiProgressHandler {\n\n  /**\n   * List of progresses.\n   * First dimension is a list of item for which the progress is recorded,\n   *   for example file names.\n   * Second dimension is a list of possible progresses, for example\n   *   the progress of the download and the progress of the decoding.\n   *\n   * @type {Array}\n   */\n  #progresses = [];\n\n  /**\n   * Number of dimensions.\n   *\n   * @type {number}\n   */\n  #numberOfDimensions = 2;\n\n  /**\n   * Progress callback.\n   *\n   * @type {Function}\n   */\n  #callback;\n\n  /**\n   * @param {Function} callback The function to pass the global progress to.\n   */\n  constructor(callback) {\n    this.#callback = callback;\n  }\n\n  /**\n   * Set the number of dimensions.\n   *\n   * @param {number} num The number.\n   */\n  setNumberOfDimensions(num) {\n    this.#numberOfDimensions = num;\n  }\n\n  /**\n   * Set the number of data to load.\n   *\n   * @param {number} n The number of data to load.\n   */\n  setNToLoad(n) {\n    for (let i = 0; i < n; ++i) {\n      this.#progresses[i] = [];\n      for (let j = 0; j < this.#numberOfDimensions; ++j) {\n        this.#progresses[i][j] = 0;\n      }\n    }\n  }\n\n  /**\n   * Handle a load progress.\n   * Call the member callback with a global event.\n   *\n   * @param {object} event The progress event.\n   */\n  onprogress = (event) => {\n    // check event\n    if (!event.lengthComputable) {\n      return;\n    }\n    if (typeof event.subindex === 'undefined') {\n      return;\n    }\n    if (typeof event.index === 'undefined') {\n      return;\n    }\n    // calculate percent\n    const percent = (event.loaded * 100) / event.total;\n    // set percent for index\n    this.#progresses[event.index][event.subindex] = percent;\n\n    // item progress\n    let item = null;\n    if (typeof event.item !== 'undefined') {\n      item = event.item;\n    } else {\n      item = {\n        loaded: this.#getItemProgress(event.index),\n        total: 100,\n        source: event.source\n      };\n    }\n\n    // call callback with a global event\n    this.#callback({\n      lengthComputable: true,\n      loaded: this.#getGlobalPercent(),\n      total: 100,\n      item: item\n    });\n  };\n\n  /**\n   * Get the item load percent.\n   *\n   * @param {number} index The index of the item.\n   * @returns {number} The load percentage.\n   */\n  #getItemProgress(index) {\n    let sum = 0;\n    for (let j = 0; j < this.#numberOfDimensions; ++j) {\n      sum += this.#progresses[index][j];\n    }\n    return sum / this.#numberOfDimensions;\n  }\n\n  /**\n   * Get the global load percent including the provided one.\n   *\n   * @returns {number} The accumulated percentage.\n   */\n  #getGlobalPercent() {\n    let sum = 0;\n    const lenprog = this.#progresses.length;\n    for (let i = 0; i < lenprog; ++i) {\n      sum += this.#getItemProgress(i);\n    }\n    return Math.round(sum / lenprog);\n  }\n\n\n  /**\n   * @callback eventFn\n   * @param {object} event The event.\n   */\n\n  /**\n   * Create a mono progress event handler.\n   *\n   * @param {number} index The index of the data.\n   * @param {number} subindex The sub-index of the data.\n   * @returns {eventFn} A progress handler function.\n   */\n  getMonoProgressHandler(index, subindex) {\n    return (event) => {\n      event.index = index;\n      event.subindex = subindex;\n      this.onprogress(event);\n    };\n  }\n\n  /**\n   * Create a mono progress event handler with an undefined index.\n   * Warning: The caller handles the progress index.\n   *\n   * @param {number} subindex The sub-index of the data.\n   * @returns {eventFn} A progress handler function.\n   */\n  getUndefinedMonoProgressHandler(subindex) {\n    return (event) => {\n      event.subindex = subindex;\n      this.onprogress(event);\n    };\n  }\n}\n","import {endsWith, getRootPath} from '../utils/string';\nimport {MultiProgressHandler} from '../utils/progress';\nimport {getFileListFromDicomDir} from '../dicom/dicomElementsWrapper';\nimport {loaderList} from './loaderList';\n\n// url content types\nexport const urlContentTypes = {\n  Text: 0,\n  ArrayBuffer: 1\n};\n\n/**\n * Urls loader.\n */\nexport class UrlsLoader {\n\n  /**\n   * Input data.\n   *\n   * @type {string[]}\n   */\n  #inputData = null;\n\n  /**\n   * Array of launched requests.\n   *\n   * @type {XMLHttpRequest[]}\n   */\n  #requests = [];\n\n  /**\n   * Data loader.\n   *\n   * @type {object}\n   */\n  #runningLoader = null;\n\n  /**\n   * Number of loaded data.\n   *\n   * @type {number}\n   */\n  #nLoad = 0;\n\n  /**\n   * Number of load end events.\n   *\n   * @type {number}\n   */\n  #nLoadend = 0;\n\n  /**\n   * Flag to know if the load is aborting.\n   *\n   * @type {boolean}\n   */\n  #aborting;\n\n  /**\n   * The default character set (optional).\n   *\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * Get the default character set.\n   *\n   * @returns {string} The default character set.\n   */\n  getDefaultCharacterSet() {\n    return this.#defaultCharacterSet;\n  }\n\n  /**\n   * Set the default character set.\n   *\n   * @param {string} characterSet The character set.\n   */\n  setDefaultCharacterSet(characterSet) {\n    this.#defaultCharacterSet = characterSet;\n  }\n\n  /**\n   * Store the current input.\n   *\n   * @param {string[]} data The input data.\n   */\n  #storeInputData(data) {\n    this.#inputData = data;\n    // reset counters\n    this.#nLoad = 0;\n    this.#nLoadend = 0;\n    // reset flag\n    this.#aborting = false;\n    // clear storage\n    this.#clearStoredRequests();\n    this.#clearStoredLoader();\n  }\n\n  /**\n   * Store a launched request.\n   *\n   * @param {XMLHttpRequest} request The launched request.\n   */\n  #storeRequest(request) {\n    this.#requests.push(request);\n  }\n\n  /**\n   * Clear the stored requests.\n   *\n   */\n  #clearStoredRequests() {\n    this.#requests = [];\n  }\n\n  /**\n   * Store the launched loader.\n   *\n   * @param {object} loader The launched loader.\n   */\n  #storeLoader(loader) {\n    this.#runningLoader = loader;\n  }\n\n  /**\n   * Clear the stored loader.\n   *\n   */\n  #clearStoredLoader() {\n    this.#runningLoader = null;\n  }\n\n  /**\n   * Increment the number of loaded data\n   *   and call onload if loaded all data.\n   *\n   * @param {object} _event The load data event.\n   */\n  #addLoad = (_event) => {\n    this.#nLoad++;\n    // call onload when all is loaded\n    // (not using the input event since it is\n    //   an individual load)\n    if (this.#nLoad === this.#inputData.length) {\n      this.onload({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * Increment the counter of load end events\n   *   and run callbacks when all done, erroneus or not.\n   *\n   * @param {object} _event The load end event.\n   */\n  #addLoadend = (_event) => {\n    this.#nLoadend++;\n    // call onloadend when all is run\n    // (not using the input event since it is\n    //   an individual load end)\n    if (this.#nLoadend === this.#inputData.length) {\n      this.onloadend({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * @callback eventFn\n   * @param {object} event The event.\n   */\n\n  /**\n   * Augment a callback event with a srouce.\n   *\n   * @param {object} callback The callback to augment its event.\n   * @param {object} source The source to add to the event.\n   * @returns {eventFn} The augmented callback.\n   */\n  #augmentCallbackEvent(callback, source) {\n    return (event) => {\n      event.source = source;\n      callback(event);\n    };\n  }\n\n  /**\n   * Load a list of URLs or a DICOMDIR.\n   *\n   * @param {string[]} data The list of urls to load.\n   * @param {object} [options] Load options.\n   */\n  load(data, options) {\n    // send start event\n    this.onloadstart({\n      source: data\n    });\n\n    // check if DICOMDIR case\n    if (data.length === 1 &&\n      (endsWith(data[0], 'DICOMDIR') ||\n      endsWith(data[0], '.dcmdir'))) {\n      this.#loadDicomDir(data[0], options);\n    } else {\n      this.#loadUrls(data, options);\n    }\n  }\n\n  /**\n   * Get a load handler for a data element.\n   *\n   * @param {object} loader The associated loader.\n   * @param {string} dataElement The data element.\n   * @param {number} i The index of the element.\n   * @returns {eventFn} A load handler.\n   */\n  #getLoadHandler(loader, dataElement, i) {\n    return (event) => {\n      // check response status\n      // https://developer.mozilla.org/en-US/docs/Web/HTTP/Response_codes\n      // status 200: \"OK\"; status 0: \"debug\"\n      const status = event.target.status;\n      if (status !== 200 && status !== 0) {\n        this.onerror({\n          source: dataElement,\n          error: 'GET ' + event.target.responseURL +\n            ' ' + event.target.status +\n            ' (' + event.target.statusText + ')',\n          target: event.target\n        });\n        this.#addLoadend();\n      } else {\n        loader.load(event.target.response, dataElement, i);\n      }\n    };\n  }\n\n  /**\n   * Load a list of urls.\n   *\n   * @param {string[]} data The list of urls to load.\n   * @param {object} [options] The options object, can contain:\n   * - requestHeaders: an array of {name, value} to use as request headers,\n   * - withCredentials: boolean xhr.withCredentials flag to pass\n   *   to the request,\n   * - batchSize: the size of the request url batch.\n   */\n  #loadUrls(data, options) {\n    // check input\n    if (typeof data === 'undefined' || data.length === 0) {\n      return;\n    }\n    this.#storeInputData(data);\n\n    // create prgress handler\n    const mproghandler = new MultiProgressHandler(this.onprogress);\n    mproghandler.setNToLoad(data.length);\n\n    // create loaders\n    const loaders = [];\n    for (let m = 0; m < loaderList.length; ++m) {\n      loaders.push(new loaderList[m]());\n    }\n\n    // find an appropriate loader\n    let dataElement = data[0];\n    let loader = null;\n    let foundLoader = false;\n    for (let l = 0; l < loaders.length; ++l) {\n      loader = loaders[l];\n      if (loader.canLoadUrl(dataElement, options)) {\n        foundLoader = true;\n        // load options\n        loader.setOptions({\n          numberOfFiles: data.length,\n          defaultCharacterSet: this.getDefaultCharacterSet()\n        });\n        // set loader callbacks\n        // loader.onloadstart: nothing to do\n        loader.onprogress = mproghandler.getUndefinedMonoProgressHandler(1);\n        loader.onloaditem = this.onloaditem;\n        loader.onload = this.#addLoad;\n        loader.onloadend = this.#addLoadend;\n        loader.onerror = this.onerror;\n        loader.onabort = this.onabort;\n\n        // store loader\n        this.#storeLoader(loader);\n        // exit\n        break;\n      }\n    }\n    if (!foundLoader) {\n      throw new Error('No loader found for url: ' + dataElement);\n    }\n\n    // store last run request index\n    let lastRunRequestIndex = 0;\n    const requestOnLoadEnd = () => {\n      // launch next in queue\n      if (lastRunRequestIndex < this.#requests.length - 1 && !this.#aborting) {\n        ++lastRunRequestIndex;\n        this.#requests[lastRunRequestIndex].send(null);\n      }\n    };\n\n    // loop on I/O elements\n    for (let i = 0; i < data.length; ++i) {\n      dataElement = data[i];\n\n      // check loader\n      if (!loader.canLoadUrl(dataElement, options)) {\n        throw new Error('Input url of different type: ' + dataElement);\n      }\n      /**\n       * The http request.\n       *\n       * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest}.\n       *\n       * @external XMLHttpRequest\n       */\n      const request = new XMLHttpRequest();\n      request.open('GET', dataElement, true);\n\n      // request options\n      if (typeof options !== 'undefined') {\n        // optional request headers\n        if (typeof options.requestHeaders !== 'undefined') {\n          const requestHeaders = options.requestHeaders;\n          for (let j = 0; j < requestHeaders.length; ++j) {\n            if (typeof requestHeaders[j].name !== 'undefined' &&\n              typeof requestHeaders[j].value !== 'undefined') {\n              request.setRequestHeader(\n                requestHeaders[j].name, requestHeaders[j].value);\n            }\n          }\n        }\n        // optional withCredentials\n        // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials\n        if (typeof options.withCredentials !== 'undefined') {\n          request.withCredentials = options.withCredentials;\n        }\n      }\n\n      // set request callbacks\n      // request.onloadstart: nothing to do\n      request.onprogress = this.#augmentCallbackEvent(\n        mproghandler.getMonoProgressHandler(i, 0), dataElement);\n      request.onload = this.#getLoadHandler(loader, dataElement, i);\n      request.onloadend = requestOnLoadEnd;\n      const errorCallback =\n        this.#augmentCallbackEvent(this.onerror, dataElement);\n      request.onerror = (event) => {\n        this.#addLoadend();\n        errorCallback(event);\n      };\n      const abortCallback =\n        this.#augmentCallbackEvent(this.onabort, dataElement);\n      request.onabort = (event) => {\n        this.#addLoadend();\n        abortCallback(event);\n      };\n      // response type (default is 'text')\n      if (loader.loadUrlAs() === urlContentTypes.ArrayBuffer) {\n        request.responseType = 'arraybuffer';\n      }\n\n      // store request\n      this.#storeRequest(request);\n    }\n\n    // launch requests in batch\n    let batchSize = this.#requests.length;\n    if (typeof options !== 'undefined') {\n      // optional request batch size\n      if (typeof options.batchSize !== 'undefined' && batchSize !== 0) {\n        batchSize = Math.min(options.batchSize, this.#requests.length);\n      }\n    }\n    for (let r = 0; r < batchSize; ++r) {\n      if (!this.#aborting) {\n        lastRunRequestIndex = r;\n        this.#requests[lastRunRequestIndex].send(null);\n      }\n    }\n  }\n\n  /**\n   * Load a DICOMDIR.\n   *\n   * @param {string} dicomDirUrl The DICOMDIR url.\n   * @param {object} [options] Load options.\n   */\n  #loadDicomDir(dicomDirUrl, options) {\n    // read DICOMDIR\n    const request = new XMLHttpRequest();\n    request.open('GET', dicomDirUrl, true);\n    request.responseType = 'arraybuffer';\n    // request.onloadstart: nothing to do\n    /**\n     * @param {object} event The load event.\n     */\n    request.onload = (event) => {\n      // check status\n      const status = event.target.status;\n      if (status !== 200 && status !== 0) {\n        this.onerror({\n          source: dicomDirUrl,\n          error: 'GET ' + event.target.responseURL +\n            ' ' + event.target.status +\n            ' (' + event.target.statusText + ')',\n          target: event.target\n        });\n        this.onloadend({});\n      } else {\n        // get the file list\n        const list = getFileListFromDicomDir(event.target.response);\n        // use the first list\n        const urls = list[0][0];\n        // append root url\n        const rootUrl = getRootPath(dicomDirUrl);\n        const fullUrls = [];\n        for (let i = 0; i < urls.length; ++i) {\n          fullUrls.push(rootUrl + '/' + urls[i]);\n        }\n        // load urls\n        this.#loadUrls(fullUrls, options);\n      }\n    };\n    request.onerror = (event) => {\n      this.#augmentCallbackEvent(this.onerror, dicomDirUrl)(event);\n      this.onloadend({});\n    };\n    request.onabort = (event) => {\n      this.#augmentCallbackEvent(this.onabort, dicomDirUrl)(event);\n      this.onloadend({});\n    };\n    // request.onloadend: nothing to do\n    // send request\n    request.send(null);\n  }\n\n  /**\n   * Abort a load.\n   */\n  abort() {\n    this.#aborting = true;\n    // abort non finished requests\n    for (let i = 0; i < this.#requests.length; ++i) {\n      // 0: UNSENT, 1: OPENED, 2: HEADERS_RECEIVED (send()), 3: LOADING, 4: DONE\n      if (this.#requests[i].readyState !== 4) {\n        this.#requests[i].abort();\n      }\n    }\n    // abort loader\n    if (this.#runningLoader && this.#runningLoader.isLoading()) {\n      this.#runningLoader.abort();\n    }\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class UrlsLoader\n","/**\n * Thread Pool.\n *\n * Highly inspired from {@link http://www.smartjava.org/content/html5-easily-parallelize-jobs-using-web-workers-and-threadpool}.\n */\nexport class ThreadPool {\n\n  /**\n   * @param {number} poolSize The size of the pool.\n   */\n  constructor(poolSize) {\n    this.poolSize = poolSize;\n    // task queue\n    this.taskQueue = [];\n    // lsit of available threads\n    this.freeThreads = [];\n    // create 'poolSize' number of worker threads\n    for (let i = 0; i < poolSize; ++i) {\n      this.freeThreads.push(new WorkerThread(this));\n    }\n    // list of running threads (unsed in abort)\n    this.runningThreads = [];\n  }\n\n  /**\n   * Add a worker task to the queue.\n   * Will be run when a thread is made available.\n   *\n   * @param {object} workerTask The task to add to the queue.\n   */\n  addWorkerTask(workerTask) {\n    // send work start if first task\n    if (this.freeThreads.length === this.poolSize) {\n      this.onworkstart({type: 'work-start'});\n    }\n    // launch task or queue\n    if (this.freeThreads.length > 0) {\n      // get the first free worker thread\n      const workerThread = this.freeThreads.shift();\n      // add the thread to the runnning list\n      this.runningThreads.push(workerThread);\n      // run the input task\n      workerThread.run(workerTask);\n    } else {\n      // no free thread, add task to queue\n      this.taskQueue.push(workerTask);\n    }\n  }\n\n  /**\n   * Abort all threads.\n   */\n  abort() {\n    // stop all threads\n    this.#stop();\n    // callback\n    this.onabort({type: 'work-abort'});\n    this.onworkend({type: 'work-end'});\n  }\n\n  /**\n   * Handle a task end.\n   *\n   * @param {object} workerThread The thread to free.\n   */\n  onTaskEnd(workerThread) {\n    // launch next task in queue or finish\n    if (this.taskQueue.length > 0) {\n      // get waiting task\n      const workerTask = this.taskQueue.shift();\n      // use input thread to run the waiting task\n      workerThread.run(workerTask);\n    } else {\n      // stop the worker\n      workerThread.stop();\n      // no task to run, add to free list\n      this.freeThreads.push(workerThread);\n      // remove from running list\n      for (let i = 0; i < this.runningThreads.length; ++i) {\n        if (this.runningThreads[i].getId() === workerThread.getId()) {\n          this.runningThreads.splice(i, 1);\n        }\n      }\n      // the work is done when the queue is back to its initial size\n      if (this.freeThreads.length === this.poolSize) {\n        this.onwork({type: 'work'});\n        this.onworkend({type: 'work-end'});\n      }\n    }\n  }\n\n  /**\n   * Handle an error message from a worker.\n   *\n   * @param {object} event The error event.\n   */\n  handleWorkerError = (event) => {\n    // stop all threads\n    this.#stop();\n    // callback\n    this.onerror({error: event});\n    this.onworkend({type: 'work-end'});\n  };\n\n  // private ----------------------------------------------------------------\n\n  /**\n   * Stop the pool: stop all running threads.\n   *\n   */\n  #stop() {\n    // clear tasks\n    this.taskQueue = [];\n    // cancel running workers\n    for (let i = 0; i < this.runningThreads.length; ++i) {\n      this.runningThreads[i].stop();\n    }\n    this.runningThreads = [];\n  }\n\n\n  /**\n   * Handle a work start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The work start event.\n   */\n  onworkstart(_event) {}\n\n  /**\n   * Handle a work item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The work item event fired\n   *   when a work item ended successfully.\n   */\n  onworkitem(_event) {}\n\n  /**\n   * Handle a work event.\n   * Default does nothing.\n   *\n   * @param {object} _event The work event fired\n   *   when a work ended successfully.\n   */\n  onwork(_event) {}\n\n  /**\n   * Handle a work end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The work end event fired\n   *  when a work has completed, successfully or not.\n   */\n  onworkend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // ThreadPool\n\n/**\n * Worker background task.\n *\n * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/API/Worker}.\n *\n * @external Worker\n */\n\n/**\n * Worker thread.\n */\nclass WorkerThread {\n\n  /**\n   * @param {object} parentPool The parent pool.\n   */\n  constructor(parentPool) {\n    this.parentPool = parentPool;\n    // thread ID\n    this.id = Math.random().toString(36).substring(2, 15);\n    // running task\n    this.runningTask = null;\n    // worker used to run task\n    this.worker;\n  }\n\n  /**\n   * Get the thread ID.\n   *\n   * @returns {string} The thread ID (alphanumeric).\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Run a worker task.\n   *\n   * @param {object} workerTask The task to run.\n   */\n  run(workerTask) {\n    // store task\n    this.runningTask = workerTask;\n    // create a new web worker if not done yet\n    if (typeof this.worker === 'undefined') {\n      this.worker = new Worker(this.runningTask.script);\n      // set callbacks\n      this.worker.onmessage = this.onmessage;\n      this.worker.onerror = this.onerror;\n    }\n    // launch the worker\n    this.worker.postMessage(this.runningTask.startMessage);\n  }\n\n  /**\n   * Finish a task and tell the parent.\n   */\n  stop() {\n    // stop the worker\n    if (typeof this.worker !== 'undefined') {\n      this.worker.terminate();\n      // force create at next run\n      this.worker = undefined;\n    }\n  }\n\n  /**\n   * Message event handler.\n   * For now assume we only get a single callback from a worker\n   * which also indicates the end of this worker.\n   *\n   * @param {object} event The message event.\n   */\n  onmessage = (event) => {\n    // augment event\n    event.itemNumber = this.runningTask.info.itemNumber;\n    event.numberOfItems = this.runningTask.info.numberOfItems;\n    event.index = this.runningTask.info.index;\n    // send event\n    this.parentPool.onworkitem(event);\n    // tell the parent pool the task is done\n    this.parentPool.onTaskEnd(this);\n  };\n\n  /**\n   * Error event handler.\n   *\n   * @param {object} event The error event.\n   */\n  onerror = (event) => {\n    // augment event\n    event.itemNumber = this.runningTask.info.itemNumber;\n    event.numberOfItems = this.runningTask.info.numberOfItems;\n    event.index = this.runningTask.info.index;\n    // pass to parent\n    this.parentPool.handleWorkerError(event);\n    // stop the worker and free the thread\n    this.stop();\n  };\n} // class WorkerThread\n\n/**\n * Worker task.\n */\nexport class WorkerTask {\n  /**\n   * @param {string} script The worker script.\n   * @param {object} message The data to pass to the worker.\n   * @param {object} info Information object about the input data.\n   */\n  constructor(script, message, info) {\n    // worker script\n    this.script = script;\n    // worker start message\n    this.startMessage = message;\n    // information about the work data\n    this.info = info;\n  }\n}\n","import {ThreadPool, WorkerTask} from '../utils/thread';\n\n/**\n * The JPEG baseline decoder.\n *\n * Ref: {@link https://github.com/mozilla/pdf.js/blob/master/src/core/jpg.js}.\n *\n * @external JpegImage\n */\n/* global JpegImage */\n// @ts-ignore\nconst hasJpegBaselineDecoder = (typeof JpegImage !== 'undefined');\n\n/**\n * The JPEG decoder namespace.\n *\n * Ref: {@link https://github.com/rii-mango/JPEGLosslessDecoderJS}.\n *\n * @external jpeg\n */\n/* global jpeg */\nconst hasJpegLosslessDecoder =\n  // @ts-ignore\n  (typeof jpeg !== 'undefined') && (typeof jpeg.lossless !== 'undefined');\n\n/**\n * The JPEG 2000 decoder.\n *\n * Ref: {@link https://github.com/jpambrun/jpx-medical/blob/master/jpx.js}.\n *\n * @external JpxImage\n */\n/* global JpxImage */\n// @ts-ignore\nconst hasJpeg2000Decoder = (typeof JpxImage !== 'undefined');\n\n/* global dwvdecoder */\n\n/**\n * Decoder scripts to be passed to web workers for image decoding.\n */\nexport const decoderScripts = {\n  jpeg2000: '',\n  'jpeg-lossless': '',\n  'jpeg-baseline': '',\n  rle: ''\n};\n\n/**\n * Asynchronous pixel buffer decoder.\n */\nclass AsynchPixelBufferDecoder {\n\n  /**\n   * The associated worker script.\n   *\n   * @type {string}\n   */\n  #script;\n\n  /**\n   * Associated thread pool.\n   *\n   * @type {ThreadPool}\n   */\n  #pool = new ThreadPool(10);\n\n  /**\n   * Flag to know if callbacks are set.\n   *\n   * @type {boolean}\n   */\n  #areCallbacksSet = false;\n\n  /**\n   * @param {string} script The path to the decoder script to be used\n   *   by the web worker.\n   * @param {number} _numberOfData The anticipated number of data to decode.\n   */\n  constructor(script, _numberOfData) {\n    this.#script = script;\n  }\n\n  /**\n   * Decode a pixel buffer.\n   *\n   * @param {Array} pixelBuffer The pixel buffer.\n   * @param {object} pixelMeta The input meta data.\n   * @param {object} info Information object about the input data.\n   */\n  decode(pixelBuffer, pixelMeta, info) {\n    if (!this.#areCallbacksSet) {\n      this.#areCallbacksSet = true;\n      // set event handlers\n      this.#pool.onworkstart = this.ondecodestart;\n      this.#pool.onworkitem = this.ondecodeditem;\n      this.#pool.onwork = this.ondecoded;\n      this.#pool.onworkend = this.ondecodeend;\n      this.#pool.onerror = this.onerror;\n      this.#pool.onabort = this.onabort;\n    }\n    // create worker task\n    const workerTask = new WorkerTask(\n      this.#script,\n      {\n        buffer: pixelBuffer,\n        meta: pixelMeta\n      },\n      info\n    );\n    // add it the queue and run it\n    this.#pool.addWorkerTask(workerTask);\n  }\n\n  /**\n   * Abort decoding.\n   */\n  abort() {\n    // abort the thread pool, will trigger pool.onabort\n    this.#pool.abort();\n  }\n\n  /**\n   * Handle a decode start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode start event.\n   */\n  ondecodestart(_event) {}\n\n  /**\n   * Handle a decode item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode item event fired\n   *   when a decode item ended successfully.\n   */\n  ondecodeditem(_event) {}\n\n  /**\n   * Handle a decode event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode event fired\n   *   when a file has been decoded successfully.\n   */\n  ondecoded(_event) {}\n\n  /**\n   * Handle a decode end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode end event fired\n   *  when a file decoding has completed, successfully or not.\n   */\n  ondecodeend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class AsynchPixelBufferDecoder\n\n/**\n * Synchronous pixel buffer decoder.\n */\nclass SynchPixelBufferDecoder {\n\n  /**\n   * Name of the compression algorithm.\n   *\n   * @type {string}\n   */\n  #algoName;\n\n  /**\n   * Number of data.\n   *\n   * @type {number}\n   */\n  #numberOfData;\n\n  /**\n   * @param {string} algoName The decompression algorithm name.\n   * @param {number} numberOfData The anticipated number of data to decode.\n   */\n  constructor(algoName, numberOfData) {\n    this.#algoName = algoName;\n    this.#numberOfData = numberOfData;\n  }\n\n  // decode count\n  #decodeCount = 0;\n\n  /**\n   * Decode a pixel buffer.\n   *\n   * @param {Array} pixelBuffer The pixel buffer.\n   * @param {object} pixelMeta The input meta data.\n   * @param {object} info Information object about the input data.\n   * @external jpeg\n   * @external JpegImage\n   * @external JpxImage\n   */\n  decode(pixelBuffer, pixelMeta, info) {\n    ++this.#decodeCount;\n\n    let decoder = null;\n    let decodedBuffer = null;\n    if (this.#algoName === 'jpeg-lossless') {\n      if (!hasJpegLosslessDecoder) {\n        throw new Error('No JPEG Lossless decoder provided');\n      }\n      // bytes per element\n      const bpe = pixelMeta.bitsAllocated / 8;\n      const buf = new Uint8Array(pixelBuffer);\n      // @ts-ignore\n      decoder = new jpeg.lossless.Decoder();\n      const decoded = decoder.decode(buf.buffer, 0, buf.buffer.byteLength, bpe);\n      if (pixelMeta.bitsAllocated === 8) {\n        if (pixelMeta.isSigned) {\n          decodedBuffer = new Int8Array(decoded.buffer);\n        } else {\n          decodedBuffer = new Uint8Array(decoded.buffer);\n        }\n      } else if (pixelMeta.bitsAllocated === 16) {\n        if (pixelMeta.isSigned) {\n          decodedBuffer = new Int16Array(decoded.buffer);\n        } else {\n          decodedBuffer = new Uint16Array(decoded.buffer);\n        }\n      }\n    } else if (this.#algoName === 'jpeg-baseline') {\n      if (!hasJpegBaselineDecoder) {\n        throw new Error('No JPEG Baseline decoder provided');\n      }\n      // @ts-ignore\n      decoder = new JpegImage();\n      decoder.parse(pixelBuffer);\n      decodedBuffer = decoder.getData(decoder.width, decoder.height);\n    } else if (this.#algoName === 'jpeg2000') {\n      if (!hasJpeg2000Decoder) {\n        throw new Error('No JPEG 2000 decoder provided');\n      }\n      // decompress pixel buffer into Int16 image\n      // @ts-ignore\n      decoder = new JpxImage();\n      decoder.parse(pixelBuffer);\n      // set the pixel buffer\n      decodedBuffer = decoder.tiles[0].items;\n    } else if (this.#algoName === 'rle') {\n      // decode DICOM buffer\n      // @ts-ignore\n      decoder = new dwvdecoder.RleDecoder();\n      // set the pixel buffer\n      decodedBuffer = decoder.decode(\n        pixelBuffer,\n        pixelMeta.bitsAllocated,\n        pixelMeta.isSigned,\n        pixelMeta.sliceSize,\n        pixelMeta.samplesPerPixel,\n        pixelMeta.planarConfiguration);\n    }\n    // send decode events\n    this.ondecodeditem({\n      data: [decodedBuffer],\n      index: info.index,\n      numberOfItems: info.numberOfItems,\n      itemNumber: info.itemNumber\n    });\n    // decode end?\n    if (this.#decodeCount === this.#numberOfData) {\n      this.ondecoded({});\n      this.ondecodeend({});\n    }\n  }\n\n  /**\n   * Abort decoding.\n   */\n  abort() {\n    // nothing to do in the synchronous case.\n    // callback\n    this.onabort({});\n    this.ondecodeend({});\n  }\n\n  /**\n   * Handle a decode start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode start event.\n   */\n  ondecodestart(_event) {}\n\n  /**\n   * Handle a decode item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode item event fired\n   *   when a decode item ended successfully.\n   */\n  ondecodeditem(_event) {}\n\n  /**\n   * Handle a decode event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode event fired\n   *   when a file has been decoded successfully.\n   */\n  ondecoded(_event) {}\n\n  /**\n   * Handle a decode end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode end event fired\n   *  when a file decoding has completed, successfully or not.\n   */\n  ondecodeend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class SynchPixelBufferDecoder\n\n/**\n * Decode a pixel buffer.\n *\n * If the 'decoderScripts' variable does not contain the desired,\n * algorythm the decoder will switch to the synchronous mode.\n */\nexport class PixelBufferDecoder {\n\n  /**\n   * Flag to know if callbacks are set.\n   *\n   * @type {boolean}\n   */\n  #areCallbacksSet = false;\n\n  /**\n   * Pixel decoder.\n   * Defined only once.\n   *\n   * @type {object}\n   */\n  #pixelDecoder = null;\n\n  /**\n   * @param {string} algoName The decompression algorithm name.\n   * @param {number} numberOfData The anticipated number of data to decode.\n   */\n  constructor(algoName, numberOfData) {\n    // initialise the asynch decoder (if possible)\n    if (typeof decoderScripts !== 'undefined' &&\n      typeof decoderScripts[algoName] !== 'undefined') {\n      this.#pixelDecoder = new AsynchPixelBufferDecoder(\n        decoderScripts[algoName], numberOfData);\n    } else {\n      this.#pixelDecoder = new SynchPixelBufferDecoder(\n        algoName, numberOfData);\n    }\n  }\n\n  /**\n   * Get data from an input buffer using a DICOM parser.\n   *\n   * @param {Array} pixelBuffer The input data buffer.\n   * @param {object} pixelMeta The input meta data.\n   * @param {object} info Information object about the input data.\n   */\n  decode(pixelBuffer, pixelMeta, info) {\n    if (!this.#areCallbacksSet) {\n      this.#areCallbacksSet = true;\n      // set callbacks\n      this.#pixelDecoder.ondecodestart = this.ondecodestart;\n      this.#pixelDecoder.ondecodeditem = this.ondecodeditem;\n      this.#pixelDecoder.ondecoded = this.ondecoded;\n      this.#pixelDecoder.ondecodeend = this.ondecodeend;\n      this.#pixelDecoder.onerror = this.onerror;\n      this.#pixelDecoder.onabort = this.onabort;\n    }\n    // decode and call the callback\n    this.#pixelDecoder.decode(pixelBuffer, pixelMeta, info);\n  }\n\n  /**\n   * Abort decoding.\n   */\n  abort() {\n    // decoder classes should define an abort\n    this.#pixelDecoder.abort();\n  }\n\n  /**\n   * Handle a decode start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode start event.\n   */\n  ondecodestart(_event) {}\n\n  /**\n   * Handle a decode item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode item event fired\n   *   when a decode item ended successfully.\n   */\n  ondecodeditem(_event) {}\n\n  /**\n   * Handle a decode event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode event fired\n   *   when a file has been decoded successfully.\n   */\n  ondecoded(_event) {}\n\n  /**\n   * Handle a decode end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode end event fired\n   *  when a file decoding has completed, successfully or not.\n   */\n  ondecodeend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class PixelBufferDecoder\n","import {\n  getCode,\n  getDicomCodeItem\n} from './dicomCode';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from './dataElement';\nimport {DicomCode} from './dicomCode';\n/* eslint-enable no-unused-vars */\n\n/**\n * Related DICOM tag keys.\n */\nconst TagKeys = {\n  NumericValue: '0040A30A',\n  FloatingPointValue: '0040A161',\n  RationalNumeratorValue: '0040A162',\n  RationalDenominatorValue: '0040A163',\n  MeasurementUnitsCodeSequence: '004008EA'\n};\n\n/**\n * DICOM measured value: property of a numeric measurement.\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.18.html#table_C.18.1-1}.\n */\nexport class MeasuredValue {\n  /**\n   * @type {number}\n   */\n  numericValue;\n\n  /**\n   * @type {number}\n   */\n  floatingPointValue;\n\n  /**\n   * @type {number}\n   */\n  rationalNumeratorValue;\n\n  /**\n   * @type {number}\n   */\n  rationalDenominatorValue;\n\n  /**\n   * @type {DicomCode}\n   */\n  measurementUnitsCode;\n\n  /**\n   * Get a string representation of this object.\n   *\n   * @returns {string} The object as string.\n   */\n  toString() {\n    return this.numericValue + ' ' +\n      this.measurementUnitsCode.toString();\n  };\n\n};\n\n/**\n * Get a measured value object from a dicom element.\n *\n * @param {Object<string, DataElement>} dataElements The dicom element.\n * @returns {MeasuredValue} A measured value object.\n */\nexport function getMeasuredValue(dataElements) {\n  const value = new MeasuredValue();\n\n  if (typeof dataElements[TagKeys.NumericValue] !== 'undefined') {\n    value.numericValue = dataElements[TagKeys.NumericValue].value[0];\n  }\n  if (typeof dataElements[TagKeys.FloatingPointValue] !== 'undefined') {\n    value.floatingPointValue =\n      dataElements[TagKeys.FloatingPointValue].value[0];\n  }\n  if (typeof dataElements[TagKeys.RationalNumeratorValue] !== 'undefined') {\n    value.rationalNumeratorValue =\n      dataElements[TagKeys.RationalNumeratorValue].value[0];\n  }\n  if (typeof dataElements[TagKeys.RationalDenominatorValue] !== 'undefined') {\n    value.rationalDenominatorValue =\n      dataElements[TagKeys.RationalDenominatorValue].value[0];\n  }\n  if (typeof dataElements[TagKeys.MeasurementUnitsCodeSequence] !==\n    'undefined') {\n    value.measurementUnitsCode = getCode(\n      dataElements[TagKeys.MeasurementUnitsCodeSequence].value[0]);\n  }\n\n  return value;\n};\n\n/**\n * Get a simple dicom element item from a measured value object.\n *\n * @param {MeasuredValue} value The measured value object.\n * @returns {Object<string, any>} The item as a list of (key, value) pairs.\n */\nexport function getDicomMeasuredValueItem(value) {\n  // dicom item (tags are in group/element order)\n  const item = {};\n\n  if (typeof value.measurementUnitsCode !== 'undefined') {\n    item.MeasurementUnitsCodeSequence = {\n      value: [getDicomCodeItem(value.measurementUnitsCode)]\n    };\n  }\n  if (typeof value.floatingPointValue !== 'undefined') {\n    item.FloatingPointValue = value.floatingPointValue;\n  }\n  if (typeof value.rationalNumeratorValue !== 'undefined') {\n    item.RationalNumeratorValue = value.rationalNumeratorValue;\n  }\n  if (typeof value.rationalDenominatorValue !== 'undefined') {\n    item.RationalDenominatorValue = value.rationalDenominatorValue;\n  }\n  if (typeof value.numericValue !== 'undefined') {\n    item.NumericValue = value.numericValue;\n  }\n\n  // return\n  return item;\n}\n","import {\n  getCode,\n  getDicomCodeItem\n} from './dicomCode';\nimport {\n  getMeasuredValue,\n  getDicomMeasuredValueItem\n} from './dicomMeasuredValue';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from './dataElement';\nimport {MeasuredValue} from './dicomMeasuredValue';\nimport {DicomCode} from './dicomCode';\n/* eslint-enable no-unused-vars */\n\n/**\n * Related DICOM tag keys.\n */\nconst TagKeys = {\n  MeasuredValueSequence: '0040A300',\n  NumericValueQualifierCodeSequence: '0040A301'\n};\n\n/**\n * DICOM numeric measurement: item of a SR content sequence.\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.18.html#table_C.18.1-1}.\n */\nexport class NumericMeasurement {\n  /**\n   * @type {MeasuredValue}\n   */\n  measuredValue;\n\n  /**\n   * @type {DicomCode}\n   */\n  numericValueQualifierCode;\n\n  /**\n   * Get a string representation of this object.\n   *\n   * @returns {string} The object as string.\n   */\n  toString() {\n    let res = this.measuredValue.toString();\n    if (typeof this.numericValueQualifierCode !== 'undefined') {\n      res += ' ' + this.numericValueQualifierCode.toString();\n    }\n    return res;\n  }\n};\n\n/**\n * Get a measurement object from a dicom element.\n *\n * @param {Object<string, DataElement>} dataElements The dicom element.\n * @returns {NumericMeasurement} A measurement object.\n */\nexport function getNumericMeasurement(dataElements) {\n  const measurement = new NumericMeasurement();\n\n  if (typeof dataElements[TagKeys.MeasuredValueSequence] !== 'undefined') {\n    measurement.measuredValue = getMeasuredValue(\n      dataElements[TagKeys.MeasuredValueSequence].value[0]);\n  }\n  if (typeof dataElements[TagKeys.NumericValueQualifierCodeSequence] !==\n    'undefined') {\n    measurement.numericValueQualifierCode = getCode(\n      dataElements[TagKeys.NumericValueQualifierCodeSequence].value[0]);\n  }\n\n  return measurement;\n};\n\n/**\n * Get a simple dicom element item from a measurement object.\n *\n * @param {NumericMeasurement} measurement The measurement object.\n * @returns {Object<string, any>} The item as a list of (key, value) pairs.\n */\nexport function getDicomNumericMeasurementItem(measurement) {\n  // dicom item (tags are in group/element order)\n  const item = {};\n\n  if (typeof measurement.measuredValue !== 'undefined') {\n    item.MeasuredValueSequence = {\n      value: [getDicomMeasuredValueItem(measurement.measuredValue)]\n    };\n  }\n  if (typeof measurement.numericValueQualifierCode !== 'undefined') {\n    item.NumericValueQualifierCodeSequence = {\n      value: [getDicomCodeItem(measurement.numericValueQualifierCode)]\n    };\n  }\n\n  // return\n  return item;\n}\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from './dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * Related DICOM tag keys.\n */\nconst TagKeys = {\n  ReferencedSOPClassUID: '00081150',\n  ReferencedSOPInstanceUID: '00081155'\n};\n\n/**\n * DICOM sop instance reference.\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_10.8.html#table_10-11}.\n */\nexport class SopInstanceReference {\n  /**\n   * @type {string}\n   */\n  referencedSOPClassUID;\n\n  /**\n   * @type {string}\n   */\n  referencedSOPInstanceUID;\n\n  /**\n   * Get a string representation of this object.\n   *\n   * @returns {string} The object as string.\n   */\n  toString() {\n    return this.referencedSOPInstanceUID + ' (class: ' +\n      this.referencedSOPClassUID + ')';\n  };\n};\n\n/**\n * Get a SOP reference object from a dicom element.\n *\n * @param {Object<string, DataElement>} dataElements The dicom element.\n * @returns {SopInstanceReference} A SOP reference object.\n */\nexport function getSopInstanceReference(dataElements) {\n  const ref = new SopInstanceReference();\n\n  if (typeof dataElements[TagKeys.ReferencedSOPClassUID] !== 'undefined') {\n    ref.referencedSOPClassUID =\n      dataElements[TagKeys.ReferencedSOPClassUID].value[0];\n  }\n  if (typeof dataElements[TagKeys.ReferencedSOPInstanceUID] !== 'undefined') {\n    ref.referencedSOPInstanceUID =\n      dataElements[TagKeys.ReferencedSOPInstanceUID].value[0];\n  }\n\n  return ref;\n};\n\n/**\n * Get a simple dicom element item from a SOP reference object.\n *\n * @param {SopInstanceReference} ref The SOP reference object.\n * @returns {Object<string, any>} The item as a list of (key, value) pairs.\n */\nexport function getDicomSopInstanceReferenceItem(ref) {\n  // dicom item (tags are in group/element order)\n  const item = {};\n\n  if (typeof ref.referencedSOPClassUID !== 'undefined') {\n    item.ReferencedSOPClassUID = ref.referencedSOPClassUID;\n  }\n  if (typeof ref.referencedSOPInstanceUID !== 'undefined') {\n    item.ReferencedSOPInstanceUID = ref.referencedSOPInstanceUID;\n  }\n\n  // return\n  return item;\n}\n","import {\n  getSopInstanceReference,\n  getDicomSopInstanceReferenceItem\n} from './dicomSopInstanceReference';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from './dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * Related DICOM tag keys.\n */\nconst TagKeys = {\n  ReferencedFrameNumber: '00081160',\n  ReferencedSOPSequence: '00081199',\n  ReferencedSegmentNumber: '0062000B'\n};\n\n/**\n * DICOM image reference: item of a SR content sequence.\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.18.4.html#table_C.18.4-1}.\n */\nexport class ImageReference {\n  /**\n   * @type {object}\n   */\n  referencedSOPSequence;\n\n  /**\n   * @type {object}\n   */\n  referencedFrameNumber;\n\n  /**\n   * @type {string}\n   */\n  referencedSegmentNumber;\n\n  /**\n   * @type {string}\n   */\n  fiducialUID;\n\n  /**\n   * Get a string representation of this object.\n   *\n   * @returns {string} The object as string.\n   */\n  toString() {\n    return this.referencedSOPSequence.toString();\n  };\n};\n\n/**\n * Get a reference object from a dicom element.\n *\n * @param {Object<string, DataElement>} dataElements The dicom element.\n * @returns {ImageReference} A reference object.\n */\nexport function getImageReference(dataElements) {\n  const ref = new ImageReference();\n\n  if (typeof dataElements[TagKeys.ReferencedFrameNumber] !== 'undefined') {\n    ref.referencedFrameNumber =\n      dataElements[TagKeys.ReferencedFrameNumber].value[0];\n  }\n  if (typeof dataElements[TagKeys.ReferencedSOPSequence] !== 'undefined') {\n    ref.referencedSOPSequence = getSopInstanceReference(\n      dataElements[TagKeys.ReferencedSOPSequence].value[0]);\n  }\n  if (typeof dataElements[TagKeys.ReferencedSegmentNumber] !== 'undefined') {\n    ref.referencedSegmentNumber =\n      dataElements[TagKeys.ReferencedSegmentNumber].value[0];\n  }\n\n  return ref;\n};\n\n/**\n * Get a simple dicom element item from a reference object.\n *\n * @param {ImageReference} ref The reference object.\n * @returns {Object<string, any>} The item as a list of (key, value) pairs.\n */\nexport function getDicomImageReferenceItem(ref) {\n  // dicom item (tags are in group/element order)\n  const item = {};\n\n  if (typeof ref.referencedFrameNumber !== 'undefined') {\n    item.ReferencedFrameNumber = ref.referencedFrameNumber;\n  }\n  if (typeof ref.referencedSOPSequence !== 'undefined') {\n    item.ReferencedSOPSequence = {\n      value: [getDicomSopInstanceReferenceItem(ref.referencedSOPSequence)]\n    };\n  }\n  if (typeof ref.referencedSegmentNumber !== 'undefined') {\n    item.ReferencedSegmentNumber =\n      ref.referencedSegmentNumber;\n  }\n\n  // return\n  return item;\n}\n","import {Point2D} from '../math/point';\nimport {Line, areOrthogonal} from '../math/line';\nimport {Protractor} from '../math/protractor';\nimport {ROI} from '../math/roi';\nimport {Circle} from '../math/circle';\nimport {Ellipse} from '../math/ellipse';\nimport {Rectangle} from '../math/rectangle';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from './dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * Related DICOM tag keys.\n */\nconst TagKeys = {\n  PixelOriginInterpretation: '00480301',\n  GraphicData: '00700022',\n  GraphicType: '00700023',\n  FiducialUID: '0070031A'\n};\n\n/**\n * DICOM graphic types.\n */\nexport const GraphicTypes = {\n  point: 'POINT',\n  multipoint: 'MULTIPOINT',\n  polyline: 'POLYLINE',\n  circle: 'CIRCLE',\n  ellipse: 'ELLIPSE'\n};\n\n/**\n * DICOM spatial coordinate (SCOORD): item of a SR content sequence.\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.18.6.html#table_C.18.6-1}.\n */\nexport class SpatialCoordinate {\n  /**\n   * @type {string[]}\n   */\n  graphicData;\n\n  /**\n   * @type {string}\n   */\n  graphicType;\n\n  /**\n   * @type {string}\n   */\n  pixelOriginInterpretation;\n\n  /**\n   * @type {string}\n   */\n  fiducialUID;\n\n  /**\n   * Get a string representation of this object.\n   *\n   * @returns {string} The object as string.\n   */\n  toString() {\n    return this.graphicType +\n      ' {' + this.graphicData + '}';\n  };\n};\n\n/**\n * Get a scoord object from a dicom element.\n *\n * @param {Object<string, DataElement>} dataElements The dicom element.\n * @returns {SpatialCoordinate} A scoord object.\n */\nexport function getSpatialCoordinate(dataElements) {\n  const scoord = new SpatialCoordinate();\n\n  if (typeof dataElements[TagKeys.GraphicData] !== 'undefined') {\n    scoord.graphicData = dataElements[TagKeys.GraphicData].value;\n  }\n  if (typeof dataElements[TagKeys.GraphicType] !== 'undefined') {\n    scoord.graphicType = dataElements[TagKeys.GraphicType].value[0];\n  }\n  if (typeof dataElements[TagKeys.PixelOriginInterpretation] !== 'undefined') {\n    scoord.pixelOriginInterpretation =\n      dataElements[TagKeys.PixelOriginInterpretation].value[0];\n  }\n  if (typeof dataElements[TagKeys.FiducialUID] !== 'undefined') {\n    scoord.fiducialUID = dataElements[TagKeys.FiducialUID].value[0];\n  }\n  return scoord;\n};\n\n/**\n * Get a simple dicom element item from a scoord object.\n *\n * @param {SpatialCoordinate} scoord The scoord object.\n * @returns {Object<string, any>} The item as a list of (key, value) pairs.\n */\nexport function getDicomSpatialCoordinateItem(scoord) {\n  // dicom item (tags are in group/element order)\n  const item = {};\n\n  if (typeof scoord.pixelOriginInterpretation !== 'undefined') {\n    item.PixelOriginInterpretation = scoord.pixelOriginInterpretation;\n  }\n  if (typeof scoord.graphicData !== 'undefined') {\n    item.GraphicData = scoord.graphicData;\n  }\n  if (typeof scoord.graphicType !== 'undefined') {\n    item.GraphicType = scoord.graphicType;\n  }\n  if (typeof scoord.fiducialUID !== 'undefined') {\n    item.FiducialUID = scoord.fiducialUID;\n  }\n\n  // return\n  return item;\n}\n\n/**\n * Get a DICOM spatial coordinate (SCOORD) from a mathematical shape.\n *\n * @param {Point2D|Line|Protractor|ROI|Circle|Ellipse|Rectangle} shape\n *   The math shape.\n * @returns {SpatialCoordinate} The DICOM scoord.\n */\nexport function getScoordFromShape(shape) {\n  const scoord = new SpatialCoordinate();\n\n  if (shape instanceof Point2D) {\n    scoord.graphicData = [\n      shape.getX().toString(),\n      shape.getY().toString(),\n    ];\n    scoord.graphicType = GraphicTypes.point;\n  } else if (shape instanceof Line) {\n    scoord.graphicData = [\n      shape.getBegin().getX().toString(),\n      shape.getBegin().getY().toString(),\n      shape.getEnd().getX().toString(),\n      shape.getEnd().getY().toString(),\n    ];\n    scoord.graphicType = GraphicTypes.polyline;\n  } else if (shape instanceof Protractor) {\n    scoord.graphicData = [];\n    for (let i = 0; i < 3; ++i) {\n      scoord.graphicData.push(shape.getPoint(i).getX().toString());\n      scoord.graphicData.push(shape.getPoint(i).getY().toString());\n    }\n    scoord.graphicType = GraphicTypes.polyline;\n  } else if (shape instanceof ROI) {\n    scoord.graphicData = [];\n    for (let i = 0; i < shape.getLength(); ++i) {\n      scoord.graphicData.push(shape.getPoint(i).getX().toString());\n      scoord.graphicData.push(shape.getPoint(i).getY().toString());\n    }\n    // repeat first point to close shape\n    const firstPoint = shape.getPoint(0);\n    scoord.graphicData.push(firstPoint.getX().toString());\n    scoord.graphicData.push(firstPoint.getY().toString());\n\n    scoord.graphicType = GraphicTypes.polyline;\n  } else if (shape instanceof Circle) {\n    const center = shape.getCenter();\n    const pointPerimeter = new Point2D(\n      center.getX() + shape.getRadius(), center.getY()\n    );\n    scoord.graphicData = [\n      center.getX().toString(),\n      center.getY().toString(),\n      pointPerimeter.getX().toString(),\n      pointPerimeter.getY().toString(),\n    ];\n    scoord.graphicType = GraphicTypes.circle;\n  } else if (shape instanceof Ellipse) {\n    const center = shape.getCenter();\n    const radiusX = shape.getA();\n    const radiusY = shape.getB();\n    scoord.graphicData = [\n      (center.getX() - radiusX).toString(),\n      center.getY().toString(),\n      (center.getX() + radiusX).toString(),\n      center.getY().toString(),\n      center.getX().toString(),\n      (center.getY() - radiusY).toString(),\n      center.getX().toString(),\n      (center.getY() + radiusY).toString()\n    ];\n    scoord.graphicType = GraphicTypes.ellipse;\n  } else if (shape instanceof Rectangle) {\n    const begin = shape.getBegin();\n    const end = shape.getEnd();\n    // begin as first and last point to close shape\n    scoord.graphicData = [\n      begin.getX().toString(),\n      begin.getY().toString(),\n      begin.getX().toString(),\n      end.getY().toString(),\n      end.getX().toString(),\n      end.getY().toString(),\n      end.getX().toString(),\n      begin.getY().toString(),\n      begin.getX().toString(),\n      begin.getY().toString()\n    ];\n    scoord.graphicType = GraphicTypes.polyline;\n  }\n\n  return scoord;\n};\n\n/**\n * Get a mathematical shape from a DICOM spatial coordinate (SCOORD).\n *\n * @param {SpatialCoordinate} scoord The DICOM scoord.\n * @returns {Point2D|Line|Protractor|ROI|Circle|Ellipse|Rectangle}\n *   The math shape.\n */\nexport function getShapeFromScoord(scoord) {\n  // extract points\n  const dataLength = scoord.graphicData.length;\n  if (dataLength % 2 !== 0) {\n    throw new Error('Expecting even number of coordinates in scroord data');\n  }\n  const points = [];\n  for (let i = 0; i < dataLength; i += 2) {\n    points.push(new Point2D(\n      parseFloat(scoord.graphicData[i]),\n      parseFloat(scoord.graphicData[i + 1])\n    ));\n  }\n  let isClosed = false;\n  const numberOfPoints = points.length;\n  if (numberOfPoints > 2) {\n    const firstPoint = points[0];\n    const lastPoint = points[numberOfPoints - 1];\n    isClosed = firstPoint.equals(lastPoint);\n  }\n\n  // create math shape\n  let shape;\n  if (scoord.graphicType === GraphicTypes.point) {\n    if (points.length !== 1) {\n      throw new Error('Expecting 1 point for point');\n    }\n    shape = points[0];\n  } else if (scoord.graphicType === GraphicTypes.circle) {\n    if (points.length !== 2) {\n      throw new Error('Expecting 2 points for circles');\n    }\n    const center = points[0];\n    const pointPerimeter = points[1];\n    const radius = pointPerimeter.getDistance(center);\n    shape = new Circle(center, radius);\n  } else if (scoord.graphicType === GraphicTypes.ellipse) {\n    if (points.length !== 4) {\n      throw new Error('Expecting 4 points for ellipses');\n    }\n    // TODO: make more generic\n    const radiusX = points[0].getDistance(points[1]) / 2;\n    const radiusY = points[2].getDistance(points[3]) / 2;\n    const center = new Point2D(\n      points[0].getX() + radiusX,\n      points[0].getY()\n    );\n    shape = new Ellipse(center, radiusX, radiusY);\n  } else if (scoord.graphicType === GraphicTypes.polyline) {\n    if (!isClosed) {\n      if (points.length === 2) {\n        shape = new Line(points[0], points[1]);\n      } else if (points.length === 3) {\n        shape = new Protractor([points[0], points[1], points[2]]);\n      }\n    } else {\n      if (points.length === 5) {\n        const line0 = new Line(points[0], points[1]);\n        const line1 = new Line(points[1], points[2]);\n        const line2 = new Line(points[2], points[3]);\n        const line3 = new Line(points[3], points[4]);\n        if (areOrthogonal(line0, line1) &&\n          areOrthogonal(line1, line2) &&\n          areOrthogonal(line2, line3)) {\n          shape = new Rectangle(points[0], points[2]);\n        } else {\n          // remove last=first point for closed shape\n          shape = new ROI(points.slice(0, -1));\n        }\n      } else {\n        // remove last=first point for closed shape\n        shape = new ROI(points.slice(0, -1));\n      }\n    }\n  }\n\n  return shape;\n};","// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from './dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * Related DICOM tag keys.\n */\nconst TagKeys = {\n  GraphicData: '00700022',\n  GraphicType: '00700023',\n  ReferencedFrameofReferenceUID: '30060024',\n  FiducialUID: '0070031A'\n};\n\n/**\n * DICOM spatial coordinate 3D (SCOORD3D): item of a SR content sequence.\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.18.9.html#table_C.18.9-1}.\n */\nexport class SpatialCoordinate3D {\n  /**\n   * @type {string[]}\n   */\n  graphicData;\n\n  /**\n   * @type {string}\n   */\n  graphicType;\n\n  /**\n   * @type {string}\n   */\n  referencedFrameofReferenceUID;\n\n  /**\n   * @type {string}\n   */\n  fiducialUID;\n\n  /**\n   * Get a string representation of this object.\n   *\n   * @returns {string} The object as string.\n   */\n  toString() {\n    return this.graphicType +\n      '{' + this.graphicData + '}';\n  };\n};\n\n/**\n * Get a scoord3d object from a dicom element.\n *\n * @param {Object<string, DataElement>} dataElements The dicom element.\n * @returns {SpatialCoordinate3D} A scoord3d object.\n */\nexport function getSpatialCoordinate3D(dataElements) {\n  const scoord = new SpatialCoordinate3D();\n\n  if (typeof dataElements[TagKeys.GraphicData] !== 'undefined') {\n    scoord.graphicData = dataElements[TagKeys.GraphicData].value;\n  }\n  if (typeof dataElements[TagKeys.GraphicType] !== 'undefined') {\n    scoord.graphicType = dataElements[TagKeys.GraphicType].value[0];\n  }\n  if (typeof dataElements[TagKeys.ReferencedFrameofReferenceUID] !==\n    'undefined') {\n    scoord.referencedFrameofReferenceUID =\n      dataElements[TagKeys.ReferencedFrameofReferenceUID].value[0];\n  }\n  if (typeof dataElements[TagKeys.FiducialUID] !== 'undefined') {\n    scoord.fiducialUID = dataElements[TagKeys.FiducialUID].value[0];\n  }\n  return scoord;\n};\n\n/**\n * Get a simple dicom element item from a scoord3d object.\n *\n * @param {SpatialCoordinate3D} scoord The scoord3d object.\n * @returns {Object<string, any>} The item as a list of (key, value) pairs.\n */\nexport function getDicomSpatialCoordinate3DItem(scoord) {\n  // dicom item (tags are in group/element order)\n  const item = {};\n\n  if (typeof scoord.graphicData !== 'undefined') {\n    item.GraphicData = scoord.graphicData;\n  }\n  if (typeof scoord.graphicType !== 'undefined') {\n    item.GraphicType = scoord.graphicType;\n  }\n  if (typeof scoord.referencedFrameofReferenceUID !== 'undefined') {\n    item.ReferencedFrameofReferenceUID =\n      scoord.referencedFrameofReferenceUID;\n  }\n  if (typeof scoord.fiducialUID !== 'undefined') {\n    item.FiducialUID = scoord.fiducialUID;\n  }\n\n  // return\n  return item;\n}","import {\n  NumericMeasurement,\n  getNumericMeasurement,\n  getDicomNumericMeasurementItem\n} from './dicomNumericMeasurement';\nimport {\n  getCode,\n  getDicomCodeItem,\n  getConceptNameCode,\n  getMeasurementUnitsCode\n} from './dicomCode';\nimport {\n  getImageReference,\n  getDicomImageReferenceItem\n} from './dicomImageReference';\nimport {\n  getSopInstanceReference,\n  getDicomSopInstanceReferenceItem\n} from './dicomSopInstanceReference';\nimport {\n  getSpatialCoordinate,\n  getDicomSpatialCoordinateItem\n} from './dicomSpatialCoordinate';\nimport {\n  getSpatialCoordinate3D,\n  getDicomSpatialCoordinate3DItem\n} from './dicomSpatialCoordinate3D';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from './dataElement';\nimport {DicomCode} from './dicomCode';\nimport {MeasuredValue} from './dicomMeasuredValue';\n/* eslint-enable no-unused-vars */\n\n/**\n * Related DICOM tag keys.\n */\nconst TagKeys = {\n  ReferencedSOPSequence: '00081199',\n  RelationshipType: '0040A010',\n  ValueType: '0040A040',\n  ConceptNameCodeSequence: '0040A043',\n  ConceptCodeSequence: '0040A168',\n  ContentSequence: '0040A730',\n  DateTime: '0040A120',\n  Date: '0040A121',\n  Time: '0040A122',\n  UID: '0040A124',\n  PersonName: '0040A123',\n  TextValue: '0040A160',\n  ContinuityOfContent: '0040A050'\n};\n\n/**\n * DICOM relationship types.\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/current/output/chtml/part03/sect_C.17.3.2.4.html#sect_C.17.3.2.4}.\n */\nexport const RelationshipTypes = {\n  contains: 'CONTAINS',\n  hasProperties: 'HAS PROPERTIES',\n  hasObsContext: 'HAS OBS CONTEXT',\n  hasAcqContext: 'HAS ACQ CONTEXT',\n  inferredFrom: 'INFERRED FROM',\n  selectedFrom: 'SELECTED FROM',\n  hasConceptMod: 'HAS CONCEPT MOD'\n};\n\n/**\n * DICOM value types.\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/current/output/chtml/part03/sect_C.17.3.2.html#sect_C.17.3.2.1}.\n */\nexport const ValueTypes = {\n  text: 'TEXT',\n  num: 'NUM',\n  code: 'CODE',\n  date: 'DATE',\n  time: 'TIME',\n  datetime: 'DATETIME',\n  uidref: 'UIDREF',\n  pname: 'PNAME',\n  composite: 'COMPOSITE',\n  image: 'IMAGE',\n  waveform: 'WAVEFORM',\n  scoord: 'SCOORD',\n  scoord3d: 'SCOORD3D',\n  tcoord: 'TCOORD',\n  container: 'CONTAINER',\n  table: 'TABLE',\n};\n\n/**\n * DICOM value type to associated tag name.\n */\nexport const ValueTypeValueTagName = {\n  TEXT: 'TextValue',\n  DATE: 'Date',\n  TIME: 'Time',\n  DATETIME: 'DateTime',\n  UIDREF: 'UID',\n  PNAME: 'PersonName',\n  CONTAINER: 'ContinuityOfContent',\n};\n\n/**\n * DICOM SR content: item of a SR content sequence.\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.17.3.html}.\n */\nexport class DicomSRContent {\n  /**\n   * Value type.\n   *\n   * @type {string}\n   */\n  valueType;\n  /**\n   * Concept name code.\n   *\n   * @type {DicomCode|undefined}\n   */\n  conceptNameCode;\n  /**\n   * Relationship Type.\n   *\n   * @type {string}\n   */\n  relationshipType;\n\n  /**\n   * Content sequence (0040,A730).\n   *\n   * @type {DicomSRContent[]|undefined}\n   */\n  contentSequence;\n\n  /**\n   * Value.\n   *\n   * @type {object}\n   */\n  value;\n\n  /**\n   * @param {string} valueType The content item value type.\n   */\n  constructor(valueType) {\n    this.valueType = valueType;\n  }\n\n  /**\n   * Get a string representation of this object.\n   *\n   * @param {string} [prefix] An optional prefix for recursive content.\n   * @returns {string} The object as string.\n   */\n  toString(prefix) {\n    if (typeof prefix === 'undefined') {\n      prefix = '';\n    }\n\n    let res = '';\n\n    if (typeof this.relationshipType !== 'undefined') {\n      res += '(' + this.relationshipType + ') ';\n    }\n\n    res += this.valueType + ': ';\n\n    if (typeof this.conceptNameCode !== 'undefined') {\n      res += this.conceptNameCode.toString();\n    }\n\n    res += ' = ' + this.value.toString();\n\n    if (typeof this.contentSequence !== 'undefined') {\n      for (const item of this.contentSequence) {\n        res += '\\n' + prefix + '- ' + item.toString(prefix + '  ');\n      }\n    }\n\n    return res;\n  }\n}\n\n/**\n * Check if two content item objects are equal.\n *\n * @param {DicomCode} item1 The first content item.\n * @param {DicomCode} item2 The second content item.\n * @returns {boolean} True if both content items are equal.\n */\nexport function isEqualContentItem(item1, item2) {\n  return Object.keys(item1).length === Object.keys(item2).length &&\n  Object.keys(item1).every(key =>\n    Object.prototype.hasOwnProperty.call(item2, key) &&\n    item1[key] === item2[key]\n  );\n}\n\n/**\n * Get a content item object from a dicom element.\n *\n * @param {Object<string, DataElement>} dataElements The dicom element.\n * @returns {DicomSRContent} A content item object.\n */\nexport function getSRContent(dataElements) {\n  // valueType -> ValueType (type1)\n  let valueType = '';\n  if (typeof dataElements[TagKeys.ValueType] !== 'undefined') {\n    valueType = dataElements[TagKeys.ValueType].value[0];\n  }\n\n  const content = new DicomSRContent(valueType);\n\n  // relationshipType -> RelationType (type1)\n  if (typeof dataElements[TagKeys.RelationshipType] !== 'undefined') {\n    content.relationshipType =\n      dataElements[TagKeys.RelationshipType].value[0];\n  }\n\n  if (typeof dataElements[TagKeys.ConceptNameCodeSequence] !== 'undefined') {\n    content.conceptNameCode =\n      getCode(dataElements[TagKeys.ConceptNameCodeSequence].value[0]);\n  }\n\n  // set value acording to valueType\n  // (date and time are stored as string)\n  if (valueType === ValueTypes.code) {\n    content.value = getCode(\n      dataElements[TagKeys.ConceptCodeSequence].value[0]);\n  } else if (valueType === ValueTypes.num) {\n    content.value = getNumericMeasurement(dataElements);\n  } else if (valueType === ValueTypes.image) {\n    content.value = getImageReference(dataElements);\n  } else if (valueType === ValueTypes.composite) {\n    content.value = getSopInstanceReference(\n      dataElements[TagKeys.ReferencedSOPSequence].value[0]\n    );\n  } else if (valueType === ValueTypes.scoord) {\n    content.value = getSpatialCoordinate(dataElements);\n  } else if (valueType === ValueTypes.scoord3d) {\n    content.value = getSpatialCoordinate3D(dataElements);\n  } else {\n    const valueTagName = ValueTypeValueTagName[valueType];\n    if (typeof valueTagName !== 'undefined') {\n      content.value = dataElements[TagKeys[valueTagName]].value[0];\n    } else {\n      console.warn('Unsupported input ValueType: ' + valueType);\n    }\n  }\n\n  const contentSqEl = dataElements[TagKeys.ContentSequence];\n  if (typeof contentSqEl !== 'undefined') {\n    content.contentSequence = [];\n    for (const item of dataElements[TagKeys.ContentSequence].value) {\n      content.contentSequence.push(getSRContent(item));\n    }\n  }\n\n  return content;\n}\n\n/**\n * Get a simple dicom element item from a content item object.\n *\n * @param {DicomSRContent} content The content item object.\n * @returns {Object<string, any>} The item as a list of (key, value) pairs.\n */\nexport function getDicomSRContentItem(content) {\n  // dicom item (tags are in ~group/element order)\n  let contentItem = {};\n\n  if (typeof content.relationshipType !== 'undefined') {\n    contentItem.RelationshipType = content.relationshipType;\n  }\n  if (typeof content.valueType !== 'undefined') {\n    contentItem.ValueType = content.valueType;\n  }\n  if (typeof content.conceptNameCode !== 'undefined') {\n    contentItem.ConceptNameCodeSequence = {\n      value: [getDicomCodeItem(content.conceptNameCode)]\n    };\n  }\n\n  // set appropriate value tag (data and time are stored as string)\n  if (content.valueType === 'CODE') {\n    contentItem.ConceptCodeSequence = {\n      value: [getDicomCodeItem(content.value)]\n    };\n  } else if (content.valueType === ValueTypes.num) {\n    contentItem = {\n      ...contentItem,\n      ...getDicomNumericMeasurementItem(content.value)\n    };\n  } else if (content.valueType === ValueTypes.image) {\n    contentItem = {\n      ...contentItem,\n      ...getDicomImageReferenceItem(content.value)\n    };\n  } else if (content.valueType === ValueTypes.composite) {\n    contentItem = {\n      ...contentItem,\n      ...getDicomSopInstanceReferenceItem(content.value)\n    };\n  } else if (content.valueType === ValueTypes.scoord) {\n    contentItem = {\n      ...contentItem,\n      ...getDicomSpatialCoordinateItem(content.value)\n    };\n  } else if (content.valueType === ValueTypes.scoord3d) {\n    contentItem = {\n      ...contentItem,\n      ...getDicomSpatialCoordinate3DItem(content.value)\n    };\n  } else {\n    const valueTagName = ValueTypeValueTagName[content.valueType];\n    if (typeof valueTagName !== 'undefined') {\n      contentItem[valueTagName] = content.value;\n    } else {\n      console.warn('Unsupported output ValueType: ' + content.valueType);\n    }\n  }\n\n  if (typeof content.contentSequence !== 'undefined') {\n    contentItem.ContentSequence = {\n      value: []\n    };\n    for (const item of content.contentSequence) {\n      contentItem.ContentSequence.value.push(getDicomSRContentItem(item));\n    }\n  }\n\n  return contentItem;\n}\n\n/**\n * Get a DicomSRContent from a value.\n *\n * @param {string} name The value name.\n * @param {object} value The value.\n * @param {string} unit The values' unit.\n * @returns {DicomSRContent|undefined} The SR content.\n */\nexport function getSRContentFromValue(name, value, unit) {\n  const conceptNameCode = getConceptNameCode(name);\n\n  if (typeof conceptNameCode === 'undefined') {\n    return undefined;\n  }\n\n  const content = new DicomSRContent(ValueTypes.num);\n  content.relationshipType = RelationshipTypes.contains;\n  content.conceptNameCode = conceptNameCode;\n\n  const measure = new MeasuredValue();\n  measure.numericValue = value;\n  measure.measurementUnitsCode = getMeasurementUnitsCode(unit);\n  const numMeasure = new NumericMeasurement();\n  numMeasure.measuredValue = measure;\n\n  content.value = numMeasure;\n\n  return content;\n}","import {\n  dateToDateObj,\n  getDicomDate,\n  dateToTimeObj,\n  getDicomTime,\n} from '../dicom/dicomDate';\nimport {\n  ValueTypes,\n  RelationshipTypes,\n  getSRContent,\n  getDicomSRContentItem,\n  DicomSRContent,\n  getSRContentFromValue\n} from '../dicom/dicomSRContent';\nimport {\n  isEqualCode,\n  getPathCode,\n  getMeasurementGroupCode,\n  getImageRegionCode,\n  getReferenceGeometryCode,\n  getSourceImageCode,\n  getTrackingIdentifierCode,\n  getShortLabelCode,\n  getReferencePointsCode,\n  getColourCode,\n  getQuantificationName,\n  getQuantificationUnit\n} from '../dicom/dicomCode';\nimport {getElementsFromJSONTags} from '../dicom/dicomWriter';\nimport {ImageReference} from '../dicom/dicomImageReference';\nimport {SopInstanceReference} from '../dicom/dicomSopInstanceReference';\nimport {\n  GraphicTypes,\n  getScoordFromShape,\n  getShapeFromScoord,\n  SpatialCoordinate\n} from '../dicom/dicomSpatialCoordinate';\nimport {SpatialCoordinate3D} from '../dicom/dicomSpatialCoordinate3D';\nimport {guid} from '../math/stats';\nimport {logger} from '../utils/logger';\nimport {Annotation} from './annotation';\nimport {AnnotationGroup} from './annotationGroup';\nimport {Line} from '../math/line';\nimport {Point2D, Point3D} from '../math/point';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from '../dicom/dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * Merge two tag lists.\n *\n * @param {object} tags1 Base list, will be modified.\n * @param {object} tags2 List to merge.\n */\nfunction mergeTags(tags1, tags2) {\n  const keys2 = Object.keys(tags2);\n  for (const tagName2 of keys2) {\n    if (tags1[tagName2] !== undefined) {\n      logger.trace('Overwritting tag: ' + tagName2);\n    }\n    tags1[tagName2] = tags2[tagName2];\n  }\n}\n\n/**\n * {@link AnnotationGroup} factory.\n */\nexport class AnnotationGroupFactory {\n\n  /**\n   * Possible warning created by checkElements.\n   *\n   * @type {string|undefined}\n   */\n  #warning;\n\n  /**\n   * Get a warning string if elements are not as expected.\n   * Created by checkElements.\n   *\n   * @returns {string|undefined} The warning.\n   */\n  getWarning() {\n    return this.#warning;\n  }\n\n  /**\n   * Check dicom elements. Throws an error if not suitable.\n   *\n   * @param {Object<string, DataElement>} dataElements The DICOM data elements.\n   * @returns {string|undefined} A possible warning.\n   */\n  checkElements(dataElements) {\n    // reset\n    this.#warning = undefined;\n\n    const srContent = getSRContent(dataElements);\n    if (typeof srContent.conceptNameCode !== 'undefined') {\n      if (srContent.conceptNameCode.value !== getMeasurementGroupCode().value) {\n        this.#warning = 'Not a measurement group';\n      }\n    } else {\n      this.#warning = 'No root concept name code';\n    }\n\n    return this.#warning;\n  }\n\n  /**\n   * Convert a DICOM SR content of type SCOORD into an annotation.\n   *\n   * @param {DicomSRContent} item The input SCOORD.\n   * @returns {Annotation} The annotation.\n   */\n  #scoordToAnnotation(item) {\n    const annotation = new Annotation();\n    annotation.mathShape = getShapeFromScoord(item.value);\n    // default\n    annotation.id = guid();\n    annotation.textExpr = '';\n\n    for (const subItem of item.contentSequence) {\n      // reference image UID\n      if (subItem.valueType === ValueTypes.image &&\n        subItem.relationshipType === RelationshipTypes.selectedFrom &&\n        isEqualCode(subItem.conceptNameCode, getSourceImageCode())) {\n        annotation.referenceSopUID =\n          subItem.value.referencedSOPSequence.referencedSOPInstanceUID;\n      }\n      // annotation id\n      if (subItem.valueType === ValueTypes.uidref &&\n        subItem.relationshipType === RelationshipTypes.hasProperties &&\n        isEqualCode(subItem.conceptNameCode, getTrackingIdentifierCode())) {\n        annotation.id = subItem.value;\n      }\n      // text expr\n      if (subItem.valueType === ValueTypes.text &&\n        subItem.relationshipType === RelationshipTypes.hasProperties &&\n        isEqualCode(subItem.conceptNameCode, getShortLabelCode())) {\n        annotation.textExpr = subItem.value;\n        if (typeof subItem.contentSequence !== 'undefined') {\n          for (const subsubItem of subItem.contentSequence) {\n            if (subsubItem.valueType === ValueTypes.scoord &&\n              subsubItem.relationshipType === RelationshipTypes.hasProperties &&\n              isEqualCode(\n                subsubItem.conceptNameCode, getReferencePointsCode())) {\n              annotation.labelPosition = new Point2D(\n                subsubItem.value.graphicData[0],\n                subsubItem.value.graphicData[1]\n              );\n            }\n          }\n        }\n      }\n      // color\n      if (subItem.valueType === ValueTypes.text &&\n        subItem.relationshipType === RelationshipTypes.hasProperties &&\n        isEqualCode(subItem.conceptNameCode, getColourCode())) {\n        annotation.colour = subItem.value;\n      }\n      // reference points\n      if (subItem.valueType === ValueTypes.scoord &&\n        subItem.relationshipType === RelationshipTypes.hasProperties &&\n        isEqualCode(subItem.conceptNameCode, getReferencePointsCode()) &&\n        subItem.value.graphicType === GraphicTypes.multipoint) {\n        const points = [];\n        for (let i = 0; i < subItem.value.graphicData.length; i += 2) {\n          points.push(new Point2D(\n            subItem.value.graphicData[i],\n            subItem.value.graphicData[i + 1]\n          ));\n        }\n        annotation.referencePoints = points;\n      }\n      // plane points\n      if (subItem.valueType === ValueTypes.scoord3d &&\n        subItem.relationshipType === RelationshipTypes.hasProperties &&\n        isEqualCode(\n          subItem.conceptNameCode, getReferenceGeometryCode()) &&\n        subItem.value.graphicType === GraphicTypes.multipoint) {\n        const data = subItem.value.graphicData;\n        const points = [];\n        const nPoints = Math.floor(data.length / 3);\n        for (let i = 0; i < nPoints; ++i) {\n          const j = i * 3;\n          points.push(new Point3D(data[j], data[j + 1], data[j + 2]));\n        }\n        annotation.planePoints = points;\n      }\n      // quantification\n      if (subItem.valueType === ValueTypes.num &&\n        subItem.relationshipType === RelationshipTypes.contains) {\n        const quantifName =\n          getQuantificationName(subItem.conceptNameCode);\n        if (typeof quantifName === 'undefined') {\n          continue;\n        }\n        const measuredValue = subItem.value.measuredValue;\n        const quantifUnit = getQuantificationUnit(\n          measuredValue.measurementUnitsCode);\n        if (typeof annotation.quantification === 'undefined') {\n          annotation.quantification = {};\n        }\n        annotation.quantification[quantifName] = {\n          value: measuredValue.numericValue,\n          unit: quantifUnit\n        };\n      }\n    }\n    return annotation;\n  }\n\n  /**\n   * Get an {@link Annotation} object from the read DICOM file.\n   *\n   * @param {Object<string, DataElement>} dataElements The DICOM tags.\n   * @returns {AnnotationGroup} A new annotation group.\n   */\n  create(dataElements) {\n    const annotations = [];\n    const srContent = getSRContent(dataElements);\n    for (const item of srContent.contentSequence) {\n      if (item.valueType === ValueTypes.scoord) {\n        annotations.push(this.#scoordToAnnotation(item));\n      }\n    }\n    const annotationGroup = new AnnotationGroup(annotations);\n\n    const safeGet = function (key) {\n      let res;\n      const element = dataElements[key];\n      if (typeof element !== 'undefined') {\n        res = element.value[0];\n      }\n      return res;\n    };\n\n    // StudyInstanceUID\n    annotationGroup.setMetaValue('StudyInstanceUID', safeGet('0020000D'));\n    // Modality\n    annotationGroup.setMetaValue('Modality', safeGet('00080060'));\n    // patient info\n    annotationGroup.setMetaValue('PatientName', safeGet('00100010'));\n    annotationGroup.setMetaValue('PatientID', safeGet('00100020'));\n    annotationGroup.setMetaValue('PatientBirthDate', safeGet('00100030'));\n    annotationGroup.setMetaValue('PatientSex', safeGet('00100040'));\n\n    // ReferencedSeriesSequence\n    const element = dataElements['00081115'];\n    if (typeof element !== 'undefined') {\n      const seriesElement = element.value[0]['0020000E'];\n      if (typeof seriesElement !== 'undefined') {\n        annotationGroup.setMetaValue(\n          'ReferencedSeriesSequence', {\n            value: [{\n              SeriesInstanceUID: seriesElement.value[0]\n            }]\n          }\n        );\n      }\n    }\n\n    return annotationGroup;\n  }\n\n  /**\n   * Convert an annotation into a DICOM SCOORD.\n   *\n   * @param {Annotation} annotation The input annotation.\n   * @returns {DicomSRContent} An SR content of type SCOORD.\n   */\n  #annotationToScoord(annotation) {\n    const srScoord = new DicomSRContent(ValueTypes.scoord);\n    srScoord.relationshipType = RelationshipTypes.contains;\n    if (annotation.mathShape instanceof Line) {\n      srScoord.conceptNameCode = getPathCode();\n    } else {\n      srScoord.conceptNameCode = getImageRegionCode();\n    }\n    srScoord.value = getScoordFromShape(annotation.mathShape);\n\n    const itemContentSequence = [];\n\n    // reference image UID\n    const srImage = new DicomSRContent(ValueTypes.image);\n    srImage.relationshipType = RelationshipTypes.selectedFrom;\n    srImage.conceptNameCode = getSourceImageCode();\n    const sopRef = new SopInstanceReference();\n    sopRef.referencedSOPClassUID = '';\n    sopRef.referencedSOPInstanceUID = annotation.referenceSopUID;\n    const imageRef = new ImageReference();\n    imageRef.referencedSOPSequence = sopRef;\n    srImage.value = imageRef;\n    itemContentSequence.push(srImage);\n\n    // annotation id\n    const srUid = new DicomSRContent(ValueTypes.uidref);\n    srUid.relationshipType = RelationshipTypes.hasProperties;\n    srUid.conceptNameCode = getTrackingIdentifierCode();\n    srUid.value = annotation.id;\n    itemContentSequence.push(srUid);\n\n    // text expr\n    const shortLabel = new DicomSRContent(ValueTypes.text);\n    shortLabel.relationshipType = RelationshipTypes.hasProperties;\n    shortLabel.conceptNameCode = getShortLabelCode();\n    shortLabel.value = annotation.textExpr;\n    // label position\n    if (typeof annotation.labelPosition !== 'undefined') {\n      const labelPosition = new DicomSRContent(ValueTypes.scoord);\n      labelPosition.relationshipType = RelationshipTypes.hasProperties;\n      labelPosition.conceptNameCode = getReferencePointsCode();\n      const labelPosScoord = new SpatialCoordinate();\n      labelPosScoord.graphicType = GraphicTypes.point;\n      const graphicData = [\n        annotation.labelPosition.getX().toString(),\n        annotation.labelPosition.getY().toString()\n      ];\n      labelPosScoord.graphicData = graphicData;\n      labelPosition.value = labelPosScoord;\n\n      // add position to label sequence\n      shortLabel.contentSequence = [labelPosition];\n    }\n    itemContentSequence.push(shortLabel);\n\n    // colour\n    const colour = new DicomSRContent(ValueTypes.text);\n    colour.relationshipType = RelationshipTypes.hasProperties;\n    colour.conceptNameCode = getColourCode();\n    colour.value = annotation.colour;\n    itemContentSequence.push(colour);\n\n    // reference points\n    if (typeof annotation.referencePoints !== 'undefined') {\n      const referencePoints = new DicomSRContent(ValueTypes.scoord);\n      referencePoints.relationshipType = RelationshipTypes.hasProperties;\n      referencePoints.conceptNameCode = getReferencePointsCode();\n      const refPointsScoord = new SpatialCoordinate();\n      refPointsScoord.graphicType = GraphicTypes.multipoint;\n      const graphicData = [];\n      for (const point of annotation.referencePoints) {\n        graphicData.push(point.getX().toString());\n        graphicData.push(point.getY().toString());\n      }\n      refPointsScoord.graphicData = graphicData;\n\n      referencePoints.value = refPointsScoord;\n      itemContentSequence.push(referencePoints);\n    }\n\n    // plane points\n    if (typeof annotation.planePoints !== 'undefined') {\n      const planePoints = new DicomSRContent(ValueTypes.scoord3d);\n      planePoints.relationshipType = RelationshipTypes.hasProperties;\n      planePoints.conceptNameCode = getReferenceGeometryCode();\n      const pointsScoord = new SpatialCoordinate3D();\n      pointsScoord.graphicType = GraphicTypes.multipoint;\n      const graphicData = [];\n      for (const planePoint of annotation.planePoints) {\n        graphicData.push(planePoint.getX().toString());\n        graphicData.push(planePoint.getY().toString());\n        graphicData.push(planePoint.getZ().toString());\n      }\n      pointsScoord.graphicData = graphicData;\n\n      planePoints.value = pointsScoord;\n      itemContentSequence.push(planePoints);\n    }\n\n    // quantification\n    if (typeof annotation.quantification !== 'undefined') {\n      for (const key in annotation.quantification) {\n        const quatifContent = getSRContentFromValue(\n          key,\n          annotation.quantification[key].value,\n          annotation.quantification[key].unit\n        );\n        if (typeof quatifContent !== 'undefined') {\n          itemContentSequence.push(quatifContent);\n        }\n      }\n    }\n\n    srScoord.contentSequence = itemContentSequence;\n    return srScoord;\n  }\n\n  /**\n   * Convert an annotation group into a DICOM SR object.\n   *\n   * @param {AnnotationGroup} annotationGroup The annotation group.\n   * @param {Object<string, any>} [extraTags] Optional list of extra tags.\n   * @returns {Object<string, DataElement>} A list of dicom elements.\n   */\n  toDicom(annotationGroup, extraTags) {\n    let tags = annotationGroup.getMeta();\n\n    // transfer syntax: ExplicitVRLittleEndian\n    tags.TransferSyntaxUID = '1.2.840.10008.1.2.1';\n    // class: Basic Text SR Storage\n    tags.SOPClassUID = '1.2.840.10008.5.1.4.1.1.88.11';\n    tags.MediaStorageSOPClassUID = '1.2.840.10008.5.1.4.1.1.88.11';\n    tags.CompletionFlag = 'PARTIAL';\n    tags.VerificationFlag = 'UNVERIFIED';\n\n    const now = new Date();\n    tags.ContentDate = getDicomDate(dateToDateObj(now));\n    tags.ContentTime = getDicomTime(dateToTimeObj(now));\n\n    const contentSequence = [];\n    for (const annotation of annotationGroup.getList()) {\n      contentSequence.push(this.#annotationToScoord(annotation));\n    }\n\n    // main\n    if (contentSequence.length !== 0) {\n      const srContent = new DicomSRContent(ValueTypes.container);\n      srContent.conceptNameCode = getMeasurementGroupCode();\n      srContent.contentSequence = contentSequence;\n\n      tags = {\n        ...tags,\n        ...getDicomSRContentItem(srContent)\n      };\n    }\n\n    // merge extra tags if provided\n    if (typeof extraTags !== 'undefined') {\n      mergeTags(tags, extraTags);\n    }\n\n    return getElementsFromJSONTags(tags);\n  }\n\n}","import {ListenerHandler} from '../utils/listen';\nimport {mergeObjects} from '../utils/operator';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from '../image/image';\nimport {AnnotationGroup} from '../image/annotationGroup';\n/* eslint-enable no-unused-vars */\n\n/**\n * DICOM data: meta and possible image.\n */\nexport class DicomData {\n  /**\n   * DICOM meta data.\n   *\n   * @type {object}\n   */\n  meta;\n\n  /**\n   * Image extracted from meta data.\n   *\n   * @type {Image|undefined}\n   */\n  image;\n  /**\n   * Annotattion group extracted from meta data.\n   *\n   * @type {AnnotationGroup|undefined}\n   */\n  annotationGroup;\n\n  /**\n   * @param {object} meta The DICOM meta data.\n   */\n  constructor(meta) {\n    this.meta = meta;\n  }\n}\n\n/*\n * DicomData controller.\n */\nexport class DataController {\n\n  /**\n   * List of DICOM data.\n   *\n   * @type {Object<string, DicomData>}\n   */\n  #dataList = {};\n\n  /**\n   * Distinct data loaded counter.\n   *\n   * @type {number}\n   */\n  #dataIdCounter = -1;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the next data id.\n   *\n   * @returns {string} The data id.\n   */\n  getNextDataId() {\n    ++this.#dataIdCounter;\n    return this.#dataIdCounter.toString();\n  }\n\n  /**\n   * Get the list of ids in the data storage.\n   *\n   * @returns {string[]} The list of data ids.\n   */\n  getDataIds() {\n    return Object.keys(this.#dataList);\n  }\n\n  /**\n   * Reset the class: empty the data storage.\n   */\n  reset() {\n    this.#dataList = {};\n  }\n\n  /**\n   * Get a data at a given index.\n   *\n   * @param {string} dataId The data id.\n   * @returns {DicomData|undefined} The DICOM data.\n   */\n  get(dataId) {\n    return this.#dataList[dataId];\n  }\n\n  /**\n   * Get the list of dataIds that contain the input UIDs.\n   *\n   * @param {string[]} uids A list of UIDs.\n   * @returns {string[]} The list of dataIds that contain the UIDs.\n   */\n  getDataIdsFromSopUids(uids) {\n    const res = [];\n    // check input\n    if (typeof uids === 'undefined' ||\n      uids.length === 0) {\n      return res;\n    }\n    const keys = Object.keys(this.#dataList);\n    for (const key of keys) {\n      if (typeof this.#dataList[key].image !== 'undefined' &&\n        this.#dataList[key].image.containsImageUids(uids)) {\n        res.push(key);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Set the image at a given index.\n   *\n   * @param {string} dataId The data id.\n   * @param {Image} image The image to set.\n   */\n  setImage(dataId, image) {\n    this.#dataList[dataId].image = image;\n    // fire image set\n    this.#fireEvent({\n      type: 'dataimageset',\n      value: [image],\n      dataid: dataId\n    });\n    // listen to image change\n    image.addEventListener('imagecontentchange', this.#getFireEvent(dataId));\n    image.addEventListener('imagegeometrychange', this.#getFireEvent(dataId));\n  }\n\n  /**\n   * Add a new data.\n   *\n   * @param {string} dataId The data id.\n   * @param {DicomData} data The data.\n   */\n  add(dataId, data) {\n    if (typeof this.#dataList[dataId] !== 'undefined') {\n      throw new Error('Data id already used in storage: ' + dataId);\n    }\n    // store the new image\n    this.#dataList[dataId] = data;\n    // fire a data add event\n    this.#fireEvent({\n      type: 'dataadd',\n      dataid: dataId\n    });\n    // listen to image change\n    if (typeof data.image !== 'undefined') {\n      data.image.addEventListener(\n        'imagecontentchange', this.#getFireEvent(dataId));\n      data.image.addEventListener(\n        'imagegeometrychange', this.#getFireEvent(dataId));\n    }\n    if (typeof data.annotationGroup !== 'undefined') {\n      data.annotationGroup.addEventListener(\n        'annotationadd', this.#getFireEvent(dataId));\n      data.annotationGroup.addEventListener(\n        'annotationupdate', this.#getFireEvent(dataId));\n      data.annotationGroup.addEventListener(\n        'annotationremove', this.#getFireEvent(dataId));\n    }\n  }\n\n  /**\n   * Remove a data from the list.\n   *\n   * @param {string} dataId The data id.\n   */\n  remove(dataId) {\n    if (typeof this.#dataList[dataId] !== 'undefined') {\n      // stop listeners\n      const image = this.#dataList[dataId].image;\n      if (typeof image !== 'undefined') {\n        image.removeEventListener(\n          'imagecontentchange', this.#getFireEvent(dataId));\n        image.removeEventListener(\n          'imagegeometrychange', this.#getFireEvent(dataId));\n      }\n      const annotationGroup = this.#dataList[dataId].annotationGroup;\n      if (typeof annotationGroup !== 'undefined') {\n        annotationGroup.removeEventListener(\n          'annotationadd', this.#getFireEvent(dataId));\n        annotationGroup.removeEventListener(\n          'annotationupdate', this.#getFireEvent(dataId));\n        annotationGroup.removeEventListener(\n          'annotationremove', this.#getFireEvent(dataId));\n      }\n      // remove data from list\n      delete this.#dataList[dataId];\n      // fire a data remove event\n      this.#fireEvent({\n        type: 'dataremove',\n        dataid: dataId\n      });\n    }\n  }\n\n  /**\n   * Update the current data.\n   *\n   * @param {string} dataId The data id.\n   * @param {DicomData} data The data.\n   */\n  update(dataId, data) {\n    if (typeof this.#dataList[dataId] === 'undefined') {\n      throw new Error('Cannot find data to update: ' + dataId);\n    }\n    const dataToUpdate = this.#dataList[dataId];\n\n    // add slice to current image\n    if (typeof dataToUpdate.image !== 'undefined' &&\n      typeof data.image !== 'undefined'\n    ) {\n      dataToUpdate.image.appendSlice(data.image);\n    }\n\n    // update meta data\n    // TODO add time support\n    let idKey = '';\n    if (typeof data.meta['00020010'] !== 'undefined') {\n      // dicom case, use 'InstanceNumber'\n      idKey = '00200013';\n    } else {\n      idKey = 'imageUid';\n    }\n    dataToUpdate.meta = mergeObjects(\n      dataToUpdate.meta,\n      data.meta,\n      idKey,\n      'value');\n\n    // fire a data add event\n    this.#fireEvent({\n      type: 'dataupdate',\n      dataid: dataId\n    });\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Get a fireEvent function that adds the input data id\n   * to the event value.\n   *\n   * @param {string} dataId The data id.\n   * @returns {Function} A fireEvent function.\n   */\n  #getFireEvent(dataId) {\n    return (event) => {\n      event.dataid = dataId;\n      this.#fireEvent(event);\n    };\n  }\n\n} // DataController class\n","import {arrayEquals} from './array';\n\n/**\n * Merge two similar objects.\n *\n * Objects need to be in the form of:\n * <code>\n * {\n *   idKey: {valueKey: [0]},\n *   key0: {valueKey: [\"abc\"]},\n *   key1: {valueKey: [33]}\n * }\n * </code>.\n *\n * Merged objects will be in the form of:\n * <code>\n * {\n *   idKey: {valueKey: [0,1,2], merged: true},\n *   key0: {valueKey: {\n *     0: [\"abc\"],\n *     1: [\"def\"],\n *     2: [\"ghi\"]\n *   }},\n *   key1: {valueKey: {\n *     0: [33],\n *     1: [44],\n *     2: [55]\n *   }}\n * }\n * </code>.\n *\n * @param {object} obj1 The first object, can be the result of a previous merge.\n * @param {object} obj2 The second object.\n * @param {string} idKey The key to use as index for duplicate values.\n * @param {string} valueKey The key to use to access object values.\n * @returns {object} The merged object.\n */\nexport function mergeObjects(obj1, obj2, idKey, valueKey) {\n  const res = {};\n  // check id key\n  if (!idKey) {\n    throw new Error('Cannot merge object with an undefined id key: ' + idKey);\n  } else {\n    if (!Object.prototype.hasOwnProperty.call(obj1, idKey)) {\n      throw new Error('Id key not found in first object while merging: ' +\n        idKey + ', obj: ' + obj1);\n    }\n    if (!Object.prototype.hasOwnProperty.call(obj2, idKey)) {\n      throw new Error('Id key not found in second object while merging: ' +\n        idKey + ', obj: ' + obj2);\n    }\n  }\n  // check value key\n  if (!valueKey) {\n    throw new Error('Cannot merge object with an undefined value key: ' +\n      valueKey);\n  }\n\n  // check if merged object\n  let mergedObj1 = false;\n  if (Object.prototype.hasOwnProperty.call(obj1[idKey], 'merged') &&\n    obj1[idKey].merged) {\n    mergedObj1 = true;\n  }\n  // handle the id part\n  if (!Object.prototype.hasOwnProperty.call(obj1[idKey], valueKey)) {\n    throw new Error('Id value not found in first object while merging: ' +\n      idKey + ', valueKey: ' + valueKey + ', ojb: ' + obj1);\n  }\n  if (!Object.prototype.hasOwnProperty.call(obj2[idKey], valueKey)) {\n    throw new Error('Id value not found in second object while merging: ' +\n      idKey + ', valueKey: ' + valueKey + ', ojb: ' + obj2);\n  }\n  let id1 = obj1[idKey][valueKey];\n  const id2 = obj2[idKey][valueKey][0];\n  // update id key\n  res[idKey] = obj1[idKey];\n  if (mergedObj1) {\n    // check if array does not include id2\n    for (let k = 0; k < id1.length; ++k) {\n      if (id1[k] === id2) {\n        throw new Error('The first object already contains id2: ' +\n          id2 + ', id1: ' + id1);\n      }\n    }\n    res[idKey][valueKey].push(id2);\n  } else {\n    id1 = id1[0];\n    if (id1 === id2) {\n      throw new Error('Cannot merge object with same ids: ' +\n        id1 + ', id2: ' + id2);\n    }\n    // update merge object\n    res[idKey][valueKey].push(id2);\n    res[idKey].merged = true;\n  }\n\n  // get keys\n  const keys1 = Object.keys(obj1);\n  // keys2 without duplicates of keys1\n  const keys2 = Object.keys(obj2).filter(function (item) {\n    return keys1.indexOf(item) < 0;\n  });\n  const keys = keys1.concat(keys2);\n\n  // loop through keys\n  for (let i = 0; i < keys.length; ++i) {\n    const key = keys[i];\n    if (key !== idKey) {\n      // first\n      let value1;\n      let subValue1;\n      if (Object.prototype.hasOwnProperty.call(obj1, key)) {\n        value1 = obj1[key];\n        if (Object.prototype.hasOwnProperty.call(value1, valueKey)) {\n          subValue1 = value1[valueKey];\n        }\n      }\n      // second\n      let value2;\n      let subValue2;\n      if (Object.prototype.hasOwnProperty.call(obj2, key)) {\n        value2 = obj2[key];\n        if (Object.prototype.hasOwnProperty.call(value2, valueKey)) {\n          subValue2 = value2[valueKey];\n        }\n      }\n      // result value\n      let value;\n      // use existing to copy properties\n      if (typeof value1 !== 'undefined') {\n        value = value1;\n      } else if (typeof value2 !== 'undefined') {\n        value = value2;\n      }\n      // create merge object if different values\n      if (!arrayEquals(subValue1, subValue2)) {\n        // add to merged object or create new\n        if (mergedObj1) {\n          if (Array.isArray(subValue1)) {\n            // merged object with repeated value\n            // copy it with the index list\n            value[valueKey] = {};\n            for (let j = 0; j < id1.length; ++j) {\n              value[valueKey][id1[j]] = subValue1;\n            }\n          } else {\n            value[valueKey] = subValue1;\n          }\n          // undefined subValue1\n          if (typeof value[valueKey] === 'undefined') {\n            value[valueKey] = {};\n          }\n          // add obj2 value\n          value[valueKey][id2] = subValue2;\n        } else {\n          // create merge object\n          const newValue = {};\n          newValue[id1] = subValue1;\n          newValue[id2] = subValue2;\n          value[valueKey] = newValue;\n        }\n      }\n      // store value in result object\n      res[key] = value;\n    }\n  }\n  return res;\n}\n","import {logger} from '../utils/logger';\nimport {\n  DicomParser,\n  getSyntaxDecompressionName\n} from '../dicom/dicomParser';\nimport {ImageFactory} from './imageFactory';\nimport {MaskFactory} from './maskFactory';\nimport {PixelBufferDecoder} from './decoder';\nimport {AnnotationGroupFactory} from './annotationGroupFactory';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from '../dicom/dataElement';\nimport {DicomData} from '../app/dataController';\n/* eslint-enable no-unused-vars */\n\n/**\n * Create a View from a DICOM buffer.\n */\nexport class DicomBufferToView {\n\n  /**\n   * Converter options.\n   *\n   * @type {object}\n   */\n  #options;\n\n  /**\n   * Set the converter options.\n   *\n   * @param {object} opt The input options.\n   */\n  setOptions(opt) {\n    this.#options = opt;\n  }\n\n  /**\n   * Pixel buffer decoder.\n   * Define only once to allow optional asynchronous mode.\n   *\n   * @type {object}\n   */\n  #pixelDecoder = null;\n\n  // local tmp storage\n  #dicomParserStore = [];\n  #finalBufferStore = [];\n  #decompressedSizes = [];\n  #factories = [];\n\n  /**\n   * Get the factory associated to input DICOM elements.\n   *\n   * @param {Object<string, DataElement>} elements The DICOM elements.\n   * @returns {ImageFactory|MaskFactory|AnnotationGroupFactory|undefined}\n   *   The associated factory.\n   */\n  #getFactory(elements) {\n    let factory;\n    const modalityElement = elements['00080060'];\n    if (typeof modalityElement !== 'undefined') {\n      const modality = modalityElement.value[0];\n      if (modality === 'SEG') {\n        // mask factory for DICOM SEG\n        factory = new MaskFactory();\n      } else if (modality === 'SR') {\n        // annotation factory for DICOM SR\n        factory = new AnnotationGroupFactory();\n      }\n    }\n    // image factory for pixel data\n    if (typeof factory === 'undefined') {\n      const pixelElement = elements['7FE00010'];\n      if (typeof pixelElement !== 'undefined') {\n        factory = new ImageFactory();\n      }\n    }\n    return factory;\n  }\n\n  /**\n   * Generate the data object.\n   *\n   * @param {number} index The data index.\n   * @param {string} origin The data origin.\n   */\n  #generateData(index, origin) {\n    const dataElements = this.#dicomParserStore[index].getDicomElements();\n    const factory = this.#factories[index];\n    // exit if no factory\n    if (typeof factory === 'undefined') {\n      return;\n    }\n    // create data\n    try {\n      const data = new DicomData(dataElements);\n      if (factory instanceof AnnotationGroupFactory) {\n        data.annotationGroup = factory.create(dataElements);\n      } else {\n        data.image = factory.create(\n          dataElements,\n          this.#finalBufferStore[index],\n          this.#options.numberOfFiles);\n      }\n      // call onloaditem\n      this.onloaditem({\n        data: data,\n        source: origin,\n        warn: factory.getWarning()\n      });\n    } catch (error) {\n      this.onerror({\n        error: error,\n        source: origin\n      });\n      this.onloadend({\n        source: origin\n      });\n    }\n  }\n\n  /**\n   * Generate the image object from an uncompressed buffer.\n   *\n   * @param {number} index The data index.\n   * @param {string} origin The data origin.\n   */\n  #generateImageUncompressed(index, origin) {\n    // send progress\n    this.onprogress({\n      lengthComputable: true,\n      loaded: 100,\n      total: 100,\n      index: index,\n      source: origin\n    });\n    // generate image\n    this.#generateData(index, origin);\n    // send load events\n    this.onload({\n      source: origin\n    });\n    this.onloadend({\n      source: origin\n    });\n  }\n\n  /**\n   * Generate the image object from an compressed buffer.\n   *\n   * @param {number} index The data index.\n   * @param {Array} pixelBuffer The dicom parser.\n   * @param {string} algoName The compression algorithm name.\n   */\n  #generateImageCompressed(index, pixelBuffer, algoName) {\n    const dicomParser = this.#dicomParserStore[index];\n\n    // gather pixel buffer meta data\n    const bitsAllocated =\n      dicomParser.getDicomElements()['00280100'].value[0];\n    const pixelRepresentation =\n      dicomParser.getDicomElements()['00280103'].value[0];\n    const pixelMeta = {\n      bitsAllocated: bitsAllocated,\n      isSigned: (pixelRepresentation === 1)\n    };\n    const columnsElement = dicomParser.getDicomElements()['00280011'];\n    const rowsElement = dicomParser.getDicomElements()['00280010'];\n    if (typeof columnsElement !== 'undefined' &&\n      typeof rowsElement !== 'undefined') {\n      pixelMeta.sliceSize = columnsElement.value[0] * rowsElement.value[0];\n    }\n    const samplesPerPixelElement =\n      dicomParser.getDicomElements()['00280002'];\n    if (typeof samplesPerPixelElement !== 'undefined') {\n      pixelMeta.samplesPerPixel = samplesPerPixelElement.value[0];\n    }\n    const planarConfigurationElement =\n      dicomParser.getDicomElements()['00280006'];\n    if (typeof planarConfigurationElement !== 'undefined') {\n      pixelMeta.planarConfiguration = planarConfigurationElement.value[0];\n    }\n\n    const numberOfItems = pixelBuffer.length;\n\n    // setup the decoder (one decoder per all converts)\n    if (this.#pixelDecoder === null) {\n      this.#pixelDecoder = new PixelBufferDecoder(\n        algoName, numberOfItems);\n      // callbacks\n      // pixelDecoder.ondecodestart: nothing to do\n      this.#pixelDecoder.ondecodeditem = (event) => {\n        this.#onDecodedItem(event);\n        // send onload and onloadend when all items have been decoded\n        if (event.itemNumber + 1 === event.numberOfItems) {\n          this.onload(event);\n          this.onloadend(event);\n        }\n      };\n      // pixelDecoder.ondecoded: nothing to do\n      // pixelDecoder.ondecodeend: nothing to do\n      this.#pixelDecoder.onerror = this.onerror;\n      this.#pixelDecoder.onabort = this.onabort;\n    }\n\n    // launch decode\n    for (let i = 0; i < numberOfItems; ++i) {\n      this.#pixelDecoder.decode(pixelBuffer[i], pixelMeta,\n        {\n          itemNumber: i,\n          numberOfItems: numberOfItems,\n          index: index\n        }\n      );\n    }\n  }\n\n  /**\n   * Handle a decoded item event.\n   *\n   * @param {object} event The decoded item event.\n   */\n  #onDecodedItem(event) {\n    // send progress\n    this.onprogress({\n      lengthComputable: true,\n      loaded: event.itemNumber + 1,\n      total: event.numberOfItems,\n      index: event.index,\n      source: origin\n    });\n\n    const dataIndex = event.index;\n\n    // store decoded data\n    const decodedData = event.data[0];\n    if (event.numberOfItems !== 1) {\n      // allocate buffer if not done yet\n      if (typeof this.#decompressedSizes[dataIndex] === 'undefined') {\n        this.#decompressedSizes[dataIndex] = decodedData.length;\n        const fullSize = event.numberOfItems *\n          this.#decompressedSizes[dataIndex];\n        try {\n          this.#finalBufferStore[dataIndex] =\n            new decodedData.constructor(fullSize);\n        } catch (error) {\n          if (error instanceof RangeError) {\n            const powerOf2 = Math.floor(Math.log(fullSize) / Math.log(2));\n            logger.error('Cannot allocate ' +\n              decodedData.constructor.name +\n              ' of size: ' +\n              fullSize + ' (>2^' + powerOf2 + ') for decompressed data.');\n          }\n          // abort\n          this.#pixelDecoder.abort();\n          // send events\n          this.onerror({\n            error: error,\n            source: origin\n          });\n          this.onloadend({\n            source: origin\n          });\n          // exit\n          return;\n        }\n      }\n      // hoping for all items to have the same size...\n      if (decodedData.length !== this.#decompressedSizes[dataIndex]) {\n        logger.warn('Unsupported varying decompressed data size: ' +\n          decodedData.length + ' != ' + this.#decompressedSizes[dataIndex]);\n      }\n      // set buffer item data\n      this.#finalBufferStore[dataIndex].set(\n        decodedData, this.#decompressedSizes[dataIndex] * event.itemNumber);\n    } else {\n      this.#finalBufferStore[dataIndex] = decodedData;\n    }\n\n    // create image for the first item\n    if (event.itemNumber === 0) {\n      this.#generateData(dataIndex, origin);\n    }\n  }\n\n  /**\n   * Handle non image data.\n   *\n   * @param {number} index The data index.\n   * @param {string} origin The data origin.\n   */\n  #handleNonImageData(index, origin) {\n    this.#generateData(index, origin);\n    // send load events\n    this.onload({\n      source: origin\n    });\n    this.onloadend({\n      source: origin\n    });\n  }\n\n  /**\n   * Handle image data.\n   *\n   * @param {number} index The data index.\n   * @param {string} origin The data origin.\n   */\n  #handleImageData(index, origin) {\n    const dicomParser = this.#dicomParserStore[index];\n\n    const pixelBuffer = dicomParser.getDicomElements()['7FE00010'].value;\n    // help GC: discard pixel buffer from elements\n    dicomParser.getDicomElements()['7FE00010'].value = [];\n    this.#finalBufferStore[index] = pixelBuffer[0];\n\n    // transfer syntax (always there)\n    const syntax = dicomParser.getDicomElements()['00020010'].value[0];\n    const algoName = getSyntaxDecompressionName(syntax);\n    const needDecompression = typeof algoName !== 'undefined';\n\n    if (needDecompression) {\n      // generate image\n      this.#generateImageCompressed(\n        index,\n        pixelBuffer,\n        algoName);\n    } else {\n      this.#generateImageUncompressed(index, origin);\n    }\n  }\n\n  /**\n   * Get data from an input buffer using a DICOM parser.\n   *\n   * @param {ArrayBuffer} buffer The input data buffer.\n   * @param {string} origin The data origin.\n   * @param {number} dataIndex The data index.\n   */\n  convert(buffer, origin, dataIndex) {\n    // start event\n    this.onloadstart({\n      source: origin,\n      index: dataIndex\n    });\n\n    // DICOM parser\n    const dicomParser = new DicomParser();\n\n    if (typeof this.#options.defaultCharacterSet !== 'undefined') {\n      dicomParser.setDefaultCharacterSet(this.#options.defaultCharacterSet);\n    }\n    // parse the buffer\n    let factory;\n    try {\n      dicomParser.parse(buffer);\n      // check elements\n      factory = this.#getFactory(dicomParser.getDicomElements());\n      if (typeof factory !== 'undefined') {\n        factory.checkElements(dicomParser.getDicomElements());\n      }\n    } catch (error) {\n      this.onerror({\n        error: error,\n        source: origin\n      });\n      this.onloadend({\n        source: origin\n      });\n      return;\n    }\n\n    // store\n    this.#dicomParserStore[dataIndex] = dicomParser;\n    this.#factories[dataIndex] = factory;\n\n    // handle parsed data\n    if (factory instanceof AnnotationGroupFactory) {\n      this.#handleNonImageData(dataIndex, origin);\n    } else {\n      this.#handleImageData(dataIndex, origin);\n    }\n  }\n\n  /**\n   * Abort a conversion.\n   */\n  abort() {\n    // abort decoding, will trigger pixelDecoder.onabort\n    if (this.#pixelDecoder) {\n      this.#pixelDecoder.abort();\n    }\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class DicomBufferToView\n","import {MultiProgressHandler} from '../utils/progress';\nimport {loaderList} from './loaderList';\n\n/**\n * Memory loader.\n */\nexport class MemoryLoader {\n\n  /**\n   * Input data.\n   *\n   * @type {Array}\n   */\n  #inputData = null;\n\n  /**\n   * Data loader.\n   *\n   * @type {object}\n   */\n  #runningLoader = null;\n\n  /**\n   * Number of loaded data.\n   *\n   * @type {number}\n   */\n  #nLoad = 0;\n\n  /**\n   * Number of load end events.\n   *\n   * @type {number}\n   */\n  #nLoadend = 0;\n\n  /**\n   * The default character set (optional).\n   *\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * Get the default character set.\n   *\n   * @returns {string} The default character set.\n   */\n  getDefaultCharacterSet() {\n    return this.#defaultCharacterSet;\n  }\n\n  /**\n   * Set the default character set.\n   *\n   * @param {string} characterSet The character set.\n   */\n  setDefaultCharacterSet(characterSet) {\n    this.#defaultCharacterSet = characterSet;\n  }\n\n  /**\n   * Store the current input.\n   *\n   * @param {object} data The input data.\n   */\n  #storeInputData(data) {\n    this.#inputData = data;\n    // reset counters\n    this.#nLoad = 0;\n    this.#nLoadend = 0;\n    // clear storage\n    this.#clearStoredLoader();\n  }\n\n  /**\n   * Store the launched loader.\n   *\n   * @param {object} loader The launched loader.\n   */\n  #storeLoader(loader) {\n    this.#runningLoader = loader;\n  }\n\n  /**\n   * Clear the stored loader.\n   *\n   */\n  #clearStoredLoader() {\n    this.#runningLoader = null;\n  }\n\n  /**\n   * Increment the number of loaded data\n   *   and call onload if loaded all data.\n   *\n   * @param {object} _event The load data event.\n   */\n  #addLoad = (_event) => {\n    this.#nLoad++;\n    // call onload when all is loaded\n    // (not using the input event since it is not the\n    //   general load)\n    if (this.#nLoad === this.#inputData.length) {\n      this.onload({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * Increment the counter of load end events\n   *   and run callbacks when all done, erroneus or not.\n   *\n   * @param {object} _event The load end event.\n   */\n  #addLoadend = (_event) => {\n    this.#nLoadend++;\n    // call onloadend when all is run\n    // (not using the input event since it is not the\n    //   general load end)\n    if (this.#nLoadend === this.#inputData.length) {\n      this.onloadend({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * Load a list of buffers.\n   *\n   * @param {Array} data The list of buffers to load.\n   */\n  load(data) {\n    // check input\n    if (typeof data === 'undefined' || data.length === 0) {\n      return;\n    }\n    this.#storeInputData(data);\n\n    // send start event\n    this.onloadstart({\n      source: data\n    });\n\n    // create prgress handler\n    const mproghandler = new MultiProgressHandler(this.onprogress);\n    mproghandler.setNToLoad(data.length);\n    mproghandler.setNumberOfDimensions(1);\n\n    // create loaders\n    const loaders = [];\n    for (let m = 0; m < loaderList.length; ++m) {\n      loaders.push(new loaderList[m]());\n    }\n\n    // find an appropriate loader\n    let dataElement = data[0];\n    let loader = null;\n    let foundLoader = false;\n    for (let l = 0; l < loaders.length; ++l) {\n      loader = loaders[l];\n      if (loader.canLoadMemory(dataElement)) {\n        foundLoader = true;\n        // load options\n        loader.setOptions({\n          numberOfFiles: data.length,\n          defaultCharacterSet: this.getDefaultCharacterSet()\n        });\n        // set loader callbacks\n        // loader.onloadstart: nothing to do\n        loader.onprogress = mproghandler.getUndefinedMonoProgressHandler(0);\n        loader.onloaditem = this.onloaditem;\n        loader.onload = this.#addLoad;\n        loader.onloadend = this.#addLoadend;\n        loader.onerror = this.onerror;\n        loader.onabort = this.onabort;\n\n        // store loader\n        this.#storeLoader(loader);\n        // exit\n        break;\n      }\n    }\n    if (!foundLoader) {\n      throw new Error('No loader found for data: ' + dataElement.filename);\n    }\n\n    // loop on I/O elements\n    for (let i = 0; i < data.length; ++i) {\n      dataElement = data[i];\n      // check loader\n      if (!loader.canLoadMemory(dataElement)) {\n        throw new Error('Input data of different type: ' +\n          dataElement.filename);\n      }\n      // read\n      loader.load(dataElement.data, dataElement.filename, i);\n    }\n  }\n\n  /**\n   * Abort a load.\n   */\n  abort() {\n    // abort loader\n    if (this.#runningLoader && this.#runningLoader.isLoading()) {\n      this.#runningLoader.abort();\n    }\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class MemoryLoader\n","import {Size} from '../image/size';\nimport {Spacing} from '../image/spacing';\nimport {Geometry} from '../image/geometry';\nimport {Image} from '../image/image';\nimport {Point3D} from '../math/point';\n\n/**\n * Create a simple array buffer from an ImageData buffer.\n *\n * @param {object} imageData The ImageData taken from a context.\n * @returns {Uint8Array} The image buffer.\n */\nfunction imageDataToBuffer(imageData) {\n  // remove alpha\n  // TODO support passing the full image data\n  const dataLen = imageData.data.length;\n  const buffer = new Uint8Array((dataLen / 4) * 3);\n  let j = 0;\n  for (let i = 0; i < dataLen; i += 4) {\n    buffer[j] = imageData.data[i];\n    buffer[j + 1] = imageData.data[i + 1];\n    buffer[j + 2] = imageData.data[i + 2];\n    j += 3;\n  }\n  return buffer;\n}\n\n/**\n * Get an image from an input context imageData.\n *\n * @param {number} width The width of the coresponding image.\n * @param {number} height The height of the coresponding image.\n * @param {number} sliceIndex The slice index of the imageData.\n * @param {object} imageBuffer The image buffer.\n * @param {number} numberOfFrames The final number of frames.\n * @param {string} imageUid The image UID.\n * @returns {object} The corresponding view.\n */\nfunction getDefaultImage(\n  width, height, sliceIndex,\n  imageBuffer, numberOfFrames,\n  imageUid) {\n  // image size\n  const imageSize = new Size([width, height, 1]);\n  // default spacing\n  // TODO: misleading...\n  const imageSpacing = new Spacing([1, 1, 1]);\n  // default origin\n  const origin = new Point3D(0, 0, sliceIndex);\n  // create image\n  const geometry = new Geometry(origin, imageSize, imageSpacing);\n  const image = new Image(geometry, imageBuffer, [imageUid]);\n  image.setPhotometricInterpretation('RGB');\n  // meta information\n  const meta = {};\n  meta.BitsStored = 8;\n  if (typeof numberOfFrames !== 'undefined') {\n    meta.numberOfFiles = numberOfFrames;\n  }\n  image.setMeta(meta);\n  // return\n  return image;\n}\n\n/**\n * Get data from an input image using a canvas.\n *\n * @param {HTMLImageElement} domImage The DOM Image,\n *   an HTMLImageElement with extra info.\n * @param {string|File} origin The data origin.\n * @param {number} index The data index.\n * @returns {object} A load data event.\n */\nexport function getViewFromDOMImage(domImage, origin, index) {\n  // image size\n  const width = domImage.width;\n  const height = domImage.height;\n\n  // draw the image in the canvas in order to get its data\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  const ctx = canvas.getContext('2d');\n  ctx.drawImage(domImage, 0, 0);\n  // get the image data\n  const imageData = ctx.getImageData(0, 0, width, height);\n\n  // image properties\n  const info = {};\n  if (typeof origin === 'string') {\n    info['origin'] = {value: origin};\n  } else {\n    info['fileName'] = {value: origin.name};\n    info['fileType'] = {value: origin.type};\n    info['fileLastModifiedDate'] = {value: origin.lastModified};\n  }\n  info['imageWidth'] = {value: width};\n  info['imageHeight'] = {value: height};\n\n  const sliceIndex = index ? index : 0;\n  info['imageUid'] = {value: sliceIndex};\n\n  // create view\n  const imageBuffer = imageDataToBuffer(imageData);\n  const image = getDefaultImage(\n    width, height, sliceIndex, imageBuffer, 1, sliceIndex.toString());\n\n  // return\n  return {\n    data: {\n      image: image,\n      info: info\n    },\n    source: origin\n  };\n}\n\n/**\n * Get data from an input image using a canvas.\n *\n * @param {object} video The DOM Video, an HTMLVideoElement with extra info.\n * @param {Function} onloaditem On load callback.\n * @param {object} onload The function to call once the data is loaded.\n * @param {object} onprogress The function to call to report progress.\n * @param {object} onloadend The function to call to report load end.\n * @param {string|File} origin The data origin.\n * @param {number} dataIndex The data index.\n */\nexport function getViewFromDOMVideo(\n  video, onloaditem, onload, onprogress, onloadend,\n  origin, dataIndex) {\n  // video size\n  const width = video.videoWidth;\n  const height = video.videoHeight;\n\n  // default frame rate...\n  const frameRate = 30;\n  // number of frames\n  const numberOfFrames = Math.ceil(video.duration * frameRate);\n\n  // video properties\n  const info = {};\n  if (typeof origin === 'string') {\n    info['origin'] = {value: origin};\n  } else {\n    info['fileName'] = {value: origin.name};\n    info['fileType'] = {value: origin.type};\n    info['fileLastModifiedDate'] = {value: origin.lastModified};\n  }\n  info['imageWidth'] = {value: width};\n  info['imageHeight'] = {value: height};\n  info['numberOfFrames'] = {value: numberOfFrames};\n  info['imageUid'] = {value: 0};\n\n  // draw the image in the canvas in order to get its data\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  const ctx = canvas.getContext('2d');\n\n  // using seeked to loop through all video frames\n  video.addEventListener('seeked', onseeked, false);\n\n  // current frame index\n  let frameIndex = 0;\n  // video image\n  let image = null;\n\n  /**\n   * Draw the context and store it as a frame.\n   */\n  function storeFrame() {\n    // send progress\n    onprogress({\n      lengthComputable: true,\n      loaded: frameIndex,\n      total: numberOfFrames,\n      index: dataIndex,\n      source: origin\n    });\n    // draw image\n    ctx.drawImage(video, 0, 0);\n    // context to image buffer\n    const imgBuffer = imageDataToBuffer(\n      ctx.getImageData(0, 0, width, height));\n    if (frameIndex === 0) {\n      // create view\n      image = getDefaultImage(\n        width, height, 1, imgBuffer, numberOfFrames, dataIndex.toString());\n      // call callback\n      onloaditem({\n        data: {\n          image: image,\n          info: info\n        },\n        source: origin\n      });\n    } else {\n      image.appendFrameBuffer(imgBuffer, frameIndex);\n    }\n    // increment index\n    ++frameIndex;\n  }\n\n  let nextTime = 0;\n\n  /**\n   * Handle seeked event.\n   *\n   * @param {object} event The seeked event.\n   */\n  function onseeked(event) {\n    // store\n    storeFrame();\n    // set the next time\n    // (not using currentTime, it seems to get offseted)\n    nextTime += 1 / frameRate;\n    if (nextTime <= event.target.duration) {\n      this.currentTime = nextTime;\n    } else {\n      onload({\n        source: origin\n      });\n      onloadend({\n        source: origin\n      });\n      // stop listening\n      video.removeEventListener('seeked', onseeked);\n    }\n  }\n\n  // trigger the first seek\n  video.currentTime = nextTime;\n}\n","import {DicomDataLoader} from './dicomDataLoader';\nimport {JSONTextLoader} from './jsonTextLoader';\nimport {MultipartLoader} from './multipartLoader';\nimport {RawImageLoader} from './rawImageLoader';\nimport {RawVideoLoader} from './rawVideoLoader';\nimport {ZipLoader} from './zipLoader';\n\nexport const loaderList = [\n  DicomDataLoader,\n  JSONTextLoader,\n  MultipartLoader,\n  RawImageLoader,\n  RawVideoLoader,\n  ZipLoader\n];\n","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\nimport {DicomBufferToView} from '../image/dicomBufferToView';\n\n/**\n * DICOM data loader.\n */\nexport class DicomDataLoader {\n\n  /**\n   * Loader options.\n   *\n   * @type {object}\n   */\n  #options = {};\n\n  /**\n   * Loading flag.\n   *\n   * @type {boolean}\n   */\n  #isLoading = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} opt The input options.\n   */\n  setOptions(opt) {\n    this.#options = opt;\n  }\n\n  /**\n   * Is the load ongoing?\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return this.#isLoading;\n  }\n\n  /**\n   * DICOM buffer to View (asynchronous).\n   *\n   */\n  #db2v = new DicomBufferToView();\n\n  /**\n   * Load data.\n   *\n   * @param {object} buffer The DICOM buffer.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    // setup db2v ony once\n    if (!this.#isLoading) {\n      // pass options\n      this.#db2v.setOptions(this.#options);\n      // connect handlers\n      this.#db2v.onloadstart = this.onloadstart;\n      this.#db2v.onprogress = this.onprogress;\n      this.#db2v.onloaditem = this.onloaditem;\n      this.#db2v.onload = this.onload;\n      this.#db2v.onloadend = (event) => {\n        // reset loading flag\n        this.#isLoading = false;\n        // call listeners\n        this.onloadend(event);\n      };\n      this.#db2v.onerror = (event) => {\n        event.source = origin;\n        this.onerror(event);\n      };\n      this.#db2v.onabort = this.onabort;\n    }\n\n    // set loading flag\n    this.#isLoading = true;\n    // convert\n    this.#db2v.convert(buffer, origin, index);\n  }\n\n  /**\n   * Abort load.\n   */\n  abort() {\n    // reset loading flag\n    this.#isLoading = false;\n    // abort conversion, will trigger db2v.onabort\n    this.#db2v.abort();\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   * True if one of the folowing conditions is true:\n   * - the file has a 'dcm' extension,\n   * - the file has no extension.\n   *\n   * @param {File} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    const ext = getFileExtension(file.name);\n    const hasNoExt = (ext === null);\n    const hasDcmExt = (ext === 'dcm');\n    return hasNoExt || hasDcmExt;\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   * True if one of the folowing conditions is true:\n   * - the `options.forceLoader` is 'dicom',\n   * - the `options.requestHeaders` contains a 'Accept: application/dicom',\n   * - the url has a 'contentType' and it is 'application/dicom'\n   *   (as in wado urls),\n   * - the url has no 'contentType' and no extension or the extension is 'dcm'.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // check options\n    if (typeof options !== 'undefined') {\n      // check options.forceLoader\n      if (typeof options.forceLoader !== 'undefined' &&\n        options.forceLoader === 'dicom') {\n        return true;\n      }\n      // check options.requestHeaders for 'Accept'\n      if (typeof options.requestHeaders !== 'undefined') {\n        const isNameAccept = function (element) {\n          return element.name === 'Accept';\n        };\n        const acceptHeader = options.requestHeaders.find(isNameAccept);\n        if (typeof acceptHeader !== 'undefined') {\n          // starts with 'application/dicom' and no '+'\n          const acceptValue = 'application/dicom';\n          return startsWith(acceptHeader.value, acceptValue) &&\n            acceptHeader.value[acceptValue.length] !== '+';\n        }\n      }\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    // extension\n    const ext = getFileExtension(urlObjext.pathname);\n    const hasNoExt = (ext === null);\n    const hasDcmExt = (ext === 'dcm');\n    // content type (for wado url)\n    const contentType = urlObjext.searchParams.get('contentType');\n    const hasContentType = contentType !== null &&\n      typeof contentType !== 'undefined';\n    const hasDicomContentType = (contentType === 'application/dicom');\n\n    return hasContentType ? hasDicomContentType : (hasNoExt || hasDcmExt);\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    const contentType = mem['Content-Type'];\n    if (typeof contentType !== 'undefined' &&\n      contentType.startsWith('application/dicom')) {\n      return true;\n    }\n    if (typeof mem.filename !== 'undefined') {\n      const tmpFile = new File(['from memory'], mem.filename);\n      return this.canLoadFile(tmpFile);\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class DicomDataLoader\n","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\n\n/**\n * JSON text loader.\n */\nexport class JSONTextLoader {\n\n  /**\n   * Loading flag.\n   *\n   * @type {boolean}\n   */\n  #isLoading = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing?\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return this.#isLoading;\n  }\n\n  /**\n   * Load data.\n   *\n   * @param {object} text The input text.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(text, origin, index) {\n    // set loading flag\n    this.#isLoading = true;\n    this.onloadstart({\n      source: origin\n    });\n\n    try {\n      this.onprogress({\n        lengthComputable: true,\n        loaded: 100,\n        total: 100,\n        index: index,\n        source: origin\n      });\n      const data = {\n        data: text,\n        source: origin\n      };\n      // only expecting one item\n      this.onloaditem(data);\n      this.onload(data);\n    } catch (error) {\n      this.onerror({\n        error: error,\n        source: origin\n      });\n    } finally {\n      // reset loading flag\n      this.#isLoading = false;\n      this.onloadend({\n        source: origin\n      });\n    }\n  }\n\n  /**\n   * Abort load: pass to listeners.\n   */\n  abort() {\n    // reset loading flag\n    this.#isLoading = false;\n    // call listeners\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   * True if the file has a 'json' extension.\n   *\n   * @param {File} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    const ext = getFileExtension(file.name);\n    return (ext === 'json');\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   * True if one of the folowing conditions is true:\n   * - the `options.forceLoader` is 'json',\n   * - the `options.requestHeaders` contains a 'Accept: application/json' or\n   *   'Accept: application/dicom+json',\n   * - the url has a 'json' extension.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // check options\n    if (typeof options !== 'undefined') {\n      // check options.forceLoader\n      if (typeof options.forceLoader !== 'undefined' &&\n        options.forceLoader === 'json') {\n        return true;\n      }\n      // check options.requestHeaders for 'Accept'\n      if (typeof options.requestHeaders !== 'undefined') {\n        const isNameAccept = function (element) {\n          return element.name === 'Accept';\n        };\n        const acceptHeader = options.requestHeaders.find(isNameAccept);\n        if (typeof acceptHeader !== 'undefined') {\n          // starts with 'application/json' or 'application/dicom+json\n          return startsWith(acceptHeader.value, 'application/json') ||\n            startsWith(acceptHeader.value, 'application/dicom+json');\n        }\n      }\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    const ext = getFileExtension(urlObjext.pathname);\n    return (ext === 'json');\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    const contentType = mem['Content-Type'];\n    if (typeof contentType !== 'undefined' &&\n      contentType.startsWith('application/json')) {\n      return true;\n    }\n    if (typeof mem.filename !== 'undefined') {\n      const tmpFile = new File(['from memory'], mem.filename);\n      return this.canLoadFile(tmpFile);\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.Text;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.Text;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class JSONTextLoader\n","import {startsWith} from '../utils/string';\nimport {parseMultipart} from '../utils/array';\nimport {MemoryLoader} from './memoryLoader';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\n\n/**\n * Multipart data loader.\n */\nexport class MultipartLoader {\n\n  /**\n   * Loading flag.\n   *\n   * @type {boolean}\n   */\n  #isLoading = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing?\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return this.#isLoading;\n  }\n\n  /**\n   * Load data.\n   *\n   * @param {object} buffer The DICOM buffer.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    // send start event\n    this.onloadstart({\n      source: origin\n    });\n    // set loading flag\n    this.#isLoading = true;\n\n    const memoryIO = new MemoryLoader();\n    // memoryIO.onloadstart: nothing to do\n    memoryIO.onprogress = (progress) => {\n      // add 50% to take into account the un-Multipartping\n      progress.loaded = 50 + progress.loaded / 2;\n      // set data index\n      progress.index = index;\n      this.onprogress(progress);\n    };\n    memoryIO.onloaditem = this.onloaditem;\n    memoryIO.onload = this.onload;\n    memoryIO.onloadend = (event) => {\n      // reset loading flag\n      this.#isLoading = false;\n      // call listeners\n      this.onloadend(event);\n    };\n    memoryIO.onerror = this.onerror;\n    memoryIO.onabort = this.onabort;\n    // launch\n    memoryIO.load(parseMultipart(buffer));\n  }\n\n  /**\n   * Abort load: pass to listeners.\n   */\n  abort() {\n    // reset loading flag\n    this.#isLoading = false;\n    // call listeners\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   * Always returns false.\n   *\n   * @param {File} _file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(_file) {\n    return false;\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   * True if one of the folowing conditions is true:\n   * - the `options.forceLoader` is 'multipart',\n   * - the `options.requestHeaders` contains a 'Accept: multipart/related'.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // check options\n    if (typeof options !== 'undefined') {\n      // check options.forceLoader\n      if (typeof options.forceLoader !== 'undefined' &&\n        options.forceLoader === 'multipart') {\n        return true;\n      }\n      // check options.requestHeaders for 'Accept'\n      if (typeof options.requestHeaders !== 'undefined') {\n        const isNameAccept = function (element) {\n          return element.name === 'Accept';\n        };\n        const acceptHeader = options.requestHeaders.find(isNameAccept);\n        if (typeof acceptHeader !== 'undefined') {\n          // starts with 'multipart/related'\n          return startsWith(acceptHeader.value, 'multipart/related');\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} _mem The memory object.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadMemory(_mem) {\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class MultipartLoader\n","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {getViewFromDOMImage} from '../image/domReader';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\n\n/**\n * Raw image loader.\n */\nexport class RawImageLoader {\n\n  /**\n   * If abort is triggered, all image.onload callbacks have to be cancelled.\n   *\n   * @type {boolean}\n   */\n  #aborted = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing? TODO...\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return true;\n  }\n\n  /**\n   * Create a Data URI from an HTTP request response.\n   *\n   * @param {ArrayBuffer} response The HTTP request response.\n   * @param {string} dataType The data type.\n   * @returns {string} The data URI.\n   */\n  #createDataUri(response, dataType) {\n    // image type\n    let imageType = dataType;\n    if (!imageType || imageType === 'jpg') {\n      imageType = 'jpeg';\n    }\n    // create uri\n    const file = new Blob([response], {type: 'image/' + imageType});\n    return window.URL.createObjectURL(file);\n  }\n\n  /**\n   * Load data.\n   *\n   * @param {ArrayBuffer|string} buffer The read data.\n   * @param {string|File} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    this.#aborted = false;\n    // create a DOM image\n    const image = new Image();\n    // triggered by ctx.drawImage\n    image.onload = (/*event*/) => {\n      try {\n        if (!this.#aborted) {\n          this.onprogress({\n            lengthComputable: true,\n            loaded: 100,\n            total: 100,\n            index: index,\n            source: origin\n          });\n          const data = getViewFromDOMImage(image, origin, index);\n          // only expecting one item\n          this.onloaditem(data);\n          this.onload(data);\n        }\n      } catch (error) {\n        this.onerror({\n          error: error,\n          source: origin\n        });\n      } finally {\n        this.onloadend({\n          source: origin\n        });\n      }\n    };\n    // storing values to pass them on\n    if (typeof buffer === 'string') {\n      // file case\n      image.src = buffer;\n    } else if (typeof origin === 'string') {\n      // url case\n      const ext = origin.split('.').pop().toLowerCase();\n      image.src = this.#createDataUri(buffer, ext);\n    }\n  }\n\n  /**\n   * Abort load.\n   */\n  abort() {\n    this.#aborted = true;\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   * True for files with type 'image.*'.\n   *\n   * @param {File} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    return (typeof file.type !== 'undefined' &&\n      file.type.match('image.*') !== null);\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   * True if one of the folowing conditions is true:\n   * - the `options.forceLoader` is 'rawimage',\n   * - the `options.requestHeaders` contains an item\n   *   starting with 'Accept: image/'.\n   * - the url has a 'contentType' and it is 'image/jpeg', 'image/png'\n   *   or 'image/gif' (as in wado urls),\n   * - the url has no 'contentType' and the extension is 'jpeg', 'jpg',\n   *   'png' or 'gif'.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // check options\n    if (typeof options !== 'undefined') {\n      // check options.forceLoader\n      if (typeof options.forceLoader !== 'undefined' &&\n        options.forceLoader === 'rawimage') {\n        return true;\n      }\n      // check options.requestHeaders for 'Accept'\n      if (typeof options.requestHeaders !== 'undefined') {\n        const isNameAccept = function (element) {\n          return element.name === 'Accept';\n        };\n        const acceptHeader = options.requestHeaders.find(isNameAccept);\n        if (typeof acceptHeader !== 'undefined') {\n          // starts with 'image/'\n          return startsWith(acceptHeader.value, 'image/');\n        }\n      }\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    // extension\n    const ext = getFileExtension(urlObjext.pathname);\n    const hasImageExt = (ext === 'jpeg') || (ext === 'jpg') ||\n      (ext === 'png') || (ext === 'gif');\n    // content type (for wado url)\n    const contentType = urlObjext.searchParams.get('contentType');\n    const hasContentType = contentType !== null &&\n      typeof contentType !== 'undefined';\n    const hasImageContentType = (contentType === 'image/jpeg') ||\n      (contentType === 'image/png') ||\n      (contentType === 'image/gif');\n\n    return hasContentType ? hasImageContentType : hasImageExt;\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    if (typeof mem.filename !== 'undefined') {\n      const tmpFile = new File(['from memory'], mem.filename);\n      return this.canLoadFile(tmpFile);\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.DataURL;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class RawImageLoader","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {getViewFromDOMVideo} from '../image/domReader';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\n\n/**\n * Raw video loader.\n *\n * Url example (cors enabled):\n *   {@link https://raw.githubusercontent.com/clappr/clappr/master/test/fixtures/SampleVideo_360x240_1mb.mp4}.\n */\nexport class RawVideoLoader {\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing? TODO...\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return true;\n  }\n\n  /**\n   * Create a Data URI from an HTTP request response.\n   *\n   * @param {object} response The HTTP request response.\n   * @param {string} dataType The data type.\n   * @returns {string} The data URI.\n   */\n  #createDataUri(response, dataType) {\n    // image data as string\n    const bytes = new Uint8Array(response);\n    let videoDataStr = '';\n    for (let i = 0; i < bytes.byteLength; ++i) {\n      videoDataStr += String.fromCharCode(bytes[i]);\n    }\n    // create uri\n    const uri = 'data:video/' + dataType +\n      ';base64,' + window.btoa(videoDataStr);\n    return uri;\n  }\n\n  /**\n   * Internal Data URI load.\n   *\n   * @param {object} buffer The read data.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    // create a DOM video\n    const video = document.createElement('video');\n    if (typeof origin === 'string') {\n      // url case\n      const ext = origin.split('.').pop().toLowerCase();\n      video.src = this.#createDataUri(buffer, ext);\n    } else {\n      video.src = buffer;\n    }\n    // onload handler\n    video.onloadedmetadata = (event) => {\n      try {\n        getViewFromDOMVideo(event.target,\n          this.onloaditem, this.onload,\n          this.onprogress, this.onloadend,\n          origin, index);\n      } catch (error) {\n        this.onerror({\n          error: error,\n          source: origin\n        });\n        this.onloadend({\n          source: origin\n        });\n      }\n    };\n  }\n\n  /**\n   * Abort load.\n   */\n  abort() {\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   * True for files with type 'video.*'.\n   *\n   * @param {File} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    return (typeof file.type !== 'undefined' &&\n      file.type.match('video.*') !== null);\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   * True if one of the folowing conditions is true:\n   * - the `options.forceLoader` is 'rawvideo',\n   * - the `options.requestHeaders` contains an item\n   *   starting with 'Accept: video/'.\n   * - the url has a 'mp4', 'ogg' or 'webm' extension.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // check options\n    if (typeof options !== 'undefined') {\n      // check options.forceLoader\n      if (typeof options.forceLoader !== 'undefined' &&\n        options.forceLoader === 'rawvideo') {\n        return true;\n      }\n      // check options.requestHeaders for 'Accept'\n      if (typeof options.requestHeaders !== 'undefined') {\n        const isNameAccept = function (element) {\n          return element.name === 'Accept';\n        };\n        const acceptHeader = options.requestHeaders.find(isNameAccept);\n        if (typeof acceptHeader !== 'undefined') {\n          // starts with 'video/'\n          return startsWith(acceptHeader.value, 'video/');\n        }\n      }\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    const ext = getFileExtension(urlObjext.pathname);\n    return (ext === 'mp4') ||\n      (ext === 'ogg') ||\n      (ext === 'webm');\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    if (typeof mem.filename !== 'undefined') {\n      const tmpFile = new File(['from memory'], mem.filename);\n      return this.canLoadFile(tmpFile);\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.DataURL;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   * when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   * when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class RawVideoLoader\n","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\nimport {MemoryLoader} from './memoryLoader';\n\n/**\n * The zip library.\n *\n * Ref: {@link https://github.com/Stuk/jszip}.\n *\n * @external JSZip\n */\nimport JSZip from 'jszip';\n\n/**\n * ZIP data loader.\n */\nexport class ZipLoader {\n\n  /**\n   * Loading flag.\n   *\n   * @type {boolean}\n   */\n  #isLoading = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing?\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return this.#isLoading;\n  }\n\n  #filename = '';\n  #files = [];\n  #zobjs = null;\n\n  /**\n   * JSZip.async callback.\n   *\n   * @param {ArrayBuffer} content Unzipped file image.\n   * @param {object} origin The origin of the file.\n   * @param {number} index The data index.\n   */\n  #zipAsyncCallback(content, origin, index) {\n    this.#files.push({filename: this.#filename, data: content});\n\n    // sent un-ziped progress with the data index\n    // (max 50% to take into account the memory loading)\n    const unzipPercent = this.#files.length * 100 / this.#zobjs.length;\n    this.onprogress({\n      lengthComputable: true,\n      loaded: (unzipPercent / 2),\n      total: 100,\n      index: index,\n      item: {\n        loaded: unzipPercent,\n        total: 100,\n        source: origin\n      }\n    });\n\n    // recursively call until we have all the files\n    if (this.#files.length < this.#zobjs.length) {\n      const num = this.#files.length;\n      this.#filename = this.#zobjs[num].name;\n      this.#zobjs[num].async('arrayBuffer').then((content) => {\n        this.#zipAsyncCallback(content, origin, index);\n      });\n    } else {\n      const memoryIO = new MemoryLoader();\n      // memoryIO.onloadstart: nothing to do\n      memoryIO.onprogress = (progress) => {\n        // add 50% to take into account the un-zipping\n        progress.loaded = 50 + progress.loaded / 2;\n        // set data index\n        progress.index = index;\n        this.onprogress(progress);\n      };\n      memoryIO.onloaditem = this.onloaditem;\n      memoryIO.onload = this.onload;\n      memoryIO.onloadend = (event) => {\n        // reset loading flag\n        this.#isLoading = false;\n        // call listeners\n        this.onloadend(event);\n      };\n      memoryIO.onerror = this.onerror;\n      memoryIO.onabort = this.onabort;\n      // launch\n      memoryIO.load(this.#files);\n    }\n  }\n\n  /**\n   * Load data.\n   *\n   * @param {object} buffer The DICOM buffer.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    // send start event\n    this.onloadstart({\n      source: origin\n    });\n    // set loading flag\n    this.#isLoading = true;\n\n    JSZip.loadAsync(buffer).then((zip) => {\n      this.#files = [];\n      this.#zobjs = zip.file(/.*\\.dcm/);\n      // recursively load zip files into the files array\n      const num = this.#files.length;\n      this.#filename = this.#zobjs[num].name;\n      this.#zobjs[num].async('arrayBuffer').then((content) => {\n        this.#zipAsyncCallback(content, origin, index);\n      });\n    });\n  }\n\n  /**\n   * Abort load: pass to listeners.\n   */\n  abort() {\n    // reset loading flag\n    this.#isLoading = false;\n    // call listeners\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   * True if the file has a 'zip' extension.\n   *\n   * @param {File} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    const ext = getFileExtension(file.name);\n    return (ext === 'zip');\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   * True if one of the folowing conditions is true:\n   * - the `options.forceLoader` is 'zip',\n   * - the `options.requestHeaders` contains an item\n   *   starting with 'Accept: application/zip'.\n   * - the url has a 'zip' extension.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // check options\n    if (typeof options !== 'undefined') {\n      // check options.forceLoader\n      if (typeof options.forceLoader !== 'undefined' &&\n        options.forceLoader === 'zip') {\n        return true;\n      }\n      // check options.requestHeaders for 'Accept'\n      if (typeof options.requestHeaders !== 'undefined') {\n        const isNameAccept = function (element) {\n          return element.name === 'Accept';\n        };\n        const acceptHeader = options.requestHeaders.find(isNameAccept);\n        if (typeof acceptHeader !== 'undefined') {\n          // starts with 'application/zip'\n          return startsWith(acceptHeader.value, 'application/zip');\n        }\n      }\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    const ext = getFileExtension(urlObjext.pathname);\n    return (ext === 'zip');\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    const contentType = mem['Content-Type'];\n    if (typeof contentType !== 'undefined' &&\n      contentType.startsWith('application/zip')) {\n      return true;\n    }\n    if (typeof mem.filename !== 'undefined') {\n      const tmpFile = new File(['from memory'], mem.filename);\n      return this.canLoadFile(tmpFile);\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class ZipLoader\n","import {MultiProgressHandler} from '../utils/progress';\nimport {loaderList} from './loaderList';\n\n// file content types\nexport const fileContentTypes = {\n  Text: 0,\n  ArrayBuffer: 1,\n  DataURL: 2\n};\n\n/**\n * Files loader.\n */\nexport class FilesLoader {\n\n  /**\n   * Input data.\n   *\n   * @type {File[]}\n   */\n  #inputData = null;\n\n  /**\n   * Array of launched file readers.\n   *\n   * @type {FileReader[]}\n   */\n  #readers = [];\n\n  /**\n   * Data loader.\n   *\n   * @type {object}\n   */\n  #runningLoader = null;\n\n  /**\n   * Number of loaded data.\n   *\n   * @type {number}\n   */\n  #nLoad = 0;\n\n  /**\n   * Number of load end events.\n   *\n   * @type {number}\n   */\n  #nLoadend = 0;\n\n  /**\n   * The default character set (optional).\n   *\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * Get the default character set.\n   *\n   * @returns {string} The default character set.\n   */\n  getDefaultCharacterSet() {\n    return this.#defaultCharacterSet;\n  }\n\n  /**\n   * Set the default character set.\n   *\n   * @param {string} characterSet The character set.\n   */\n  setDefaultCharacterSet(characterSet) {\n    this.#defaultCharacterSet = characterSet;\n  }\n\n  /**\n   * Store the current input.\n   *\n   * @param {File[]} data The input data.\n   */\n  #storeInputData(data) {\n    this.#inputData = data;\n    // reset counters\n    this.#nLoad = 0;\n    this.#nLoadend = 0;\n    // clear storage\n    this.#clearStoredReaders();\n    this.#clearStoredLoader();\n  }\n\n  /**\n   * Store a launched reader.\n   *\n   * @param {FileReader} reader The launched reader.\n   */\n  #storeReader(reader) {\n    this.#readers.push(reader);\n  }\n\n  /**\n   * Clear the stored readers.\n   *\n   */\n  #clearStoredReaders() {\n    this.#readers = [];\n  }\n\n  /**\n   * Store the launched loader.\n   *\n   * @param {object} loader The launched loader.\n   */\n  #storeLoader(loader) {\n    this.#runningLoader = loader;\n  }\n\n  /**\n   * Clear the stored loader.\n   *\n   */\n  #clearStoredLoader() {\n    this.#runningLoader = null;\n  }\n\n  /**\n   * Increment the number of loaded data\n   *   and call onload if loaded all data.\n   *\n   * @param {object} _event The load data event.\n   */\n  #addLoad = (_event) => {\n    this.#nLoad++;\n    // call onload when all is loaded\n    // (not using the input event since it is\n    //   an individual load)\n    if (this.#nLoad === this.#inputData.length) {\n      this.onload({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * Increment the counter of load end events\n   *   and run callbacks when all done, erroneus or not.\n   *\n   * @param {object} _event The load end event.\n   */\n  #addLoadend = (_event) => {\n    this.#nLoadend++;\n    // call onloadend when all is run\n    // (not using the input event since it is\n    //   an individual load end)\n    if (this.#nLoadend === this.#inputData.length) {\n      this.onloadend({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * @callback eventFn\n   * @param {object} event The event.\n   */\n\n  /**\n   * Augment a callback event with a srouce.\n   *\n   * @param {object} callback The callback to augment its event.\n   * @param {object} source The source to add to the event.\n   * @returns {eventFn} The augmented callback.\n   */\n  #augmentCallbackEvent(callback, source) {\n    return (event) => {\n      event.source = source;\n      callback(event);\n    };\n  }\n\n  /**\n   * Get a load handler for a data element.\n   *\n   * @param {object} loader The associated loader.\n   * @param {File} dataElement The data element.\n   * @param {number} i The index of the element.\n   * @returns {eventFn} A load handler.\n   */\n  #getLoadHandler(loader, dataElement, i) {\n    return (event) => {\n      loader.load(event.target.result, dataElement, i);\n    };\n  }\n\n\n  /**\n   * Load a list of files.\n   *\n   * @param {File[]} data The list of files to load.\n   */\n  load(data) {\n    // check input\n    if (typeof data === 'undefined' || data.length === 0) {\n      return;\n    }\n    this.#storeInputData(data);\n\n    // send start event\n    this.onloadstart({\n      source: data\n    });\n\n    // create prgress handler\n    const mproghandler = new MultiProgressHandler(this.onprogress);\n    mproghandler.setNToLoad(data.length);\n\n    // create loaders\n    const loaders = [];\n    for (let m = 0; m < loaderList.length; ++m) {\n      loaders.push(new loaderList[m]());\n    }\n\n    // find an appropriate loader\n    let dataElement = data[0];\n    let loader = null;\n    let foundLoader = false;\n    for (let l = 0; l < loaders.length; ++l) {\n      loader = loaders[l];\n      if (loader.canLoadFile(dataElement)) {\n        foundLoader = true;\n        // load options\n        loader.setOptions({\n          numberOfFiles: data.length,\n          defaultCharacterSet: this.getDefaultCharacterSet()\n        });\n        // set loader callbacks\n        // loader.onloadstart: nothing to do\n        loader.onprogress = mproghandler.getUndefinedMonoProgressHandler(1);\n        loader.onloaditem = this.onloaditem;\n        loader.onload = this.#addLoad;\n        loader.onloadend = this.#addLoadend;\n        loader.onerror = this.onerror;\n        loader.onabort = this.onabort;\n\n        // store loader\n        this.#storeLoader(loader);\n        // exit\n        break;\n      }\n    }\n    if (!foundLoader) {\n      throw new Error('No loader found for file: ' + dataElement.name);\n    }\n\n    // loop on I/O elements\n    for (let i = 0; i < data.length; ++i) {\n      dataElement = data[i];\n\n      // check loader\n      if (!loader.canLoadFile(dataElement)) {\n        throw new Error('Input file of different type: ' + dataElement);\n      }\n\n      /**\n       * The file reader.\n       *\n       * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/API/FileReader}.\n       *\n       * @external FileReader\n       */\n      const reader = new FileReader();\n      // store reader\n      this.#storeReader(reader);\n\n      // set reader callbacks\n      // reader.onloadstart: nothing to do\n      reader.onprogress = this.#augmentCallbackEvent(\n        mproghandler.getMonoProgressHandler(i, 0), dataElement);\n      reader.onload = this.#getLoadHandler(loader, dataElement, i);\n      // reader.onloadend: nothing to do\n      const errorCallback =\n        this.#augmentCallbackEvent(this.onerror, dataElement);\n      reader.onerror = (event) => {\n        this.#addLoadend();\n        errorCallback(event);\n      };\n      const abortCallback =\n        this.#augmentCallbackEvent(this.onabort, dataElement);\n      reader.onabort = (event) => {\n        this.#addLoadend();\n        abortCallback(event);\n      };\n      // read\n      if (loader.loadFileAs() === fileContentTypes.Text) {\n        reader.readAsText(dataElement);\n      } else if (loader.loadFileAs() === fileContentTypes.DataURL) {\n        reader.readAsDataURL(dataElement);\n      } else if (loader.loadFileAs() === fileContentTypes.ArrayBuffer) {\n        reader.readAsArrayBuffer(dataElement);\n      }\n    }\n  }\n\n  /**\n   * Abort a load.\n   */\n  abort() {\n    // abort readers\n    for (let i = 0; i < this.#readers.length; ++i) {\n      // 0: EMPTY, 1: LOADING, 2: DONE\n      if (this.#readers[i].readyState === 1) {\n        this.#readers[i].abort();\n      }\n    }\n    // abort loader\n    if (this.#runningLoader && this.#runningLoader.isLoading()) {\n      this.#runningLoader.abort();\n    }\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class FilesLoader\n","import {FilesLoader} from '../io/filesLoader';\nimport {MemoryLoader} from '../io/memoryLoader';\nimport {UrlsLoader} from '../io/urlsLoader';\n\n/**\n * Load controller.\n */\nexport class LoadController {\n\n  /**\n   * The default character set.\n   *\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * List of current loaders.\n   *\n   * @type {object}\n   */\n  #currentLoaders = {};\n\n  /**\n   * @param {string} defaultCharacterSet The default character set.\n   */\n  constructor(defaultCharacterSet) {\n    this.#defaultCharacterSet = defaultCharacterSet;\n  }\n\n  /**\n   * Load a list of files. Can be image files or a state file.\n   *\n   * @param {File[]} files The list of files to load.\n   * @param {string} dataId The data Id.\n   */\n  loadFiles(files, dataId) {\n    // has been checked for emptiness.\n    const ext = files[0].name.split('.').pop().toLowerCase();\n    if (ext === 'json') {\n      this.#loadStateFile(files[0], dataId);\n    } else {\n      this.#loadImageFiles(files, dataId);\n    }\n  }\n\n  /**\n   * Load a list of URLs. Can be image files or a state file.\n   *\n   * @param {string[]} urls The list of urls to load.\n   * @param {string} dataId The data Id.\n   * @param {object} [options] The load options:\n   * - requestHeaders: an array of {name, value} to use as request headers.\n   * - withCredentials: credentials flag to pass to the request.\n   */\n\n  loadURLs(urls, dataId, options) {\n    // has been checked for emptiness.\n    const ext = urls[0].split('.').pop().toLowerCase();\n    if (ext === 'json') {\n      this.#loadStateUrl(urls[0], dataId, options);\n    } else {\n      this.#loadImageUrls(urls, dataId, options);\n    }\n  }\n\n  /**\n   * Load a list of ArrayBuffers.\n   *\n   * @param {Array} data The list of ArrayBuffers to load\n   *   in the form of [{name: '', filename: '', data: data}].\n   * @param {string} dataId The data Id.\n   */\n  loadImageObject(data, dataId) {\n    // create IO\n    const memoryIO = new MemoryLoader();\n    // load data\n    this.#loadData(data, memoryIO, 'image', dataId);\n  }\n\n  /**\n   * Get the currently loaded data ids.\n   *\n   * @returns {string[]} The data ids.\n   */\n  getLoadingDataIds() {\n    return Object.keys(this.#currentLoaders);\n  }\n\n  /**\n   * Abort an individual current loader.\n   *\n   * @param {string} dataId The data to stop loading.\n   */\n  abort(dataId) {\n    if (typeof this.#currentLoaders[dataId] !== 'undefined') {\n      this.#currentLoaders[dataId].loader.abort();\n      delete this.#currentLoaders[dataId];\n    }\n  }\n\n  // private ----------------------------------------------------------------\n\n  /**\n   * Load a list of image files.\n   *\n   * @param {File[]} files The list of image files to load.\n   * @param {string} dataId The data Id.\n   */\n  #loadImageFiles(files, dataId) {\n    // create IO\n    const fileIO = new FilesLoader();\n    fileIO.setDefaultCharacterSet(this.#defaultCharacterSet);\n    // load data\n    this.#loadData(files, fileIO, 'image', dataId);\n  }\n\n  /**\n   * Load a list of image URLs.\n   *\n   * @param {string[]} urls The list of urls to load.\n   * @param {string} [dataId] The data Id.\n   * @param {object} [options] The load options:\n   * - requestHeaders: an array of {name, value} to use as request headers.\n   * - withCredentials: credentials flag to pass to the request.\n   */\n  #loadImageUrls(urls, dataId, options) {\n    // create IO\n    const urlIO = new UrlsLoader();\n    urlIO.setDefaultCharacterSet(this.#defaultCharacterSet);\n    // load data\n    this.#loadData(urls, urlIO, 'image', dataId, options);\n  }\n\n  /**\n   * Load a State file.\n   *\n   * @param {File} file The state file to load.\n   * @param {string} dataId The data Id.\n   */\n  #loadStateFile(file, dataId) {\n    // create IO\n    const fileIO = new FilesLoader();\n    // load data\n    this.#loadData([file], fileIO, 'state', dataId);\n  }\n\n\n  /**\n   * Load a State url.\n   *\n   * @param {string} url The state url to load.\n   * @param {string} [dataId] The data Id.\n   * @param {object} [options] The load options:\n   * - requestHeaders: an array of {name, value} to use as request headers.\n   * - withCredentials: credentials flag to pass to the request.\n   */\n  #loadStateUrl(url, dataId, options) {\n    // create IO\n    const urlIO = new UrlsLoader();\n    // load data\n    this.#loadData([url], urlIO, 'state', dataId, options);\n  }\n\n  /**\n   * Load a list of data.\n   *\n   * @param {string[]|File[]|Array} data Array of data to load.\n   * @param {object} loader The data loader.\n   * @param {string} loadType The data load type: 'image' or 'state'.\n   * @param {string} dataId The data id.\n   * @param {object} [options] Options passed to the final loader.\n   */\n  #loadData(data, loader, loadType, dataId, options) {\n    const eventInfo = {\n      loadtype: loadType,\n      dataid: dataId\n    };\n\n    // set callbacks\n    loader.onloadstart = (event) => {\n      // store loader to allow abort\n      this.#currentLoaders[dataId] = {\n        loader: loader,\n        isFirstItem: true\n      };\n      // callback\n      this.#augmentCallbackEvent(this.onloadstart, eventInfo)(event);\n    };\n    loader.onprogress = this.#augmentCallbackEvent(this.onprogress, eventInfo);\n    loader.onloaditem = (event) => {\n      const eventInfoItem = {\n        loadtype: loadType,\n        dataid: dataId\n      };\n      if (typeof this.#currentLoaders[dataId] !== 'undefined') {\n        eventInfoItem.isfirstitem = this.#currentLoaders[dataId].isFirstItem;\n      }\n      // callback\n      this.#augmentCallbackEvent(this.onloaditem, eventInfoItem)(event);\n      // update loader\n      if (typeof this.#currentLoaders[dataId] !== 'undefined' &&\n        this.#currentLoaders[dataId].isFirstItem) {\n        this.#currentLoaders[dataId].isFirstItem = false;\n      }\n    };\n    loader.onload = this.#augmentCallbackEvent(this.onload, eventInfo);\n    loader.onloadend = (event) => {\n      // reset current loader\n      delete this.#currentLoaders[dataId];\n      // callback\n      this.#augmentCallbackEvent(this.onloadend, eventInfo)(event);\n    };\n    loader.onerror = this.#augmentCallbackEvent(this.onerror, eventInfo);\n    loader.onabort = this.#augmentCallbackEvent(this.onabort, eventInfo);\n    // launch load\n    try {\n      loader.load(data, options);\n    } catch (error) {\n      this.onerror({\n        error: error,\n        dataid: dataId\n      });\n      this.onloadend({\n        dataid: dataId\n      });\n      return;\n    }\n  }\n\n  /**\n   * Augment a callback event: adds loadtype to the event\n   *  passed to a callback.\n   *\n   * @param {object} callback The callback to update.\n   * @param {object} info Info object to append to the event.\n   * @returns {object} A function representing the modified callback.\n   */\n  #augmentCallbackEvent(callback, info) {\n    return function (event) {\n      const keys = Object.keys(info);\n      for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        event[key] = info[key];\n      }\n      callback(event);\n    };\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when an item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class LoadController\n","import {ListenerHandler} from '../utils/listen';\nimport {getReverseOrientation} from '../dicom/dicomParser';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get a number toprecision function with the provided precision.\n *\n * @param {number} precision The precision to achieve.\n * @returns {Function} The to precision function.\n */\nfunction getNumberToPrecision(precision) {\n  return function (num) {\n    return Number(num).toPrecision(precision);\n  };\n}\n\n/**\n * Create a default replace format from a given length.\n * For example: '{v0}, {v1}'.\n *\n * @param {number} length The length of the format.\n * @returns {string} A replace format.\n */\nfunction createDefaultReplaceFormat(length) {\n  let res = '';\n  for (let i = 0; i < length; ++i) {\n    if (i !== 0) {\n      res += ', ';\n    }\n    res += '{v' + i + '}';\n  }\n  return res;\n}\n\n/**\n * Replace flags in a input string. Flags are keywords surrounded with curly\n * braces in the form: '{v0}, {v1}'.\n *\n * @param {string} inputStr The input string.\n * @param {string[]} values An array of strings.\n * @example\n *    var values = [\"a\", \"b\"];\n *    var str = \"The length is: {v0}. The size is: {v1}\";\n *    var res = replaceFlags(str, values);\n *    // \"The length is: a. The size is: b\"\n * @returns {string} The result string.\n */\nfunction replaceFlags(inputStr, values) {\n  let res = inputStr;\n  for (let i = 0; i < values.length; ++i) {\n    res = res.replace('{v' + i + '}', values[i]);\n  }\n  return res;\n}\n\n/**\n * DICOM Header overlay info.\n */\nexport class OverlayData {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Associated data id.\n   *\n   * @type {string}\n   */\n  #dataId;\n\n  /**\n   * Overlay config.\n   *\n   * @type {object}\n   */\n  #configs;\n\n  /**\n   * List of event used by the config.\n   *\n   * @type {string[]}\n   */\n  #eventNames = [];\n\n  /**\n   * Flag to know if listening to app.\n   *\n   * @type {boolean}\n   */\n  #isListening;\n\n  /**\n   * Overlay data.\n   *\n   * @type {Array}\n   */\n  #data = [];\n\n  /**\n   * Current data uid: set on pos change.\n   *\n   * @type {number}\n   */\n  #currentDataUid;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * @param {App} app The associated application.\n   * @param {string} dataId The associated data id.\n   * @param {object} configs The overlay config.\n   */\n  constructor(app, dataId, configs) {\n    this.#app = app;\n    this.#dataId = dataId;\n    this.#configs = configs;\n\n    // parse overlays to get the list of events to listen to\n    const keys = Object.keys(this.#configs);\n    for (let i = 0; i < keys.length; ++i) {\n      const config = this.#configs[keys[i]];\n      for (let j = 0; j < config.length; ++j) {\n        const eventType = config[j].event;\n        if (typeof eventType !== 'undefined') {\n          if (!this.#eventNames.includes(eventType)) {\n            this.#eventNames.push(eventType);\n          }\n        }\n      }\n    }\n    // add app listeners\n    this.addAppListeners();\n  }\n\n  /**\n   * Reset the data.\n   */\n  reset() {\n    this.#data = [];\n    this.#currentDataUid = undefined;\n  }\n\n  /**\n   * Handle a new loaded item event.\n   *\n   * @param {object} data The item meta data.\n   */\n  addItemMeta(data) {\n    // create and store overlay data\n    let dataUid;\n    // check if dicom data (00020010: transfer syntax)\n    if (typeof data['00020010'] !== 'undefined') {\n      if (typeof data['00080018'] !== 'undefined') {\n        // SOP instance UID\n        dataUid = data['00080018'].value[0];\n      } else {\n        dataUid = data.length;\n      }\n      this.#data[dataUid] = createOverlayData(data, this.#configs);\n    } else {\n      // image file case\n      const keys = Object.keys(data);\n      for (let d = 0; d < keys.length; ++d) {\n        const obj = data[keys[d]];\n        if (keys[d] === 'imageUid') {\n          dataUid = obj.value;\n          break;\n        }\n      }\n      this.#data[dataUid] = createOverlayDataForDom(data, this.#configs);\n    }\n    // store uid\n    this.#currentDataUid = dataUid;\n  }\n\n  /**\n   * Handle a changed slice event.\n   *\n   * @param {object} event The slicechange event.\n   */\n  #onSliceChange = (event) => {\n    if (event.dataid !== this.#dataId) {\n      return;\n    }\n    if (typeof event.data !== 'undefined' &&\n      typeof event.data.imageUid !== 'undefined' &&\n      this.#currentDataUid !== event.data.imageUid) {\n      this.#currentDataUid = event.data.imageUid;\n      this.#updateData(event);\n    }\n  };\n\n  /**\n   * Update the overlay data.\n   *\n   * @param {object} event An event defined by the overlay map and\n   *   registered in toggleListeners.\n   */\n  #updateData = (event) => {\n    if (event.dataid !== this.#dataId) {\n      return;\n    }\n\n    const sliceOverlayData = this.#data[this.#currentDataUid];\n    if (typeof sliceOverlayData === 'undefined') {\n      console.warn('No slice overlay data for: ' + this.#currentDataUid);\n      return;\n    }\n\n    for (let n = 0; n < sliceOverlayData.length; ++n) {\n      let text = undefined;\n      if (typeof sliceOverlayData[n].tags !== 'undefined') {\n        // update tags only on slice change\n        if (event.type === 'positionchange') {\n          text = sliceOverlayData[n].value;\n        }\n      } else {\n        // update text if the value is an event type\n        if (typeof sliceOverlayData[n].event !== 'undefined' &&\n          sliceOverlayData[n].event === event.type) {\n          const format = sliceOverlayData[n].format;\n          let values = event.value;\n          // optional number precision\n          if (typeof sliceOverlayData[n].precision !== 'undefined') {\n            let mapFunc = null;\n            if (sliceOverlayData[n].precision === 'round') {\n              mapFunc = Math.round;\n            } else {\n              mapFunc = getNumberToPrecision(sliceOverlayData[n].precision);\n            }\n            values = values.map(mapFunc);\n          }\n          text = replaceFlags(format, values);\n        }\n      }\n      if (typeof text !== 'undefined') {\n        sliceOverlayData[n].value = text;\n      }\n    }\n\n    // fire valuechange for listeners\n    this.#fireEvent({type: 'valuechange', data: sliceOverlayData});\n  };\n\n  /**\n   * Is this class listening to app events.\n   *\n   * @returns {boolean} True is listening to app events.\n   */\n  isListening() {\n    return this.#isListening;\n  }\n\n  /**\n   * Toggle info listeners.\n   */\n  addAppListeners() {\n    // listen to update tags data\n    this.#app.addEventListener('positionchange', this.#onSliceChange);\n    // add event listeners\n    for (let i = 0; i < this.#eventNames.length; ++i) {\n      this.#app.addEventListener(this.#eventNames[i], this.#updateData);\n    }\n    // update flag\n    this.#isListening = true;\n  }\n\n  /**\n   * Toggle info listeners.\n   */\n  removeAppListeners() {\n    // stop listening to update tags data\n    this.#app.removeEventListener('positionchange', this.#onSliceChange);\n    // remove event listeners\n    for (let i = 0; i < this.#eventNames.length; ++i) {\n      this.#app.removeEventListener(this.#eventNames[i], this.#updateData);\n    }\n    // update flag\n    this.#isListening = false;\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent(event) {\n    this.#listenerHandler.fireEvent(event);\n  }\n\n} // class OverlayData\n\n/**\n * Create overlay data array for a DICOM image.\n *\n * @param {object} dicomElements DICOM elements of the image.\n * @param {object} configs The overlay data configs.\n * @returns {Array} Overlay data array.\n */\nfunction createOverlayData(dicomElements, configs) {\n  const overlays = [];\n  let modality;\n  const modElement = dicomElements['00080060'];\n  if (typeof modElement !== 'undefined') {\n    modality = modElement.value[0];\n  } else {\n    return overlays;\n  }\n  const config = configs[modality] || configs['*'];\n  if (!config) {\n    return overlays;\n  }\n\n  for (let n = 0; n < config.length; ++n) {\n    // deep copy\n    const overlay = JSON.parse(JSON.stringify(config[n]));\n\n    // add tag values\n    const tags = overlay.tags;\n    if (typeof tags !== 'undefined' && tags.length !== 0) {\n      // get values\n      const values = [];\n      for (let i = 0; i < tags.length; ++i) {\n        const elem = dicomElements[tags[i]];\n        if (typeof elem !== 'undefined') {\n          values.push(dicomElements[tags[i]].value);\n        } else {\n          values.push('');\n        }\n      }\n      // format\n      if (typeof overlay.format === 'undefined' || overlay.format === null) {\n        overlay.format = createDefaultReplaceFormat(values.length);\n      }\n      overlay.value = replaceFlags(overlay.format, values).trim();\n    }\n\n    // store\n    overlays.push(overlay);\n  }\n\n  // (0020,0020) Patient Orientation\n  const poElement = dicomElements['00200020'];\n  if (typeof poElement !== 'undefined' &&\n    poElement.value.length === 2\n  ) {\n    const po0 = poElement.value[0];\n    const po1 = poElement.value[1];\n    overlays.push({\n      pos: 'cr', value: po0, format: '{v0}'\n    });\n    overlays.push({\n      pos: 'cl', value: getReverseOrientation(po0), format: '{v0}'\n    });\n    overlays.push({\n      pos: 'bc', value: po1, format: '{v0}'\n    });\n    overlays.push({\n      pos: 'tc', value: getReverseOrientation(po1), format: '{v0}'\n    });\n  }\n\n  return overlays;\n}\n\n/**\n * Create overlay data array for a DOM image.\n *\n * @param {object} info Meta data.\n * @param {object} configs The overlay data configs.\n * @returns {Array} Overlay data array.\n */\nfunction createOverlayDataForDom(info, configs) {\n  const overlays = [];\n  const config = configs.DOM;\n  if (!config) {\n    return overlays;\n  }\n\n  const infoKeys = Object.keys(info);\n\n  for (let n = 0; n < config.length; ++n) {\n    // deep copy\n    const overlay = JSON.parse(JSON.stringify(config[n]));\n\n    // add tag values\n    const tags = overlay.tags;\n    if (typeof tags !== 'undefined' && tags.length !== 0) {\n      // get values\n      const values = [];\n      for (let i = 0; i < tags.length; ++i) {\n        for (let j = 0; j < infoKeys.length; ++j) {\n          if (tags[i] === infoKeys[j]) {\n            values.push(info[infoKeys[j]].value);\n          }\n        }\n      }\n      // format\n      if (typeof overlay.format === 'undefined' || overlay.format === null) {\n        overlay.format = createDefaultReplaceFormat(values.length);\n      }\n      overlay.value = replaceFlags(overlay.format, values).trim();\n    }\n\n    // store\n    overlays.push(overlay);\n  }\n\n  return overlays;\n}\n","import {viewEventNames} from '../image/view';\nimport {ViewFactory} from '../image/viewFactory';\nimport {\n  getMatrixFromName,\n  getOrientationStringLPS,\n  Orientation,\n  getViewOrientation\n} from '../math/orientation';\nimport {Point3D} from '../math/point';\nimport {Stage} from '../gui/stage';\nimport {Style} from '../gui/style';\nimport {getLayerDetailsFromLayerDivId} from '../gui/layerGroup';\nimport {ListenerHandler} from '../utils/listen';\nimport {State} from '../io/state';\nimport {logger} from '../utils/logger';\nimport {getUriQuery, decodeQuery} from '../utils/uri';\nimport {UndoStack} from '../utils/undoStack';\nimport {ToolboxController} from './toolboxController';\nimport {LoadController} from './loadController';\nimport {DataController} from './dataController';\nimport {OverlayData} from '../gui/overlayData';\nimport {\n  toolList,\n  defaultToolList,\n  toolOptions,\n  defaultToolOptions\n} from '../tools';\nimport {binderList} from '../gui/stage';\nimport {WindowLevel} from '../image/windowLevel';\nimport {PlaneHelper} from '../image/planeHelper';\nimport {AnnotationGroup} from '../image/annotationGroup';\nimport {konvaToAnnotation} from '../gui/drawLayer';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {LayerGroup} from '../gui/layerGroup';\nimport {ViewLayer} from '../gui/viewLayer';\nimport {DrawLayer} from '../gui/drawLayer';\nimport {Image} from '../image/image';\nimport {Matrix33} from '../math/matrix';\nimport {DataElement} from '../dicom/dataElement';\nimport {Scalar3D} from '../math/scalar';\nimport {DicomData} from './dataController';\n/* eslint-enable no-unused-vars */\n\n/**\n * View configuration: mainly defines the ´divId´\n * of the associated HTML div.\n */\nexport class ViewConfig {\n  /**\n   * Associated HTML div id.\n   *\n   * @type {string}\n   */\n  divId;\n  /**\n   * Optional orientation of the data; 'axial', 'coronal' or 'sagittal'.\n   * If undefined, will use the data aquisition plane.\n   *\n   * @type {string|undefined}\n   */\n  orientation;\n  /**\n   * Optional view colour map name.\n   *\n   * @type {string|undefined}\n   */\n  colourMap;\n  /**\n   * Optional layer opacity; in [0, 1] range.\n   *\n   * @type {number|undefined}\n   */\n  opacity;\n  /**\n   * Optional layer window level preset name.\n   * If present, the preset name will be used and\n   * the window centre and width ignored.\n   *\n   * @type {string|undefined}\n   */\n  wlPresetName;\n  /**\n   * Optional layer window center.\n   *\n   * @type {number|undefined}\n   */\n  windowCenter;\n  /**\n   * Optional layer window width.\n   *\n   * @type {number|undefined}\n   */\n  windowWidth;\n\n  /**\n   * @param {string} divId The associated HTML div id.\n   */\n  constructor(divId) {\n    this.divId = divId;\n  }\n}\n\n/**\n * Tool configuration.\n */\nexport class ToolConfig {\n  /**\n   * Optional tool options.\n   * For Draw: list of shape names.\n   * For Filter: list of filter names.\n   *\n   * @type {string[]|undefined}\n   */\n  options;\n\n  /**\n   * @param {string[]} [options] Optional tool options.\n   */\n  constructor(options) {\n    this.options = options;\n  }\n}\n\n/**\n * Application options.\n */\nexport class AppOptions {\n  /**\n   * DataId indexed object containing the data view configurations.\n   *\n   * @type {Object<string, ViewConfig[]>|undefined}\n   */\n  dataViewConfigs;\n  /**\n   * Tool name indexed object containing individual tool configurations.\n   *\n   * @type {Object<string, ToolConfig>|undefined}\n   */\n  tools;\n  /**\n   * Optional array of layerGroup binder names.\n   *\n   * @type {string[]|undefined}\n   */\n  binders;\n  /**\n   * Optional boolean flag to trigger the first data render\n   *   after the first loaded data or not. Defaults to true.\n   *\n   * @type {boolean|undefined}\n   */\n  viewOnFirstLoadItem;\n  /**\n   * Optional default chraracterset string used for DICOM parsing if\n   *   not passed in DICOM file.\n   *\n   * Valid values: {@link https://developer.mozilla.org/en-US/docs/Web/API/Encoding_API/Encodings}.\n   *\n   * @type {string|undefined}\n   */\n  defaultCharacterSet;\n  /**\n   * Optional overlay config.\n   *\n   * @type {object|undefined}\n   */\n  overlayConfig;\n  /**\n   * DOM root document.\n   *\n   * @type {DocumentFragment}\n   */\n  rootDocument;\n\n  /**\n   * @param {Object<string, ViewConfig[]>} [dataViewConfigs] Optional dataId\n   *   indexed object containing the data view configurations.\n   */\n  constructor(dataViewConfigs) {\n    this.dataViewConfigs = dataViewConfigs;\n  }\n}\n\n/**\n * List of ViewConfigs indexed by dataIds.\n *\n * @typedef {Object<string, ViewConfig[]>} DataViewConfigs\n */\n\n/**\n * Main application class.\n *\n * @example\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n * const viewConfigs = {'*': [viewConfig0]};\n * const options = new dwv.AppOptions(viewConfigs);\n * app.init(options);\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n */\nexport class App {\n\n  /**\n   * App options.\n   *\n   * @type {AppOptions}\n   */\n  #options = null;\n\n  /**\n   * Data controller.\n   *\n   * @type {DataController}\n   */\n  #dataController = null;\n\n  /**\n   * Toolbox controller.\n   *\n   * @type {ToolboxController}\n   */\n  #toolboxController = null;\n\n  /**\n   * Load controller.\n   *\n   * @type {LoadController}\n   */\n  #loadController = null;\n\n  /**\n   * Stage.\n   *\n   * @type {Stage}\n   */\n  #stage = null;\n\n  /**\n   * Undo stack.\n   *\n   * @type {UndoStack}\n   */\n  #undoStack = null;\n\n  /**\n   * Style.\n   *\n   * @type {Style}\n   */\n  #style = new Style();\n\n  // overlay datas\n  #overlayDatas = {};\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Get a DicomData.\n   *\n   * @param {string} dataId The data id.\n   * @returns {DicomData|undefined} The data.\n   */\n  getData(dataId) {\n    return this.#dataController.get(dataId);\n  }\n\n  /**\n   * Set the image at the given id.\n   *\n   * @param {string} dataId The data id.\n   * @param {Image} img The associated image.\n   */\n  setImage(dataId, img) {\n    this.#dataController.setImage(dataId, img);\n  }\n\n  /**\n   * Add a new DicomData.\n   *\n   * @param {DicomData} data The new data.\n   * @returns {string} The data id.\n   */\n  addData(data) {\n    // get a new dataId\n    const dataId = this.#dataController.getNextDataId();\n    // add image to data controller\n    this.#dataController.add(\n      dataId,\n      data\n    );\n    // optional render\n    // if (this.#options.viewOnFirstLoadItem) {\n    //   this.render(dataId);\n    // }\n    // return\n    return dataId;\n  }\n\n  /**\n   * Get the meta data.\n   *\n   * @param {string} dataId The data id.\n   * @returns {Object<string, DataElement>|undefined} The list of meta data.\n   */\n  getMetaData(dataId) {\n    let res;\n    if (typeof this.#dataController.get(dataId) !== 'undefined') {\n      res = this.#dataController.get(dataId).meta;\n    }\n    return res;\n  }\n\n  /**\n   * Get the list of ids in the data storage.\n   *\n   * @returns {string[]} The list of data ids.\n   */\n  getDataIds() {\n    return this.#dataController.getDataIds();\n  }\n\n  /**\n   * Get the list of dataIds that contain the input UIDs.\n   *\n   * @param {string[]} uids A list of UIDs.\n   * @returns {string[]} The list of dataIds that contain the UIDs.\n   */\n  getDataIdsFromSopUids(uids) {\n    return this.#dataController.getDataIdsFromSopUids(uids);\n  }\n\n  /**\n   * Can the data (of the active view of the active layer) be scrolled?\n   *\n   * @returns {boolean} True if the data has a third dimension greater than one.\n   * @deprecated Please use the ViewController equivalent directly instead.\n   */\n  canScroll() {\n    const viewLayer = this.#stage.getActiveLayerGroup().getActiveViewLayer();\n    const controller = viewLayer.getViewController();\n    return controller.canScroll();\n  }\n\n  /**\n   * Can window and level be applied to the data\n   * (of the active view of the active layer)?\n   *\n   * @returns {boolean} True if the data is monochrome.\n   * @deprecated Please use the ViewController equivalent directly instead.\n   */\n  canWindowLevel() {\n    const viewLayer = this.#stage.getActiveLayerGroup().getActiveViewLayer();\n    const controller = viewLayer.getViewController();\n    return controller.canWindowLevel();\n  }\n\n  /**\n   * Get the active layer group scale on top of the base scale.\n   *\n   * @returns {Scalar3D} The scale as {x,y,z}.\n   */\n  getAddedScale() {\n    return this.#stage.getActiveLayerGroup().getAddedScale();\n  }\n\n  /**\n   * Get the base scale of the active layer group.\n   *\n   * @returns {Scalar3D} The scale as {x,y,z}.\n   */\n  getBaseScale() {\n    return this.#stage.getActiveLayerGroup().getBaseScale();\n  }\n\n  /**\n   * Get the layer offset of the active layer group.\n   *\n   * @returns {Scalar3D} The offset as {x,y,z}.\n   */\n  getOffset() {\n    return this.#stage.getActiveLayerGroup().getOffset();\n  }\n\n  /**\n   * Get the toolbox controller.\n   *\n   * @returns {ToolboxController} The controller.\n   */\n  getToolboxController() {\n    return this.#toolboxController;\n  }\n\n  /**\n   * Get the active layer group.\n   * The layer is available after the first loaded item.\n   *\n   * @returns {LayerGroup|undefined} The layer group.\n   */\n  getActiveLayerGroup() {\n    return this.#stage.getActiveLayerGroup();\n  }\n\n  /**\n   * Set the active layer group.\n   *\n   * @param {number} index The layer group index.\n   */\n  setActiveLayerGroup(index) {\n    this.#stage.setActiveLayerGroup(index);\n  }\n\n  /**\n   * Get the view layers associated to a data id.\n   * The layer are available after the first loaded item.\n   *\n   * @param {string} dataId The data id.\n   * @returns {ViewLayer[]} The layers.\n   */\n  getViewLayersByDataId(dataId) {\n    return this.#stage.getViewLayersByDataId(dataId);\n  }\n\n  /**\n   * Get a list of view layers according to an input callback function.\n   *\n   * @param {Function} [callbackFn] A function that takes\n   *   a ViewLayer as input and returns a boolean. If undefined,\n   *   returns all view layers.\n   * @returns {ViewLayer[]} The layers that\n   *   satisfy the callbackFn.\n   */\n  getViewLayers(callbackFn) {\n    return this.#stage.getViewLayers(callbackFn);\n  }\n\n  /**\n   * Get the draw layers associated to a data id.\n   * The layer are available after the first loaded item.\n   *\n   * @param {string} dataId The data id.\n   * @returns {DrawLayer[]} The layers.\n   */\n  getDrawLayersByDataId(dataId) {\n    return this.#stage.getDrawLayersByDataId(dataId);\n  }\n\n  /**\n   * Get a list of draw layers according to an input callback function.\n   *\n   * @param {Function} [callbackFn] A function that takes\n   *   a DrawLayer as input and returns a boolean. If undefined,\n   *   returns all draw layers.\n   * @returns {DrawLayer[]} The layers that\n   *   satisfy the callbackFn.\n   */\n  getDrawLayers(callbackFn) {\n    return this.#stage.getDrawLayers(callbackFn);\n  }\n\n  /**\n   * Get a layer group by div id.\n   * The layer is available after the first loaded item.\n   *\n   * @param {string} divId The div id.\n   * @returns {LayerGroup} The layer group.\n   */\n  getLayerGroupByDivId(divId) {\n    return this.#stage.getLayerGroupByDivId(divId);\n  }\n\n  /**\n   * Get the number of layer groups.\n   *\n   * @returns {number} The number of groups.\n   */\n  getNumberOfLayerGroups() {\n    return this.#stage.getNumberOfLayerGroups();\n  }\n\n  /**\n   * Get the app style.\n   *\n   * @returns {object} The app style.\n   */\n  getStyle() {\n    return this.#style;\n  }\n\n  /**\n   * Add a command to the undo stack.\n   *\n   * @param {object} cmd The command to add.\n   * @fires UndoStack#undoadd\n   * @function\n   */\n  addToUndoStack = (cmd) => {\n    if (this.#undoStack !== null) {\n      this.#undoStack.add(cmd);\n    }\n  };\n\n  /**\n   * Remove a command from the undo stack.\n   *\n   * @param {string} name The name of the command to remove.\n   * @returns {boolean} True if the command was found and removed.\n   * @fires UndoStack#undoremove\n   * @function\n   */\n  removeFromUndoStack = (name) => {\n    let res = false;\n    if (this.#undoStack !== null) {\n      res = this.#undoStack.remove(name);\n    }\n    return res;\n  };\n\n  /**\n   * Initialise the application.\n   *\n   * @param {AppOptions} opt The application options.\n   * @example\n   * // create the dwv app\n   * const app = new dwv.App();\n   * // initialise\n   * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n   * const viewConfigs = {'*': [viewConfig0]};\n   * const options = new dwv.AppOptions(viewConfigs);\n   * options.viewOnFirstLoadItem = false;\n   * app.init(options);\n   * // render button\n   * const button = document.createElement('button');\n   * button.id = 'render';\n   * button.disabled = true;\n   * button.appendChild(document.createTextNode('render'));\n   * document.body.appendChild(button);\n   * app.addEventListener('load', function () {\n   *   const button = document.getElementById('render');\n   *   button.disabled = false;\n   *   button.onclick = function () {\n   *     // render data #0\n   *     app.render(0);\n   *   };\n   * });\n   * // load dicom data\n   * app.loadURLs([\n   *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n   * ]);\n   */\n  init(opt) {\n    // store\n    this.#options = opt;\n    // defaults\n    if (typeof this.#options.viewOnFirstLoadItem === 'undefined') {\n      this.#options.viewOnFirstLoadItem = true;\n    }\n    if (typeof this.#options.dataViewConfigs === 'undefined') {\n      this.#options.dataViewConfigs = {};\n    }\n    if (typeof this.#options.rootDocument === 'undefined') {\n      this.#options.rootDocument = document;\n    }\n\n    // undo stack\n    this.#undoStack = new UndoStack();\n    this.#undoStack.addEventListener('undoadd', this.#fireEvent);\n    this.#undoStack.addEventListener('undo', this.#fireEvent);\n    this.#undoStack.addEventListener('redo', this.#fireEvent);\n\n    // tools\n    if (typeof this.#options.tools !== 'undefined') {\n      // setup the tool list\n      const appToolList = {};\n      const keys = Object.keys(this.#options.tools);\n      for (let t = 0; t < keys.length; ++t) {\n        const toolName = keys[t];\n        // find the tool in the default tool list\n        let toolClass = defaultToolList[toolName];\n        // or use external one\n        if (typeof toolClass === 'undefined') {\n          toolClass = toolList[toolName];\n        }\n        if (typeof toolClass !== 'undefined') {\n          // create tool instance\n          appToolList[toolName] = new toolClass(this);\n          // register listeners\n          if (typeof appToolList[toolName].addEventListener !== 'undefined') {\n            const names = appToolList[toolName].getEventNames();\n            for (let j = 0; j < names.length; ++j) {\n              appToolList[toolName].addEventListener(names[j], this.#fireEvent);\n            }\n          }\n          // tool options\n          const toolParams = this.#options.tools[toolName];\n          if (typeof toolParams.options !== 'undefined' &&\n            toolParams.options.length !== 0) {\n            let type = 'raw';\n            if (typeof appToolList[toolName].getOptionsType !== 'undefined') {\n              type = appToolList[toolName].getOptionsType();\n            }\n            let appToolOptions;\n            if (type === 'instance' || type === 'factory') {\n              appToolOptions = {};\n              for (let i = 0; i < toolParams.options.length; ++i) {\n                const optionName = toolParams.options[i];\n                let optionClassName = optionName;\n                if (type === 'factory') {\n                  optionClassName += 'Factory';\n                }\n                const toolNamespace = toolName.charAt(0).toLowerCase() +\n                  toolName.slice(1);\n                // find the option in the default tool list\n                let optionClass =\n                  defaultToolOptions[toolNamespace][optionClassName];\n                // or use external one\n                if (typeof optionClass === 'undefined') {\n                  optionClass = toolOptions[toolNamespace][optionClassName];\n                }\n                if (typeof optionClass !== 'undefined') {\n                  appToolOptions[optionName] = optionClass;\n                } else {\n                  logger.warn('Could not find option class for: ' +\n                    optionName);\n                }\n              }\n            } else {\n              appToolOptions = toolParams.options;\n            }\n            appToolList[toolName].setOptions(appToolOptions);\n          }\n        } else {\n          logger.warn('Could not initialise unknown tool: ' + toolName);\n        }\n      }\n      // add tools to the controller\n      this.#toolboxController = new ToolboxController(appToolList);\n    }\n\n    // create load controller\n    this.#loadController =\n      new LoadController(this.#options.defaultCharacterSet);\n    this.#loadController.onloadstart = this.#onloadstart;\n    this.#loadController.onprogress = this.#onloadprogress;\n    this.#loadController.onloaditem = this.#onloaditem;\n    this.#loadController.onload = this.#onload;\n    this.#loadController.onloadend = this.#onloadend;\n    this.#loadController.onerror = this.#onloaderror;\n    this.#loadController.onabort = this.#onloadabort;\n\n    // create data controller\n    this.#dataController = new DataController();\n    // propagate data events\n    this.#dataController.addEventListener('dataadd', this.#fireEvent);\n    this.#dataController.addEventListener('dataremove', this.#fireEvent);\n    this.#dataController.addEventListener('dataimageset', this.#fireEvent);\n    this.#dataController.addEventListener('dataupdate', this.#fireEvent);\n    // propage individual data events\n    this.#dataController.addEventListener(\n      'imagecontentchange', this.#fireEvent);\n    this.#dataController.addEventListener(\n      'imagegeometrychange', this.#fireEvent);\n    this.#dataController.addEventListener('annotationadd', this.#fireEvent);\n    this.#dataController.addEventListener('annotationupdate', this.#fireEvent);\n    this.#dataController.addEventListener('annotationremove', this.#fireEvent);\n    this.#dataController.addEventListener(\n      'annotationgroupeditablechange', this.#fireEvent);\n    // create stage\n    this.#stage = new Stage();\n    if (typeof this.#options.binders !== 'undefined') {\n      this.#stage.setBinders(this.#options.binders);\n    }\n  }\n\n  /**\n   * Reset the application.\n   */\n  reset() {\n    // clear objects\n    this.#stage.empty();\n    this.#overlayDatas = {};\n    // reset undo/redo\n    if (this.#undoStack) {\n      this.#undoStack = new UndoStack();\n      this.#undoStack.addEventListener('undoadd', this.#fireEvent);\n      this.#undoStack.addEventListener('undo', this.#fireEvent);\n      this.#undoStack.addEventListener('redo', this.#fireEvent);\n    }\n  }\n\n  /**\n   * Reset the layout of the application.\n   */\n  resetLayout() {\n    this.#stage.reset();\n    this.#stage.draw();\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  // load API [begin] -------------------------------------------------------\n\n  /**\n   * Load a list of files. Can be image files or a state file.\n   *\n   * @param {File[]} files The list of files to load.\n   * @fires App#loadstart\n   * @fires App#loadprogress\n   * @fires App#loaditem\n   * @fires App#loadend\n   * @fires App#error\n   * @fires App#abort\n   * @function\n   */\n  loadFiles = (files) => {\n    // Get new data id\n    const dataId = this.#dataController.getNextDataId();\n    if (files.length === 0) {\n      logger.warn('Ignoring empty input file list.');\n      return;\n    }\n    this.#loadController.loadFiles(files, dataId);\n  };\n\n  /**\n   * Load a list of URLs. Can be image files or a state file.\n   *\n   * @param {string[]} urls The list of urls to load.\n   * @param {object} [options] The options object, can contain:\n   * - requestHeaders: an array of {name, value} to use as request headers,\n   * - withCredentials: boolean xhr.withCredentials flag to pass to the request,\n   * - batchSize: the size of the request url batch.\n   * @fires App#loadstart\n   * @fires App#loadprogress\n   * @fires App#loaditem\n   * @fires App#loadend\n   * @fires App#error\n   * @fires App#abort\n   * @function\n   */\n  loadURLs = (urls, options) => {\n    // Get new data id\n    const dataId = this.#dataController.getNextDataId();\n    if (urls.length === 0) {\n      logger.warn('Ignoring empty input url list.');\n      return;\n    }\n    this.#loadController.loadURLs(urls, dataId, options);\n  };\n\n  /**\n   * Load from an input uri.\n   *\n   * @param {string} uri The input uri, for example: 'window.location.href'.\n   * @param {object} [options] Optional url request options.\n   * @function\n   */\n  loadFromUri = (uri, options) => {\n    const query = getUriQuery(uri);\n\n    // load end callback: loads the state.\n    const onLoadEnd = (/*event*/) => {\n      this.removeEventListener('loadend', onLoadEnd);\n      this.loadURLs([query.state]);\n    };\n\n    // check query\n    if (query && typeof query.input !== 'undefined') {\n      // optional display state\n      if (typeof query.state !== 'undefined') {\n        // queue after main data load\n        this.addEventListener('loadend', onLoadEnd);\n      }\n      // load base image\n      decodeQuery(query, this.loadURLs, options);\n    }\n    // no else to allow for empty uris\n  };\n\n  /**\n   * Load a list of ArrayBuffers.\n   *\n   * @param {Array} data The list of ArrayBuffers to load\n   *   in the form of [{name: \"\", filename: \"\", data: data}].\n   * @fires App#loadstart\n   * @fires App#loadprogress\n   * @fires App#loaditem\n   * @fires App#loadend\n   * @fires App#error\n   * @fires App#abort\n   * @function\n   */\n  loadImageObject = (data) => {\n    // Get new data id\n    const dataId = this.#dataController.getNextDataId();\n    this.#loadController.loadImageObject(data, dataId);\n  };\n\n  /**\n   * Abort all the current loads.\n   */\n  abortAllLoads() {\n    const ids = this.#loadController.getLoadingDataIds();\n    for (const id of ids) {\n      this.abortLoad(id);\n    }\n  }\n\n  /**\n   * Abort an individual data load.\n   *\n   * @param {string} dataId The data to stop loading.\n   */\n  abortLoad(dataId) {\n    // abort load\n    this.#loadController.abort(dataId);\n    // remove data\n    this.#dataController.remove(dataId);\n    // clean up stage\n    this.#stage.removeLayersByDataId(dataId);\n  }\n\n  // load API [end] ---------------------------------------------------------\n\n  /**\n   * Fit the display to the data of each layer group.\n   * To be called once the image is loaded.\n   */\n  fitToContainer() {\n    this.#stage.fitToContainer();\n  }\n\n  /**\n   * Init the Window/Level display\n   * (of the active layer of the active layer group).\n   *\n   * @deprecated Please set the opacity of the desired view layer directly.\n   */\n  initWLDisplay() {\n    const viewLayer = this.#stage.getActiveLayerGroup().getActiveViewLayer();\n    const controller = viewLayer.getViewController();\n    controller.initialise();\n  }\n\n  /**\n   * Set the imageSmoothing flag value. Default is false.\n   *\n   * @param {boolean} flag True to enable smoothing.\n   */\n  setImageSmoothing(flag) {\n    this.#stage.setImageSmoothing(flag);\n    this.#stage.draw();\n  }\n\n  /**\n   * Get the layer group configuration from a data id.\n   *\n   * @param {string} dataId The data id.\n   * @param {boolean} [excludeStarConfig] Exclude the star config\n   *  (default to false).\n   * @returns {ViewConfig[]} The list of associated configs.\n   */\n  getViewConfigs(dataId, excludeStarConfig) {\n    // check options\n    if (this.#options.dataViewConfigs === null ||\n      typeof this.#options.dataViewConfigs === 'undefined') {\n      throw new Error('No available data view configuration');\n    }\n    let configs = [];\n    if (typeof this.#options.dataViewConfigs[dataId] !== 'undefined') {\n      configs = this.#options.dataViewConfigs[dataId];\n    } else if (!excludeStarConfig &&\n      typeof this.#options.dataViewConfigs['*'] !== 'undefined') {\n      configs = this.#options.dataViewConfigs['*'];\n    }\n    return configs;\n  }\n\n  /**\n   * Get the layer group configuration for a data id and group\n   * div id.\n   *\n   * @param {string} dataId The data id.\n   * @param {string} groupDivId The layer group div id.\n   * @param {boolean} [excludeStarConfig] Exclude the star config\n   *  (default to false).\n   * @returns {ViewConfig|undefined} The associated config.\n   */\n  getViewConfig(dataId, groupDivId, excludeStarConfig) {\n    const configs = this.getViewConfigs(dataId, excludeStarConfig);\n    return configs.find(function (item) {\n      return item.divId === groupDivId;\n    });\n  }\n\n  /**\n   * Get the data view config.\n   * Carefull, returns a reference, do not modify without resetting.\n   *\n   * @returns {Object<string, ViewConfig[]>} The configuration list.\n   */\n  getDataViewConfigs() {\n    return this.#options.dataViewConfigs;\n  }\n\n  /**\n   * Set the data view configuration.\n   * Resets the stage and recreates all the views.\n   *\n   * @param {Object<string, ViewConfig[]>} configs The configuration list.\n   */\n  setDataViewConfigs(configs) {\n    // clean up\n    this.#stage.empty();\n    // set new\n    this.#options.dataViewConfigs = configs;\n    // create layer groups\n    this.#createLayerGroups(configs);\n  }\n\n  /**\n   * Add a data view config.\n   *\n   * @param {string} dataId The data id.\n   * @param {ViewConfig} config The view configuration.\n   */\n  addDataViewConfig(dataId, config) {\n    // add to list\n    const configs = this.#options.dataViewConfigs;\n    if (typeof configs[dataId] === 'undefined') {\n      configs[dataId] = [];\n    }\n    const equalDivId = function (item) {\n      return item.divId === config.divId;\n    };\n    const itemIndex = configs[dataId].findIndex(equalDivId);\n    if (itemIndex === -1) {\n      this.#options.dataViewConfigs[dataId].push(config);\n    } else {\n      throw new Error('Duplicate view config for data ' + dataId +\n        ' and div ' + config.divId);\n    }\n\n    // add layer group if not done\n    if (typeof this.#stage.getLayerGroupByDivId(config.divId) === 'undefined') {\n      this.#createLayerGroup(config);\n    }\n\n    // render (will create layers)\n    if (typeof this.#dataController.get(dataId) !== 'undefined') {\n      this.render(dataId, [config]);\n    }\n  }\n\n  /**\n   * Remove a data view config.\n   *\n   * @param {string} dataId The data id.\n   * @param {string} divId The div id.\n   */\n  removeDataViewConfig(dataId, divId) {\n    // remove from list\n    const configs = this.#options.dataViewConfigs;\n    if (typeof configs[dataId] === 'undefined') {\n      // no config for dataId\n      return;\n    }\n    const equalDivId = function (item) {\n      return item.divId === divId;\n    };\n    const itemIndex = configs[dataId].findIndex(equalDivId);\n    if (itemIndex === -1) {\n      // no config for divId\n      return;\n    }\n    configs[dataId].splice(itemIndex, 1);\n    if (configs[dataId].length === 0) {\n      delete configs[dataId];\n    }\n\n    // data is loaded, remove view\n    if (typeof this.#dataController.get(dataId) !== 'undefined') {\n      const lg = this.#stage.getLayerGroupByDivId(divId);\n      if (typeof lg !== 'undefined') {\n        const vls = lg.getViewLayersByDataId(dataId);\n        if (vls.length === 1) {\n          lg.removeLayer(vls[0]);\n        }\n        const dls = lg.getDrawLayersByDataId(dataId);\n        if (dls.length === 1) {\n          lg.removeLayer(dls[0]);\n        }\n        if (vls.length === 0 && dls.length === 0) {\n          throw new Error('Expected one layer, got none');\n        }\n        if (lg.getNumberOfLayers() === 0) {\n          this.#stage.removeLayerGroup(lg);\n        }\n      }\n    }\n  }\n\n  /**\n   * Update an existing data view config.\n   * Removes and re-creates the layer if found.\n   *\n   * @param {string} dataId The data id.\n   * @param {string} divId The div id.\n   * @param {ViewConfig} config The view configuration.\n   */\n  updateDataViewConfig(dataId, divId, config) {\n    const configs = this.#options.dataViewConfigs;\n    // check data id\n    if (typeof configs[dataId] === 'undefined') {\n      throw new Error('No config for dataId: ' + dataId);\n    }\n    // check div id\n    const equalDivId = function (item) {\n      return item.divId === divId;\n    };\n    const itemIndex = configs[dataId].findIndex(equalDivId);\n    if (itemIndex === -1) {\n      throw new Error('No config for dataId: ' +\n        dataId + ' and divId: ' + divId);\n    }\n    // update config\n    const configToUpdate = configs[dataId][itemIndex];\n    for (const prop in config) {\n      configToUpdate[prop] = config[prop];\n    }\n\n    // remove previous layers\n    const lg = this.#stage.getLayerGroupByDivId(configToUpdate.divId);\n    if (typeof lg !== 'undefined') {\n      const vls = lg.getViewLayersByDataId(dataId);\n      if (vls.length === 1) {\n        lg.removeLayer(vls[0]);\n      }\n      const dls = lg.getDrawLayersByDataId(dataId);\n      if (dls.length === 1) {\n        lg.removeLayer(dls[0]);\n      }\n      if (vls.length === 0 && dls.length === 0) {\n        throw new Error('Expected one layer, got none');\n      }\n    }\n\n    // render (will create layer)\n    if (typeof this.#dataController.get(dataId) !== 'undefined') {\n      this.render(dataId, [configToUpdate]);\n    }\n  }\n\n  /**\n   * Create layer groups according to a data view config:\n   * adds them to stage and binds them.\n   *\n   * @param {DataViewConfigs} dataViewConfigs The data view config.\n   */\n  #createLayerGroups(dataViewConfigs) {\n    const dataKeys = Object.keys(dataViewConfigs);\n    const divIds = [];\n    for (let i = 0; i < dataKeys.length; ++i) {\n      const viewConfigs = dataViewConfigs[dataKeys[i]];\n      for (let j = 0; j < viewConfigs.length; ++j) {\n        const viewConfig = viewConfigs[j];\n        // view configs can contain the same divIds, avoid duplicating\n        if (!divIds.includes(viewConfig.divId)) {\n          this.#createLayerGroup(viewConfig);\n          divIds.push(viewConfig.divId);\n        }\n      }\n    }\n  }\n\n  /**\n   * Create a layer group according to a view config:\n   * adds it to stage and binds it.\n   *\n   * @param {ViewConfig} viewConfig The view config.\n   */\n  #createLayerGroup(viewConfig) {\n    // create new layer group\n    const element = this.#options.rootDocument.getElementById(viewConfig.divId);\n    const layerGroup = this.#stage.addLayerGroup(element);\n    // bind events\n    this.#bindLayerGroupToApp(layerGroup);\n  }\n\n  /**\n   * Set the layer groups binders.\n   *\n   * @param {string[]} list The list of binder names.\n   */\n  setLayerGroupsBinders(list) {\n    // create instances\n    const instances = [];\n    for (let i = 0; i < list.length; ++i) {\n      if (typeof binderList[list[i]] !== 'undefined') {\n        instances.push(new binderList[list[i]]);\n      }\n    }\n    // pass to stage\n    this.#stage.setBinders(instances);\n  }\n\n  /**\n   * Render the current data.\n   *\n   * @param {string} dataId The data id to render.\n   * @param {ViewConfig[]} [viewConfigs] The list of configs to render.\n   */\n  render(dataId, viewConfigs) {\n    if (typeof dataId === 'undefined' || dataId === null) {\n      throw new Error('Cannot render without data id');\n    }\n    // guess data type\n    const isImage =\n      typeof this.getData(dataId).image !== 'undefined';\n    const isMeasurement =\n      typeof this.getData(dataId).annotationGroup !== 'undefined';\n\n    // create layer groups if not done yet\n    // (create all to allow for ratio sync)\n    if (this.#stage.getNumberOfLayerGroups() === 0) {\n      this.#createLayerGroups(this.#options.dataViewConfigs);\n    }\n\n    // use options list if non provided\n    if (typeof viewConfigs === 'undefined') {\n      viewConfigs = this.getViewConfigs(dataId);\n    }\n\n    // nothing to do if no view config\n    if (viewConfigs.length === 0) {\n      logger.info('Not rendering data: ' + dataId +\n        ' (no data view config)');\n      return;\n    }\n\n    // loop on configs\n    for (let i = 0; i < viewConfigs.length; ++i) {\n      const config = viewConfigs[i];\n      const layerGroup =\n        this.#stage.getLayerGroupByDivId(config.divId);\n      // layer group must exist\n      if (!layerGroup) {\n        throw new Error('No layer group for ' + config.divId);\n      }\n      // create layer if needed\n      // warn: needs a loaded DOM\n      if (typeof this.#dataController.get(dataId) !== 'undefined') {\n        if (isImage &&\n          layerGroup.getViewLayersByDataId(dataId).length === 0\n        ) {\n          this.#addViewLayer(dataId, config);\n        } else if (isMeasurement &&\n          layerGroup.getDrawLayersByDataId(dataId).length === 0\n        ) {\n          this.addDrawLayer(dataId, config);\n        }\n      }\n      // draw\n      layerGroup.draw();\n    }\n  }\n\n  /**\n   * Zoom the layers of the active layer group.\n   *\n   * @param {number} step The step to add to the current zoom.\n   * @param {number} cx The zoom center X coordinate.\n   * @param {number} cy The zoom center Y coordinate.\n   */\n  zoom(step, cx, cy) {\n    const layerGroup = this.#stage.getActiveLayerGroup();\n    const viewController = layerGroup.getActiveViewLayer().getViewController();\n    const k = viewController.getCurrentScrollPosition();\n    const center = new Point3D(cx, cy, k);\n    layerGroup.addScale(step, center);\n    layerGroup.draw();\n  }\n\n  /**\n   * Apply a translation to the layers of the active layer group.\n   *\n   * @param {number} tx The translation along X.\n   * @param {number} ty The translation along Y.\n   */\n  translate(tx, ty) {\n    const layerGroup = this.#stage.getActiveLayerGroup();\n    layerGroup.addTranslation({x: tx, y: ty, z: 0});\n    layerGroup.draw();\n  }\n\n  /**\n   * Set the active view layer (of the active layer group) opacity.\n   *\n   * @param {number} alpha The opacity ([0:1] range).\n   * @deprecated Please set the opacity of the desired view layer directly.\n   */\n  setOpacity(alpha) {\n    const viewLayer = this.#stage.getActiveLayerGroup().getActiveViewLayer();\n    viewLayer.setOpacity(alpha);\n    viewLayer.draw();\n  }\n\n  /**\n   * Set the drawings of the active layer group.\n   *\n   * @deprecated Please switch to DICOM SR annotations.\n   * @param {Array} drawings An array of drawings.\n   * @param {Array} drawingsDetails An array of drawings details.\n   * @param {string} dataId The converted data id.\n   */\n  setDrawings(drawings, drawingsDetails, dataId) {\n    const layerGroup = this.#stage.getActiveLayerGroup();\n    const viewLayer = layerGroup.getActiveViewLayer();\n    const refDataId = viewLayer.getDataId();\n    const viewController = viewLayer.getViewController();\n\n    // convert konva to annotation\n    const annotations = konvaToAnnotation(drawings, drawingsDetails);\n    // create data\n    const data = this.createAnnotationData(refDataId);\n    // add annotations to data\n    for (const annotation of annotations) {\n      annotation.setViewController(viewController);\n      data.annotationGroup.add(annotation);\n    }\n    // add to data controller\n    this.#dataController.add(dataId, data);\n    // render\n    this.render(dataId);\n  }\n\n  /**\n   * Apply a JSON state to this app.\n   *\n   * @deprecated\n   * @param {string} jsonState The state of the app as a JSON string.\n   * @param {string} dataId The state data id.\n   */\n  applyJsonState(jsonState, dataId) {\n    const state = new State(dataId);\n    state.apply(this, state.fromJSON(jsonState));\n  }\n\n  // Handler Methods -----------------------------------------------------------\n\n  /**\n   * Handle resize: fit the display to the window.\n   * To be called once the image is loaded.\n   * Can be connected to a window 'resize' event.\n   *\n   * @function\n   */\n  onResize = () => {\n    this.fitToContainer();\n  };\n\n  /**\n   * Key down callback. Meant to be used in tools.\n   *\n   * @param {KeyboardEvent} event The key down event.\n   * @fires App#keydown\n   * @function\n   */\n  onKeydown = (event) => {\n    /**\n     * Key down event.\n     *\n     * @event App#keydown\n     * @type {KeyboardEvent}\n     * @property {string} type The event type: keydown.\n     * @property {string} context The tool where the event originated.\n     */\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Key down event handler example.\n   * - CRTL-Z: undo,\n   * - CRTL-Y: redo,\n   * - CRTL-ARROW_LEFT: next element on fourth dim,\n   * - CRTL-ARROW_UP: next element on third dim,\n   * - CRTL-ARROW_RIGHT: previous element on fourth dim,\n   * - CRTL-ARROW_DOWN: previous element on third dim.\n   *\n   * Applies to the active view of the active layer group.\n   *\n   * @param {KeyboardEvent} event The key down event.\n   * @fires UndoStack#undo\n   * @fires UndoStack#redo\n   * @function\n   */\n  defaultOnKeydown = (event) => {\n    if (event.ctrlKey) {\n      if (event.shiftKey) {\n        const layerGroup = this.#stage.getActiveLayerGroup();\n        const viewController =\n          layerGroup.getActiveViewLayer().getViewController();\n        if (event.key === 'ArrowLeft') { // crtl-shift-arrow-left\n          if (viewController.moreThanOne(3)) {\n            viewController.decrementIndex(3);\n          }\n        } else if (event.key === 'ArrowUp') { // crtl-shift-arrow-up\n          if (layerGroup.canScroll()) {\n            viewController.incrementScrollIndex();\n          }\n        } else if (event.key === 'ArrowRight') { // crtl-shift-arrow-right\n          if (layerGroup.moreThanOne(3)) {\n            viewController.incrementIndex(3);\n          }\n        } else if (event.key === 'ArrowDown') { // crtl-shift-arrow-down\n          if (layerGroup.canScroll()) {\n            viewController.decrementScrollIndex();\n          }\n        }\n      } else if (event.key === 'y') { // crtl-y\n        this.#undoStack.redo();\n      } else if (event.key === 'z') { // crtl-z\n        this.#undoStack.undo();\n      } else if (event.key === ' ') { // crtl-space\n        for (let i = 0; i < this.#stage.getNumberOfLayerGroups(); ++i) {\n          this.#stage.getLayerGroup(i).setShowCrosshair(\n            !this.#stage.getLayerGroup(i).getShowCrosshair()\n          );\n        }\n      }\n    }\n  };\n\n  // Internal members shortcuts-----------------------------------------------\n\n  /**\n   * Reset the display.\n   */\n  resetDisplay() {\n    this.resetLayout();\n    this.initWLDisplay();\n  }\n\n  /**\n   * Reset the app zoom.\n   */\n  resetZoom() {\n    this.resetLayout();\n  }\n\n  /**\n   * Set the colour map of the active view of the active layer group.\n   *\n   * @param {string} name The colour map name.\n   * @deprecated Please use the ViewController equivalent directly instead.\n   */\n  setColourMap(name) {\n    const viewController =\n      this.#stage.getActiveLayerGroup()\n        .getActiveViewLayer().getViewController();\n    viewController.setColourMap(name);\n  }\n\n  /**\n   * Set the window/level preset of the active view of the active layer group.\n   *\n   * @param {string} preset The window/level preset.\n   * @deprecated Please use the ViewController equivalent directly instead.\n   */\n  setWindowLevelPreset(preset) {\n    const viewController =\n      this.#stage.getActiveLayerGroup()\n        .getActiveViewLayer().getViewController();\n    viewController.setWindowLevelPreset(preset);\n  }\n\n  /**\n   * Set the tool.\n   *\n   * @param {string} tool The tool.\n   */\n  setTool(tool) {\n    // bind tool to active layer\n    for (let i = 0; i < this.#stage.getNumberOfLayerGroups(); ++i) {\n      const layerGroup = this.#stage.getLayerGroup(i);\n      // draw or view layer\n      const isDrawTool = tool === 'Draw' ||\n        tool === 'Livewire' ||\n        tool === 'Floodfill';\n      let layer;\n      if (isDrawTool &&\n        typeof layerGroup.getActiveDrawLayer() !== 'undefined') {\n        layer = layerGroup.getActiveDrawLayer();\n      } else {\n        layer = layerGroup.getActiveViewLayer();\n      }\n      if (typeof layer !== 'undefined') {\n        this.#toolboxController.bindLayerGroup(layerGroup, layer);\n      }\n    }\n\n    // set toolbox tool\n    this.#toolboxController.setSelectedTool(tool);\n  }\n\n  /**\n   * Set the tool live features.\n   *\n   * @param {object} list The list of features.\n   */\n  setToolFeatures(list) {\n    this.#toolboxController.setToolFeatures(list);\n  }\n\n  /**\n   * Undo the last action.\n   *\n   * @fires UndoStack#undo\n   */\n  undo() {\n    this.#undoStack.undo();\n  }\n\n  /**\n   * Redo the last action.\n   *\n   * @fires UndoStack#redo\n   */\n  redo() {\n    this.#undoStack.redo();\n  }\n\n  /**\n   * Get the undo stack size.\n   *\n   * @returns {number} The size of the stack.\n   */\n  getStackSize() {\n    return this.#undoStack.getStackSize();\n  }\n\n  /**\n   * Get the current undo stack index.\n   *\n   * @returns {number} The stack index.\n   */\n  getCurrentStackIndex() {\n    return this.#undoStack.getCurrentStackIndex();\n  }\n\n  /**\n   * Get the overlay data for a data id.\n   *\n   * @param {string} dataId The data id.\n   * @returns {OverlayData|undefined} The overlay data.\n   */\n  getOverlayData(dataId) {\n    let data;\n    if (typeof this.#overlayDatas !== 'undefined') {\n      data = this.#overlayDatas[dataId];\n    }\n    return data;\n  }\n\n  /**\n   * Toggle overlay listeners.\n   *\n   * @param {string} dataId The data id.\n   */\n  toggleOverlayListeners(dataId) {\n    const data = this.getOverlayData(dataId);\n    if (typeof data !== 'undefined') {\n      if (data.isListening()) {\n        data.removeAppListeners();\n      } else {\n        data.addAppListeners();\n      }\n    }\n  }\n\n  /**\n   * Create new annotation data based on the data of\n   *   the active view layer.\n   *\n   * @param {string} refDataId The reference data id.\n   * @returns {DicomData} The new data.\n   */\n  createAnnotationData(refDataId) {\n    const refData = this.getData(refDataId);\n    const refMeta = refData.image.getMeta();\n\n    const data = new DicomData({});\n    data.annotationGroup = new AnnotationGroup();\n    data.annotationGroup.setMetaValue('Modality', 'SR');\n    data.annotationGroup.setMetaValue(\n      'PatientID', refMeta.PatientID);\n    data.annotationGroup.setMetaValue(\n      'StudyInstanceUID', refMeta.StudyInstanceUID);\n    data.annotationGroup.setMetaValue(\n      'ReferencedSeriesSequence', {\n        value: [{\n          SeriesInstanceUID: refMeta.SeriesInstanceUID\n        }]\n      });\n    return data;\n  }\n\n  /**\n   * Add new data and render it with a simple new data view config.\n   *\n   * @param {DicomData} data The data to add.\n   * @param {string} divId The div where to draw.\n   * @param {string} refDataId The reference data id.\n   */\n  addAndRenderAnnotationData(data, divId, refDataId) {\n    // add new data\n    const dataId = this.addData(data);\n    // add data view config based on reference data\n    const refDataViewConfigs = this.getViewConfigs(refDataId);\n    const refDataViewConfig = refDataViewConfigs.find(\n      element => element.divId === divId);\n    if (typeof refDataViewConfig === 'undefined') {\n      throw new Error('No reference data view config for draw');\n    }\n    const drawDataViewConfig = new ViewConfig(divId);\n    drawDataViewConfig.orientation = refDataViewConfig.orientation;\n    this.addDataViewConfig(dataId, drawDataViewConfig);\n    // render (will create draw layer)\n    this.render(dataId);\n  }\n\n  // Private Methods -----------------------------------------------------------\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Data load start callback.\n   *\n   * @param {object} event The load start event.\n   */\n  #onloadstart = (event) => {\n    // create overlay data\n    if (typeof this.#options.overlayConfig !== 'undefined') {\n      this.#overlayDatas[event.dataid] = new OverlayData(\n        this, event.dataid, this.#options.overlayConfig);\n    }\n    /**\n     * Load start event.\n     *\n     * @event App#loadstart\n     * @type {object}\n     * @property {string} type The event type: loadstart.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     */\n    event.type = 'loadstart';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load progress callback.\n   *\n   * @param {object} event The progress event.\n   */\n  #onloadprogress = (event) => {\n    /**\n     * Load progress event.\n     *\n     * @event App#loadprogress\n     * @type {object}\n     * @property {string} type The event type: loadprogress.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     * @property {number} loaded The loaded percentage.\n     * @property {number} total The total percentage.\n     */\n    event.type = 'loadprogress';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load callback.\n   *\n   * @param {object} event The load event.\n   */\n  #onloaditem = (event) => {\n    // check event\n    if (typeof event.data === 'undefined') {\n      logger.error('Missing loaditem event data.');\n    }\n    if (typeof event.loadtype === 'undefined') {\n      logger.error('Missing loaditem event load type.');\n    }\n\n    const isFirstLoadItem = event.isfirstitem;\n\n    let eventMetaData = null;\n    if (event.loadtype === 'image') {\n      if (isFirstLoadItem) {\n        this.#dataController.add(event.dataid, event.data);\n      } else {\n        this.#dataController.update(event.dataid, event.data);\n      }\n      eventMetaData = event.data.meta;\n    } else if (event.loadtype === 'state') {\n      this.applyJsonState(event.data, event.dataid);\n      eventMetaData = 'state';\n    }\n\n    /**\n     * Load item event: fired when a load item is successfull.\n     *\n     * @event App#loaditem\n     * @type {object}\n     * @property {string} type The event type: loaditem.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     * @property {object} data The loaded meta data.\n     */\n    this.#fireEvent({\n      type: 'loaditem',\n      data: eventMetaData,\n      source: event.source,\n      loadtype: event.loadtype,\n      dataid: event.dataid,\n      isfirstitem: event.isfirstitem,\n      warn: event.warn\n    });\n\n    // update overlay data if present\n    if (typeof this.#overlayDatas !== 'undefined' &&\n      typeof this.#overlayDatas[event.dataid] !== 'undefined') {\n      this.#overlayDatas[event.dataid].addItemMeta(eventMetaData);\n    }\n\n    // render if first and flag allows\n    if (event.loadtype === 'image' &&\n      this.getViewConfigs(event.dataid).length !== 0 &&\n      isFirstLoadItem && this.#options.viewOnFirstLoadItem) {\n      this.render(event.dataid);\n    }\n  };\n\n  /**\n   * Data load callback.\n   *\n   * @param {object} event The load event.\n   */\n  #onload = (event) => {\n    /**\n     * Load event: fired when a load finishes successfully.\n     *\n     * @event App#load\n     * @type {object}\n     * @property {string} type The event type: load.\n     * @property {string} loadType The load type: image or state.\n     */\n    event.type = 'load';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load end callback.\n   *\n   * @param {object} event The load end event.\n   */\n  #onloadend = (event) => {\n    /**\n     * Main load end event: fired when the load finishes,\n     *   successfully or not.\n     *\n     * @event App#loadend\n     * @type {object}\n     * @property {string} type The event type: loadend.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     */\n    event.type = 'loadend';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load error callback.\n   *\n   * @param {object} event The error event.\n   */\n  #onloaderror = (event) => {\n    /**\n     * Load error event.\n     *\n     * @event App#error\n     * @type {object}\n     * @property {string} type The event type: error.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     * @property {object} error The error.\n     * @property {object} target The event target.\n     */\n    if (typeof event.type === 'undefined') {\n      event.type = 'error';\n    }\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load abort callback.\n   *\n   * @param {object} event The abort event.\n   */\n  #onloadabort = (event) => {\n    /**\n     * Load abort event.\n     *\n     * @event App#abort\n     * @type {object}\n     * @property {string} type The event type: abort.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     */\n    if (typeof event.type === 'undefined') {\n      event.type = 'abort';\n    }\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Bind layer group events to app.\n   *\n   * @param {LayerGroup} group The layer group.\n   */\n  #bindLayerGroupToApp(group) {\n    // propagate layer group events\n    group.addEventListener('zoomchange', this.#fireEvent);\n    group.addEventListener('offsetchange', this.#fireEvent);\n    // propagate viewLayer events\n    group.addEventListener('renderstart', this.#fireEvent);\n    group.addEventListener('renderend', this.#fireEvent);\n    // propagate view events\n    for (let j = 0; j < viewEventNames.length; ++j) {\n      group.addEventListener(viewEventNames[j], this.#fireEvent);\n    }\n    // propagate drawLayer events\n    if (this.#toolboxController && this.#toolboxController.hasTool('Draw')) {\n      group.addEventListener('drawcreate', this.#fireEvent);\n      group.addEventListener('drawdelete', this.#fireEvent);\n    }\n    // updata data view config\n    group.addEventListener('wlchange', (event) => {\n      const layerDetails = getLayerDetailsFromLayerDivId(event.srclayerid);\n      const groupId = layerDetails.groupDivId;\n      const config = this.getViewConfig(event.dataid, groupId, true);\n      if (typeof config !== 'undefined') {\n        // reset previous values\n        config.windowCenter = undefined;\n        config.windowWidth = undefined;\n        config.wlPresetName = undefined;\n        // window width, center and name\n        if (event.value.length === 3) {\n          config.windowCenter = event.value[0];\n          config.windowWidth = event.value[1];\n          config.wlPresetName = event.value[2];\n        }\n      }\n    });\n    group.addEventListener('opacitychange', (event) => {\n      const layerDetails = getLayerDetailsFromLayerDivId(event.srclayerid);\n      const groupId = layerDetails.groupDivId;\n      const config = this.getViewConfig(event.dataid, groupId, true);\n      if (typeof config !== 'undefined') {\n        config.opacity = event.value[0];\n      }\n    });\n    group.addEventListener('colourmapchange', (event) => {\n      const layerDetails = getLayerDetailsFromLayerDivId(event.srclayerid);\n      const groupId = layerDetails.groupDivId;\n      const config = this.getViewConfig(event.dataid, groupId, true);\n      if (typeof config !== 'undefined') {\n        config.colourMap = event.value[0];\n      }\n    });\n  }\n\n  /**\n   * Add a view layer.\n   *\n   * @param {string} dataId The data id.\n   * @param {ViewConfig} viewConfig The data view config.\n   */\n  #addViewLayer(dataId, viewConfig) {\n    const data = this.#dataController.get(dataId);\n    if (!data) {\n      throw new Error('Cannot initialise layer with missing data, id: ' +\n        dataId);\n    }\n    const layerGroup = this.#stage.getLayerGroupByDivId(viewConfig.divId);\n    if (!layerGroup) {\n      throw new Error('Cannot initialise layer with missing group, id: ' +\n        viewConfig.divId);\n    }\n    const imageGeometry = data.image.getGeometry();\n\n    // un-bind\n    this.#stage.unbindLayerGroups();\n\n    // create and setup view\n    const viewFactory = new ViewFactory();\n    const view = viewFactory.create(data.meta, data.image);\n    const viewOrientation = getViewOrientation(\n      imageGeometry.getOrientation(),\n      getMatrixFromName(viewConfig.orientation)\n    );\n    view.setOrientation(viewOrientation);\n\n    // make pixel of value 0 transparent for segmentation\n    // (assuming RGB data)\n    if (data.image.getMeta().Modality === 'SEG') {\n      view.setAlphaFunction(function (value /*, index*/) {\n        if (value[0] === 0 &&\n          value[1] === 0 &&\n          value[2] === 0) {\n          return 0;\n        } else {\n          return 0xff;\n        }\n      });\n    }\n\n    // do we have more than one layer\n    // (the layer has not been added to the layer group yet)\n    const isBaseLayer = layerGroup.getNumberOfViewLayers() === 0;\n\n    // opacity\n    let opacity = 1;\n    if (typeof viewConfig.opacity !== 'undefined') {\n      opacity = viewConfig.opacity;\n    } else {\n      if (!isBaseLayer) {\n        opacity = 0.5;\n      }\n    }\n\n    // view layer\n    const viewLayer = layerGroup.addViewLayer();\n    viewLayer.setView(view, dataId);\n    const size2D = imageGeometry.getSize(viewOrientation).get2D();\n    const spacing2D = imageGeometry.getSpacing(viewOrientation).get2D();\n    viewLayer.initialise(size2D, spacing2D, opacity);\n\n    // view controller\n    const viewController = viewLayer.getViewController();\n    // window/level\n    if (typeof viewConfig.wlPresetName !== 'undefined') {\n      viewController.setWindowLevelPreset(viewConfig.wlPresetName);\n    } else if (typeof viewConfig.windowCenter !== 'undefined' &&\n      typeof viewConfig.windowWidth !== 'undefined') {\n      const wl = new WindowLevel(\n        viewConfig.windowCenter, viewConfig.windowWidth);\n      viewController.setWindowLevel(wl);\n    }\n    // colour map\n    if (typeof viewConfig.colourMap !== 'undefined') {\n      viewController.setColourMap(viewConfig.colourMap);\n    } else {\n      if (!isBaseLayer) {\n        if (data.image.getMeta().Modality === 'PT') {\n          viewController.setColourMap('hot');\n        } else {\n          viewController.setColourMap('rainbow');\n        }\n      }\n    }\n\n    // listen to image set\n    this.#dataController.addEventListener(\n      'dataimageset', viewLayer.onimageset);\n\n    // sync layers position\n    const value = [\n      viewController.getCurrentIndex().getValues(),\n      viewController.getCurrentPosition().getValues()\n    ];\n    layerGroup.updateLayersToPositionChange({\n      value: value,\n      srclayerid: viewLayer.getId()\n    });\n\n    // sync layer groups\n    this.#stage.fitToContainer();\n\n    // layer offset (done before scale)\n    viewLayer.setOffset(layerGroup.getOffset());\n\n    // get and apply flip flags\n    const flipFlags = this.#getViewFlipFlags(\n      imageGeometry.getOrientation(),\n      viewConfig.orientation);\n    this.#applyFlipFlags(flipFlags, viewLayer);\n\n    // layer scale (done after possible flip)\n    if (!isBaseLayer) {\n      // use zoom offset of base layer\n      const baseViewLayer = layerGroup.getBaseViewLayer();\n      viewLayer.initScale(\n        layerGroup.getScale(),\n        baseViewLayer.getAbsoluteZoomOffset()\n      );\n    } else {\n      viewLayer.setScale(layerGroup.getScale());\n    }\n\n    // bind\n    this.#stage.bindLayerGroups();\n    if (this.#toolboxController) {\n      this.#toolboxController.bindLayerGroup(layerGroup, viewLayer);\n    }\n\n    /**\n     * Add view layer event.\n     *\n     * @event Application#viewlayeradd\n     * @type {object}\n     * @property {string} type The event type.\n     */\n    this.#fireEvent({\n      type: 'viewlayeradd',\n      layerid: viewLayer.getId(),\n      layergroupid: layerGroup.getDivId(),\n      dataid: dataId\n    });\n\n    // initialise the toolbox for base\n    if (isBaseLayer) {\n      if (this.#toolboxController) {\n        this.#toolboxController.init();\n      }\n    }\n  }\n\n  /**\n   * Add a draw layer.\n   *\n   * @param {string} dataId The data id.\n   * @param {ViewConfig} viewConfig The data view config.\n   */\n  addDrawLayer(dataId, viewConfig) {\n    const layerGroup = this.#stage.getLayerGroupByDivId(viewConfig.divId);\n    if (!layerGroup) {\n      throw new Error('Cannot initialise layer with missing group, id: ' +\n        viewConfig.divId);\n    }\n\n    // reference is the data of the view layer with the\n    //   same StudyInstanceUID\n    const data = this.#dataController.get(dataId);\n    if (!data) {\n      throw new Error('Cannot initialise layer with missing data, id: ' +\n        dataId);\n    }\n    const refSeriesSeq =\n      data.annotationGroup.getMetaValue('ReferencedSeriesSequence');\n    const refSeriesInstanceUID = refSeriesSeq.value[0].SeriesInstanceUID;\n    const viewLayers = layerGroup.searchViewLayers({\n      SeriesInstanceUID: refSeriesInstanceUID\n    });\n    if (viewLayers.length === 0) {\n      console.warn(\n        'No loaded data that matches the measurement reference series UID');\n      return;\n    }\n    const refViewLayer = viewLayers[0];\n    const refDataId = refViewLayer.getDataId();\n\n    // un-bind\n    this.#stage.unbindLayerGroups();\n\n    // set annotation view controller (allows quantification)\n    const refViewController = refViewLayer.getViewController();\n    data.annotationGroup.setViewController(refViewController);\n\n    // reference data to use as base for layer properties\n    const refData = this.#dataController.get(refDataId);\n    if (!refData) {\n      throw new Error(\n        'Cannot initialise layer without reference data, id: ' +\n        refDataId);\n    }\n    const imageGeometry = refData.image.getGeometry();\n\n    const viewOrientation = getViewOrientation(\n      imageGeometry.getOrientation(),\n      getMatrixFromName(viewConfig.orientation)\n    );\n    const size2D = imageGeometry.getSize(viewOrientation).get2D();\n    const spacing2D = imageGeometry.getSpacing(viewOrientation).get2D();\n\n    const drawLayer = layerGroup.addDrawLayer();\n    drawLayer.initialise(size2D, spacing2D, refViewLayer.getId());\n\n    const planeHelper = new PlaneHelper(\n      imageGeometry,\n      viewOrientation\n    );\n    drawLayer.setPlaneHelper(planeHelper);\n\n    // sync layers position\n    const value = [\n      refViewController.getCurrentIndex().getValues(),\n      refViewController.getCurrentPosition().getValues()\n    ];\n    layerGroup.updateLayersToPositionChange({\n      value: value,\n      srclayerid: drawLayer.getId()\n    });\n\n    // sync layer groups\n    this.#stage.fitToContainer();\n\n    // layer offset (done before scale)\n    drawLayer.setOffset(layerGroup.getOffset());\n\n    // get and apply flip flags\n    const flipFlags = this.#getViewFlipFlags(\n      imageGeometry.getOrientation(),\n      viewConfig.orientation);\n    this.#applyFlipFlags(flipFlags, drawLayer);\n\n    // layer scale (done after possible flip)\n    // use zoom offset of ref layer\n    drawLayer.initScale(\n      layerGroup.getScale(),\n      refViewLayer.getAbsoluteZoomOffset()\n    );\n\n    // add possible existing data\n    drawLayer.setAnnotationGroup(\n      data.annotationGroup,\n      dataId,\n      this.addToUndoStack);\n\n    drawLayer.setCurrentPosition(\n      refViewController.getCurrentPosition(),\n      refViewController.getCurrentIndex()\n    );\n\n    // bind\n    this.#stage.bindLayerGroups();\n    if (this.#toolboxController) {\n      this.#toolboxController.bindLayerGroup(layerGroup, drawLayer);\n    }\n\n    /**\n     * Add draw layer event.\n     *\n     * @event Application#drawlayeradd\n     * @type {object}\n     * @property {string} type The event type.\n     */\n    this.#fireEvent({\n      type: 'drawlayeradd',\n      layerid: drawLayer.getId(),\n      layergroupid: layerGroup.getDivId(),\n      dataid: dataId\n    });\n  }\n\n  /**\n   * Get the view flip flags: offset (x, y) and scale (x, y, z) flags.\n   *\n   * @param {Matrix33} imageOrientation The image orientation.\n   * @param {string} viewConfigOrientation The view config orientation.\n   * @returns {object} Offset and scale flip flags.\n   */\n  #getViewFlipFlags(imageOrientation, viewConfigOrientation) {\n    // 'simple' orientation code (does not take into account angles)\n    const orientationCode =\n      getOrientationStringLPS(imageOrientation.asOneAndZeros());\n    if (typeof orientationCode === 'undefined') {\n      throw new Error('Unsupported undefined orientation code');\n    }\n\n    // view orientation flags\n    const isViewUndefined = typeof viewConfigOrientation === 'undefined';\n    const isViewAxial = !isViewUndefined &&\n      viewConfigOrientation === Orientation.Axial;\n    const isViewCoronal = !isViewUndefined &&\n      viewConfigOrientation === Orientation.Coronal;\n    const isViewSagittal = !isViewUndefined &&\n      viewConfigOrientation === Orientation.Sagittal;\n\n    // default flags\n    const flipOffset = {\n      x: false,\n      y: false\n    };\n    const flipScale = {\n      x: false,\n      y: false,\n      z: false\n    };\n\n    if (orientationCode === 'LPS') {\n      // axial\n      if (isViewCoronal || isViewSagittal) {\n        flipScale.z = true;\n        flipOffset.y = true;\n      }\n    } else if (orientationCode === 'LAI') {\n      // axial\n      if (isViewUndefined || isViewAxial) {\n        flipOffset.y = true;\n      } else if (isViewCoronal) {\n        flipScale.z = true;\n      } else if (isViewSagittal) {\n        flipScale.z = true;\n        flipOffset.x = true;\n      }\n    } else if (orientationCode === 'RPI') {\n      // axial\n      if (isViewUndefined || isViewAxial) {\n        flipOffset.x = true;\n      } else if (isViewCoronal) {\n        flipScale.z = true;\n        flipOffset.x = true;\n      } else if (isViewSagittal) {\n        flipScale.z = true;\n      }\n    } else if (orientationCode === 'RAS') {\n      // axial\n      flipOffset.x = true;\n      flipOffset.y = true;\n      if (isViewCoronal || isViewSagittal) {\n        flipScale.z = true;\n      }\n    } else if (orientationCode === 'LSA') {\n      // coronal\n      flipOffset.y = true;\n      if (isViewUndefined || isViewCoronal) {\n        flipScale.z = true;\n      } else if (isViewAxial) {\n        flipScale.y = true;\n      } else if (isViewSagittal) {\n        flipOffset.x = true;\n        flipScale.y = true;\n        flipScale.z = true;\n      }\n    // } else if (orientationCode === 'LIP') { // nothing to do\n    } else if (orientationCode === 'RSP') {\n      // coronal\n      if (isViewUndefined || isViewCoronal) {\n        flipOffset.x = true;\n        flipOffset.y = true;\n        flipScale.x = true;\n        flipScale.z = true;\n      } else if (isViewAxial) {\n        flipOffset.x = true;\n        flipScale.x = true;\n      } else if (isViewSagittal) {\n        flipOffset.y = true;\n        flipScale.z = true;\n      }\n    } else if (orientationCode === 'RIA') {\n      // coronal\n      flipOffset.x = true;\n      if (isViewUndefined || isViewCoronal) {\n        flipScale.x = true;\n      } else if (isViewAxial) {\n        flipOffset.y = true;\n        flipScale.x = true;\n        flipScale.y = true;\n      } else if (isViewSagittal) {\n        flipScale.y = true;\n      }\n    } else if (orientationCode === 'PSL') {\n      // sagittal\n      flipScale.z = true;\n      if (isViewUndefined || isViewSagittal) {\n        flipOffset.y = true;\n      } else if (isViewCoronal) {\n        flipOffset.y = true;\n      }\n    } else if (orientationCode === 'PIR') {\n      // sagittal\n      flipScale.z = true;\n      if (isViewAxial || isViewCoronal) {\n        flipOffset.x = true;\n      }\n    } else if (orientationCode === 'ASR') {\n      // sagittal\n      flipOffset.x = true;\n      flipOffset.y = true;\n      if (isViewUndefined || isViewSagittal) {\n        flipScale.z = true;\n      } else if (isViewCoronal) {\n        flipScale.z = true;\n      }\n    } else if (orientationCode === 'AIL') {\n      // sagittal\n      if (isViewUndefined || isViewSagittal) {\n        flipOffset.x = true;\n        flipScale.z = true;\n      } else if (isViewAxial) {\n        flipOffset.y = true;\n      } else if (isViewCoronal) {\n        flipScale.z = true;\n      }\n    } else {\n      logger.warn('Unsupported orientation code: ' +\n        orientationCode + ', display could be incorrect');\n    }\n\n    return {\n      scale: flipScale,\n      offset: flipOffset\n    };\n  }\n\n  #applyFlipFlags(flipFlags, layer) {\n    if (flipFlags.offset.x) {\n      layer.addFlipOffsetX();\n    }\n    if (flipFlags.offset.y) {\n      layer.addFlipOffsetY();\n    }\n    if (flipFlags.scale.x) {\n      layer.flipScaleX();\n    }\n    if (flipFlags.scale.y) {\n      layer.flipScaleY();\n    }\n    if (flipFlags.scale.z) {\n      layer.flipScaleZ();\n    }\n  }\n\n} // class App\n","import {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\nimport {MaskSegment} from '../dicom/dicomSegment';\n/* eslint-enable no-unused-vars */\n\n/**\n * Mask segment helper: helps handling the segments list,\n *   but does *NOT* update the associated mask (use special commands\n *   for that such as DeleteSegmentCommand, ChangeSegmentColourCommand...).\n */\nexport class MaskSegmentHelper {\n\n  /**\n   * The associated mask.\n   *\n   * @type {Image}\n   */\n  #mask;\n\n  /**\n   * The segments: array of segment description.\n   *\n   * @type {MaskSegment[]}\n   */\n  #segments;\n\n  /**\n   * @param {Image} mask The associated mask image.\n   */\n  constructor(mask) {\n    this.#mask = mask;\n    // check segments in meta\n    const meta = mask.getMeta();\n    if (typeof meta.custom === 'undefined') {\n      meta.custom = {};\n    }\n    if (typeof meta.custom.segments === 'undefined') {\n      meta.custom.segments = [];\n    }\n    this.#segments = meta.custom.segments;\n  }\n\n  /**\n   * Find the index of a segment in the segments list.\n   *\n   * @param {number} segmentNumber The number to find.\n   * @returns {number} The index in the segments list, -1 if not found.\n   */\n  #findSegmentIndex(segmentNumber) {\n    return this.#segments.findIndex(function (item) {\n      return item.number === segmentNumber;\n    });\n  }\n\n  /**\n   * Check if a segment is part of the segments list.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @returns {boolean} True if the segment is included.\n   */\n  hasSegment(segmentNumber) {\n    return this.#findSegmentIndex(segmentNumber) !== -1;\n  }\n\n  /**\n   * Get the number of segments of the segmentation.\n   *\n   * @returns {number} The number of segments.\n   */\n  getNumberOfSegments() {\n    return this.#segments.length;\n  }\n\n  /**\n   * Check if a segment is present in a mask image.\n   *\n   * @param {number[]} numbers Array of segment numbers.\n   * @returns {boolean[]} Array of boolean set to true\n   *   if the segment is present in the mask.\n   */\n  maskHasSegments(numbers) {\n    // create values using displayValue\n    const values = [];\n    const unknowns = [];\n    for (let i = 0; i < numbers.length; ++i) {\n      const segment = this.getSegment(numbers[i]);\n      if (typeof segment !== 'undefined') {\n        if (typeof segment.displayValue !== 'undefined') {\n          values.push(segment.displayValue);\n        } else {\n          values.push(segment.displayRGBValue);\n        }\n      } else {\n        logger.warn('Unknown segment in maskHasSegments: ' + numbers[i]);\n        unknowns.push(i);\n      }\n    }\n    const res = this.#mask.hasValues(values);\n    // insert unknowns as false in result\n    for (let j = 0; j < unknowns.length; ++j) {\n      res.splice(unknowns[j], 0, false);\n    }\n    return res;\n  }\n\n  /**\n   * Get a segment from the inner segment list.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @returns {MaskSegment|undefined} The segment or undefined if not found.\n   */\n  getSegment(segmentNumber) {\n    let segment;\n    const index = this.#findSegmentIndex(segmentNumber);\n    if (index !== -1) {\n      segment = this.#segments[index];\n    }\n    return segment;\n  }\n\n  /**\n   * Add a segment to the segments list.\n   *\n   * @param {MaskSegment} segment The segment to add.\n   */\n  addSegment(segment) {\n    const index = this.#findSegmentIndex(segment.number);\n    if (index === -1) {\n      this.#segments.push(segment);\n    } else {\n      logger.warn(\n        'Not adding segment, it is allready in the segments list: ' +\n          segment.number);\n    }\n  }\n\n  /**\n   * Remove a segment from the segments list.\n   *\n   * @param {number} segmentNumber The segment number.\n   */\n  removeSegment(segmentNumber) {\n    const index = this.#findSegmentIndex(segmentNumber);\n    if (index !== -1) {\n      this.#segments.splice(index, 1);\n    } else {\n      logger.warn(\n        'Cannot remove segment, it is not in the segments list: ' +\n          segmentNumber);\n    }\n  }\n\n  /**\n   * Update a segment of the segments list.\n   *\n   * @param {MaskSegment} segment The segment to update.\n   */\n  updateSegment(segment) {\n    const index = this.#findSegmentIndex(segment.number);\n    if (index !== -1) {\n      this.#segments[index] = segment;\n    } else {\n      logger.warn(\n        'Cannot update segment, it is not in the segments list: ' +\n          segment.number);\n    }\n  }\n\n} // class MaskSegmentHelper\n","import {MaskSegmentHelper} from './maskSegmentHelper';\nimport {BLACK} from '../utils/colour';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\nimport {MaskSegment} from '../dicom/dicomSegment';\n/* eslint-enable no-unused-vars */\n\n/**\n * Delete segment command.\n */\nexport class DeleteSegmentCommand {\n\n  /**\n   * The associated mask.\n   *\n   * @type {Image}\n   */\n  #mask;\n\n  /**\n   * The segment to remove.\n   *\n   * @type {MaskSegment}\n   */\n  #segment;\n\n  /**\n   * Flag to send creation events.\n   *\n   * @type {boolean}\n   */\n  #isSilent;\n\n  /**\n   * List of offsets.\n   *\n   * @type {number[]}\n   */\n  #offsets;\n\n  /**\n   * @param {Image} mask The mask image.\n   * @param {MaskSegment} segment The segment to remove.\n   * @param {boolean} [silent] Whether to send a creation event or not.\n   */\n  constructor(mask, segment, silent) {\n    this.#mask = mask;\n    this.#segment = segment;\n    this.#isSilent = (typeof silent === 'undefined') ? false : silent;\n    // list of offsets with the colour to delete\n    if (typeof segment.displayRGBValue !== 'undefined') {\n      this.#offsets = mask.getOffsets(segment.displayRGBValue);\n    } else {\n      this.#offsets = mask.getOffsets(segment.displayValue);\n    }\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Delete-segment';\n  }\n\n  /**\n   * Check if a command is valid and can be executed.\n   *\n   * @returns {boolean} True if the command is valid.\n   */\n  isValid() {\n    const segments = this.#mask.getMeta().custom.segments;\n    return segments.some(segmentItem =>\n      segmentItem.number === this.#segment.number\n    );\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires DeleteSegmentCommand#masksegmentdelete\n   */\n  execute() {\n    if (this.#offsets.length !== 0) {\n      // remove from image\n      if (typeof this.#segment.displayRGBValue !== 'undefined') {\n        this.#mask.setAtOffsets(this.#offsets, BLACK);\n      } else {\n        this.#mask.setAtOffsets(this.#offsets, 0);\n      }\n    }\n\n    // remove from segments\n    const segHelper = new MaskSegmentHelper(this.#mask);\n    segHelper.removeSegment(this.#segment.number);\n\n    // callback\n    if (!this.#isSilent) {\n      /**\n       * Segment delete event.\n       *\n       * @event DeleteSegmentCommand#masksegmentdelete\n       * @type {object}\n       * @property {number} segmentnumber The segment number.\n       */\n      this.onExecute({\n        type: 'masksegmentdelete',\n        segmentnumber: this.#segment.number\n      });\n    }\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires DeleteSegmentCommand#masksegmentredraw\n   */\n  undo() {\n    if (this.#offsets.length !== 0) {\n      // re-draw in image\n      if (typeof this.#segment.displayRGBValue !== 'undefined') {\n        this.#mask.setAtOffsets(this.#offsets, this.#segment.displayRGBValue);\n      } else {\n        this.#mask.setAtOffsets(this.#offsets, this.#segment.displayValue);\n      }\n    }\n    // add back to segments\n    const segHelper = new MaskSegmentHelper(this.#mask);\n    segHelper.addSegment(this.#segment);\n\n    // callback\n    /**\n     * Segment redraw event.\n     *\n     * @event DeleteSegmentCommand#masksegmentredraw\n     * @type {object}\n     * @property {number} segmentnumber The segment number.\n     */\n    this.onUndo({\n      type: 'masksegmentredraw',\n      segmentnumber: this.#segment.number\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // DeleteSegmentCommand class\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\nimport {MaskSegment} from '../dicom/dicomSegment';\nimport {RGB} from '../utils/colour';\n/* eslint-enable no-unused-vars */\n\n/**\n * Change segment colour command.\n */\nexport class ChangeSegmentColourCommand {\n\n  /**\n   * The associated mask.\n   *\n   * @type {Image}\n   */\n  #mask;\n\n  /**\n   * The segment to modify.\n   *\n   * @type {MaskSegment}\n   */\n  #segment;\n\n  /**\n   * The new segment colour.\n   *\n   * @type {RGB|number}\n   */\n  #newColour;\n\n  /**\n   * The previous segment colour.\n   *\n   * @type {RGB|number}\n   */\n  #previousColour;\n\n  /**\n   * Flag to send creation events.\n   *\n   * @type {boolean}\n   */\n  #isSilent;\n\n  /**\n   * List of offsets.\n   *\n   * @type {number[]}\n   */\n  #offsets;\n\n  /**\n   * @param {Image} mask The mask image.\n   * @param {MaskSegment} segment The segment to modify.\n   * @param {RGB|number} newColour The new segment colour.\n   * @param {boolean} [silent] Whether to send a creation event or not.\n   */\n  constructor(mask, segment, newColour, silent) {\n    this.#mask = mask;\n    this.#segment = segment;\n    this.#newColour = newColour;\n\n    this.#isSilent = (typeof silent === 'undefined') ? false : silent;\n    // list of offsets with the colour to delete\n    if (typeof segment.displayRGBValue !== 'undefined') {\n      this.#previousColour = segment.displayRGBValue;\n    } else {\n      this.#previousColour = segment.displayValue;\n    }\n    this.#offsets = mask.getOffsets(this.#previousColour);\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Change-segment-colour';\n  }\n\n  /**\n   * Check if a command is valid and can be executed.\n   *\n   * @returns {boolean} True if the command is valid.\n   */\n  isValid() {\n    return this.#offsets.length !== 0;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires ChangeSegmentColourCommand#changemasksegmentcolour\n   */\n  execute() {\n    // remove\n    this.#mask.setAtOffsets(this.#offsets, this.#newColour);\n    // update segment property\n    if (typeof this.#newColour === 'number') {\n      this.#segment.displayValue = this.#newColour;\n    } else {\n      this.#segment.displayRGBValue = this.#newColour;\n    }\n\n    // callback\n    if (!this.#isSilent) {\n      /**\n       * Segment delete event.\n       *\n       * @event ChangeSegmentColourCommand#changemasksegmentcolour\n       * @type {object}\n       * @property {number} segmentnumber The segment number.\n       */\n      this.onExecute({\n        type: 'changemasksegmentcolour',\n        segmentnumber: this.#segment.number,\n        value: [this.#newColour]\n      });\n    }\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires ChangeSegmentColourCommand#changemasksegmentcolour\n   */\n  undo() {\n    // re-draw\n    this.#mask.setAtOffsets(this.#offsets, this.#previousColour);\n    // update segment property\n    if (typeof this.#previousColour === 'number') {\n      this.#segment.displayValue = this.#previousColour;\n    } else {\n      this.#segment.displayRGBValue = this.#previousColour;\n    }\n\n    // callback\n    /**\n     * Segment redraw event.\n     *\n     * @event ChangeSegmentColourCommand#changemasksegmentcolour\n     * @type {object}\n     * @property {number} segmentnumber The segment number.\n     */\n    this.onUndo({\n      type: 'changemasksegmentcolour',\n      segmentnumber: this.#segment.number,\n      value: [this.#previousColour]\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // ChangeSegmentColourCommand class\n","import {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {MaskSegment} from '../dicom/dicomSegment';\n/* eslint-enable no-unused-vars */\n\n/**\n * Mask segment view helper: handles hidden segments.\n */\nexport class MaskSegmentViewHelper {\n\n  /**\n   * List of hidden segments.\n   *\n   * @type {MaskSegment[]}\n   */\n  #hiddenSegments = [];\n\n  #isMonochrome;\n\n  /**\n   * Get the index of a segment in the hidden list.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @returns {number} The index in the array, -1 if not found.\n   */\n  #findHiddenIndex(segmentNumber) {\n    return this.#hiddenSegments.findIndex(function (item) {\n      return item.number === segmentNumber;\n    });\n  }\n\n  /**\n   * Check if a segment is in the hidden list.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @returns {boolean} True if the segment is in the list.\n   */\n  isHidden(segmentNumber) {\n    return this.#findHiddenIndex(segmentNumber) !== -1;\n  }\n\n  /**\n   * Add a segment to the hidden list.\n   *\n   * @param {MaskSegment} segment The segment to add.\n   */\n  addToHidden(segment) {\n    if (!this.isHidden(segment.number)) {\n      this.#hiddenSegments.push(segment);\n      // base flag on latest added\n      this.#isMonochrome = typeof segment.displayValue !== 'undefined';\n    } else {\n      logger.warn(\n        'Not hidding segment, it is allready in the hidden list: ' +\n          segment.number);\n    }\n  }\n\n  /**\n   * Remove a segment from the hidden list.\n   *\n   * @param {number} segmentNumber The segment number.\n   */\n  removeFromHidden(segmentNumber) {\n    const index = this.#findHiddenIndex(segmentNumber);\n    if (index !== -1) {\n      this.#hiddenSegments.splice(index, 1);\n    } else {\n      logger.warn(\n        'Cannot remove segment, it is not in the hidden list: ' +\n          segmentNumber);\n    }\n  }\n\n  /**\n   * @callback alphaFn\n   * @param {number[]|number} value The pixel value.\n   * @param {number} index The values' index.\n   * @returns {number} The opacity of the input value.\n   */\n\n  /**\n   * Get the alpha function to apply hidden colors.\n   *\n   * @returns {alphaFn} The corresponding alpha function.\n   */\n  getAlphaFunc() {\n    // get colours\n    const hiddenColours = [];\n    if (this.#isMonochrome) {\n      hiddenColours[0] = 0;\n    } else {\n      hiddenColours[0] = {r: 0, g: 0, b: 0};\n    }\n    for (const segment of this.#hiddenSegments) {\n      if (this.#isMonochrome) {\n        hiddenColours.push(segment.displayValue);\n      } else {\n        hiddenColours.push(segment.displayRGBValue);\n      }\n    }\n\n    // create alpha function\n    let resultFn;\n    if (this.#isMonochrome) {\n      resultFn = function (value/*, index*/) {\n        for (let i = 0; i < hiddenColours.length; ++i) {\n          if (value === hiddenColours[i]) {\n            return 0;\n          }\n        }\n        // default\n        return 255;\n      };\n    } else {\n      resultFn = function (value/*, index*/) {\n        for (let i = 0; i < hiddenColours.length; ++i) {\n          if (value[0] === hiddenColours[i].r &&\n            value[1] === hiddenColours[i].g &&\n            value[2] === hiddenColours[i].b) {\n            return 0;\n          }\n        }\n        // default\n        return 255;\n      };\n    }\n    return resultFn;\n  }\n}","/**\n * Mutable 2D scalar ({x,y}).\n */\nexport class Scalar2D {\n  /**\n   * X value.\n   *\n   * @type {number}\n   */\n  x;\n\n  /**\n   * Y value.\n   *\n   * @type {number}\n   */\n  y;\n}\n\n/**\n * Mutable 3D scalar ({x,y,z}).\n */\nexport class Scalar3D {\n  /**\n   * X value.\n   *\n   * @type {number}\n   */\n  x;\n\n  /**\n   * Y value.\n   *\n   * @type {number}\n   */\n  y;\n\n  /**\n   * Z value.\n   *\n   * @type {number}\n   */\n  z;\n}"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__944__","__WEBPACK_EXTERNAL_MODULE__324__","__WEBPACK_EXTERNAL_MODULE__654__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","Index","constructor","values","Error","length","every","val","isNaN","i","toString","getValues","slice","canCompare","rhs","equals","leni","compare","diffDims","push","add","getWithNew2D","j","l","lenl","ModalityLut","rsi","bitsStored","isID","Math","pow","Float32Array","apply","getRSI","getLength","getValue","offset","logger","levels","TRACE","DEBUG","INFO","WARN","ERROR","level","trace","msg","console","debug","info","warn","error","WindowLevel","center","width","defaultPresets","CT","mediastinum","lung","bone","brain","head","VoiLut","wl","getWindowLevel","c","setSignedOffset","WindowLut","modalityLut","isSigned","isDiscrete","size","getVoiLut","getModalityLut","setVoiLut","lut","getSlope","Uint8ClampedArray","floor","buildLut","func","id","invId","lut_range_max","ColourMap","red","green","blue","luts","plain","invPlain","rainbow","hot","third","hot_iron","pet","hot_metal_blue","pet_20step","RGB","g","b","BLACK","isEqualRgb","c1","c2","labToUintLab","triplet","d65","x","y","z","srgbToCielab","labFunc","res","illuminant","fy","ciexyzToCielab","invGammaFunc","rl","gl","bl","srgbToCiexyz","colourNameToHex","name","dict","Yellow","Red","White","Green","Blue","Lime","Fuchsia","Black","Vector3D","getX","getY","getZ","norm","sqrt","crossProduct","vector3D","dotProduct","isCodirectional","Number","EPSILON","REAL_WORLD_EPSILON","isSimilar","tol","abs","Matrix33","row","col","getInverse","m","m00","m01","m02","m10","m11","m12","m20","m21","m22","a1212","a2012","a0112","det","getMatrixInverse","p","str","multiply","tmp","k","getAbs","multiplyArray3D","array3D","multiplyVector3D","multiplyPoint3D","point3D","Point3D","multiplyIndex3D","index3D","getRowAbsMax","absMax","max","index","indexOf","getColAbsMax","asOneAndZeros","sign","getThirdColMajorDirection","getIdentityMat33","isIdentityMat33","mat33","Point2D","getCentroid","getDistance","point2D","dx","dy","dz","getClosest","pointList","minIndex","minDist","dist","minus","Point","get3D","values0","values1","mergeWith3D","i18n","t","props","split","mm","cm2","degree","startsWith","search","rawPos","pos","substring","endsWith","getFlags","inputStr","flags","regex","match","exec","getFileExtension","filePath","ext","pathSplit","toLowerCase","pop","test","includes","stringToUint8Array","arr","Uint8Array","charCodeAt","precisionRound","number","precision","factor","delta","round","toStringId","dims","arraySortEquals","arr0","arr1","arrayEquals","sort","element","uint8ArrayToString","String","fromCharCode","findInArraySubset","callbackFn","start","end","getFindArrayInArrayCallback","buildMultipart","parts","boundary","lineBreak","partsSize","headers","headerStr","partKeys","keys","header","byteLength","data","trailer","buffer","set","dictionary","addTagsToDictionary","group","tags","tagGroups","vr32bitVL","OB","OD","OF","OL","OV","OW","SQ","SV","UC","UN","UR","UT","UV","ox","is32bitVLVR","vr","vrCharSetString","SH","LO","ST","LT","PN","isCharSetStringVR","vrTypes","AE","AS","AT","CS","DA","DS","DT","FL","FD","IS","SL","SS","TM","UI","UL","US","transferSyntaxes","transferSyntaxKeywords","Tag","getGroup","getElement","getKey","getNameFromDictionary","getGroupName","isWithVR","isPrivate","parseInt","getVrFromDictionary","tagCompareFunction","getTagFromKey","getItemTag","isItemTag","tag","isItemDelimitationItemTag","isSequenceDelimitationItemTag","getPixelDataTag","isPixelDataTag","getTagFromDictionary","tagName","keys0","keys1","foundTag","k0","lenK0","k1","lenK1","DataElement","vl","undefinedLength","startOffset","endOffset","items","flipArrayEndianness","array","blen","u8","byteOffset","bpe","BYTES_PER_ELEMENT","DataReader","Int8Array","Int16Array","isNativeLittleEndian","isLittleEndian","DataView","readUint16","getUint16","readInt16","getInt16","readUint32","getUint32","readBigUint64","getBigUint64","readInt32","getInt32","readBigInt64","getBigInt64","readFloat32","getFloat32","readFloat64","getFloat64","readBinaryArray","bitArray","byteArrayLength","bitNumber","bitIndex","readUint8Array","readInt8Array","readUint16Array","Uint16Array","arraySize","readInt16Array","readUint32Array","Uint32Array","readUint64Array","BigUint64Array","readInt32Array","Int32Array","readInt64Array","BigInt64Array","readFloat32Array","readFloat64Array","Float64Array","readHex","toUpperCase","getDwvVersion","hasDicomPrefix","reduce","previous","current","ZWS","DefaultTextDecoder","decode","result","getReverseOrientation","ori","rlabels","L","R","A","P","H","F","rori","isImplicitTransferSyntax","syntax","isBigEndianTransferSyntax","isJpegBaselineTransferSyntax","isJpegLosslessTransferSyntax","isJpeg2000TransferSyntax","isRleTransferSyntax","getTypedArray","bitsAllocated","pixelRepresentation","RangeError","powerOf2","log","getDataElementPrefixByteSize","isImplicit","TagKeys","DicomParser","getDefaultCharacterSet","setDefaultCharacterSet","characterSet","setDecoderCharacterSet","TextDecoder","getDicomElements","reader","implicit","itemData","item","isSeqDelim","isItemDelim","offsetTableVl","readTagRes","is32bitVL","concat","isKnownVR","pixItemData","sqEndOffset","vrType","Array","from","stream","lastIndex","trim","cleanString","raw","stri","stri1","sqBitsAllocated","sqPixelRepresentation","dataElement","subElement","elements","parse","metaReader","dataReader","magicword","metaEnd","tsElement","firstDataElement","oEightGroupLittleEndian","vr0","vr1","guessTransferSyntax","isReadSupportedTransferSyntax","getTransferSyntaxName","charSetTerm","label","getUtfLabel","numberOfFrames","pixItems","nItemPerFrame","newPixItems","f","newBuffer","fragOffset","ListenerHandler","type","callback","remove","nFound","splice","fireEvent","event","stack","range","dataAccessor","maxIter","increment","blockMaxIter","blockIncrement","reverse1","reverse2","nextIndex","finalBlockIncrement","mainCount","blockCount","next","done","getIteratorValues","iterator","ival","getSliceIterator","image","position","isRescaled","viewOrientation","getGeometry","getSize","dirMax2Index","posValues","posStart","map","indexToOffset","getRescaledValueAtOffset","getValueAtOffset","ncols","nrows","nslices","sliceSize","getDimSize","ncomp","getNumberOfComponents","isPlanar","getPlanarConfiguration","getRange","iters","r0","r1","r2","range3d","rangeObj","dirMax0","dirMax2","simpleRange","componentIncrement","nextIndex1","nextIndex2","simpleRange3d","colourRange","colours","nextColourIndex","colour","RescaleSlopeAndIntercept","slope","intercept","getIntercept","Size","moreThanOne","dimension","canScroll3D","canScroll","getTotalSize","isInBounds","dirs","offsetToIndex","off","dimSize","get2D","Statistics","min","mean","stdDev","median","p25","p75","getStats","includesFullStatsFlags","stats","getBasicStats","getPercentile","getFullStats","sum","sumSqr","variance","ratio","i0","v0","guid","random","NumberRange","Spacing","Geometry","origin","spacing","orientation","time","getInitialTime","getCurrentTotalNumberOfSlices","count","hasSlicesAtTime","getCurrentNumberOfSlicesBeforeTime","getOrigin","getOrigins","includesOrigin","getOrientedArray3D","geoSliceSpacing","origins","spacings","origin1","origin2","sliceSpacing","getSliceGeometrySpacing","getSpacing","orientedValues","getRealSpacing","getOrientation","getSliceIndex","point","localOrigins","closestOriginIndex","closestOrigin","pointDir","appendOrigin","equalToOrigin","find","appendFrame","sizeValues","spacingValues","isIndexInBounds","worldToIndex","indexToWorld","orientedPoint3D","pointToWorld","worldToPoint","getDeOrientedArray3D","padZeroTwoDigit","getDate","daValue","monthBeginIndex","dayBeginIndex","year","monthIndex","day","getTime","tmValue","tmHours","tmMinutes","tmSeconds","tmFracSecondsStr","hours","minutes","seconds","milliseconds","dateToDateObj","date","getFullYear","getMonth","dateToTimeObj","getHours","getMinutes","getSeconds","getDicomDate","dateObj","getDicomTime","getCoronalMat33","Orientation","Axial","Coronal","Sagittal","getMatrixFromName","matrix","getOrientationStringLPS","v1","v2","getVectorStringLPS","vector","orientationX","orientationY","orientationZ","threshold","getOrientationName","cosines","orientMatrix","getOrientationFromCosines","code","orientStr","getLPSGroup","orientationMatrix","rowCosines","colCosines","normal","getViewOrientation","imageOrientation","targetOrientation","getImage2DSize","rows","columns","getSpacingFromMeasure","dataElements","pixelSpacing","parseFloat","checkTag","warning","TagValueExtractor","_elements","ImageFactory","getWarning","checkElements","modality","suvFactor","patWeight","patWeightEl","weight","decayedDose","seriesDateObj","totalDose","halfLife","radioStart","radioInfoSq","totalDoseStr","totalDoseEl","dose","halfLifeStr","halfLifeEl","hl","radioStartDateTimeEl","radioStartDateObj","radioStartTimeObj","radioStartDateTime","dtValue","dateDataElement","dtDate","timeDataElement","getDateTime","Date","seriesTimeObj","scanStart","acqDateEl","acqTimeEl","acqDateObj","acqTimeObj","acqDate","frameRefTime","frameRefTimeElStr","frameRefTimeEl","actualFrameDuration","actualFrameDurationElStr","actualFrameDurationEl","decayConstant","decayDuringFrame","offsetSeconds","exp","decayTime","getDecayedDose","getSuvFactor","create","pixelBuffer","numberOfFiles","size2D","numberOfFramesEl","rowSpacing","columnSpacing","getPixelSpacing","jpeg2000","jpegBase","jpegLoss","imagePositionPatient","slicePosition","imageOrientationPatient","getOrientationMatrix","geometry","sopInstanceUid","siu","samplesPerPixel","spp","bufferSize","Image","photometricInterpretation","photo","setPhotometricInterpretation","planarConfiguration","setPlanarConfiguration","rescaleSlope","rescaleIntercept","meta","Modality","isPetWithSuv","intensityFactor","setRescaleSlopeAndIntercept","safeGet","TransferSyntaxUID","MediaStorageSOPClassUID","SOPClassUID","ImageType","SamplesPerPixel","PhotometricInterpretation","PixelRepresentation","BitsAllocated","BitsStored","HighBit","StudyDate","StudyTime","StudyInstanceUID","StudyID","SeriesInstanceUID","SeriesNumber","ReferringPhysicianName","PatientName","PatientID","PatientBirthDate","PatientSex","Manufacturer","ManufacturerModelName","DeviceSerialNumber","SoftwareVersions","ImageOrientationPatient","FrameOfReferenceUID","IsSigned","pixelUnit","unit","getPixelUnit","windowPresets","windowCenter","windowWidth","windowCWExplanation","getPhotometricInterpretation","redLutElement","greenLutElement","blueLutElement","redLut","greenLut","blueLut","descriptor","doScale","descSize","vlSize","scaleTo8","clone","recommendedDisplayFrameRate","RecommendedDisplayFrameRate","setMeta","DataWriter","writeUint8","setUint8","writeInt8","setInt8","writeUint16","setUint16","writeInt16","setInt16","writeUint32","setUint32","writeUint64","setBigUint64","writeInt32","setInt32","writeInt64","setBigInt64","writeFloat32","setFloat32","writeFloat64","setFloat64","writeHex","writeBinaryArray","byte","len","writeUint8Array","writeInt8Array","writeUint16Array","writeInt16Array","writeUint32Array","writeUint64Array","writeInt32Array","writeInt64Array","writeFloat32Array","writeFloat64Array","_uidCount","WriterRule","action","writerActions","copy","clear","replace","getUID","prefix","getDwvUIDPrefix","uid","datePart","toISOString","countPart","nonTagLength","tagNumber","isEven","isStringVr","uint8ArrayPush","newArr","DefaultTextEncoder","encode","DicomWriter","default","setUseUnVrForPrivateSq","flag","setFixUnknownVR","setRules","rules","addMissingTags","rule","tagKey","isKey","useSpecialTextEncoder","TextEncoder","getElementToWrite","groupName","writer","itemTag","subItem","itemElement","itemDelimElement","hexString","hexString1","hexString2","atValue","diff","message","finalValue","initialArray","initialArrayLength","arrayLength","flattenendArrayLength","flattenedArray","indexFlattenedArray","flattenArrayOfTypedArrays","isTagWithVR","undefinedLengthSequence","undefinedLengthItem","seqDelimElement","getBuffer","isBigEndian","oldscs","totalSize","localSize","metaElements","rawElements","metaLength","fmiglTag","fmivTag","icUIDTag","ivnTag","missingTags","originalElement","checkAndFixUnknownVR","fmiv","getDataElement","fmivSize","icUID","icUIDSize","icUIDValue","ivn","ivnSize","ivnValue","elemSortFunc","fmigl","fmiglSize","ArrayBuffer","metaWriter","dataWriter","lenj","metaOffset","lenk","newItems","oldItemElements","newItemElements","subSize","itemKeys","itemKey","padStr","pad","getVrPad","join","padOBValue","isTypedArrayVr","isArray","itemPrefixSize","getBpeForVrType","dictVr","getUint8ToVrValue","getElementsFromJSONTags","simpleTags","simpleTag","CodeValue","CodingSchemeDesignator","CodeMeaning","LongCodeValue","URNCodeValue","DicomCode","meaning","longValue","urnValue","schemeDesignator","isEqualCode","code1","code2","getCode","getDicomCodeItem","DcmCodes","SctCodes","UcumCodes","deg","getDicomCode","scheme","getMeasurementGroupCode","getReferenceGeometryCode","getSourceImageCode","getTrackingIdentifierCode","getShortLabelCode","getReferencePointsCode","getColourCode","QuantificationName2DictItem","angle","surface","height","radius","stddev","getQuantificationName","propKey","QuantificationUnit2UcumKey","HU","MGML","ED","PCT","CNTS","NONE","CM2","CM2ML","PCNT","CPS","BQML","MGMINML","UMOLMINML","MLMING","MLG","UMOLML","PROPCNTS","PROPCPS","MLMINML","MLML","GML","SUV","getQuantificationUnit","ucumKey","MaskSegment","algorithmType","algorithmName","displayValue","displayRGBValue","propertyTypeCode","propertyCategoryCode","trackingUid","trackingId","getSegment","segment","cielabElement","rgb","gammaFunc","ciexyzToSrgb","invLabFunc","l0","cielabToCiexyz","cielabToSrgb","getDicomSegmentItem","algoType","segmentItem","SegmentNumber","SegmentLabel","SegmentAlgorithmType","SegmentAlgorithmName","cieLab","RecommendedDisplayCIELabValue","RecommendedDisplayGrayscaleValue","SegmentedPropertyCategoryCodeSequence","SegmentedPropertyTypeCodeSequence","TrackingID","TrackingUID","DicomSegmentFrameInfo","dimIndex","imagePosPat","derivationImages","refSegmentNumber","getSegmentFrameInfo","derivationImageSq","sourceImages","sourceImageSq","sourceImage","referencedSOPClassUID","referencedSOPInstanceUID","segmentIdSq","frameInfo","framePlaneOrientationSeq","frameImageOrientation","framePixelMeasuresSeq","frameSpacing","getDicomSegmentFrameInfoItem","FrameContentSequence","DimensionIndexValues","PlanePositionSequence","ImagePositionPatient","SegmentIdentificationSequence","ReferencedSegmentNumber","sourceImgPurposeOfReferenceCode","segDerivationCode","derivationImageItems","derivationImage","PurposeOfReferenceCodeSequence","ReferencedSOPClassUID","ReferencedSOPInstanceUID","DerivationCodeSequence","SourceImageSequence","DerivationImageSequence","equalPosPat","pos1","pos2","JSON","stringify","tagDefinition","tagValue","enum","createRoiSliceBuffers","segments","sliceOffset","numberOfComponents","getPixelValue","equalValues","inputOffset","buffers","pixelValue","number2","RequiredDicomSegTags","getDefaultDicomSegJson","reqTag","MaskFactory","_dicomElements","frames","framesElem","orgSq","orgUID","indices","indexSqElem","indexSq","indexPointer","indexOrg","DimensionOrganizationUID","DimensionIndexPointer","DimensionDescriptionLabel","organizations","getDimensionOrganization","segSequence","storeAsRGB","sharedFunctionalGroupsSeq","funcGroup0","planeOrientationSeq","pixelMeasuresSeq","includesPosPat","some","arrVal","findIndexPosPat","findIndex","perFrameFuncGroupSequence","frameInfos","framePosPats","ii","invOrientation","p1","p2","getComparePosPat","point3DFromArray","frameOrigins","tmpGeometry","isAboveEpsilon","posPats","sliceIndex","frameOrigin","distPrevious","numberOfSlices","uids","getFindSegmentFunc","mul","fill","frameOffset","frameSegment","SeriesDate","SeriesTime","DimensionOrganizationSequence","DimensionIndexSequence","custom","SOPInstanceUID","frameOfReferenceUID","lossyImageCompression","LossyImageCompression","toDicom","extraTags","getMeta","Rows","Columns","now","ContentDate","ContentTime","segmentItems","SegmentSequence","SharedFunctionalGroupsSequence","PlaneOrientationSequence","PixelMeasuresSequence","SpacingBetweenSlices","PixelSpacing","roiBuffers","key0","createRoiBuffers","finalBuffers","referencedSOPs","number40","number4","key1","posPat","posPatArray","sourceIndex","getImageUid","NumberOfFrames","frameInfosTag","PerFrameFunctionalGroupsSequence","refSeriesTag","ReferencedInstanceSequence","ReferencedSeriesSequence","tags1","tags2","keys2","tagName2","mergeTags","dicomElements","pixVl","de","createImage","createMaskImage","imageUids","getSecondaryOffset","getOriginForImageUid","uidIndex","includesImageUid","containsImageUids","itemArr1","arrayContains","canQuantify","canWindowLevel","isMonochrome","nFiles","getRescaleSlopeAndIntercept","isConstantRSI","inRsi","isIdentityRSI","interp","config","getOffsets","bufferValue","offsets","equal","hasValues","finalValues","equalFunc","getEqualCallback","valuesToFind","indicesToRemove","v","clonedBuffer","tmpBuffer","appendSlice","rhsSize","rhsRange","getDataRange","rhsResRange","getRescaledDataRange","resRange","timeId","isNewFrame","volumeGeometry","sliceGeometry","fullBufferSize","fullSliceIndex","indexOffset","maxOffset","subarray","numberOfImages","rhsPresets","pkey","rhsPreset","windowPreset","perslice","appendFrameBuffer","frameBuffer","frameIndex","frameSize","calculateDataRange","calculateRescaledDataRange","getHistogram","calculateHistogram","dataRange","rescaledDataRange","histogram","addEventListener","removeEventListener","setAtOffsets","setAtOffsetsAndGetOriginals","offsetsLists","originalColoursLists","previousColour","originalColours","currentColour","setAtOffsetsWithIterator","getValueAtIndex","getRescaledValue","getRescaledValueAtIndex","resmin","resmax","rmin","rmax","rvalue","histo","convolute2D","weights","newImage","imgSize","dimOffset","convoluteBuffer","componentOffset","wOff","wOff00","wOff0x","wOff0n","wOffx0","wOffxn","wOffn0","wOffnx","wOffnn","pixelOffset","newValue","wOffFinal","wi","transform","operator","compose","ViewFactory","view","View","setColourMap","minmax","preset","setWindowPresets","init","viewEventNames","createView","getCurrentIndex","setCurrentIndex","getImage","setImage","inImage","setOrientation","setInitialIndex","getPlaybackMilliseconds","_value","_index","getAlphaFunction","setAlphaFunction","currentIndex","sliceWl","setWindowLevel","setWindowLevelPresetById","voiLut","voiLutWl","getWindowPresets","getWindowPresetsNames","presets","addWindowPresets","getCurrentWindowPresetName","getColourMap","getCurrentPosition","getCurrentImageUid","isPositionInBounds","getScrollIndex","originIndex","setCurrentPosition","silent","valid","minLen","maxLen","posEvent","imageUid","pixValue","isNewWl","isNewName","manual","wc","ww","skipGenerate","setWindowLevelPreset","getWindowLevelMinMax","setWindowLevelMinMax","generateImageData","photoInterpretation","alphaFunc","windowLut","colourMap","pxValue","generateImageDataMonochrome","is16BitsStored","to8","generateImageDataPaletteColor","generateImageDataRgb","cb","cr","generateImageDataYbrFull","isAquisitionOrientation","PlaneHelper","imageGeometry","getTargetOrientation","getOffset3DFromPlaneOffset","offset2D","planeOffset","getTargetDeOrientedVector3D","getPlaneOffsetFromOffset3D","offset3D","getTargetOrientedVector3D","planeVector","getTargetDeOrientedPoint3D","planePoint","getImageOrientedVector3D","getImageOrientedPoint3D","getImageDeOrientedVector3D","getImageDeOrientedPoint3D","getPositionFromPlanePoint","getPlanePoints","getTargetOrientedPositiveXYZ","getNativeScrollIndex","ViewController","getPlaneHelper","isMask","initialise","getModality","getWindowLevelPresetsNames","addWindowLevelPresets","isPlaying","getCurrentOrientedIndex","getCurrentScrollIndexValue","getCurrentScrollPosition","scrollIndex","img","get2DSpacing","getRescaledImageValue","sliceValues","sliceOrigin","getImageRegionValues","rescaled","iter","rangeNumberOfColumns","regionSize","regionOffset","regionElementCount","rangeRegion","getRegionSliceIterator","getImageVariableRegionValues","regions","offsetRegions","region","regionIndex","regionCount","rangeRegions","getVariableRegionSliceIterator","canQuantifyImage","getImageSize","dim","getImageWorldSize","getImageRescaledDataRange","equalImageMeta","imageMeta","metaKeys","metaKey","getPlanePositionFromPosition","getIndexFromPosition","getPlanePositionFromPlanePoint","incr","getIncrementPosition","getDecrementPosition","getIncrementScrollPosition","getDecrementScrollPosition","incrementIndex","decrementIndex","decrementScrollIndex","incrementScrollIndex","play","window","setInterval","canDoMore","stop","clearInterval","setViewAlphaFunction","bindImageAndLayer","viewLayer","onimagecontentchange","onimagegeometrychange","unbindImageAndLayer","ScrollSum","getSum","wheelDeltaY","deltaY","getSpinY","isTick","ScrollWheel","app","wheel","up","preventDefault","layerDetails","getLayerDetailsFromEvent","layerGroup","getLayerGroupByDivId","groupDivId","viewController","getActiveViewLayer","getViewController","newPosition","Line","begin","getBegin","getEnd","getDeltaX","getDeltaY","getWorldLength","spacing2D","wlen","dxs","dys","getMidpoint","getInclination","atan2","PI","quantify","quant","getAngle","line0","line1","dx0","dy0","dx1","dy1","dot","areOrthogonal","getPerpendicularLine","line","perpSlope","getLineFromEquation","getPerpendicularLineAtDistance","distance","lineFromEq","startPoint","minX","maxX","minY","maxY","isPointInLineRange","beginX","beginY","endX","endY","sx2","sy2","AnnotationGroup","list","getList","isEditable","setEditable","getColour","setColour","annotation","update","propKeys","setViewController","updateQuantification","hasMeta","getMetaValue","setMetaValue","DrawController","getAnnotation","getAnnotationGroup","isAnnotationGroupEditable","setAnnotationGroupEditable","addAnnotation","updateAnnotation","removeAnnotation","removeAnnotationWithCommand","exeCallback","command","RemoveAnnotationCommand","execute","updateAnnotationWithCommand","originalProps","newProps","UpdateAnnotationCommand","removeAllAnnotationsWithCommand","hasAnnotationMeta","setAnnotationMeta","Style","getFontFamily","getFontSize","getStrokeWidth","getTextColour","getLineColour","setLineColour","setBaseScale","scale","setZoomScale","getBaseScale","getZoomScale","applyZoomScale","applyZoomRatio","getShadowOffset","getTagOpacity","getTextPadding","getFontStr","getLineHeight","getScaledFontSize","getScaledStrokeWidth","getShadowLineColour","hexColour","hexStr","isNodeNameLabel","node","isNodeNameShape","isPositionNode","isNodeWithId","getDefaultAnchor","style","absRadius","Konva","stroke","strokeWidth","strokeScaleEnabled","radiusX","radiusY","dragOnTop","draggable","visible","Rectangle","getSurface","getWorldSurface","mulABC","getRealWidth","getRealHeight","getWidth","getHeight","getRound","quantif","ROI","points","getPoint","getPoints","addPoint","addPoints","cx","cy","pi","pi1","ai","a1","Protractor","_viewController","_flags","Ellipse","centre","getCenter","getA","getB","centerX","centerY","radiusRatio","rySquare","transX","getEllipseIndices","dir","centerValues","radiusI","radiusJ","radiusJ2","di","dj","jmax","jmin","imax","imin","Circle","getRadius","rSquare","DrawShapeEditor","eventCallback","setShape","inshape","drawLayer","getFactory","getShape","isActive","enable","getLayer","draw","disable","reset","resetAnchors","getParent","forEach","anchor","setAnchorsActive","anchors","getAnchors","getStyle","on","cancelBubble","mathShape","referencePoints","target","stageSize","changed","boundNodePosition","validateAnchorPosition","getBaseSize","constrainAnchorMove","updateAnnotationOnAnchorMove","updateShapeGroupOnAnchorMove","getDrawController","addToUndoStack","dataid","getDataId","moveToTop","DrawTrash","createTrashIcon","trashLine1","trashLine2","activate","stage","getKonvaStage","konvaLayer","getKonvaLayer","invscale","changeChildrenColourOnTrashHover","eventPosition","shapeGroup","originalShapeColour","isOverTrash","changeGroupChildrenColour","getChildren","tshape","trashHalfWidth","scaleX","trashHalfHeight","scaleY","DrawShapeHandler","setEditorShape","shape","drawController","getEditorShapeGroup","getEditorAnnotation","disableAndResetEditor","storeMouseOverCursor","cursor","document","body","opacity","onMouseOutShapeGroup","addShapeGroupListeners","originalTextExpr","textExpr","customUI","openRoiDialog","newTextExpr","dragStartPos","previousPos","getShapePositionRange","boundRect","getClientRect","relativeTo","isShapeInRange","children","labelWithDefaultPosition","labelPosition","child","move","updateAnnotationOnTranslation","updateLabelContent","mousePoint","getMousePoint","evt","eventPos","translation","originalLabelPosition","newLabelPosition","removeShapeListeners","DrawLayer","containerDiv","className","setShapeHandler","handler","getReferenceLayerId","getLayers","setPlaneHelper","helper","getId","removeFromDOM","getOpacity","setOpacity","alpha","addFlipOffsetX","addFlipOffsetY","flipScaleX","flipScaleY","flipScaleZ","setScale","newScale","orientedNewScale","finalNewScale","resetOffset","worldCenter","newOffset","getScaledOffset","newZoomOffset","initScale","absoluteZoomOffset","setOffset","planeNewOffset","setBaseOffset","scrollOffset","needsUpdate","display","isVisible","refLayerId","container","listening","getContent","setAttribute","setAnnotationGroup","annotationGroup","dataId","activateCurrentPositionShapes","AddAnnotationCommand","allPosGroups","posGroup","shapeGroups","getCurrentPosGroup","planePoints","planeOrigin","posGroupId","layerChildren","posChildren","isCompatibleView","createShapeGroup","setLabelVisibility","fitToContainer","containerSize","divToWorldSizeRatio","fitOffset","divToImageSizeRatio","newViewOffset","scaledImageSize","newFlipOffset","isAnnotationVisible","setAnnotationVisibility","setLabelsVisibility","posGroups","getText","text","deleteDraw","_id","_exeCallback","deleteDraws","getNumberOfDraws","bindInteraction","pointerEvents","names","InteractionEventNames","unbindInteraction","scrollIndexValue","findOne","srclayerid","ratioX","ratioY","labels","getName","undo","originaProps","Path","inputPointArray","inputControlPointIndexArray","pointArray","controlPointIndexArray","isControlPoint","addControlPoint","newPointArray","appenPath","other","oldSize","indexArray","BucketQueue","bits","cost_functor","bucketCount","mask","loc","cost","buckets","buildArray","bucket","getBucket","ret","isEmpty","newSize","__twothirdpi","gradUnitVector","gradX","gradY","px","py","out","oy","gvm","Scissors","curPoint","searchGranBits","searchGran","pointsPerPost","greyscale","laplace","gradient","parents","working","trained","trainingPoints","edgeWidth","trainingLength","edgeGran","edgeTraining","gradPointsNeeded","gradGran","gradTraining","insideGran","insideTraining","outsideGran","outsideTraining","getTrainingIdx","granularity","getTrainedEdge","edge","getTrainedGrad","grad","getTrainedInside","inside","getTrainedOutside","outside","setWorking","setDimensions","setData","gradMagnitude","lap","computeGreyscale","computeLaplace","computeGradient","computeGradX","computeGradY","sides","guv","ix","iy","computeSides","findTrainingPoints","resetTraining","doTraining","calculateTraining","addInStaticGrad","input","output","maxVal","idx","gaussianBlur","have","need","gradDirection","qx","qy","__dgpuv","__gdquv","dp","dq","SQRT1_2","acos","adj","sx","sy","ex","ey","setPoint","sp","visited","MAX_VALUE","pq","doWork","timeout","pointCount","newPoints","adjList","q","pqCost","defaults","labelText","arrow","circle","ellipse","protractor","rectangle","roi","ruler","LabelFactory","positionGetter","getPosition","ktext","fontSize","fontFamily","padding","shadowColor","shadowOffset","setText","zoomScale","labelScale","klabel","updatePosition","updateContent","Threshold","getMin","setMin","getMax","setMax","setOriginalImage","getOriginalImage","imageMin","Sharpen","Sobel","RunFilterCommand","filter","render","onExecute","onUndo","_event","toolList","toolOptions","defaultToolList","divId","diffX","diffY","pixelToIntensity","WindowLevelValues","mousedown","mousemove","mouseup","mouseout","touchstart","touchPoints","getTouchPoints","touchmove","touchend","dblclick","displayToPlaneIndex","getData","keydown","context","onKeydown","_bool","setFeatures","_features","Scroll","planePos","displayToPlanePos","yMove","xMove","setTimeout","clearTimeout","showTooltip","removeTooltipDiv","features","displayTooltip","ZoomAndPan","tx","ty","displayToPlaneScale","addTranslation","#twoTouchUpdate","lineRatio","zoom","displayToMainPlanePos","addScale","step","Opacity","op","Draw","getActiveDrawLayer","refDataId","seriesInstanceUID","createAnnotationData","addAndRenderAnnotationData","setActiveDrawLayerByDataId","kshape","getIntersection","selectedShape","annotationId","getNPoints","timer","getTimeout","getActiveLayerGroup","destroy","tmpPoints","drawLayerId","layerId","Annotation","groupColour","setAnnotationMathShape","finalPoints","layer","drawLayers","getDrawLayers","layerid","setOptions","options","getOptionsType","autoShapeColour","shapeColour","shapeName","hasShape","mouseOverCursor","withScroll","blacklist","getEventNames","listener","Filter","bool","getSelectedFilter","filterName","hasFilter","run","args","runArgs","getFilterList","Floodfill","setExtend","getExtend","#getIndex","simple","bytes","MagicWand","cs","icsl","newMathShape","originalMathShape","extend","ini","imageSize","jl","onThresholdChange","getImageData","getAbsoluteScale","movedpoint","Livewire","pn","p0","results","_p","_q","defaultToolOptions","ArrowFactory","supports","setTextExpr","extras","extra","_anchor","kline","pointBegin","pointEnd","endPoint","newBegin","newEnd","_style","linePerp0","linePerp1","hitFunc","beginPath","moveTo","lineTo","closePath","fillStrokeShape","perpLine","closed","ktriangle","_annotation","_group","CircleFactory","left","right","bottom","top","anchorPoint","newRadius","newCenter","kcircle","swapX","swapY","offsetX","offsetY","kshadow","pixelLine","EllipseFactory","kellipse","ProtractorFactory","mid","pointMid","newPointList","inclination","innerRadius","outerRadius","rotation","midX","midY","karc","arcPos","RectangleFactory","rectX","rectY","rectWidth","rectHeight","topLeft","bottomRight","pointTopLeft","pointBottomRight","krect","topRight","bottomLeft","rWidth","rHeight","RoiFactory","kroi","newPoint","RulerFactory","ktick0","ktick1","ThresholdFilter","SobelFilter","SharpenFilter","referenceSopUID","quantification","planeHelper","inputPlanePoints","originPoint","valueObj","valueStr","toPrecision","replaceFlags","fac","factoryName","prompt","getTouchesPositions","touches","offsetLeft","offsetTop","offsetParent","positions","pageX","pageY","targetTouches","changedTouches","canCreateCanvas","testCvs","createElement","cropCvs","testCtx","getContext","cropCtx","fillRect","drawImage","ViewLayer","getScale","getAbsoluteZoomOffset","setImageSmoothing","setView","bindImage","onimageset","unbindImage","vcSize","origin0","layerGroupOrigin","layerGroupOrigin0","deScaled","planePosToDisplay","posX","posY","globalAlpha","setTransform","imageSmoothingEnabled","appendChild","alert","clearRect","createImageData","needsDraw","eventName","passive","putImageData","dims3D","indexScrollIndex","save","restore","getLayerDetailsFromLayerDivId","idString","layerIndex","layerDiv","closest","indexCenter","LayerGroup","getShowCrosshair","setShowCrosshair","getDivId","getAddedScale","getOffset","getNumberOfLayers","getViewLayers","someViewLayer","hasOne","getNumberOfViewLayers","tmpLayer","getBaseViewLayer","baseLayer","getViewLayersByDataId","searchViewLayers","getViewDataIndices","getDrawLayersByDataId","setActiveViewLayer","setActiveViewLayerByDataId","setActiveDrawLayer","addViewLayer","viewLayerIndex","div","append","addDrawLayer","updateLayersToPositionChange","empty","getElementsByClassName","removeLayersByDataId","removeLayer","displayPos","lineH","offsetWidth","lineV","offsetHeight","span","createTextNode","viewLayerOffsets","baseViewLayerOrigin0","baseViewLayerOrigin","hasSetOffset","vc","scrollDiff","planeDiff","scroll","plane","refOffsets","hasSetPos","getDivToWorldSizeRatio","maxWorldSize","getMaxWorldSize","maxSize","scaleStep","binderList","WindowLevelBinder","getEventType","getCallback","viewLayers","PositionBinder","pointValues","currentPos","currentDims","inputDims","ZoomBinder","OffsetBinder","OpacityBinder","ColourMapBinder","Stage","getLayerGroup","getNumberOfLayerGroups","setActiveLayerGroup","addLayerGroup","htmlElement","isBound","unbindLayerGroups","bindLayerGroups","setBinders","removeLayerGroup","minRatio","hasRatio","binder","binderObj","elem","State","fromJSON","json","version","baseScale","scaleCenter","originX","originY","oldTx","oldTy","setDrawings","drawings","drawingsDetails","v02DAndD","inputDrawings","newDrawings","drawGroups","drawGroup","lenf","newFrameDrawings","leng","karcs","ktexts","toObject","txtLen","longText","v01Tov02DrawingsAndDetails","v02Tov03Drawings","v03Tov04DrawingsDetails","v04Tov05Data","v04Tov05Drawings","details","groupDetails","v02Tov03DrawingsDetails","groupShapes","parentGroup","groupDrawings","currentPosition","gnode","detail","ids","attrs","sliceNumber","frameNumber","newId","getUrlFromUri","uri","base","location","URL","splitUri","sepIndex","hashIndex","query","pairs","pair","splitKeyValueString","UndoStack","getStackSize","getCurrentStackIndex","cmd","redo","ToolboxController","enableShortcuts","getToolList","hasTool","getSelectedTool","getSelectedToolEventHandler","eventType","setSelectedTool","setToolFeatures","bindLayerGroup","layerGroupDivId","applySelectedTool","MultiProgressHandler","setNumberOfDimensions","num","setNToLoad","onprogress","lengthComputable","subindex","percent","loaded","total","source","lenprog","getMonoProgressHandler","getUndefinedMonoProgressHandler","UrlsLoader","request","loader","onload","onloadend","load","onloadstart","status","onerror","responseURL","statusText","response","mproghandler","loaders","loaderList","foundLoader","canLoadUrl","defaultCharacterSet","onloaditem","onabort","lastRunRequestIndex","requestOnLoadEnd","send","XMLHttpRequest","open","requestHeaders","setRequestHeader","withCredentials","errorCallback","abortCallback","loadUrlAs","responseType","batchSize","dicomDirUrl","urls","parser","dirSeq","records","series","study","recType","refFileIds","getFileListFromDicomDir","rootUrl","fullUrls","abort","readyState","isLoading","ThreadPool","poolSize","taskQueue","freeThreads","WorkerThread","runningThreads","addWorkerTask","workerTask","onworkstart","workerThread","shift","onworkend","onTaskEnd","onwork","handleWorkerError","onworkitem","parentPool","runningTask","worker","Worker","script","onmessage","postMessage","startMessage","terminate","itemNumber","numberOfItems","WorkerTask","hasJpegBaselineDecoder","JpegImage","hasJpegLosslessDecoder","jpeg","lossless","hasJpeg2000Decoder","JpxImage","decoderScripts","rle","AsynchPixelBufferDecoder","_numberOfData","pixelMeta","ondecodestart","ondecodeditem","ondecoded","ondecodeend","SynchPixelBufferDecoder","algoName","numberOfData","decoder","decodedBuffer","buf","Decoder","decoded","tiles","dwvdecoder","RleDecoder","PixelBufferDecoder","NumericValue","FloatingPointValue","RationalNumeratorValue","RationalDenominatorValue","MeasurementUnitsCodeSequence","MeasuredValue","numericValue","floatingPointValue","rationalNumeratorValue","rationalDenominatorValue","measurementUnitsCode","getDicomMeasuredValueItem","MeasuredValueSequence","NumericValueQualifierCodeSequence","NumericMeasurement","measuredValue","numericValueQualifierCode","getDicomNumericMeasurementItem","measurement","SopInstanceReference","getSopInstanceReference","ref","getDicomSopInstanceReferenceItem","ReferencedFrameNumber","ReferencedSOPSequence","ImageReference","referencedSOPSequence","referencedFrameNumber","referencedSegmentNumber","fiducialUID","getDicomImageReferenceItem","PixelOriginInterpretation","GraphicData","GraphicType","FiducialUID","GraphicTypes","SpatialCoordinate","graphicData","graphicType","pixelOriginInterpretation","getDicomSpatialCoordinateItem","scoord","ReferencedFrameofReferenceUID","SpatialCoordinate3D","referencedFrameofReferenceUID","getDicomSpatialCoordinate3DItem","RelationshipType","ValueType","ConceptNameCodeSequence","ConceptCodeSequence","ContentSequence","DateTime","Time","UID","PersonName","TextValue","ContinuityOfContent","RelationshipTypes","ValueTypes","datetime","uidref","pname","composite","waveform","scoord3d","tcoord","table","ValueTypeValueTagName","TEXT","DATE","TIME","DATETIME","UIDREF","PNAME","CONTAINER","DicomSRContent","valueType","conceptNameCode","relationshipType","contentSequence","getSRContent","content","getMeasuredValue","getNumericMeasurement","getImageReference","getSpatialCoordinate","getSpatialCoordinate3D","valueTagName","getDicomSRContentItem","contentItem","getSRContentFromValue","getConceptNameCode","measure","getMeasurementUnitsCode","numMeasure","AnnotationGroupFactory","srContent","dataLength","isClosed","numberOfPoints","firstPoint","lastPoint","line2","line3","getShapeFromScoord","subsubItem","nPoints","quantifName","quantifUnit","annotations","seriesElement","srScoord","pointPerimeter","getScoordFromShape","itemContentSequence","srImage","sopRef","imageRef","srUid","shortLabel","labelPosScoord","refPointsScoord","pointsScoord","quatifContent","CompletionFlag","VerificationFlag","DicomData","DataController","getNextDataId","getDataIds","getDataIdsFromSopUids","dataToUpdate","idKey","obj1","obj2","valueKey","mergedObj1","merged","id1","id2","value1","subValue1","value2","subValue2","mergeObjects","DicomBufferToView","opt","modalityElement","dicomParser","columnsElement","rowsElement","samplesPerPixelElement","planarConfigurationElement","dataIndex","decodedData","fullSize","algo","getSyntaxDecompressionName","convert","MemoryLoader","canLoadMemory","filename","imageDataToBuffer","imageData","dataLen","getDefaultImage","imageBuffer","imageSpacing","canLoadFile","file","url","forceLoader","isNameAccept","acceptHeader","acceptValue","urlObjext","pathname","hasNoExt","hasDcmExt","contentType","searchParams","mem","tmpFile","File","loadFileAs","fileContentTypes","_opt","Text","memoryIO","progress","u8Array","partHeaderEndCb","partHeaderEndIndex","lines","boundaryStr","boundaryCb","boundaryLen","nextBoundaryIndex","part","partHeaderLines","semiColonIndex","dataBeginIndex","dataEndIndex","parseMultipart","_file","_mem","dataType","imageType","Blob","createObjectURL","domImage","canvas","ctx","lastModified","getViewFromDOMImage","src","hasImageExt","DataURL","videoDataStr","btoa","video","onloadedmetadata","videoWidth","videoHeight","ceil","duration","onseeked","imgBuffer","storeFrame","nextTime","currentTime","getViewFromDOMVideo","unzipPercent","async","then","JSZip","zip","FilesLoader","FileReader","readAsText","readAsDataURL","readAsArrayBuffer","LoadController","loadFiles","files","loadURLs","loadImageObject","getLoadingDataIds","fileIO","urlIO","loadType","eventInfo","loadtype","isFirstItem","eventInfoItem","isfirstitem","getNumberToPrecision","createDefaultReplaceFormat","OverlayData","configs","addAppListeners","addItemMeta","dataUid","overlays","modElement","overlay","format","poElement","po0","po1","createOverlayData","DOM","infoKeys","createOverlayDataForDom","sliceOverlayData","mapFunc","isListening","removeAppListeners","ViewConfig","wlPresetName","ToolConfig","AppOptions","dataViewConfigs","tools","binders","viewOnFirstLoadItem","overlayConfig","rootDocument","App","addData","getMetaData","getToolboxController","removeFromUndoStack","appToolList","toolName","toolClass","toolParams","appToolOptions","optionName","optionClassName","toolNamespace","charAt","optionClass","resetLayout","loadFromUri","getUriQuery","onLoadEnd","state","protocol","host","decodeURIComponent","manifest","rootURL","getElementsByTagName","getAttribute","patientList","studyList","studyUID","seriesList","seriesUID","instanceList","link","decodeManifest","responseXML","decodeManifestQuery","replaceMode","repeatKeyReplaceMode","queryUri","inputQueryPairs","repeatKey","repeatList","baseUrl","gotOneArg","decodeKeyValueUri","dwvReplaceMode","decodeQuery","abortAllLoads","abortLoad","initWLDisplay","getViewConfigs","excludeStarConfig","getViewConfig","getDataViewConfigs","setDataViewConfigs","addDataViewConfig","removeDataViewConfig","itemIndex","lg","vls","dls","updateDataViewConfig","configToUpdate","dataKeys","divIds","viewConfigs","viewConfig","getElementById","setLayerGroupsBinders","instances","isImage","isMeasurement","translate","statePosGroups","statePosKids","stateGroup","pointsArray","absPosition","absolutePosition","konvaToAnnotation","applyJsonState","jsonState","onResize","defaultOnKeydown","ctrlKey","shiftKey","resetDisplay","resetZoom","setTool","tool","getOverlayData","toggleOverlayListeners","refMeta","refDataViewConfig","drawDataViewConfig","isFirstLoadItem","eventMetaData","groupId","isBaseLayer","flipFlags","baseViewLayer","layergroupid","refSeriesInstanceUID","refViewLayer","refViewController","refData","viewConfigOrientation","orientationCode","isViewUndefined","isViewAxial","isViewCoronal","isViewSagittal","flipOffset","flipScale","MaskSegmentHelper","segmentNumber","hasSegment","getNumberOfSegments","maskHasSegments","numbers","unknowns","addSegment","removeSegment","updateSegment","DeleteSegmentCommand","isValid","segmentnumber","ChangeSegmentColourCommand","newColour","MaskSegmentViewHelper","isHidden","addToHidden","removeFromHidden","getAlphaFunc","hiddenColours","resultFn","Scalar2D","Scalar3D"],"sourceRoot":""}