{"version":3,"file":"dwv.min.js","mappings":"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AAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1skCC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9lCC,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAMrpCS,eAAgB,CACdixmCU,WAAY,CACVZ,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACpnCC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC3lCC,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAA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","sources":["webpack://dwv/webpack/universalModuleDefinition","webpack://dwv/external umd {\"root\":\"JSZip\",\"commonjs\":\"jszip\",\"commonjs2\":\"jszip\",\"amd\":\"jszip\"}","webpack://dwv/external umd {\"root\":\"Konva\",\"commonjs\":\"konva\",\"commonjs2\":\"konva\",\"amd\":\"konva\"}","webpack://dwv/external umd {\"root\":\"MagicWand\",\"commonjs\":\"magic-wand-tool\",\"commonjs2\":\"magic-wand-tool\",\"amd\":\"konmagic-wand-tool\"}","webpack://dwv/webpack/bootstrap","webpack://dwv/webpack/runtime/compat get default export","webpack://dwv/webpack/runtime/define property getters","webpack://dwv/webpack/runtime/hasOwnProperty shorthand","webpack://dwv/webpack/runtime/make namespace object","webpack://dwv/./src/math/index.js","webpack://dwv/./src/image/modalityLut.js","webpack://dwv/./src/utils/logger.js","webpack://dwv/./src/image/windowLevel.js","webpack://dwv/./src/image/voiLut.js","webpack://dwv/./src/image/windowLut.js","webpack://dwv/./src/image/luts.js","webpack://dwv/./src/utils/colour.js","webpack://dwv/./src/app/custom.js","webpack://dwv/./src/math/vector.js","webpack://dwv/./src/math/matrix.js","webpack://dwv/./src/math/point.js","webpack://dwv/./src/utils/i18n.js","webpack://dwv/./src/utils/string.js","webpack://dwv/./src/utils/array.js","webpack://dwv/./src/dicom/dictionary.js","webpack://dwv/./src/dicom/dicomTag.js","webpack://dwv/./src/dicom/dataElement.js","webpack://dwv/./src/dicom/dataReader.js","webpack://dwv/./src/dicom/dicomParser.js","webpack://dwv/./src/utils/listen.js","webpack://dwv/./src/image/iterator.js","webpack://dwv/./src/image/rsi.js","webpack://dwv/./src/image/size.js","webpack://dwv/./src/math/stats.js","webpack://dwv/./src/image/spacing.js","webpack://dwv/./src/image/geometry.js","webpack://dwv/./src/math/orientation.js","webpack://dwv/./src/dicom/dicomImage.js","webpack://dwv/./src/dicom/dicomDate.js","webpack://dwv/./src/dicom/dicomPet.js","webpack://dwv/./src/image/imageFactory.js","webpack://dwv/./src/dicom/dataWriter.js","webpack://dwv/./src/dicom/dicomWriter.js","webpack://dwv/./src/dicom/dicomCode.js","webpack://dwv/./src/dicom/dicomSegment.js","webpack://dwv/./src/dicom/dicomSegmentFrameInfo.js","webpack://dwv/./src/image/maskFactory.js","webpack://dwv/./src/image/image.js","webpack://dwv/./src/image/viewFactory.js","webpack://dwv/./src/image/view.js","webpack://dwv/./src/image/viewMonochrome.js","webpack://dwv/./src/image/viewPaletteColor.js","webpack://dwv/./src/image/viewRgb.js","webpack://dwv/./src/image/viewYbrFull.js","webpack://dwv/./src/image/planeHelper.js","webpack://dwv/./src/image/positionHelper.js","webpack://dwv/./src/app/viewController.js","webpack://dwv/./src/gui/generic.js","webpack://dwv/./src/gui/viewLayer.js","webpack://dwv/./src/tools/scrollWheel.js","webpack://dwv/./src/math/line.js","webpack://dwv/./src/tools/drawCommands.js","webpack://dwv/./src/gui/style.js","webpack://dwv/./src/tools/drawBounds.js","webpack://dwv/./src/tools/drawShapeEditor.js","webpack://dwv/./src/tools/drawTrash.js","webpack://dwv/./src/tools/drawShapeHandler.js","webpack://dwv/./src/math/ellipse.js","webpack://dwv/./src/app/dataController.js","webpack://dwv/./src/utils/operator.js","webpack://dwv/./src/tools/brush.js","webpack://dwv/./src/math/roi.js","webpack://dwv/./src/math/path.js","webpack://dwv/./src/math/bucketQueue.js","webpack://dwv/./src/math/scissors.js","webpack://dwv/./src/tools/labelFactory.js","webpack://dwv/./src/math/circle.js","webpack://dwv/./src/math/protractor.js","webpack://dwv/./src/math/rectangle.js","webpack://dwv/./src/image/filter.js","webpack://dwv/./src/tools/filter.js","webpack://dwv/./src/tools/index.js","webpack://dwv/./src/tools/windowLevel.js","webpack://dwv/./src/tools/scroll.js","webpack://dwv/./src/tools/zoomPan.js","webpack://dwv/./src/tools/opacity.js","webpack://dwv/./src/tools/draw.js","webpack://dwv/./src/tools/floodfill.js","webpack://dwv/./src/tools/livewire.js","webpack://dwv/./src/tools/arrow.js","webpack://dwv/./src/tools/circle.js","webpack://dwv/./src/tools/ellipse.js","webpack://dwv/./src/tools/protractor.js","webpack://dwv/./src/tools/rectangle.js","webpack://dwv/./src/tools/roi.js","webpack://dwv/./src/tools/ruler.js","webpack://dwv/./src/image/annotation.js","webpack://dwv/./src/image/annotationGroup.js","webpack://dwv/./src/app/drawController.js","webpack://dwv/./src/gui/drawLayer.js","webpack://dwv/./src/gui/layerGroup.js","webpack://dwv/./src/gui/stage.js","webpack://dwv/./src/io/state.js","webpack://dwv/./src/utils/uri.js","webpack://dwv/./src/utils/undoStack.js","webpack://dwv/./src/app/toolboxController.js","webpack://dwv/./src/utils/progress.js","webpack://dwv/./src/dicom/dicomDir.js","webpack://dwv/./src/io/urlsLoader.js","webpack://dwv/./src/utils/thread.js","webpack://dwv/./src/image/decoder.js","webpack://dwv/./src/dicom/dicomMeasuredValue.js","webpack://dwv/./src/dicom/dicomNumericMeasurement.js","webpack://dwv/./src/dicom/dicomSopInstanceReference.js","webpack://dwv/./src/dicom/dicomImageReference.js","webpack://dwv/./src/dicom/dicomSpatialCoordinate.js","webpack://dwv/./src/dicom/dicomSpatialCoordinate3D.js","webpack://dwv/./src/dicom/dicomSRContent.js","webpack://dwv/./src/image/annotationGroupFactory.js","webpack://dwv/./src/image/dicomBufferToView.js","webpack://dwv/./src/io/memoryLoader.js","webpack://dwv/./src/image/domReader.js","webpack://dwv/./src/io/loaderList.js","webpack://dwv/./src/io/dicomDataLoader.js","webpack://dwv/./src/io/jsonTextLoader.js","webpack://dwv/./src/io/multipartLoader.js","webpack://dwv/./src/io/rawImageLoader.js","webpack://dwv/./src/io/rawVideoLoader.js","webpack://dwv/./src/io/zipLoader.js","webpack://dwv/./src/io/filesLoader.js","webpack://dwv/./src/app/loadController.js","webpack://dwv/./src/gui/overlayData.js","webpack://dwv/./src/app/application.js","webpack://dwv/./src/image/maskSegmentHelper.js","webpack://dwv/./src/image/deleteSegmentCommand.js","webpack://dwv/./src/image/changeSegmentColourCommand.js","webpack://dwv/./src/image/maskSegmentViewHelper.js","webpack://dwv/./src/math/scalar.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"konva\"), require(\"magic-wand-tool\"), require(\"jszip\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"konva\", \"konmagic-wand-tool\", \"jszip\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dwv\"] = factory(require(\"konva\"), require(\"magic-wand-tool\"), require(\"jszip\"));\n\telse\n\t\troot[\"dwv\"] = factory(root[\"Konva\"], root[\"MagicWand\"], root[\"JSZip\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__944__, __WEBPACK_EXTERNAL_MODULE__324__, __WEBPACK_EXTERNAL_MODULE__654__) {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__654__;","module.exports = __WEBPACK_EXTERNAL_MODULE__944__;","module.exports = __WEBPACK_EXTERNAL_MODULE__324__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Immutable index.\n * Warning: the input array is NOT cloned, modifying it will\n *  modify the index values.\n */\nexport class Index {\n\n  /**\n   * Index values.\n   *\n   * @type {number[]}\n   */\n  #values;\n\n  /**\n   * @param {number[]} values The index values.\n   */\n  constructor(values) {\n    if (!values || typeof values === 'undefined') {\n      throw new Error('Cannot create index with no values.');\n    }\n    if (values.length === 0) {\n      throw new Error('Cannot create index with empty values.');\n    }\n    const valueCheck = function (val) {\n      return !isNaN(val);\n    };\n    if (!values.every(valueCheck)) {\n      throw new Error('Cannot create index with non number values.');\n    }\n    this.#values = values;\n  }\n\n  /**\n   * Get the index value at the given array index.\n   *\n   * @param {number} i The index to get.\n   * @returns {number|undefined} The value or undefined if not in range.\n   */\n  get(i) {\n    return this.#values[i];\n  }\n\n  /**\n   * Get the length of the index.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return this.#values.length;\n  }\n\n  /**\n   * Get a string representation of the Index.\n   *\n   * @returns {string} The Index as a string.\n   */\n  toString() {\n    return '(' + this.#values.toString() + ')';\n  }\n\n  /**\n   * Get the values of this index.\n   *\n   * @returns {number[]} The array of values.\n   */\n  getValues() {\n    return this.#values.slice();\n  }\n\n  /**\n   * Check if the input index can be compared to this one.\n   *\n   * @param {Index} rhs The index to compare to.\n   * @returns {boolean} True if both indices are comparable.\n   */\n  canCompare(rhs) {\n    // check input\n    if (!rhs) {\n      return false;\n    }\n    // check length\n    if (this.length() !== rhs.length()) {\n      return false;\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Check for Index equality.\n   *\n   * @param {Index} rhs The index to compare to.\n   * @returns {boolean} True if both indices are equal.\n   */\n  equals(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return false;\n    }\n    // check values\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Compare indices and return different dimensions.\n   *\n   * @param {Index} rhs The index to compare to.\n   * @returns {number[]} The list of different dimensions.\n   */\n  compare(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return null;\n    }\n    // check values\n    const diffDims = [];\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        diffDims.push(i);\n      }\n    }\n    return diffDims;\n  }\n\n  /**\n   * Add another index to this one and return\n   *   the result as a new index.\n   *\n   * @param {Index} rhs The index to add.\n   * @returns {Index} The index representing the sum of both indices.\n   */\n  add(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return null;\n    }\n    // add values\n    const values = [];\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      values.push(this.get(i) + rhs.get(i));\n    }\n    // seems ok!\n    return new Index(values);\n  }\n\n  /**\n   * Add the input value to this index at the given\n   *   dimension number and return the result\n   *   as a new index.\n   *\n   * @param {number} dim The dimension number.\n   * @param {number} value The value to add.\n   * @returns {Index} The result index.\n   */\n  #addToDim(dim, value) {\n    const values = this.#values.slice();\n    if (dim < values.length) {\n      values[dim] += value;\n    } else {\n      console.warn('Cannot add to given dimension: ', dim, values.length);\n    }\n    return new Index(values);\n  }\n\n  /**\n   * Increment this index by 1 at the given dimension\n   *   and return the result as a new index.\n   *\n   * @param {number} dim The dimension number.\n   * @returns {Index} The result index.\n   */\n  next(dim) {\n    return this.#addToDim(dim, 1);\n  }\n\n  /**\n   * Decrement this index by 1 at the given dimension\n   *   and return the result as a new index.\n   *\n   * @param {number} dim The dimension number.\n   * @returns {Index} The result index.\n   */\n  previous(dim) {\n    return this.#addToDim(dim, -1);\n  }\n\n  /**\n   * Get the current index with a new 2D base\n   *   and return the result as a new index.\n   *\n   * @param {number} i The new 0 index.\n   * @param {number} j The new 1 index.\n   * @returns {Index} The new index.\n   */\n  getWithNew2D(i, j) {\n    const values = [i, j];\n    for (let l = 2, lenl = this.length(); l < lenl; ++l) {\n      values.push(this.get(l));\n    }\n    return new Index(values);\n  }\n\n} // Index class\n\n/**\n * Get an index with values set to 0 and the input size.\n *\n * @param {number} size The size of the index.\n * @returns {Index} The zero index.\n */\nexport function getZeroIndex(size) {\n  const values = new Array(size);\n  values.fill(0);\n  return new Index(values);\n}\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {RescaleSlopeAndIntercept} from './rsi';\n/* eslint-enable no-unused-vars */\n\n/**\n * Modality LUT class: compensates for any modality-specific presentation.\n * Typically consists of a rescale slope and intercept to\n * rescale the data range.\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.11.html}.\n */\nexport class ModalityLut {\n\n  /**\n   * The rescale slope.\n   *\n   * @type {RescaleSlopeAndIntercept}\n   */\n  #rsi;\n\n  /**\n   * Is the RSI an identity one.\n   *\n   * @type {boolean}\n   */\n  #isIdRsi;\n\n  /**\n   * The size of the LUT array.\n   *\n   * @type {number}\n   */\n  #length;\n\n  /**\n   * The internal LUT array.\n   *\n   * @type {Float32Array}\n   */\n  #lut;\n\n  /**\n   * @param {RescaleSlopeAndIntercept} rsi The rescale slope and intercept.\n   * @param {number} bitsStored The number of bits used to store the data.\n   */\n  constructor(rsi, bitsStored) {\n    this.#rsi = rsi;\n    this.#isIdRsi = rsi.isID();\n\n    this.#length = Math.pow(2, bitsStored);\n\n    // create lut if not identity RSI\n    if (!this.#isIdRsi) {\n      this.#lut = new Float32Array(this.#length);\n      for (let i = 0; i < this.#length; ++i) {\n        this.#lut[i] = this.#rsi.apply(i);\n      }\n    }\n  }\n\n  /**\n   * Get the Rescale Slope and Intercept (RSI).\n   *\n   * @returns {RescaleSlopeAndIntercept} The rescale slope and intercept object.\n   */\n  getRSI() {\n    return this.#rsi;\n  }\n\n  /**\n   * Get the length of the LUT array.\n   *\n   * @returns {number} The length of the LUT array.\n   */\n  getLength() {\n    return this.#length;\n  }\n\n  /**\n   * Get the value of the LUT at the given offset.\n   *\n   * @param {number} offset The input offset in [0,2^bitsStored] range\n   *   or full range for ID rescale.\n   * @returns {number} The float32 value of the LUT at the given offset.\n   */\n  getValue(offset) {\n    return this.#isIdRsi ? offset : this.#lut[offset];\n  }\n\n} // class ModalityLut\n","export const logger = {\n  /**\n   * Available log levels.\n   * Note: need to activate verbose level in\n   *   Chrome console to see DEBUG messages.\n   */\n  levels: {\n    TRACE: 0,\n    DEBUG: 1,\n    INFO: 2,\n    WARN: 3,\n    ERROR: 4\n  },\n\n  /**\n   * Logger level: default to WARN.\n   */\n  level: 3,\n\n  /**\n   * Log a trace message.\n   *\n   * @param {string} msg The message to log.\n   */\n  trace: function (msg) {\n    if (this.level <= this.levels.TRACE) {\n      console.trace(msg);\n    }\n  },\n\n  /**\n   * Log a debug message.\n   * Careful: depends on console settings.\n   *\n   * @param {string} msg The message to log.\n   */\n  debug: function (msg) {\n    if (this.level <= this.levels.DEBUG) {\n      console.debug(msg);\n    }\n  },\n\n  /**\n   * Log an info message.\n   *\n   * @param {string} msg The message to log.\n   */\n  info: function (msg) {\n    if (this.level <= this.levels.INFO) {\n      console.info(msg);\n    }\n  },\n\n  /**\n   * Log a warn message.\n   *\n   * @param {string} msg The message to log.\n   */\n  warn: function (msg) {\n    if (this.level <= this.levels.WARN) {\n      console.warn(msg);\n    }\n  },\n\n  /**\n   * Log an error message.\n   *\n   * @param {string} msg The message to log.\n   */\n  error: function (msg) {\n    if (this.level <= this.levels.ERROR) {\n      console.error(msg);\n    }\n  }\n\n}; // logger\n","import {logger} from '../utils/logger';\n\n/**\n * Minimum window width value.\n *\n * Ref: {@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.11.2.html#sect_C.11.2.1.2}.\n */\nconst minWindowWidth = 1;\n\n/**\n * Validate an input window width.\n *\n * @param {number} value The value to test.\n * @returns {number} A valid window width.\n */\nexport function validateWindowWidth(value) {\n  return value < minWindowWidth ? minWindowWidth : value;\n}\n\n/**\n * Window and Level also known as window width and center.\n */\nexport class WindowLevel {\n  /**\n   * The window center.\n   *\n   * @type {number}\n   */\n  center;\n\n  /**\n   * The window width.\n   *\n   * @type {number}\n   */\n  width;\n\n  /**\n   * @param {number} center The window center.\n   * @param {number} width The window width.\n   */\n  constructor(center, width) {\n    // check width\n    if (width < minWindowWidth) {\n      logger.warn('Using minimum window width since input is not valid: ' +\n        width);\n      width = minWindowWidth;\n    }\n    this.center = center;\n    this.width = width;\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {WindowLevel} rhs The other object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      typeof rhs !== 'undefined' &&\n      this.center === rhs.center &&\n      this.width === rhs.width;\n  }\n\n} // WindowLevel class\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {WindowLevel} from './windowLevel';\n/* eslint-enable no-unused-vars */\n\n/**\n * VOI (Values of Interest) LUT class: apply window centre and width.\n *\n * ```\n * if (x <= c - 0.5 - (w-1)/2) then y = ymin\n * else if (x > c - 0.5 + (w-1)/2) then y = ymax\n * else y = ((x - (c - 0.5)) / (w-1) + 0.5) * (ymax - ymin) + ymin\n * ```\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.11.2.html}.\n */\nexport class VoiLut {\n\n  /**\n   * The window and level.\n   *\n   * @type {WindowLevel}\n   */\n  #windowLevel;\n\n  /**\n   * Signed data offset. Defaults to 0.\n   *\n   * @type {number}\n   */\n  #signedOffset = 0;\n\n  /**\n   * Output value minimum. Defaults to 0.\n   *\n   * @type {number}\n   */\n  #ymin = 0;\n\n  /**\n   * Output value maximum. Defaults to 255.\n   *\n   * @type {number}\n   */\n  #ymax = 255;\n\n  /**\n   * Input value minimum (calculated).\n   *\n   * @type {number}\n   */\n  #xmin = null;\n\n  /**\n   * Input value maximum (calculated).\n   *\n   * @type {number}\n   */\n  #xmax = null;\n\n  /**\n   * Window level equation slope (calculated).\n   *\n   * @type {number}\n   */\n  #slope = null;\n\n  /**\n   * Window level equation intercept (calculated).\n   *\n   * @type {number}\n   */\n  #inter = null;\n\n  /**\n   * @param {WindowLevel} wl The window center and width.\n   */\n  constructor(wl) {\n    this.#windowLevel = wl;\n    this.#init();\n  }\n\n  /**\n   * Get the window and level.\n   *\n   * @returns {WindowLevel} The window center and width.\n   */\n  getWindowLevel() {\n    return this.#windowLevel;\n  }\n\n  /**\n   * Initialise members. Called at construction.\n   *\n   */\n  #init() {\n    const center = this.#windowLevel.center;\n    const width = this.#windowLevel.width;\n    const c = center + this.#signedOffset;\n    // from the standard\n    this.#xmin = c - 0.5 - ((width - 1) / 2);\n    this.#xmax = c - 0.5 + ((width - 1) / 2);\n    // develop the equation:\n    // y = ( ( x - (c - 0.5) ) / (w-1) + 0.5 ) * (ymax - ymin) + ymin\n    // y = ( x / (w-1) ) * (ymax - ymin) +\n    //     ( -(c - 0.5) / (w-1) + 0.5 ) * (ymax - ymin) + ymin\n    this.#slope = (this.#ymax - this.#ymin) / (width - 1);\n    this.#inter = (-(c - 0.5) / (width - 1) + 0.5) *\n      (this.#ymax - this.#ymin) + this.#ymin;\n  }\n\n  /**\n   * Set the signed offset.\n   *\n   * @param {number} offset The signed data offset,\n   *   typically: slope * ( size / 2).\n   */\n  setSignedOffset(offset) {\n    this.#signedOffset = offset;\n    // re-initialise\n    this.#init();\n  }\n\n  /**\n   * Apply the window level on an input value.\n   *\n   * @param {number} value The value to rescale as an integer.\n   * @returns {number} The leveled value, in the\n   *  [ymin, ymax] range (default [0,255]).\n   */\n  apply(value) {\n    if (value <= this.#xmin) {\n      return this.#ymin;\n    } else if (value > this.#xmax) {\n      return this.#ymax;\n    } else {\n      return (value * this.#slope) + this.#inter;\n    }\n  }\n\n} // class VoiLut\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {ModalityLut} from './modalityLut';\nimport {VoiLut} from './voiLut';\n/* eslint-enable no-unused-vars */\n\n/**\n * Window LUT class: combines a modality LUT and a VOI LUT.\n */\nexport class WindowLut {\n\n  /**\n   * The modality LUT.\n   *\n   * @type {ModalityLut}\n   */\n  #modalityLut;\n\n  /**\n   * The VOI LUT.\n   *\n   * @type {VoiLut}\n   */\n  #voiLut;\n\n  /**\n   * The internal LUT array: Uint8ClampedArray clamps between 0 and 255.\n   *\n   * @type {Uint8ClampedArray}\n   */\n  #lut;\n\n  /**\n   * Shift for signed data.\n   *\n   * @type {number}\n   */\n  #signedShift = 0;\n\n  /**\n   * Is the RSI discrete.\n   *\n   * @type {boolean}\n   */\n  #isDiscrete = true;\n\n  /**\n   * Construct a window LUT object, VOI LUT is set with\n   *   the 'setVoiLut' method.\n   *\n   * @param {ModalityLut} modalityLut The associated rescale LUT.\n   * @param {boolean} isSigned Flag to know if the data is signed or not.\n   * @param {boolean} isDiscrete Flag to know if the input data is discrete.\n   */\n  constructor(modalityLut, isSigned, isDiscrete) {\n    this.#modalityLut = modalityLut;\n\n    if (isSigned) {\n      const size = this.#modalityLut.getLength();\n      this.#signedShift = size / 2;\n    } else {\n      this.#signedShift = 0;\n    }\n\n    this.#isDiscrete = isDiscrete;\n  }\n\n  /**\n   * Get the VOI LUT.\n   *\n   * @returns {VoiLut} The VOI LUT.\n   */\n  getVoiLut() {\n    return this.#voiLut;\n  }\n\n  /**\n   * Get the modality LUT.\n   *\n   * @returns {ModalityLut} The modality LUT.\n   */\n  getModalityLut() {\n    return this.#modalityLut;\n  }\n\n  /**\n   * Set the VOI LUT.\n   *\n   * @param {VoiLut} lut The VOI LUT.\n   */\n  setVoiLut(lut) {\n    // store the window values\n    this.#voiLut = lut;\n\n    // possible signed shift (LUT indices are positive)\n    this.#voiLut.setSignedOffset(\n      this.#modalityLut.getRSI().getSlope() * this.#signedShift);\n\n    // create lut if not continous\n    if (this.#isDiscrete) {\n      const size = this.#modalityLut.getLength();\n      // use clamped array (polyfilled in env.js)\n      this.#lut = new Uint8ClampedArray(size);\n      // by default WindowLevel returns a value in the [0,255] range\n      // this is ok with regular Arrays and ClampedArray.\n      for (let i = 0; i < size; ++i) {\n        this.#lut[i] = this.#voiLut.apply(this.#modalityLut.getValue(i));\n      }\n    }\n  }\n\n  /**\n   * Get the value of the LUT at the given offset.\n   *\n   * @param {number} offset The input offset in [0,2^bitsStored] range\n   *   for discrete data or full range for non discrete.\n   * @returns {number} The integer value (default [0,255]) of the LUT\n   *   at the given offset.\n   */\n  getValue(offset) {\n    if (this.#isDiscrete) {\n      return this.#lut[offset + this.#signedShift];\n    } else {\n      return Math.floor(this.#voiLut.apply(offset + this.#signedShift));\n    }\n  }\n\n} // class WindowLut\n","/**\n * Lookup tables for image colour display.\n */\n\nconst lut_range_max = 256;\n\n/**\n * Build a LUT of size lut_range_max.\n *\n * @param {Function} func The i to lut function.\n * @returns {number[]} The LUT.\n */\nfunction buildLut(func) {\n  const lut = [];\n  for (let i = 0; i < lut_range_max; ++i) {\n    lut.push(func(i));\n  }\n  return lut;\n}\n\n/**\n * Ramp to lut_range_max minus one on the first third values.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction toMaxFirstThird(i) {\n  const val = i * 3;\n  if (val > lut_range_max - 1) {\n    return lut_range_max - 1;\n  }\n  return val;\n}\n\n/**\n * Ramp to lut_range_max minus one on the second third values,\n *   otherwise return 0 for the first third and\n *   lut_range_max minus one for the last third.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction toMaxSecondThird(i) {\n  const third = lut_range_max / 3;\n  let val = 0;\n  if (i >= third) {\n    val = (i - third) * 3;\n    if (val > lut_range_max - 1) {\n      return lut_range_max - 1;\n    }\n  }\n  return val;\n}\n\n/**\n * Ramp to lut_range_max minus one on the last third values,\n *   otherwise return 0.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction toMaxThirdThird(i) {\n  const third = lut_range_max / 3;\n  let val = 0;\n  if (i >= 2 * third) {\n    val = (i - 2 * third) * 3;\n    if (val > lut_range_max - 1) {\n      return lut_range_max - 1;\n    }\n  }\n  return val;\n}\n\n/**\n * Identity, returns i.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction id(i) {\n  return i;\n}\n\n/**\n * Returns lut_range_max minus one minus i.\n *\n * @param {number} i The input index.\n * @returns {number} The lut value.\n */\nfunction invId(i) {\n  return (lut_range_max - 1) - i;\n}\n\n/**\n * Colour map: red, green and blue components\n *   to associate with intensity values.\n */\nexport class ColourMap {\n  /**\n   * Red component: 256 values in the [0, 255] range.\n   *\n   * @type {number[]}\n   */\n  red;\n  /**\n   * Green component: 256 values in the [0, 255] range.\n   *\n   * @type {number[]}\n   */\n  green;\n  /**\n   * Blue component: 256 values in the [0, 255] range.\n   *\n   * @type {number[]}\n   */\n  blue;\n\n  /**\n   * @param {number[]} red Red component.\n   * @param {number[]} green Green component.\n   * @param {number[]} blue Blue component.\n   */\n  constructor(red, green, blue) {\n    this.red = red;\n    this.green = green;\n    this.blue = blue;\n  }\n}\n\n/**\n * List of available lookup tables (lut).\n *\n * @type {Object<string, ColourMap>}\n */\nexport const luts = {\n  // plain\n  plain: {\n    red: buildLut(id),\n    green: buildLut(id),\n    blue: buildLut(id)\n  },\n\n  // inverse plain\n  invPlain: {\n    red: buildLut(invId),\n    green: buildLut(invId),\n    blue: buildLut(invId)\n  },\n\n  // rainbow\n  /* eslint-disable @stylistic/js/max-len */\n  rainbow: {\n    blue: [0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 148, 152, 156, 160, 164, 168, 172, 176, 180, 184, 188, 192, 196, 200, 204, 208, 212, 216, 220, 224, 228, 232, 236, 240, 244, 248, 252, 255, 247, 239, 231, 223, 215, 207, 199, 191, 183, 175, 167, 159, 151, 143, 135, 127, 119, 111, 103, 95, 87, 79, 71, 63, 55, 47, 39, 31, 23, 15, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120, 128, 136, 144, 152, 160, 168, 176, 184, 192, 200, 208, 216, 224, 232, 240, 248, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 253, 251, 249, 247, 245, 243, 241, 239, 237, 235, 233, 231, 229, 227, 225, 223, 221, 219, 217, 215, 213, 211, 209, 207, 205, 203, 201, 199, 197, 195, 193, 192, 189, 186, 183, 180, 177, 174, 171, 168, 165, 162, 159, 156, 153, 150, 147, 144, 141, 138, 135, 132, 129, 126, 123, 120, 117, 114, 111, 108, 105, 102, 99, 96, 93, 90, 87, 84, 81, 78, 75, 72, 69, 66, 63, 60, 57, 54, 51, 48, 45, 42, 39, 36, 33, 30, 27, 24, 21, 18, 15, 12, 9, 6, 3],\n    red: [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 62, 60, 58, 56, 54, 52, 50, 48, 46, 44, 42, 40, 38, 36, 34, 32, 30, 28, 26, 24, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 148, 152, 156, 160, 164, 168, 172, 176, 180, 184, 188, 192, 196, 200, 204, 208, 212, 216, 220, 224, 228, 232, 236, 240, 244, 248, 252, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n  },\n  /* eslint-enable @stylistic/js/max-len */\n\n  // hot\n  hot: {\n    red: buildLut(toMaxFirstThird),\n    green: buildLut(toMaxSecondThird),\n    blue: buildLut(toMaxThirdThird)\n  },\n\n  // hot iron\n  /* eslint-disable @stylistic/js/max-len */\n  hot_iron: {\n    red: [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 255],\n    blue: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 148, 152, 156, 160, 164, 168, 172, 176, 180, 184, 188, 192, 196, 200, 204, 208, 212, 216, 220, 224, 228, 232, 236, 240, 244, 248, 252, 255]\n  },\n  /* eslint-enable @stylistic/js/max-len */\n\n  // pet\n  /* eslint-disable @stylistic/js/max-len */\n  pet: {\n    red: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    green: [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 128, 126, 124, 122, 120, 118, 116, 114, 112, 110, 108, 106, 104, 102, 100, 98, 96, 94, 92, 90, 88, 86, 84, 82, 80, 78, 76, 74, 72, 70, 68, 66, 64, 63, 61, 59, 57, 55, 53, 51, 49, 47, 45, 43, 41, 39, 37, 35, 33, 31, 29, 27, 25, 23, 21, 19, 17, 15, 13, 11, 9, 7, 5, 3, 1, 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 255],\n    blue: [0, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 255, 252, 248, 244, 240, 236, 232, 228, 224, 220, 216, 212, 208, 204, 200, 196, 192, 188, 184, 180, 176, 172, 168, 164, 160, 156, 152, 148, 144, 140, 136, 132, 128, 124, 120, 116, 112, 108, 104, 100, 96, 92, 88, 84, 80, 76, 72, 68, 64, 60, 56, 52, 48, 44, 40, 36, 32, 28, 24, 20, 16, 12, 8, 4, 0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 170, 174, 178, 182, 186, 190, 194, 198, 202, 206, 210, 214, 218, 222, 226, 230, 234, 238, 242, 246, 250, 255]\n  },\n  /* eslint-enable @stylistic/js/max-len */\n\n  // hot metal blue\n  /* eslint-disable @stylistic/js/max-len */\n  hot_metal_blue: {\n    red: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 6, 9, 12, 15, 18, 21, 24, 26, 29, 32, 35, 38, 41, 44, 47, 50, 52, 55, 57, 59, 62, 64, 66, 69, 71, 74, 76, 78, 81, 83, 85, 88, 90, 93, 96, 99, 102, 105, 108, 111, 114, 116, 119, 122, 125, 128, 131, 134, 137, 140, 143, 146, 149, 152, 155, 158, 161, 164, 166, 169, 172, 175, 178, 181, 184, 187, 190, 194, 198, 201, 205, 209, 213, 217, 221, 224, 228, 232, 236, 240, 244, 247, 251, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 6, 8, 9, 11, 13, 15, 17, 19, 21, 23, 24, 26, 28, 30, 32, 34, 36, 38, 40, 41, 43, 45, 47, 49, 51, 53, 55, 56, 58, 60, 62, 64, 66, 68, 70, 72, 73, 75, 77, 79, 81, 83, 85, 87, 88, 90, 92, 94, 96, 98, 100, 102, 104, 105, 107, 109, 111, 113, 115, 117, 119, 120, 122, 124, 126, 128, 130, 132, 134, 136, 137, 139, 141, 143, 145, 147, 149, 151, 152, 154, 156, 158, 160, 162, 164, 166, 168, 169, 171, 173, 175, 177, 179, 181, 183, 184, 186, 188, 190, 192, 194, 196, 198, 200, 201, 203, 205, 207, 209, 211, 213, 215, 216, 218, 220, 222, 224, 226, 228, 229, 231, 233, 235, 237, 239, 240, 242, 244, 246, 248, 250, 251, 253, 255],\n    blue: [0, 2, 4, 6, 8, 10, 12, 14, 16, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 184, 186, 188, 190, 192, 194, 196, 198, 200, 197, 194, 191, 188, 185, 182, 179, 176, 174, 171, 168, 165, 162, 159, 156, 153, 150, 144, 138, 132, 126, 121, 115, 109, 103, 97, 91, 85, 79, 74, 68, 62, 56, 50, 47, 44, 41, 38, 35, 32, 29, 26, 24, 21, 18, 15, 12, 9, 6, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 6, 9, 12, 15, 18, 21, 24, 26, 29, 32, 35, 38, 41, 44, 47, 50, 53, 56, 59, 62, 65, 68, 71, 74, 76, 79, 82, 85, 88, 91, 94, 97, 100, 103, 106, 109, 112, 115, 118, 121, 124, 126, 129, 132, 135, 138, 141, 144, 147, 150, 153, 156, 159, 162, 165, 168, 171, 174, 176, 179, 182, 185, 188, 191, 194, 197, 200, 203, 206, 210, 213, 216, 219, 223, 226, 229, 232, 236, 239, 242, 245, 249, 252, 255]\n  },\n  /* eslint-enable @stylistic/js/max-len */\n\n  // pet 20 step\n  /* eslint-disable @stylistic/js/max-len */\n  pet_20step: {\n    red: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\n    blue: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\n  }\n  /* eslint-enable @stylistic/js/max-len */\n};\n","// example implementation: dcmtk/dcmiod/libsrc/cielabutil.cc\n// https://github.com/DCMTK/dcmtk/blob/DCMTK-3.6.6/dcmiod/libsrc/cielabutil.cc\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Scalar3D} from '../math/scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * RGB colour class.\n */\nexport class RGB {\n  /**\n   * Red component.\n   *\n   * @type {number}\n   */\n  r;\n  /**\n   * Green component.\n   *\n   * @type {number}\n   */\n  g;\n  /**\n   * Blue component.\n   *\n   * @type {number}\n   */\n  b;\n  /**\n   * @param {number} r Red component.\n   * @param {number} g Green component.\n   * @param {number} b Blue component.\n   */\n  constructor(r, g, b) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n  }\n}\n\n/**\n * Check if two rgb objects are equal.\n *\n * @param {RGB} c1 The first colour.\n * @param {RGB} c2 The second colour.\n * @returns {boolean} True if both colour are equal.\n */\nexport function isEqualRgb(c1, c2) {\n  return c1 !== null &&\n    c2 !== null &&\n    typeof c1 !== 'undefined' &&\n    typeof c2 !== 'undefined' &&\n    c1.r === c2.r &&\n    c1.g === c2.g &&\n    c1.b === c2.b;\n}\n\n/**\n * Convert YBR to RGB.\n *\n * Ref:\n * - {@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.7.6.3.html#sect_C.7.6.3.1.2},\n * - {@link https://en.wikipedia.org/wiki/YCbCr#JPEG_conversion}.\n *\n * @param {number} y The Y component.\n * @param {number} cb The Cb component.\n * @param {number} cr The Cr component.\n * @returns {RGB} RGB equivalent as {r,g,b}.\n */\nexport function ybrToRgb(y, cb, cr) {\n  return {\n    r: y + 1.402 * (cr - 128),\n    g: y - 0.34414 * (cb - 128) - 0.71414 * (cr - 128),\n    b: y + 1.772 * (cb - 128)\n  };\n}\n\n/**\n * Convert a hex color into RGB.\n *\n * @param {string} hexStr The hex color as '#ab01ef'.\n * @returns {RGB} The RGB values as {r,g,b}.\n */\nexport function hexToRgb(hexStr) {\n  return {\n    r: parseInt(hexStr.substring(1, 3), 16),\n    g: parseInt(hexStr.substring(3, 5), 16),\n    b: parseInt(hexStr.substring(5, 7), 16)\n  };\n}\n\n/**\n * Convert RGB to its hex equivalent.\n *\n * @param {RGB} rgb The RGB object as {r,g,b}.\n * @returns {string} A string representing the hex color as '#ab01ef'.\n */\nexport function rgbToHex(rgb) {\n  return '#' +\n    ((1 << 24) + (rgb.r << 16) + (rgb.g << 8) + rgb.b).toString(16).slice(1);\n}\n\n/**\n * Get the brightness of a RGB colour: calculates\n * the luma (Y) of the YIQ colour space.\n *\n * Ref: {@link https://en.wikipedia.org/wiki/YIQ#From_RGB_to_YIQ}.\n *\n * @param {RGB} rgb RGB triplet.\n * @returns {number} The brightness ([0,1]).\n */\nexport function getBrightness(rgb) {\n  // 0.001172549 = 0.299 / 255\n  // 0.002301961 = 0.587 / 255\n  // 0.000447059 = 0.114 / 255\n  return rgb.r * 0.001172549 +\n    rgb.g * 0.002301961 +\n    rgb.b * 0.000447059;\n}\n\n/**\n * Check if a colour given in hexadecimal format is dark.\n *\n * @param {string} hexColour The colour (as '#ab01ef').\n * @returns {boolean} True if the colour is dark (brightness < 0.5).\n */\nexport function isDarkColour(hexColour) {\n  return getBrightness(hexToRgb(hexColour)) < 0.5;\n}\n\n/**\n * Get the shadow colour of an input colour.\n *\n * @param {string} hexColour The colour (as '#ab01ef').\n * @returns {string} The shadow colour (white or black).\n */\nexport function getShadowColour(hexColour) {\n  return isDarkColour(hexColour) ? '#fff' : '#000';\n}\n\n/**\n * Unsigned int CIE LAB value ([0, 65535]) to CIE LAB value\n *   (L: [0, 100], a: [-128, 127], b: [-128, 127]).\n *\n * @param {object} triplet CIE LAB triplet as {l,a,b} with unsigned range.\n * @returns {object} CIE LAB triplet as {l,a,b} with CIE LAB range.\n */\nexport function uintLabToLab(triplet) {\n  // 0.001525902 = 100 / 65535\n  // 0.003891051 = 255 / 65535\n  return {\n    l: 0.001525902 * triplet.l,\n    a: 0.003891051 * triplet.a - 128,\n    b: 0.003891051 * triplet.b - 128,\n  };\n}\n\n/**\n * CIE LAB value (L: [0, 100], a: [-128, 127], b: [-128, 127]) to\n *   unsigned int CIE LAB ([0, 65535]).\n *\n * @param {object} triplet CIE XYZ triplet as {l,a,b} with CIE LAB range.\n * @returns {object} CIE LAB triplet as {l,a,b} with unsigned range.\n */\nexport function labToUintLab(triplet) {\n  // 655.35 = 65535 / 100\n  // aUint = (a + 128) * 65535 / 255\n  // 257 = 65535 / 255\n  // 32896 = 257 * 128\n  return {\n    l: 655.35 * triplet.l,\n    a: 257 * triplet.a + 32896,\n    b: 257 * triplet.b + 32896,\n  };\n}\n\n/**\n * CIE Standard Illuminant D65, standard 2° observer.\n *\n * Ref: {@link https://en.wikipedia.org/wiki/Illuminant_D65}.\n */\nconst d65 = {\n  x: 95.0489,\n  y: 100,\n  z: 108.884\n};\n\n/**\n * Convert CIE LAB to CIE XYZ (standard illuminant D65, 2degree 1931).\n *\n * Ref: {@link https://en.wikipedia.org/wiki/CIELAB_color_space#From_CIELAB_to_CIEXYZ}.\n *\n * @param {object} triplet CIE LAB triplet as {l,a,b}.\n * @returns {Scalar3D} CIE XYZ triplet as {x,y,z}.\n */\nexport function cielabToCiexyz(triplet) {\n  /**\n   * Apply the inverse lab function.\n   *\n   * @param {number} x The input value.\n   * @returns {number} The result.\n   */\n  function invLabFunc(x) {\n    let res = null;\n    // delta = 6 / 29 = 0.206896552\n    if (x > 0.206896552) {\n      res = Math.pow(x, 3);\n    } else {\n      // 0.128418549 = 3 * delta^2\n      // 0.017712903 = 3 * delta^2 * (4 / 29)\n      res = 0.128418549 * x - 0.017712903;\n    }\n    return res;\n  }\n\n  const illuminant = d65;\n  const l0 = (triplet.l + 16) / 116;\n\n  return {\n    x: illuminant.x * invLabFunc(l0 + triplet.a / 500),\n    y: illuminant.y * invLabFunc(l0),\n    z: illuminant.z * invLabFunc(l0 - triplet.b / 200)\n  };\n}\n\n/**\n * Convert CIE XYZ to CIE LAB (standard illuminant D65, 2degree 1931).\n *\n * Ref: {@link https://en.wikipedia.org/wiki/CIELAB_color_space#From_CIEXYZ_to_CIELAB}.\n *\n * @param {Scalar3D} triplet CIE XYZ triplet as {x,y,z}.\n * @returns {object} CIE LAB triplet as {l,a,b}.\n */\nexport function ciexyzToCielab(triplet) {\n  /**\n   * Apply the lab function.\n   *\n   * @param {number} x The input value.\n   * @returns {number} The result.\n   */\n  function labFunc(x) {\n    let res = null;\n    // delta = 6 / 29 = 0.206896552\n    // delta^3 = 0.008856452\n    if (x > 0.008856452) {\n      res = Math.pow(x, 0.333333333);\n    } else {\n      // 7.787037037 = 1 / 3 * delta^2\n      // 0.137931034 = 4 / 29\n      res = 7.787037037 * x + 0.137931034;\n    }\n    return res;\n  }\n\n  const illuminant = d65;\n  const fy = labFunc(triplet.y / illuminant.y);\n\n  return {\n    l: 116 * fy - 16,\n    a: 500 * (labFunc(triplet.x / illuminant.x) - fy),\n    b: 200 * (fy - labFunc(triplet.z / illuminant.z))\n  };\n}\n\n/**\n * Convert CIE XYZ to sRGB.\n *\n * Ref: {@link https://en.wikipedia.org/wiki/SRGB#From_CIE_XYZ_to_sRGB}.\n *\n * @param {Scalar3D} triplet CIE XYZ triplet as {x,y,z}.\n * @returns {RGB} 'sRGB' triplet as {r,g,b}.\n */\nexport function ciexyzToSrgb(triplet) {\n  /**\n   * Apply the gamma function.\n   *\n   * @param {number} x The input value.\n   * @returns {number} The result.\n   */\n  function gammaFunc(x) {\n    let res = null;\n    if (x <= 0.0031308) {\n      res = 12.92 * x;\n    } else {\n      // 0.416666667 = 1 / 2.4\n      res = 1.055 * Math.pow(x, 0.416666667) - 0.055;\n    }\n    // clip [0,1]\n    return Math.min(1, Math.max(0, res));\n  }\n\n  const x = triplet.x / 100;\n  const y = triplet.y / 100;\n  const z = triplet.z / 100;\n\n  return {\n    r: Math.round(255 * gammaFunc(3.2406 * x - 1.5372 * y - 0.4986 * z)),\n    g: Math.round(255 * gammaFunc(-0.9689 * x + 1.8758 * y + 0.0415 * z)),\n    b: Math.round(255 * gammaFunc(0.0557 * x - 0.2040 * y + 1.0570 * z))\n  };\n}\n\n/**\n * Convert sRGB to CIE XYZ.\n *\n * Ref: {@link https://en.wikipedia.org/wiki/SRGB#From_sRGB_to_CIE_XYZ}.\n *\n * @param {RGB} triplet 'sRGB' triplet as {r,g,b}.\n * @returns {Scalar3D} CIE XYZ triplet as {x,y,z}.\n */\nexport function srgbToCiexyz(triplet) {\n  /**\n   * Apply the inverse gamma function.\n   *\n   * @param {number} x The input value.\n   * @returns {number} The result.\n   */\n  function invGammaFunc(x) {\n    let res = null;\n    if (x <= 0.04045) {\n      res = x / 12.92;\n    } else {\n      res = Math.pow((x + 0.055) / 1.055, 2.4);\n    }\n    return res;\n  }\n\n  const rl = invGammaFunc(triplet.r / 255);\n  const gl = invGammaFunc(triplet.g / 255);\n  const bl = invGammaFunc(triplet.b / 255);\n\n  return {\n    x: 100 * (0.4124 * rl + 0.3576 * gl + 0.1805 * bl),\n    y: 100 * (0.2126 * rl + 0.7152 * gl + 0.0722 * bl),\n    z: 100 * (0.0193 * rl + 0.1192 * gl + 0.9505 * bl)\n  };\n}\n\n/**\n * Convert CIE LAB to sRGB (standard illuminant D65).\n *\n * @param {object} triplet CIE LAB triplet as {l,a,b}.\n * @returns {RGB} 'sRGB' triplet as {r,g,b}.\n */\nexport function cielabToSrgb(triplet) {\n  return ciexyzToSrgb(cielabToCiexyz(triplet));\n}\n\n/**\n * Convert sRGB to CIE LAB (standard illuminant D65).\n *\n * @param {RGB} triplet 'sRGB' triplet as {r,g,b}.\n * @returns {object} CIE LAB triplet as {l,a,b}.\n */\nexport function srgbToCielab(triplet) {\n  return ciexyzToCielab(srgbToCiexyz(triplet));\n}\n\n/**\n * Get the hex code of a string colour for a colour used in pre dwv v0.17.\n *\n * @param {string} name The name of a colour.\n * @returns {string} The hex representing the colour.\n */\nexport function colourNameToHex(name) {\n  // default colours used in dwv version < 0.17\n  const dict = {\n    Yellow: '#ffff00',\n    Red: '#ff0000',\n    White: '#ffffff',\n    Green: '#008000',\n    Blue: '#0000ff',\n    Lime: '#00ff00',\n    Fuchsia: '#ff00ff',\n    Black: '#000000'\n  };\n  let res = '#ffff00';\n  if (typeof dict[name] !== 'undefined') {\n    res = dict[name];\n  }\n  return res;\n}\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {WindowLevel} from '../image/windowLevel';\n/* eslint-enable no-unused-vars */\n\n/**\n * Overridalbe custom object for client defined items.\n */\nexport const custom = {\n  /**\n   * List of default window level presets. Indexed bu modality\n   * and then by preset name. For example `wlPresets.MR.mediastimun`.\n   * No need to redefine all, just overrides is enough. Defaults\n   * are used if `custom.wlPresets[modality]` is undefined.\n   *\n   * @type {Object.<string, Object.<string, WindowLevel>>}\n   */\n  wlPresets: undefined,\n\n  /**\n   * List of default shape label texts. Indexed by shape name\n   * and then by modality. For example `labelTexts.arrow.MR`.\n   * No need to redefine all, just overrides is enough. Defaults\n   * are used if `custom.labelTexts[shapeName]` is undefined.\n   *\n   * @type {Object.<string, Object.<string, string>>}\n   */\n  labelTexts: undefined,\n\n  /**\n   * Open a dialogue to edit roi data. Defaults to window.prompt.\n   *\n   * @param {Annotation} annotation The roi data.\n   * @param {Function} callback The callback to launch on dialogue exit.\n   */\n  openRoiDialog: undefined,\n\n  /**\n   * Get the time from a list of dicom tags.\n   *\n   * @param {Object<string, DataElement>} elements The DICOM elements.\n   * @returns {number|undefined} The time value if available.\n   */\n  getTagTime: undefined,\n\n  /**\n   * Get the pixel data unit from a list of dicom tags.\n   * Not used for PET data with SUV values.\n   *\n   * @param {Object<string, DataElement>} elements The DICOM elements.\n   * @returns {string|undefined} The unit value if available.\n   */\n  getTagPixelUnit: undefined,\n\n\n};","/**\n * Immutable 3D vector.\n */\nexport class Vector3D {\n\n  /**\n   * X coordinate.\n   *\n   * @type {number}\n   */\n  #x;\n\n  /**\n   * Y coordinate.\n   *\n   * @type {number}\n   */\n  #y;\n\n  /**\n   * Z coordinate.\n   *\n   * @type {number}\n   */\n  #z;\n\n  /**\n   * @param {number} x The X component of the vector.\n   * @param {number} y The Y component of the vector.\n   * @param {number} z The Z component of the vector.\n   */\n  constructor(x, y, z) {\n    this.#x = x;\n    this.#y = y;\n    this.#z = z;\n  }\n\n  /**\n   * Get the X component of the vector.\n   *\n   * @returns {number} The X component of the vector.\n   */\n  getX() {\n    return this.#x;\n  }\n\n  /**\n   * Get the Y component of the vector.\n   *\n   * @returns {number} The Y component of the vector.\n   */\n  getY() {\n    return this.#y;\n  }\n\n  /**\n   * Get the Z component of the vector.\n   *\n   * @returns {number} The Z component of the vector.\n   */\n  getZ() {\n    return this.#z;\n  }\n\n  /**\n   * Check for Vector3D equality.\n   *\n   * @param {Vector3D} rhs The other vector to compare to.\n   * @returns {boolean} True if both vectors are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.#x === rhs.getX() &&\n      this.#y === rhs.getY() &&\n      this.#z === rhs.getZ();\n  }\n\n  /**\n   * Get a string representation of the Vector3D.\n   *\n   * @returns {string} The vector as a string.\n   */\n  toString() {\n    return '(' + this.#x +\n      ', ' + this.#y +\n      ', ' + this.#z + ')';\n  }\n\n  /**\n   * Get the norm of the vector.\n   *\n   * @returns {number} The norm.\n   */\n  norm() {\n    return Math.sqrt(\n      (this.#x * this.#x) +\n      (this.#y * this.#y) +\n      (this.#z * this.#z)\n    );\n  }\n\n  /**\n   * Get the cross product with another Vector3D, ie the\n   * vector that is perpendicular to both a and b.\n   * If both vectors are parallel, the cross product is a zero vector.\n   *\n   * Ref: {@link https://en.wikipedia.org/wiki/Cross_product}.\n   *\n   * @param {Vector3D} vector3D The input vector.\n   * @returns {Vector3D} The result vector.\n   */\n  crossProduct(vector3D) {\n    return new Vector3D(\n      (this.#y * vector3D.getZ()) - (vector3D.getY() * this.#z),\n      (this.#z * vector3D.getX()) - (vector3D.getZ() * this.#x),\n      (this.#x * vector3D.getY()) - (vector3D.getX() * this.#y));\n  }\n\n  /**\n   * Get the dot product with another Vector3D.\n   *\n   * Ref: {@link https://en.wikipedia.org/wiki/Dot_product}.\n   *\n   * @param {Vector3D} vector3D The input vector.\n   * @returns {number} The dot product.\n   */\n  dotProduct(vector3D) {\n    return (this.#x * vector3D.getX()) +\n      (this.#y * vector3D.getY()) +\n      (this.#z * vector3D.getZ());\n  }\n\n  /**\n   * Is this vector codirectional to an input one.\n   *\n   * @param {Vector3D} vector3D The vector to test.\n   * @returns {boolean} True if codirectional, false is opposite.\n   */\n  isCodirectional(vector3D) {\n    // a.dot(b) = ||a|| * ||b|| * cos(theta)\n    // (https://en.wikipedia.org/wiki/Dot_product#Geometric_definition)\n    // -> the sign of the dot product depends on the cosinus of\n    //    the angle between the vectors\n    //   -> >0 => vectors are codirectional\n    //   -> <0 => vectors are opposite\n    return this.dotProduct(vector3D) > 0;\n  }\n\n} // Vector3D class","import {Vector3D} from './vector';\nimport {Point3D} from './point';\nimport {Index} from './index';\nimport {logger} from '../utils/logger';\n\n// Number.EPSILON is difference between 1 and the smallest\n// floating point number greater than 1\n// -> ~2e-16\n// BIG_EPSILON -> ~2e-12\nexport const BIG_EPSILON = Number.EPSILON * 1e4;\nexport const BIG_EPSILON_EXPONENT = 12;\n// 'real world', for example when comparing positions\nexport const REAL_WORLD_EPSILON = 1e-4;\n\n/**\n * Check if two numbers are similar.\n *\n * @param {number} a The first number.\n * @param {number} b The second number.\n * @param {number} [tol] Optional comparison tolerance,\n *   defaults to Number.EPSILON.\n * @returns {boolean} True if similar.\n */\nexport function isSimilar(a, b, tol) {\n  if (typeof tol === 'undefined') {\n    tol = Number.EPSILON;\n  }\n  return Math.abs(a - b) < tol;\n}\n\n/**\n * Immutable 3x3 Matrix.\n */\nexport class Matrix33 {\n\n  /**\n   * Matrix values.\n   *\n   * @type {number[]}\n   */\n  #values;\n\n  /**\n   * Matrix inverse, calculated at first ask.\n   *\n   * @type {Matrix33}\n   */\n  #inverse;\n\n  /**\n   * @param {number[]} values Row-major ordered 9 values.\n   */\n  constructor(values) {\n    this.#values = values;\n  }\n\n  /**\n   * Get a value of the matrix.\n   *\n   * @param {number} row The row at wich to get the value.\n   * @param {number} col The column at wich to get the value.\n   * @returns {number|undefined} The value at the position.\n   */\n  get(row, col) {\n    return this.#values[row * 3 + col];\n  }\n\n  /**\n   * Get the inverse of this matrix.\n   *\n   * @returns {Matrix33|undefined} The inverse matrix or undefined\n   *   if the determinant is zero.\n   */\n  getInverse() {\n    if (typeof this.#inverse === 'undefined') {\n      this.#inverse = getMatrixInverse(this);\n    }\n    return this.#inverse;\n  }\n\n  /**\n   * Check for Matrix33 equality.\n   *\n   * @param {Matrix33} rhs The other matrix to compare to.\n   * @returns {boolean} True if both matrices are equal.\n   */\n  equals(rhs) {\n    // TODO: add type check\n    // check values\n    for (let i = 0; i < 3; ++i) {\n      for (let j = 0; j < 3; ++j) {\n        if (this.get(i, j) !== rhs.get(i, j)) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Check for Matrix33 similarity.\n   *\n   * @param {Matrix33} rhs The other matrix to compare to.\n   * @param {number} [tol] Optional number comparison tolerance,\n   *   defaults to Number.EPSILON.\n   * @returns {boolean} True if both matrices are similar.\n   */\n  isSimilar(rhs, tol) {\n    // TODO: add type check\n    // check values\n    for (let i = 0; i < 3; ++i) {\n      for (let j = 0; j < 3; ++j) {\n        if (!isSimilar(this.get(i, j), rhs.get(i, j), tol)) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Get a string representation of the Matrix33.\n   *\n   * @returns {string} The matrix as a string.\n   */\n  toString() {\n    let str = '[';\n    for (let i = 0; i < 3; ++i) {\n      if (i !== 0) {\n        str += ', \\n ';\n      }\n      for (let j = 0; j < 3; ++j) {\n        if (j !== 0) {\n          str += ', ';\n        }\n        str += this.get(i, j);\n      }\n    }\n    str += ']';\n    return str;\n  }\n\n  /**\n   * Multiply this matrix by another.\n   *\n   * @param {Matrix33} rhs The matrix to multiply by.\n   * @returns {Matrix33} The product matrix.\n   */\n  multiply(rhs) {\n    const values = [];\n    for (let i = 0; i < 3; ++i) {\n      for (let j = 0; j < 3; ++j) {\n        let tmp = 0;\n        for (let k = 0; k < 3; ++k) {\n          tmp += this.get(i, k) * rhs.get(k, j);\n        }\n        values.push(tmp);\n      }\n    }\n    return new Matrix33(values);\n  }\n\n  /**\n   * Get the absolute value of this matrix.\n   *\n   * @returns {Matrix33} The result matrix.\n   */\n  getAbs() {\n    const values = [];\n    for (let i = 0; i < 3; ++i) {\n      for (let j = 0; j < 3; ++j) {\n        values.push(Math.abs(this.get(i, j)));\n      }\n    }\n    return new Matrix33(values);\n  }\n\n  /**\n   * Multiply this matrix by a 3D array.\n   *\n   * @param {number[]} array3D The input 3D array.\n   * @returns {number[]} The result 3D array.\n   */\n  multiplyArray3D(array3D) {\n    if (array3D.length !== 3) {\n      throw new Error('Cannot multiply 3x3 matrix with non 3D array: ' +\n        array3D.length);\n    }\n    const values = [];\n    for (let i = 0; i < 3; ++i) {\n      let tmp = 0;\n      for (let j = 0; j < 3; ++j) {\n        tmp += this.get(i, j) * array3D[j];\n      }\n      values.push(tmp);\n    }\n    return values;\n  }\n\n  /**\n   * Multiply this matrix by a 3D vector.\n   *\n   * @param {Vector3D} vector3D The input 3D vector.\n   * @returns {Vector3D} The result 3D vector.\n   */\n  multiplyVector3D(vector3D) {\n    const array3D = this.multiplyArray3D(\n      [vector3D.getX(), vector3D.getY(), vector3D.getZ()]\n    );\n    return new Vector3D(array3D[0], array3D[1], array3D[2]);\n  }\n\n  /**\n   * Multiply this matrix by a 3D point.\n   *\n   * @param {Point3D} point3D The input 3D point.\n   * @returns {Point3D} The result 3D point.\n   */\n  multiplyPoint3D(point3D) {\n    const array3D = this.multiplyArray3D(\n      [point3D.getX(), point3D.getY(), point3D.getZ()]\n    );\n    return new Point3D(array3D[0], array3D[1], array3D[2]);\n  }\n\n  /**\n   * Multiply this matrix by a 3D index.\n   *\n   * @param {Index} index3D The input 3D index.\n   * @returns {Index} The result 3D index.\n   */\n  multiplyIndex3D(index3D) {\n    const array3D = this.multiplyArray3D(index3D.getValues());\n    return new Index(array3D);\n  }\n\n  /**\n   * Get the index of the maximum in absolute value of a row.\n   *\n   * @param {number} row The row to get the maximum from.\n   * @returns {object} The {value,index} of the maximum.\n   */\n  getRowAbsMax(row) {\n    const values = [\n      Math.abs(this.get(row, 0)),\n      Math.abs(this.get(row, 1)),\n      Math.abs(this.get(row, 2))\n    ];\n    const absMax = Math.max.apply(null, values);\n    const index = values.indexOf(absMax);\n    return {\n      value: this.get(row, index),\n      index: index\n    };\n  }\n\n  /**\n   * Get the index of the maximum in absolute value of a column.\n   *\n   * @param {number} col The column to get the maximum from.\n   * @returns {object} The {value,index} of the maximum.\n   */\n  getColAbsMax(col) {\n    const values = [\n      Math.abs(this.get(0, col)),\n      Math.abs(this.get(1, col)),\n      Math.abs(this.get(2, col))\n    ];\n    const absMax = Math.max.apply(null, values);\n    const index = values.indexOf(absMax);\n    return {\n      value: this.get(index, col),\n      index: index\n    };\n  }\n\n  /**\n   * Get this matrix with only zero and +/- ones instead of the maximum.\n   *\n   * @returns {Matrix33} The simplified matrix.\n   */\n  asOneAndZeros() {\n    const res = [];\n    for (let j = 0; j < 3; ++j) {\n      const max = this.getRowAbsMax(j);\n      const sign = max.value > 0 ? 1 : -1;\n      for (let i = 0; i < 3; ++i) {\n        if (i === max.index) {\n          res.push(1 * sign);\n        } else {\n          res.push(0);\n        }\n      }\n    }\n    return new Matrix33(res);\n  }\n\n  /**\n   * Get the third column direction index of an orientation matrix.\n   *\n   * @returns {number} The index of the absolute maximum of the last column.\n   */\n  getThirdColMajorDirection() {\n    return this.getColAbsMax(2).index;\n  }\n\n} // Matrix33\n\n/**\n * Get the inverse of an input 3*3 matrix.\n *\n * Ref:\n * - {@link https://en.wikipedia.org/wiki/Invertible_matrix#Inversion_of_3_%C3%97_3_matrices},\n * - {@link https://github.com/willnode/N-Matrix-Programmer}.\n *\n * @param {Matrix33} m The input matrix.\n * @returns {Matrix33|undefined} The inverse matrix or undefined\n *   if the determinant is zero.\n */\nfunction getMatrixInverse(m) {\n  const m00 = m.get(0, 0);\n  const m01 = m.get(0, 1);\n  const m02 = m.get(0, 2);\n  const m10 = m.get(1, 0);\n  const m11 = m.get(1, 1);\n  const m12 = m.get(1, 2);\n  const m20 = m.get(2, 0);\n  const m21 = m.get(2, 1);\n  const m22 = m.get(2, 2);\n\n  const a1212 = m11 * m22 - m12 * m21;\n  const a2012 = m12 * m20 - m10 * m22;\n  const a0112 = m10 * m21 - m11 * m20;\n\n  let det = m00 * a1212 + m01 * a2012 + m02 * a0112;\n  if (det === 0) {\n    logger.warn('Cannot invert 3*3 matrix with zero determinant.');\n    return undefined;\n  }\n  det = 1 / det;\n\n  const values = [\n    det * a1212,\n    det * (m02 * m21 - m01 * m22),\n    det * (m01 * m12 - m02 * m11),\n    det * a2012,\n    det * (m00 * m22 - m02 * m20),\n    det * (m02 * m10 - m00 * m12),\n    det * a0112,\n    det * (m01 * m20 - m00 * m21),\n    det * (m00 * m11 - m01 * m10)\n  ];\n\n  return new Matrix33(values);\n}\n\n/**\n * Create a 3x3 identity matrix.\n *\n * @returns {Matrix33} The identity matrix.\n */\nexport function getIdentityMat33() {\n  /* eslint-disable @stylistic/js/array-element-newline */\n  return new Matrix33([\n    1, 0, 0,\n    0, 1, 0,\n    0, 0, 1\n  ]);\n  /* eslint-enable @stylistic/js/array-element-newline */\n}\n\n/**\n * Check if a matrix is a 3x3 identity matrix.\n *\n * @param {Matrix33} mat33 The matrix to test.\n * @returns {boolean} True if identity.\n */\nexport function isIdentityMat33(mat33) {\n  return mat33.equals(getIdentityMat33());\n}\n","import {isSimilar} from './matrix';\nimport {Vector3D} from './vector';\n\n/**\n * Immutable 2D point.\n */\nexport class Point2D {\n\n  /**\n   * X position.\n   *\n   * @type {number}\n   */\n  #x;\n\n  /**\n   * Y position.\n   *\n   * @type {number}\n   */\n  #y;\n\n  /**\n   * @param {number} x The X coordinate for the point.\n   * @param {number} y The Y coordinate for the point.\n   */\n  constructor(x, y) {\n    this.#x = x;\n    this.#y = y;\n  }\n\n  /**\n   * Get the X position of the point.\n   *\n   * @returns {number} The X position of the point.\n   */\n  getX() {\n    return this.#x;\n  }\n\n  /**\n   * Get the Y position of the point.\n   *\n   * @returns {number} The Y position of the point.\n   */\n  getY() {\n    return this.#y;\n  }\n\n  /**\n   * Get the values of this point.\n   *\n   * @returns {number[]} The array of values.\n   */\n  getValues() {\n    return [this.#x, this.#y];\n  }\n\n  /**\n   * Get the centroid of the point, ie itself.\n   *\n   * @returns {Point2D} The centroid point.\n   */\n  getCentroid() {\n    return this;\n  }\n\n  /**\n   * Check for Point2D equality.\n   *\n   * @param {Point2D} rhs The other point to compare to.\n   * @returns {boolean} True if both points are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      typeof rhs !== 'undefined' &&\n      this.#x === rhs.getX() &&\n      this.#y === rhs.getY();\n  }\n\n  /**\n   * Get a string representation of the Point2D.\n   *\n   * @returns {string} The point as a string.\n   */\n  toString() {\n    return '(' + this.#x + ', ' + this.#y + ')';\n  }\n\n  /**\n   * Get the distance to another Point2D.\n   *\n   * @param {Point2D} point2D The input point.\n   * @returns {number} Ths distance to the input point.\n   */\n  getDistance(point2D) {\n    const dx = this.#x - point2D.getX();\n    const dy = this.#y - point2D.getY();\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n} // Point2D class\n\n/**\n * Immutable 3D point.\n */\nexport class Point3D {\n\n  /**\n   * X position.\n   *\n   * @type {number}\n   */\n  #x;\n\n  /**\n   * Y position.\n   *\n   * @type {number}\n   */\n  #y;\n\n  /**\n   * Z position.\n   *\n   * @type {number}\n   */\n  #z;\n\n  /**\n   * @param {number} x The X coordinate for the point.\n   * @param {number} y The Y coordinate for the point.\n   * @param {number} z The Z coordinate for the point.\n   */\n  constructor(x, y, z) {\n    this.#x = x;\n    this.#y = y;\n    this.#z = z;\n  }\n\n  /**\n   * Get the X position of the point.\n   *\n   * @returns {number} The X position of the point.\n   */\n  getX() {\n    return this.#x;\n  }\n\n  /**\n   * Get the Y position of the point.\n   *\n   * @returns {number} The Y position of the point.\n   */\n  getY() {\n    return this.#y;\n  }\n\n  /**\n   * Get the Z position of the point.\n   *\n   * @returns {number} The Z position of the point.\n   */\n  getZ() {\n    return this.#z;\n  }\n\n  /**\n   * Get the values of this point.\n   *\n   * @returns {number[]} The array of values.\n   */\n  getValues() {\n    return [this.#x, this.#y, this.#z];\n  }\n\n  /**\n   * Check for Point3D equality.\n   *\n   * @param {Point3D} rhs The other point to compare to.\n   * @returns {boolean} True if both points are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.#x === rhs.getX() &&\n      this.#y === rhs.getY() &&\n      this.#z === rhs.getZ();\n  }\n\n  /**\n   * Check for Point3D similarity.\n   *\n   * @param {Point3D} rhs The other point to compare to.\n   * @param {number} [tol] Optional number comparison tolerance,\n   *   defaults to Number.EPSILON.\n   * @returns {boolean} True if both points are similar.\n   */\n  isSimilar(rhs, tol) {\n    return rhs !== null &&\n      isSimilar(this.#x, rhs.getX(), tol) &&\n      isSimilar(this.#y, rhs.getY(), tol) &&\n      isSimilar(this.#z, rhs.getZ(), tol);\n  }\n\n  /**\n   * Get a string representation of the Point3D.\n   *\n   * @returns {string} The point as a string.\n   */\n  toString() {\n    return '(' + this.#x +\n      ', ' + this.#y +\n      ', ' + this.#z + ')';\n  }\n\n  /**\n   * Get the distance to another Point3D.\n   *\n   * @param {Point3D} point3D The input point.\n   * @returns {number} Ths distance to the input point.\n   */\n  getDistance(point3D) {\n    return Math.sqrt(this.#getSquaredDistance(point3D));\n  }\n\n  /**\n   * Get the square of the distance between this and\n   * an input point. Used for sorting.\n   *\n   * @param {Point3D} point3D The input point.\n   * @returns {number} The square of the distance.\n   */\n  #getSquaredDistance(point3D) {\n    const dx = this.#x - point3D.getX();\n    const dy = this.#y - point3D.getY();\n    const dz = this.#z - point3D.getZ();\n    return dx * dx + dy * dy + dz * dz;\n  }\n\n  /**\n   * Get the closest point to this in a Point3D list.\n   *\n   * @param {Point3D[]} pointList The list to check.\n   * @returns {number} The index of the closest point in the input list.\n   */\n  getClosest(pointList) {\n    let minIndex = 0;\n    // the order between squared distances and distances is the same\n    let minDist = this.#getSquaredDistance(pointList[minIndex]);\n    for (let i = 0; i < pointList.length; ++i) {\n      const dist = this.#getSquaredDistance(pointList[i]);\n      if (dist < minDist) {\n        minIndex = i;\n        minDist = dist;\n      }\n    }\n    return minIndex;\n  }\n\n  /**\n   * Get the difference to another Point3D.\n   *\n   * @param {Point3D} point3D The input point.\n   * @returns {Vector3D} The 3D vector from the input point to this one.\n   */\n  minus(point3D) {\n    return new Vector3D(\n      (this.#x - point3D.getX()),\n      (this.#y - point3D.getY()),\n      (this.#z - point3D.getZ()));\n  }\n\n} // Point3D class\n\n/**\n * Get an array find callback for an equal input point.\n *\n * @param {Point3D} point The point to compare to.\n * @returns {Function} A function that compares, using `equals`,\n *   its input point to the one given as input to this function.\n */\nexport function getEqualPoint3DFunction(point) {\n  return function (element) {\n    return element.equals(point);\n  };\n}\n\n/**\n * Immutable point.\n * Warning: the input array is NOT cloned, modifying it will\n *  modify the point values.\n */\nexport class Point {\n\n  /**\n   * Point values.\n   *\n   * @type {number[]}\n   */\n  #values;\n\n  /**\n   * @param {number[]} values The point values.\n   */\n  constructor(values) {\n    if (!values || typeof values === 'undefined') {\n      throw new Error('Cannot create point with no values.');\n    }\n    if (values.length === 0) {\n      throw new Error('Cannot create point with empty values.');\n    }\n    const valueCheck = function (val) {\n      return !isNaN(val);\n    };\n    if (!values.every(valueCheck)) {\n      throw new Error('Cannot create point with non number values.');\n    }\n    this.#values = values;\n  }\n\n  /**\n   * Get the point value at the given array index.\n   *\n   * @param {number} i The index to get.\n   * @returns {number} The value.\n   */\n  get(i) {\n    return this.#values[i];\n  }\n\n  /**\n   * Get the length of the point.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return this.#values.length;\n  }\n\n  /**\n   * Get a string representation of the point.\n   *\n   * @returns {string} The point as a string.\n   */\n  toString() {\n    return '(' + this.#values.toString() + ')';\n  }\n\n  /**\n   * Get the values of this point.\n   *\n   * @returns {number[]} The array of values.\n   */\n  getValues() {\n    return this.#values.slice();\n  }\n\n  /**\n   * Check if the input point can be compared to this one.\n   *\n   * @param {Point} rhs The point to compare to.\n   * @returns {boolean} True if both points are comparable.\n   */\n  canCompare(rhs) {\n    // check input\n    if (!rhs) {\n      return false;\n    }\n    // check length\n    if (this.length() !== rhs.length()) {\n      return false;\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Check for Point equality.\n   *\n   * @param {Point} rhs The point to compare to.\n   * @returns {boolean} True if both points are equal.\n   */\n  equals(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return false;\n    }\n    // check values\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Compare points and return different dimensions.\n   *\n   * @param {Point} rhs The point to compare to.\n   * @returns {number[]} The list of different dimensions.\n   */\n  compare(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return null;\n    }\n    // check values\n    const diffDims = [];\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        diffDims.push(i);\n      }\n    }\n    return diffDims;\n  }\n\n  /**\n   * Get the 3D part of this point.\n   *\n   * @returns {Point3D} The Point3D.\n   */\n  get3D() {\n    return new Point3D(this.get(0), this.get(1), this.get(2));\n  }\n\n  /**\n   * Add another point to this one.\n   *\n   * @param {Point} rhs The point to add.\n   * @returns {Point} The point representing the sum of both points.\n   */\n  add(rhs) {\n    // check if can compare\n    if (!this.canCompare(rhs)) {\n      return null;\n    }\n    const values = [];\n    const values0 = this.getValues();\n    const values1 = rhs.getValues();\n    for (let i = 0; i < values0.length; ++i) {\n      values.push(values0[i] + values1[i]);\n    }\n    return new Point(values);\n  }\n\n  /**\n   * Merge this point with a Point3D to create a new point.\n   *\n   * @param {Point3D} rhs The Point3D to merge with.\n   * @returns {Point} The merge result.\n   */\n  mergeWith3D(rhs) {\n    const values = this.getValues();\n    values[0] = rhs.getX();\n    values[1] = rhs.getY();\n    values[2] = rhs.getZ();\n    return new Point(values);\n  }\n\n} // Point class\n","/**\n * Namespace for translation function\n *   (in a namespace to allow for override from client).\n */\nexport const i18n = {\n\n  /**\n   * Get the translated text.\n   *\n   * @param {string} key The key to the text entry.\n   * @returns {string|undefined} The translated text.\n   */\n  t(key) {\n    let res = key;\n    const props = key.split('.');\n    // defaut units look like 'unit.cm2'\n    if (props.length === 2 &&\n      props[0] === 'unit') {\n      const units = {\n        mm: 'mm',\n        cm2: 'cm²',\n        degree: '°'\n      };\n      res = units[props[1]];\n    }\n    return res;\n  }\n\n};\n","\nimport {i18n} from './i18n';\n\n/**\n * Capitalise the first letter of a string.\n *\n * @param {string} string The string to capitalise the first letter.\n * @returns {string} The new string.\n */\nexport function capitaliseFirstLetter(string) {\n  let res = string;\n  if (string) {\n    res = string.charAt(0).toUpperCase() + string.slice(1);\n  }\n  return res;\n}\n\n/**\n * Check if a string starts with the input element.\n *\n * @param {string} str The input string.\n * @param {string} search The searched start.\n * @param {number} [rawPos] The position in this string at which to begin\n *  searching for searchString. Defaults to 0.\n * @returns {boolean} True if the input string starts with the searched string.\n */\nexport function startsWith(str, search, rawPos) {\n  if (typeof str === 'undefined' || str === null ||\n    typeof search === 'undefined' || search === null) {\n    return false;\n  }\n  const pos = rawPos > 0 ? rawPos | 0 : 0;\n  return str.substring(pos, pos + search.length) === search;\n}\n\n/**\n * Check if a string ends with the input element.\n *\n * @param {string} str The input string.\n * @param {string} search The searched ending.\n * @returns {boolean} True if the input string ends with the searched string.\n */\nexport function endsWith(str, search) {\n  if (typeof str === 'undefined' || str === null ||\n    typeof search === 'undefined' || search === null) {\n    return false;\n  }\n  return str.substring(str.length - search.length) === search;\n}\n\n/**\n * Split key/value string: `key0=val00&key0=val01&key1=val10\n *   will return `{key0 : [val00, val01], key1 : val1}`.\n *\n * @param {string} inputStr The string to split.\n * @returns {object} The split string.\n */\nexport function splitKeyValueString(inputStr) {\n  // result\n  const result = {};\n  // check input string\n  if (inputStr) {\n    // split key/value pairs\n    const pairs = inputStr.split('&');\n    for (let i = 0; i < pairs.length; ++i) {\n      const pair = pairs[i].split('=');\n      // if the key does not exist, create it\n      if (!result[pair[0]]) {\n        result[pair[0]] = pair[1];\n      } else {\n        // make it an array\n        if (!(result[pair[0]] instanceof Array)) {\n          result[pair[0]] = [result[pair[0]]];\n        }\n        result[pair[0]].push(pair[1]);\n      }\n    }\n  }\n  return result;\n}\n\n/**\n * Get flags from an input string. Flags are words surrounded with curly\n * braces.\n *\n * @param {string} inputStr The input string.\n * @returns {string[]} An array of found flags.\n */\nexport function getFlags(inputStr) {\n  const flags = [];\n  // check input string\n  if (inputStr === null || typeof inputStr === 'undefined') {\n    return flags;\n  }\n\n  // word surrounded by curly braces\n  const regex = /{(\\w+)}/g;\n\n  let match = regex.exec(inputStr);\n  while (match) {\n    flags.push(match[1]); // first matching group\n    match = regex.exec(inputStr);\n  }\n  return flags;\n}\n\n/**\n * Replace flags in a input string. Flags are keywords surrounded with curly\n * braces.\n *\n * @param {string} inputStr The input string.\n * @param {object} values A object of {value, unit}.\n * @returns {string} The result string.\n */\nexport function replaceFlags(inputStr, values) {\n  let res = '';\n  // check input string\n  if (inputStr === null || typeof inputStr === 'undefined') {\n    return res;\n  }\n  res = inputStr;\n  // check values\n  if (values === null || typeof values === 'undefined') {\n    return res;\n  }\n\n  // loop through flags\n  const keys = getFlags(inputStr);\n  for (let i = 0; i < keys.length; ++i) {\n    const valueObj = values[keys[i]];\n    if (valueObj !== null && typeof valueObj !== 'undefined' &&\n      valueObj.value !== null && typeof valueObj.value !== 'undefined') {\n      // value string\n      let valueStr = valueObj.value.toPrecision(4);\n      // add unit if available\n      // space or no space? Yes apart from degree...\n      // check: https://en.wikipedia.org/wiki/Space_(punctuation)#Spaces_and_unit_symbols\n      if (valueObj.unit !== null &&\n        typeof valueObj.unit !== 'undefined' &&\n        valueObj.unit.length !== 0) {\n        if (valueObj.unit !== 'unit.degree') {\n          valueStr += ' ';\n        }\n        valueStr += i18n.t(valueObj.unit);\n      }\n      // flag to replace\n      const flag = '{' + keys[i] + '}';\n      // replace\n      res = res.replace(flag, valueStr);\n    }\n  }\n  // return\n  return res;\n}\n\n/**\n * Get the root of an input path.\n * Splits using `/` as separator.\n *\n * @param {string} path The input path.\n * @returns {string} The input path without its last part.\n */\nexport function getRootPath(path) {\n  return path.split('/').slice(0, -1).join('/');\n}\n\n/**\n * Get a file extension: anything after the last dot.\n * File name starting with a dot are discarded.\n * Extensions are expected to contain at least one letter.\n *\n * @param {string} filePath The file path containing the file name.\n * @returns {string} The lower case file extension or null for none.\n */\nexport function getFileExtension(filePath) {\n  let ext = null;\n  if (typeof filePath !== 'undefined' &&\n    filePath !== null &&\n    filePath[0] !== '.') {\n    const pathSplit = filePath.toLowerCase().split('.');\n    if (pathSplit.length !== 1) {\n      ext = pathSplit.pop();\n      // extension should contain at least one letter and no slash\n      const regExp = /[a-z]/;\n      if (!regExp.test(ext) || ext.includes('/')) {\n        ext = null;\n      }\n    }\n  }\n  return ext;\n}\n\n/**\n * Convert a string to a Uint8Array.\n *\n * @param {string} str The string to convert.\n * @returns {Uint8Array} The Uint8Array.\n */\nexport function stringToUint8Array(str) {\n  const arr = new Uint8Array(str.length);\n  for (let i = 0, leni = str.length; i < leni; i++) {\n    arr[i] = str.charCodeAt(i);\n  }\n  return arr;\n}\n\n/**\n * Round a float number to a given precision.\n *\n * Inspired from {@link https://stackoverflow.com/a/49729715/3639892}.\n *\n * Can be a solution to not have trailing zero as when\n *   using toFixed or toPrecision.\n * '+number.toFixed(precision)' does not pass all the tests...\n *\n * @param {number} number The number to round.\n * @param {number} precision The rounding precision.\n * @returns {number} The rounded number.\n */\nexport function precisionRound(number, precision) {\n  const factor = Math.pow(10, precision);\n  const delta = 0.01 / factor; // fixes precisionRound(1.005, 2)\n  return Math.round(number * factor + delta) / factor;\n}\n","import {stringToUint8Array} from './string';\n\n/**\n * Get a string id from array values in the form of: '#0-1_#1-2'.\n *\n * @param {Array} arr The input array.\n * @param {number[]} [dims] Optional list of dimensions to use.\n * @returns {string} The string id.\n */\nexport function toStringId(arr, dims) {\n  // use all dims if not as input\n  if (typeof dims === 'undefined') {\n    dims = [];\n    for (let i = 0; i < arr.length; ++i) {\n      dims.push(i);\n    }\n  }\n  // check dims\n  for (let i = 0; i < dims.length; ++i) {\n    if (dims[i] >= arr.length) {\n      throw new Error('Non valid dimension for toStringId');\n    }\n  }\n  // build string\n  let res = '';\n  for (let i = 0; i < dims.length; ++i) {\n    if (i !== 0) {\n      res += '_';\n    }\n    res += '#' + dims[i] + '-' + arr[dims[i]];\n  }\n  return res;\n}\n\n/**\n * Get an array from an id string in the form of: '#0-1_#1-2'\n * (result of toStringId).\n *\n * @param {string} inputStr The input string.\n * @returns {Array} The corresponding array (minimum size is 3D).\n */\nexport function getArrayFromStringId(inputStr) {\n  // split ids\n  const strIds = inputStr.split('_');\n  // get the size of the index (minimum 3)\n  let numberOfDims = 3;\n  let dim;\n  for (let i = 0; i < strIds.length; ++i) {\n    // expecting dim < 10\n    dim = parseInt(strIds[i].substring(1, 2), 10);\n    // dim is zero based\n    if (dim + 1 > numberOfDims) {\n      numberOfDims = dim + 1;\n    }\n  }\n  // default values\n  const values = new Array(numberOfDims);\n  values.fill(0);\n  // get other values from the input string\n  for (let j = 0; j < strIds.length; ++j) {\n    // expecting dim < 10\n    dim = parseInt(strIds[j].substring(1, 2), 10);\n    const value = parseInt(strIds[j].substring(3), 10);\n    values[dim] = value;\n  }\n\n  return values;\n}\n\n/**\n * Check if the first input array contains all the\n * elements of the second input array.\n *\n * @param {string[]} arr0 The test array.\n * @param {string[]} arr1 The elements to check in the first array.\n * @returns {boolean} True if all the elements of arr1 are included in arr0.\n */\nexport function arrayContains(arr0, arr1) {\n  // check input\n  if (arr0 === null ||\n    arr1 === null ||\n    typeof arr0 === 'undefined' ||\n    typeof arr1 === 'undefined') {\n    return false;\n  }\n  if (arr0.length === 0 ||\n    arr1.length === 0 ||\n    arr1.length > arr0.length) {\n    return false;\n  }\n  // check values\n  for (const itemArr1 of arr1) {\n    if (!arr0.includes(itemArr1)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Check for array equality after sorting.\n *\n * @param {Array} arr0 First array.\n * @param {Array} arr1 Second array.\n * @returns {boolean} True if both array are defined and contain same values.\n */\nexport function arraySortEquals(arr0, arr1) {\n  if (arr0 === null ||\n    arr1 === null ||\n    typeof arr0 === 'undefined' ||\n    typeof arr1 === 'undefined') {\n    return false;\n  }\n  const arr0sorted = arr0.slice().sort();\n  const arr1sorted = arr1.slice().sort();\n  return arrayEquals(arr0sorted, arr1sorted);\n}\n\n/**\n * Check for array equality.\n *\n * @param {Array} arr0 First array.\n * @param {Array} arr1 Second array.\n * @returns {boolean} True if both array are defined and contain same values.\n */\nexport function arrayEquals(arr0, arr1) {\n  if (arr0 === null ||\n    arr1 === null ||\n    typeof arr0 === 'undefined' ||\n    typeof arr1 === 'undefined') {\n    return false;\n  }\n  if (arr0.length !== arr1.length) {\n    return false;\n  }\n  return arr0.every(function (element, index) {\n    return element === arr1[index];\n  });\n}\n\n/**\n * Convert a Uint8Array to a string.\n *\n * @param {Uint8Array} arr The array to convert.\n * @returns {string} The array as string.\n */\nexport function uint8ArrayToString(arr) {\n  return String.fromCharCode.apply(String, arr);\n}\n\n/**\n * Array find in a subset of the input array.\n * Equivalent to: `arr.slice(start, end).find(callbackFn)`.\n *\n * @param {Uint8Array} arr The input array to search.\n * @param {Function} callbackFn The find function.\n * @param {number|undefined} start The array start index.\n * @param {number|undefined} [end] The array end index.\n * @returns {number|undefined} The index where the element was found.\n */\nexport function findInArraySubset(arr, callbackFn, start, end) {\n  // check inputs\n  if (typeof start === 'undefined' ||\n    start < 0 ||\n    start >= arr.length\n  ) {\n    start = 0;\n  }\n  if (typeof end === 'undefined' ||\n    end <= start ||\n    end > arr.length) {\n    end = arr.length;\n  }\n  // run\n  for (let i = start; i < end; ++i) {\n    if (callbackFn(arr[i], i, arr)) {\n      return i;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Get a find in array callback.\n *\n * @param {Uint8Array} arr1 The array to find.\n * @returns {Function} The find callback function.\n */\nexport function getFindArrayInArrayCallback(arr1) {\n  return function (element, index, arr0) {\n    for (let i = 0; i < arr1.length; ++i) {\n      if (arr0[index + i] !== arr1[i]) {\n        return false;\n      }\n    }\n    return true;\n  };\n}\n\n/**\n * Extract each element of a multipart ArrayBuffer.\n *\n * Ref: {@link https://en.wikipedia.org/wiki/MIME#Multipart_messages}.\n *\n * @param {ArrayBuffer} arr The multipart array.\n * @returns {Array} The multipart parts as an array of object as\n *   {'Content-Type', ..., data} (depending on header tags).\n */\nexport function parseMultipart(arr) {\n  const u8Array = new Uint8Array(arr);\n\n  const parts = [];\n  // check input\n  if (u8Array.length === 0) {\n    return parts;\n  }\n\n  // \\r\\n\\r\\n\n  const doubleReturnNew = new Uint8Array([0x0d, 0x0a, 0x0d, 0x0a]);\n  const partHeaderEndCb = getFindArrayInArrayCallback(doubleReturnNew);\n\n  // look for boundary in first part header\n  let partHeaderEndIndex = findInArraySubset(\n    u8Array, partHeaderEndCb, 0\n  );\n  if (typeof partHeaderEndIndex === 'undefined') {\n    throw new Error('Can\\'t find the end of the first multipart header');\n  }\n  const firstPartHeader = u8Array.slice(0, partHeaderEndIndex);\n  // switch to string to use split\n  const lines = uint8ArrayToString(firstPartHeader).split('\\r\\n');\n  // boundary should start with '--'\n  let boundaryStr;\n  for (let i = 0; i < lines.length; ++i) {\n    if (lines[i][0] === '-' && lines[i][1] === '-') {\n      boundaryStr = lines[i];\n      break;\n    }\n  }\n  if (typeof boundaryStr === 'undefined') {\n    throw new Error('Can\\'t find the boundary between multi-parts');\n  }\n  const boundary = stringToUint8Array(boundaryStr);\n  const boundaryCb = getFindArrayInArrayCallback(boundary);\n  const boundaryLen = boundaryStr.length;\n\n  // skip mime header\n  let nextBoundaryIndex = findInArraySubset(\n    u8Array, boundaryCb, 0\n  );\n\n  // loop through content\n  while (typeof partHeaderEndIndex !== 'undefined') {\n    const part = {};\n\n    // header\n    const partHeader = u8Array.slice(\n      nextBoundaryIndex + boundaryLen, partHeaderEndIndex);\n    // split into object\n    const partHeaderLines =\n      uint8ArrayToString(partHeader).split('\\r\\n');\n    for (let l = 0; l < partHeaderLines.length; ++l) {\n      const line = partHeaderLines[l];\n      const semiColonIndex = line.indexOf(':');\n      if (semiColonIndex !== -1) {\n        const key = line.substring(0, semiColonIndex).trim();\n        const val = line.substring(semiColonIndex + 1).trim();\n        part[key] = val;\n      }\n    }\n\n    // find next boundary\n    nextBoundaryIndex = findInArraySubset(\n      u8Array, boundaryCb, partHeaderEndIndex\n    );\n    // exit if none\n    if (typeof nextBoundaryIndex === 'undefined') {\n      break;\n    }\n\n    // get part\n    // partHeaderEndIndex plus the size of the '\\r\\n\\r\\n' separator\n    const dataBeginIndex = partHeaderEndIndex + 4;\n    // nextBoundaryIndex minus the previous '\\r\\n'\n    const dataEndIndex = nextBoundaryIndex - 2;\n    if (dataBeginIndex < dataEndIndex) {\n      part.data = u8Array.slice(dataBeginIndex, dataEndIndex).buffer;\n    } else {\n      part.data = new Uint8Array();\n    }\n\n    // store part\n    parts.push(part);\n\n    // find next part header end\n    partHeaderEndIndex = findInArraySubset(\n      u8Array, partHeaderEndCb,\n      nextBoundaryIndex + boundaryLen\n    );\n  }\n\n  return parts;\n}\n\n/**\n * Build a multipart message.\n *\n * Ref:\n * - {@link https://en.wikipedia.org/wiki/MIME#Multipart_messages},\n * - {@link https://hg.orthanc-server.com/orthanc-dicomweb/file/tip/Resources/Samples/JavaScript/stow-rs.js}.\n *\n * @param {Array} parts The message parts as an array of object containing\n *   content headers and messages as the data property (as returned by parse).\n * @param {string} boundary The message boundary.\n * @returns {Uint8Array} The full multipart message.\n */\nexport function buildMultipart(parts, boundary) {\n  const lineBreak = '\\r\\n';\n  // build headers and calculate size\n  let partsSize = 0;\n  const headers = [];\n  for (let i = 0; i < parts.length; ++i) {\n    let headerStr = '';\n    if (i !== 0) {\n      headerStr += lineBreak;\n    }\n    headerStr += '--' + boundary + lineBreak;\n    const partKeys = Object.keys(parts[i]);\n    for (let k = 0; k < partKeys.length; ++k) {\n      const key = partKeys[k];\n      if (key !== 'data') {\n        headerStr += key + ': ' + parts[i][key] + lineBreak;\n      }\n    }\n    headerStr += lineBreak;\n    const header = stringToUint8Array(headerStr);\n    headers.push(header);\n    partsSize += header.byteLength + parts[i].data.byteLength;\n  }\n  // build trailer\n  const trailerStr = lineBreak + '--' + boundary + '--' + lineBreak;\n  const trailer = stringToUint8Array(trailerStr);\n\n  // final buffer\n  const buffer = new Uint8Array(partsSize + trailer.byteLength);\n  let offset = 0;\n  // concatenate parts\n  for (let j = 0; j < parts.length; ++j) {\n    buffer.set(headers[j], offset);\n    offset += headers[j].byteLength;\n    buffer.set(new Uint8Array(parts[j].data), offset);\n    offset += parts[j].data.byteLength;\n  }\n  // end buffer with trailer\n  buffer.set(trailer, offset);\n\n  // return\n  return buffer;\n}\n","/* eslint-disable @stylistic/js/quote-props */\n/* eslint @stylistic/js/max-len:0 */\n\n/**\n * DICOM tag dictionary 2022a.\n * Generated using xml standard conversion from {@link https://github.com/ivmartel/dcmStdToJs} v0.1.0.\n *\n * Conversion changes:\n * - (vr) 'See Note' -> 'NONE',\n * - (vr) 'OB or OW' -> 'ox',\n * - (vr) 'US or SS' -> 'xs',\n * - (vr) 'US or OW' -> 'xx',\n * - (vr) 'US or SS or OW' -> 'xs',\n * - added 'GenericGroupLength' element to each group.\n *\n * Local changes:\n * - tag numbers with 'xx' were replaced with '00', 'xxx' with '001' and\n *  'xxxx' with '0004'.\n *\n * @type {Object<string, Object<string, string[]>>}\n */\nexport const dictionary = {\n  '0000': {\n    '0000': ['UL', '1', 'CommandGroupLength'],\n    '0001': ['UL', '1', 'CommandLengthToEnd'],\n    '0002': ['UI', '1', 'AffectedSOPClassUID'],\n    '0003': ['UI', '1', 'RequestedSOPClassUID'],\n    '0010': ['SH', '1', 'CommandRecognitionCode'],\n    '0100': ['US', '1', 'CommandField'],\n    '0110': ['US', '1', 'MessageID'],\n    '0120': ['US', '1', 'MessageIDBeingRespondedTo'],\n    '0200': ['AE', '1', 'Initiator'],\n    '0300': ['AE', '1', 'Receiver'],\n    '0400': ['AE', '1', 'FindLocation'],\n    '0600': ['AE', '1', 'MoveDestination'],\n    '0700': ['US', '1', 'Priority'],\n    '0800': ['US', '1', 'CommandDataSetType'],\n    '0850': ['US', '1', 'NumberOfMatches'],\n    '0860': ['US', '1', 'ResponseSequenceNumber'],\n    '0900': ['US', '1', 'Status'],\n    '0901': ['AT', '1-n', 'OffendingElement'],\n    '0902': ['LO', '1', 'ErrorComment'],\n    '0903': ['US', '1', 'ErrorID'],\n    '1000': ['UI', '1', 'AffectedSOPInstanceUID'],\n    '1001': ['UI', '1', 'RequestedSOPInstanceUID'],\n    '1002': ['US', '1', 'EventTypeID'],\n    '1005': ['AT', '1-n', 'AttributeIdentifierList'],\n    '1008': ['US', '1', 'ActionTypeID'],\n    '1020': ['US', '1', 'NumberOfRemainingSuboperations'],\n    '1021': ['US', '1', 'NumberOfCompletedSuboperations'],\n    '1022': ['US', '1', 'NumberOfFailedSuboperations'],\n    '1023': ['US', '1', 'NumberOfWarningSuboperations'],\n    '1030': ['AE', '1', 'MoveOriginatorApplicationEntityTitle'],\n    '1031': ['US', '1', 'MoveOriginatorMessageID'],\n    '4000': ['LT', '1', 'DialogReceiver'],\n    '4010': ['LT', '1', 'TerminalType'],\n    '5010': ['SH', '1', 'MessageSetID'],\n    '5020': ['SH', '1', 'EndMessageID'],\n    '5110': ['LT', '1', 'DisplayFormat'],\n    '5120': ['LT', '1', 'PagePositionID'],\n    '5130': ['CS', '1', 'TextFormatID'],\n    '5140': ['CS', '1', 'NormalReverse'],\n    '5150': ['CS', '1', 'AddGrayScale'],\n    '5160': ['CS', '1', 'Borders'],\n    '5170': ['IS', '1', 'Copies'],\n    '5180': ['CS', '1', 'CommandMagnificationType'],\n    '5190': ['CS', '1', 'Erase'],\n    '51A0': ['CS', '1', 'Print'],\n    '51B0': ['US', '1-n', 'Overlays']\n  },\n  '0002': {\n    '0000': ['UL', '1', 'FileMetaInformationGroupLength'],\n    '0001': ['OB', '1', 'FileMetaInformationVersion'],\n    '0002': ['UI', '1', 'MediaStorageSOPClassUID'],\n    '0003': ['UI', '1', 'MediaStorageSOPInstanceUID'],\n    '0010': ['UI', '1', 'TransferSyntaxUID'],\n    '0012': ['UI', '1', 'ImplementationClassUID'],\n    '0013': ['SH', '1', 'ImplementationVersionName'],\n    '0016': ['AE', '1', 'SourceApplicationEntityTitle'],\n    '0017': ['AE', '1', 'SendingApplicationEntityTitle'],\n    '0018': ['AE', '1', 'ReceivingApplicationEntityTitle'],\n    '0026': ['UR', '1', 'SourcePresentationAddress'],\n    '0027': ['UR', '1', 'SendingPresentationAddress'],\n    '0028': ['UR', '1', 'ReceivingPresentationAddress'],\n    '0031': ['OB', '1', 'RTVMetaInformationVersion'],\n    '0032': ['UI', '1', 'RTVCommunicationSOPClassUID'],\n    '0033': ['UI', '1', 'RTVCommunicationSOPInstanceUID'],\n    '0035': ['OB', '1', 'RTVSourceIdentifier'],\n    '0036': ['OB', '1', 'RTVFlowIdentifier'],\n    '0037': ['UL', '1', 'RTVFlowRTPSamplingRate'],\n    '0038': ['FD', '1', 'RTVFlowActualFrameDuration'],\n    '0100': ['UI', '1', 'PrivateInformationCreatorUID'],\n    '0102': ['OB', '1', 'PrivateInformation']\n  },\n  '0004': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '1130': ['CS', '1', 'FileSetID'],\n    '1141': ['CS', '1-8', 'FileSetDescriptorFileID'],\n    '1142': ['CS', '1', 'SpecificCharacterSetOfFileSetDescriptorFile'],\n    '1200': ['UL', '1', 'OffsetOfTheFirstDirectoryRecordOfTheRootDirectoryEntity'],\n    '1202': ['UL', '1', 'OffsetOfTheLastDirectoryRecordOfTheRootDirectoryEntity'],\n    '1212': ['US', '1', 'FileSetConsistencyFlag'],\n    '1220': ['SQ', '1', 'DirectoryRecordSequence'],\n    '1400': ['UL', '1', 'OffsetOfTheNextDirectoryRecord'],\n    '1410': ['US', '1', 'RecordInUseFlag'],\n    '1420': ['UL', '1', 'OffsetOfReferencedLowerLevelDirectoryEntity'],\n    '1430': ['CS', '1', 'DirectoryRecordType'],\n    '1432': ['UI', '1', 'PrivateRecordUID'],\n    '1500': ['CS', '1-8', 'ReferencedFileID'],\n    '1504': ['UL', '1', 'MRDRDirectoryRecordOffset'],\n    '1510': ['UI', '1', 'ReferencedSOPClassUIDInFile'],\n    '1511': ['UI', '1', 'ReferencedSOPInstanceUIDInFile'],\n    '1512': ['UI', '1', 'ReferencedTransferSyntaxUIDInFile'],\n    '151A': ['UI', '1-n', 'ReferencedRelatedGeneralSOPClassUIDInFile'],\n    '1600': ['UL', '1', 'NumberOfReferences']\n  },\n  '0008': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['UL', '1', 'LengthToEnd'],\n    '0005': ['CS', '1-n', 'SpecificCharacterSet'],\n    '0006': ['SQ', '1', 'LanguageCodeSequence'],\n    '0008': ['CS', '2-n', 'ImageType'],\n    '0010': ['SH', '1', 'RecognitionCode'],\n    '0012': ['DA', '1', 'InstanceCreationDate'],\n    '0013': ['TM', '1', 'InstanceCreationTime'],\n    '0014': ['UI', '1', 'InstanceCreatorUID'],\n    '0015': ['DT', '1', 'InstanceCoercionDateTime'],\n    '0016': ['UI', '1', 'SOPClassUID'],\n    '0018': ['UI', '1', 'SOPInstanceUID'],\n    '001A': ['UI', '1-n', 'RelatedGeneralSOPClassUID'],\n    '001B': ['UI', '1', 'OriginalSpecializedSOPClassUID'],\n    '0020': ['DA', '1', 'StudyDate'],\n    '0021': ['DA', '1', 'SeriesDate'],\n    '0022': ['DA', '1', 'AcquisitionDate'],\n    '0023': ['DA', '1', 'ContentDate'],\n    '0024': ['DA', '1', 'OverlayDate'],\n    '0025': ['DA', '1', 'CurveDate'],\n    '002A': ['DT', '1', 'AcquisitionDateTime'],\n    '0030': ['TM', '1', 'StudyTime'],\n    '0031': ['TM', '1', 'SeriesTime'],\n    '0032': ['TM', '1', 'AcquisitionTime'],\n    '0033': ['TM', '1', 'ContentTime'],\n    '0034': ['TM', '1', 'OverlayTime'],\n    '0035': ['TM', '1', 'CurveTime'],\n    '0040': ['US', '1', 'DataSetType'],\n    '0041': ['LO', '1', 'DataSetSubtype'],\n    '0042': ['CS', '1', 'NuclearMedicineSeriesType'],\n    '0050': ['SH', '1', 'AccessionNumber'],\n    '0051': ['SQ', '1', 'IssuerOfAccessionNumberSequence'],\n    '0052': ['CS', '1', 'QueryRetrieveLevel'],\n    '0053': ['CS', '1', 'QueryRetrieveView'],\n    '0054': ['AE', '1-n', 'RetrieveAETitle'],\n    '0055': ['AE', '1', 'StationAETitle'],\n    '0056': ['CS', '1', 'InstanceAvailability'],\n    '0058': ['UI', '1-n', 'FailedSOPInstanceUIDList'],\n    '0060': ['CS', '1', 'Modality'],\n    '0061': ['CS', '1-n', 'ModalitiesInStudy'],\n    '0062': ['UI', '1-n', 'SOPClassesInStudy'],\n    '0063': ['SQ', '1', 'AnatomicRegionsInStudyCodeSequence'],\n    '0064': ['CS', '1', 'ConversionType'],\n    '0068': ['CS', '1', 'PresentationIntentType'],\n    '0070': ['LO', '1', 'Manufacturer'],\n    '0080': ['LO', '1', 'InstitutionName'],\n    '0081': ['ST', '1', 'InstitutionAddress'],\n    '0082': ['SQ', '1', 'InstitutionCodeSequence'],\n    '0090': ['PN', '1', 'ReferringPhysicianName'],\n    '0092': ['ST', '1', 'ReferringPhysicianAddress'],\n    '0094': ['SH', '1-n', 'ReferringPhysicianTelephoneNumbers'],\n    '0096': ['SQ', '1', 'ReferringPhysicianIdentificationSequence'],\n    '009C': ['PN', '1-n', 'ConsultingPhysicianName'],\n    '009D': ['SQ', '1', 'ConsultingPhysicianIdentificationSequence'],\n    '0100': ['SH', '1', 'CodeValue'],\n    '0101': ['LO', '1', 'ExtendedCodeValue'],\n    '0102': ['SH', '1', 'CodingSchemeDesignator'],\n    '0103': ['SH', '1', 'CodingSchemeVersion'],\n    '0104': ['LO', '1', 'CodeMeaning'],\n    '0105': ['CS', '1', 'MappingResource'],\n    '0106': ['DT', '1', 'ContextGroupVersion'],\n    '0107': ['DT', '1', 'ContextGroupLocalVersion'],\n    '0108': ['LT', '1', 'ExtendedCodeMeaning'],\n    '0109': ['SQ', '1', 'CodingSchemeResourcesSequence'],\n    '010A': ['CS', '1', 'CodingSchemeURLType'],\n    '010B': ['CS', '1', 'ContextGroupExtensionFlag'],\n    '010C': ['UI', '1', 'CodingSchemeUID'],\n    '010D': ['UI', '1', 'ContextGroupExtensionCreatorUID'],\n    '010E': ['UR', '1', 'CodingSchemeURL'],\n    '010F': ['CS', '1', 'ContextIdentifier'],\n    '0110': ['SQ', '1', 'CodingSchemeIdentificationSequence'],\n    '0112': ['LO', '1', 'CodingSchemeRegistry'],\n    '0114': ['ST', '1', 'CodingSchemeExternalID'],\n    '0115': ['ST', '1', 'CodingSchemeName'],\n    '0116': ['ST', '1', 'CodingSchemeResponsibleOrganization'],\n    '0117': ['UI', '1', 'ContextUID'],\n    '0118': ['UI', '1', 'MappingResourceUID'],\n    '0119': ['UC', '1', 'LongCodeValue'],\n    '0120': ['UR', '1', 'URNCodeValue'],\n    '0121': ['SQ', '1', 'EquivalentCodeSequence'],\n    '0122': ['LO', '1', 'MappingResourceName'],\n    '0123': ['SQ', '1', 'ContextGroupIdentificationSequence'],\n    '0124': ['SQ', '1', 'MappingResourceIdentificationSequence'],\n    '0201': ['SH', '1', 'TimezoneOffsetFromUTC'],\n    '0202': ['', '', ''],\n    '0220': ['SQ', '1', 'ResponsibleGroupCodeSequence'],\n    '0221': ['CS', '1', 'EquipmentModality'],\n    '0222': ['LO', '1', 'ManufacturerRelatedModelGroup'],\n    '0300': ['SQ', '1', 'PrivateDataElementCharacteristicsSequence'],\n    '0301': ['US', '1', 'PrivateGroupReference'],\n    '0302': ['LO', '1', 'PrivateCreatorReference'],\n    '0303': ['CS', '1', 'BlockIdentifyingInformationStatus'],\n    '0304': ['US', '1-n', 'NonidentifyingPrivateElements'],\n    '0305': ['SQ', '1', 'DeidentificationActionSequence'],\n    '0306': ['US', '1-n', 'IdentifyingPrivateElements'],\n    '0307': ['CS', '1', 'DeidentificationAction'],\n    '0308': ['US', '1', 'PrivateDataElement'],\n    '0309': ['UL', '1-3', 'PrivateDataElementValueMultiplicity'],\n    '030A': ['CS', '1', 'PrivateDataElementValueRepresentation'],\n    '030B': ['UL', '1-2', 'PrivateDataElementNumberOfItems'],\n    '030C': ['UC', '1', 'PrivateDataElementName'],\n    '030D': ['UC', '1', 'PrivateDataElementKeyword'],\n    '030E': ['UT', '1', 'PrivateDataElementDescription'],\n    '030F': ['UT', '1', 'PrivateDataElementEncoding'],\n    '0310': ['SQ', '1', 'PrivateDataElementDefinitionSequence'],\n    '1000': ['AE', '1', 'NetworkID'],\n    '1010': ['SH', '1', 'StationName'],\n    '1030': ['LO', '1', 'StudyDescription'],\n    '1032': ['SQ', '1', 'ProcedureCodeSequence'],\n    '103E': ['LO', '1', 'SeriesDescription'],\n    '103F': ['SQ', '1', 'SeriesDescriptionCodeSequence'],\n    '1040': ['LO', '1', 'InstitutionalDepartmentName'],\n    '1041': ['SQ', '1', 'InstitutionalDepartmentTypeCodeSequence'],\n    '1048': ['PN', '1-n', 'PhysiciansOfRecord'],\n    '1049': ['SQ', '1', 'PhysiciansOfRecordIdentificationSequence'],\n    '1050': ['PN', '1-n', 'PerformingPhysicianName'],\n    '1052': ['SQ', '1', 'PerformingPhysicianIdentificationSequence'],\n    '1060': ['PN', '1-n', 'NameOfPhysiciansReadingStudy'],\n    '1062': ['SQ', '1', 'PhysiciansReadingStudyIdentificationSequence'],\n    '1070': ['PN', '1-n', 'OperatorsName'],\n    '1072': ['SQ', '1', 'OperatorIdentificationSequence'],\n    '1080': ['LO', '1-n', 'AdmittingDiagnosesDescription'],\n    '1084': ['SQ', '1', 'AdmittingDiagnosesCodeSequence'],\n    '1090': ['LO', '1', 'ManufacturerModelName'],\n    '1100': ['SQ', '1', 'ReferencedResultsSequence'],\n    '1110': ['SQ', '1', 'ReferencedStudySequence'],\n    '1111': ['SQ', '1', 'ReferencedPerformedProcedureStepSequence'],\n    '1115': ['SQ', '1', 'ReferencedSeriesSequence'],\n    '1120': ['SQ', '1', 'ReferencedPatientSequence'],\n    '1125': ['SQ', '1', 'ReferencedVisitSequence'],\n    '1130': ['SQ', '1', 'ReferencedOverlaySequence'],\n    '1134': ['SQ', '1', 'ReferencedStereometricInstanceSequence'],\n    '113A': ['SQ', '1', 'ReferencedWaveformSequence'],\n    '1140': ['SQ', '1', 'ReferencedImageSequence'],\n    '1145': ['SQ', '1', 'ReferencedCurveSequence'],\n    '114A': ['SQ', '1', 'ReferencedInstanceSequence'],\n    '114B': ['SQ', '1', 'ReferencedRealWorldValueMappingInstanceSequence'],\n    '1150': ['UI', '1', 'ReferencedSOPClassUID'],\n    '1155': ['UI', '1', 'ReferencedSOPInstanceUID'],\n    '1156': ['SQ', '1', 'DefinitionSourceSequence'],\n    '115A': ['UI', '1-n', 'SOPClassesSupported'],\n    '1160': ['IS', '1-n', 'ReferencedFrameNumber'],\n    '1161': ['UL', '1-n', 'SimpleFrameList'],\n    '1162': ['UL', '3-3n', 'CalculatedFrameList'],\n    '1163': ['FD', '2', 'TimeRange'],\n    '1164': ['SQ', '1', 'FrameExtractionSequence'],\n    '1167': ['UI', '1', 'MultiFrameSourceSOPInstanceUID'],\n    '1190': ['UR', '1', 'RetrieveURL'],\n    '1195': ['UI', '1', 'TransactionUID'],\n    '1196': ['US', '1', 'WarningReason'],\n    '1197': ['US', '1', 'FailureReason'],\n    '1198': ['SQ', '1', 'FailedSOPSequence'],\n    '1199': ['SQ', '1', 'ReferencedSOPSequence'],\n    '119A': ['SQ', '1', 'OtherFailuresSequence'],\n    '1200': ['SQ', '1', 'StudiesContainingOtherReferencedInstancesSequence'],\n    '1250': ['SQ', '1', 'RelatedSeriesSequence'],\n    '2110': ['CS', '1', 'LossyImageCompressionRetired'],\n    '2111': ['ST', '1', 'DerivationDescription'],\n    '2112': ['SQ', '1', 'SourceImageSequence'],\n    '2120': ['SH', '1', 'StageName'],\n    '2122': ['IS', '1', 'StageNumber'],\n    '2124': ['IS', '1', 'NumberOfStages'],\n    '2127': ['SH', '1', 'ViewName'],\n    '2128': ['IS', '1', 'ViewNumber'],\n    '2129': ['IS', '1', 'NumberOfEventTimers'],\n    '212A': ['IS', '1', 'NumberOfViewsInStage'],\n    '2130': ['DS', '1-n', 'EventElapsedTimes'],\n    '2132': ['LO', '1-n', 'EventTimerNames'],\n    '2133': ['SQ', '1', 'EventTimerSequence'],\n    '2134': ['FD', '1', 'EventTimeOffset'],\n    '2135': ['SQ', '1', 'EventCodeSequence'],\n    '2142': ['IS', '1', 'StartTrim'],\n    '2143': ['IS', '1', 'StopTrim'],\n    '2144': ['IS', '1', 'RecommendedDisplayFrameRate'],\n    '2200': ['CS', '1', 'TransducerPosition'],\n    '2204': ['CS', '1', 'TransducerOrientation'],\n    '2208': ['CS', '1', 'AnatomicStructure'],\n    '2218': ['SQ', '1', 'AnatomicRegionSequence'],\n    '2220': ['SQ', '1', 'AnatomicRegionModifierSequence'],\n    '2228': ['SQ', '1', 'PrimaryAnatomicStructureSequence'],\n    '2229': ['SQ', '1', 'AnatomicStructureSpaceOrRegionSequence'],\n    '2230': ['SQ', '1', 'PrimaryAnatomicStructureModifierSequence'],\n    '2240': ['SQ', '1', 'TransducerPositionSequence'],\n    '2242': ['SQ', '1', 'TransducerPositionModifierSequence'],\n    '2244': ['SQ', '1', 'TransducerOrientationSequence'],\n    '2246': ['SQ', '1', 'TransducerOrientationModifierSequence'],\n    '2251': ['SQ', '1', 'AnatomicStructureSpaceOrRegionCodeSequenceTrial'],\n    '2253': ['SQ', '1', 'AnatomicPortalOfEntranceCodeSequenceTrial'],\n    '2255': ['SQ', '1', 'AnatomicApproachDirectionCodeSequenceTrial'],\n    '2256': ['ST', '1', 'AnatomicPerspectiveDescriptionTrial'],\n    '2257': ['SQ', '1', 'AnatomicPerspectiveCodeSequenceTrial'],\n    '2258': ['ST', '1', 'AnatomicLocationOfExaminingInstrumentDescriptionTrial'],\n    '2259': ['SQ', '1', 'AnatomicLocationOfExaminingInstrumentCodeSequenceTrial'],\n    '225A': ['SQ', '1', 'AnatomicStructureSpaceOrRegionModifierCodeSequenceTrial'],\n    '225C': ['SQ', '1', 'OnAxisBackgroundAnatomicStructureCodeSequenceTrial'],\n    '3001': ['SQ', '1', 'AlternateRepresentationSequence'],\n    '3002': ['UI', '1-n', 'AvailableTransferSyntaxUID'],\n    '3010': ['UI', '1-n', 'IrradiationEventUID'],\n    '3011': ['SQ', '1', 'SourceIrradiationEventSequence'],\n    '3012': ['UI', '1', 'RadiopharmaceuticalAdministrationEventUID'],\n    '4000': ['LT', '1', 'IdentifyingComments'],\n    '9007': ['CS', '4', 'FrameType'],\n    '9092': ['SQ', '1', 'ReferencedImageEvidenceSequence'],\n    '9121': ['SQ', '1', 'ReferencedRawDataSequence'],\n    '9123': ['UI', '1', 'CreatorVersionUID'],\n    '9124': ['SQ', '1', 'DerivationImageSequence'],\n    '9154': ['SQ', '1', 'SourceImageEvidenceSequence'],\n    '9205': ['CS', '1', 'PixelPresentation'],\n    '9206': ['CS', '1', 'VolumetricProperties'],\n    '9207': ['CS', '1', 'VolumeBasedCalculationTechnique'],\n    '9208': ['CS', '1', 'ComplexImageComponent'],\n    '9209': ['CS', '1', 'AcquisitionContrast'],\n    '9215': ['SQ', '1', 'DerivationCodeSequence'],\n    '9237': ['SQ', '1', 'ReferencedPresentationStateSequence'],\n    '9410': ['SQ', '1', 'ReferencedOtherPlaneSequence'],\n    '9458': ['SQ', '1', 'FrameDisplaySequence'],\n    '9459': ['FL', '1', 'RecommendedDisplayFrameRateInFloat'],\n    '9460': ['CS', '1', 'SkipFrameRangeFlag']\n  },\n  '0010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['PN', '1', 'PatientName'],\n    '0020': ['LO', '1', 'PatientID'],\n    '0021': ['LO', '1', 'IssuerOfPatientID'],\n    '0022': ['CS', '1', 'TypeOfPatientID'],\n    '0024': ['SQ', '1', 'IssuerOfPatientIDQualifiersSequence'],\n    '0026': ['SQ', '1', 'SourcePatientGroupIdentificationSequence'],\n    '0027': ['SQ', '1', 'GroupOfPatientsIdentificationSequence'],\n    '0028': ['US', '3', 'SubjectRelativePositionInImage'],\n    '0030': ['DA', '1', 'PatientBirthDate'],\n    '0032': ['TM', '1', 'PatientBirthTime'],\n    '0033': ['LO', '1', 'PatientBirthDateInAlternativeCalendar'],\n    '0034': ['LO', '1', 'PatientDeathDateInAlternativeCalendar'],\n    '0035': ['CS', '1', 'PatientAlternativeCalendar'],\n    '0040': ['CS', '1', 'PatientSex'],\n    '0050': ['SQ', '1', 'PatientInsurancePlanCodeSequence'],\n    '0101': ['SQ', '1', 'PatientPrimaryLanguageCodeSequence'],\n    '0102': ['SQ', '1', 'PatientPrimaryLanguageModifierCodeSequence'],\n    '0200': ['CS', '1', 'QualityControlSubject'],\n    '0201': ['SQ', '1', 'QualityControlSubjectTypeCodeSequence'],\n    '0212': ['UC', '1', 'StrainDescription'],\n    '0213': ['LO', '1', 'StrainNomenclature'],\n    '0214': ['LO', '1', 'StrainStockNumber'],\n    '0215': ['SQ', '1', 'StrainSourceRegistryCodeSequence'],\n    '0216': ['SQ', '1', 'StrainStockSequence'],\n    '0217': ['LO', '1', 'StrainSource'],\n    '0218': ['UT', '1', 'StrainAdditionalInformation'],\n    '0219': ['SQ', '1', 'StrainCodeSequence'],\n    '0221': ['SQ', '1', 'GeneticModificationsSequence'],\n    '0222': ['UC', '1', 'GeneticModificationsDescription'],\n    '0223': ['LO', '1', 'GeneticModificationsNomenclature'],\n    '0229': ['SQ', '1', 'GeneticModificationsCodeSequence'],\n    '1000': ['LO', '1-n', 'OtherPatientIDs'],\n    '1001': ['PN', '1-n', 'OtherPatientNames'],\n    '1002': ['SQ', '1', 'OtherPatientIDsSequence'],\n    '1005': ['PN', '1', 'PatientBirthName'],\n    '1010': ['AS', '1', 'PatientAge'],\n    '1020': ['DS', '1', 'PatientSize'],\n    '1021': ['SQ', '1', 'PatientSizeCodeSequence'],\n    '1022': ['DS', '1', 'PatientBodyMassIndex'],\n    '1023': ['DS', '1', 'MeasuredAPDimension'],\n    '1024': ['DS', '1', 'MeasuredLateralDimension'],\n    '1030': ['DS', '1', 'PatientWeight'],\n    '1040': ['LO', '1', 'PatientAddress'],\n    '1050': ['LO', '1-n', 'InsurancePlanIdentification'],\n    '1060': ['PN', '1', 'PatientMotherBirthName'],\n    '1080': ['LO', '1', 'MilitaryRank'],\n    '1081': ['LO', '1', 'BranchOfService'],\n    '1090': ['LO', '1', 'MedicalRecordLocator'],\n    '1100': ['SQ', '1', 'ReferencedPatientPhotoSequence'],\n    '2000': ['LO', '1-n', 'MedicalAlerts'],\n    '2110': ['LO', '1-n', 'Allergies'],\n    '2150': ['LO', '1', 'CountryOfResidence'],\n    '2152': ['LO', '1', 'RegionOfResidence'],\n    '2154': ['SH', '1-n', 'PatientTelephoneNumbers'],\n    '2155': ['LT', '1', 'PatientTelecomInformation'],\n    '2160': ['SH', '1', 'EthnicGroup'],\n    '2180': ['SH', '1', 'Occupation'],\n    '21A0': ['CS', '1', 'SmokingStatus'],\n    '21B0': ['LT', '1', 'AdditionalPatientHistory'],\n    '21C0': ['US', '1', 'PregnancyStatus'],\n    '21D0': ['DA', '1', 'LastMenstrualDate'],\n    '21F0': ['LO', '1', 'PatientReligiousPreference'],\n    '2201': ['LO', '1', 'PatientSpeciesDescription'],\n    '2202': ['SQ', '1', 'PatientSpeciesCodeSequence'],\n    '2203': ['CS', '1', 'PatientSexNeutered'],\n    '2210': ['CS', '1', 'AnatomicalOrientationType'],\n    '2292': ['LO', '1', 'PatientBreedDescription'],\n    '2293': ['SQ', '1', 'PatientBreedCodeSequence'],\n    '2294': ['SQ', '1', 'BreedRegistrationSequence'],\n    '2295': ['LO', '1', 'BreedRegistrationNumber'],\n    '2296': ['SQ', '1', 'BreedRegistryCodeSequence'],\n    '2297': ['PN', '1', 'ResponsiblePerson'],\n    '2298': ['CS', '1', 'ResponsiblePersonRole'],\n    '2299': ['LO', '1', 'ResponsibleOrganization'],\n    '4000': ['LT', '1', 'PatientComments'],\n    '9431': ['FL', '1', 'ExaminedBodyThickness']\n  },\n  '0012': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['LO', '1', 'ClinicalTrialSponsorName'],\n    '0020': ['LO', '1', 'ClinicalTrialProtocolID'],\n    '0021': ['LO', '1', 'ClinicalTrialProtocolName'],\n    '0030': ['LO', '1', 'ClinicalTrialSiteID'],\n    '0031': ['LO', '1', 'ClinicalTrialSiteName'],\n    '0040': ['LO', '1', 'ClinicalTrialSubjectID'],\n    '0042': ['LO', '1', 'ClinicalTrialSubjectReadingID'],\n    '0050': ['LO', '1', 'ClinicalTrialTimePointID'],\n    '0051': ['ST', '1', 'ClinicalTrialTimePointDescription'],\n    '0052': ['FD', '1', 'LongitudinalTemporalOffsetFromEvent'],\n    '0053': ['CS', '1', 'LongitudinalTemporalEventType'],\n    '0060': ['LO', '1', 'ClinicalTrialCoordinatingCenterName'],\n    '0062': ['CS', '1', 'PatientIdentityRemoved'],\n    '0063': ['LO', '1-n', 'DeidentificationMethod'],\n    '0064': ['SQ', '1', 'DeidentificationMethodCodeSequence'],\n    '0071': ['LO', '1', 'ClinicalTrialSeriesID'],\n    '0072': ['LO', '1', 'ClinicalTrialSeriesDescription'],\n    '0081': ['LO', '1', 'ClinicalTrialProtocolEthicsCommitteeName'],\n    '0082': ['LO', '1', 'ClinicalTrialProtocolEthicsCommitteeApprovalNumber'],\n    '0083': ['SQ', '1', 'ConsentForClinicalTrialUseSequence'],\n    '0084': ['CS', '1', 'DistributionType'],\n    '0085': ['CS', '1', 'ConsentForDistributionFlag'],\n    '0086': ['DA', '1', 'EthicsCommitteeApprovalEffectivenessStartDate'],\n    '0087': ['DA', '1', 'EthicsCommitteeApprovalEffectivenessEndDate']\n  },\n  '0014': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0023': ['ST', '1', 'CADFileFormat'],\n    '0024': ['ST', '1', 'ComponentReferenceSystem'],\n    '0025': ['ST', '1', 'ComponentManufacturingProcedure'],\n    '0028': ['ST', '1', 'ComponentManufacturer'],\n    '0030': ['DS', '1-n', 'MaterialThickness'],\n    '0032': ['DS', '1-n', 'MaterialPipeDiameter'],\n    '0034': ['DS', '1-n', 'MaterialIsolationDiameter'],\n    '0042': ['ST', '1', 'MaterialGrade'],\n    '0044': ['ST', '1', 'MaterialPropertiesDescription'],\n    '0045': ['ST', '1', 'MaterialPropertiesFileFormatRetired'],\n    '0046': ['LT', '1', 'MaterialNotes'],\n    '0050': ['CS', '1', 'ComponentShape'],\n    '0052': ['CS', '1', 'CurvatureType'],\n    '0054': ['DS', '1', 'OuterDiameter'],\n    '0056': ['DS', '1', 'InnerDiameter'],\n    '0100': ['LO', '1-n', 'ComponentWelderIDs'],\n    '0101': ['CS', '1', 'SecondaryApprovalStatus'],\n    '0102': ['DA', '1', 'SecondaryReviewDate'],\n    '0103': ['TM', '1', 'SecondaryReviewTime'],\n    '0104': ['PN', '1', 'SecondaryReviewerName'],\n    '0105': ['ST', '1', 'RepairID'],\n    '0106': ['SQ', '1', 'MultipleComponentApprovalSequence'],\n    '0107': ['CS', '1-n', 'OtherApprovalStatus'],\n    '0108': ['CS', '1-n', 'OtherSecondaryApprovalStatus'],\n    '1010': ['ST', '1', 'ActualEnvironmentalConditions'],\n    '1020': ['DA', '1', 'ExpiryDate'],\n    '1040': ['ST', '1', 'EnvironmentalConditions'],\n    '2002': ['SQ', '1', 'EvaluatorSequence'],\n    '2004': ['IS', '1', 'EvaluatorNumber'],\n    '2006': ['PN', '1', 'EvaluatorName'],\n    '2008': ['IS', '1', 'EvaluationAttempt'],\n    '2012': ['SQ', '1', 'IndicationSequence'],\n    '2014': ['IS', '1', 'IndicationNumber'],\n    '2016': ['SH', '1', 'IndicationLabel'],\n    '2018': ['ST', '1', 'IndicationDescription'],\n    '201A': ['CS', '1-n', 'IndicationType'],\n    '201C': ['CS', '1', 'IndicationDisposition'],\n    '201E': ['SQ', '1', 'IndicationROISequence'],\n    '2030': ['SQ', '1', 'IndicationPhysicalPropertySequence'],\n    '2032': ['SH', '1', 'PropertyLabel'],\n    '2202': ['IS', '1', 'CoordinateSystemNumberOfAxes'],\n    '2204': ['SQ', '1', 'CoordinateSystemAxesSequence'],\n    '2206': ['ST', '1', 'CoordinateSystemAxisDescription'],\n    '2208': ['CS', '1', 'CoordinateSystemDataSetMapping'],\n    '220A': ['IS', '1', 'CoordinateSystemAxisNumber'],\n    '220C': ['CS', '1', 'CoordinateSystemAxisType'],\n    '220E': ['CS', '1', 'CoordinateSystemAxisUnits'],\n    '2210': ['OB', '1', 'CoordinateSystemAxisValues'],\n    '2220': ['SQ', '1', 'CoordinateSystemTransformSequence'],\n    '2222': ['ST', '1', 'TransformDescription'],\n    '2224': ['IS', '1', 'TransformNumberOfAxes'],\n    '2226': ['IS', '1-n', 'TransformOrderOfAxes'],\n    '2228': ['CS', '1', 'TransformedAxisUnits'],\n    '222A': ['DS', '1-n', 'CoordinateSystemTransformRotationAndScaleMatrix'],\n    '222C': ['DS', '1-n', 'CoordinateSystemTransformTranslationMatrix'],\n    '3011': ['DS', '1', 'InternalDetectorFrameTime'],\n    '3012': ['DS', '1', 'NumberOfFramesIntegrated'],\n    '3020': ['SQ', '1', 'DetectorTemperatureSequence'],\n    '3022': ['ST', '1', 'SensorName'],\n    '3024': ['DS', '1', 'HorizontalOffsetOfSensor'],\n    '3026': ['DS', '1', 'VerticalOffsetOfSensor'],\n    '3028': ['DS', '1', 'SensorTemperature'],\n    '3040': ['SQ', '1', 'DarkCurrentSequence'],\n    '3050': ['ox', '1', 'DarkCurrentCounts'],\n    '3060': ['SQ', '1', 'GainCorrectionReferenceSequence'],\n    '3070': ['ox', '1', 'AirCounts'],\n    '3071': ['DS', '1', 'KVUsedInGainCalibration'],\n    '3072': ['DS', '1', 'MAUsedInGainCalibration'],\n    '3073': ['DS', '1', 'NumberOfFramesUsedForIntegration'],\n    '3074': ['LO', '1', 'FilterMaterialUsedInGainCalibration'],\n    '3075': ['DS', '1', 'FilterThicknessUsedInGainCalibration'],\n    '3076': ['DA', '1', 'DateOfGainCalibration'],\n    '3077': ['TM', '1', 'TimeOfGainCalibration'],\n    '3080': ['OB', '1', 'BadPixelImage'],\n    '3099': ['LT', '1', 'CalibrationNotes'],\n    '3100': ['LT', '1', 'LinearityCorrectionTechnique'],\n    '3101': ['LT', '1', 'BeamHardeningCorrectionTechnique'],\n    '4002': ['SQ', '1', 'PulserEquipmentSequence'],\n    '4004': ['CS', '1', 'PulserType'],\n    '4006': ['LT', '1', 'PulserNotes'],\n    '4008': ['SQ', '1', 'ReceiverEquipmentSequence'],\n    '400A': ['CS', '1', 'AmplifierType'],\n    '400C': ['LT', '1', 'ReceiverNotes'],\n    '400E': ['SQ', '1', 'PreAmplifierEquipmentSequence'],\n    '400F': ['LT', '1', 'PreAmplifierNotes'],\n    '4010': ['SQ', '1', 'TransmitTransducerSequence'],\n    '4011': ['SQ', '1', 'ReceiveTransducerSequence'],\n    '4012': ['US', '1', 'NumberOfElements'],\n    '4013': ['CS', '1', 'ElementShape'],\n    '4014': ['DS', '1', 'ElementDimensionA'],\n    '4015': ['DS', '1', 'ElementDimensionB'],\n    '4016': ['DS', '1', 'ElementPitchA'],\n    '4017': ['DS', '1', 'MeasuredBeamDimensionA'],\n    '4018': ['DS', '1', 'MeasuredBeamDimensionB'],\n    '4019': ['DS', '1', 'LocationOfMeasuredBeamDiameter'],\n    '401A': ['DS', '1', 'NominalFrequency'],\n    '401B': ['DS', '1', 'MeasuredCenterFrequency'],\n    '401C': ['DS', '1', 'MeasuredBandwidth'],\n    '401D': ['DS', '1', 'ElementPitchB'],\n    '4020': ['SQ', '1', 'PulserSettingsSequence'],\n    '4022': ['DS', '1', 'PulseWidth'],\n    '4024': ['DS', '1', 'ExcitationFrequency'],\n    '4026': ['CS', '1', 'ModulationType'],\n    '4028': ['DS', '1', 'Damping'],\n    '4030': ['SQ', '1', 'ReceiverSettingsSequence'],\n    '4031': ['DS', '1', 'AcquiredSoundpathLength'],\n    '4032': ['CS', '1', 'AcquisitionCompressionType'],\n    '4033': ['IS', '1', 'AcquisitionSampleSize'],\n    '4034': ['DS', '1', 'RectifierSmoothing'],\n    '4035': ['SQ', '1', 'DACSequence'],\n    '4036': ['CS', '1', 'DACType'],\n    '4038': ['DS', '1-n', 'DACGainPoints'],\n    '403A': ['DS', '1-n', 'DACTimePoints'],\n    '403C': ['DS', '1-n', 'DACAmplitude'],\n    '4040': ['SQ', '1', 'PreAmplifierSettingsSequence'],\n    '4050': ['SQ', '1', 'TransmitTransducerSettingsSequence'],\n    '4051': ['SQ', '1', 'ReceiveTransducerSettingsSequence'],\n    '4052': ['DS', '1', 'IncidentAngle'],\n    '4054': ['ST', '1', 'CouplingTechnique'],\n    '4056': ['ST', '1', 'CouplingMedium'],\n    '4057': ['DS', '1', 'CouplingVelocity'],\n    '4058': ['DS', '1', 'ProbeCenterLocationX'],\n    '4059': ['DS', '1', 'ProbeCenterLocationZ'],\n    '405A': ['DS', '1', 'SoundPathLength'],\n    '405C': ['ST', '1', 'DelayLawIdentifier'],\n    '4060': ['SQ', '1', 'GateSettingsSequence'],\n    '4062': ['DS', '1', 'GateThreshold'],\n    '4064': ['DS', '1', 'VelocityOfSound'],\n    '4070': ['SQ', '1', 'CalibrationSettingsSequence'],\n    '4072': ['ST', '1', 'CalibrationProcedure'],\n    '4074': ['SH', '1', 'ProcedureVersion'],\n    '4076': ['DA', '1', 'ProcedureCreationDate'],\n    '4078': ['DA', '1', 'ProcedureExpirationDate'],\n    '407A': ['DA', '1', 'ProcedureLastModifiedDate'],\n    '407C': ['TM', '1-n', 'CalibrationTime'],\n    '407E': ['DA', '1-n', 'CalibrationDate'],\n    '4080': ['SQ', '1', 'ProbeDriveEquipmentSequence'],\n    '4081': ['CS', '1', 'DriveType'],\n    '4082': ['LT', '1', 'ProbeDriveNotes'],\n    '4083': ['SQ', '1', 'DriveProbeSequence'],\n    '4084': ['DS', '1', 'ProbeInductance'],\n    '4085': ['DS', '1', 'ProbeResistance'],\n    '4086': ['SQ', '1', 'ReceiveProbeSequence'],\n    '4087': ['SQ', '1', 'ProbeDriveSettingsSequence'],\n    '4088': ['DS', '1', 'BridgeResistors'],\n    '4089': ['DS', '1', 'ProbeOrientationAngle'],\n    '408B': ['DS', '1', 'UserSelectedGainY'],\n    '408C': ['DS', '1', 'UserSelectedPhase'],\n    '408D': ['DS', '1', 'UserSelectedOffsetX'],\n    '408E': ['DS', '1', 'UserSelectedOffsetY'],\n    '4091': ['SQ', '1', 'ChannelSettingsSequence'],\n    '4092': ['DS', '1', 'ChannelThreshold'],\n    '409A': ['SQ', '1', 'ScannerSettingsSequence'],\n    '409B': ['ST', '1', 'ScanProcedure'],\n    '409C': ['DS', '1', 'TranslationRateX'],\n    '409D': ['DS', '1', 'TranslationRateY'],\n    '409F': ['DS', '1', 'ChannelOverlap'],\n    '40A0': ['LO', '1-n', 'ImageQualityIndicatorType'],\n    '40A1': ['LO', '1-n', 'ImageQualityIndicatorMaterial'],\n    '40A2': ['LO', '1-n', 'ImageQualityIndicatorSize'],\n    '5002': ['IS', '1', 'LINACEnergy'],\n    '5004': ['IS', '1', 'LINACOutput'],\n    '5100': ['US', '1', 'ActiveAperture'],\n    '5101': ['DS', '1', 'TotalAperture'],\n    '5102': ['DS', '1', 'ApertureElevation'],\n    '5103': ['DS', '1', 'MainLobeAngle'],\n    '5104': ['DS', '1', 'MainRoofAngle'],\n    '5105': ['CS', '1', 'ConnectorType'],\n    '5106': ['SH', '1', 'WedgeModelNumber'],\n    '5107': ['DS', '1', 'WedgeAngleFloat'],\n    '5108': ['DS', '1', 'WedgeRoofAngle'],\n    '5109': ['CS', '1', 'WedgeElement1Position'],\n    '510A': ['DS', '1', 'WedgeMaterialVelocity'],\n    '510B': ['SH', '1', 'WedgeMaterial'],\n    '510C': ['DS', '1', 'WedgeOffsetZ'],\n    '510D': ['DS', '1', 'WedgeOriginOffsetX'],\n    '510E': ['DS', '1', 'WedgeTimeDelay'],\n    '510F': ['SH', '1', 'WedgeName'],\n    '5110': ['SH', '1', 'WedgeManufacturerName'],\n    '5111': ['LO', '1', 'WedgeDescription'],\n    '5112': ['DS', '1', 'NominalBeamAngle'],\n    '5113': ['DS', '1', 'WedgeOffsetX'],\n    '5114': ['DS', '1', 'WedgeOffsetY'],\n    '5115': ['DS', '1', 'WedgeTotalLength'],\n    '5116': ['DS', '1', 'WedgeInContactLength'],\n    '5117': ['DS', '1', 'WedgeFrontGap'],\n    '5118': ['DS', '1', 'WedgeTotalHeight'],\n    '5119': ['DS', '1', 'WedgeFrontHeight'],\n    '511A': ['DS', '1', 'WedgeRearHeight'],\n    '511B': ['DS', '1', 'WedgeTotalWidth'],\n    '511C': ['DS', '1', 'WedgeInContactWidth'],\n    '511D': ['DS', '1', 'WedgeChamferHeight'],\n    '511E': ['CS', '1', 'WedgeCurve'],\n    '511F': ['DS', '1', 'RadiusAlongWedge']\n  },\n  '0016': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['DS', '1', 'WhitePoint'],\n    '0002': ['DS', '3', 'PrimaryChromaticities'],\n    '0003': ['UT', '1', 'BatteryLevel'],\n    '0004': ['DS', '1', 'ExposureTimeInSeconds'],\n    '0005': ['DS', '1', 'FNumber'],\n    '0006': ['IS', '1', 'OECFRows'],\n    '0007': ['IS', '1', 'OECFColumns'],\n    '0008': ['UC', '1-n', 'OECFColumnNames'],\n    '0009': ['DS', '1-n', 'OECFValues'],\n    '000A': ['IS', '1', 'SpatialFrequencyResponseRows'],\n    '000B': ['IS', '1', 'SpatialFrequencyResponseColumns'],\n    '000C': ['UC', '1-n', 'SpatialFrequencyResponseColumnNames'],\n    '000D': ['DS', '1-n', 'SpatialFrequencyResponseValues'],\n    '000E': ['IS', '1', 'ColorFilterArrayPatternRows'],\n    '000F': ['IS', '1', 'ColorFilterArrayPatternColumns'],\n    '0010': ['DS', '1-n', 'ColorFilterArrayPatternValues'],\n    '0011': ['US', '1', 'FlashFiringStatus'],\n    '0012': ['US', '1', 'FlashReturnStatus'],\n    '0013': ['US', '1', 'FlashMode'],\n    '0014': ['US', '1', 'FlashFunctionPresent'],\n    '0015': ['US', '1', 'FlashRedEyeMode'],\n    '0016': ['US', '1', 'ExposureProgram'],\n    '0017': ['UT', '1', 'SpectralSensitivity'],\n    '0018': ['IS', '1', 'PhotographicSensitivity'],\n    '0019': ['IS', '1', 'SelfTimerMode'],\n    '001A': ['US', '1', 'SensitivityType'],\n    '001B': ['IS', '1', 'StandardOutputSensitivity'],\n    '001C': ['IS', '1', 'RecommendedExposureIndex'],\n    '001D': ['IS', '1', 'ISOSpeed'],\n    '001E': ['IS', '1', 'ISOSpeedLatitudeyyy'],\n    '001F': ['IS', '1', 'ISOSpeedLatitudezzz'],\n    '0020': ['UT', '1', 'EXIFVersion'],\n    '0021': ['DS', '1', 'ShutterSpeedValue'],\n    '0022': ['DS', '1', 'ApertureValue'],\n    '0023': ['DS', '1', 'BrightnessValue'],\n    '0024': ['DS', '1', 'ExposureBiasValue'],\n    '0025': ['DS', '1', 'MaxApertureValue'],\n    '0026': ['DS', '1', 'SubjectDistance'],\n    '0027': ['US', '1', 'MeteringMode'],\n    '0028': ['US', '1', 'LightSource'],\n    '0029': ['DS', '1', 'FocalLength'],\n    '002A': ['IS', '2-4', 'SubjectArea'],\n    '002B': ['OB', '1', 'MakerNote'],\n    '0030': ['DS', '1', 'Temperature'],\n    '0031': ['DS', '1', 'Humidity'],\n    '0032': ['DS', '1', 'Pressure'],\n    '0033': ['DS', '1', 'WaterDepth'],\n    '0034': ['DS', '1', 'Acceleration'],\n    '0035': ['DS', '1', 'CameraElevationAngle'],\n    '0036': ['DS', '1-2', 'FlashEnergy'],\n    '0037': ['IS', '2', 'SubjectLocation'],\n    '0038': ['DS', '1', 'PhotographicExposureIndex'],\n    '0039': ['US', '1', 'SensingMethod'],\n    '003A': ['US', '1', 'FileSource'],\n    '003B': ['US', '1', 'SceneType'],\n    '0041': ['US', '1', 'CustomRendered'],\n    '0042': ['US', '1', 'ExposureMode'],\n    '0043': ['US', '1', 'WhiteBalance'],\n    '0044': ['DS', '1', 'DigitalZoomRatio'],\n    '0045': ['IS', '1', 'FocalLengthIn35mmFilm'],\n    '0046': ['US', '1', 'SceneCaptureType'],\n    '0047': ['US', '1', 'GainControl'],\n    '0048': ['US', '1', 'Contrast'],\n    '0049': ['US', '1', 'Saturation'],\n    '004A': ['US', '1', 'Sharpness'],\n    '004B': ['OB', '1', 'DeviceSettingDescription'],\n    '004C': ['US', '1', 'SubjectDistanceRange'],\n    '004D': ['UT', '1', 'CameraOwnerName'],\n    '004E': ['DS', '4', 'LensSpecification'],\n    '004F': ['UT', '1', 'LensMake'],\n    '0050': ['UT', '1', 'LensModel'],\n    '0051': ['UT', '1', 'LensSerialNumber'],\n    '0061': ['CS', '1', 'InteroperabilityIndex'],\n    '0062': ['OB', '1', 'InteroperabilityVersion'],\n    '0070': ['OB', '1', 'GPSVersionID'],\n    '0071': ['CS', '1', 'GPSLatitudeRef'],\n    '0072': ['DS', '3', 'GPSLatitude'],\n    '0073': ['CS', '1', 'GPSLongitudeRef'],\n    '0074': ['DS', '3', 'GPSLongitude'],\n    '0075': ['US', '1', 'GPSAltitudeRef'],\n    '0076': ['DS', '1', 'GPSAltitude'],\n    '0077': ['DT', '1', 'GPSTimeStamp'],\n    '0078': ['UT', '1', 'GPSSatellites'],\n    '0079': ['CS', '1', 'GPSStatus'],\n    '007A': ['CS', '1', 'GPSMeasureMode'],\n    '007B': ['DS', '1', 'GPSDOP'],\n    '007C': ['CS', '1', 'GPSSpeedRef'],\n    '007D': ['DS', '1', 'GPSSpeed'],\n    '007E': ['CS', '1', 'GPSTrackRef'],\n    '007F': ['DS', '1', 'GPSTrack'],\n    '0080': ['CS', '1', 'GPSImgDirectionRef'],\n    '0081': ['DS', '1', 'GPSImgDirection'],\n    '0082': ['UT', '1', 'GPSMapDatum'],\n    '0083': ['CS', '1', 'GPSDestLatitudeRef'],\n    '0084': ['DS', '3', 'GPSDestLatitude'],\n    '0085': ['CS', '1', 'GPSDestLongitudeRef'],\n    '0086': ['DS', '3', 'GPSDestLongitude'],\n    '0087': ['CS', '1', 'GPSDestBearingRef'],\n    '0088': ['DS', '1', 'GPSDestBearing'],\n    '0089': ['CS', '1', 'GPSDestDistanceRef'],\n    '008A': ['DS', '1', 'GPSDestDistance'],\n    '008B': ['OB', '1', 'GPSProcessingMethod'],\n    '008C': ['OB', '1', 'GPSAreaInformation'],\n    '008D': ['DT', '1', 'GPSDateStamp'],\n    '008E': ['IS', '1', 'GPSDifferential'],\n    '1001': ['CS', '1', 'LightSourcePolarization'],\n    '1002': ['DS', '1', 'EmitterColorTemperature'],\n    '1003': ['CS', '1', 'ContactMethod'],\n    '1004': ['CS', '1-n', 'ImmersionMedia'],\n    '1005': ['DS', '1', 'OpticalMagnificationFactor']\n  },\n  '0018': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['LO', '1', 'ContrastBolusAgent'],\n    '0012': ['SQ', '1', 'ContrastBolusAgentSequence'],\n    '0013': ['FL', '1', 'ContrastBolusT1Relaxivity'],\n    '0014': ['SQ', '1', 'ContrastBolusAdministrationRouteSequence'],\n    '0015': ['CS', '1', 'BodyPartExamined'],\n    '0020': ['CS', '1-n', 'ScanningSequence'],\n    '0021': ['CS', '1-n', 'SequenceVariant'],\n    '0022': ['CS', '1-n', 'ScanOptions'],\n    '0023': ['CS', '1', 'MRAcquisitionType'],\n    '0024': ['SH', '1', 'SequenceName'],\n    '0025': ['CS', '1', 'AngioFlag'],\n    '0026': ['SQ', '1', 'InterventionDrugInformationSequence'],\n    '0027': ['TM', '1', 'InterventionDrugStopTime'],\n    '0028': ['DS', '1', 'InterventionDrugDose'],\n    '0029': ['SQ', '1', 'InterventionDrugCodeSequence'],\n    '002A': ['SQ', '1', 'AdditionalDrugSequence'],\n    '0030': ['LO', '1-n', 'Radionuclide'],\n    '0031': ['LO', '1', 'Radiopharmaceutical'],\n    '0032': ['DS', '1', 'EnergyWindowCenterline'],\n    '0033': ['DS', '1-n', 'EnergyWindowTotalWidth'],\n    '0034': ['LO', '1', 'InterventionDrugName'],\n    '0035': ['TM', '1', 'InterventionDrugStartTime'],\n    '0036': ['SQ', '1', 'InterventionSequence'],\n    '0037': ['CS', '1', 'TherapyType'],\n    '0038': ['CS', '1', 'InterventionStatus'],\n    '0039': ['CS', '1', 'TherapyDescription'],\n    '003A': ['ST', '1', 'InterventionDescription'],\n    '0040': ['IS', '1', 'CineRate'],\n    '0042': ['CS', '1', 'InitialCineRunState'],\n    '0050': ['DS', '1', 'SliceThickness'],\n    '0060': ['DS', '1', 'KVP'],\n    '0061': ['DS', '1', ''],\n    '0070': ['IS', '1', 'CountsAccumulated'],\n    '0071': ['CS', '1', 'AcquisitionTerminationCondition'],\n    '0072': ['DS', '1', 'EffectiveDuration'],\n    '0073': ['CS', '1', 'AcquisitionStartCondition'],\n    '0074': ['IS', '1', 'AcquisitionStartConditionData'],\n    '0075': ['IS', '1', 'AcquisitionTerminationConditionData'],\n    '0080': ['DS', '1', 'RepetitionTime'],\n    '0081': ['DS', '1', 'EchoTime'],\n    '0082': ['DS', '1', 'InversionTime'],\n    '0083': ['DS', '1', 'NumberOfAverages'],\n    '0084': ['DS', '1', 'ImagingFrequency'],\n    '0085': ['SH', '1', 'ImagedNucleus'],\n    '0086': ['IS', '1-n', 'EchoNumbers'],\n    '0087': ['DS', '1', 'MagneticFieldStrength'],\n    '0088': ['DS', '1', 'SpacingBetweenSlices'],\n    '0089': ['IS', '1', 'NumberOfPhaseEncodingSteps'],\n    '0090': ['DS', '1', 'DataCollectionDiameter'],\n    '0091': ['IS', '1', 'EchoTrainLength'],\n    '0093': ['DS', '1', 'PercentSampling'],\n    '0094': ['DS', '1', 'PercentPhaseFieldOfView'],\n    '0095': ['DS', '1', 'PixelBandwidth'],\n    '1000': ['LO', '1', 'DeviceSerialNumber'],\n    '1002': ['UI', '1', 'DeviceUID'],\n    '1003': ['LO', '1', 'DeviceID'],\n    '1004': ['LO', '1', 'PlateID'],\n    '1005': ['LO', '1', 'GeneratorID'],\n    '1006': ['LO', '1', 'GridID'],\n    '1007': ['LO', '1', 'CassetteID'],\n    '1008': ['LO', '1', 'GantryID'],\n    '1009': ['UT', '1', 'UniqueDeviceIdentifier'],\n    '100A': ['SQ', '1', 'UDISequence'],\n    '100B': ['UI', '1-n', 'ManufacturerDeviceClassUID'],\n    '1010': ['LO', '1', 'SecondaryCaptureDeviceID'],\n    '1011': ['LO', '1', 'HardcopyCreationDeviceID'],\n    '1012': ['DA', '1', 'DateOfSecondaryCapture'],\n    '1014': ['TM', '1', 'TimeOfSecondaryCapture'],\n    '1016': ['LO', '1', 'SecondaryCaptureDeviceManufacturer'],\n    '1017': ['LO', '1', 'HardcopyDeviceManufacturer'],\n    '1018': ['LO', '1', 'SecondaryCaptureDeviceManufacturerModelName'],\n    '1019': ['LO', '1-n', 'SecondaryCaptureDeviceSoftwareVersions'],\n    '101A': ['LO', '1-n', 'HardcopyDeviceSoftwareVersion'],\n    '101B': ['LO', '1', 'HardcopyDeviceManufacturerModelName'],\n    '1020': ['LO', '1-n', 'SoftwareVersions'],\n    '1022': ['SH', '1', 'VideoImageFormatAcquired'],\n    '1023': ['LO', '1', 'DigitalImageFormatAcquired'],\n    '1030': ['LO', '1', 'ProtocolName'],\n    '1040': ['LO', '1', 'ContrastBolusRoute'],\n    '1041': ['DS', '1', 'ContrastBolusVolume'],\n    '1042': ['TM', '1', 'ContrastBolusStartTime'],\n    '1043': ['TM', '1', 'ContrastBolusStopTime'],\n    '1044': ['DS', '1', 'ContrastBolusTotalDose'],\n    '1045': ['IS', '1', 'SyringeCounts'],\n    '1046': ['DS', '1-n', 'ContrastFlowRate'],\n    '1047': ['DS', '1-n', 'ContrastFlowDuration'],\n    '1048': ['CS', '1', 'ContrastBolusIngredient'],\n    '1049': ['DS', '1', 'ContrastBolusIngredientConcentration'],\n    '1050': ['DS', '1', 'SpatialResolution'],\n    '1060': ['DS', '1', 'TriggerTime'],\n    '1061': ['LO', '1', 'TriggerSourceOrType'],\n    '1062': ['IS', '1', 'NominalInterval'],\n    '1063': ['DS', '1', 'FrameTime'],\n    '1064': ['LO', '1', 'CardiacFramingType'],\n    '1065': ['DS', '1-n', 'FrameTimeVector'],\n    '1066': ['DS', '1', 'FrameDelay'],\n    '1067': ['DS', '1', 'ImageTriggerDelay'],\n    '1068': ['DS', '1', 'MultiplexGroupTimeOffset'],\n    '1069': ['DS', '1', 'TriggerTimeOffset'],\n    '106A': ['CS', '1', 'SynchronizationTrigger'],\n    '106C': ['US', '2', 'SynchronizationChannel'],\n    '106E': ['UL', '1', 'TriggerSamplePosition'],\n    '1070': ['LO', '1', 'RadiopharmaceuticalRoute'],\n    '1071': ['DS', '1', 'RadiopharmaceuticalVolume'],\n    '1072': ['TM', '1', 'RadiopharmaceuticalStartTime'],\n    '1073': ['TM', '1', 'RadiopharmaceuticalStopTime'],\n    '1074': ['DS', '1', 'RadionuclideTotalDose'],\n    '1075': ['DS', '1', 'RadionuclideHalfLife'],\n    '1076': ['DS', '1', 'RadionuclidePositronFraction'],\n    '1077': ['DS', '1', 'RadiopharmaceuticalSpecificActivity'],\n    '1078': ['DT', '1', 'RadiopharmaceuticalStartDateTime'],\n    '1079': ['DT', '1', 'RadiopharmaceuticalStopDateTime'],\n    '1080': ['CS', '1', 'BeatRejectionFlag'],\n    '1081': ['IS', '1', 'LowRRValue'],\n    '1082': ['IS', '1', 'HighRRValue'],\n    '1083': ['IS', '1', 'IntervalsAcquired'],\n    '1084': ['IS', '1', 'IntervalsRejected'],\n    '1085': ['LO', '1', 'PVCRejection'],\n    '1086': ['IS', '1', 'SkipBeats'],\n    '1088': ['IS', '1', 'HeartRate'],\n    '1090': ['IS', '1', 'CardiacNumberOfImages'],\n    '1094': ['IS', '1', 'TriggerWindow'],\n    '1100': ['DS', '1', 'ReconstructionDiameter'],\n    '1110': ['DS', '1', 'DistanceSourceToDetector'],\n    '1111': ['DS', '1', 'DistanceSourceToPatient'],\n    '1114': ['DS', '1', 'EstimatedRadiographicMagnificationFactor'],\n    '1120': ['DS', '1', 'GantryDetectorTilt'],\n    '1121': ['DS', '1', 'GantryDetectorSlew'],\n    '1130': ['DS', '1', 'TableHeight'],\n    '1131': ['DS', '1', 'TableTraverse'],\n    '1134': ['CS', '1', 'TableMotion'],\n    '1135': ['DS', '1-n', 'TableVerticalIncrement'],\n    '1136': ['DS', '1-n', 'TableLateralIncrement'],\n    '1137': ['DS', '1-n', 'TableLongitudinalIncrement'],\n    '1138': ['DS', '1', 'TableAngle'],\n    '113A': ['CS', '1', 'TableType'],\n    '1140': ['CS', '1', 'RotationDirection'],\n    '1141': ['DS', '1', 'AngularPosition'],\n    '1142': ['DS', '1-n', 'RadialPosition'],\n    '1143': ['DS', '1', 'ScanArc'],\n    '1144': ['DS', '1', 'AngularStep'],\n    '1145': ['DS', '1', 'CenterOfRotationOffset'],\n    '1146': ['DS', '1-n', 'RotationOffset'],\n    '1147': ['CS', '1', 'FieldOfViewShape'],\n    '1149': ['IS', '1-2', 'FieldOfViewDimensions'],\n    '1150': ['IS', '1', 'ExposureTime'],\n    '1151': ['IS', '1', 'XRayTubeCurrent'],\n    '1152': ['IS', '1', 'Exposure'],\n    '1153': ['IS', '1', 'ExposureInuAs'],\n    '1154': ['DS', '1', 'AveragePulseWidth'],\n    '1155': ['CS', '1', 'RadiationSetting'],\n    '1156': ['CS', '1', 'RectificationType'],\n    '115A': ['CS', '1', 'RadiationMode'],\n    '115E': ['DS', '1', 'ImageAndFluoroscopyAreaDoseProduct'],\n    '1160': ['SH', '1', 'FilterType'],\n    '1161': ['LO', '1-n', 'TypeOfFilters'],\n    '1162': ['DS', '1', 'IntensifierSize'],\n    '1164': ['DS', '2', 'ImagerPixelSpacing'],\n    '1166': ['CS', '1-n', 'Grid'],\n    '1170': ['IS', '1', 'GeneratorPower'],\n    '1180': ['SH', '1', 'CollimatorGridName'],\n    '1181': ['CS', '1', 'CollimatorType'],\n    '1182': ['IS', '1-2', 'FocalDistance'],\n    '1183': ['DS', '1-2', 'XFocusCenter'],\n    '1184': ['DS', '1-2', 'YFocusCenter'],\n    '1190': ['DS', '1-n', 'FocalSpots'],\n    '1191': ['CS', '1', 'AnodeTargetMaterial'],\n    '11A0': ['DS', '1', 'BodyPartThickness'],\n    '11A2': ['DS', '1', 'CompressionForce'],\n    '11A3': ['DS', '1', 'CompressionPressure'],\n    '11A4': ['LO', '1', 'PaddleDescription'],\n    '11A5': ['DS', '1', 'CompressionContactArea'],\n    '11B0': ['LO', '1', 'AcquisitionMode'],\n    '11B1': ['LO', '1', 'DoseModeName'],\n    '11B2': ['CS', '1', 'AcquiredSubtractionMaskFlag'],\n    '11B3': ['CS', '1', 'FluoroscopyPersistenceFlag'],\n    '11B4': ['CS', '1', 'FluoroscopyLastImageHoldPersistenceFlag'],\n    '11B5': ['IS', '1', 'UpperLimitNumberOfPersistentFluoroscopyFrames'],\n    '11B6': ['CS', '1', 'ContrastBolusAutoInjectionTriggerFlag'],\n    '11B7': ['FD', '1', 'ContrastBolusInjectionDelay'],\n    '11B8': ['SQ', '1', 'XAAcquisitionPhaseDetailsSequence'],\n    '11B9': ['FD', '1', 'XAAcquisitionFrameRate'],\n    '11BA': ['SQ', '1', 'XAPlaneDetailsSequence'],\n    '11BB': ['LO', '1', 'AcquisitionFieldOfViewLabel'],\n    '11BC': ['SQ', '1', 'XRayFilterDetailsSequence'],\n    '11BD': ['FD', '1', 'XAAcquisitionDuration'],\n    '11BE': ['CS', '1', 'ReconstructionPipelineType'],\n    '11BF': ['SQ', '1', 'ImageFilterDetailsSequence'],\n    '11C0': ['CS', '1', 'AppliedMaskSubtractionFlag'],\n    '11C1': ['SQ', '1', 'RequestedSeriesDescriptionCodeSequence'],\n    '1200': ['DA', '1-n', 'DateOfLastCalibration'],\n    '1201': ['TM', '1-n', 'TimeOfLastCalibration'],\n    '1202': ['DT', '1', 'DateTimeOfLastCalibration'],\n    '1203': ['DT', '1', 'CalibrationDateTime'],\n    '1210': ['SH', '1-n', 'ConvolutionKernel'],\n    '1240': ['IS', '1-n', 'UpperLowerPixelValues'],\n    '1242': ['IS', '1', 'ActualFrameDuration'],\n    '1243': ['IS', '1', 'CountRate'],\n    '1244': ['US', '1', 'PreferredPlaybackSequencing'],\n    '1250': ['SH', '1', 'ReceiveCoilName'],\n    '1251': ['SH', '1', 'TransmitCoilName'],\n    '1260': ['SH', '1', 'PlateType'],\n    '1261': ['LO', '1', 'PhosphorType'],\n    '1271': ['FD', '1', 'WaterEquivalentDiameter'],\n    '1272': ['SQ', '1', 'WaterEquivalentDiameterCalculationMethodCodeSequence'],\n    '1300': ['DS', '1', 'ScanVelocity'],\n    '1301': ['CS', '1-n', 'WholeBodyTechnique'],\n    '1302': ['IS', '1', 'ScanLength'],\n    '1310': ['US', '4', 'AcquisitionMatrix'],\n    '1312': ['CS', '1', 'InPlanePhaseEncodingDirection'],\n    '1314': ['DS', '1', 'FlipAngle'],\n    '1315': ['CS', '1', 'VariableFlipAngleFlag'],\n    '1316': ['DS', '1', 'SAR'],\n    '1318': ['DS', '1', 'dBdt'],\n    '1320': ['FL', '1', 'B1rms'],\n    '1400': ['LO', '1', 'AcquisitionDeviceProcessingDescription'],\n    '1401': ['LO', '1', 'AcquisitionDeviceProcessingCode'],\n    '1402': ['CS', '1', 'CassetteOrientation'],\n    '1403': ['CS', '1', 'CassetteSize'],\n    '1404': ['US', '1', 'ExposuresOnPlate'],\n    '1405': ['IS', '1', 'RelativeXRayExposure'],\n    '1411': ['DS', '1', 'ExposureIndex'],\n    '1412': ['DS', '1', 'TargetExposureIndex'],\n    '1413': ['DS', '1', 'DeviationIndex'],\n    '1450': ['DS', '1', 'ColumnAngulation'],\n    '1460': ['DS', '1', 'TomoLayerHeight'],\n    '1470': ['DS', '1', 'TomoAngle'],\n    '1480': ['DS', '1', 'TomoTime'],\n    '1490': ['CS', '1', 'TomoType'],\n    '1491': ['CS', '1', 'TomoClass'],\n    '1495': ['IS', '1', 'NumberOfTomosynthesisSourceImages'],\n    '1500': ['CS', '1', 'PositionerMotion'],\n    '1508': ['CS', '1', 'PositionerType'],\n    '1510': ['DS', '1', 'PositionerPrimaryAngle'],\n    '1511': ['DS', '1', 'PositionerSecondaryAngle'],\n    '1520': ['DS', '1-n', 'PositionerPrimaryAngleIncrement'],\n    '1521': ['DS', '1-n', 'PositionerSecondaryAngleIncrement'],\n    '1530': ['DS', '1', 'DetectorPrimaryAngle'],\n    '1531': ['DS', '1', 'DetectorSecondaryAngle'],\n    '1600': ['CS', '1-3', 'ShutterShape'],\n    '1602': ['IS', '1', 'ShutterLeftVerticalEdge'],\n    '1604': ['IS', '1', 'ShutterRightVerticalEdge'],\n    '1606': ['IS', '1', 'ShutterUpperHorizontalEdge'],\n    '1608': ['IS', '1', 'ShutterLowerHorizontalEdge'],\n    '1610': ['IS', '2', 'CenterOfCircularShutter'],\n    '1612': ['IS', '1', 'RadiusOfCircularShutter'],\n    '1620': ['IS', '2-2n', 'VerticesOfThePolygonalShutter'],\n    '1622': ['US', '1', 'ShutterPresentationValue'],\n    '1623': ['US', '1', 'ShutterOverlayGroup'],\n    '1624': ['US', '3', 'ShutterPresentationColorCIELabValue'],\n    '1630': ['CS', '1', 'OutlineShapeType'],\n    '1631': ['FD', '1', 'OutlineLeftVerticalEdge'],\n    '1632': ['FD', '1', 'OutlineRightVerticalEdge'],\n    '1633': ['FD', '1', 'OutlineUpperHorizontalEdge'],\n    '1634': ['FD', '1', 'OutlineLowerHorizontalEdge'],\n    '1635': ['FD', '2', 'CenterOfCircularOutline'],\n    '1636': ['FD', '1', 'DiameterOfCircularOutline'],\n    '1637': ['UL', '1', 'NumberOfPolygonalVertices'],\n    '1638': ['OF', '1', 'VerticesOfThePolygonalOutline'],\n    '1700': ['CS', '1-3', 'CollimatorShape'],\n    '1702': ['IS', '1', 'CollimatorLeftVerticalEdge'],\n    '1704': ['IS', '1', 'CollimatorRightVerticalEdge'],\n    '1706': ['IS', '1', 'CollimatorUpperHorizontalEdge'],\n    '1708': ['IS', '1', 'CollimatorLowerHorizontalEdge'],\n    '1710': ['IS', '2', 'CenterOfCircularCollimator'],\n    '1712': ['IS', '1', 'RadiusOfCircularCollimator'],\n    '1720': ['IS', '2-2n', 'VerticesOfThePolygonalCollimator'],\n    '1800': ['CS', '1', 'AcquisitionTimeSynchronized'],\n    '1801': ['SH', '1', 'TimeSource'],\n    '1802': ['CS', '1', 'TimeDistributionProtocol'],\n    '1803': ['LO', '1', 'NTPSourceAddress'],\n    '2001': ['IS', '1-n', 'PageNumberVector'],\n    '2002': ['SH', '1-n', 'FrameLabelVector'],\n    '2003': ['DS', '1-n', 'FramePrimaryAngleVector'],\n    '2004': ['DS', '1-n', 'FrameSecondaryAngleVector'],\n    '2005': ['DS', '1-n', 'SliceLocationVector'],\n    '2006': ['SH', '1-n', 'DisplayWindowLabelVector'],\n    '2010': ['DS', '2', 'NominalScannedPixelSpacing'],\n    '2020': ['CS', '1', 'DigitizingDeviceTransportDirection'],\n    '2030': ['DS', '1', 'RotationOfScannedFilm'],\n    '2041': ['SQ', '1', 'BiopsyTargetSequence'],\n    '2042': ['UI', '1', 'TargetUID'],\n    '2043': ['FL', '2', 'LocalizingCursorPosition'],\n    '2044': ['FL', '3', 'CalculatedTargetPosition'],\n    '2045': ['SH', '1', 'TargetLabel'],\n    '2046': ['FL', '1', 'DisplayedZValue'],\n    '3100': ['CS', '1', 'IVUSAcquisition'],\n    '3101': ['DS', '1', 'IVUSPullbackRate'],\n    '3102': ['DS', '1', 'IVUSGatedRate'],\n    '3103': ['IS', '1', 'IVUSPullbackStartFrameNumber'],\n    '3104': ['IS', '1', 'IVUSPullbackStopFrameNumber'],\n    '3105': ['IS', '1-n', 'LesionNumber'],\n    '4000': ['LT', '1', 'AcquisitionComments'],\n    '5000': ['SH', '1-n', 'OutputPower'],\n    '5010': ['LO', '1-n', 'TransducerData'],\n    '5011': ['SQ', '1', 'TransducerIdentificationSequence'],\n    '5012': ['DS', '1', 'FocusDepth'],\n    '5020': ['LO', '1', 'ProcessingFunction'],\n    '5021': ['LO', '1', 'PostprocessingFunction'],\n    '5022': ['DS', '1', 'MechanicalIndex'],\n    '5024': ['DS', '1', 'BoneThermalIndex'],\n    '5026': ['DS', '1', 'CranialThermalIndex'],\n    '5027': ['DS', '1', 'SoftTissueThermalIndex'],\n    '5028': ['DS', '1', 'SoftTissueFocusThermalIndex'],\n    '5029': ['DS', '1', 'SoftTissueSurfaceThermalIndex'],\n    '5030': ['DS', '1', 'DynamicRange'],\n    '5040': ['DS', '1', 'TotalGain'],\n    '5050': ['IS', '1', 'DepthOfScanField'],\n    '5100': ['CS', '1', 'PatientPosition'],\n    '5101': ['CS', '1', 'ViewPosition'],\n    '5104': ['SQ', '1', 'ProjectionEponymousNameCodeSequence'],\n    '5210': ['DS', '6', 'ImageTransformationMatrix'],\n    '5212': ['DS', '3', 'ImageTranslationVector'],\n    '6000': ['DS', '1', 'Sensitivity'],\n    '6011': ['SQ', '1', 'SequenceOfUltrasoundRegions'],\n    '6012': ['US', '1', 'RegionSpatialFormat'],\n    '6014': ['US', '1', 'RegionDataType'],\n    '6016': ['UL', '1', 'RegionFlags'],\n    '6018': ['UL', '1', 'RegionLocationMinX0'],\n    '601A': ['UL', '1', 'RegionLocationMinY0'],\n    '601C': ['UL', '1', 'RegionLocationMaxX1'],\n    '601E': ['UL', '1', 'RegionLocationMaxY1'],\n    '6020': ['SL', '1', 'ReferencePixelX0'],\n    '6022': ['SL', '1', 'ReferencePixelY0'],\n    '6024': ['US', '1', 'PhysicalUnitsXDirection'],\n    '6026': ['US', '1', 'PhysicalUnitsYDirection'],\n    '6028': ['FD', '1', 'ReferencePixelPhysicalValueX'],\n    '602A': ['FD', '1', 'ReferencePixelPhysicalValueY'],\n    '602C': ['FD', '1', 'PhysicalDeltaX'],\n    '602E': ['FD', '1', 'PhysicalDeltaY'],\n    '6030': ['UL', '1', 'TransducerFrequency'],\n    '6031': ['CS', '1', 'TransducerType'],\n    '6032': ['UL', '1', 'PulseRepetitionFrequency'],\n    '6034': ['FD', '1', 'DopplerCorrectionAngle'],\n    '6036': ['FD', '1', 'SteeringAngle'],\n    '6038': ['UL', '1', 'DopplerSampleVolumeXPositionRetired'],\n    '6039': ['SL', '1', 'DopplerSampleVolumeXPosition'],\n    '603A': ['UL', '1', 'DopplerSampleVolumeYPositionRetired'],\n    '603B': ['SL', '1', 'DopplerSampleVolumeYPosition'],\n    '603C': ['UL', '1', 'TMLinePositionX0Retired'],\n    '603D': ['SL', '1', 'TMLinePositionX0'],\n    '603E': ['UL', '1', 'TMLinePositionY0Retired'],\n    '603F': ['SL', '1', 'TMLinePositionY0'],\n    '6040': ['UL', '1', 'TMLinePositionX1Retired'],\n    '6041': ['SL', '1', 'TMLinePositionX1'],\n    '6042': ['UL', '1', 'TMLinePositionY1Retired'],\n    '6043': ['SL', '1', 'TMLinePositionY1'],\n    '6044': ['US', '1', 'PixelComponentOrganization'],\n    '6046': ['UL', '1', 'PixelComponentMask'],\n    '6048': ['UL', '1', 'PixelComponentRangeStart'],\n    '604A': ['UL', '1', 'PixelComponentRangeStop'],\n    '604C': ['US', '1', 'PixelComponentPhysicalUnits'],\n    '604E': ['US', '1', 'PixelComponentDataType'],\n    '6050': ['UL', '1', 'NumberOfTableBreakPoints'],\n    '6052': ['UL', '1-n', 'TableOfXBreakPoints'],\n    '6054': ['FD', '1-n', 'TableOfYBreakPoints'],\n    '6056': ['UL', '1', 'NumberOfTableEntries'],\n    '6058': ['UL', '1-n', 'TableOfPixelValues'],\n    '605A': ['FL', '1-n', 'TableOfParameterValues'],\n    '6060': ['FL', '1-n', 'RWaveTimeVector'],\n    '6070': ['US', '1', 'ActiveImageAreaOverlayGroup'],\n    '7000': ['CS', '1', 'DetectorConditionsNominalFlag'],\n    '7001': ['DS', '1', 'DetectorTemperature'],\n    '7004': ['CS', '1', 'DetectorType'],\n    '7005': ['CS', '1', 'DetectorConfiguration'],\n    '7006': ['LT', '1', 'DetectorDescription'],\n    '7008': ['LT', '1', 'DetectorMode'],\n    '700A': ['SH', '1', 'DetectorID'],\n    '700C': ['DA', '1', 'DateOfLastDetectorCalibration'],\n    '700E': ['TM', '1', 'TimeOfLastDetectorCalibration'],\n    '7010': ['IS', '1', 'ExposuresOnDetectorSinceLastCalibration'],\n    '7011': ['IS', '1', 'ExposuresOnDetectorSinceManufactured'],\n    '7012': ['DS', '1', 'DetectorTimeSinceLastExposure'],\n    '7014': ['DS', '1', 'DetectorActiveTime'],\n    '7016': ['DS', '1', 'DetectorActivationOffsetFromExposure'],\n    '701A': ['DS', '2', 'DetectorBinning'],\n    '7020': ['DS', '2', 'DetectorElementPhysicalSize'],\n    '7022': ['DS', '2', 'DetectorElementSpacing'],\n    '7024': ['CS', '1', 'DetectorActiveShape'],\n    '7026': ['DS', '1-2', 'DetectorActiveDimensions'],\n    '7028': ['DS', '2', 'DetectorActiveOrigin'],\n    '702A': ['LO', '1', 'DetectorManufacturerName'],\n    '702B': ['LO', '1', 'DetectorManufacturerModelName'],\n    '7030': ['DS', '2', 'FieldOfViewOrigin'],\n    '7032': ['DS', '1', 'FieldOfViewRotation'],\n    '7034': ['CS', '1', 'FieldOfViewHorizontalFlip'],\n    '7036': ['FL', '2', 'PixelDataAreaOriginRelativeToFOV'],\n    '7038': ['FL', '1', 'PixelDataAreaRotationAngleRelativeToFOV'],\n    '7040': ['LT', '1', 'GridAbsorbingMaterial'],\n    '7041': ['LT', '1', 'GridSpacingMaterial'],\n    '7042': ['DS', '1', 'GridThickness'],\n    '7044': ['DS', '1', 'GridPitch'],\n    '7046': ['IS', '2', 'GridAspectRatio'],\n    '7048': ['DS', '1', 'GridPeriod'],\n    '704C': ['DS', '1', 'GridFocalDistance'],\n    '7050': ['CS', '1-n', 'FilterMaterial'],\n    '7052': ['DS', '1-n', 'FilterThicknessMinimum'],\n    '7054': ['DS', '1-n', 'FilterThicknessMaximum'],\n    '7056': ['FL', '1-n', 'FilterBeamPathLengthMinimum'],\n    '7058': ['FL', '1-n', 'FilterBeamPathLengthMaximum'],\n    '7060': ['CS', '1', 'ExposureControlMode'],\n    '7062': ['LT', '1', 'ExposureControlModeDescription'],\n    '7064': ['CS', '1', 'ExposureStatus'],\n    '7065': ['DS', '1', 'PhototimerSetting'],\n    '8150': ['DS', '1', 'ExposureTimeInuS'],\n    '8151': ['DS', '1', 'XRayTubeCurrentInuA'],\n    '9004': ['CS', '1', 'ContentQualification'],\n    '9005': ['SH', '1', 'PulseSequenceName'],\n    '9006': ['SQ', '1', 'MRImagingModifierSequence'],\n    '9008': ['CS', '1', 'EchoPulseSequence'],\n    '9009': ['CS', '1', 'InversionRecovery'],\n    '9010': ['CS', '1', 'FlowCompensation'],\n    '9011': ['CS', '1', 'MultipleSpinEcho'],\n    '9012': ['CS', '1', 'MultiPlanarExcitation'],\n    '9014': ['CS', '1', 'PhaseContrast'],\n    '9015': ['CS', '1', 'TimeOfFlightContrast'],\n    '9016': ['CS', '1', 'Spoiling'],\n    '9017': ['CS', '1', 'SteadyStatePulseSequence'],\n    '9018': ['CS', '1', 'EchoPlanarPulseSequence'],\n    '9019': ['FD', '1', 'TagAngleFirstAxis'],\n    '9020': ['CS', '1', 'MagnetizationTransfer'],\n    '9021': ['CS', '1', 'T2Preparation'],\n    '9022': ['CS', '1', 'BloodSignalNulling'],\n    '9024': ['CS', '1', 'SaturationRecovery'],\n    '9025': ['CS', '1', 'SpectrallySelectedSuppression'],\n    '9026': ['CS', '1', 'SpectrallySelectedExcitation'],\n    '9027': ['CS', '1', 'SpatialPresaturation'],\n    '9028': ['CS', '1', 'Tagging'],\n    '9029': ['CS', '1', 'OversamplingPhase'],\n    '9030': ['FD', '1', 'TagSpacingFirstDimension'],\n    '9032': ['CS', '1', 'GeometryOfKSpaceTraversal'],\n    '9033': ['CS', '1', 'SegmentedKSpaceTraversal'],\n    '9034': ['CS', '1', 'RectilinearPhaseEncodeReordering'],\n    '9035': ['FD', '1', 'TagThickness'],\n    '9036': ['CS', '1', 'PartialFourierDirection'],\n    '9037': ['CS', '1', 'CardiacSynchronizationTechnique'],\n    '9041': ['LO', '1', 'ReceiveCoilManufacturerName'],\n    '9042': ['SQ', '1', 'MRReceiveCoilSequence'],\n    '9043': ['CS', '1', 'ReceiveCoilType'],\n    '9044': ['CS', '1', 'QuadratureReceiveCoil'],\n    '9045': ['SQ', '1', 'MultiCoilDefinitionSequence'],\n    '9046': ['LO', '1', 'MultiCoilConfiguration'],\n    '9047': ['SH', '1', 'MultiCoilElementName'],\n    '9048': ['CS', '1', 'MultiCoilElementUsed'],\n    '9049': ['SQ', '1', 'MRTransmitCoilSequence'],\n    '9050': ['LO', '1', 'TransmitCoilManufacturerName'],\n    '9051': ['CS', '1', 'TransmitCoilType'],\n    '9052': ['FD', '1-2', 'SpectralWidth'],\n    '9053': ['FD', '1-2', 'ChemicalShiftReference'],\n    '9054': ['CS', '1', 'VolumeLocalizationTechnique'],\n    '9058': ['US', '1', 'MRAcquisitionFrequencyEncodingSteps'],\n    '9059': ['CS', '1', 'Decoupling'],\n    '9060': ['CS', '1-2', 'DecoupledNucleus'],\n    '9061': ['FD', '1-2', 'DecouplingFrequency'],\n    '9062': ['CS', '1', 'DecouplingMethod'],\n    '9063': ['FD', '1-2', 'DecouplingChemicalShiftReference'],\n    '9064': ['CS', '1', 'KSpaceFiltering'],\n    '9065': ['CS', '1-2', 'TimeDomainFiltering'],\n    '9066': ['US', '1-2', 'NumberOfZeroFills'],\n    '9067': ['CS', '1', 'BaselineCorrection'],\n    '9069': ['FD', '1', 'ParallelReductionFactorInPlane'],\n    '9070': ['FD', '1', 'CardiacRRIntervalSpecified'],\n    '9073': ['FD', '1', 'AcquisitionDuration'],\n    '9074': ['DT', '1', 'FrameAcquisitionDateTime'],\n    '9075': ['CS', '1', 'DiffusionDirectionality'],\n    '9076': ['SQ', '1', 'DiffusionGradientDirectionSequence'],\n    '9077': ['CS', '1', 'ParallelAcquisition'],\n    '9078': ['CS', '1', 'ParallelAcquisitionTechnique'],\n    '9079': ['FD', '1-n', 'InversionTimes'],\n    '9080': ['ST', '1', 'MetaboliteMapDescription'],\n    '9081': ['CS', '1', 'PartialFourier'],\n    '9082': ['FD', '1', 'EffectiveEchoTime'],\n    '9083': ['SQ', '1', 'MetaboliteMapCodeSequence'],\n    '9084': ['SQ', '1', 'ChemicalShiftSequence'],\n    '9085': ['CS', '1', 'CardiacSignalSource'],\n    '9087': ['FD', '1', 'DiffusionBValue'],\n    '9089': ['FD', '3', 'DiffusionGradientOrientation'],\n    '9090': ['FD', '3', 'VelocityEncodingDirection'],\n    '9091': ['FD', '1', 'VelocityEncodingMinimumValue'],\n    '9092': ['SQ', '1', 'VelocityEncodingAcquisitionSequence'],\n    '9093': ['US', '1', 'NumberOfKSpaceTrajectories'],\n    '9094': ['CS', '1', 'CoverageOfKSpace'],\n    '9095': ['UL', '1', 'SpectroscopyAcquisitionPhaseRows'],\n    '9096': ['FD', '1', 'ParallelReductionFactorInPlaneRetired'],\n    '9098': ['FD', '1-2', 'TransmitterFrequency'],\n    '9100': ['CS', '1-2', 'ResonantNucleus'],\n    '9101': ['CS', '1', 'FrequencyCorrection'],\n    '9103': ['SQ', '1', 'MRSpectroscopyFOVGeometrySequence'],\n    '9104': ['FD', '1', 'SlabThickness'],\n    '9105': ['FD', '3', 'SlabOrientation'],\n    '9106': ['FD', '3', 'MidSlabPosition'],\n    '9107': ['SQ', '1', 'MRSpatialSaturationSequence'],\n    '9112': ['SQ', '1', 'MRTimingAndRelatedParametersSequence'],\n    '9114': ['SQ', '1', 'MREchoSequence'],\n    '9115': ['SQ', '1', 'MRModifierSequence'],\n    '9117': ['SQ', '1', 'MRDiffusionSequence'],\n    '9118': ['SQ', '1', 'CardiacSynchronizationSequence'],\n    '9119': ['SQ', '1', 'MRAveragesSequence'],\n    '9125': ['SQ', '1', 'MRFOVGeometrySequence'],\n    '9126': ['SQ', '1', 'VolumeLocalizationSequence'],\n    '9127': ['UL', '1', 'SpectroscopyAcquisitionDataColumns'],\n    '9147': ['CS', '1', 'DiffusionAnisotropyType'],\n    '9151': ['DT', '1', 'FrameReferenceDateTime'],\n    '9152': ['SQ', '1', 'MRMetaboliteMapSequence'],\n    '9155': ['FD', '1', 'ParallelReductionFactorOutOfPlane'],\n    '9159': ['UL', '1', 'SpectroscopyAcquisitionOutOfPlanePhaseSteps'],\n    '9166': ['CS', '1', 'BulkMotionStatus'],\n    '9168': ['FD', '1', 'ParallelReductionFactorSecondInPlane'],\n    '9169': ['CS', '1', 'CardiacBeatRejectionTechnique'],\n    '9170': ['CS', '1', 'RespiratoryMotionCompensationTechnique'],\n    '9171': ['CS', '1', 'RespiratorySignalSource'],\n    '9172': ['CS', '1', 'BulkMotionCompensationTechnique'],\n    '9173': ['CS', '1', 'BulkMotionSignalSource'],\n    '9174': ['CS', '1', 'ApplicableSafetyStandardAgency'],\n    '9175': ['LO', '1', 'ApplicableSafetyStandardDescription'],\n    '9176': ['SQ', '1', 'OperatingModeSequence'],\n    '9177': ['CS', '1', 'OperatingModeType'],\n    '9178': ['CS', '1', 'OperatingMode'],\n    '9179': ['CS', '1', 'SpecificAbsorptionRateDefinition'],\n    '9180': ['CS', '1', 'GradientOutputType'],\n    '9181': ['FD', '1', 'SpecificAbsorptionRateValue'],\n    '9182': ['FD', '1', 'GradientOutput'],\n    '9183': ['CS', '1', 'FlowCompensationDirection'],\n    '9184': ['FD', '1', 'TaggingDelay'],\n    '9185': ['ST', '1', 'RespiratoryMotionCompensationTechniqueDescription'],\n    '9186': ['SH', '1', 'RespiratorySignalSourceID'],\n    '9195': ['FD', '1', 'ChemicalShiftMinimumIntegrationLimitInHz'],\n    '9196': ['FD', '1', 'ChemicalShiftMaximumIntegrationLimitInHz'],\n    '9197': ['SQ', '1', 'MRVelocityEncodingSequence'],\n    '9198': ['CS', '1', 'FirstOrderPhaseCorrection'],\n    '9199': ['CS', '1', 'WaterReferencedPhaseCorrection'],\n    '9200': ['CS', '1', 'MRSpectroscopyAcquisitionType'],\n    '9214': ['CS', '1', 'RespiratoryCyclePosition'],\n    '9217': ['FD', '1', 'VelocityEncodingMaximumValue'],\n    '9218': ['FD', '1', 'TagSpacingSecondDimension'],\n    '9219': ['SS', '1', 'TagAngleSecondAxis'],\n    '9220': ['FD', '1', 'FrameAcquisitionDuration'],\n    '9226': ['SQ', '1', 'MRImageFrameTypeSequence'],\n    '9227': ['SQ', '1', 'MRSpectroscopyFrameTypeSequence'],\n    '9231': ['US', '1', 'MRAcquisitionPhaseEncodingStepsInPlane'],\n    '9232': ['US', '1', 'MRAcquisitionPhaseEncodingStepsOutOfPlane'],\n    '9234': ['UL', '1', 'SpectroscopyAcquisitionPhaseColumns'],\n    '9236': ['CS', '1', 'CardiacCyclePosition'],\n    '9239': ['SQ', '1', 'SpecificAbsorptionRateSequence'],\n    '9240': ['US', '1', 'RFEchoTrainLength'],\n    '9241': ['US', '1', 'GradientEchoTrainLength'],\n    '9250': ['CS', '1', 'ArterialSpinLabelingContrast'],\n    '9251': ['SQ', '1', 'MRArterialSpinLabelingSequence'],\n    '9252': ['LO', '1', 'ASLTechniqueDescription'],\n    '9253': ['US', '1', 'ASLSlabNumber'],\n    '9254': ['FD', '1', 'ASLSlabThickness'],\n    '9255': ['FD', '3', 'ASLSlabOrientation'],\n    '9256': ['FD', '3', 'ASLMidSlabPosition'],\n    '9257': ['CS', '1', 'ASLContext'],\n    '9258': ['UL', '1', 'ASLPulseTrainDuration'],\n    '9259': ['CS', '1', 'ASLCrusherFlag'],\n    '925A': ['FD', '1', 'ASLCrusherFlowLimit'],\n    '925B': ['LO', '1', 'ASLCrusherDescription'],\n    '925C': ['CS', '1', 'ASLBolusCutoffFlag'],\n    '925D': ['SQ', '1', 'ASLBolusCutoffTimingSequence'],\n    '925E': ['LO', '1', 'ASLBolusCutoffTechnique'],\n    '925F': ['UL', '1', 'ASLBolusCutoffDelayTime'],\n    '9260': ['SQ', '1', 'ASLSlabSequence'],\n    '9295': ['FD', '1', 'ChemicalShiftMinimumIntegrationLimitInppm'],\n    '9296': ['FD', '1', 'ChemicalShiftMaximumIntegrationLimitInppm'],\n    '9297': ['CS', '1', 'WaterReferenceAcquisition'],\n    '9298': ['IS', '1', 'EchoPeakPosition'],\n    '9301': ['SQ', '1', 'CTAcquisitionTypeSequence'],\n    '9302': ['CS', '1', 'AcquisitionType'],\n    '9303': ['FD', '1', 'TubeAngle'],\n    '9304': ['SQ', '1', 'CTAcquisitionDetailsSequence'],\n    '9305': ['FD', '1', 'RevolutionTime'],\n    '9306': ['FD', '1', 'SingleCollimationWidth'],\n    '9307': ['FD', '1', 'TotalCollimationWidth'],\n    '9308': ['SQ', '1', 'CTTableDynamicsSequence'],\n    '9309': ['FD', '1', 'TableSpeed'],\n    '9310': ['FD', '1', 'TableFeedPerRotation'],\n    '9311': ['FD', '1', 'SpiralPitchFactor'],\n    '9312': ['SQ', '1', 'CTGeometrySequence'],\n    '9313': ['FD', '3', 'DataCollectionCenterPatient'],\n    '9314': ['SQ', '1', 'CTReconstructionSequence'],\n    '9315': ['CS', '1', 'ReconstructionAlgorithm'],\n    '9316': ['CS', '1', 'ConvolutionKernelGroup'],\n    '9317': ['FD', '2', 'ReconstructionFieldOfView'],\n    '9318': ['FD', '3', 'ReconstructionTargetCenterPatient'],\n    '9319': ['FD', '1', 'ReconstructionAngle'],\n    '9320': ['SH', '1', 'ImageFilter'],\n    '9321': ['SQ', '1', 'CTExposureSequence'],\n    '9322': ['FD', '2', 'ReconstructionPixelSpacing'],\n    '9323': ['CS', '1-n', 'ExposureModulationType'],\n    '9324': ['FD', '1', 'EstimatedDoseSaving'],\n    '9325': ['SQ', '1', 'CTXRayDetailsSequence'],\n    '9326': ['SQ', '1', 'CTPositionSequence'],\n    '9327': ['FD', '1', 'TablePosition'],\n    '9328': ['FD', '1', 'ExposureTimeInms'],\n    '9329': ['SQ', '1', 'CTImageFrameTypeSequence'],\n    '9330': ['FD', '1', 'XRayTubeCurrentInmA'],\n    '9332': ['FD', '1', 'ExposureInmAs'],\n    '9333': ['CS', '1', 'ConstantVolumeFlag'],\n    '9334': ['CS', '1', 'FluoroscopyFlag'],\n    '9335': ['FD', '1', 'DistanceSourceToDataCollectionCenter'],\n    '9337': ['US', '1', 'ContrastBolusAgentNumber'],\n    '9338': ['SQ', '1', 'ContrastBolusIngredientCodeSequence'],\n    '9340': ['SQ', '1', 'ContrastAdministrationProfileSequence'],\n    '9341': ['SQ', '1', 'ContrastBolusUsageSequence'],\n    '9342': ['CS', '1', 'ContrastBolusAgentAdministered'],\n    '9343': ['CS', '1', 'ContrastBolusAgentDetected'],\n    '9344': ['CS', '1', 'ContrastBolusAgentPhase'],\n    '9345': ['FD', '1', 'CTDIvol'],\n    '9346': ['SQ', '1', 'CTDIPhantomTypeCodeSequence'],\n    '9351': ['FL', '1', 'CalciumScoringMassFactorPatient'],\n    '9352': ['FL', '3', 'CalciumScoringMassFactorDevice'],\n    '9353': ['FL', '1', 'EnergyWeightingFactor'],\n    '9360': ['SQ', '1', 'CTAdditionalXRaySourceSequence'],\n    '9361': ['CS', '1', 'MultienergyCTAcquisition'],\n    '9362': ['SQ', '1', 'MultienergyCTAcquisitionSequence'],\n    '9363': ['SQ', '1', 'MultienergyCTProcessingSequence'],\n    '9364': ['SQ', '1', 'MultienergyCTCharacteristicsSequence'],\n    '9365': ['SQ', '1', 'MultienergyCTXRaySourceSequence'],\n    '9366': ['US', '1', 'XRaySourceIndex'],\n    '9367': ['UC', '1', 'XRaySourceID'],\n    '9368': ['CS', '1', 'MultienergySourceTechnique'],\n    '9369': ['DT', '1', 'SourceStartDateTime'],\n    '936A': ['DT', '1', 'SourceEndDateTime'],\n    '936B': ['US', '1', 'SwitchingPhaseNumber'],\n    '936C': ['DS', '1', 'SwitchingPhaseNominalDuration'],\n    '936D': ['DS', '1', 'SwitchingPhaseTransitionDuration'],\n    '936E': ['DS', '1', 'EffectiveBinEnergy'],\n    '936F': ['SQ', '1', 'MultienergyCTXRayDetectorSequence'],\n    '9370': ['US', '1', 'XRayDetectorIndex'],\n    '9371': ['UC', '1', 'XRayDetectorID'],\n    '9372': ['CS', '1', 'MultienergyDetectorType'],\n    '9373': ['ST', '1', 'XRayDetectorLabel'],\n    '9374': ['DS', '1', 'NominalMaxEnergy'],\n    '9375': ['DS', '1', 'NominalMinEnergy'],\n    '9376': ['US', '1-n', 'ReferencedXRayDetectorIndex'],\n    '9377': ['US', '1-n', 'ReferencedXRaySourceIndex'],\n    '9378': ['US', '1-n', 'ReferencedPathIndex'],\n    '9379': ['SQ', '1', 'MultienergyCTPathSequence'],\n    '937A': ['US', '1', 'MultienergyCTPathIndex'],\n    '937B': ['UT', '1', 'MultienergyAcquisitionDescription'],\n    '937C': ['FD', '1', 'MonoenergeticEnergyEquivalent'],\n    '937D': ['SQ', '1', 'MaterialCodeSequence'],\n    '937E': ['CS', '1', 'DecompositionMethod'],\n    '937F': ['UT', '1', 'DecompositionDescription'],\n    '9380': ['SQ', '1', 'DecompositionAlgorithmIdentificationSequence'],\n    '9381': ['SQ', '1', 'DecompositionMaterialSequence'],\n    '9382': ['SQ', '1', 'MaterialAttenuationSequence'],\n    '9383': ['DS', '1', 'PhotonEnergy'],\n    '9384': ['DS', '1', 'XRayMassAttenuationCoefficient'],\n    '9401': ['SQ', '1', 'ProjectionPixelCalibrationSequence'],\n    '9402': ['FL', '1', 'DistanceSourceToIsocenter'],\n    '9403': ['FL', '1', 'DistanceObjectToTableTop'],\n    '9404': ['FL', '2', 'ObjectPixelSpacingInCenterOfBeam'],\n    '9405': ['SQ', '1', 'PositionerPositionSequence'],\n    '9406': ['SQ', '1', 'TablePositionSequence'],\n    '9407': ['SQ', '1', 'CollimatorShapeSequence'],\n    '9410': ['CS', '1', 'PlanesInAcquisition'],\n    '9412': ['SQ', '1', 'XAXRFFrameCharacteristicsSequence'],\n    '9417': ['SQ', '1', 'FrameAcquisitionSequence'],\n    '9420': ['CS', '1', 'XRayReceptorType'],\n    '9423': ['LO', '1', 'AcquisitionProtocolName'],\n    '9424': ['LT', '1', 'AcquisitionProtocolDescription'],\n    '9425': ['CS', '1', 'ContrastBolusIngredientOpaque'],\n    '9426': ['FL', '1', 'DistanceReceptorPlaneToDetectorHousing'],\n    '9427': ['CS', '1', 'IntensifierActiveShape'],\n    '9428': ['FL', '1-2', 'IntensifierActiveDimensions'],\n    '9429': ['FL', '2', 'PhysicalDetectorSize'],\n    '9430': ['FL', '2', 'PositionOfIsocenterProjection'],\n    '9432': ['SQ', '1', 'FieldOfViewSequence'],\n    '9433': ['LO', '1', 'FieldOfViewDescription'],\n    '9434': ['SQ', '1', 'ExposureControlSensingRegionsSequence'],\n    '9435': ['CS', '1', 'ExposureControlSensingRegionShape'],\n    '9436': ['SS', '1', 'ExposureControlSensingRegionLeftVerticalEdge'],\n    '9437': ['SS', '1', 'ExposureControlSensingRegionRightVerticalEdge'],\n    '9438': ['SS', '1', 'ExposureControlSensingRegionUpperHorizontalEdge'],\n    '9439': ['SS', '1', 'ExposureControlSensingRegionLowerHorizontalEdge'],\n    '9440': ['SS', '2', 'CenterOfCircularExposureControlSensingRegion'],\n    '9441': ['US', '1', 'RadiusOfCircularExposureControlSensingRegion'],\n    '9442': ['SS', '2-n', 'VerticesOfThePolygonalExposureControlSensingRegion'],\n    '9445': ['', '', ''],\n    '9447': ['FL', '1', 'ColumnAngulationPatient'],\n    '9449': ['FL', '1', 'BeamAngle'],\n    '9451': ['SQ', '1', 'FrameDetectorParametersSequence'],\n    '9452': ['FL', '1', 'CalculatedAnatomyThickness'],\n    '9455': ['SQ', '1', 'CalibrationSequence'],\n    '9456': ['SQ', '1', 'ObjectThicknessSequence'],\n    '9457': ['CS', '1', 'PlaneIdentification'],\n    '9461': ['FL', '1-2', 'FieldOfViewDimensionsInFloat'],\n    '9462': ['SQ', '1', 'IsocenterReferenceSystemSequence'],\n    '9463': ['FL', '1', 'PositionerIsocenterPrimaryAngle'],\n    '9464': ['FL', '1', 'PositionerIsocenterSecondaryAngle'],\n    '9465': ['FL', '1', 'PositionerIsocenterDetectorRotationAngle'],\n    '9466': ['FL', '1', 'TableXPositionToIsocenter'],\n    '9467': ['FL', '1', 'TableYPositionToIsocenter'],\n    '9468': ['FL', '1', 'TableZPositionToIsocenter'],\n    '9469': ['FL', '1', 'TableHorizontalRotationAngle'],\n    '9470': ['FL', '1', 'TableHeadTiltAngle'],\n    '9471': ['FL', '1', 'TableCradleTiltAngle'],\n    '9472': ['SQ', '1', 'FrameDisplayShutterSequence'],\n    '9473': ['FL', '1', 'AcquiredImageAreaDoseProduct'],\n    '9474': ['CS', '1', 'CArmPositionerTabletopRelationship'],\n    '9476': ['SQ', '1', 'XRayGeometrySequence'],\n    '9477': ['SQ', '1', 'IrradiationEventIdentificationSequence'],\n    '9504': ['SQ', '1', 'XRay3DFrameTypeSequence'],\n    '9506': ['SQ', '1', 'ContributingSourcesSequence'],\n    '9507': ['SQ', '1', 'XRay3DAcquisitionSequence'],\n    '9508': ['FL', '1', 'PrimaryPositionerScanArc'],\n    '9509': ['FL', '1', 'SecondaryPositionerScanArc'],\n    '9510': ['FL', '1', 'PrimaryPositionerScanStartAngle'],\n    '9511': ['FL', '1', 'SecondaryPositionerScanStartAngle'],\n    '9514': ['FL', '1', 'PrimaryPositionerIncrement'],\n    '9515': ['FL', '1', 'SecondaryPositionerIncrement'],\n    '9516': ['DT', '1', 'StartAcquisitionDateTime'],\n    '9517': ['DT', '1', 'EndAcquisitionDateTime'],\n    '9518': ['SS', '1', 'PrimaryPositionerIncrementSign'],\n    '9519': ['SS', '1', 'SecondaryPositionerIncrementSign'],\n    '9524': ['LO', '1', 'ApplicationName'],\n    '9525': ['LO', '1', 'ApplicationVersion'],\n    '9526': ['LO', '1', 'ApplicationManufacturer'],\n    '9527': ['CS', '1', 'AlgorithmType'],\n    '9528': ['LO', '1', 'AlgorithmDescription'],\n    '9530': ['SQ', '1', 'XRay3DReconstructionSequence'],\n    '9531': ['LO', '1', 'ReconstructionDescription'],\n    '9538': ['SQ', '1', 'PerProjectionAcquisitionSequence'],\n    '9541': ['SQ', '1', 'DetectorPositionSequence'],\n    '9542': ['SQ', '1', 'XRayAcquisitionDoseSequence'],\n    '9543': ['FD', '1', 'XRaySourceIsocenterPrimaryAngle'],\n    '9544': ['FD', '1', 'XRaySourceIsocenterSecondaryAngle'],\n    '9545': ['FD', '1', 'BreastSupportIsocenterPrimaryAngle'],\n    '9546': ['FD', '1', 'BreastSupportIsocenterSecondaryAngle'],\n    '9547': ['FD', '1', 'BreastSupportXPositionToIsocenter'],\n    '9548': ['FD', '1', 'BreastSupportYPositionToIsocenter'],\n    '9549': ['FD', '1', 'BreastSupportZPositionToIsocenter'],\n    '9550': ['FD', '1', 'DetectorIsocenterPrimaryAngle'],\n    '9551': ['FD', '1', 'DetectorIsocenterSecondaryAngle'],\n    '9552': ['FD', '1', 'DetectorXPositionToIsocenter'],\n    '9553': ['FD', '1', 'DetectorYPositionToIsocenter'],\n    '9554': ['FD', '1', 'DetectorZPositionToIsocenter'],\n    '9555': ['SQ', '1', 'XRayGridSequence'],\n    '9556': ['SQ', '1', 'XRayFilterSequence'],\n    '9557': ['FD', '3', 'DetectorActiveAreaTLHCPosition'],\n    '9558': ['FD', '6', 'DetectorActiveAreaOrientation'],\n    '9559': ['CS', '1', 'PositionerPrimaryAngleDirection'],\n    '9601': ['SQ', '1', 'DiffusionBMatrixSequence'],\n    '9602': ['FD', '1', 'DiffusionBValueXX'],\n    '9603': ['FD', '1', 'DiffusionBValueXY'],\n    '9604': ['FD', '1', 'DiffusionBValueXZ'],\n    '9605': ['FD', '1', 'DiffusionBValueYY'],\n    '9606': ['FD', '1', 'DiffusionBValueYZ'],\n    '9607': ['FD', '1', 'DiffusionBValueZZ'],\n    '9621': ['SQ', '1', 'FunctionalMRSequence'],\n    '9622': ['CS', '1', 'FunctionalSettlingPhaseFramesPresent'],\n    '9623': ['DT', '1', 'FunctionalSyncPulse'],\n    '9624': ['CS', '1', 'SettlingPhaseFrame'],\n    '9701': ['DT', '1', 'DecayCorrectionDateTime'],\n    '9715': ['FD', '1', 'StartDensityThreshold'],\n    '9716': ['FD', '1', 'StartRelativeDensityDifferenceThreshold'],\n    '9717': ['FD', '1', 'StartCardiacTriggerCountThreshold'],\n    '9718': ['FD', '1', 'StartRespiratoryTriggerCountThreshold'],\n    '9719': ['FD', '1', 'TerminationCountsThreshold'],\n    '9720': ['FD', '1', 'TerminationDensityThreshold'],\n    '9721': ['FD', '1', 'TerminationRelativeDensityThreshold'],\n    '9722': ['FD', '1', 'TerminationTimeThreshold'],\n    '9723': ['FD', '1', 'TerminationCardiacTriggerCountThreshold'],\n    '9724': ['FD', '1', 'TerminationRespiratoryTriggerCountThreshold'],\n    '9725': ['CS', '1', 'DetectorGeometry'],\n    '9726': ['FD', '1', 'TransverseDetectorSeparation'],\n    '9727': ['FD', '1', 'AxialDetectorDimension'],\n    '9729': ['US', '1', 'RadiopharmaceuticalAgentNumber'],\n    '9732': ['SQ', '1', 'PETFrameAcquisitionSequence'],\n    '9733': ['SQ', '1', 'PETDetectorMotionDetailsSequence'],\n    '9734': ['SQ', '1', 'PETTableDynamicsSequence'],\n    '9735': ['SQ', '1', 'PETPositionSequence'],\n    '9736': ['SQ', '1', 'PETFrameCorrectionFactorsSequence'],\n    '9737': ['SQ', '1', 'RadiopharmaceuticalUsageSequence'],\n    '9738': ['CS', '1', 'AttenuationCorrectionSource'],\n    '9739': ['US', '1', 'NumberOfIterations'],\n    '9740': ['US', '1', 'NumberOfSubsets'],\n    '9749': ['SQ', '1', 'PETReconstructionSequence'],\n    '9751': ['SQ', '1', 'PETFrameTypeSequence'],\n    '9755': ['CS', '1', 'TimeOfFlightInformationUsed'],\n    '9756': ['CS', '1', 'ReconstructionType'],\n    '9758': ['CS', '1', 'DecayCorrected'],\n    '9759': ['CS', '1', 'AttenuationCorrected'],\n    '9760': ['CS', '1', 'ScatterCorrected'],\n    '9761': ['CS', '1', 'DeadTimeCorrected'],\n    '9762': ['CS', '1', 'GantryMotionCorrected'],\n    '9763': ['CS', '1', 'PatientMotionCorrected'],\n    '9764': ['CS', '1', 'CountLossNormalizationCorrected'],\n    '9765': ['CS', '1', 'RandomsCorrected'],\n    '9766': ['CS', '1', 'NonUniformRadialSamplingCorrected'],\n    '9767': ['CS', '1', 'SensitivityCalibrated'],\n    '9768': ['CS', '1', 'DetectorNormalizationCorrection'],\n    '9769': ['CS', '1', 'IterativeReconstructionMethod'],\n    '9770': ['CS', '1', 'AttenuationCorrectionTemporalRelationship'],\n    '9771': ['SQ', '1', 'PatientPhysiologicalStateSequence'],\n    '9772': ['SQ', '1', 'PatientPhysiologicalStateCodeSequence'],\n    '9801': ['FD', '1-n', 'DepthsOfFocus'],\n    '9803': ['SQ', '1', 'ExcludedIntervalsSequence'],\n    '9804': ['DT', '1', 'ExclusionStartDateTime'],\n    '9805': ['FD', '1', 'ExclusionDuration'],\n    '9806': ['SQ', '1', 'USImageDescriptionSequence'],\n    '9807': ['SQ', '1', 'ImageDataTypeSequence'],\n    '9808': ['CS', '1', 'DataType'],\n    '9809': ['SQ', '1', 'TransducerScanPatternCodeSequence'],\n    '980B': ['CS', '1', 'AliasedDataType'],\n    '980C': ['CS', '1', 'PositionMeasuringDeviceUsed'],\n    '980D': ['SQ', '1', 'TransducerGeometryCodeSequence'],\n    '980E': ['SQ', '1', 'TransducerBeamSteeringCodeSequence'],\n    '980F': ['SQ', '1', 'TransducerApplicationCodeSequence'],\n    '9810': ['xs', '1', 'ZeroVelocityPixelValue'],\n    '9900': ['LO', '1', 'ReferenceLocationLabel'],\n    '9901': ['UT', '1', 'ReferenceLocationDescription'],\n    '9902': ['SQ', '1', 'ReferenceBasisCodeSequence'],\n    '9903': ['SQ', '1', 'ReferenceGeometryCodeSequence'],\n    '9904': ['DS', '1', 'OffsetDistance'],\n    '9905': ['CS', '1', 'OffsetDirection'],\n    '9906': ['SQ', '1', 'PotentialScheduledProtocolCodeSequence'],\n    '9907': ['SQ', '1', 'PotentialRequestedProcedureCodeSequence'],\n    '9908': ['UC', '1-n', 'PotentialReasonsForProcedure'],\n    '9909': ['SQ', '1', 'PotentialReasonsForProcedureCodeSequence'],\n    '990A': ['UC', '1-n', 'PotentialDiagnosticTasks'],\n    '990B': ['SQ', '1', 'ContraindicationsCodeSequence'],\n    '990C': ['SQ', '1', 'ReferencedDefinedProtocolSequence'],\n    '990D': ['SQ', '1', 'ReferencedPerformedProtocolSequence'],\n    '990E': ['SQ', '1', 'PredecessorProtocolSequence'],\n    '990F': ['UT', '1', 'ProtocolPlanningInformation'],\n    '9910': ['UT', '1', 'ProtocolDesignRationale'],\n    '9911': ['SQ', '1', 'PatientSpecificationSequence'],\n    '9912': ['SQ', '1', 'ModelSpecificationSequence'],\n    '9913': ['SQ', '1', 'ParametersSpecificationSequence'],\n    '9914': ['SQ', '1', 'InstructionSequence'],\n    '9915': ['US', '1', 'InstructionIndex'],\n    '9916': ['LO', '1', 'InstructionText'],\n    '9917': ['UT', '1', 'InstructionDescription'],\n    '9918': ['CS', '1', 'InstructionPerformedFlag'],\n    '9919': ['DT', '1', 'InstructionPerformedDateTime'],\n    '991A': ['UT', '1', 'InstructionPerformanceComment'],\n    '991B': ['SQ', '1', 'PatientPositioningInstructionSequence'],\n    '991C': ['SQ', '1', 'PositioningMethodCodeSequence'],\n    '991D': ['SQ', '1', 'PositioningLandmarkSequence'],\n    '991E': ['UI', '1', 'TargetFrameOfReferenceUID'],\n    '991F': ['SQ', '1', 'AcquisitionProtocolElementSpecificationSequence'],\n    '9920': ['SQ', '1', 'AcquisitionProtocolElementSequence'],\n    '9921': ['US', '1', 'ProtocolElementNumber'],\n    '9922': ['LO', '1', 'ProtocolElementName'],\n    '9923': ['UT', '1', 'ProtocolElementCharacteristicsSummary'],\n    '9924': ['UT', '1', 'ProtocolElementPurpose'],\n    '9930': ['CS', '1', 'AcquisitionMotion'],\n    '9931': ['SQ', '1', 'AcquisitionStartLocationSequence'],\n    '9932': ['SQ', '1', 'AcquisitionEndLocationSequence'],\n    '9933': ['SQ', '1', 'ReconstructionProtocolElementSpecificationSequence'],\n    '9934': ['SQ', '1', 'ReconstructionProtocolElementSequence'],\n    '9935': ['SQ', '1', 'StorageProtocolElementSpecificationSequence'],\n    '9936': ['SQ', '1', 'StorageProtocolElementSequence'],\n    '9937': ['LO', '1', 'RequestedSeriesDescription'],\n    '9938': ['US', '1-n', 'SourceAcquisitionProtocolElementNumber'],\n    '9939': ['US', '1-n', 'SourceAcquisitionBeamNumber'],\n    '993A': ['US', '1-n', 'SourceReconstructionProtocolElementNumber'],\n    '993B': ['SQ', '1', 'ReconstructionStartLocationSequence'],\n    '993C': ['SQ', '1', 'ReconstructionEndLocationSequence'],\n    '993D': ['SQ', '1', 'ReconstructionAlgorithmSequence'],\n    '993E': ['SQ', '1', 'ReconstructionTargetCenterLocationSequence'],\n    '9941': ['UT', '1', 'ImageFilterDescription'],\n    '9942': ['FD', '1', 'CTDIvolNotificationTrigger'],\n    '9943': ['FD', '1', 'DLPNotificationTrigger'],\n    '9944': ['CS', '1', 'AutoKVPSelectionType'],\n    '9945': ['FD', '1', 'AutoKVPUpperBound'],\n    '9946': ['FD', '1', 'AutoKVPLowerBound'],\n    '9947': ['CS', '1', 'ProtocolDefinedPatientPosition'],\n    'A001': ['SQ', '1', 'ContributingEquipmentSequence'],\n    'A002': ['DT', '1', 'ContributionDateTime'],\n    'A003': ['ST', '1', 'ContributionDescription']\n  },\n  '0020': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '000D': ['UI', '1', 'StudyInstanceUID'],\n    '000E': ['UI', '1', 'SeriesInstanceUID'],\n    '0010': ['SH', '1', 'StudyID'],\n    '0011': ['IS', '1', 'SeriesNumber'],\n    '0012': ['IS', '1', 'AcquisitionNumber'],\n    '0013': ['IS', '1', 'InstanceNumber'],\n    '0014': ['IS', '1', 'IsotopeNumber'],\n    '0015': ['IS', '1', 'PhaseNumber'],\n    '0016': ['IS', '1', 'IntervalNumber'],\n    '0017': ['IS', '1', 'TimeSlotNumber'],\n    '0018': ['IS', '1', 'AngleNumber'],\n    '0019': ['IS', '1', 'ItemNumber'],\n    '0020': ['CS', '2', 'PatientOrientation'],\n    '0022': ['IS', '1', 'OverlayNumber'],\n    '0024': ['IS', '1', 'CurveNumber'],\n    '0026': ['IS', '1', 'LUTNumber'],\n    '0030': ['DS', '3', 'ImagePosition'],\n    '0032': ['DS', '3', 'ImagePositionPatient'],\n    '0035': ['DS', '6', 'ImageOrientation'],\n    '0037': ['DS', '6', 'ImageOrientationPatient'],\n    '0050': ['DS', '1', 'Location'],\n    '0052': ['UI', '1', 'FrameOfReferenceUID'],\n    '0060': ['CS', '1', 'Laterality'],\n    '0062': ['CS', '1', 'ImageLaterality'],\n    '0070': ['LO', '1', 'ImageGeometryType'],\n    '0080': ['CS', '1-n', 'MaskingImage'],\n    '00AA': ['IS', '1', 'ReportNumber'],\n    '0100': ['IS', '1', 'TemporalPositionIdentifier'],\n    '0105': ['IS', '1', 'NumberOfTemporalPositions'],\n    '0110': ['DS', '1', 'TemporalResolution'],\n    '0200': ['UI', '1', 'SynchronizationFrameOfReferenceUID'],\n    '0242': ['UI', '1', 'SOPInstanceUIDOfConcatenationSource'],\n    '1000': ['IS', '1', 'SeriesInStudy'],\n    '1001': ['IS', '1', 'AcquisitionsInSeries'],\n    '1002': ['IS', '1', 'ImagesInAcquisition'],\n    '1003': ['IS', '1', 'ImagesInSeries'],\n    '1004': ['IS', '1', 'AcquisitionsInStudy'],\n    '1005': ['IS', '1', 'ImagesInStudy'],\n    '1020': ['LO', '1-n', 'Reference'],\n    '103F': ['LO', '1', 'TargetPositionReferenceIndicator'],\n    '1040': ['LO', '1', 'PositionReferenceIndicator'],\n    '1041': ['DS', '1', 'SliceLocation'],\n    '1070': ['IS', '1-n', 'OtherStudyNumbers'],\n    '1200': ['IS', '1', 'NumberOfPatientRelatedStudies'],\n    '1202': ['IS', '1', 'NumberOfPatientRelatedSeries'],\n    '1204': ['IS', '1', 'NumberOfPatientRelatedInstances'],\n    '1206': ['IS', '1', 'NumberOfStudyRelatedSeries'],\n    '1208': ['IS', '1', 'NumberOfStudyRelatedInstances'],\n    '1209': ['IS', '1', 'NumberOfSeriesRelatedInstances'],\n    '3100': ['CS', '1-n', 'SourceImageIDs'],\n    '3401': ['CS', '1', 'ModifyingDeviceID'],\n    '3402': ['CS', '1', 'ModifiedImageID'],\n    '3403': ['DA', '1', 'ModifiedImageDate'],\n    '3404': ['LO', '1', 'ModifyingDeviceManufacturer'],\n    '3405': ['TM', '1', 'ModifiedImageTime'],\n    '3406': ['LO', '1', 'ModifiedImageDescription'],\n    '4000': ['LT', '1', 'ImageComments'],\n    '5000': ['AT', '1-n', 'OriginalImageIdentification'],\n    '5002': ['LO', '1-n', 'OriginalImageIdentificationNomenclature'],\n    '9056': ['SH', '1', 'StackID'],\n    '9057': ['UL', '1', 'InStackPositionNumber'],\n    '9071': ['SQ', '1', 'FrameAnatomySequence'],\n    '9072': ['CS', '1', 'FrameLaterality'],\n    '9111': ['SQ', '1', 'FrameContentSequence'],\n    '9113': ['SQ', '1', 'PlanePositionSequence'],\n    '9116': ['SQ', '1', 'PlaneOrientationSequence'],\n    '9128': ['UL', '1', 'TemporalPositionIndex'],\n    '9153': ['FD', '1', 'NominalCardiacTriggerDelayTime'],\n    '9154': ['FL', '1', 'NominalCardiacTriggerTimePriorToRPeak'],\n    '9155': ['FL', '1', 'ActualCardiacTriggerTimePriorToRPeak'],\n    '9156': ['US', '1', 'FrameAcquisitionNumber'],\n    '9157': ['UL', '1-n', 'DimensionIndexValues'],\n    '9158': ['LT', '1', 'FrameComments'],\n    '9161': ['UI', '1', 'ConcatenationUID'],\n    '9162': ['US', '1', 'InConcatenationNumber'],\n    '9163': ['US', '1', 'InConcatenationTotalNumber'],\n    '9164': ['UI', '1', 'DimensionOrganizationUID'],\n    '9165': ['AT', '1', 'DimensionIndexPointer'],\n    '9167': ['AT', '1', 'FunctionalGroupPointer'],\n    '9170': ['SQ', '1', 'UnassignedSharedConvertedAttributesSequence'],\n    '9171': ['SQ', '1', 'UnassignedPerFrameConvertedAttributesSequence'],\n    '9172': ['SQ', '1', 'ConversionSourceAttributesSequence'],\n    '9213': ['LO', '1', 'DimensionIndexPrivateCreator'],\n    '9221': ['SQ', '1', 'DimensionOrganizationSequence'],\n    '9222': ['SQ', '1', 'DimensionIndexSequence'],\n    '9228': ['UL', '1', 'ConcatenationFrameOffsetNumber'],\n    '9238': ['LO', '1', 'FunctionalGroupPrivateCreator'],\n    '9241': ['FL', '1', 'NominalPercentageOfCardiacPhase'],\n    '9245': ['FL', '1', 'NominalPercentageOfRespiratoryPhase'],\n    '9246': ['FL', '1', 'StartingRespiratoryAmplitude'],\n    '9247': ['CS', '1', 'StartingRespiratoryPhase'],\n    '9248': ['FL', '1', 'EndingRespiratoryAmplitude'],\n    '9249': ['CS', '1', 'EndingRespiratoryPhase'],\n    '9250': ['CS', '1', 'RespiratoryTriggerType'],\n    '9251': ['FD', '1', 'RRIntervalTimeNominal'],\n    '9252': ['FD', '1', 'ActualCardiacTriggerDelayTime'],\n    '9253': ['SQ', '1', 'RespiratorySynchronizationSequence'],\n    '9254': ['FD', '1', 'RespiratoryIntervalTime'],\n    '9255': ['FD', '1', 'NominalRespiratoryTriggerDelayTime'],\n    '9256': ['FD', '1', 'RespiratoryTriggerDelayThreshold'],\n    '9257': ['FD', '1', 'ActualRespiratoryTriggerDelayTime'],\n    '9301': ['FD', '3', 'ImagePositionVolume'],\n    '9302': ['FD', '6', 'ImageOrientationVolume'],\n    '9307': ['CS', '1', 'UltrasoundAcquisitionGeometry'],\n    '9308': ['FD', '3', 'ApexPosition'],\n    '9309': ['FD', '16', 'VolumeToTransducerMappingMatrix'],\n    '930A': ['FD', '16', 'VolumeToTableMappingMatrix'],\n    '930B': ['CS', '1', 'VolumeToTransducerRelationship'],\n    '930C': ['CS', '1', 'PatientFrameOfReferenceSource'],\n    '930D': ['FD', '1', 'TemporalPositionTimeOffset'],\n    '930E': ['SQ', '1', 'PlanePositionVolumeSequence'],\n    '930F': ['SQ', '1', 'PlaneOrientationVolumeSequence'],\n    '9310': ['SQ', '1', 'TemporalPositionSequence'],\n    '9311': ['CS', '1', 'DimensionOrganizationType'],\n    '9312': ['UI', '1', 'VolumeFrameOfReferenceUID'],\n    '9313': ['UI', '1', 'TableFrameOfReferenceUID'],\n    '9421': ['LO', '1', 'DimensionDescriptionLabel'],\n    '9450': ['SQ', '1', 'PatientOrientationInFrameSequence'],\n    '9453': ['LO', '1', 'FrameLabel'],\n    '9518': ['US', '1-n', 'AcquisitionIndex'],\n    '9529': ['SQ', '1', 'ContributingSOPInstancesReferenceSequence'],\n    '9536': ['US', '1', 'ReconstructionIndex']\n  },\n  '0022': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['US', '1', 'LightPathFilterPassThroughWavelength'],\n    '0002': ['US', '2', 'LightPathFilterPassBand'],\n    '0003': ['US', '1', 'ImagePathFilterPassThroughWavelength'],\n    '0004': ['US', '2', 'ImagePathFilterPassBand'],\n    '0005': ['CS', '1', 'PatientEyeMovementCommanded'],\n    '0006': ['SQ', '1', 'PatientEyeMovementCommandCodeSequence'],\n    '0007': ['FL', '1', 'SphericalLensPower'],\n    '0008': ['FL', '1', 'CylinderLensPower'],\n    '0009': ['FL', '1', 'CylinderAxis'],\n    '000A': ['FL', '1', 'EmmetropicMagnification'],\n    '000B': ['FL', '1', 'IntraOcularPressure'],\n    '000C': ['FL', '1', 'HorizontalFieldOfView'],\n    '000D': ['CS', '1', 'PupilDilated'],\n    '000E': ['FL', '1', 'DegreeOfDilation'],\n    '0010': ['FL', '1', 'StereoBaselineAngle'],\n    '0011': ['FL', '1', 'StereoBaselineDisplacement'],\n    '0012': ['FL', '1', 'StereoHorizontalPixelOffset'],\n    '0013': ['FL', '1', 'StereoVerticalPixelOffset'],\n    '0014': ['FL', '1', 'StereoRotation'],\n    '0015': ['SQ', '1', 'AcquisitionDeviceTypeCodeSequence'],\n    '0016': ['SQ', '1', 'IlluminationTypeCodeSequence'],\n    '0017': ['SQ', '1', 'LightPathFilterTypeStackCodeSequence'],\n    '0018': ['SQ', '1', 'ImagePathFilterTypeStackCodeSequence'],\n    '0019': ['SQ', '1', 'LensesCodeSequence'],\n    '001A': ['SQ', '1', 'ChannelDescriptionCodeSequence'],\n    '001B': ['SQ', '1', 'RefractiveStateSequence'],\n    '001C': ['SQ', '1', 'MydriaticAgentCodeSequence'],\n    '001D': ['SQ', '1', 'RelativeImagePositionCodeSequence'],\n    '001E': ['FL', '1', 'CameraAngleOfView'],\n    '0020': ['SQ', '1', 'StereoPairsSequence'],\n    '0021': ['SQ', '1', 'LeftImageSequence'],\n    '0022': ['SQ', '1', 'RightImageSequence'],\n    '0028': ['CS', '1', 'StereoPairsPresent'],\n    '0030': ['FL', '1', 'AxialLengthOfTheEye'],\n    '0031': ['SQ', '1', 'OphthalmicFrameLocationSequence'],\n    '0032': ['FL', '2-2n', 'ReferenceCoordinates'],\n    '0035': ['FL', '1', 'DepthSpatialResolution'],\n    '0036': ['FL', '1', 'MaximumDepthDistortion'],\n    '0037': ['FL', '1', 'AlongScanSpatialResolution'],\n    '0038': ['FL', '1', 'MaximumAlongScanDistortion'],\n    '0039': ['CS', '1', 'OphthalmicImageOrientation'],\n    '0041': ['FL', '1', 'DepthOfTransverseImage'],\n    '0042': ['SQ', '1', 'MydriaticAgentConcentrationUnitsSequence'],\n    '0048': ['FL', '1', 'AcrossScanSpatialResolution'],\n    '0049': ['FL', '1', 'MaximumAcrossScanDistortion'],\n    '004E': ['DS', '1', 'MydriaticAgentConcentration'],\n    '0055': ['FL', '1', 'IlluminationWaveLength'],\n    '0056': ['FL', '1', 'IlluminationPower'],\n    '0057': ['FL', '1', 'IlluminationBandwidth'],\n    '0058': ['SQ', '1', 'MydriaticAgentSequence'],\n    '1007': ['SQ', '1', 'OphthalmicAxialMeasurementsRightEyeSequence'],\n    '1008': ['SQ', '1', 'OphthalmicAxialMeasurementsLeftEyeSequence'],\n    '1009': ['CS', '1', 'OphthalmicAxialMeasurementsDeviceType'],\n    '1010': ['CS', '1', 'OphthalmicAxialLengthMeasurementsType'],\n    '1012': ['SQ', '1', 'OphthalmicAxialLengthSequence'],\n    '1019': ['FL', '1', 'OphthalmicAxialLength'],\n    '1024': ['SQ', '1', 'LensStatusCodeSequence'],\n    '1025': ['SQ', '1', 'VitreousStatusCodeSequence'],\n    '1028': ['SQ', '1', 'IOLFormulaCodeSequence'],\n    '1029': ['LO', '1', 'IOLFormulaDetail'],\n    '1033': ['FL', '1', 'KeratometerIndex'],\n    '1035': ['SQ', '1', 'SourceOfOphthalmicAxialLengthCodeSequence'],\n    '1036': ['SQ', '1', 'SourceOfCornealSizeDataCodeSequence'],\n    '1037': ['FL', '1', 'TargetRefraction'],\n    '1039': ['CS', '1', 'RefractiveProcedureOccurred'],\n    '1040': ['SQ', '1', 'RefractiveSurgeryTypeCodeSequence'],\n    '1044': ['SQ', '1', 'OphthalmicUltrasoundMethodCodeSequence'],\n    '1045': ['SQ', '1', 'SurgicallyInducedAstigmatismSequence'],\n    '1046': ['CS', '1', 'TypeOfOpticalCorrection'],\n    '1047': ['SQ', '1', 'ToricIOLPowerSequence'],\n    '1048': ['SQ', '1', 'PredictedToricErrorSequence'],\n    '1049': ['CS', '1', 'PreSelectedForImplantation'],\n    '104A': ['SQ', '1', 'ToricIOLPowerForExactEmmetropiaSequence'],\n    '104B': ['SQ', '1', 'ToricIOLPowerForExactTargetRefractionSequence'],\n    '1050': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsSequence'],\n    '1053': ['FL', '1', 'IOLPower'],\n    '1054': ['FL', '1', 'PredictedRefractiveError'],\n    '1059': ['FL', '1', 'OphthalmicAxialLengthVelocity'],\n    '1065': ['LO', '1', 'LensStatusDescription'],\n    '1066': ['LO', '1', 'VitreousStatusDescription'],\n    '1090': ['SQ', '1', 'IOLPowerSequence'],\n    '1092': ['SQ', '1', 'LensConstantSequence'],\n    '1093': ['LO', '1', 'IOLManufacturer'],\n    '1094': ['LO', '1', 'LensConstantDescription'],\n    '1095': ['LO', '1', 'ImplantName'],\n    '1096': ['SQ', '1', 'KeratometryMeasurementTypeCodeSequence'],\n    '1097': ['LO', '1', 'ImplantPartNumber'],\n    '1100': ['SQ', '1', 'ReferencedOphthalmicAxialMeasurementsSequence'],\n    '1101': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsSegmentNameCodeSequence'],\n    '1103': ['SQ', '1', 'RefractiveErrorBeforeRefractiveSurgeryCodeSequence'],\n    '1121': ['FL', '1', 'IOLPowerForExactEmmetropia'],\n    '1122': ['FL', '1', 'IOLPowerForExactTargetRefraction'],\n    '1125': ['SQ', '1', 'AnteriorChamberDepthDefinitionCodeSequence'],\n    '1127': ['SQ', '1', 'LensThicknessSequence'],\n    '1128': ['SQ', '1', 'AnteriorChamberDepthSequence'],\n    '112A': ['SQ', '1', 'CalculationCommentSequence'],\n    '112B': ['CS', '1', 'CalculationCommentType'],\n    '112C': ['LT', '1', 'CalculationComment'],\n    '1130': ['FL', '1', 'LensThickness'],\n    '1131': ['FL', '1', 'AnteriorChamberDepth'],\n    '1132': ['SQ', '1', 'SourceOfLensThicknessDataCodeSequence'],\n    '1133': ['SQ', '1', 'SourceOfAnteriorChamberDepthDataCodeSequence'],\n    '1134': ['SQ', '1', 'SourceOfRefractiveMeasurementsSequence'],\n    '1135': ['SQ', '1', 'SourceOfRefractiveMeasurementsCodeSequence'],\n    '1140': ['CS', '1', 'OphthalmicAxialLengthMeasurementModified'],\n    '1150': ['SQ', '1', 'OphthalmicAxialLengthDataSourceCodeSequence'],\n    '1153': ['SQ', '1', 'OphthalmicAxialLengthAcquisitionMethodCodeSequence'],\n    '1155': ['FL', '1', 'SignalToNoiseRatio'],\n    '1159': ['LO', '1', 'OphthalmicAxialLengthDataSourceDescription'],\n    '1210': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsTotalLengthSequence'],\n    '1211': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsSegmentalLengthSequence'],\n    '1212': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsLengthSummationSequence'],\n    '1220': ['SQ', '1', 'UltrasoundOphthalmicAxialLengthMeasurementsSequence'],\n    '1225': ['SQ', '1', 'OpticalOphthalmicAxialLengthMeasurementsSequence'],\n    '1230': ['SQ', '1', 'UltrasoundSelectedOphthalmicAxialLengthSequence'],\n    '1250': ['SQ', '1', 'OphthalmicAxialLengthSelectionMethodCodeSequence'],\n    '1255': ['SQ', '1', 'OpticalSelectedOphthalmicAxialLengthSequence'],\n    '1257': ['SQ', '1', 'SelectedSegmentalOphthalmicAxialLengthSequence'],\n    '1260': ['SQ', '1', 'SelectedTotalOphthalmicAxialLengthSequence'],\n    '1262': ['SQ', '1', 'OphthalmicAxialLengthQualityMetricSequence'],\n    '1265': ['SQ', '1', 'OphthalmicAxialLengthQualityMetricTypeCodeSequence'],\n    '1273': ['LO', '1', 'OphthalmicAxialLengthQualityMetricTypeDescription'],\n    '1300': ['SQ', '1', 'IntraocularLensCalculationsRightEyeSequence'],\n    '1310': ['SQ', '1', 'IntraocularLensCalculationsLeftEyeSequence'],\n    '1330': ['SQ', '1', 'ReferencedOphthalmicAxialLengthMeasurementQCImageSequence'],\n    '1415': ['CS', '1', 'OphthalmicMappingDeviceType'],\n    '1420': ['SQ', '1', 'AcquisitionMethodCodeSequence'],\n    '1423': ['SQ', '1', 'AcquisitionMethodAlgorithmSequence'],\n    '1436': ['SQ', '1', 'OphthalmicThicknessMapTypeCodeSequence'],\n    '1443': ['SQ', '1', 'OphthalmicThicknessMappingNormalsSequence'],\n    '1445': ['SQ', '1', 'RetinalThicknessDefinitionCodeSequence'],\n    '1450': ['SQ', '1', 'PixelValueMappingToCodedConceptSequence'],\n    '1452': ['xs', '1', 'MappedPixelValue'],\n    '1454': ['LO', '1', 'PixelValueMappingExplanation'],\n    '1458': ['SQ', '1', 'OphthalmicThicknessMapQualityThresholdSequence'],\n    '1460': ['FL', '1', 'OphthalmicThicknessMapThresholdQualityRating'],\n    '1463': ['FL', '2', 'AnatomicStructureReferencePoint'],\n    '1465': ['SQ', '1', 'RegistrationToLocalizerSequence'],\n    '1466': ['CS', '1', 'RegisteredLocalizerUnits'],\n    '1467': ['FL', '2', 'RegisteredLocalizerTopLeftHandCorner'],\n    '1468': ['FL', '2', 'RegisteredLocalizerBottomRightHandCorner'],\n    '1470': ['SQ', '1', 'OphthalmicThicknessMapQualityRatingSequence'],\n    '1472': ['SQ', '1', 'RelevantOPTAttributesSequence'],\n    '1512': ['SQ', '1', 'TransformationMethodCodeSequence'],\n    '1513': ['SQ', '1', 'TransformationAlgorithmSequence'],\n    '1515': ['CS', '1', 'OphthalmicAxialLengthMethod'],\n    '1517': ['FL', '1', 'OphthalmicFOV'],\n    '1518': ['SQ', '1', 'TwoDimensionalToThreeDimensionalMapSequence'],\n    '1525': ['SQ', '1', 'WideFieldOphthalmicPhotographyQualityRatingSequence'],\n    '1526': ['SQ', '1', 'WideFieldOphthalmicPhotographyQualityThresholdSequence'],\n    '1527': ['FL', '1', 'WideFieldOphthalmicPhotographyThresholdQualityRating'],\n    '1528': ['FL', '1', 'XCoordinatesCenterPixelViewAngle'],\n    '1529': ['FL', '1', 'YCoordinatesCenterPixelViewAngle'],\n    '1530': ['UL', '1', 'NumberOfMapPoints'],\n    '1531': ['OF', '1', 'TwoDimensionalToThreeDimensionalMapData'],\n    '1612': ['SQ', '1', 'DerivationAlgorithmSequence'],\n    '1615': ['SQ', '1', 'OphthalmicImageTypeCodeSequence'],\n    '1616': ['LO', '1', 'OphthalmicImageTypeDescription'],\n    '1618': ['SQ', '1', 'ScanPatternTypeCodeSequence'],\n    '1620': ['SQ', '1', 'ReferencedSurfaceMeshIdentificationSequence'],\n    '1622': ['CS', '1', 'OphthalmicVolumetricPropertiesFlag'],\n    '1624': ['FL', '1', 'OphthalmicAnatomicReferencePointXCoordinate'],\n    '1626': ['FL', '1', 'OphthalmicAnatomicReferencePointYCoordinate'],\n    '1628': ['SQ', '1', 'OphthalmicEnFaceImageQualityRatingSequence'],\n    '1630': ['DS', '1', 'QualityThreshold'],\n    '1640': ['SQ', '1', 'OCTBscanAnalysisAcquisitionParametersSequence'],\n    '1642': ['UL', '1', 'NumberOfBscansPerFrame'],\n    '1643': ['FL', '1', 'BscanSlabThickness'],\n    '1644': ['FL', '1', 'DistanceBetweenBscanSlabs'],\n    '1645': ['FL', '1', 'BscanCycleTime'],\n    '1646': ['FL', '1-n', 'BscanCycleTimeVector'],\n    '1649': ['FL', '1', 'AscanRate'],\n    '1650': ['FL', '1', 'BscanRate'],\n    '1658': ['UL', '1', 'SurfaceMeshZPixelOffset']\n  },\n  '0024': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['FL', '1', 'VisualFieldHorizontalExtent'],\n    '0011': ['FL', '1', 'VisualFieldVerticalExtent'],\n    '0012': ['CS', '1', 'VisualFieldShape'],\n    '0016': ['SQ', '1', 'ScreeningTestModeCodeSequence'],\n    '0018': ['FL', '1', 'MaximumStimulusLuminance'],\n    '0020': ['FL', '1', 'BackgroundLuminance'],\n    '0021': ['SQ', '1', 'StimulusColorCodeSequence'],\n    '0024': ['SQ', '1', 'BackgroundIlluminationColorCodeSequence'],\n    '0025': ['FL', '1', 'StimulusArea'],\n    '0028': ['FL', '1', 'StimulusPresentationTime'],\n    '0032': ['SQ', '1', 'FixationSequence'],\n    '0033': ['SQ', '1', 'FixationMonitoringCodeSequence'],\n    '0034': ['SQ', '1', 'VisualFieldCatchTrialSequence'],\n    '0035': ['US', '1', 'FixationCheckedQuantity'],\n    '0036': ['US', '1', 'PatientNotProperlyFixatedQuantity'],\n    '0037': ['CS', '1', 'PresentedVisualStimuliDataFlag'],\n    '0038': ['US', '1', 'NumberOfVisualStimuli'],\n    '0039': ['CS', '1', 'ExcessiveFixationLossesDataFlag'],\n    '0040': ['CS', '1', 'ExcessiveFixationLosses'],\n    '0042': ['US', '1', 'StimuliRetestingQuantity'],\n    '0044': ['LT', '1', 'CommentsOnPatientPerformanceOfVisualField'],\n    '0045': ['CS', '1', 'FalseNegativesEstimateFlag'],\n    '0046': ['FL', '1', 'FalseNegativesEstimate'],\n    '0048': ['US', '1', 'NegativeCatchTrialsQuantity'],\n    '0050': ['US', '1', 'FalseNegativesQuantity'],\n    '0051': ['CS', '1', 'ExcessiveFalseNegativesDataFlag'],\n    '0052': ['CS', '1', 'ExcessiveFalseNegatives'],\n    '0053': ['CS', '1', 'FalsePositivesEstimateFlag'],\n    '0054': ['FL', '1', 'FalsePositivesEstimate'],\n    '0055': ['CS', '1', 'CatchTrialsDataFlag'],\n    '0056': ['US', '1', 'PositiveCatchTrialsQuantity'],\n    '0057': ['CS', '1', 'TestPointNormalsDataFlag'],\n    '0058': ['SQ', '1', 'TestPointNormalsSequence'],\n    '0059': ['CS', '1', 'GlobalDeviationProbabilityNormalsFlag'],\n    '0060': ['US', '1', 'FalsePositivesQuantity'],\n    '0061': ['CS', '1', 'ExcessiveFalsePositivesDataFlag'],\n    '0062': ['CS', '1', 'ExcessiveFalsePositives'],\n    '0063': ['CS', '1', 'VisualFieldTestNormalsFlag'],\n    '0064': ['SQ', '1', 'ResultsNormalsSequence'],\n    '0065': ['SQ', '1', 'AgeCorrectedSensitivityDeviationAlgorithmSequence'],\n    '0066': ['FL', '1', 'GlobalDeviationFromNormal'],\n    '0067': ['SQ', '1', 'GeneralizedDefectSensitivityDeviationAlgorithmSequence'],\n    '0068': ['FL', '1', 'LocalizedDeviationFromNormal'],\n    '0069': ['LO', '1', 'PatientReliabilityIndicator'],\n    '0070': ['FL', '1', 'VisualFieldMeanSensitivity'],\n    '0071': ['FL', '1', 'GlobalDeviationProbability'],\n    '0072': ['CS', '1', 'LocalDeviationProbabilityNormalsFlag'],\n    '0073': ['FL', '1', 'LocalizedDeviationProbability'],\n    '0074': ['CS', '1', 'ShortTermFluctuationCalculated'],\n    '0075': ['FL', '1', 'ShortTermFluctuation'],\n    '0076': ['CS', '1', 'ShortTermFluctuationProbabilityCalculated'],\n    '0077': ['FL', '1', 'ShortTermFluctuationProbability'],\n    '0078': ['CS', '1', 'CorrectedLocalizedDeviationFromNormalCalculated'],\n    '0079': ['FL', '1', 'CorrectedLocalizedDeviationFromNormal'],\n    '0080': ['CS', '1', 'CorrectedLocalizedDeviationFromNormalProbabilityCalculated'],\n    '0081': ['FL', '1', 'CorrectedLocalizedDeviationFromNormalProbability'],\n    '0083': ['SQ', '1', 'GlobalDeviationProbabilitySequence'],\n    '0085': ['SQ', '1', 'LocalizedDeviationProbabilitySequence'],\n    '0086': ['CS', '1', 'FovealSensitivityMeasured'],\n    '0087': ['FL', '1', 'FovealSensitivity'],\n    '0088': ['FL', '1', 'VisualFieldTestDuration'],\n    '0089': ['SQ', '1', 'VisualFieldTestPointSequence'],\n    '0090': ['FL', '1', 'VisualFieldTestPointXCoordinate'],\n    '0091': ['FL', '1', 'VisualFieldTestPointYCoordinate'],\n    '0092': ['FL', '1', 'AgeCorrectedSensitivityDeviationValue'],\n    '0093': ['CS', '1', 'StimulusResults'],\n    '0094': ['FL', '1', 'SensitivityValue'],\n    '0095': ['CS', '1', 'RetestStimulusSeen'],\n    '0096': ['FL', '1', 'RetestSensitivityValue'],\n    '0097': ['SQ', '1', 'VisualFieldTestPointNormalsSequence'],\n    '0098': ['FL', '1', 'QuantifiedDefect'],\n    '0100': ['FL', '1', 'AgeCorrectedSensitivityDeviationProbabilityValue'],\n    '0102': ['CS', '1', 'GeneralizedDefectCorrectedSensitivityDeviationFlag'],\n    '0103': ['FL', '1', 'GeneralizedDefectCorrectedSensitivityDeviationValue'],\n    '0104': ['FL', '1', 'GeneralizedDefectCorrectedSensitivityDeviationProbabilityValue'],\n    '0105': ['FL', '1', 'MinimumSensitivityValue'],\n    '0106': ['CS', '1', 'BlindSpotLocalized'],\n    '0107': ['FL', '1', 'BlindSpotXCoordinate'],\n    '0108': ['FL', '1', 'BlindSpotYCoordinate'],\n    '0110': ['SQ', '1', 'VisualAcuityMeasurementSequence'],\n    '0112': ['SQ', '1', 'RefractiveParametersUsedOnPatientSequence'],\n    '0113': ['CS', '1', 'MeasurementLaterality'],\n    '0114': ['SQ', '1', 'OphthalmicPatientClinicalInformationLeftEyeSequence'],\n    '0115': ['SQ', '1', 'OphthalmicPatientClinicalInformationRightEyeSequence'],\n    '0117': ['CS', '1', 'FovealPointNormativeDataFlag'],\n    '0118': ['FL', '1', 'FovealPointProbabilityValue'],\n    '0120': ['CS', '1', 'ScreeningBaselineMeasured'],\n    '0122': ['SQ', '1', 'ScreeningBaselineMeasuredSequence'],\n    '0124': ['CS', '1', 'ScreeningBaselineType'],\n    '0126': ['FL', '1', 'ScreeningBaselineValue'],\n    '0202': ['LO', '1', 'AlgorithmSource'],\n    '0306': ['LO', '1', 'DataSetName'],\n    '0307': ['LO', '1', 'DataSetVersion'],\n    '0308': ['LO', '1', 'DataSetSource'],\n    '0309': ['LO', '1', 'DataSetDescription'],\n    '0317': ['SQ', '1', 'VisualFieldTestReliabilityGlobalIndexSequence'],\n    '0320': ['SQ', '1', 'VisualFieldGlobalResultsIndexSequence'],\n    '0325': ['SQ', '1', 'DataObservationSequence'],\n    '0338': ['CS', '1', 'IndexNormalsFlag'],\n    '0341': ['FL', '1', 'IndexProbability'],\n    '0344': ['SQ', '1', 'IndexProbabilitySequence']\n  },\n  '0028': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['US', '1', 'SamplesPerPixel'],\n    '0003': ['US', '1', 'SamplesPerPixelUsed'],\n    '0004': ['CS', '1', 'PhotometricInterpretation'],\n    '0005': ['US', '1', 'ImageDimensions'],\n    '0006': ['US', '1', 'PlanarConfiguration'],\n    '0008': ['IS', '1', 'NumberOfFrames'],\n    '0009': ['AT', '1-n', 'FrameIncrementPointer'],\n    '000A': ['AT', '1-n', 'FrameDimensionPointer'],\n    '0010': ['US', '1', 'Rows'],\n    '0011': ['US', '1', 'Columns'],\n    '0012': ['US', '1', 'Planes'],\n    '0014': ['US', '1', 'UltrasoundColorDataPresent'],\n    '0020': ['', '', ''],\n    '0030': ['DS', '2', 'PixelSpacing'],\n    '0031': ['DS', '2', 'ZoomFactor'],\n    '0032': ['DS', '2', 'ZoomCenter'],\n    '0034': ['IS', '2', 'PixelAspectRatio'],\n    '0040': ['CS', '1', 'ImageFormat'],\n    '0050': ['LO', '1-n', 'ManipulatedImage'],\n    '0051': ['CS', '1-n', 'CorrectedImage'],\n    '005F': ['LO', '1', 'CompressionRecognitionCode'],\n    '0060': ['CS', '1', 'CompressionCode'],\n    '0061': ['SH', '1', 'CompressionOriginator'],\n    '0062': ['LO', '1', 'CompressionLabel'],\n    '0063': ['SH', '1', 'CompressionDescription'],\n    '0065': ['CS', '1-n', 'CompressionSequence'],\n    '0066': ['AT', '1-n', 'CompressionStepPointers'],\n    '0068': ['US', '1', 'RepeatInterval'],\n    '0069': ['US', '1', 'BitsGrouped'],\n    '0070': ['US', '1-n', 'PerimeterTable'],\n    '0071': ['xs', '1', 'PerimeterValue'],\n    '0080': ['US', '1', 'PredictorRows'],\n    '0081': ['US', '1', 'PredictorColumns'],\n    '0082': ['US', '1-n', 'PredictorConstants'],\n    '0090': ['CS', '1', 'BlockedPixels'],\n    '0091': ['US', '1', 'BlockRows'],\n    '0092': ['US', '1', 'BlockColumns'],\n    '0093': ['US', '1', 'RowOverlap'],\n    '0094': ['US', '1', 'ColumnOverlap'],\n    '0100': ['US', '1', 'BitsAllocated'],\n    '0101': ['US', '1', 'BitsStored'],\n    '0102': ['US', '1', 'HighBit'],\n    '0103': ['US', '1', 'PixelRepresentation'],\n    '0104': ['xs', '1', 'SmallestValidPixelValue'],\n    '0105': ['xs', '1', 'LargestValidPixelValue'],\n    '0106': ['xs', '1', 'SmallestImagePixelValue'],\n    '0107': ['xs', '1', 'LargestImagePixelValue'],\n    '0108': ['xs', '1', 'SmallestPixelValueInSeries'],\n    '0109': ['xs', '1', 'LargestPixelValueInSeries'],\n    '0110': ['xs', '1', 'SmallestImagePixelValueInPlane'],\n    '0111': ['xs', '1', 'LargestImagePixelValueInPlane'],\n    '0120': ['xs', '1', 'PixelPaddingValue'],\n    '0121': ['xs', '1', 'PixelPaddingRangeLimit'],\n    '0122': ['FL', '1', 'FloatPixelPaddingValue'],\n    '0123': ['FD', '1', 'DoubleFloatPixelPaddingValue'],\n    '0124': ['FL', '1', 'FloatPixelPaddingRangeLimit'],\n    '0125': ['FD', '1', 'DoubleFloatPixelPaddingRangeLimit'],\n    '0200': ['US', '1', 'ImageLocation'],\n    '0300': ['CS', '1', 'QualityControlImage'],\n    '0301': ['CS', '1', 'BurnedInAnnotation'],\n    '0302': ['CS', '1', 'RecognizableVisualFeatures'],\n    '0303': ['CS', '1', 'LongitudinalTemporalInformationModified'],\n    '0304': ['UI', '1', 'ReferencedColorPaletteInstanceUID'],\n    '0400': ['LO', '1', 'TransformLabel'],\n    '0401': ['LO', '1', 'TransformVersionNumber'],\n    '0402': ['US', '1', 'NumberOfTransformSteps'],\n    '0403': ['LO', '1-n', 'SequenceOfCompressedData'],\n    '0404': ['AT', '1-n', 'DetailsOfCoefficients'],\n    '04x0': ['US', '1', 'RowsForNthOrderCoefficients'],\n    '04x1': ['US', '1', 'ColumnsForNthOrderCoefficients'],\n    '04x2': ['LO', '1-n', 'CoefficientCoding'],\n    '04x3': ['AT', '1-n', 'CoefficientCodingPointers'],\n    '0700': ['LO', '1', 'DCTLabel'],\n    '0701': ['CS', '1-n', 'DataBlockDescription'],\n    '0702': ['AT', '1-n', 'DataBlock'],\n    '0710': ['US', '1', 'NormalizationFactorFormat'],\n    '0720': ['US', '1', 'ZonalMapNumberFormat'],\n    '0721': ['AT', '1-n', 'ZonalMapLocation'],\n    '0722': ['US', '1', 'ZonalMapFormat'],\n    '0730': ['US', '1', 'AdaptiveMapFormat'],\n    '0740': ['US', '1', 'CodeNumberFormat'],\n    '08x0': ['CS', '1-n', 'CodeLabel'],\n    '08x2': ['US', '1', 'NumberOfTables'],\n    '08x3': ['AT', '1-n', 'CodeTableLocation'],\n    '08x4': ['US', '1', 'BitsForCodeWord'],\n    '08x8': ['AT', '1-n', 'ImageDataLocation'],\n    '0A02': ['CS', '1', 'PixelSpacingCalibrationType'],\n    '0A04': ['LO', '1', 'PixelSpacingCalibrationDescription'],\n    '1040': ['CS', '1', 'PixelIntensityRelationship'],\n    '1041': ['SS', '1', 'PixelIntensityRelationshipSign'],\n    '1050': ['DS', '1-n', 'WindowCenter'],\n    '1051': ['DS', '1-n', 'WindowWidth'],\n    '1052': ['DS', '1', 'RescaleIntercept'],\n    '1053': ['DS', '1', 'RescaleSlope'],\n    '1054': ['LO', '1', 'RescaleType'],\n    '1055': ['LO', '1-n', 'WindowCenterWidthExplanation'],\n    '1056': ['CS', '1', 'VOILUTFunction'],\n    '1080': ['CS', '1', 'GrayScale'],\n    '1090': ['CS', '1', 'RecommendedViewingMode'],\n    '1100': ['xs', '3', 'GrayLookupTableDescriptor'],\n    '1101': ['xs', '3', 'RedPaletteColorLookupTableDescriptor'],\n    '1102': ['xs', '3', 'GreenPaletteColorLookupTableDescriptor'],\n    '1103': ['xs', '3', 'BluePaletteColorLookupTableDescriptor'],\n    '1104': ['US', '3', 'AlphaPaletteColorLookupTableDescriptor'],\n    '1111': ['xs', '4', 'LargeRedPaletteColorLookupTableDescriptor'],\n    '1112': ['xs', '4', 'LargeGreenPaletteColorLookupTableDescriptor'],\n    '1113': ['xs', '4', 'LargeBluePaletteColorLookupTableDescriptor'],\n    '1199': ['UI', '1', 'PaletteColorLookupTableUID'],\n    '1200': ['xs', '1-n or 1', 'GrayLookupTableData'],\n    '1201': ['OW', '1', 'RedPaletteColorLookupTableData'],\n    '1202': ['OW', '1', 'GreenPaletteColorLookupTableData'],\n    '1203': ['OW', '1', 'BluePaletteColorLookupTableData'],\n    '1204': ['OW', '1', 'AlphaPaletteColorLookupTableData'],\n    '1211': ['OW', '1', 'LargeRedPaletteColorLookupTableData'],\n    '1212': ['OW', '1', 'LargeGreenPaletteColorLookupTableData'],\n    '1213': ['OW', '1', 'LargeBluePaletteColorLookupTableData'],\n    '1214': ['UI', '1', 'LargePaletteColorLookupTableUID'],\n    '1221': ['OW', '1', 'SegmentedRedPaletteColorLookupTableData'],\n    '1222': ['OW', '1', 'SegmentedGreenPaletteColorLookupTableData'],\n    '1223': ['OW', '1', 'SegmentedBluePaletteColorLookupTableData'],\n    '1224': ['OW', '1', 'SegmentedAlphaPaletteColorLookupTableData'],\n    '1230': ['SQ', '1', 'StoredValueColorRangeSequence'],\n    '1231': ['FD', '1', 'MinimumStoredValueMapped'],\n    '1232': ['FD', '1', 'MaximumStoredValueMapped'],\n    '1300': ['CS', '1', 'BreastImplantPresent'],\n    '1350': ['CS', '1', 'PartialView'],\n    '1351': ['ST', '1', 'PartialViewDescription'],\n    '1352': ['SQ', '1', 'PartialViewCodeSequence'],\n    '135A': ['CS', '1', 'SpatialLocationsPreserved'],\n    '1401': ['SQ', '1', 'DataFrameAssignmentSequence'],\n    '1402': ['CS', '1', 'DataPathAssignment'],\n    '1403': ['US', '1', 'BitsMappedToColorLookupTable'],\n    '1404': ['SQ', '1', 'BlendingLUT1Sequence'],\n    '1405': ['CS', '1', 'BlendingLUT1TransferFunction'],\n    '1406': ['FD', '1', 'BlendingWeightConstant'],\n    '1407': ['US', '3', 'BlendingLookupTableDescriptor'],\n    '1408': ['OW', '1', 'BlendingLookupTableData'],\n    '140B': ['SQ', '1', 'EnhancedPaletteColorLookupTableSequence'],\n    '140C': ['SQ', '1', 'BlendingLUT2Sequence'],\n    '140D': ['CS', '1', 'BlendingLUT2TransferFunction'],\n    '140E': ['CS', '1', 'DataPathID'],\n    '140F': ['CS', '1', 'RGBLUTTransferFunction'],\n    '1410': ['CS', '1', 'AlphaLUTTransferFunction'],\n    '2000': ['OB', '1', 'ICCProfile'],\n    '2002': ['CS', '1', 'ColorSpace'],\n    '2110': ['CS', '1', 'LossyImageCompression'],\n    '2112': ['DS', '1-n', 'LossyImageCompressionRatio'],\n    '2114': ['CS', '1-n', 'LossyImageCompressionMethod'],\n    '3000': ['SQ', '1', 'ModalityLUTSequence'],\n    '3002': ['xs', '3', 'LUTDescriptor'],\n    '3003': ['LO', '1', 'LUTExplanation'],\n    '3004': ['LO', '1', 'ModalityLUTType'],\n    '3006': ['xx', '1-n or 1', 'LUTData'],\n    '3010': ['SQ', '1', 'VOILUTSequence'],\n    '3110': ['SQ', '1', 'SoftcopyVOILUTSequence'],\n    '4000': ['LT', '1', 'ImagePresentationComments'],\n    '5000': ['SQ', '1', 'BiPlaneAcquisitionSequence'],\n    '6010': ['US', '1', 'RepresentativeFrameNumber'],\n    '6020': ['US', '1-n', 'FrameNumbersOfInterest'],\n    '6022': ['LO', '1-n', 'FrameOfInterestDescription'],\n    '6023': ['CS', '1-n', 'FrameOfInterestType'],\n    '6030': ['US', '1-n', 'MaskPointers'],\n    '6040': ['US', '1-n', 'RWavePointer'],\n    '6100': ['SQ', '1', 'MaskSubtractionSequence'],\n    '6101': ['CS', '1', 'MaskOperation'],\n    '6102': ['US', '2-2n', 'ApplicableFrameRange'],\n    '6110': ['US', '1-n', 'MaskFrameNumbers'],\n    '6112': ['US', '1', 'ContrastFrameAveraging'],\n    '6114': ['FL', '2', 'MaskSubPixelShift'],\n    '6120': ['SS', '1', 'TIDOffset'],\n    '6190': ['ST', '1', 'MaskOperationExplanation'],\n    '7000': ['SQ', '1', 'EquipmentAdministratorSequence'],\n    '7001': ['US', '1', 'NumberOfDisplaySubsystems'],\n    '7002': ['US', '1', 'CurrentConfigurationID'],\n    '7003': ['US', '1', 'DisplaySubsystemID'],\n    '7004': ['SH', '1', 'DisplaySubsystemName'],\n    '7005': ['LO', '1', 'DisplaySubsystemDescription'],\n    '7006': ['CS', '1', 'SystemStatus'],\n    '7007': ['LO', '1', 'SystemStatusComment'],\n    '7008': ['SQ', '1', 'TargetLuminanceCharacteristicsSequence'],\n    '7009': ['US', '1', 'LuminanceCharacteristicsID'],\n    '700A': ['SQ', '1', 'DisplaySubsystemConfigurationSequence'],\n    '700B': ['US', '1', 'ConfigurationID'],\n    '700C': ['SH', '1', 'ConfigurationName'],\n    '700D': ['LO', '1', 'ConfigurationDescription'],\n    '700E': ['US', '1', 'ReferencedTargetLuminanceCharacteristicsID'],\n    '700F': ['SQ', '1', 'QAResultsSequence'],\n    '7010': ['SQ', '1', 'DisplaySubsystemQAResultsSequence'],\n    '7011': ['SQ', '1', 'ConfigurationQAResultsSequence'],\n    '7012': ['SQ', '1', 'MeasurementEquipmentSequence'],\n    '7013': ['CS', '1-n', 'MeasurementFunctions'],\n    '7014': ['CS', '1', 'MeasurementEquipmentType'],\n    '7015': ['SQ', '1', 'VisualEvaluationResultSequence'],\n    '7016': ['SQ', '1', 'DisplayCalibrationResultSequence'],\n    '7017': ['US', '1', 'DDLValue'],\n    '7018': ['FL', '2', 'CIExyWhitePoint'],\n    '7019': ['CS', '1', 'DisplayFunctionType'],\n    '701A': ['FL', '1', 'GammaValue'],\n    '701B': ['US', '1', 'NumberOfLuminancePoints'],\n    '701C': ['SQ', '1', 'LuminanceResponseSequence'],\n    '701D': ['FL', '1', 'TargetMinimumLuminance'],\n    '701E': ['FL', '1', 'TargetMaximumLuminance'],\n    '701F': ['FL', '1', 'LuminanceValue'],\n    '7020': ['LO', '1', 'LuminanceResponseDescription'],\n    '7021': ['CS', '1', 'WhitePointFlag'],\n    '7022': ['SQ', '1', 'DisplayDeviceTypeCodeSequence'],\n    '7023': ['SQ', '1', 'DisplaySubsystemSequence'],\n    '7024': ['SQ', '1', 'LuminanceResultSequence'],\n    '7025': ['CS', '1', 'AmbientLightValueSource'],\n    '7026': ['CS', '1-n', 'MeasuredCharacteristics'],\n    '7027': ['SQ', '1', 'LuminanceUniformityResultSequence'],\n    '7028': ['SQ', '1', 'VisualEvaluationTestSequence'],\n    '7029': ['CS', '1', 'TestResult'],\n    '702A': ['LO', '1', 'TestResultComment'],\n    '702B': ['CS', '1', 'TestImageValidation'],\n    '702C': ['SQ', '1', 'TestPatternCodeSequence'],\n    '702D': ['SQ', '1', 'MeasurementPatternCodeSequence'],\n    '702E': ['SQ', '1', 'VisualEvaluationMethodCodeSequence'],\n    '7FE0': ['UR', '1', 'PixelDataProviderURL'],\n    '9001': ['UL', '1', 'DataPointRows'],\n    '9002': ['UL', '1', 'DataPointColumns'],\n    '9003': ['CS', '1', 'SignalDomainColumns'],\n    '9099': ['US', '1', 'LargestMonochromePixelValue'],\n    '9108': ['CS', '1', 'DataRepresentation'],\n    '9110': ['SQ', '1', 'PixelMeasuresSequence'],\n    '9132': ['SQ', '1', 'FrameVOILUTSequence'],\n    '9145': ['SQ', '1', 'PixelValueTransformationSequence'],\n    '9235': ['CS', '1', 'SignalDomainRows'],\n    '9411': ['FL', '1', 'DisplayFilterPercentage'],\n    '9415': ['SQ', '1', 'FramePixelShiftSequence'],\n    '9416': ['US', '1', 'SubtractionItemID'],\n    '9422': ['SQ', '1', 'PixelIntensityRelationshipLUTSequence'],\n    '9443': ['SQ', '1', 'FramePixelDataPropertiesSequence'],\n    '9444': ['CS', '1', 'GeometricalProperties'],\n    '9445': ['FL', '1', 'GeometricMaximumDistortion'],\n    '9446': ['CS', '1-n', 'ImageProcessingApplied'],\n    '9454': ['CS', '1', 'MaskSelectionMode'],\n    '9474': ['CS', '1', 'LUTFunction'],\n    '9478': ['FL', '1', 'MaskVisibilityPercentage'],\n    '9501': ['SQ', '1', 'PixelShiftSequence'],\n    '9502': ['SQ', '1', 'RegionPixelShiftSequence'],\n    '9503': ['SS', '2-2n', 'VerticesOfTheRegion'],\n    '9505': ['SQ', '1', 'MultiFramePresentationSequence'],\n    '9506': ['US', '2-2n', 'PixelShiftFrameRange'],\n    '9507': ['US', '2-2n', 'LUTFrameRange'],\n    '9520': ['DS', '16', 'ImageToEquipmentMappingMatrix'],\n    '9537': ['CS', '1', 'EquipmentCoordinateSystemIdentification']\n  },\n  '0032': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '000A': ['CS', '1', 'StudyStatusID'],\n    '000C': ['CS', '1', 'StudyPriorityID'],\n    '0012': ['LO', '1', 'StudyIDIssuer'],\n    '0032': ['DA', '1', 'StudyVerifiedDate'],\n    '0033': ['TM', '1', 'StudyVerifiedTime'],\n    '0034': ['DA', '1', 'StudyReadDate'],\n    '0035': ['TM', '1', 'StudyReadTime'],\n    '1000': ['DA', '1', 'ScheduledStudyStartDate'],\n    '1001': ['TM', '1', 'ScheduledStudyStartTime'],\n    '1010': ['DA', '1', 'ScheduledStudyStopDate'],\n    '1011': ['TM', '1', 'ScheduledStudyStopTime'],\n    '1020': ['LO', '1', 'ScheduledStudyLocation'],\n    '1021': ['AE', '1-n', 'ScheduledStudyLocationAETitle'],\n    '1030': ['LO', '1', 'ReasonForStudy'],\n    '1031': ['SQ', '1', 'RequestingPhysicianIdentificationSequence'],\n    '1032': ['PN', '1', 'RequestingPhysician'],\n    '1033': ['LO', '1', 'RequestingService'],\n    '1034': ['SQ', '1', 'RequestingServiceCodeSequence'],\n    '1040': ['DA', '1', 'StudyArrivalDate'],\n    '1041': ['TM', '1', 'StudyArrivalTime'],\n    '1050': ['DA', '1', 'StudyCompletionDate'],\n    '1051': ['TM', '1', 'StudyCompletionTime'],\n    '1055': ['CS', '1', 'StudyComponentStatusID'],\n    '1060': ['LO', '1', 'RequestedProcedureDescription'],\n    '1064': ['SQ', '1', 'RequestedProcedureCodeSequence'],\n    '1065': ['SQ', '1', 'RequestedLateralityCodeSequence'],\n    '1066': ['UT', '1', 'ReasonForVisit'],\n    '1067': ['SQ', '1', 'ReasonForVisitCodeSequence'],\n    '1070': ['LO', '1', 'RequestedContrastAgent'],\n    '4000': ['LT', '1', 'StudyComments']\n  },\n  '0034': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'FlowIdentifierSequence'],\n    '0002': ['OB', '1', 'FlowIdentifier'],\n    '0003': ['UI', '1', 'FlowTransferSyntaxUID'],\n    '0004': ['UL', '1', 'FlowRTPSamplingRate'],\n    '0005': ['OB', '1', 'SourceIdentifier'],\n    '0007': ['OB', '1', 'FrameOriginTimestamp'],\n    '0008': ['CS', '1', 'IncludesImagingSubject'],\n    '0009': ['SQ', '1', 'FrameUsefulnessGroupSequence'],\n    '000A': ['SQ', '1', 'RealTimeBulkDataFlowSequence'],\n    '000B': ['SQ', '1', 'CameraPositionGroupSequence'],\n    '000C': ['CS', '1', 'IncludesInformation'],\n    '000D': ['SQ', '1', 'TimeOfFrameGroupSequence']\n  },\n  '0038': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0004': ['SQ', '1', 'ReferencedPatientAliasSequence'],\n    '0008': ['CS', '1', 'VisitStatusID'],\n    '0010': ['LO', '1', 'AdmissionID'],\n    '0011': ['LO', '1', 'IssuerOfAdmissionID'],\n    '0014': ['SQ', '1', 'IssuerOfAdmissionIDSequence'],\n    '0016': ['LO', '1', 'RouteOfAdmissions'],\n    '001A': ['DA', '1', 'ScheduledAdmissionDate'],\n    '001B': ['TM', '1', 'ScheduledAdmissionTime'],\n    '001C': ['DA', '1', 'ScheduledDischargeDate'],\n    '001D': ['TM', '1', 'ScheduledDischargeTime'],\n    '001E': ['LO', '1', 'ScheduledPatientInstitutionResidence'],\n    '0020': ['DA', '1', 'AdmittingDate'],\n    '0021': ['TM', '1', 'AdmittingTime'],\n    '0030': ['DA', '1', 'DischargeDate'],\n    '0032': ['TM', '1', 'DischargeTime'],\n    '0040': ['LO', '1', 'DischargeDiagnosisDescription'],\n    '0044': ['SQ', '1', 'DischargeDiagnosisCodeSequence'],\n    '0050': ['LO', '1', 'SpecialNeeds'],\n    '0060': ['LO', '1', 'ServiceEpisodeID'],\n    '0061': ['LO', '1', 'IssuerOfServiceEpisodeID'],\n    '0062': ['LO', '1', 'ServiceEpisodeDescription'],\n    '0064': ['SQ', '1', 'IssuerOfServiceEpisodeIDSequence'],\n    '0100': ['SQ', '1', 'PertinentDocumentsSequence'],\n    '0101': ['SQ', '1', 'PertinentResourcesSequence'],\n    '0102': ['LO', '1', 'ResourceDescription'],\n    '0300': ['LO', '1', 'CurrentPatientLocation'],\n    '0400': ['LO', '1', 'PatientInstitutionResidence'],\n    '0500': ['LO', '1', 'PatientState'],\n    '0502': ['SQ', '1', 'PatientClinicalTrialParticipationSequence'],\n    '4000': ['LT', '1', 'VisitComments']\n  },\n  '003A': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0004': ['CS', '1', 'WaveformOriginality'],\n    '0005': ['US', '1', 'NumberOfWaveformChannels'],\n    '0010': ['UL', '1', 'NumberOfWaveformSamples'],\n    '001A': ['DS', '1', 'SamplingFrequency'],\n    '0020': ['SH', '1', 'MultiplexGroupLabel'],\n    '0200': ['SQ', '1', 'ChannelDefinitionSequence'],\n    '0202': ['IS', '1', 'WaveformChannelNumber'],\n    '0203': ['SH', '1', 'ChannelLabel'],\n    '0205': ['CS', '1-n', 'ChannelStatus'],\n    '0208': ['SQ', '1', 'ChannelSourceSequence'],\n    '0209': ['SQ', '1', 'ChannelSourceModifiersSequence'],\n    '020A': ['SQ', '1', 'SourceWaveformSequence'],\n    '020C': ['LO', '1', 'ChannelDerivationDescription'],\n    '0210': ['DS', '1', 'ChannelSensitivity'],\n    '0211': ['SQ', '1', 'ChannelSensitivityUnitsSequence'],\n    '0212': ['DS', '1', 'ChannelSensitivityCorrectionFactor'],\n    '0213': ['DS', '1', 'ChannelBaseline'],\n    '0214': ['DS', '1', 'ChannelTimeSkew'],\n    '0215': ['DS', '1', 'ChannelSampleSkew'],\n    '0218': ['DS', '1', 'ChannelOffset'],\n    '021A': ['US', '1', 'WaveformBitsStored'],\n    '0220': ['DS', '1', 'FilterLowFrequency'],\n    '0221': ['DS', '1', 'FilterHighFrequency'],\n    '0222': ['DS', '1', 'NotchFilterFrequency'],\n    '0223': ['DS', '1', 'NotchFilterBandwidth'],\n    '0230': ['FL', '1', 'WaveformDataDisplayScale'],\n    '0231': ['US', '3', 'WaveformDisplayBackgroundCIELabValue'],\n    '0240': ['SQ', '1', 'WaveformPresentationGroupSequence'],\n    '0241': ['US', '1', 'PresentationGroupNumber'],\n    '0242': ['SQ', '1', 'ChannelDisplaySequence'],\n    '0244': ['US', '3', 'ChannelRecommendedDisplayCIELabValue'],\n    '0245': ['FL', '1', 'ChannelPosition'],\n    '0246': ['CS', '1', 'DisplayShadingFlag'],\n    '0247': ['FL', '1', 'FractionalChannelDisplayScale'],\n    '0248': ['FL', '1', 'AbsoluteChannelDisplayScale'],\n    '0300': ['SQ', '1', 'MultiplexedAudioChannelsDescriptionCodeSequence'],\n    '0301': ['IS', '1', 'ChannelIdentificationCode'],\n    '0302': ['CS', '1', 'ChannelMode'],\n    '0310': ['UI', '1', 'MultiplexGroupUID'],\n    '0311': ['DS', '1', 'PowerlineFrequency'],\n    '0312': ['SQ', '1', 'ChannelImpedanceSequence'],\n    '0313': ['DS', '1', 'ImpedanceValue'],\n    '0314': ['DT', '1', 'ImpedanceMeasurementDateTime'],\n    '0315': ['DS', '1', 'ImpedanceMeasurementFrequency'],\n    '0316': ['CS', '1', 'ImpedanceMeasurementCurrentType']\n  },\n  '0040': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['AE', '1-n', 'ScheduledStationAETitle'],\n    '0002': ['DA', '1', 'ScheduledProcedureStepStartDate'],\n    '0003': ['TM', '1', 'ScheduledProcedureStepStartTime'],\n    '0004': ['DA', '1', 'ScheduledProcedureStepEndDate'],\n    '0005': ['TM', '1', 'ScheduledProcedureStepEndTime'],\n    '0006': ['PN', '1', 'ScheduledPerformingPhysicianName'],\n    '0007': ['LO', '1', 'ScheduledProcedureStepDescription'],\n    '0008': ['SQ', '1', 'ScheduledProtocolCodeSequence'],\n    '0009': ['SH', '1', 'ScheduledProcedureStepID'],\n    '000A': ['SQ', '1', 'StageCodeSequence'],\n    '000B': ['SQ', '1', 'ScheduledPerformingPhysicianIdentificationSequence'],\n    '0010': ['SH', '1-n', 'ScheduledStationName'],\n    '0011': ['SH', '1', 'ScheduledProcedureStepLocation'],\n    '0012': ['LO', '1', 'PreMedication'],\n    '0020': ['CS', '1', 'ScheduledProcedureStepStatus'],\n    '0026': ['SQ', '1', 'OrderPlacerIdentifierSequence'],\n    '0027': ['SQ', '1', 'OrderFillerIdentifierSequence'],\n    '0031': ['UT', '1', 'LocalNamespaceEntityID'],\n    '0032': ['UT', '1', 'UniversalEntityID'],\n    '0033': ['CS', '1', 'UniversalEntityIDType'],\n    '0035': ['CS', '1', 'IdentifierTypeCode'],\n    '0036': ['SQ', '1', 'AssigningFacilitySequence'],\n    '0039': ['SQ', '1', 'AssigningJurisdictionCodeSequence'],\n    '003A': ['SQ', '1', 'AssigningAgencyOrDepartmentCodeSequence'],\n    '0100': ['SQ', '1', 'ScheduledProcedureStepSequence'],\n    '0220': ['SQ', '1', 'ReferencedNonImageCompositeSOPInstanceSequence'],\n    '0241': ['AE', '1', 'PerformedStationAETitle'],\n    '0242': ['SH', '1', 'PerformedStationName'],\n    '0243': ['SH', '1', 'PerformedLocation'],\n    '0244': ['DA', '1', 'PerformedProcedureStepStartDate'],\n    '0245': ['TM', '1', 'PerformedProcedureStepStartTime'],\n    '0250': ['DA', '1', 'PerformedProcedureStepEndDate'],\n    '0251': ['TM', '1', 'PerformedProcedureStepEndTime'],\n    '0252': ['CS', '1', 'PerformedProcedureStepStatus'],\n    '0253': ['SH', '1', 'PerformedProcedureStepID'],\n    '0254': ['LO', '1', 'PerformedProcedureStepDescription'],\n    '0255': ['LO', '1', 'PerformedProcedureTypeDescription'],\n    '0260': ['SQ', '1', 'PerformedProtocolCodeSequence'],\n    '0261': ['CS', '1', 'PerformedProtocolType'],\n    '0270': ['SQ', '1', 'ScheduledStepAttributesSequence'],\n    '0275': ['SQ', '1', 'RequestAttributesSequence'],\n    '0280': ['ST', '1', 'CommentsOnThePerformedProcedureStep'],\n    '0281': ['SQ', '1', 'PerformedProcedureStepDiscontinuationReasonCodeSequence'],\n    '0293': ['SQ', '1', 'QuantitySequence'],\n    '0294': ['DS', '1', 'Quantity'],\n    '0295': ['SQ', '1', 'MeasuringUnitsSequence'],\n    '0296': ['SQ', '1', 'BillingItemSequence'],\n    '0300': ['US', '1', 'TotalTimeOfFluoroscopy'],\n    '0301': ['US', '1', 'TotalNumberOfExposures'],\n    '0302': ['US', '1', 'EntranceDose'],\n    '0303': ['US', '1-2', 'ExposedArea'],\n    '0306': ['DS', '1', 'DistanceSourceToEntrance'],\n    '0307': ['DS', '1', 'DistanceSourceToSupport'],\n    '030E': ['SQ', '1', 'ExposureDoseSequence'],\n    '0310': ['ST', '1', 'CommentsOnRadiationDose'],\n    '0312': ['DS', '1', 'XRayOutput'],\n    '0314': ['DS', '1', 'HalfValueLayer'],\n    '0316': ['DS', '1', 'OrganDose'],\n    '0318': ['CS', '1', 'OrganExposed'],\n    '0320': ['SQ', '1', 'BillingProcedureStepSequence'],\n    '0321': ['SQ', '1', 'FilmConsumptionSequence'],\n    '0324': ['SQ', '1', 'BillingSuppliesAndDevicesSequence'],\n    '0330': ['SQ', '1', 'ReferencedProcedureStepSequence'],\n    '0340': ['SQ', '1', 'PerformedSeriesSequence'],\n    '0400': ['LT', '1', 'CommentsOnTheScheduledProcedureStep'],\n    '0440': ['SQ', '1', 'ProtocolContextSequence'],\n    '0441': ['SQ', '1', 'ContentItemModifierSequence'],\n    '0500': ['SQ', '1', 'ScheduledSpecimenSequence'],\n    '050A': ['LO', '1', 'SpecimenAccessionNumber'],\n    '0512': ['LO', '1', 'ContainerIdentifier'],\n    '0513': ['SQ', '1', 'IssuerOfTheContainerIdentifierSequence'],\n    '0515': ['SQ', '1', 'AlternateContainerIdentifierSequence'],\n    '0518': ['SQ', '1', 'ContainerTypeCodeSequence'],\n    '051A': ['LO', '1', 'ContainerDescription'],\n    '0520': ['SQ', '1', 'ContainerComponentSequence'],\n    '0550': ['SQ', '1', 'SpecimenSequence'],\n    '0551': ['LO', '1', 'SpecimenIdentifier'],\n    '0552': ['SQ', '1', 'SpecimenDescriptionSequenceTrial'],\n    '0553': ['ST', '1', 'SpecimenDescriptionTrial'],\n    '0554': ['UI', '1', 'SpecimenUID'],\n    '0555': ['SQ', '1', 'AcquisitionContextSequence'],\n    '0556': ['ST', '1', 'AcquisitionContextDescription'],\n    '0560': ['SQ', '1', 'SpecimenDescriptionSequence'],\n    '0562': ['SQ', '1', 'IssuerOfTheSpecimenIdentifierSequence'],\n    '059A': ['SQ', '1', 'SpecimenTypeCodeSequence'],\n    '0600': ['LO', '1', 'SpecimenShortDescription'],\n    '0602': ['UT', '1', 'SpecimenDetailedDescription'],\n    '0610': ['SQ', '1', 'SpecimenPreparationSequence'],\n    '0612': ['SQ', '1', 'SpecimenPreparationStepContentItemSequence'],\n    '0620': ['SQ', '1', 'SpecimenLocalizationContentItemSequence'],\n    '06FA': ['LO', '1', 'SlideIdentifier'],\n    '0710': ['SQ', '1', 'WholeSlideMicroscopyImageFrameTypeSequence'],\n    '071A': ['SQ', '1', 'ImageCenterPointCoordinatesSequence'],\n    '072A': ['DS', '1', 'XOffsetInSlideCoordinateSystem'],\n    '073A': ['DS', '1', 'YOffsetInSlideCoordinateSystem'],\n    '074A': ['DS', '1', 'ZOffsetInSlideCoordinateSystem'],\n    '08D8': ['SQ', '1', 'PixelSpacingSequence'],\n    '08DA': ['SQ', '1', 'CoordinateSystemAxisCodeSequence'],\n    '08EA': ['SQ', '1', 'MeasurementUnitsCodeSequence'],\n    '09F8': ['SQ', '1', 'VitalStainCodeSequenceTrial'],\n    '1001': ['SH', '1', 'RequestedProcedureID'],\n    '1002': ['LO', '1', 'ReasonForTheRequestedProcedure'],\n    '1003': ['SH', '1', 'RequestedProcedurePriority'],\n    '1004': ['LO', '1', 'PatientTransportArrangements'],\n    '1005': ['LO', '1', 'RequestedProcedureLocation'],\n    '1006': ['SH', '1', 'PlacerOrderNumberProcedure'],\n    '1007': ['SH', '1', 'FillerOrderNumberProcedure'],\n    '1008': ['LO', '1', 'ConfidentialityCode'],\n    '1009': ['SH', '1', 'ReportingPriority'],\n    '100A': ['SQ', '1', 'ReasonForRequestedProcedureCodeSequence'],\n    '1010': ['PN', '1-n', 'NamesOfIntendedRecipientsOfResults'],\n    '1011': ['SQ', '1', 'IntendedRecipientsOfResultsIdentificationSequence'],\n    '1012': ['SQ', '1', 'ReasonForPerformedProcedureCodeSequence'],\n    '1060': ['LO', '1', 'RequestedProcedureDescriptionTrial'],\n    '1101': ['SQ', '1', 'PersonIdentificationCodeSequence'],\n    '1102': ['ST', '1', 'PersonAddress'],\n    '1103': ['LO', '1-n', 'PersonTelephoneNumbers'],\n    '1104': ['LT', '1', 'PersonTelecomInformation'],\n    '1400': ['LT', '1', 'RequestedProcedureComments'],\n    '2001': ['LO', '1', 'ReasonForTheImagingServiceRequest'],\n    '2004': ['DA', '1', 'IssueDateOfImagingServiceRequest'],\n    '2005': ['TM', '1', 'IssueTimeOfImagingServiceRequest'],\n    '2006': ['SH', '1', 'PlacerOrderNumberImagingServiceRequestRetired'],\n    '2007': ['SH', '1', 'FillerOrderNumberImagingServiceRequestRetired'],\n    '2008': ['PN', '1', 'OrderEnteredBy'],\n    '2009': ['SH', '1', 'OrderEntererLocation'],\n    '2010': ['SH', '1', 'OrderCallbackPhoneNumber'],\n    '2011': ['LT', '1', 'OrderCallbackTelecomInformation'],\n    '2016': ['LO', '1', 'PlacerOrderNumberImagingServiceRequest'],\n    '2017': ['LO', '1', 'FillerOrderNumberImagingServiceRequest'],\n    '2400': ['LT', '1', 'ImagingServiceRequestComments'],\n    '3001': ['LO', '1', 'ConfidentialityConstraintOnPatientDataDescription'],\n    '4001': ['CS', '1', 'GeneralPurposeScheduledProcedureStepStatus'],\n    '4002': ['CS', '1', 'GeneralPurposePerformedProcedureStepStatus'],\n    '4003': ['CS', '1', 'GeneralPurposeScheduledProcedureStepPriority'],\n    '4004': ['SQ', '1', 'ScheduledProcessingApplicationsCodeSequence'],\n    '4005': ['DT', '1', 'ScheduledProcedureStepStartDateTime'],\n    '4006': ['CS', '1', 'MultipleCopiesFlag'],\n    '4007': ['SQ', '1', 'PerformedProcessingApplicationsCodeSequence'],\n    '4008': ['DT', '1', 'ScheduledProcedureStepExpirationDateTime'],\n    '4009': ['SQ', '1', 'HumanPerformerCodeSequence'],\n    '4010': ['DT', '1', 'ScheduledProcedureStepModificationDateTime'],\n    '4011': ['DT', '1', 'ExpectedCompletionDateTime'],\n    '4015': ['SQ', '1', 'ResultingGeneralPurposePerformedProcedureStepsSequence'],\n    '4016': ['SQ', '1', 'ReferencedGeneralPurposeScheduledProcedureStepSequence'],\n    '4018': ['SQ', '1', 'ScheduledWorkitemCodeSequence'],\n    '4019': ['SQ', '1', 'PerformedWorkitemCodeSequence'],\n    '4020': ['CS', '1', 'InputAvailabilityFlag'],\n    '4021': ['SQ', '1', 'InputInformationSequence'],\n    '4022': ['SQ', '1', 'RelevantInformationSequence'],\n    '4023': ['UI', '1', 'ReferencedGeneralPurposeScheduledProcedureStepTransactionUID'],\n    '4025': ['SQ', '1', 'ScheduledStationNameCodeSequence'],\n    '4026': ['SQ', '1', 'ScheduledStationClassCodeSequence'],\n    '4027': ['SQ', '1', 'ScheduledStationGeographicLocationCodeSequence'],\n    '4028': ['SQ', '1', 'PerformedStationNameCodeSequence'],\n    '4029': ['SQ', '1', 'PerformedStationClassCodeSequence'],\n    '4030': ['SQ', '1', 'PerformedStationGeographicLocationCodeSequence'],\n    '4031': ['SQ', '1', 'RequestedSubsequentWorkitemCodeSequence'],\n    '4032': ['SQ', '1', 'NonDICOMOutputCodeSequence'],\n    '4033': ['SQ', '1', 'OutputInformationSequence'],\n    '4034': ['SQ', '1', 'ScheduledHumanPerformersSequence'],\n    '4035': ['SQ', '1', 'ActualHumanPerformersSequence'],\n    '4036': ['LO', '1', 'HumanPerformerOrganization'],\n    '4037': ['PN', '1', 'HumanPerformerName'],\n    '4040': ['CS', '1', 'RawDataHandling'],\n    '4041': ['CS', '1', 'InputReadinessState'],\n    '4050': ['DT', '1', 'PerformedProcedureStepStartDateTime'],\n    '4051': ['DT', '1', 'PerformedProcedureStepEndDateTime'],\n    '4052': ['DT', '1', 'ProcedureStepCancellationDateTime'],\n    '4070': ['SQ', '1', 'OutputDestinationSequence'],\n    '4071': ['SQ', '1', 'DICOMStorageSequence'],\n    '4072': ['SQ', '1', 'STOWRSStorageSequence'],\n    '4073': ['UR', '1', 'StorageURL'],\n    '4074': ['SQ', '1', 'XDSStorageSequence'],\n    '8302': ['DS', '1', 'EntranceDoseInmGy'],\n    '8303': ['CS', '1', 'EntranceDoseDerivation'],\n    '9092': ['SQ', '1', 'ParametricMapFrameTypeSequence'],\n    '9094': ['SQ', '1', 'ReferencedImageRealWorldValueMappingSequence'],\n    '9096': ['SQ', '1', 'RealWorldValueMappingSequence'],\n    '9098': ['SQ', '1', 'PixelValueMappingCodeSequence'],\n    '9210': ['SH', '1', 'LUTLabel'],\n    '9211': ['xs', '1', 'RealWorldValueLastValueMapped'],\n    '9212': ['FD', '1-n', 'RealWorldValueLUTData'],\n    '9213': ['FD', '1', 'DoubleFloatRealWorldValueLastValueMapped'],\n    '9214': ['FD', '1', 'DoubleFloatRealWorldValueFirstValueMapped'],\n    '9216': ['xs', '1', 'RealWorldValueFirstValueMapped'],\n    '9220': ['SQ', '1', 'QuantityDefinitionSequence'],\n    '9224': ['FD', '1', 'RealWorldValueIntercept'],\n    '9225': ['FD', '1', 'RealWorldValueSlope'],\n    'A007': ['CS', '1', 'FindingsFlagTrial'],\n    'A010': ['CS', '1', 'RelationshipType'],\n    'A020': ['SQ', '1', 'FindingsSequenceTrial'],\n    'A021': ['UI', '1', 'FindingsGroupUIDTrial'],\n    'A022': ['UI', '1', 'ReferencedFindingsGroupUIDTrial'],\n    'A023': ['DA', '1', 'FindingsGroupRecordingDateTrial'],\n    'A024': ['TM', '1', 'FindingsGroupRecordingTimeTrial'],\n    'A026': ['SQ', '1', 'FindingsSourceCategoryCodeSequenceTrial'],\n    'A027': ['LO', '1', 'VerifyingOrganization'],\n    'A028': ['SQ', '1', 'DocumentingOrganizationIdentifierCodeSequenceTrial'],\n    'A030': ['DT', '1', 'VerificationDateTime'],\n    'A032': ['DT', '1', 'ObservationDateTime'],\n    'A033': ['DT', '1', 'ObservationStartDateTime'],\n    'A040': ['CS', '1', 'ValueType'],\n    'A043': ['SQ', '1', 'ConceptNameCodeSequence'],\n    'A047': ['LO', '1', 'MeasurementPrecisionDescriptionTrial'],\n    'A050': ['CS', '1', 'ContinuityOfContent'],\n    'A057': ['CS', '1-n', 'UrgencyOrPriorityAlertsTrial'],\n    'A060': ['LO', '1', 'SequencingIndicatorTrial'],\n    'A066': ['SQ', '1', 'DocumentIdentifierCodeSequenceTrial'],\n    'A067': ['PN', '1', 'DocumentAuthorTrial'],\n    'A068': ['SQ', '1', 'DocumentAuthorIdentifierCodeSequenceTrial'],\n    'A070': ['SQ', '1', 'IdentifierCodeSequenceTrial'],\n    'A073': ['SQ', '1', 'VerifyingObserverSequence'],\n    'A074': ['OB', '1', 'ObjectBinaryIdentifierTrial'],\n    'A075': ['PN', '1', 'VerifyingObserverName'],\n    'A076': ['SQ', '1', 'DocumentingObserverIdentifierCodeSequenceTrial'],\n    'A078': ['SQ', '1', 'AuthorObserverSequence'],\n    'A07A': ['SQ', '1', 'ParticipantSequence'],\n    'A07C': ['SQ', '1', 'CustodialOrganizationSequence'],\n    'A080': ['CS', '1', 'ParticipationType'],\n    'A082': ['DT', '1', 'ParticipationDateTime'],\n    'A084': ['CS', '1', 'ObserverType'],\n    'A085': ['SQ', '1', 'ProcedureIdentifierCodeSequenceTrial'],\n    'A088': ['SQ', '1', 'VerifyingObserverIdentificationCodeSequence'],\n    'A089': ['OB', '1', 'ObjectDirectoryBinaryIdentifierTrial'],\n    'A090': ['SQ', '1', 'EquivalentCDADocumentSequence'],\n    'A0B0': ['US', '2-2n', 'ReferencedWaveformChannels'],\n    'A110': ['DA', '1', 'DateOfDocumentOrVerbalTransactionTrial'],\n    'A112': ['TM', '1', 'TimeOfDocumentCreationOrVerbalTransactionTrial'],\n    'A120': ['DT', '1', 'DateTime'],\n    'A121': ['DA', '1', 'Date'],\n    'A122': ['TM', '1', 'Time'],\n    'A123': ['PN', '1', 'PersonName'],\n    'A124': ['UI', '1', 'UID'],\n    'A125': ['CS', '2', 'ReportStatusIDTrial'],\n    'A130': ['CS', '1', 'TemporalRangeType'],\n    'A132': ['UL', '1-n', 'ReferencedSamplePositions'],\n    'A136': ['US', '1-n', 'ReferencedFrameNumbers'],\n    'A138': ['DS', '1-n', 'ReferencedTimeOffsets'],\n    'A13A': ['DT', '1-n', 'ReferencedDateTime'],\n    'A160': ['UT', '1', 'TextValue'],\n    'A161': ['FD', '1-n', 'FloatingPointValue'],\n    'A162': ['SL', '1-n', 'RationalNumeratorValue'],\n    'A163': ['UL', '1-n', 'RationalDenominatorValue'],\n    'A167': ['SQ', '1', 'ObservationCategoryCodeSequenceTrial'],\n    'A168': ['SQ', '1', 'ConceptCodeSequence'],\n    'A16A': ['ST', '1', 'BibliographicCitationTrial'],\n    'A170': ['SQ', '1', 'PurposeOfReferenceCodeSequence'],\n    'A171': ['UI', '1', 'ObservationUID'],\n    'A172': ['UI', '1', 'ReferencedObservationUIDTrial'],\n    'A173': ['CS', '1', 'ReferencedObservationClassTrial'],\n    'A174': ['CS', '1', 'ReferencedObjectObservationClassTrial'],\n    'A180': ['US', '1', 'AnnotationGroupNumber'],\n    'A192': ['DA', '1', 'ObservationDateTrial'],\n    'A193': ['TM', '1', 'ObservationTimeTrial'],\n    'A194': ['CS', '1', 'MeasurementAutomationTrial'],\n    'A195': ['SQ', '1', 'ModifierCodeSequence'],\n    'A224': ['ST', '1', 'IdentificationDescriptionTrial'],\n    'A290': ['CS', '1', 'CoordinatesSetGeometricTypeTrial'],\n    'A296': ['SQ', '1', 'AlgorithmCodeSequenceTrial'],\n    'A297': ['ST', '1', 'AlgorithmDescriptionTrial'],\n    'A29A': ['SL', '2-2n', 'PixelCoordinatesSetTrial'],\n    'A300': ['SQ', '1', 'MeasuredValueSequence'],\n    'A301': ['SQ', '1', 'NumericValueQualifierCodeSequence'],\n    'A307': ['PN', '1', 'CurrentObserverTrial'],\n    'A30A': ['DS', '1-n', 'NumericValue'],\n    'A313': ['SQ', '1', 'ReferencedAccessionSequenceTrial'],\n    'A33A': ['ST', '1', 'ReportStatusCommentTrial'],\n    'A340': ['SQ', '1', 'ProcedureContextSequenceTrial'],\n    'A352': ['PN', '1', 'VerbalSourceTrial'],\n    'A353': ['ST', '1', 'AddressTrial'],\n    'A354': ['LO', '1', 'TelephoneNumberTrial'],\n    'A358': ['SQ', '1', 'VerbalSourceIdentifierCodeSequenceTrial'],\n    'A360': ['SQ', '1', 'PredecessorDocumentsSequence'],\n    'A370': ['SQ', '1', 'ReferencedRequestSequence'],\n    'A372': ['SQ', '1', 'PerformedProcedureCodeSequence'],\n    'A375': ['SQ', '1', 'CurrentRequestedProcedureEvidenceSequence'],\n    'A380': ['SQ', '1', 'ReportDetailSequenceTrial'],\n    'A385': ['SQ', '1', 'PertinentOtherEvidenceSequence'],\n    'A390': ['SQ', '1', 'HL7StructuredDocumentReferenceSequence'],\n    'A402': ['UI', '1', 'ObservationSubjectUIDTrial'],\n    'A403': ['CS', '1', 'ObservationSubjectClassTrial'],\n    'A404': ['SQ', '1', 'ObservationSubjectTypeCodeSequenceTrial'],\n    'A491': ['CS', '1', 'CompletionFlag'],\n    'A492': ['LO', '1', 'CompletionFlagDescription'],\n    'A493': ['CS', '1', 'VerificationFlag'],\n    'A494': ['CS', '1', 'ArchiveRequested'],\n    'A496': ['CS', '1', 'PreliminaryFlag'],\n    'A504': ['SQ', '1', 'ContentTemplateSequence'],\n    'A525': ['SQ', '1', 'IdenticalDocumentsSequence'],\n    'A600': ['CS', '1', 'ObservationSubjectContextFlagTrial'],\n    'A601': ['CS', '1', 'ObserverContextFlagTrial'],\n    'A603': ['CS', '1', 'ProcedureContextFlagTrial'],\n    'A730': ['SQ', '1', 'ContentSequence'],\n    'A731': ['SQ', '1', 'RelationshipSequenceTrial'],\n    'A732': ['SQ', '1', 'RelationshipTypeCodeSequenceTrial'],\n    'A744': ['SQ', '1', 'LanguageCodeSequenceTrial'],\n    'A801': ['SQ', '1', 'TabulatedValuesSequence'],\n    'A802': ['UL', '1', 'NumberOfTableRows'],\n    'A803': ['UL', '1', 'NumberOfTableColumns'],\n    'A804': ['UL', '1', 'TableRowNumber'],\n    'A805': ['UL', '1', 'TableColumnNumber'],\n    'A806': ['SQ', '1', 'TableRowDefinitionSequence'],\n    'A807': ['SQ', '1', 'TableColumnDefinitionSequence'],\n    'A808': ['SQ', '1', 'CellValuesSequence'],\n    'A992': ['ST', '1', 'UniformResourceLocatorTrial'],\n    'B020': ['SQ', '1', 'WaveformAnnotationSequence'],\n    'DB00': ['CS', '1', 'TemplateIdentifier'],\n    'DB06': ['DT', '1', 'TemplateVersion'],\n    'DB07': ['DT', '1', 'TemplateLocalVersion'],\n    'DB0B': ['CS', '1', 'TemplateExtensionFlag'],\n    'DB0C': ['UI', '1', 'TemplateExtensionOrganizationUID'],\n    'DB0D': ['UI', '1', 'TemplateExtensionCreatorUID'],\n    'DB73': ['UL', '1-n', 'ReferencedContentItemIdentifier'],\n    'E001': ['ST', '1', 'HL7InstanceIdentifier'],\n    'E004': ['DT', '1', 'HL7DocumentEffectiveTime'],\n    'E006': ['SQ', '1', 'HL7DocumentTypeCodeSequence'],\n    'E008': ['SQ', '1', 'DocumentClassCodeSequence'],\n    'E010': ['UR', '1', 'RetrieveURI'],\n    'E011': ['UI', '1', 'RetrieveLocationUID'],\n    'E020': ['CS', '1', 'TypeOfInstances'],\n    'E021': ['SQ', '1', 'DICOMRetrievalSequence'],\n    'E022': ['SQ', '1', 'DICOMMediaRetrievalSequence'],\n    'E023': ['SQ', '1', 'WADORetrievalSequence'],\n    'E024': ['SQ', '1', 'XDSRetrievalSequence'],\n    'E025': ['SQ', '1', 'WADORSRetrievalSequence'],\n    'E030': ['UI', '1', 'RepositoryUniqueID'],\n    'E031': ['UI', '1', 'HomeCommunityID']\n  },\n  '0042': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['ST', '1', 'DocumentTitle'],\n    '0011': ['OB', '1', 'EncapsulatedDocument'],\n    '0012': ['LO', '1', 'MIMETypeOfEncapsulatedDocument'],\n    '0013': ['SQ', '1', 'SourceInstanceSequence'],\n    '0014': ['LO', '1-n', 'ListOfMIMETypes'],\n    '0015': ['UL', '1', 'EncapsulatedDocumentLength']\n  },\n  '0044': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['ST', '1', 'ProductPackageIdentifier'],\n    '0002': ['CS', '1', 'SubstanceAdministrationApproval'],\n    '0003': ['LT', '1', 'ApprovalStatusFurtherDescription'],\n    '0004': ['DT', '1', 'ApprovalStatusDateTime'],\n    '0007': ['SQ', '1', 'ProductTypeCodeSequence'],\n    '0008': ['LO', '1-n', 'ProductName'],\n    '0009': ['LT', '1', 'ProductDescription'],\n    '000A': ['LO', '1', 'ProductLotIdentifier'],\n    '000B': ['DT', '1', 'ProductExpirationDateTime'],\n    '0010': ['DT', '1', 'SubstanceAdministrationDateTime'],\n    '0011': ['LO', '1', 'SubstanceAdministrationNotes'],\n    '0012': ['LO', '1', 'SubstanceAdministrationDeviceID'],\n    '0013': ['SQ', '1', 'ProductParameterSequence'],\n    '0019': ['SQ', '1', 'SubstanceAdministrationParameterSequence'],\n    '0100': ['SQ', '1', 'ApprovalSequence'],\n    '0101': ['SQ', '1', 'AssertionCodeSequence'],\n    '0102': ['UI', '1', 'AssertionUID'],\n    '0103': ['SQ', '1', 'AsserterIdentificationSequence'],\n    '0104': ['DT', '1', 'AssertionDateTime'],\n    '0105': ['DT', '1', 'AssertionExpirationDateTime'],\n    '0106': ['UT', '1', 'AssertionComments'],\n    '0107': ['SQ', '1', 'RelatedAssertionSequence'],\n    '0108': ['UI', '1', 'ReferencedAssertionUID'],\n    '0109': ['SQ', '1', 'ApprovalSubjectSequence'],\n    '010A': ['SQ', '1', 'OrganizationalRoleCodeSequence']\n  },\n  '0046': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0012': ['LO', '1', 'LensDescription'],\n    '0014': ['SQ', '1', 'RightLensSequence'],\n    '0015': ['SQ', '1', 'LeftLensSequence'],\n    '0016': ['SQ', '1', 'UnspecifiedLateralityLensSequence'],\n    '0018': ['SQ', '1', 'CylinderSequence'],\n    '0028': ['SQ', '1', 'PrismSequence'],\n    '0030': ['FD', '1', 'HorizontalPrismPower'],\n    '0032': ['CS', '1', 'HorizontalPrismBase'],\n    '0034': ['FD', '1', 'VerticalPrismPower'],\n    '0036': ['CS', '1', 'VerticalPrismBase'],\n    '0038': ['CS', '1', 'LensSegmentType'],\n    '0040': ['FD', '1', 'OpticalTransmittance'],\n    '0042': ['FD', '1', 'ChannelWidth'],\n    '0044': ['FD', '1', 'PupilSize'],\n    '0046': ['FD', '1', 'CornealSize'],\n    '0047': ['SQ', '1', 'CornealSizeSequence'],\n    '0050': ['SQ', '1', 'AutorefractionRightEyeSequence'],\n    '0052': ['SQ', '1', 'AutorefractionLeftEyeSequence'],\n    '0060': ['FD', '1', 'DistancePupillaryDistance'],\n    '0062': ['FD', '1', 'NearPupillaryDistance'],\n    '0063': ['FD', '1', 'IntermediatePupillaryDistance'],\n    '0064': ['FD', '1', 'OtherPupillaryDistance'],\n    '0070': ['SQ', '1', 'KeratometryRightEyeSequence'],\n    '0071': ['SQ', '1', 'KeratometryLeftEyeSequence'],\n    '0074': ['SQ', '1', 'SteepKeratometricAxisSequence'],\n    '0075': ['FD', '1', 'RadiusOfCurvature'],\n    '0076': ['FD', '1', 'KeratometricPower'],\n    '0077': ['FD', '1', 'KeratometricAxis'],\n    '0080': ['SQ', '1', 'FlatKeratometricAxisSequence'],\n    '0092': ['CS', '1', 'BackgroundColor'],\n    '0094': ['CS', '1', 'Optotype'],\n    '0095': ['CS', '1', 'OptotypePresentation'],\n    '0097': ['SQ', '1', 'SubjectiveRefractionRightEyeSequence'],\n    '0098': ['SQ', '1', 'SubjectiveRefractionLeftEyeSequence'],\n    '0100': ['SQ', '1', 'AddNearSequence'],\n    '0101': ['SQ', '1', 'AddIntermediateSequence'],\n    '0102': ['SQ', '1', 'AddOtherSequence'],\n    '0104': ['FD', '1', 'AddPower'],\n    '0106': ['FD', '1', 'ViewingDistance'],\n    '0110': ['SQ', '1', 'CorneaMeasurementsSequence'],\n    '0111': ['SQ', '1', 'SourceOfCorneaMeasurementDataCodeSequence'],\n    '0112': ['SQ', '1', 'SteepCornealAxisSequence'],\n    '0113': ['SQ', '1', 'FlatCornealAxisSequence'],\n    '0114': ['FD', '1', 'CornealPower'],\n    '0115': ['FD', '1', 'CornealAxis'],\n    '0116': ['SQ', '1', 'CorneaMeasurementMethodCodeSequence'],\n    '0117': ['FL', '1', 'RefractiveIndexOfCornea'],\n    '0118': ['FL', '1', 'RefractiveIndexOfAqueousHumor'],\n    '0121': ['SQ', '1', 'VisualAcuityTypeCodeSequence'],\n    '0122': ['SQ', '1', 'VisualAcuityRightEyeSequence'],\n    '0123': ['SQ', '1', 'VisualAcuityLeftEyeSequence'],\n    '0124': ['SQ', '1', 'VisualAcuityBothEyesOpenSequence'],\n    '0125': ['CS', '1', 'ViewingDistanceType'],\n    '0135': ['SS', '2', 'VisualAcuityModifiers'],\n    '0137': ['FD', '1', 'DecimalVisualAcuity'],\n    '0139': ['LO', '1', 'OptotypeDetailedDefinition'],\n    '0145': ['SQ', '1', 'ReferencedRefractiveMeasurementsSequence'],\n    '0146': ['FD', '1', 'SpherePower'],\n    '0147': ['FD', '1', 'CylinderPower'],\n    '0201': ['CS', '1', 'CornealTopographySurface'],\n    '0202': ['FL', '2', 'CornealVertexLocation'],\n    '0203': ['FL', '1', 'PupilCentroidXCoordinate'],\n    '0204': ['FL', '1', 'PupilCentroidYCoordinate'],\n    '0205': ['FL', '1', 'EquivalentPupilRadius'],\n    '0207': ['SQ', '1', 'CornealTopographyMapTypeCodeSequence'],\n    '0208': ['IS', '2-2n', 'VerticesOfTheOutlineOfPupil'],\n    '0210': ['SQ', '1', 'CornealTopographyMappingNormalsSequence'],\n    '0211': ['SQ', '1', 'MaximumCornealCurvatureSequence'],\n    '0212': ['FL', '1', 'MaximumCornealCurvature'],\n    '0213': ['FL', '2', 'MaximumCornealCurvatureLocation'],\n    '0215': ['SQ', '1', 'MinimumKeratometricSequence'],\n    '0218': ['SQ', '1', 'SimulatedKeratometricCylinderSequence'],\n    '0220': ['FL', '1', 'AverageCornealPower'],\n    '0224': ['FL', '1', 'CornealISValue'],\n    '0227': ['FL', '1', 'AnalyzedArea'],\n    '0230': ['FL', '1', 'SurfaceRegularityIndex'],\n    '0232': ['FL', '1', 'SurfaceAsymmetryIndex'],\n    '0234': ['FL', '1', 'CornealEccentricityIndex'],\n    '0236': ['FL', '1', 'KeratoconusPredictionIndex'],\n    '0238': ['FL', '1', 'DecimalPotentialVisualAcuity'],\n    '0242': ['CS', '1', 'CornealTopographyMapQualityEvaluation'],\n    '0244': ['SQ', '1', 'SourceImageCornealProcessedDataSequence'],\n    '0247': ['FL', '3', 'CornealPointLocation'],\n    '0248': ['CS', '1', 'CornealPointEstimated'],\n    '0249': ['FL', '1', 'AxialPower'],\n    '0250': ['FL', '1', 'TangentialPower'],\n    '0251': ['FL', '1', 'RefractivePower'],\n    '0252': ['FL', '1', 'RelativeElevation'],\n    '0253': ['FL', '1', 'CornealWavefront']\n  },\n  '0048': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['FL', '1', 'ImagedVolumeWidth'],\n    '0002': ['FL', '1', 'ImagedVolumeHeight'],\n    '0003': ['FL', '1', 'ImagedVolumeDepth'],\n    '0006': ['UL', '1', 'TotalPixelMatrixColumns'],\n    '0007': ['UL', '1', 'TotalPixelMatrixRows'],\n    '0008': ['SQ', '1', 'TotalPixelMatrixOriginSequence'],\n    '0010': ['CS', '1', 'SpecimenLabelInImage'],\n    '0011': ['CS', '1', 'FocusMethod'],\n    '0012': ['CS', '1', 'ExtendedDepthOfField'],\n    '0013': ['US', '1', 'NumberOfFocalPlanes'],\n    '0014': ['FL', '1', 'DistanceBetweenFocalPlanes'],\n    '0015': ['US', '3', 'RecommendedAbsentPixelCIELabValue'],\n    '0100': ['SQ', '1', 'IlluminatorTypeCodeSequence'],\n    '0102': ['DS', '6', 'ImageOrientationSlide'],\n    '0105': ['SQ', '1', 'OpticalPathSequence'],\n    '0106': ['SH', '1', 'OpticalPathIdentifier'],\n    '0107': ['ST', '1', 'OpticalPathDescription'],\n    '0108': ['SQ', '1', 'IlluminationColorCodeSequence'],\n    '0110': ['SQ', '1', 'SpecimenReferenceSequence'],\n    '0111': ['DS', '1', 'CondenserLensPower'],\n    '0112': ['DS', '1', 'ObjectiveLensPower'],\n    '0113': ['DS', '1', 'ObjectiveLensNumericalAperture'],\n    '0120': ['SQ', '1', 'PaletteColorLookupTableSequence'],\n    '0200': ['SQ', '1', 'ReferencedImageNavigationSequence'],\n    '0201': ['US', '2', 'TopLeftHandCornerOfLocalizerArea'],\n    '0202': ['US', '2', 'BottomRightHandCornerOfLocalizerArea'],\n    '0207': ['SQ', '1', 'OpticalPathIdentificationSequence'],\n    '021A': ['SQ', '1', 'PlanePositionSlideSequence'],\n    '021E': ['SL', '1', 'ColumnPositionInTotalImagePixelMatrix'],\n    '021F': ['SL', '1', 'RowPositionInTotalImagePixelMatrix'],\n    '0301': ['CS', '1', 'PixelOriginInterpretation'],\n    '0302': ['UL', '1', 'NumberOfOpticalPaths'],\n    '0303': ['UL', '1', 'TotalPixelMatrixFocalPlanes']\n  },\n  '0050': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0004': ['CS', '1', 'CalibrationImage'],\n    '0010': ['SQ', '1', 'DeviceSequence'],\n    '0012': ['SQ', '1', 'ContainerComponentTypeCodeSequence'],\n    '0013': ['FD', '1', 'ContainerComponentThickness'],\n    '0014': ['DS', '1', 'DeviceLength'],\n    '0015': ['FD', '1', 'ContainerComponentWidth'],\n    '0016': ['DS', '1', 'DeviceDiameter'],\n    '0017': ['CS', '1', 'DeviceDiameterUnits'],\n    '0018': ['DS', '1', 'DeviceVolume'],\n    '0019': ['DS', '1', 'InterMarkerDistance'],\n    '001A': ['CS', '1', 'ContainerComponentMaterial'],\n    '001B': ['LO', '1', 'ContainerComponentID'],\n    '001C': ['FD', '1', 'ContainerComponentLength'],\n    '001D': ['FD', '1', 'ContainerComponentDiameter'],\n    '001E': ['LO', '1', 'ContainerComponentDescription'],\n    '0020': ['LO', '1', 'DeviceDescription'],\n    '0021': ['ST', '1', 'LongDeviceDescription']\n  },\n  '0052': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['FL', '1', 'ContrastBolusIngredientPercentByVolume'],\n    '0002': ['FD', '1', 'OCTFocalDistance'],\n    '0003': ['FD', '1', 'BeamSpotSize'],\n    '0004': ['FD', '1', 'EffectiveRefractiveIndex'],\n    '0006': ['CS', '1', 'OCTAcquisitionDomain'],\n    '0007': ['FD', '1', 'OCTOpticalCenterWavelength'],\n    '0008': ['FD', '1', 'AxialResolution'],\n    '0009': ['FD', '1', 'RangingDepth'],\n    '0011': ['FD', '1', 'ALineRate'],\n    '0012': ['US', '1', 'ALinesPerFrame'],\n    '0013': ['FD', '1', 'CatheterRotationalRate'],\n    '0014': ['FD', '1', 'ALinePixelSpacing'],\n    '0016': ['SQ', '1', 'ModeOfPercutaneousAccessSequence'],\n    '0025': ['SQ', '1', 'IntravascularOCTFrameTypeSequence'],\n    '0026': ['CS', '1', 'OCTZOffsetApplied'],\n    '0027': ['SQ', '1', 'IntravascularFrameContentSequence'],\n    '0028': ['FD', '1', 'IntravascularLongitudinalDistance'],\n    '0029': ['SQ', '1', 'IntravascularOCTFrameContentSequence'],\n    '0030': ['SS', '1', 'OCTZOffsetCorrection'],\n    '0031': ['CS', '1', 'CatheterDirectionOfRotation'],\n    '0033': ['FD', '1', 'SeamLineLocation'],\n    '0034': ['FD', '1', 'FirstALineLocation'],\n    '0036': ['US', '1', 'SeamLineIndex'],\n    '0038': ['US', '1', 'NumberOfPaddedALines'],\n    '0039': ['CS', '1', 'InterpolationType'],\n    '003A': ['CS', '1', 'RefractiveIndexApplied']\n  },\n  '0054': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '1-n', 'EnergyWindowVector'],\n    '0011': ['US', '1', 'NumberOfEnergyWindows'],\n    '0012': ['SQ', '1', 'EnergyWindowInformationSequence'],\n    '0013': ['SQ', '1', 'EnergyWindowRangeSequence'],\n    '0014': ['DS', '1', 'EnergyWindowLowerLimit'],\n    '0015': ['DS', '1', 'EnergyWindowUpperLimit'],\n    '0016': ['SQ', '1', 'RadiopharmaceuticalInformationSequence'],\n    '0017': ['IS', '1', 'ResidualSyringeCounts'],\n    '0018': ['SH', '1', 'EnergyWindowName'],\n    '0020': ['US', '1-n', 'DetectorVector'],\n    '0021': ['US', '1', 'NumberOfDetectors'],\n    '0022': ['SQ', '1', 'DetectorInformationSequence'],\n    '0030': ['US', '1-n', 'PhaseVector'],\n    '0031': ['US', '1', 'NumberOfPhases'],\n    '0032': ['SQ', '1', 'PhaseInformationSequence'],\n    '0033': ['US', '1', 'NumberOfFramesInPhase'],\n    '0036': ['IS', '1', 'PhaseDelay'],\n    '0038': ['IS', '1', 'PauseBetweenFrames'],\n    '0039': ['CS', '1', 'PhaseDescription'],\n    '0050': ['US', '1-n', 'RotationVector'],\n    '0051': ['US', '1', 'NumberOfRotations'],\n    '0052': ['SQ', '1', 'RotationInformationSequence'],\n    '0053': ['US', '1', 'NumberOfFramesInRotation'],\n    '0060': ['US', '1-n', 'RRIntervalVector'],\n    '0061': ['US', '1', 'NumberOfRRIntervals'],\n    '0062': ['SQ', '1', 'GatedInformationSequence'],\n    '0063': ['SQ', '1', 'DataInformationSequence'],\n    '0070': ['US', '1-n', 'TimeSlotVector'],\n    '0071': ['US', '1', 'NumberOfTimeSlots'],\n    '0072': ['SQ', '1', 'TimeSlotInformationSequence'],\n    '0073': ['DS', '1', 'TimeSlotTime'],\n    '0080': ['US', '1-n', 'SliceVector'],\n    '0081': ['US', '1', 'NumberOfSlices'],\n    '0090': ['US', '1-n', 'AngularViewVector'],\n    '0100': ['US', '1-n', 'TimeSliceVector'],\n    '0101': ['US', '1', 'NumberOfTimeSlices'],\n    '0200': ['DS', '1', 'StartAngle'],\n    '0202': ['CS', '1', 'TypeOfDetectorMotion'],\n    '0210': ['IS', '1-n', 'TriggerVector'],\n    '0211': ['US', '1', 'NumberOfTriggersInPhase'],\n    '0220': ['SQ', '1', 'ViewCodeSequence'],\n    '0222': ['SQ', '1', 'ViewModifierCodeSequence'],\n    '0300': ['SQ', '1', 'RadionuclideCodeSequence'],\n    '0302': ['SQ', '1', 'AdministrationRouteCodeSequence'],\n    '0304': ['SQ', '1', 'RadiopharmaceuticalCodeSequence'],\n    '0306': ['SQ', '1', 'CalibrationDataSequence'],\n    '0308': ['US', '1', 'EnergyWindowNumber'],\n    '0400': ['SH', '1', 'ImageID'],\n    '0410': ['SQ', '1', 'PatientOrientationCodeSequence'],\n    '0412': ['SQ', '1', 'PatientOrientationModifierCodeSequence'],\n    '0414': ['SQ', '1', 'PatientGantryRelationshipCodeSequence'],\n    '0500': ['CS', '1', 'SliceProgressionDirection'],\n    '0501': ['CS', '1', 'ScanProgressionDirection'],\n    '1000': ['CS', '2', 'SeriesType'],\n    '1001': ['CS', '1', 'Units'],\n    '1002': ['CS', '1', 'CountsSource'],\n    '1004': ['CS', '1', 'ReprojectionMethod'],\n    '1006': ['CS', '1', 'SUVType'],\n    '1100': ['CS', '1', 'RandomsCorrectionMethod'],\n    '1101': ['LO', '1', 'AttenuationCorrectionMethod'],\n    '1102': ['CS', '1', 'DecayCorrection'],\n    '1103': ['LO', '1', 'ReconstructionMethod'],\n    '1104': ['LO', '1', 'DetectorLinesOfResponseUsed'],\n    '1105': ['LO', '1', 'ScatterCorrectionMethod'],\n    '1200': ['DS', '1', 'AxialAcceptance'],\n    '1201': ['IS', '2', 'AxialMash'],\n    '1202': ['IS', '1', 'TransverseMash'],\n    '1203': ['DS', '2', 'DetectorElementSize'],\n    '1210': ['DS', '1', 'CoincidenceWindowWidth'],\n    '1220': ['CS', '1-n', 'SecondaryCountsType'],\n    '1300': ['DS', '1', 'FrameReferenceTime'],\n    '1310': ['IS', '1', 'PrimaryPromptsCountsAccumulated'],\n    '1311': ['IS', '1-n', 'SecondaryCountsAccumulated'],\n    '1320': ['DS', '1', 'SliceSensitivityFactor'],\n    '1321': ['DS', '1', 'DecayFactor'],\n    '1322': ['DS', '1', 'DoseCalibrationFactor'],\n    '1323': ['DS', '1', 'ScatterFractionFactor'],\n    '1324': ['DS', '1', 'DeadTimeFactor'],\n    '1330': ['US', '1', 'ImageIndex'],\n    '1400': ['CS', '1-n', 'CountsIncluded'],\n    '1401': ['CS', '1', 'DeadTimeCorrectionFlag']\n  },\n  '0060': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '3000': ['SQ', '1', 'HistogramSequence'],\n    '3002': ['US', '1', 'HistogramNumberOfBins'],\n    '3004': ['xs', '1', 'HistogramFirstBinValue'],\n    '3006': ['xs', '1', 'HistogramLastBinValue'],\n    '3008': ['US', '1', 'HistogramBinWidth'],\n    '3010': ['LO', '1', 'HistogramExplanation'],\n    '3020': ['UL', '1-n', 'HistogramData']\n  },\n  '0062': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'SegmentationType'],\n    '0002': ['SQ', '1', 'SegmentSequence'],\n    '0003': ['SQ', '1', 'SegmentedPropertyCategoryCodeSequence'],\n    '0004': ['US', '1', 'SegmentNumber'],\n    '0005': ['LO', '1', 'SegmentLabel'],\n    '0006': ['ST', '1', 'SegmentDescription'],\n    '0007': ['SQ', '1', 'SegmentationAlgorithmIdentificationSequence'],\n    '0008': ['CS', '1', 'SegmentAlgorithmType'],\n    '0009': ['LO', '1-n', 'SegmentAlgorithmName'],\n    '000A': ['SQ', '1', 'SegmentIdentificationSequence'],\n    '000B': ['US', '1-n', 'ReferencedSegmentNumber'],\n    '000C': ['US', '1', 'RecommendedDisplayGrayscaleValue'],\n    '000D': ['US', '3', 'RecommendedDisplayCIELabValue'],\n    '000E': ['US', '1', 'MaximumFractionalValue'],\n    '000F': ['SQ', '1', 'SegmentedPropertyTypeCodeSequence'],\n    '0010': ['CS', '1', 'SegmentationFractionalType'],\n    '0011': ['SQ', '1', 'SegmentedPropertyTypeModifierCodeSequence'],\n    '0012': ['SQ', '1', 'UsedSegmentsSequence'],\n    '0013': ['CS', '1', 'SegmentsOverlap'],\n    '0020': ['UT', '1', 'TrackingID'],\n    '0021': ['UI', '1', 'TrackingUID']\n  },\n  '0064': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SQ', '1', 'DeformableRegistrationSequence'],\n    '0003': ['UI', '1', 'SourceFrameOfReferenceUID'],\n    '0005': ['SQ', '1', 'DeformableRegistrationGridSequence'],\n    '0007': ['UL', '3', 'GridDimensions'],\n    '0008': ['FD', '3', 'GridResolution'],\n    '0009': ['OF', '1', 'VectorGridData'],\n    '000F': ['SQ', '1', 'PreDeformationMatrixRegistrationSequence'],\n    '0010': ['SQ', '1', 'PostDeformationMatrixRegistrationSequence']\n  },\n  '0066': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['UL', '1', 'NumberOfSurfaces'],\n    '0002': ['SQ', '1', 'SurfaceSequence'],\n    '0003': ['UL', '1', 'SurfaceNumber'],\n    '0004': ['LT', '1', 'SurfaceComments'],\n    '0009': ['CS', '1', 'SurfaceProcessing'],\n    '000A': ['FL', '1', 'SurfaceProcessingRatio'],\n    '000B': ['LO', '1', 'SurfaceProcessingDescription'],\n    '000C': ['FL', '1', 'RecommendedPresentationOpacity'],\n    '000D': ['CS', '1', 'RecommendedPresentationType'],\n    '000E': ['CS', '1', 'FiniteVolume'],\n    '0010': ['CS', '1', 'Manifold'],\n    '0011': ['SQ', '1', 'SurfacePointsSequence'],\n    '0012': ['SQ', '1', 'SurfacePointsNormalsSequence'],\n    '0013': ['SQ', '1', 'SurfaceMeshPrimitivesSequence'],\n    '0015': ['UL', '1', 'NumberOfSurfacePoints'],\n    '0016': ['OF', '1', 'PointCoordinatesData'],\n    '0017': ['FL', '3', 'PointPositionAccuracy'],\n    '0018': ['FL', '1', 'MeanPointDistance'],\n    '0019': ['FL', '1', 'MaximumPointDistance'],\n    '001A': ['FL', '6', 'PointsBoundingBoxCoordinates'],\n    '001B': ['FL', '3', 'AxisOfRotation'],\n    '001C': ['FL', '3', 'CenterOfRotation'],\n    '001E': ['UL', '1', 'NumberOfVectors'],\n    '001F': ['US', '1', 'VectorDimensionality'],\n    '0020': ['FL', '1-n', 'VectorAccuracy'],\n    '0021': ['OF', '1', 'VectorCoordinateData'],\n    '0022': ['OD', '1', 'DoublePointCoordinatesData'],\n    '0023': ['OW', '1', 'TrianglePointIndexList'],\n    '0024': ['OW', '1', 'EdgePointIndexList'],\n    '0025': ['OW', '1', 'VertexPointIndexList'],\n    '0026': ['SQ', '1', 'TriangleStripSequence'],\n    '0027': ['SQ', '1', 'TriangleFanSequence'],\n    '0028': ['SQ', '1', 'LineSequence'],\n    '0029': ['OW', '1', 'PrimitivePointIndexList'],\n    '002A': ['UL', '1', 'SurfaceCount'],\n    '002B': ['SQ', '1', 'ReferencedSurfaceSequence'],\n    '002C': ['UL', '1', 'ReferencedSurfaceNumber'],\n    '002D': ['SQ', '1', 'SegmentSurfaceGenerationAlgorithmIdentificationSequence'],\n    '002E': ['SQ', '1', 'SegmentSurfaceSourceInstanceSequence'],\n    '002F': ['SQ', '1', 'AlgorithmFamilyCodeSequence'],\n    '0030': ['SQ', '1', 'AlgorithmNameCodeSequence'],\n    '0031': ['LO', '1', 'AlgorithmVersion'],\n    '0032': ['LT', '1', 'AlgorithmParameters'],\n    '0034': ['SQ', '1', 'FacetSequence'],\n    '0035': ['SQ', '1', 'SurfaceProcessingAlgorithmIdentificationSequence'],\n    '0036': ['LO', '1', 'AlgorithmName'],\n    '0037': ['FL', '1', 'RecommendedPointRadius'],\n    '0038': ['FL', '1', 'RecommendedLineThickness'],\n    '0040': ['OL', '1', 'LongPrimitivePointIndexList'],\n    '0041': ['OL', '1', 'LongTrianglePointIndexList'],\n    '0042': ['OL', '1', 'LongEdgePointIndexList'],\n    '0043': ['OL', '1', 'LongVertexPointIndexList'],\n    '0101': ['SQ', '1', 'TrackSetSequence'],\n    '0102': ['SQ', '1', 'TrackSequence'],\n    '0103': ['OW', '1', 'RecommendedDisplayCIELabValueList'],\n    '0104': ['SQ', '1', 'TrackingAlgorithmIdentificationSequence'],\n    '0105': ['UL', '1', 'TrackSetNumber'],\n    '0106': ['LO', '1', 'TrackSetLabel'],\n    '0107': ['UT', '1', 'TrackSetDescription'],\n    '0108': ['SQ', '1', 'TrackSetAnatomicalTypeCodeSequence'],\n    '0121': ['SQ', '1', 'MeasurementsSequence'],\n    '0124': ['SQ', '1', 'TrackSetStatisticsSequence'],\n    '0125': ['OF', '1', 'FloatingPointValues'],\n    '0129': ['OL', '1', 'TrackPointIndexList'],\n    '0130': ['SQ', '1', 'TrackStatisticsSequence'],\n    '0132': ['SQ', '1', 'MeasurementValuesSequence'],\n    '0133': ['SQ', '1', 'DiffusionAcquisitionCodeSequence'],\n    '0134': ['SQ', '1', 'DiffusionModelCodeSequence']\n  },\n  '0068': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '6210': ['LO', '1', 'ImplantSize'],\n    '6221': ['LO', '1', 'ImplantTemplateVersion'],\n    '6222': ['SQ', '1', 'ReplacedImplantTemplateSequence'],\n    '6223': ['CS', '1', 'ImplantType'],\n    '6224': ['SQ', '1', 'DerivationImplantTemplateSequence'],\n    '6225': ['SQ', '1', 'OriginalImplantTemplateSequence'],\n    '6226': ['DT', '1', 'EffectiveDateTime'],\n    '6230': ['SQ', '1', 'ImplantTargetAnatomySequence'],\n    '6260': ['SQ', '1', 'InformationFromManufacturerSequence'],\n    '6265': ['SQ', '1', 'NotificationFromManufacturerSequence'],\n    '6270': ['DT', '1', 'InformationIssueDateTime'],\n    '6280': ['ST', '1', 'InformationSummary'],\n    '62A0': ['SQ', '1', 'ImplantRegulatoryDisapprovalCodeSequence'],\n    '62A5': ['FD', '1', 'OverallTemplateSpatialTolerance'],\n    '62C0': ['SQ', '1', 'HPGLDocumentSequence'],\n    '62D0': ['US', '1', 'HPGLDocumentID'],\n    '62D5': ['LO', '1', 'HPGLDocumentLabel'],\n    '62E0': ['SQ', '1', 'ViewOrientationCodeSequence'],\n    '62F0': ['SQ', '1', 'ViewOrientationModifierCodeSequence'],\n    '62F2': ['FD', '1', 'HPGLDocumentScaling'],\n    '6300': ['OB', '1', 'HPGLDocument'],\n    '6310': ['US', '1', 'HPGLContourPenNumber'],\n    '6320': ['SQ', '1', 'HPGLPenSequence'],\n    '6330': ['US', '1', 'HPGLPenNumber'],\n    '6340': ['LO', '1', 'HPGLPenLabel'],\n    '6345': ['ST', '1', 'HPGLPenDescription'],\n    '6346': ['FD', '2', 'RecommendedRotationPoint'],\n    '6347': ['FD', '4', 'BoundingRectangle'],\n    '6350': ['US', '1-n', 'ImplantTemplate3DModelSurfaceNumber'],\n    '6360': ['SQ', '1', 'SurfaceModelDescriptionSequence'],\n    '6380': ['LO', '1', 'SurfaceModelLabel'],\n    '6390': ['FD', '1', 'SurfaceModelScalingFactor'],\n    '63A0': ['SQ', '1', 'MaterialsCodeSequence'],\n    '63A4': ['SQ', '1', 'CoatingMaterialsCodeSequence'],\n    '63A8': ['SQ', '1', 'ImplantTypeCodeSequence'],\n    '63AC': ['SQ', '1', 'FixationMethodCodeSequence'],\n    '63B0': ['SQ', '1', 'MatingFeatureSetsSequence'],\n    '63C0': ['US', '1', 'MatingFeatureSetID'],\n    '63D0': ['LO', '1', 'MatingFeatureSetLabel'],\n    '63E0': ['SQ', '1', 'MatingFeatureSequence'],\n    '63F0': ['US', '1', 'MatingFeatureID'],\n    '6400': ['SQ', '1', 'MatingFeatureDegreeOfFreedomSequence'],\n    '6410': ['US', '1', 'DegreeOfFreedomID'],\n    '6420': ['CS', '1', 'DegreeOfFreedomType'],\n    '6430': ['SQ', '1', 'TwoDMatingFeatureCoordinatesSequence'],\n    '6440': ['US', '1', 'ReferencedHPGLDocumentID'],\n    '6450': ['FD', '2', 'TwoDMatingPoint'],\n    '6460': ['FD', '4', 'TwoDMatingAxes'],\n    '6470': ['SQ', '1', 'TwoDDegreeOfFreedomSequence'],\n    '6490': ['FD', '3', 'ThreeDDegreeOfFreedomAxis'],\n    '64A0': ['FD', '2', 'RangeOfFreedom'],\n    '64C0': ['FD', '3', 'ThreeDMatingPoint'],\n    '64D0': ['FD', '9', 'ThreeDMatingAxes'],\n    '64F0': ['FD', '3', 'TwoDDegreeOfFreedomAxis'],\n    '6500': ['SQ', '1', 'PlanningLandmarkPointSequence'],\n    '6510': ['SQ', '1', 'PlanningLandmarkLineSequence'],\n    '6520': ['SQ', '1', 'PlanningLandmarkPlaneSequence'],\n    '6530': ['US', '1', 'PlanningLandmarkID'],\n    '6540': ['LO', '1', 'PlanningLandmarkDescription'],\n    '6545': ['SQ', '1', 'PlanningLandmarkIdentificationCodeSequence'],\n    '6550': ['SQ', '1', 'TwoDPointCoordinatesSequence'],\n    '6560': ['FD', '2', 'TwoDPointCoordinates'],\n    '6590': ['FD', '3', 'ThreeDPointCoordinates'],\n    '65A0': ['SQ', '1', 'TwoDLineCoordinatesSequence'],\n    '65B0': ['FD', '4', 'TwoDLineCoordinates'],\n    '65D0': ['FD', '6', 'ThreeDLineCoordinates'],\n    '65E0': ['SQ', '1', 'TwoDPlaneCoordinatesSequence'],\n    '65F0': ['FD', '4', 'TwoDPlaneIntersection'],\n    '6610': ['FD', '3', 'ThreeDPlaneOrigin'],\n    '6620': ['FD', '3', 'ThreeDPlaneNormal'],\n    '7001': ['CS', '1', 'ModelModification'],\n    '7002': ['CS', '1', 'ModelMirroring'],\n    '7003': ['SQ', '1', 'ModelUsageCodeSequence'],\n    '7004': ['UI', '1', 'ModelGroupUID'],\n    '7005': ['UR', '1', 'RelativeURIReferenceWithinEncapsulatedDocument']\n  },\n  '006A': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'AnnotationCoordinateType'],\n    '0002': ['SQ', '1', 'AnnotationGroupSequence'],\n    '0003': ['UI', '1', 'AnnotationGroupUID'],\n    '0005': ['LO', '1', 'AnnotationGroupLabel'],\n    '0006': ['UT', '1', 'AnnotationGroupDescription'],\n    '0007': ['CS', '1', 'AnnotationGroupGenerationType'],\n    '0008': ['SQ', '1', 'AnnotationGroupAlgorithmIdentificationSequence'],\n    '0009': ['SQ', '1', 'AnnotationPropertyCategoryCodeSequence'],\n    '000A': ['SQ', '1', 'AnnotationPropertyTypeCodeSequence'],\n    '000B': ['SQ', '1', 'AnnotationPropertyTypeModifierCodeSequence'],\n    '000C': ['UL', '1', 'NumberOfAnnotations'],\n    '000D': ['CS', '1', 'AnnotationAppliesToAllOpticalPaths'],\n    '000E': ['SH', '1-n', 'ReferencedOpticalPathIdentifier'],\n    '000F': ['CS', '1', 'AnnotationAppliesToAllZPlanes'],\n    '0010': ['FD', '1-n', 'CommonZCoordinateValue'],\n    '0011': ['OL', '1', 'AnnotationIndexList']\n  },\n  '0070': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'GraphicAnnotationSequence'],\n    '0002': ['CS', '1', 'GraphicLayer'],\n    '0003': ['CS', '1', 'BoundingBoxAnnotationUnits'],\n    '0004': ['CS', '1', 'AnchorPointAnnotationUnits'],\n    '0005': ['CS', '1', 'GraphicAnnotationUnits'],\n    '0006': ['ST', '1', 'UnformattedTextValue'],\n    '0008': ['SQ', '1', 'TextObjectSequence'],\n    '0009': ['SQ', '1', 'GraphicObjectSequence'],\n    '0010': ['FL', '2', 'BoundingBoxTopLeftHandCorner'],\n    '0011': ['FL', '2', 'BoundingBoxBottomRightHandCorner'],\n    '0012': ['CS', '1', 'BoundingBoxTextHorizontalJustification'],\n    '0014': ['FL', '2', 'AnchorPoint'],\n    '0015': ['CS', '1', 'AnchorPointVisibility'],\n    '0020': ['US', '1', 'GraphicDimensions'],\n    '0021': ['US', '1', 'NumberOfGraphicPoints'],\n    '0022': ['FL', '2-n', 'GraphicData'],\n    '0023': ['CS', '1', 'GraphicType'],\n    '0024': ['CS', '1', 'GraphicFilled'],\n    '0040': ['IS', '1', 'ImageRotationRetired'],\n    '0041': ['CS', '1', 'ImageHorizontalFlip'],\n    '0042': ['US', '1', 'ImageRotation'],\n    '0050': ['US', '2', 'DisplayedAreaTopLeftHandCornerTrial'],\n    '0051': ['US', '2', 'DisplayedAreaBottomRightHandCornerTrial'],\n    '0052': ['SL', '2', 'DisplayedAreaTopLeftHandCorner'],\n    '0053': ['SL', '2', 'DisplayedAreaBottomRightHandCorner'],\n    '005A': ['SQ', '1', 'DisplayedAreaSelectionSequence'],\n    '0060': ['SQ', '1', 'GraphicLayerSequence'],\n    '0062': ['IS', '1', 'GraphicLayerOrder'],\n    '0066': ['US', '1', 'GraphicLayerRecommendedDisplayGrayscaleValue'],\n    '0067': ['US', '3', 'GraphicLayerRecommendedDisplayRGBValue'],\n    '0068': ['LO', '1', 'GraphicLayerDescription'],\n    '0080': ['CS', '1', 'ContentLabel'],\n    '0081': ['LO', '1', 'ContentDescription'],\n    '0082': ['DA', '1', 'PresentationCreationDate'],\n    '0083': ['TM', '1', 'PresentationCreationTime'],\n    '0084': ['PN', '1', 'ContentCreatorName'],\n    '0086': ['SQ', '1', 'ContentCreatorIdentificationCodeSequence'],\n    '0087': ['SQ', '1', 'AlternateContentDescriptionSequence'],\n    '0100': ['CS', '1', 'PresentationSizeMode'],\n    '0101': ['DS', '2', 'PresentationPixelSpacing'],\n    '0102': ['IS', '2', 'PresentationPixelAspectRatio'],\n    '0103': ['FL', '1', 'PresentationPixelMagnificationRatio'],\n    '0207': ['LO', '1', 'GraphicGroupLabel'],\n    '0208': ['ST', '1', 'GraphicGroupDescription'],\n    '0209': ['SQ', '1', 'CompoundGraphicSequence'],\n    '0226': ['UL', '1', 'CompoundGraphicInstanceID'],\n    '0227': ['LO', '1', 'FontName'],\n    '0228': ['CS', '1', 'FontNameType'],\n    '0229': ['LO', '1', 'CSSFontName'],\n    '0230': ['FD', '1', 'RotationAngle'],\n    '0231': ['SQ', '1', 'TextStyleSequence'],\n    '0232': ['SQ', '1', 'LineStyleSequence'],\n    '0233': ['SQ', '1', 'FillStyleSequence'],\n    '0234': ['SQ', '1', 'GraphicGroupSequence'],\n    '0241': ['US', '3', 'TextColorCIELabValue'],\n    '0242': ['CS', '1', 'HorizontalAlignment'],\n    '0243': ['CS', '1', 'VerticalAlignment'],\n    '0244': ['CS', '1', 'ShadowStyle'],\n    '0245': ['FL', '1', 'ShadowOffsetX'],\n    '0246': ['FL', '1', 'ShadowOffsetY'],\n    '0247': ['US', '3', 'ShadowColorCIELabValue'],\n    '0248': ['CS', '1', 'Underlined'],\n    '0249': ['CS', '1', 'Bold'],\n    '0250': ['CS', '1', 'Italic'],\n    '0251': ['US', '3', 'PatternOnColorCIELabValue'],\n    '0252': ['US', '3', 'PatternOffColorCIELabValue'],\n    '0253': ['FL', '1', 'LineThickness'],\n    '0254': ['CS', '1', 'LineDashingStyle'],\n    '0255': ['UL', '1', 'LinePattern'],\n    '0256': ['OB', '1', 'FillPattern'],\n    '0257': ['CS', '1', 'FillMode'],\n    '0258': ['FL', '1', 'ShadowOpacity'],\n    '0261': ['FL', '1', 'GapLength'],\n    '0262': ['FL', '1', 'DiameterOfVisibility'],\n    '0273': ['FL', '2', 'RotationPoint'],\n    '0274': ['CS', '1', 'TickAlignment'],\n    '0278': ['CS', '1', 'ShowTickLabel'],\n    '0279': ['CS', '1', 'TickLabelAlignment'],\n    '0282': ['CS', '1', 'CompoundGraphicUnits'],\n    '0284': ['FL', '1', 'PatternOnOpacity'],\n    '0285': ['FL', '1', 'PatternOffOpacity'],\n    '0287': ['SQ', '1', 'MajorTicksSequence'],\n    '0288': ['FL', '1', 'TickPosition'],\n    '0289': ['SH', '1', 'TickLabel'],\n    '0294': ['CS', '1', 'CompoundGraphicType'],\n    '0295': ['UL', '1', 'GraphicGroupID'],\n    '0306': ['CS', '1', 'ShapeType'],\n    '0308': ['SQ', '1', 'RegistrationSequence'],\n    '0309': ['SQ', '1', 'MatrixRegistrationSequence'],\n    '030A': ['SQ', '1', 'MatrixSequence'],\n    '030B': ['FD', '16', 'FrameOfReferenceToDisplayedCoordinateSystemTransformationMatrix'],\n    '030C': ['CS', '1', 'FrameOfReferenceTransformationMatrixType'],\n    '030D': ['SQ', '1', 'RegistrationTypeCodeSequence'],\n    '030F': ['ST', '1', 'FiducialDescription'],\n    '0310': ['SH', '1', 'FiducialIdentifier'],\n    '0311': ['SQ', '1', 'FiducialIdentifierCodeSequence'],\n    '0312': ['FD', '1', 'ContourUncertaintyRadius'],\n    '0314': ['SQ', '1', 'UsedFiducialsSequence'],\n    '0318': ['SQ', '1', 'GraphicCoordinatesDataSequence'],\n    '031A': ['UI', '1', 'FiducialUID'],\n    '031B': ['UI', '1', 'ReferencedFiducialUID'],\n    '031C': ['SQ', '1', 'FiducialSetSequence'],\n    '031E': ['SQ', '1', 'FiducialSequence'],\n    '031F': ['SQ', '1', 'FiducialsPropertyCategoryCodeSequence'],\n    '0401': ['US', '3', 'GraphicLayerRecommendedDisplayCIELabValue'],\n    '0402': ['SQ', '1', 'BlendingSequence'],\n    '0403': ['FL', '1', 'RelativeOpacity'],\n    '0404': ['SQ', '1', 'ReferencedSpatialRegistrationSequence'],\n    '0405': ['CS', '1', 'BlendingPosition'],\n    '1101': ['UI', '1', 'PresentationDisplayCollectionUID'],\n    '1102': ['UI', '1', 'PresentationSequenceCollectionUID'],\n    '1103': ['US', '1', 'PresentationSequencePositionIndex'],\n    '1104': ['SQ', '1', 'RenderedImageReferenceSequence'],\n    '1201': ['SQ', '1', 'VolumetricPresentationStateInputSequence'],\n    '1202': ['CS', '1', 'PresentationInputType'],\n    '1203': ['US', '1', 'InputSequencePositionIndex'],\n    '1204': ['CS', '1', 'Crop'],\n    '1205': ['US', '1-n', 'CroppingSpecificationIndex'],\n    '1206': ['CS', '1', 'CompositingMethod'],\n    '1207': ['US', '1', 'VolumetricPresentationInputNumber'],\n    '1208': ['CS', '1', 'ImageVolumeGeometry'],\n    '1209': ['UI', '1', 'VolumetricPresentationInputSetUID'],\n    '120A': ['SQ', '1', 'VolumetricPresentationInputSetSequence'],\n    '120B': ['CS', '1', 'GlobalCrop'],\n    '120C': ['US', '1-n', 'GlobalCroppingSpecificationIndex'],\n    '120D': ['CS', '1', 'RenderingMethod'],\n    '1301': ['SQ', '1', 'VolumeCroppingSequence'],\n    '1302': ['CS', '1', 'VolumeCroppingMethod'],\n    '1303': ['FD', '6', 'BoundingBoxCrop'],\n    '1304': ['SQ', '1', 'ObliqueCroppingPlaneSequence'],\n    '1305': ['FD', '4', 'Plane'],\n    '1306': ['FD', '3', 'PlaneNormal'],\n    '1309': ['US', '1', 'CroppingSpecificationNumber'],\n    '1501': ['CS', '1', 'MultiPlanarReconstructionStyle'],\n    '1502': ['CS', '1', 'MPRThicknessType'],\n    '1503': ['FD', '1', 'MPRSlabThickness'],\n    '1505': ['FD', '3', 'MPRTopLeftHandCorner'],\n    '1507': ['FD', '3', 'MPRViewWidthDirection'],\n    '1508': ['FD', '1', 'MPRViewWidth'],\n    '150C': ['UL', '1', 'NumberOfVolumetricCurvePoints'],\n    '150D': ['OD', '1', 'VolumetricCurvePoints'],\n    '1511': ['FD', '3', 'MPRViewHeightDirection'],\n    '1512': ['FD', '1', 'MPRViewHeight'],\n    '1602': ['CS', '1', 'RenderProjection'],\n    '1603': ['FD', '3', 'ViewpointPosition'],\n    '1604': ['FD', '3', 'ViewpointLookAtPoint'],\n    '1605': ['FD', '3', 'ViewpointUpDirection'],\n    '1606': ['FD', '6', 'RenderFieldOfView'],\n    '1607': ['FD', '1', 'SamplingStepSize'],\n    '1701': ['CS', '1', 'ShadingStyle'],\n    '1702': ['FD', '1', 'AmbientReflectionIntensity'],\n    '1703': ['FD', '3', 'LightDirection'],\n    '1704': ['FD', '1', 'DiffuseReflectionIntensity'],\n    '1705': ['FD', '1', 'SpecularReflectionIntensity'],\n    '1706': ['FD', '1', 'Shininess'],\n    '1801': ['SQ', '1', 'PresentationStateClassificationComponentSequence'],\n    '1802': ['CS', '1', 'ComponentType'],\n    '1803': ['SQ', '1', 'ComponentInputSequence'],\n    '1804': ['US', '1', 'VolumetricPresentationInputIndex'],\n    '1805': ['SQ', '1', 'PresentationStateCompositorComponentSequence'],\n    '1806': ['SQ', '1', 'WeightingTransferFunctionSequence'],\n    '1807': ['US', '3', 'WeightingLookupTableDescriptor'],\n    '1808': ['OB', '1', 'WeightingLookupTableData'],\n    '1901': ['SQ', '1', 'VolumetricAnnotationSequence'],\n    '1903': ['SQ', '1', 'ReferencedStructuredContextSequence'],\n    '1904': ['UI', '1', 'ReferencedContentItem'],\n    '1905': ['SQ', '1', 'VolumetricPresentationInputAnnotationSequence'],\n    '1907': ['CS', '1', 'AnnotationClipping'],\n    '1A01': ['CS', '1', 'PresentationAnimationStyle'],\n    '1A03': ['FD', '1', 'RecommendedAnimationRate'],\n    '1A04': ['SQ', '1', 'AnimationCurveSequence'],\n    '1A05': ['FD', '1', 'AnimationStepSize'],\n    '1A06': ['FD', '1', 'SwivelRange'],\n    '1A07': ['OD', '1', 'VolumetricCurveUpDirections'],\n    '1A08': ['SQ', '1', 'VolumeStreamSequence'],\n    '1A09': ['LO', '1', 'RGBATransferFunctionDescription'],\n    '1B01': ['SQ', '1', 'AdvancedBlendingSequence'],\n    '1B02': ['US', '1', 'BlendingInputNumber'],\n    '1B03': ['SQ', '1', 'BlendingDisplayInputSequence'],\n    '1B04': ['SQ', '1', 'BlendingDisplaySequence'],\n    '1B06': ['CS', '1', 'BlendingMode'],\n    '1B07': ['CS', '1', 'TimeSeriesBlending'],\n    '1B08': ['CS', '1', 'GeometryForDisplay'],\n    '1B11': ['SQ', '1', 'ThresholdSequence'],\n    '1B12': ['SQ', '1', 'ThresholdValueSequence'],\n    '1B13': ['CS', '1', 'ThresholdType'],\n    '1B14': ['FD', '1', 'ThresholdValue']\n  },\n  '0072': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SH', '1', 'HangingProtocolName'],\n    '0004': ['LO', '1', 'HangingProtocolDescription'],\n    '0006': ['CS', '1', 'HangingProtocolLevel'],\n    '0008': ['LO', '1', 'HangingProtocolCreator'],\n    '000A': ['DT', '1', 'HangingProtocolCreationDateTime'],\n    '000C': ['SQ', '1', 'HangingProtocolDefinitionSequence'],\n    '000E': ['SQ', '1', 'HangingProtocolUserIdentificationCodeSequence'],\n    '0010': ['LO', '1', 'HangingProtocolUserGroupName'],\n    '0012': ['SQ', '1', 'SourceHangingProtocolSequence'],\n    '0014': ['US', '1', 'NumberOfPriorsReferenced'],\n    '0020': ['SQ', '1', 'ImageSetsSequence'],\n    '0022': ['SQ', '1', 'ImageSetSelectorSequence'],\n    '0024': ['CS', '1', 'ImageSetSelectorUsageFlag'],\n    '0026': ['AT', '1', 'SelectorAttribute'],\n    '0028': ['US', '1', 'SelectorValueNumber'],\n    '0030': ['SQ', '1', 'TimeBasedImageSetsSequence'],\n    '0032': ['US', '1', 'ImageSetNumber'],\n    '0034': ['CS', '1', 'ImageSetSelectorCategory'],\n    '0038': ['US', '2', 'RelativeTime'],\n    '003A': ['CS', '1', 'RelativeTimeUnits'],\n    '003C': ['SS', '2', 'AbstractPriorValue'],\n    '003E': ['SQ', '1', 'AbstractPriorCodeSequence'],\n    '0040': ['LO', '1', 'ImageSetLabel'],\n    '0050': ['CS', '1', 'SelectorAttributeVR'],\n    '0052': ['AT', '1-n', 'SelectorSequencePointer'],\n    '0054': ['LO', '1-n', 'SelectorSequencePointerPrivateCreator'],\n    '0056': ['LO', '1', 'SelectorAttributePrivateCreator'],\n    '005E': ['AE', '1-n', 'SelectorAEValue'],\n    '005F': ['AS', '1-n', 'SelectorASValue'],\n    '0060': ['AT', '1-n', 'SelectorATValue'],\n    '0061': ['DA', '1-n', 'SelectorDAValue'],\n    '0062': ['CS', '1-n', 'SelectorCSValue'],\n    '0063': ['DT', '1-n', 'SelectorDTValue'],\n    '0064': ['IS', '1-n', 'SelectorISValue'],\n    '0065': ['OB', '1', 'SelectorOBValue'],\n    '0066': ['LO', '1-n', 'SelectorLOValue'],\n    '0067': ['OF', '1', 'SelectorOFValue'],\n    '0068': ['LT', '1', 'SelectorLTValue'],\n    '0069': ['OW', '1', 'SelectorOWValue'],\n    '006A': ['PN', '1-n', 'SelectorPNValue'],\n    '006B': ['TM', '1-n', 'SelectorTMValue'],\n    '006C': ['SH', '1-n', 'SelectorSHValue'],\n    '006D': ['UN', '1', 'SelectorUNValue'],\n    '006E': ['ST', '1', 'SelectorSTValue'],\n    '006F': ['UC', '1-n', 'SelectorUCValue'],\n    '0070': ['UT', '1', 'SelectorUTValue'],\n    '0071': ['UR', '1', 'SelectorURValue'],\n    '0072': ['DS', '1-n', 'SelectorDSValue'],\n    '0073': ['OD', '1', 'SelectorODValue'],\n    '0074': ['FD', '1-n', 'SelectorFDValue'],\n    '0075': ['OL', '1', 'SelectorOLValue'],\n    '0076': ['FL', '1-n', 'SelectorFLValue'],\n    '0078': ['UL', '1-n', 'SelectorULValue'],\n    '007A': ['US', '1-n', 'SelectorUSValue'],\n    '007C': ['SL', '1-n', 'SelectorSLValue'],\n    '007E': ['SS', '1-n', 'SelectorSSValue'],\n    '007F': ['UI', '1-n', 'SelectorUIValue'],\n    '0080': ['SQ', '1', 'SelectorCodeSequenceValue'],\n    '0081': ['OV', '1', 'SelectorOVValue'],\n    '0082': ['SV', '1-n', 'SelectorSVValue'],\n    '0083': ['UV', '1-n', 'SelectorUVValue'],\n    '0100': ['US', '1', 'NumberOfScreens'],\n    '0102': ['SQ', '1', 'NominalScreenDefinitionSequence'],\n    '0104': ['US', '1', 'NumberOfVerticalPixels'],\n    '0106': ['US', '1', 'NumberOfHorizontalPixels'],\n    '0108': ['FD', '4', 'DisplayEnvironmentSpatialPosition'],\n    '010A': ['US', '1', 'ScreenMinimumGrayscaleBitDepth'],\n    '010C': ['US', '1', 'ScreenMinimumColorBitDepth'],\n    '010E': ['US', '1', 'ApplicationMaximumRepaintTime'],\n    '0200': ['SQ', '1', 'DisplaySetsSequence'],\n    '0202': ['US', '1', 'DisplaySetNumber'],\n    '0203': ['LO', '1', 'DisplaySetLabel'],\n    '0204': ['US', '1', 'DisplaySetPresentationGroup'],\n    '0206': ['LO', '1', 'DisplaySetPresentationGroupDescription'],\n    '0208': ['CS', '1', 'PartialDataDisplayHandling'],\n    '0210': ['SQ', '1', 'SynchronizedScrollingSequence'],\n    '0212': ['US', '2-n', 'DisplaySetScrollingGroup'],\n    '0214': ['SQ', '1', 'NavigationIndicatorSequence'],\n    '0216': ['US', '1', 'NavigationDisplaySet'],\n    '0218': ['US', '1-n', 'ReferenceDisplaySets'],\n    '0300': ['SQ', '1', 'ImageBoxesSequence'],\n    '0302': ['US', '1', 'ImageBoxNumber'],\n    '0304': ['CS', '1', 'ImageBoxLayoutType'],\n    '0306': ['US', '1', 'ImageBoxTileHorizontalDimension'],\n    '0308': ['US', '1', 'ImageBoxTileVerticalDimension'],\n    '0310': ['CS', '1', 'ImageBoxScrollDirection'],\n    '0312': ['CS', '1', 'ImageBoxSmallScrollType'],\n    '0314': ['US', '1', 'ImageBoxSmallScrollAmount'],\n    '0316': ['CS', '1', 'ImageBoxLargeScrollType'],\n    '0318': ['US', '1', 'ImageBoxLargeScrollAmount'],\n    '0320': ['US', '1', 'ImageBoxOverlapPriority'],\n    '0330': ['FD', '1', 'CineRelativeToRealTime'],\n    '0400': ['SQ', '1', 'FilterOperationsSequence'],\n    '0402': ['CS', '1', 'FilterByCategory'],\n    '0404': ['CS', '1', 'FilterByAttributePresence'],\n    '0406': ['CS', '1', 'FilterByOperator'],\n    '0420': ['US', '3', 'StructuredDisplayBackgroundCIELabValue'],\n    '0421': ['US', '3', 'EmptyImageBoxCIELabValue'],\n    '0422': ['SQ', '1', 'StructuredDisplayImageBoxSequence'],\n    '0424': ['SQ', '1', 'StructuredDisplayTextBoxSequence'],\n    '0427': ['SQ', '1', 'ReferencedFirstFrameSequence'],\n    '0430': ['SQ', '1', 'ImageBoxSynchronizationSequence'],\n    '0432': ['US', '2-n', 'SynchronizedImageBoxList'],\n    '0434': ['CS', '1', 'TypeOfSynchronization'],\n    '0500': ['CS', '1', 'BlendingOperationType'],\n    '0510': ['CS', '1', 'ReformattingOperationType'],\n    '0512': ['FD', '1', 'ReformattingThickness'],\n    '0514': ['FD', '1', 'ReformattingInterval'],\n    '0516': ['CS', '1', 'ReformattingOperationInitialViewDirection'],\n    '0520': ['CS', '1-n', 'ThreeDRenderingType'],\n    '0600': ['SQ', '1', 'SortingOperationsSequence'],\n    '0602': ['CS', '1', 'SortByCategory'],\n    '0604': ['CS', '1', 'SortingDirection'],\n    '0700': ['CS', '2', 'DisplaySetPatientOrientation'],\n    '0702': ['CS', '1', 'VOIType'],\n    '0704': ['CS', '1', 'PseudoColorType'],\n    '0705': ['SQ', '1', 'PseudoColorPaletteInstanceReferenceSequence'],\n    '0706': ['CS', '1', 'ShowGrayscaleInverted'],\n    '0710': ['CS', '1', 'ShowImageTrueSizeFlag'],\n    '0712': ['CS', '1', 'ShowGraphicAnnotationFlag'],\n    '0714': ['CS', '1', 'ShowPatientDemographicsFlag'],\n    '0716': ['CS', '1', 'ShowAcquisitionTechniquesFlag'],\n    '0717': ['CS', '1', 'DisplaySetHorizontalJustification'],\n    '0718': ['CS', '1', 'DisplaySetVerticalJustification']\n  },\n  '0074': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0120': ['FD', '1', 'ContinuationStartMeterset'],\n    '0121': ['FD', '1', 'ContinuationEndMeterset'],\n    '1000': ['CS', '1', 'ProcedureStepState'],\n    '1002': ['SQ', '1', 'ProcedureStepProgressInformationSequence'],\n    '1004': ['DS', '1', 'ProcedureStepProgress'],\n    '1006': ['ST', '1', 'ProcedureStepProgressDescription'],\n    '1007': ['SQ', '1', 'ProcedureStepProgressParametersSequence'],\n    '1008': ['SQ', '1', 'ProcedureStepCommunicationsURISequence'],\n    '100A': ['UR', '1', 'ContactURI'],\n    '100C': ['LO', '1', 'ContactDisplayName'],\n    '100E': ['SQ', '1', 'ProcedureStepDiscontinuationReasonCodeSequence'],\n    '1020': ['SQ', '1', 'BeamTaskSequence'],\n    '1022': ['CS', '1', 'BeamTaskType'],\n    '1024': ['IS', '1', 'BeamOrderIndexTrial'],\n    '1025': ['CS', '1', 'AutosequenceFlag'],\n    '1026': ['FD', '1', 'TableTopVerticalAdjustedPosition'],\n    '1027': ['FD', '1', 'TableTopLongitudinalAdjustedPosition'],\n    '1028': ['FD', '1', 'TableTopLateralAdjustedPosition'],\n    '102A': ['FD', '1', 'PatientSupportAdjustedAngle'],\n    '102B': ['FD', '1', 'TableTopEccentricAdjustedAngle'],\n    '102C': ['FD', '1', 'TableTopPitchAdjustedAngle'],\n    '102D': ['FD', '1', 'TableTopRollAdjustedAngle'],\n    '1030': ['SQ', '1', 'DeliveryVerificationImageSequence'],\n    '1032': ['CS', '1', 'VerificationImageTiming'],\n    '1034': ['CS', '1', 'DoubleExposureFlag'],\n    '1036': ['CS', '1', 'DoubleExposureOrdering'],\n    '1038': ['DS', '1', 'DoubleExposureMetersetTrial'],\n    '103A': ['DS', '4', 'DoubleExposureFieldDeltaTrial'],\n    '1040': ['SQ', '1', 'RelatedReferenceRTImageSequence'],\n    '1042': ['SQ', '1', 'GeneralMachineVerificationSequence'],\n    '1044': ['SQ', '1', 'ConventionalMachineVerificationSequence'],\n    '1046': ['SQ', '1', 'IonMachineVerificationSequence'],\n    '1048': ['SQ', '1', 'FailedAttributesSequence'],\n    '104A': ['SQ', '1', 'OverriddenAttributesSequence'],\n    '104C': ['SQ', '1', 'ConventionalControlPointVerificationSequence'],\n    '104E': ['SQ', '1', 'IonControlPointVerificationSequence'],\n    '1050': ['SQ', '1', 'AttributeOccurrenceSequence'],\n    '1052': ['AT', '1', 'AttributeOccurrencePointer'],\n    '1054': ['UL', '1', 'AttributeItemSelector'],\n    '1056': ['LO', '1', 'AttributeOccurrencePrivateCreator'],\n    '1057': ['IS', '1-n', 'SelectorSequencePointerItems'],\n    '1200': ['CS', '1', 'ScheduledProcedureStepPriority'],\n    '1202': ['LO', '1', 'WorklistLabel'],\n    '1204': ['LO', '1', 'ProcedureStepLabel'],\n    '1210': ['SQ', '1', 'ScheduledProcessingParametersSequence'],\n    '1212': ['SQ', '1', 'PerformedProcessingParametersSequence'],\n    '1216': ['SQ', '1', 'UnifiedProcedureStepPerformedProcedureSequence'],\n    '1220': ['SQ', '1', 'RelatedProcedureStepSequence'],\n    '1222': ['LO', '1', 'ProcedureStepRelationshipType'],\n    '1224': ['SQ', '1', 'ReplacedProcedureStepSequence'],\n    '1230': ['LO', '1', 'DeletionLock'],\n    '1234': ['AE', '1', 'ReceivingAE'],\n    '1236': ['AE', '1', 'RequestingAE'],\n    '1238': ['LT', '1', 'ReasonForCancellation'],\n    '1242': ['CS', '1', 'SCPStatus'],\n    '1244': ['CS', '1', 'SubscriptionListStatus'],\n    '1246': ['CS', '1', 'UnifiedProcedureStepListStatus'],\n    '1324': ['UL', '1', 'BeamOrderIndex'],\n    '1338': ['FD', '1', 'DoubleExposureMeterset'],\n    '133A': ['FD', '4', 'DoubleExposureFieldDelta'],\n    '1401': ['SQ', '1', 'BrachyTaskSequence'],\n    '1402': ['DS', '1', 'ContinuationStartTotalReferenceAirKerma'],\n    '1403': ['DS', '1', 'ContinuationEndTotalReferenceAirKerma'],\n    '1404': ['IS', '1', 'ContinuationPulseNumber'],\n    '1405': ['SQ', '1', 'ChannelDeliveryOrderSequence'],\n    '1406': ['IS', '1', 'ReferencedChannelNumber'],\n    '1407': ['DS', '1', 'StartCumulativeTimeWeight'],\n    '1408': ['DS', '1', 'EndCumulativeTimeWeight'],\n    '1409': ['SQ', '1', 'OmittedChannelSequence'],\n    '140A': ['CS', '1', 'ReasonForChannelOmission'],\n    '140B': ['LO', '1', 'ReasonForChannelOmissionDescription'],\n    '140C': ['IS', '1', 'ChannelDeliveryOrderIndex'],\n    '140D': ['SQ', '1', 'ChannelDeliveryContinuationSequence'],\n    '140E': ['SQ', '1', 'OmittedApplicationSetupSequence']\n  },\n  '0076': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['LO', '1', 'ImplantAssemblyTemplateName'],\n    '0003': ['LO', '1', 'ImplantAssemblyTemplateIssuer'],\n    '0006': ['LO', '1', 'ImplantAssemblyTemplateVersion'],\n    '0008': ['SQ', '1', 'ReplacedImplantAssemblyTemplateSequence'],\n    '000A': ['CS', '1', 'ImplantAssemblyTemplateType'],\n    '000C': ['SQ', '1', 'OriginalImplantAssemblyTemplateSequence'],\n    '000E': ['SQ', '1', 'DerivationImplantAssemblyTemplateSequence'],\n    '0010': ['SQ', '1', 'ImplantAssemblyTemplateTargetAnatomySequence'],\n    '0020': ['SQ', '1', 'ProcedureTypeCodeSequence'],\n    '0030': ['LO', '1', 'SurgicalTechnique'],\n    '0032': ['SQ', '1', 'ComponentTypesSequence'],\n    '0034': ['SQ', '1', 'ComponentTypeCodeSequence'],\n    '0036': ['CS', '1', 'ExclusiveComponentType'],\n    '0038': ['CS', '1', 'MandatoryComponentType'],\n    '0040': ['SQ', '1', 'ComponentSequence'],\n    '0055': ['US', '1', 'ComponentID'],\n    '0060': ['SQ', '1', 'ComponentAssemblySequence'],\n    '0070': ['US', '1', 'Component1ReferencedID'],\n    '0080': ['US', '1', 'Component1ReferencedMatingFeatureSetID'],\n    '0090': ['US', '1', 'Component1ReferencedMatingFeatureID'],\n    '00A0': ['US', '1', 'Component2ReferencedID'],\n    '00B0': ['US', '1', 'Component2ReferencedMatingFeatureSetID'],\n    '00C0': ['US', '1', 'Component2ReferencedMatingFeatureID']\n  },\n  '0078': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['LO', '1', 'ImplantTemplateGroupName'],\n    '0010': ['ST', '1', 'ImplantTemplateGroupDescription'],\n    '0020': ['LO', '1', 'ImplantTemplateGroupIssuer'],\n    '0024': ['LO', '1', 'ImplantTemplateGroupVersion'],\n    '0026': ['SQ', '1', 'ReplacedImplantTemplateGroupSequence'],\n    '0028': ['SQ', '1', 'ImplantTemplateGroupTargetAnatomySequence'],\n    '002A': ['SQ', '1', 'ImplantTemplateGroupMembersSequence'],\n    '002E': ['US', '1', 'ImplantTemplateGroupMemberID'],\n    '0050': ['FD', '3', 'ThreeDImplantTemplateGroupMemberMatchingPoint'],\n    '0060': ['FD', '9', 'ThreeDImplantTemplateGroupMemberMatchingAxes'],\n    '0070': ['SQ', '1', 'ImplantTemplateGroupMemberMatching2DCoordinatesSequence'],\n    '0090': ['FD', '2', 'TwoDImplantTemplateGroupMemberMatchingPoint'],\n    '00A0': ['FD', '4', 'TwoDImplantTemplateGroupMemberMatchingAxes'],\n    '00B0': ['SQ', '1', 'ImplantTemplateGroupVariationDimensionSequence'],\n    '00B2': ['LO', '1', 'ImplantTemplateGroupVariationDimensionName'],\n    '00B4': ['SQ', '1', 'ImplantTemplateGroupVariationDimensionRankSequence'],\n    '00B6': ['US', '1', 'ReferencedImplantTemplateGroupMemberID'],\n    '00B8': ['US', '1', 'ImplantTemplateGroupVariationDimensionRank']\n  },\n  '0080': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'SurfaceScanAcquisitionTypeCodeSequence'],\n    '0002': ['SQ', '1', 'SurfaceScanModeCodeSequence'],\n    '0003': ['SQ', '1', 'RegistrationMethodCodeSequence'],\n    '0004': ['FD', '1', 'ShotDurationTime'],\n    '0005': ['FD', '1', 'ShotOffsetTime'],\n    '0006': ['US', '1-n', 'SurfacePointPresentationValueData'],\n    '0007': ['US', '3-3n', 'SurfacePointColorCIELabValueData'],\n    '0008': ['SQ', '1', 'UVMappingSequence'],\n    '0009': ['SH', '1', 'TextureLabel'],\n    '0010': ['OF', '1', 'UValueData'],\n    '0011': ['OF', '1', 'VValueData'],\n    '0012': ['SQ', '1', 'ReferencedTextureSequence'],\n    '0013': ['SQ', '1', 'ReferencedSurfaceDataSequence']\n  },\n  '0082': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'AssessmentSummary'],\n    '0003': ['UT', '1', 'AssessmentSummaryDescription'],\n    '0004': ['SQ', '1', 'AssessedSOPInstanceSequence'],\n    '0005': ['SQ', '1', 'ReferencedComparisonSOPInstanceSequence'],\n    '0006': ['UL', '1', 'NumberOfAssessmentObservations'],\n    '0007': ['SQ', '1', 'AssessmentObservationsSequence'],\n    '0008': ['CS', '1', 'ObservationSignificance'],\n    '000A': ['UT', '1', 'ObservationDescription'],\n    '000C': ['SQ', '1', 'StructuredConstraintObservationSequence'],\n    '0010': ['SQ', '1', 'AssessedAttributeValueSequence'],\n    '0016': ['LO', '1', 'AssessmentSetID'],\n    '0017': ['SQ', '1', 'AssessmentRequesterSequence'],\n    '0018': ['LO', '1', 'SelectorAttributeName'],\n    '0019': ['LO', '1', 'SelectorAttributeKeyword'],\n    '0021': ['SQ', '1', 'AssessmentTypeCodeSequence'],\n    '0022': ['SQ', '1', 'ObservationBasisCodeSequence'],\n    '0023': ['LO', '1', 'AssessmentLabel'],\n    '0032': ['CS', '1', 'ConstraintType'],\n    '0033': ['UT', '1', 'SpecificationSelectionGuidance'],\n    '0034': ['SQ', '1', 'ConstraintValueSequence'],\n    '0035': ['SQ', '1', 'RecommendedDefaultValueSequence'],\n    '0036': ['CS', '1', 'ConstraintViolationSignificance'],\n    '0037': ['UT', '1', 'ConstraintViolationCondition'],\n    '0038': ['CS', '1', 'ModifiableConstraintFlag']\n  },\n  '0088': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0130': ['SH', '1', 'StorageMediaFileSetID'],\n    '0140': ['UI', '1', 'StorageMediaFileSetUID'],\n    '0200': ['SQ', '1', 'IconImageSequence'],\n    '0904': ['LO', '1', 'TopicTitle'],\n    '0906': ['ST', '1', 'TopicSubject'],\n    '0910': ['LO', '1', 'TopicAuthor'],\n    '0912': ['LO', '1-32', 'TopicKeywords']\n  },\n  '0100': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0410': ['CS', '1', 'SOPInstanceStatus'],\n    '0420': ['DT', '1', 'SOPAuthorizationDateTime'],\n    '0424': ['LT', '1', 'SOPAuthorizationComment'],\n    '0426': ['LO', '1', 'AuthorizationEquipmentCertificationNumber']\n  },\n  '0400': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0005': ['US', '1', 'MACIDNumber'],\n    '0010': ['UI', '1', 'MACCalculationTransferSyntaxUID'],\n    '0015': ['CS', '1', 'MACAlgorithm'],\n    '0020': ['AT', '1-n', 'DataElementsSigned'],\n    '0100': ['UI', '1', 'DigitalSignatureUID'],\n    '0105': ['DT', '1', 'DigitalSignatureDateTime'],\n    '0110': ['CS', '1', 'CertificateType'],\n    '0115': ['OB', '1', 'CertificateOfSigner'],\n    '0120': ['OB', '1', 'Signature'],\n    '0305': ['CS', '1', 'CertifiedTimestampType'],\n    '0310': ['OB', '1', 'CertifiedTimestamp'],\n    '0315': ['FL', '1', ''],\n    '0401': ['SQ', '1', 'DigitalSignaturePurposeCodeSequence'],\n    '0402': ['SQ', '1', 'ReferencedDigitalSignatureSequence'],\n    '0403': ['SQ', '1', 'ReferencedSOPInstanceMACSequence'],\n    '0404': ['OB', '1', 'MAC'],\n    '0500': ['SQ', '1', 'EncryptedAttributesSequence'],\n    '0510': ['UI', '1', 'EncryptedContentTransferSyntaxUID'],\n    '0520': ['OB', '1', 'EncryptedContent'],\n    '0550': ['SQ', '1', 'ModifiedAttributesSequence'],\n    '0551': ['SQ', '1', 'NonconformingModifiedAttributesSequence'],\n    '0552': ['OB', '1', 'NonconformingDataElementValue'],\n    '0561': ['SQ', '1', 'OriginalAttributesSequence'],\n    '0562': ['DT', '1', 'AttributeModificationDateTime'],\n    '0563': ['LO', '1', 'ModifyingSystem'],\n    '0564': ['LO', '1', 'SourceOfPreviousValues'],\n    '0565': ['CS', '1', 'ReasonForTheAttributeModification'],\n    '0600': ['CS', '1', 'InstanceOriginStatus']\n  },\n  '1000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '3', 'EscapeTriplet'],\n    '0011': ['US', '3', 'RunLengthTriplet'],\n    '0012': ['US', '1', 'HuffmanTableSize'],\n    '0013': ['US', '3', 'HuffmanTableTriplet'],\n    '0014': ['US', '1', 'ShiftTableSize'],\n    '0015': ['US', '3', 'ShiftTableTriplet']\n  },\n  '1010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0004': ['US', '1-n', 'ZonalMap']\n  },\n  '2000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['IS', '1', 'NumberOfCopies'],\n    '001E': ['SQ', '1', 'PrinterConfigurationSequence'],\n    '0020': ['CS', '1', 'PrintPriority'],\n    '0030': ['CS', '1', 'MediumType'],\n    '0040': ['CS', '1', 'FilmDestination'],\n    '0050': ['LO', '1', 'FilmSessionLabel'],\n    '0060': ['IS', '1', 'MemoryAllocation'],\n    '0061': ['IS', '1', 'MaximumMemoryAllocation'],\n    '0062': ['CS', '1', 'ColorImagePrintingFlag'],\n    '0063': ['CS', '1', 'CollationFlag'],\n    '0065': ['CS', '1', 'AnnotationFlag'],\n    '0067': ['CS', '1', 'ImageOverlayFlag'],\n    '0069': ['CS', '1', 'PresentationLUTFlag'],\n    '006A': ['CS', '1', 'ImageBoxPresentationLUTFlag'],\n    '00A0': ['US', '1', 'MemoryBitDepth'],\n    '00A1': ['US', '1', 'PrintingBitDepth'],\n    '00A2': ['SQ', '1', 'MediaInstalledSequence'],\n    '00A4': ['SQ', '1', 'OtherMediaAvailableSequence'],\n    '00A8': ['SQ', '1', 'SupportedImageDisplayFormatsSequence'],\n    '0500': ['SQ', '1', 'ReferencedFilmBoxSequence'],\n    '0510': ['SQ', '1', 'ReferencedStoredPrintSequence']\n  },\n  '2010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['ST', '1', 'ImageDisplayFormat'],\n    '0030': ['CS', '1', 'AnnotationDisplayFormatID'],\n    '0040': ['CS', '1', 'FilmOrientation'],\n    '0050': ['CS', '1', 'FilmSizeID'],\n    '0052': ['CS', '1', 'PrinterResolutionID'],\n    '0054': ['CS', '1', 'DefaultPrinterResolutionID'],\n    '0060': ['CS', '1', 'MagnificationType'],\n    '0080': ['CS', '1', 'SmoothingType'],\n    '00A6': ['CS', '1', 'DefaultMagnificationType'],\n    '00A7': ['CS', '1-n', 'OtherMagnificationTypesAvailable'],\n    '00A8': ['CS', '1', 'DefaultSmoothingType'],\n    '00A9': ['CS', '1-n', 'OtherSmoothingTypesAvailable'],\n    '0100': ['CS', '1', 'BorderDensity'],\n    '0110': ['CS', '1', 'EmptyImageDensity'],\n    '0120': ['US', '1', 'MinDensity'],\n    '0130': ['US', '1', 'MaxDensity'],\n    '0140': ['CS', '1', 'Trim'],\n    '0150': ['ST', '1', 'ConfigurationInformation'],\n    '0152': ['LT', '1', 'ConfigurationInformationDescription'],\n    '0154': ['IS', '1', 'MaximumCollatedFilms'],\n    '015E': ['US', '1', 'Illumination'],\n    '0160': ['US', '1', 'ReflectedAmbientLight'],\n    '0376': ['DS', '2', 'PrinterPixelSpacing'],\n    '0500': ['SQ', '1', 'ReferencedFilmSessionSequence'],\n    '0510': ['SQ', '1', 'ReferencedImageBoxSequence'],\n    '0520': ['SQ', '1', 'ReferencedBasicAnnotationBoxSequence']\n  },\n  '2020': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '1', 'ImageBoxPosition'],\n    '0020': ['CS', '1', 'Polarity'],\n    '0030': ['DS', '1', 'RequestedImageSize'],\n    '0040': ['CS', '1', 'RequestedDecimateCropBehavior'],\n    '0050': ['CS', '1', 'RequestedResolutionID'],\n    '00A0': ['CS', '1', 'RequestedImageSizeFlag'],\n    '00A2': ['CS', '1', 'DecimateCropResult'],\n    '0110': ['SQ', '1', 'BasicGrayscaleImageSequence'],\n    '0111': ['SQ', '1', 'BasicColorImageSequence'],\n    '0130': ['SQ', '1', 'ReferencedImageOverlayBoxSequence'],\n    '0140': ['SQ', '1', 'ReferencedVOILUTBoxSequence']\n  },\n  '2030': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '1', 'AnnotationPosition'],\n    '0020': ['LO', '1', 'TextString']\n  },\n  '2040': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SQ', '1', 'ReferencedOverlayPlaneSequence'],\n    '0011': ['US', '1-99', 'ReferencedOverlayPlaneGroups'],\n    '0020': ['SQ', '1', 'OverlayPixelDataSequence'],\n    '0060': ['CS', '1', 'OverlayMagnificationType'],\n    '0070': ['CS', '1', 'OverlaySmoothingType'],\n    '0072': ['CS', '1', 'OverlayOrImageMagnification'],\n    '0074': ['US', '1', 'MagnifyToNumberOfColumns'],\n    '0080': ['CS', '1', 'OverlayForegroundDensity'],\n    '0082': ['CS', '1', 'OverlayBackgroundDensity'],\n    '0090': ['CS', '1', 'OverlayMode'],\n    '0100': ['CS', '1', 'ThresholdDensity'],\n    '0500': ['SQ', '1', 'ReferencedImageBoxSequenceRetired']\n  },\n  '2050': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SQ', '1', 'PresentationLUTSequence'],\n    '0020': ['CS', '1', 'PresentationLUTShape'],\n    '0500': ['SQ', '1', 'ReferencedPresentationLUTSequence']\n  },\n  '2100': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SH', '1', 'PrintJobID'],\n    '0020': ['CS', '1', 'ExecutionStatus'],\n    '0030': ['CS', '1', 'ExecutionStatusInfo'],\n    '0040': ['DA', '1', 'CreationDate'],\n    '0050': ['TM', '1', 'CreationTime'],\n    '0070': ['AE', '1', 'Originator'],\n    '0140': ['AE', '1', 'DestinationAE'],\n    '0160': ['SH', '1', 'OwnerID'],\n    '0170': ['IS', '1', 'NumberOfFilms'],\n    '0500': ['SQ', '1', 'ReferencedPrintJobSequencePullStoredPrint']\n  },\n  '2110': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['CS', '1', 'PrinterStatus'],\n    '0020': ['CS', '1', 'PrinterStatusInfo'],\n    '0030': ['LO', '1', 'PrinterName'],\n    '0099': ['SH', '1', 'PrintQueueID']\n  },\n  '2120': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['CS', '1', 'QueueStatus'],\n    '0050': ['SQ', '1', 'PrintJobDescriptionSequence'],\n    '0070': ['SQ', '1', 'ReferencedPrintJobSequence']\n  },\n  '2130': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SQ', '1', 'PrintManagementCapabilitiesSequence'],\n    '0015': ['SQ', '1', 'PrinterCharacteristicsSequence'],\n    '0030': ['SQ', '1', 'FilmBoxContentSequence'],\n    '0040': ['SQ', '1', 'ImageBoxContentSequence'],\n    '0050': ['SQ', '1', 'AnnotationContentSequence'],\n    '0060': ['SQ', '1', 'ImageOverlayBoxContentSequence'],\n    '0080': ['SQ', '1', 'PresentationLUTContentSequence'],\n    '00A0': ['SQ', '1', 'ProposedStudySequence'],\n    '00C0': ['SQ', '1', 'OriginalImageSequence']\n  },\n  '2200': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'LabelUsingInformationExtractedFromInstances'],\n    '0002': ['UT', '1', 'LabelText'],\n    '0003': ['CS', '1', 'LabelStyleSelection'],\n    '0004': ['LT', '1', 'MediaDisposition'],\n    '0005': ['LT', '1', 'BarcodeValue'],\n    '0006': ['CS', '1', 'BarcodeSymbology'],\n    '0007': ['CS', '1', 'AllowMediaSplitting'],\n    '0008': ['CS', '1', 'IncludeNonDICOMObjects'],\n    '0009': ['CS', '1', 'IncludeDisplayApplication'],\n    '000A': ['CS', '1', 'PreserveCompositeInstancesAfterMediaCreation'],\n    '000B': ['US', '1', 'TotalNumberOfPiecesOfMediaCreated'],\n    '000C': ['LO', '1', 'RequestedMediaApplicationProfile'],\n    '000D': ['SQ', '1', 'ReferencedStorageMediaSequence'],\n    '000E': ['AT', '1-n', 'FailureAttributes'],\n    '000F': ['CS', '1', 'AllowLossyCompression'],\n    '0020': ['CS', '1', 'RequestPriority']\n  },\n  '3002': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SH', '1', 'RTImageLabel'],\n    '0003': ['LO', '1', 'RTImageName'],\n    '0004': ['ST', '1', 'RTImageDescription'],\n    '000A': ['CS', '1', 'ReportedValuesOrigin'],\n    '000C': ['CS', '1', 'RTImagePlane'],\n    '000D': ['DS', '3', 'XRayImageReceptorTranslation'],\n    '000E': ['DS', '1', 'XRayImageReceptorAngle'],\n    '0010': ['DS', '6', 'RTImageOrientation'],\n    '0011': ['DS', '2', 'ImagePlanePixelSpacing'],\n    '0012': ['DS', '2', 'RTImagePosition'],\n    '0020': ['SH', '1', 'RadiationMachineName'],\n    '0022': ['DS', '1', 'RadiationMachineSAD'],\n    '0024': ['DS', '1', 'RadiationMachineSSD'],\n    '0026': ['DS', '1', 'RTImageSID'],\n    '0028': ['DS', '1', 'SourceToReferenceObjectDistance'],\n    '0029': ['IS', '1', 'FractionNumber'],\n    '0030': ['SQ', '1', 'ExposureSequence'],\n    '0032': ['DS', '1', 'MetersetExposure'],\n    '0034': ['DS', '4', 'DiaphragmPosition'],\n    '0040': ['SQ', '1', 'FluenceMapSequence'],\n    '0041': ['CS', '1', 'FluenceDataSource'],\n    '0042': ['DS', '1', 'FluenceDataScale'],\n    '0050': ['SQ', '1', 'PrimaryFluenceModeSequence'],\n    '0051': ['CS', '1', 'FluenceMode'],\n    '0052': ['SH', '1', 'FluenceModeID']\n  },\n  '3004': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'DVHType'],\n    '0002': ['CS', '1', 'DoseUnits'],\n    '0004': ['CS', '1', 'DoseType'],\n    '0005': ['CS', '1', 'SpatialTransformOfDose'],\n    '0006': ['LO', '1', 'DoseComment'],\n    '0008': ['DS', '3', 'NormalizationPoint'],\n    '000A': ['CS', '1', 'DoseSummationType'],\n    '000C': ['DS', '2-n', 'GridFrameOffsetVector'],\n    '000E': ['DS', '1', 'DoseGridScaling'],\n    '0010': ['SQ', '1', 'RTDoseROISequence'],\n    '0012': ['DS', '1', 'DoseValue'],\n    '0014': ['CS', '1-3', 'TissueHeterogeneityCorrection'],\n    '0040': ['DS', '3', 'DVHNormalizationPoint'],\n    '0042': ['DS', '1', 'DVHNormalizationDoseValue'],\n    '0050': ['SQ', '1', 'DVHSequence'],\n    '0052': ['DS', '1', 'DVHDoseScaling'],\n    '0054': ['CS', '1', 'DVHVolumeUnits'],\n    '0056': ['IS', '1', 'DVHNumberOfBins'],\n    '0058': ['DS', '2-2n', 'DVHData'],\n    '0060': ['SQ', '1', 'DVHReferencedROISequence'],\n    '0062': ['CS', '1', 'DVHROIContributionType'],\n    '0070': ['DS', '1', 'DVHMinimumDose'],\n    '0072': ['DS', '1', 'DVHMaximumDose'],\n    '0074': ['DS', '1', 'DVHMeanDose']\n  },\n  '3006': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SH', '1', 'StructureSetLabel'],\n    '0004': ['LO', '1', 'StructureSetName'],\n    '0006': ['ST', '1', 'StructureSetDescription'],\n    '0008': ['DA', '1', 'StructureSetDate'],\n    '0009': ['TM', '1', 'StructureSetTime'],\n    '0010': ['SQ', '1', 'ReferencedFrameOfReferenceSequence'],\n    '0012': ['SQ', '1', 'RTReferencedStudySequence'],\n    '0014': ['SQ', '1', 'RTReferencedSeriesSequence'],\n    '0016': ['SQ', '1', 'ContourImageSequence'],\n    '0018': ['SQ', '1', 'PredecessorStructureSetSequence'],\n    '0020': ['SQ', '1', 'StructureSetROISequence'],\n    '0022': ['IS', '1', 'ROINumber'],\n    '0024': ['UI', '1', 'ReferencedFrameOfReferenceUID'],\n    '0026': ['LO', '1', 'ROIName'],\n    '0028': ['ST', '1', 'ROIDescription'],\n    '002A': ['IS', '3', 'ROIDisplayColor'],\n    '002C': ['DS', '1', 'ROIVolume'],\n    '0030': ['SQ', '1', 'RTRelatedROISequence'],\n    '0033': ['CS', '1', 'RTROIRelationship'],\n    '0036': ['CS', '1', 'ROIGenerationAlgorithm'],\n    '0037': ['SQ', '1', 'ROIDerivationAlgorithmIdentificationSequence'],\n    '0038': ['LO', '1', 'ROIGenerationDescription'],\n    '0039': ['SQ', '1', 'ROIContourSequence'],\n    '0040': ['SQ', '1', 'ContourSequence'],\n    '0042': ['CS', '1', 'ContourGeometricType'],\n    '0044': ['DS', '1', 'ContourSlabThickness'],\n    '0045': ['DS', '3', 'ContourOffsetVector'],\n    '0046': ['IS', '1', 'NumberOfContourPoints'],\n    '0048': ['IS', '1', 'ContourNumber'],\n    '0049': ['IS', '1-n', 'AttachedContours'],\n    '004A': ['SQ', '1', 'SourcePixelPlanesCharacteristicsSequence'],\n    '0050': ['DS', '3-3n', 'ContourData'],\n    '0080': ['SQ', '1', 'RTROIObservationsSequence'],\n    '0082': ['IS', '1', 'ObservationNumber'],\n    '0084': ['IS', '1', 'ReferencedROINumber'],\n    '0085': ['SH', '1', 'ROIObservationLabel'],\n    '0086': ['SQ', '1', 'RTROIIdentificationCodeSequence'],\n    '0088': ['ST', '1', 'ROIObservationDescription'],\n    '00A0': ['SQ', '1', 'RelatedRTROIObservationsSequence'],\n    '00A4': ['CS', '1', 'RTROIInterpretedType'],\n    '00A6': ['PN', '1', 'ROIInterpreter'],\n    '00B0': ['SQ', '1', 'ROIPhysicalPropertiesSequence'],\n    '00B2': ['CS', '1', 'ROIPhysicalProperty'],\n    '00B4': ['DS', '1', 'ROIPhysicalPropertyValue'],\n    '00B6': ['SQ', '1', 'ROIElementalCompositionSequence'],\n    '00B7': ['US', '1', 'ROIElementalCompositionAtomicNumber'],\n    '00B8': ['FL', '1', 'ROIElementalCompositionAtomicMassFraction'],\n    '00B9': ['SQ', '1', 'AdditionalRTROIIdentificationCodeSequence'],\n    '00C0': ['SQ', '1', 'FrameOfReferenceRelationshipSequence'],\n    '00C2': ['UI', '1', 'RelatedFrameOfReferenceUID'],\n    '00C4': ['CS', '1', 'FrameOfReferenceTransformationType'],\n    '00C6': ['DS', '16', 'FrameOfReferenceTransformationMatrix'],\n    '00C8': ['LO', '1', 'FrameOfReferenceTransformationComment'],\n    '00C9': ['SQ', '1', 'PatientLocationCoordinatesSequence'],\n    '00CA': ['SQ', '1', 'PatientLocationCoordinatesCodeSequence'],\n    '00CB': ['SQ', '1', 'PatientSupportPositionSequence']\n  },\n  '3008': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['SQ', '1', 'MeasuredDoseReferenceSequence'],\n    '0012': ['ST', '1', 'MeasuredDoseDescription'],\n    '0014': ['CS', '1', 'MeasuredDoseType'],\n    '0016': ['DS', '1', 'MeasuredDoseValue'],\n    '0020': ['SQ', '1', 'TreatmentSessionBeamSequence'],\n    '0021': ['SQ', '1', 'TreatmentSessionIonBeamSequence'],\n    '0022': ['IS', '1', 'CurrentFractionNumber'],\n    '0024': ['DA', '1', 'TreatmentControlPointDate'],\n    '0025': ['TM', '1', 'TreatmentControlPointTime'],\n    '002A': ['CS', '1', 'TreatmentTerminationStatus'],\n    '002B': ['SH', '1', 'TreatmentTerminationCode'],\n    '002C': ['CS', '1', 'TreatmentVerificationStatus'],\n    '0030': ['SQ', '1', 'ReferencedTreatmentRecordSequence'],\n    '0032': ['DS', '1', 'SpecifiedPrimaryMeterset'],\n    '0033': ['DS', '1', 'SpecifiedSecondaryMeterset'],\n    '0036': ['DS', '1', 'DeliveredPrimaryMeterset'],\n    '0037': ['DS', '1', 'DeliveredSecondaryMeterset'],\n    '003A': ['DS', '1', 'SpecifiedTreatmentTime'],\n    '003B': ['DS', '1', 'DeliveredTreatmentTime'],\n    '0040': ['SQ', '1', 'ControlPointDeliverySequence'],\n    '0041': ['SQ', '1', 'IonControlPointDeliverySequence'],\n    '0042': ['DS', '1', 'SpecifiedMeterset'],\n    '0044': ['DS', '1', 'DeliveredMeterset'],\n    '0045': ['FL', '1', 'MetersetRateSet'],\n    '0046': ['FL', '1', 'MetersetRateDelivered'],\n    '0047': ['FL', '1-n', 'ScanSpotMetersetsDelivered'],\n    '0048': ['DS', '1', 'DoseRateDelivered'],\n    '0050': ['SQ', '1', 'TreatmentSummaryCalculatedDoseReferenceSequence'],\n    '0052': ['DS', '1', 'CumulativeDoseToDoseReference'],\n    '0054': ['DA', '1', 'FirstTreatmentDate'],\n    '0056': ['DA', '1', 'MostRecentTreatmentDate'],\n    '005A': ['IS', '1', 'NumberOfFractionsDelivered'],\n    '0060': ['SQ', '1', 'OverrideSequence'],\n    '0061': ['AT', '1', 'ParameterSequencePointer'],\n    '0062': ['AT', '1', 'OverrideParameterPointer'],\n    '0063': ['IS', '1', 'ParameterItemIndex'],\n    '0064': ['IS', '1', 'MeasuredDoseReferenceNumber'],\n    '0065': ['AT', '1', 'ParameterPointer'],\n    '0066': ['ST', '1', 'OverrideReason'],\n    '0067': ['US', '1', 'ParameterValueNumber'],\n    '0068': ['SQ', '1', 'CorrectedParameterSequence'],\n    '006A': ['FL', '1', 'CorrectionValue'],\n    '0070': ['SQ', '1', 'CalculatedDoseReferenceSequence'],\n    '0072': ['IS', '1', 'CalculatedDoseReferenceNumber'],\n    '0074': ['ST', '1', 'CalculatedDoseReferenceDescription'],\n    '0076': ['DS', '1', 'CalculatedDoseReferenceDoseValue'],\n    '0078': ['DS', '1', 'StartMeterset'],\n    '007A': ['DS', '1', 'EndMeterset'],\n    '0080': ['SQ', '1', 'ReferencedMeasuredDoseReferenceSequence'],\n    '0082': ['IS', '1', 'ReferencedMeasuredDoseReferenceNumber'],\n    '0090': ['SQ', '1', 'ReferencedCalculatedDoseReferenceSequence'],\n    '0092': ['IS', '1', 'ReferencedCalculatedDoseReferenceNumber'],\n    '00A0': ['SQ', '1', 'BeamLimitingDeviceLeafPairsSequence'],\n    '00B0': ['SQ', '1', 'RecordedWedgeSequence'],\n    '00C0': ['SQ', '1', 'RecordedCompensatorSequence'],\n    '00D0': ['SQ', '1', 'RecordedBlockSequence'],\n    '00D1': ['SQ', '1', 'RecordedBlockSlabSequence'],\n    '00E0': ['SQ', '1', 'TreatmentSummaryMeasuredDoseReferenceSequence'],\n    '00F0': ['SQ', '1', 'RecordedSnoutSequence'],\n    '00F2': ['SQ', '1', 'RecordedRangeShifterSequence'],\n    '00F4': ['SQ', '1', 'RecordedLateralSpreadingDeviceSequence'],\n    '00F6': ['SQ', '1', 'RecordedRangeModulatorSequence'],\n    '0100': ['SQ', '1', 'RecordedSourceSequence'],\n    '0105': ['LO', '1', 'SourceSerialNumber'],\n    '0110': ['SQ', '1', 'TreatmentSessionApplicationSetupSequence'],\n    '0116': ['CS', '1', 'ApplicationSetupCheck'],\n    '0120': ['SQ', '1', 'RecordedBrachyAccessoryDeviceSequence'],\n    '0122': ['IS', '1', 'ReferencedBrachyAccessoryDeviceNumber'],\n    '0130': ['SQ', '1', 'RecordedChannelSequence'],\n    '0132': ['DS', '1', 'SpecifiedChannelTotalTime'],\n    '0134': ['DS', '1', 'DeliveredChannelTotalTime'],\n    '0136': ['IS', '1', 'SpecifiedNumberOfPulses'],\n    '0138': ['IS', '1', 'DeliveredNumberOfPulses'],\n    '013A': ['DS', '1', 'SpecifiedPulseRepetitionInterval'],\n    '013C': ['DS', '1', 'DeliveredPulseRepetitionInterval'],\n    '0140': ['SQ', '1', 'RecordedSourceApplicatorSequence'],\n    '0142': ['IS', '1', 'ReferencedSourceApplicatorNumber'],\n    '0150': ['SQ', '1', 'RecordedChannelShieldSequence'],\n    '0152': ['IS', '1', 'ReferencedChannelShieldNumber'],\n    '0160': ['SQ', '1', 'BrachyControlPointDeliveredSequence'],\n    '0162': ['DA', '1', 'SafePositionExitDate'],\n    '0164': ['TM', '1', 'SafePositionExitTime'],\n    '0166': ['DA', '1', 'SafePositionReturnDate'],\n    '0168': ['TM', '1', 'SafePositionReturnTime'],\n    '0171': ['SQ', '1', 'PulseSpecificBrachyControlPointDeliveredSequence'],\n    '0172': ['US', '1', 'PulseNumber'],\n    '0173': ['SQ', '1', 'BrachyPulseControlPointDeliveredSequence'],\n    '0200': ['CS', '1', 'CurrentTreatmentStatus'],\n    '0202': ['ST', '1', 'TreatmentStatusComment'],\n    '0220': ['SQ', '1', 'FractionGroupSummarySequence'],\n    '0223': ['IS', '1', 'ReferencedFractionNumber'],\n    '0224': ['CS', '1', 'FractionGroupType'],\n    '0230': ['CS', '1', 'BeamStopperPosition'],\n    '0240': ['SQ', '1', 'FractionStatusSummarySequence'],\n    '0250': ['DA', '1', 'TreatmentDate'],\n    '0251': ['TM', '1', 'TreatmentTime']\n  },\n  '300A': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SH', '1', 'RTPlanLabel'],\n    '0003': ['LO', '1', 'RTPlanName'],\n    '0004': ['ST', '1', 'RTPlanDescription'],\n    '0006': ['DA', '1', 'RTPlanDate'],\n    '0007': ['TM', '1', 'RTPlanTime'],\n    '0009': ['LO', '1-n', 'TreatmentProtocols'],\n    '000A': ['CS', '1', 'PlanIntent'],\n    '000B': ['LO', '1-n', 'TreatmentSites'],\n    '000C': ['CS', '1', 'RTPlanGeometry'],\n    '000E': ['ST', '1', 'PrescriptionDescription'],\n    '0010': ['SQ', '1', 'DoseReferenceSequence'],\n    '0012': ['IS', '1', 'DoseReferenceNumber'],\n    '0013': ['UI', '1', 'DoseReferenceUID'],\n    '0014': ['CS', '1', 'DoseReferenceStructureType'],\n    '0015': ['CS', '1', 'NominalBeamEnergyUnit'],\n    '0016': ['LO', '1', 'DoseReferenceDescription'],\n    '0018': ['DS', '3', 'DoseReferencePointCoordinates'],\n    '001A': ['DS', '1', 'NominalPriorDose'],\n    '0020': ['CS', '1', 'DoseReferenceType'],\n    '0021': ['DS', '1', 'ConstraintWeight'],\n    '0022': ['DS', '1', 'DeliveryWarningDose'],\n    '0023': ['DS', '1', 'DeliveryMaximumDose'],\n    '0025': ['DS', '1', 'TargetMinimumDose'],\n    '0026': ['DS', '1', 'TargetPrescriptionDose'],\n    '0027': ['DS', '1', 'TargetMaximumDose'],\n    '0028': ['DS', '1', 'TargetUnderdoseVolumeFraction'],\n    '002A': ['DS', '1', 'OrganAtRiskFullVolumeDose'],\n    '002B': ['DS', '1', 'OrganAtRiskLimitDose'],\n    '002C': ['DS', '1', 'OrganAtRiskMaximumDose'],\n    '002D': ['DS', '1', 'OrganAtRiskOverdoseVolumeFraction'],\n    '0040': ['SQ', '1', 'ToleranceTableSequence'],\n    '0042': ['IS', '1', 'ToleranceTableNumber'],\n    '0043': ['SH', '1', 'ToleranceTableLabel'],\n    '0044': ['DS', '1', 'GantryAngleTolerance'],\n    '0046': ['DS', '1', 'BeamLimitingDeviceAngleTolerance'],\n    '0048': ['SQ', '1', 'BeamLimitingDeviceToleranceSequence'],\n    '004A': ['DS', '1', 'BeamLimitingDevicePositionTolerance'],\n    '004B': ['FL', '1', 'SnoutPositionTolerance'],\n    '004C': ['DS', '1', 'PatientSupportAngleTolerance'],\n    '004E': ['DS', '1', 'TableTopEccentricAngleTolerance'],\n    '004F': ['FL', '1', 'TableTopPitchAngleTolerance'],\n    '0050': ['FL', '1', 'TableTopRollAngleTolerance'],\n    '0051': ['DS', '1', 'TableTopVerticalPositionTolerance'],\n    '0052': ['DS', '1', 'TableTopLongitudinalPositionTolerance'],\n    '0053': ['DS', '1', 'TableTopLateralPositionTolerance'],\n    '0055': ['CS', '1', 'RTPlanRelationship'],\n    '0070': ['SQ', '1', 'FractionGroupSequence'],\n    '0071': ['IS', '1', 'FractionGroupNumber'],\n    '0072': ['LO', '1', 'FractionGroupDescription'],\n    '0078': ['IS', '1', 'NumberOfFractionsPlanned'],\n    '0079': ['IS', '1', 'NumberOfFractionPatternDigitsPerDay'],\n    '007A': ['IS', '1', 'RepeatFractionCycleLength'],\n    '007B': ['LT', '1', 'FractionPattern'],\n    '0080': ['IS', '1', 'NumberOfBeams'],\n    '0082': ['DS', '3', 'BeamDoseSpecificationPoint'],\n    '0083': ['UI', '1', 'ReferencedDoseReferenceUID'],\n    '0084': ['DS', '1', 'BeamDose'],\n    '0086': ['DS', '1', 'BeamMeterset'],\n    '0088': ['FL', '1', 'BeamDosePointDepth'],\n    '0089': ['FL', '1', 'BeamDosePointEquivalentDepth'],\n    '008A': ['FL', '1', 'BeamDosePointSSD'],\n    '008B': ['CS', '1', 'BeamDoseMeaning'],\n    '008C': ['SQ', '1', 'BeamDoseVerificationControlPointSequence'],\n    '008D': ['FL', '1', 'AverageBeamDosePointDepth'],\n    '008E': ['FL', '1', 'AverageBeamDosePointEquivalentDepth'],\n    '008F': ['FL', '1', 'AverageBeamDosePointSSD'],\n    '0090': ['CS', '1', 'BeamDoseType'],\n    '0091': ['DS', '1', 'AlternateBeamDose'],\n    '0092': ['CS', '1', 'AlternateBeamDoseType'],\n    '0093': ['CS', '1', 'DepthValueAveragingFlag'],\n    '0094': ['DS', '1', 'BeamDosePointSourceToExternalContourDistance'],\n    '00A0': ['IS', '1', 'NumberOfBrachyApplicationSetups'],\n    '00A2': ['DS', '3', 'BrachyApplicationSetupDoseSpecificationPoint'],\n    '00A4': ['DS', '1', 'BrachyApplicationSetupDose'],\n    '00B0': ['SQ', '1', 'BeamSequence'],\n    '00B2': ['SH', '1', 'TreatmentMachineName'],\n    '00B3': ['CS', '1', 'PrimaryDosimeterUnit'],\n    '00B4': ['DS', '1', 'SourceAxisDistance'],\n    '00B6': ['SQ', '1', 'BeamLimitingDeviceSequence'],\n    '00B8': ['CS', '1', 'RTBeamLimitingDeviceType'],\n    '00BA': ['DS', '1', 'SourceToBeamLimitingDeviceDistance'],\n    '00BB': ['FL', '1', 'IsocenterToBeamLimitingDeviceDistance'],\n    '00BC': ['IS', '1', 'NumberOfLeafJawPairs'],\n    '00BE': ['DS', '3-n', 'LeafPositionBoundaries'],\n    '00C0': ['IS', '1', 'BeamNumber'],\n    '00C2': ['LO', '1', 'BeamName'],\n    '00C3': ['ST', '1', 'BeamDescription'],\n    '00C4': ['CS', '1', 'BeamType'],\n    '00C5': ['FD', '1', 'BeamDeliveryDurationLimit'],\n    '00C6': ['CS', '1', 'RadiationType'],\n    '00C7': ['CS', '1', 'HighDoseTechniqueType'],\n    '00C8': ['IS', '1', 'ReferenceImageNumber'],\n    '00CA': ['SQ', '1', 'PlannedVerificationImageSequence'],\n    '00CC': ['LO', '1-n', 'ImagingDeviceSpecificAcquisitionParameters'],\n    '00CE': ['CS', '1', 'TreatmentDeliveryType'],\n    '00D0': ['IS', '1', 'NumberOfWedges'],\n    '00D1': ['SQ', '1', 'WedgeSequence'],\n    '00D2': ['IS', '1', 'WedgeNumber'],\n    '00D3': ['CS', '1', 'WedgeType'],\n    '00D4': ['SH', '1', 'WedgeID'],\n    '00D5': ['IS', '1', 'WedgeAngle'],\n    '00D6': ['DS', '1', 'WedgeFactor'],\n    '00D7': ['FL', '1', 'TotalWedgeTrayWaterEquivalentThickness'],\n    '00D8': ['DS', '1', 'WedgeOrientation'],\n    '00D9': ['FL', '1', 'IsocenterToWedgeTrayDistance'],\n    '00DA': ['DS', '1', 'SourceToWedgeTrayDistance'],\n    '00DB': ['FL', '1', 'WedgeThinEdgePosition'],\n    '00DC': ['SH', '1', 'BolusID'],\n    '00DD': ['ST', '1', 'BolusDescription'],\n    '00DE': ['DS', '1', 'EffectiveWedgeAngle'],\n    '00E0': ['IS', '1', 'NumberOfCompensators'],\n    '00E1': ['SH', '1', 'MaterialID'],\n    '00E2': ['DS', '1', 'TotalCompensatorTrayFactor'],\n    '00E3': ['SQ', '1', 'CompensatorSequence'],\n    '00E4': ['IS', '1', 'CompensatorNumber'],\n    '00E5': ['SH', '1', 'CompensatorID'],\n    '00E6': ['DS', '1', 'SourceToCompensatorTrayDistance'],\n    '00E7': ['IS', '1', 'CompensatorRows'],\n    '00E8': ['IS', '1', 'CompensatorColumns'],\n    '00E9': ['DS', '2', 'CompensatorPixelSpacing'],\n    '00EA': ['DS', '2', 'CompensatorPosition'],\n    '00EB': ['DS', '1-n', 'CompensatorTransmissionData'],\n    '00EC': ['DS', '1-n', 'CompensatorThicknessData'],\n    '00ED': ['IS', '1', 'NumberOfBoli'],\n    '00EE': ['CS', '1', 'CompensatorType'],\n    '00EF': ['SH', '1', 'CompensatorTrayID'],\n    '00F0': ['IS', '1', 'NumberOfBlocks'],\n    '00F2': ['DS', '1', 'TotalBlockTrayFactor'],\n    '00F3': ['FL', '1', 'TotalBlockTrayWaterEquivalentThickness'],\n    '00F4': ['SQ', '1', 'BlockSequence'],\n    '00F5': ['SH', '1', 'BlockTrayID'],\n    '00F6': ['DS', '1', 'SourceToBlockTrayDistance'],\n    '00F7': ['FL', '1', 'IsocenterToBlockTrayDistance'],\n    '00F8': ['CS', '1', 'BlockType'],\n    '00F9': ['LO', '1', 'AccessoryCode'],\n    '00FA': ['CS', '1', 'BlockDivergence'],\n    '00FB': ['CS', '1', 'BlockMountingPosition'],\n    '00FC': ['IS', '1', 'BlockNumber'],\n    '00FE': ['LO', '1', 'BlockName'],\n    '0100': ['DS', '1', 'BlockThickness'],\n    '0102': ['DS', '1', 'BlockTransmission'],\n    '0104': ['IS', '1', 'BlockNumberOfPoints'],\n    '0106': ['DS', '2-2n', 'BlockData'],\n    '0107': ['SQ', '1', 'ApplicatorSequence'],\n    '0108': ['SH', '1', 'ApplicatorID'],\n    '0109': ['CS', '1', 'ApplicatorType'],\n    '010A': ['LO', '1', 'ApplicatorDescription'],\n    '010C': ['DS', '1', 'CumulativeDoseReferenceCoefficient'],\n    '010E': ['DS', '1', 'FinalCumulativeMetersetWeight'],\n    '0110': ['IS', '1', 'NumberOfControlPoints'],\n    '0111': ['SQ', '1', 'ControlPointSequence'],\n    '0112': ['IS', '1', 'ControlPointIndex'],\n    '0114': ['DS', '1', 'NominalBeamEnergy'],\n    '0115': ['DS', '1', 'DoseRateSet'],\n    '0116': ['SQ', '1', 'WedgePositionSequence'],\n    '0118': ['CS', '1', 'WedgePosition'],\n    '011A': ['SQ', '1', 'BeamLimitingDevicePositionSequence'],\n    '011C': ['DS', '2-2n', 'LeafJawPositions'],\n    '011E': ['DS', '1', 'GantryAngle'],\n    '011F': ['CS', '1', 'GantryRotationDirection'],\n    '0120': ['DS', '1', 'BeamLimitingDeviceAngle'],\n    '0121': ['CS', '1', 'BeamLimitingDeviceRotationDirection'],\n    '0122': ['DS', '1', 'PatientSupportAngle'],\n    '0123': ['CS', '1', 'PatientSupportRotationDirection'],\n    '0124': ['DS', '1', 'TableTopEccentricAxisDistance'],\n    '0125': ['DS', '1', 'TableTopEccentricAngle'],\n    '0126': ['CS', '1', 'TableTopEccentricRotationDirection'],\n    '0128': ['DS', '1', 'TableTopVerticalPosition'],\n    '0129': ['DS', '1', 'TableTopLongitudinalPosition'],\n    '012A': ['DS', '1', 'TableTopLateralPosition'],\n    '012C': ['DS', '3', 'IsocenterPosition'],\n    '012E': ['DS', '3', 'SurfaceEntryPoint'],\n    '0130': ['DS', '1', 'SourceToSurfaceDistance'],\n    '0131': ['FL', '1', 'AverageBeamDosePointSourceToExternalContourDistance'],\n    '0132': ['FL', '1', 'SourceToExternalContourDistance'],\n    '0133': ['FL', '3', 'ExternalContourEntryPoint'],\n    '0134': ['DS', '1', 'CumulativeMetersetWeight'],\n    '0140': ['FL', '1', 'TableTopPitchAngle'],\n    '0142': ['CS', '1', 'TableTopPitchRotationDirection'],\n    '0144': ['FL', '1', 'TableTopRollAngle'],\n    '0146': ['CS', '1', 'TableTopRollRotationDirection'],\n    '0148': ['FL', '1', 'HeadFixationAngle'],\n    '014A': ['FL', '1', 'GantryPitchAngle'],\n    '014C': ['CS', '1', 'GantryPitchRotationDirection'],\n    '014E': ['FL', '1', 'GantryPitchAngleTolerance'],\n    '0150': ['CS', '1', 'FixationEye'],\n    '0151': ['DS', '1', 'ChairHeadFramePosition'],\n    '0152': ['DS', '1', 'HeadFixationAngleTolerance'],\n    '0153': ['DS', '1', 'ChairHeadFramePositionTolerance'],\n    '0154': ['DS', '1', 'FixationLightAzimuthalAngleTolerance'],\n    '0155': ['DS', '1', 'FixationLightPolarAngleTolerance'],\n    '0180': ['SQ', '1', 'PatientSetupSequence'],\n    '0182': ['IS', '1', 'PatientSetupNumber'],\n    '0183': ['LO', '1', 'PatientSetupLabel'],\n    '0184': ['LO', '1', 'PatientAdditionalPosition'],\n    '0190': ['SQ', '1', 'FixationDeviceSequence'],\n    '0192': ['CS', '1', 'FixationDeviceType'],\n    '0194': ['SH', '1', 'FixationDeviceLabel'],\n    '0196': ['ST', '1', 'FixationDeviceDescription'],\n    '0198': ['SH', '1', 'FixationDevicePosition'],\n    '0199': ['FL', '1', 'FixationDevicePitchAngle'],\n    '019A': ['FL', '1', 'FixationDeviceRollAngle'],\n    '01A0': ['SQ', '1', 'ShieldingDeviceSequence'],\n    '01A2': ['CS', '1', 'ShieldingDeviceType'],\n    '01A4': ['SH', '1', 'ShieldingDeviceLabel'],\n    '01A6': ['ST', '1', 'ShieldingDeviceDescription'],\n    '01A8': ['SH', '1', 'ShieldingDevicePosition'],\n    '01B0': ['CS', '1', 'SetupTechnique'],\n    '01B2': ['ST', '1', 'SetupTechniqueDescription'],\n    '01B4': ['SQ', '1', 'SetupDeviceSequence'],\n    '01B6': ['CS', '1', 'SetupDeviceType'],\n    '01B8': ['SH', '1', 'SetupDeviceLabel'],\n    '01BA': ['ST', '1', 'SetupDeviceDescription'],\n    '01BC': ['DS', '1', 'SetupDeviceParameter'],\n    '01D0': ['ST', '1', 'SetupReferenceDescription'],\n    '01D2': ['DS', '1', 'TableTopVerticalSetupDisplacement'],\n    '01D4': ['DS', '1', 'TableTopLongitudinalSetupDisplacement'],\n    '01D6': ['DS', '1', 'TableTopLateralSetupDisplacement'],\n    '0200': ['CS', '1', 'BrachyTreatmentTechnique'],\n    '0202': ['CS', '1', 'BrachyTreatmentType'],\n    '0206': ['SQ', '1', 'TreatmentMachineSequence'],\n    '0210': ['SQ', '1', 'SourceSequence'],\n    '0212': ['IS', '1', 'SourceNumber'],\n    '0214': ['CS', '1', 'SourceType'],\n    '0216': ['LO', '1', 'SourceManufacturer'],\n    '0218': ['DS', '1', 'ActiveSourceDiameter'],\n    '021A': ['DS', '1', 'ActiveSourceLength'],\n    '021B': ['SH', '1', 'SourceModelID'],\n    '021C': ['LO', '1', 'SourceDescription'],\n    '0222': ['DS', '1', 'SourceEncapsulationNominalThickness'],\n    '0224': ['DS', '1', 'SourceEncapsulationNominalTransmission'],\n    '0226': ['LO', '1', 'SourceIsotopeName'],\n    '0228': ['DS', '1', 'SourceIsotopeHalfLife'],\n    '0229': ['CS', '1', 'SourceStrengthUnits'],\n    '022A': ['DS', '1', 'ReferenceAirKermaRate'],\n    '022B': ['DS', '1', 'SourceStrength'],\n    '022C': ['DA', '1', 'SourceStrengthReferenceDate'],\n    '022E': ['TM', '1', 'SourceStrengthReferenceTime'],\n    '0230': ['SQ', '1', 'ApplicationSetupSequence'],\n    '0232': ['CS', '1', 'ApplicationSetupType'],\n    '0234': ['IS', '1', 'ApplicationSetupNumber'],\n    '0236': ['LO', '1', 'ApplicationSetupName'],\n    '0238': ['LO', '1', 'ApplicationSetupManufacturer'],\n    '0240': ['IS', '1', 'TemplateNumber'],\n    '0242': ['SH', '1', 'TemplateType'],\n    '0244': ['LO', '1', 'TemplateName'],\n    '0250': ['DS', '1', 'TotalReferenceAirKerma'],\n    '0260': ['SQ', '1', 'BrachyAccessoryDeviceSequence'],\n    '0262': ['IS', '1', 'BrachyAccessoryDeviceNumber'],\n    '0263': ['SH', '1', 'BrachyAccessoryDeviceID'],\n    '0264': ['CS', '1', 'BrachyAccessoryDeviceType'],\n    '0266': ['LO', '1', 'BrachyAccessoryDeviceName'],\n    '026A': ['DS', '1', 'BrachyAccessoryDeviceNominalThickness'],\n    '026C': ['DS', '1', 'BrachyAccessoryDeviceNominalTransmission'],\n    '0271': ['DS', '1', 'ChannelEffectiveLength'],\n    '0272': ['DS', '1', 'ChannelInnerLength'],\n    '0273': ['SH', '1', 'AfterloaderChannelID'],\n    '0274': ['DS', '1', 'SourceApplicatorTipLength'],\n    '0280': ['SQ', '1', 'ChannelSequence'],\n    '0282': ['IS', '1', 'ChannelNumber'],\n    '0284': ['DS', '1', 'ChannelLength'],\n    '0286': ['DS', '1', 'ChannelTotalTime'],\n    '0288': ['CS', '1', 'SourceMovementType'],\n    '028A': ['IS', '1', 'NumberOfPulses'],\n    '028C': ['DS', '1', 'PulseRepetitionInterval'],\n    '0290': ['IS', '1', 'SourceApplicatorNumber'],\n    '0291': ['SH', '1', 'SourceApplicatorID'],\n    '0292': ['CS', '1', 'SourceApplicatorType'],\n    '0294': ['LO', '1', 'SourceApplicatorName'],\n    '0296': ['DS', '1', 'SourceApplicatorLength'],\n    '0298': ['LO', '1', 'SourceApplicatorManufacturer'],\n    '029C': ['DS', '1', 'SourceApplicatorWallNominalThickness'],\n    '029E': ['DS', '1', 'SourceApplicatorWallNominalTransmission'],\n    '02A0': ['DS', '1', 'SourceApplicatorStepSize'],\n    '02A1': ['IS', '1', 'ApplicatorShapeReferencedROINumber'],\n    '02A2': ['IS', '1', 'TransferTubeNumber'],\n    '02A4': ['DS', '1', 'TransferTubeLength'],\n    '02B0': ['SQ', '1', 'ChannelShieldSequence'],\n    '02B2': ['IS', '1', 'ChannelShieldNumber'],\n    '02B3': ['SH', '1', 'ChannelShieldID'],\n    '02B4': ['LO', '1', 'ChannelShieldName'],\n    '02B8': ['DS', '1', 'ChannelShieldNominalThickness'],\n    '02BA': ['DS', '1', 'ChannelShieldNominalTransmission'],\n    '02C8': ['DS', '1', 'FinalCumulativeTimeWeight'],\n    '02D0': ['SQ', '1', 'BrachyControlPointSequence'],\n    '02D2': ['DS', '1', 'ControlPointRelativePosition'],\n    '02D4': ['DS', '3', 'ControlPoint3DPosition'],\n    '02D6': ['DS', '1', 'CumulativeTimeWeight'],\n    '02E0': ['CS', '1', 'CompensatorDivergence'],\n    '02E1': ['CS', '1', 'CompensatorMountingPosition'],\n    '02E2': ['DS', '1-n', 'SourceToCompensatorDistance'],\n    '02E3': ['FL', '1', 'TotalCompensatorTrayWaterEquivalentThickness'],\n    '02E4': ['FL', '1', 'IsocenterToCompensatorTrayDistance'],\n    '02E5': ['FL', '1', 'CompensatorColumnOffset'],\n    '02E6': ['FL', '1-n', 'IsocenterToCompensatorDistances'],\n    '02E7': ['FL', '1', 'CompensatorRelativeStoppingPowerRatio'],\n    '02E8': ['FL', '1', 'CompensatorMillingToolDiameter'],\n    '02EA': ['SQ', '1', 'IonRangeCompensatorSequence'],\n    '02EB': ['LT', '1', 'CompensatorDescription'],\n    '0302': ['IS', '1', 'RadiationMassNumber'],\n    '0304': ['IS', '1', 'RadiationAtomicNumber'],\n    '0306': ['SS', '1', 'RadiationChargeState'],\n    '0308': ['CS', '1', 'ScanMode'],\n    '0309': ['CS', '1', 'ModulatedScanModeType'],\n    '030A': ['FL', '2', 'VirtualSourceAxisDistances'],\n    '030C': ['SQ', '1', 'SnoutSequence'],\n    '030D': ['FL', '1', 'SnoutPosition'],\n    '030F': ['SH', '1', 'SnoutID'],\n    '0312': ['IS', '1', 'NumberOfRangeShifters'],\n    '0314': ['SQ', '1', 'RangeShifterSequence'],\n    '0316': ['IS', '1', 'RangeShifterNumber'],\n    '0318': ['SH', '1', 'RangeShifterID'],\n    '0320': ['CS', '1', 'RangeShifterType'],\n    '0322': ['LO', '1', 'RangeShifterDescription'],\n    '0330': ['IS', '1', 'NumberOfLateralSpreadingDevices'],\n    '0332': ['SQ', '1', 'LateralSpreadingDeviceSequence'],\n    '0334': ['IS', '1', 'LateralSpreadingDeviceNumber'],\n    '0336': ['SH', '1', 'LateralSpreadingDeviceID'],\n    '0338': ['CS', '1', 'LateralSpreadingDeviceType'],\n    '033A': ['LO', '1', 'LateralSpreadingDeviceDescription'],\n    '033C': ['FL', '1', 'LateralSpreadingDeviceWaterEquivalentThickness'],\n    '0340': ['IS', '1', 'NumberOfRangeModulators'],\n    '0342': ['SQ', '1', 'RangeModulatorSequence'],\n    '0344': ['IS', '1', 'RangeModulatorNumber'],\n    '0346': ['SH', '1', 'RangeModulatorID'],\n    '0348': ['CS', '1', 'RangeModulatorType'],\n    '034A': ['LO', '1', 'RangeModulatorDescription'],\n    '034C': ['SH', '1', 'BeamCurrentModulationID'],\n    '0350': ['CS', '1', 'PatientSupportType'],\n    '0352': ['SH', '1', 'PatientSupportID'],\n    '0354': ['LO', '1', 'PatientSupportAccessoryCode'],\n    '0355': ['LO', '1', 'TrayAccessoryCode'],\n    '0356': ['FL', '1', 'FixationLightAzimuthalAngle'],\n    '0358': ['FL', '1', 'FixationLightPolarAngle'],\n    '035A': ['FL', '1', 'MetersetRate'],\n    '0360': ['SQ', '1', 'RangeShifterSettingsSequence'],\n    '0362': ['LO', '1', 'RangeShifterSetting'],\n    '0364': ['FL', '1', 'IsocenterToRangeShifterDistance'],\n    '0366': ['FL', '1', 'RangeShifterWaterEquivalentThickness'],\n    '0370': ['SQ', '1', 'LateralSpreadingDeviceSettingsSequence'],\n    '0372': ['LO', '1', 'LateralSpreadingDeviceSetting'],\n    '0374': ['FL', '1', 'IsocenterToLateralSpreadingDeviceDistance'],\n    '0380': ['SQ', '1', 'RangeModulatorSettingsSequence'],\n    '0382': ['FL', '1', 'RangeModulatorGatingStartValue'],\n    '0384': ['FL', '1', 'RangeModulatorGatingStopValue'],\n    '0386': ['FL', '1', 'RangeModulatorGatingStartWaterEquivalentThickness'],\n    '0388': ['FL', '1', 'RangeModulatorGatingStopWaterEquivalentThickness'],\n    '038A': ['FL', '1', 'IsocenterToRangeModulatorDistance'],\n    '038F': ['FL', '1-n', 'ScanSpotTimeOffset'],\n    '0390': ['SH', '1', 'ScanSpotTuneID'],\n    '0391': ['IS', '1-n', 'ScanSpotPrescribedIndices'],\n    '0392': ['IS', '1', 'NumberOfScanSpotPositions'],\n    '0393': ['CS', '1', 'ScanSpotReordered'],\n    '0394': ['FL', '1-n', 'ScanSpotPositionMap'],\n    '0395': ['CS', '1', 'ScanSpotReorderingAllowed'],\n    '0396': ['FL', '1-n', 'ScanSpotMetersetWeights'],\n    '0398': ['FL', '2', 'ScanningSpotSize'],\n    '0399': ['FL', '2-2n', 'ScanSpotSizesDelivered'],\n    '039A': ['IS', '1', 'NumberOfPaintings'],\n    '03A0': ['SQ', '1', 'IonToleranceTableSequence'],\n    '03A2': ['SQ', '1', 'IonBeamSequence'],\n    '03A4': ['SQ', '1', 'IonBeamLimitingDeviceSequence'],\n    '03A6': ['SQ', '1', 'IonBlockSequence'],\n    '03A8': ['SQ', '1', 'IonControlPointSequence'],\n    '03AA': ['SQ', '1', 'IonWedgeSequence'],\n    '03AC': ['SQ', '1', 'IonWedgePositionSequence'],\n    '0401': ['SQ', '1', 'ReferencedSetupImageSequence'],\n    '0402': ['ST', '1', 'SetupImageComment'],\n    '0410': ['SQ', '1', 'MotionSynchronizationSequence'],\n    '0412': ['FL', '3', 'ControlPointOrientation'],\n    '0420': ['SQ', '1', 'GeneralAccessorySequence'],\n    '0421': ['SH', '1', 'GeneralAccessoryID'],\n    '0422': ['ST', '1', 'GeneralAccessoryDescription'],\n    '0423': ['CS', '1', 'GeneralAccessoryType'],\n    '0424': ['IS', '1', 'GeneralAccessoryNumber'],\n    '0425': ['FL', '1', 'SourceToGeneralAccessoryDistance'],\n    '0426': ['DS', '1', 'IsocenterToGeneralAccessoryDistance'],\n    '0431': ['SQ', '1', 'ApplicatorGeometrySequence'],\n    '0432': ['CS', '1', 'ApplicatorApertureShape'],\n    '0433': ['FL', '1', 'ApplicatorOpening'],\n    '0434': ['FL', '1', 'ApplicatorOpeningX'],\n    '0435': ['FL', '1', 'ApplicatorOpeningY'],\n    '0436': ['FL', '1', 'SourceToApplicatorMountingPositionDistance'],\n    '0440': ['IS', '1', 'NumberOfBlockSlabItems'],\n    '0441': ['SQ', '1', 'BlockSlabSequence'],\n    '0442': ['DS', '1', 'BlockSlabThickness'],\n    '0443': ['US', '1', 'BlockSlabNumber'],\n    '0450': ['SQ', '1', 'DeviceMotionControlSequence'],\n    '0451': ['CS', '1', 'DeviceMotionExecutionMode'],\n    '0452': ['CS', '1', 'DeviceMotionObservationMode'],\n    '0453': ['SQ', '1', 'DeviceMotionParameterCodeSequence'],\n    '0501': ['FL', '1', 'DistalDepthFraction'],\n    '0502': ['FL', '1', 'DistalDepth'],\n    '0503': ['FL', '2', 'NominalRangeModulationFractions'],\n    '0504': ['FL', '2', 'NominalRangeModulatedRegionDepths'],\n    '0505': ['SQ', '1', 'DepthDoseParametersSequence'],\n    '0506': ['SQ', '1', 'DeliveredDepthDoseParametersSequence'],\n    '0507': ['FL', '1', 'DeliveredDistalDepthFraction'],\n    '0508': ['FL', '1', 'DeliveredDistalDepth'],\n    '0509': ['FL', '2', 'DeliveredNominalRangeModulationFractions'],\n    '0510': ['FL', '2', 'DeliveredNominalRangeModulatedRegionDepths'],\n    '0511': ['CS', '1', 'DeliveredReferenceDoseDefinition'],\n    '0512': ['CS', '1', 'ReferenceDoseDefinition'],\n    '0600': ['US', '1', 'RTControlPointIndex'],\n    '0601': ['US', '1', 'RadiationGenerationModeIndex'],\n    '0602': ['US', '1', 'ReferencedDefinedDeviceIndex'],\n    '0603': ['US', '1', 'RadiationDoseIdentificationIndex'],\n    '0604': ['US', '1', 'NumberOfRTControlPoints'],\n    '0605': ['US', '1', 'ReferencedRadiationGenerationModeIndex'],\n    '0606': ['US', '1', 'TreatmentPositionIndex'],\n    '0607': ['US', '1', 'ReferencedDeviceIndex'],\n    '0608': ['LO', '1', 'TreatmentPositionGroupLabel'],\n    '0609': ['UI', '1', 'TreatmentPositionGroupUID'],\n    '060A': ['SQ', '1', 'TreatmentPositionGroupSequence'],\n    '060B': ['US', '1', 'ReferencedTreatmentPositionIndex'],\n    '060C': ['US', '1', 'ReferencedRadiationDoseIdentificationIndex'],\n    '060D': ['FD', '1', 'RTAccessoryHolderWaterEquivalentThickness'],\n    '060E': ['US', '1', 'ReferencedRTAccessoryHolderDeviceIndex'],\n    '060F': ['CS', '1', 'RTAccessoryHolderSlotExistenceFlag'],\n    '0610': ['SQ', '1', 'RTAccessoryHolderSlotSequence'],\n    '0611': ['LO', '1', 'RTAccessoryHolderSlotID'],\n    '0612': ['FD', '1', 'RTAccessoryHolderSlotDistance'],\n    '0613': ['FD', '1', 'RTAccessorySlotDistance'],\n    '0614': ['SQ', '1', 'RTAccessoryHolderDefinitionSequence'],\n    '0615': ['LO', '1', 'RTAccessoryDeviceSlotID'],\n    '0616': ['SQ', '1', 'RTRadiationSequence'],\n    '0617': ['SQ', '1', 'RadiationDoseSequence'],\n    '0618': ['SQ', '1', 'RadiationDoseIdentificationSequence'],\n    '0619': ['LO', '1', 'RadiationDoseIdentificationLabel'],\n    '061A': ['CS', '1', 'ReferenceDoseType'],\n    '061B': ['CS', '1', 'PrimaryDoseValueIndicator'],\n    '061C': ['SQ', '1', 'DoseValuesSequence'],\n    '061D': ['CS', '1-n', 'DoseValuePurpose'],\n    '061E': ['FD', '3', 'ReferenceDosePointCoordinates'],\n    '061F': ['SQ', '1', 'RadiationDoseValuesParametersSequence'],\n    '0620': ['SQ', '1', 'MetersetToDoseMappingSequence'],\n    '0621': ['SQ', '1', 'ExpectedInVivoMeasurementValuesSequence'],\n    '0622': ['US', '1', 'ExpectedInVivoMeasurementValueIndex'],\n    '0623': ['LO', '1', 'RadiationDoseInVivoMeasurementLabel'],\n    '0624': ['FD', '2', 'RadiationDoseCentralAxisDisplacement'],\n    '0625': ['FD', '1', 'RadiationDoseValue'],\n    '0626': ['FD', '1', 'RadiationDoseSourceToSkinDistance'],\n    '0627': ['FD', '3', 'RadiationDoseMeasurementPointCoordinates'],\n    '0628': ['FD', '1', 'RadiationDoseSourceToExternalContourDistance'],\n    '0629': ['SQ', '1', 'RTToleranceSetSequence'],\n    '062A': ['LO', '1', 'RTToleranceSetLabel'],\n    '062B': ['SQ', '1', 'AttributeToleranceValuesSequence'],\n    '062C': ['FD', '1', 'ToleranceValue'],\n    '062D': ['SQ', '1', 'PatientSupportPositionToleranceSequence'],\n    '062E': ['FD', '1', 'TreatmentTimeLimit'],\n    '062F': ['SQ', '1', 'CArmPhotonElectronControlPointSequence'],\n    '0630': ['SQ', '1', 'ReferencedRTRadiationSequence'],\n    '0631': ['SQ', '1', 'ReferencedRTInstanceSequence'],\n    '0632': ['SQ', '1', 'ReferencedRTPatientSetupSequence'],\n    '0634': ['FD', '1', 'SourceToPatientSurfaceDistance'],\n    '0635': ['SQ', '1', 'TreatmentMachineSpecialModeCodeSequence'],\n    '0636': ['US', '1', 'IntendedNumberOfFractions'],\n    '0637': ['CS', '1', 'RTRadiationSetIntent'],\n    '0638': ['CS', '1', 'RTRadiationPhysicalAndGeometricContentDetailFlag'],\n    '0639': ['CS', '1', 'RTRecordFlag'],\n    '063A': ['SQ', '1', 'TreatmentDeviceIdentificationSequence'],\n    '063B': ['SQ', '1', 'ReferencedRTPhysicianIntentSequence'],\n    '063C': ['FD', '1', 'CumulativeMeterset'],\n    '063D': ['FD', '1', 'DeliveryRate'],\n    '063E': ['SQ', '1', 'DeliveryRateUnitSequence'],\n    '063F': ['SQ', '1', 'TreatmentPositionSequence'],\n    '0640': ['FD', '1', 'RadiationSourceAxisDistance'],\n    '0641': ['US', '1', 'NumberOfRTBeamLimitingDevices'],\n    '0642': ['FD', '1', 'RTBeamLimitingDeviceProximalDistance'],\n    '0643': ['FD', '1', 'RTBeamLimitingDeviceDistalDistance'],\n    '0644': ['SQ', '1', 'ParallelRTBeamDelimiterDeviceOrientationLabelCodeSequence'],\n    '0645': ['FD', '1', 'BeamModifierOrientationAngle'],\n    '0646': ['SQ', '1', 'FixedRTBeamDelimiterDeviceSequence'],\n    '0647': ['SQ', '1', 'ParallelRTBeamDelimiterDeviceSequence'],\n    '0648': ['US', '1', 'NumberOfParallelRTBeamDelimiters'],\n    '0649': ['FD', '2-n', 'ParallelRTBeamDelimiterBoundaries'],\n    '064A': ['FD', '2-n', 'ParallelRTBeamDelimiterPositions'],\n    '064B': ['FD', '2', 'RTBeamLimitingDeviceOffset'],\n    '064C': ['SQ', '1', 'RTBeamDelimiterGeometrySequence'],\n    '064D': ['SQ', '1', 'RTBeamLimitingDeviceDefinitionSequence'],\n    '064E': ['CS', '1', 'ParallelRTBeamDelimiterOpeningMode'],\n    '064F': ['CS', '1-n', 'ParallelRTBeamDelimiterLeafMountingSide'],\n    '0650': ['UI', '1', 'PatientSetupUID'],\n    '0651': ['SQ', '1', 'WedgeDefinitionSequence'],\n    '0652': ['FD', '1', 'RadiationBeamWedgeAngle'],\n    '0653': ['FD', '1', 'RadiationBeamWedgeThinEdgeDistance'],\n    '0654': ['FD', '1', 'RadiationBeamEffectiveWedgeAngle'],\n    '0655': ['US', '1', 'NumberOfWedgePositions'],\n    '0656': ['SQ', '1', 'RTBeamLimitingDeviceOpeningSequence'],\n    '0657': ['US', '1', 'NumberOfRTBeamLimitingDeviceOpenings'],\n    '0658': ['SQ', '1', 'RadiationDosimeterUnitSequence'],\n    '0659': ['SQ', '1', 'RTDeviceDistanceReferenceLocationCodeSequence'],\n    '065A': ['SQ', '1', 'RadiationDeviceConfigurationAndCommissioningKeySequence'],\n    '065B': ['SQ', '1', 'PatientSupportPositionParameterSequence'],\n    '065C': ['CS', '1', 'PatientSupportPositionSpecificationMethod'],\n    '065D': ['SQ', '1', 'PatientSupportPositionDeviceParameterSequence'],\n    '065E': ['US', '1', 'DeviceOrderIndex'],\n    '065F': ['US', '1', 'PatientSupportPositionParameterOrderIndex'],\n    '0660': ['SQ', '1', 'PatientSupportPositionDeviceToleranceSequence'],\n    '0661': ['US', '1', 'PatientSupportPositionToleranceOrderIndex'],\n    '0662': ['SQ', '1', 'CompensatorDefinitionSequence'],\n    '0663': ['CS', '1', 'CompensatorMapOrientation'],\n    '0664': ['OF', '1', 'CompensatorProximalThicknessMap'],\n    '0665': ['OF', '1', 'CompensatorDistalThicknessMap'],\n    '0666': ['FD', '1', 'CompensatorBasePlaneOffset'],\n    '0667': ['SQ', '1', 'CompensatorShapeFabricationCodeSequence'],\n    '0668': ['SQ', '1', 'CompensatorShapeSequence'],\n    '0669': ['FD', '1', 'RadiationBeamCompensatorMillingToolDiameter'],\n    '066A': ['SQ', '1', 'BlockDefinitionSequence'],\n    '066B': ['OF', '1', 'BlockEdgeData'],\n    '066C': ['CS', '1', 'BlockOrientation'],\n    '066D': ['FD', '1', 'RadiationBeamBlockThickness'],\n    '066E': ['FD', '1', 'RadiationBeamBlockSlabThickness'],\n    '066F': ['SQ', '1', 'BlockEdgeDataSequence'],\n    '0670': ['US', '1', 'NumberOfRTAccessoryHolders'],\n    '0671': ['SQ', '1', 'GeneralAccessoryDefinitionSequence'],\n    '0672': ['US', '1', 'NumberOfGeneralAccessories'],\n    '0673': ['SQ', '1', 'BolusDefinitionSequence'],\n    '0674': ['US', '1', 'NumberOfBoluses'],\n    '0675': ['UI', '1', 'EquipmentFrameOfReferenceUID'],\n    '0676': ['ST', '1', 'EquipmentFrameOfReferenceDescription'],\n    '0677': ['SQ', '1', 'EquipmentReferencePointCoordinatesSequence'],\n    '0678': ['SQ', '1', 'EquipmentReferencePointCodeSequence'],\n    '0679': ['FD', '1', 'RTBeamLimitingDeviceAngle'],\n    '067A': ['FD', '1', 'SourceRollAngle'],\n    '067B': ['SQ', '1', 'RadiationGenerationModeSequence'],\n    '067C': ['SH', '1', 'RadiationGenerationModeLabel'],\n    '067D': ['ST', '1', 'RadiationGenerationModeDescription'],\n    '067E': ['SQ', '1', 'RadiationGenerationModeMachineCodeSequence'],\n    '067F': ['SQ', '1', 'RadiationTypeCodeSequence'],\n    '0680': ['DS', '1', 'NominalEnergy'],\n    '0681': ['DS', '1', 'MinimumNominalEnergy'],\n    '0682': ['DS', '1', 'MaximumNominalEnergy'],\n    '0683': ['SQ', '1', 'RadiationFluenceModifierCodeSequence'],\n    '0684': ['SQ', '1', 'EnergyUnitCodeSequence'],\n    '0685': ['US', '1', 'NumberOfRadiationGenerationModes'],\n    '0686': ['SQ', '1', 'PatientSupportDevicesSequence'],\n    '0687': ['US', '1', 'NumberOfPatientSupportDevices'],\n    '0688': ['FD', '1', 'RTBeamModifierDefinitionDistance'],\n    '0689': ['SQ', '1', 'BeamAreaLimitSequence'],\n    '068A': ['SQ', '1', 'ReferencedRTPrescriptionSequence'],\n    '0700': ['UI', '1', 'TreatmentSessionUID'],\n    '0701': ['CS', '1', 'RTRadiationUsage'],\n    '0702': ['SQ', '1', 'ReferencedRTRadiationSetSequence'],\n    '0703': ['SQ', '1', 'ReferencedRTRadiationRecordSequence'],\n    '0704': ['US', '1', 'RTRadiationSetDeliveryNumber'],\n    '0705': ['US', '1', 'ClinicalFractionNumber'],\n    '0706': ['CS', '1', 'RTTreatmentFractionCompletionStatus'],\n    '0707': ['CS', '1', 'RTRadiationSetUsage'],\n    '0708': ['CS', '1', 'TreatmentDeliveryContinuationFlag'],\n    '0709': ['CS', '1', 'TreatmentRecordContentOrigin'],\n    '0714': ['CS', '1', 'RTTreatmentTerminationStatus'],\n    '0715': ['SQ', '1', 'RTTreatmentTerminationReasonCodeSequence'],\n    '0716': ['SQ', '1', 'MachineSpecificTreatmentTerminationCodeSequence'],\n    '0722': ['SQ', '1', 'RTRadiationSalvageRecordControlPointSequence'],\n    '0723': ['CS', '1', 'StartingMetersetValueKnownFlag'],\n    '0730': ['ST', '1', 'TreatmentTerminationDescription'],\n    '0731': ['SQ', '1', 'TreatmentToleranceViolationSequence'],\n    '0732': ['CS', '1', 'TreatmentToleranceViolationCategory'],\n    '0733': ['SQ', '1', 'TreatmentToleranceViolationAttributeSequence'],\n    '0734': ['ST', '1', 'TreatmentToleranceViolationDescription'],\n    '0735': ['ST', '1', 'TreatmentToleranceViolationIdentification'],\n    '0736': ['DT', '1', 'TreatmentToleranceViolationDateTime'],\n    '073A': ['DT', '1', 'RecordedRTControlPointDateTime'],\n    '073B': ['US', '1', 'ReferencedRadiationRTControlPointIndex'],\n    '073E': ['SQ', '1', 'AlternateValueSequence'],\n    '073F': ['SQ', '1', 'ConfirmationSequence'],\n    '0740': ['SQ', '1', 'InterlockSequence'],\n    '0741': ['DT', '1', 'InterlockDateTime'],\n    '0742': ['ST', '1', 'InterlockDescription'],\n    '0743': ['SQ', '1', 'InterlockOriginatingDeviceSequence'],\n    '0744': ['SQ', '1', 'InterlockCodeSequence'],\n    '0745': ['SQ', '1', 'InterlockResolutionCodeSequence'],\n    '0746': ['SQ', '1', 'InterlockResolutionUserSequence'],\n    '0760': ['DT', '1', 'OverrideDateTime'],\n    '0761': ['SQ', '1', 'TreatmentToleranceViolationTypeCodeSequence'],\n    '0762': ['SQ', '1', 'TreatmentToleranceViolationCauseCodeSequence'],\n    '0772': ['SQ', '1', 'MeasuredMetersetToDoseMappingSequence'],\n    '0773': ['US', '1', 'ReferencedExpectedInVivoMeasurementValueIndex'],\n    '0774': ['SQ', '1', 'DoseMeasurementDeviceCodeSequence'],\n    '0780': ['SQ', '1', 'AdditionalParameterRecordingInstanceSequence'],\n    '0782': ['US', '1', ''],\n    '0783': ['ST', '1', 'InterlockOriginDescription'],\n    '0784': ['SQ', '1', 'RTPatientPositionScopeSequence'],\n    '0785': ['UI', '1', 'ReferencedTreatmentPositionGroupUID'],\n    '0786': ['US', '1', 'RadiationOrderIndex'],\n    '0787': ['SQ', '1', 'OmittedRadiationSequence'],\n    '0788': ['SQ', '1', 'ReasonForOmissionCodeSequence'],\n    '0789': ['SQ', '1', 'RTDeliveryStartPatientPositionSequence'],\n    '078A': ['SQ', '1', 'RTTreatmentPreparationPatientPositionSequence'],\n    '078B': ['SQ', '1', 'ReferencedRTTreatmentPreparationSequence'],\n    '078C': ['SQ', '1', 'ReferencedPatientSetupPhotoSequence'],\n    '078D': ['SQ', '1', 'PatientTreatmentPreparationMethodCodeSequence'],\n    '078E': ['LT', '1', 'PatientTreatmentPreparationProcedureParameterDescription'],\n    '078F': ['SQ', '1', 'PatientTreatmentPreparationDeviceSequence'],\n    '0790': ['SQ', '1', 'PatientTreatmentPreparationProcedureSequence'],\n    '0791': ['SQ', '1', 'PatientTreatmentPreparationProcedureCodeSequence'],\n    '0792': ['LT', '1', 'PatientTreatmentPreparationMethodDescription'],\n    '0793': ['SQ', '1', 'PatientTreatmentPreparationProcedureParameterSequence'],\n    '0794': ['LT', '1', 'PatientSetupPhotoDescription'],\n    '0795': ['US', '1', 'PatientTreatmentPreparationProcedureIndex'],\n    '0796': ['US', '1', 'ReferencedPatientSetupProcedureIndex'],\n    '0797': ['SQ', '1', 'RTRadiationTaskSequence'],\n    '0798': ['SQ', '1', 'RTPatientPositionDisplacementSequence'],\n    '0799': ['SQ', '1', 'RTPatientPositionSequence'],\n    '079A': ['LO', '1', 'DisplacementReferenceLabel'],\n    '079B': ['FD', '16', 'DisplacementMatrix'],\n    '079C': ['SQ', '1', 'PatientSupportDisplacementSequence'],\n    '079D': ['SQ', '1', 'DisplacementReferenceLocationCodeSequence'],\n    '079E': ['CS', '1', 'RTRadiationSetDeliveryUsage']\n  },\n  '300C': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['SQ', '1', 'ReferencedRTPlanSequence'],\n    '0004': ['SQ', '1', 'ReferencedBeamSequence'],\n    '0006': ['IS', '1', 'ReferencedBeamNumber'],\n    '0007': ['IS', '1', 'ReferencedReferenceImageNumber'],\n    '0008': ['DS', '1', 'StartCumulativeMetersetWeight'],\n    '0009': ['DS', '1', 'EndCumulativeMetersetWeight'],\n    '000A': ['SQ', '1', 'ReferencedBrachyApplicationSetupSequence'],\n    '000C': ['IS', '1', 'ReferencedBrachyApplicationSetupNumber'],\n    '000E': ['IS', '1', 'ReferencedSourceNumber'],\n    '0020': ['SQ', '1', 'ReferencedFractionGroupSequence'],\n    '0022': ['IS', '1', 'ReferencedFractionGroupNumber'],\n    '0040': ['SQ', '1', 'ReferencedVerificationImageSequence'],\n    '0042': ['SQ', '1', 'ReferencedReferenceImageSequence'],\n    '0050': ['SQ', '1', 'ReferencedDoseReferenceSequence'],\n    '0051': ['IS', '1', 'ReferencedDoseReferenceNumber'],\n    '0055': ['SQ', '1', 'BrachyReferencedDoseReferenceSequence'],\n    '0060': ['SQ', '1', 'ReferencedStructureSetSequence'],\n    '006A': ['IS', '1', 'ReferencedPatientSetupNumber'],\n    '0080': ['SQ', '1', 'ReferencedDoseSequence'],\n    '00A0': ['IS', '1', 'ReferencedToleranceTableNumber'],\n    '00B0': ['SQ', '1', 'ReferencedBolusSequence'],\n    '00C0': ['IS', '1', 'ReferencedWedgeNumber'],\n    '00D0': ['IS', '1', 'ReferencedCompensatorNumber'],\n    '00E0': ['IS', '1', 'ReferencedBlockNumber'],\n    '00F0': ['IS', '1', 'ReferencedControlPointIndex'],\n    '00F2': ['SQ', '1', 'ReferencedControlPointSequence'],\n    '00F4': ['IS', '1', 'ReferencedStartControlPointIndex'],\n    '00F6': ['IS', '1', 'ReferencedStopControlPointIndex'],\n    '0100': ['IS', '1', 'ReferencedRangeShifterNumber'],\n    '0102': ['IS', '1', 'ReferencedLateralSpreadingDeviceNumber'],\n    '0104': ['IS', '1', 'ReferencedRangeModulatorNumber'],\n    '0111': ['SQ', '1', 'OmittedBeamTaskSequence'],\n    '0112': ['CS', '1', 'ReasonForOmission'],\n    '0113': ['LO', '1', 'ReasonForOmissionDescription'],\n    '0114': ['SQ', '1', 'PrescriptionOverviewSequence'],\n    '0115': ['FL', '1', 'TotalPrescriptionDose'],\n    '0116': ['SQ', '1', 'PlanOverviewSequence'],\n    '0117': ['US', '1', 'PlanOverviewIndex'],\n    '0118': ['US', '1', 'ReferencedPlanOverviewIndex'],\n    '0119': ['US', '1', 'NumberOfFractionsIncluded'],\n    '0120': ['SQ', '1', 'DoseCalibrationConditionsSequence'],\n    '0121': ['FD', '1', 'AbsorbedDoseToMetersetRatio'],\n    '0122': ['FD', '2', 'DelineatedRadiationFieldSize'],\n    '0123': ['CS', '1', 'DoseCalibrationConditionsVerifiedFlag'],\n    '0124': ['FD', '1', 'CalibrationReferencePointDepth'],\n    '0125': ['SQ', '1', 'GatingBeamHoldTransitionSequence'],\n    '0126': ['CS', '1', 'BeamHoldTransition'],\n    '0127': ['DT', '1', 'BeamHoldTransitionDateTime'],\n    '0128': ['SQ', '1', 'BeamHoldOriginatingDeviceSequence']\n  },\n  '300E': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0002': ['CS', '1', 'ApprovalStatus'],\n    '0004': ['DA', '1', 'ReviewDate'],\n    '0005': ['TM', '1', 'ReviewTime'],\n    '0008': ['PN', '1', 'ReviewerName']\n  },\n  '3010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'RadiobiologicalDoseEffectSequence'],\n    '0002': ['CS', '1', 'RadiobiologicalDoseEffectFlag'],\n    '0003': ['SQ', '1', 'EffectiveDoseCalculationMethodCategoryCodeSequence'],\n    '0004': ['SQ', '1', 'EffectiveDoseCalculationMethodCodeSequence'],\n    '0005': ['LO', '1', 'EffectiveDoseCalculationMethodDescription'],\n    '0006': ['UI', '1', 'ConceptualVolumeUID'],\n    '0007': ['SQ', '1', 'OriginatingSOPInstanceReferenceSequence'],\n    '0008': ['SQ', '1', 'ConceptualVolumeConstituentSequence'],\n    '0009': ['SQ', '1', 'EquivalentConceptualVolumeInstanceReferenceSequence'],\n    '000A': ['SQ', '1', 'EquivalentConceptualVolumesSequence'],\n    '000B': ['UI', '1', 'ReferencedConceptualVolumeUID'],\n    '000C': ['UT', '1', 'ConceptualVolumeCombinationExpression'],\n    '000D': ['US', '1', 'ConceptualVolumeConstituentIndex'],\n    '000E': ['CS', '1', 'ConceptualVolumeCombinationFlag'],\n    '000F': ['ST', '1', 'ConceptualVolumeCombinationDescription'],\n    '0010': ['CS', '1', 'ConceptualVolumeSegmentationDefinedFlag'],\n    '0011': ['SQ', '1', 'ConceptualVolumeSegmentationReferenceSequence'],\n    '0012': ['SQ', '1', 'ConceptualVolumeConstituentSegmentationReferenceSequence'],\n    '0013': ['UI', '1', 'ConstituentConceptualVolumeUID'],\n    '0014': ['SQ', '1', 'DerivationConceptualVolumeSequence'],\n    '0015': ['UI', '1', 'SourceConceptualVolumeUID'],\n    '0016': ['SQ', '1', 'ConceptualVolumeDerivationAlgorithmSequence'],\n    '0017': ['ST', '1', 'ConceptualVolumeDescription'],\n    '0018': ['SQ', '1', 'SourceConceptualVolumeSequence'],\n    '0019': ['SQ', '1', 'AuthorIdentificationSequence'],\n    '001A': ['LO', '1', 'ManufacturerModelVersion'],\n    '001B': ['UC', '1', 'DeviceAlternateIdentifier'],\n    '001C': ['CS', '1', 'DeviceAlternateIdentifierType'],\n    '001D': ['LT', '1', 'DeviceAlternateIdentifierFormat'],\n    '001E': ['LO', '1', 'SegmentationCreationTemplateLabel'],\n    '001F': ['UI', '1', 'SegmentationTemplateUID'],\n    '0020': ['US', '1', 'ReferencedSegmentReferenceIndex'],\n    '0021': ['SQ', '1', 'SegmentReferenceSequence'],\n    '0022': ['US', '1', 'SegmentReferenceIndex'],\n    '0023': ['SQ', '1', 'DirectSegmentReferenceSequence'],\n    '0024': ['SQ', '1', 'CombinationSegmentReferenceSequence'],\n    '0025': ['SQ', '1', 'ConceptualVolumeSequence'],\n    '0026': ['SQ', '1', 'SegmentedRTAccessoryDeviceSequence'],\n    '0027': ['SQ', '1', 'SegmentCharacteristicsSequence'],\n    '0028': ['SQ', '1', 'RelatedSegmentCharacteristicsSequence'],\n    '0029': ['US', '1', 'SegmentCharacteristicsPrecedence'],\n    '002A': ['SQ', '1', 'RTSegmentAnnotationSequence'],\n    '002B': ['SQ', '1', 'SegmentAnnotationCategoryCodeSequence'],\n    '002C': ['SQ', '1', 'SegmentAnnotationTypeCodeSequence'],\n    '002D': ['LO', '1', 'DeviceLabel'],\n    '002E': ['SQ', '1', 'DeviceTypeCodeSequence'],\n    '002F': ['SQ', '1', 'SegmentAnnotationTypeModifierCodeSequence'],\n    '0030': ['SQ', '1', 'PatientEquipmentRelationshipCodeSequence'],\n    '0031': ['UI', '1', 'ReferencedFiducialsUID'],\n    '0032': ['SQ', '1', 'PatientTreatmentOrientationSequence'],\n    '0033': ['SH', '1', 'UserContentLabel'],\n    '0034': ['LO', '1', 'UserContentLongLabel'],\n    '0035': ['SH', '1', 'EntityLabel'],\n    '0036': ['LO', '1', 'EntityName'],\n    '0037': ['ST', '1', 'EntityDescription'],\n    '0038': ['LO', '1', 'EntityLongLabel'],\n    '0039': ['US', '1', 'DeviceIndex'],\n    '003A': ['US', '1', 'RTTreatmentPhaseIndex'],\n    '003B': ['UI', '1', 'RTTreatmentPhaseUID'],\n    '003C': ['US', '1', 'RTPrescriptionIndex'],\n    '003D': ['US', '1', 'RTSegmentAnnotationIndex'],\n    '003E': ['US', '1', 'BasisRTTreatmentPhaseIndex'],\n    '003F': ['US', '1', 'RelatedRTTreatmentPhaseIndex'],\n    '0040': ['US', '1', 'ReferencedRTTreatmentPhaseIndex'],\n    '0041': ['US', '1', 'ReferencedRTPrescriptionIndex'],\n    '0042': ['US', '1', 'ReferencedParentRTPrescriptionIndex'],\n    '0043': ['ST', '1', 'ManufacturerDeviceIdentifier'],\n    '0044': ['SQ', '1', 'InstanceLevelReferencedPerformedProcedureStepSequence'],\n    '0045': ['CS', '1', 'RTTreatmentPhaseIntentPresenceFlag'],\n    '0046': ['CS', '1', 'RadiotherapyTreatmentType'],\n    '0047': ['CS', '1-n', 'TeletherapyRadiationType'],\n    '0048': ['CS', '1-n', 'BrachytherapySourceType'],\n    '0049': ['SQ', '1', 'ReferencedRTTreatmentPhaseSequence'],\n    '004A': ['SQ', '1', 'ReferencedDirectSegmentInstanceSequence'],\n    '004B': ['SQ', '1', 'IntendedRTTreatmentPhaseSequence'],\n    '004C': ['DA', '1', 'IntendedPhaseStartDate'],\n    '004D': ['DA', '1', 'IntendedPhaseEndDate'],\n    '004E': ['SQ', '1', 'RTTreatmentPhaseIntervalSequence'],\n    '004F': ['CS', '1', 'TemporalRelationshipIntervalAnchor'],\n    '0050': ['FD', '1', 'MinimumNumberOfIntervalDays'],\n    '0051': ['FD', '1', 'MaximumNumberOfIntervalDays'],\n    '0052': ['UI', '1-n', 'PertinentSOPClassesInStudy'],\n    '0053': ['UI', '1-n', 'PertinentSOPClassesInSeries'],\n    '0054': ['LO', '1', 'RTPrescriptionLabel'],\n    '0055': ['SQ', '1', 'RTPhysicianIntentPredecessorSequence'],\n    '0056': ['LO', '1', 'RTTreatmentApproachLabel'],\n    '0057': ['SQ', '1', 'RTPhysicianIntentSequence'],\n    '0058': ['US', '1', 'RTPhysicianIntentIndex'],\n    '0059': ['CS', '1', 'RTTreatmentIntentType'],\n    '005A': ['UT', '1', 'RTPhysicianIntentNarrative'],\n    '005B': ['SQ', '1', 'RTProtocolCodeSequence'],\n    '005C': ['ST', '1', 'ReasonForSuperseding'],\n    '005D': ['SQ', '1', 'RTDiagnosisCodeSequence'],\n    '005E': ['US', '1', 'ReferencedRTPhysicianIntentIndex'],\n    '005F': ['SQ', '1', 'RTPhysicianIntentInputInstanceSequence'],\n    '0060': ['SQ', '1', 'RTAnatomicPrescriptionSequence'],\n    '0061': ['UT', '1', 'PriorTreatmentDoseDescription'],\n    '0062': ['SQ', '1', 'PriorTreatmentReferenceSequence'],\n    '0063': ['CS', '1', 'DosimetricObjectiveEvaluationScope'],\n    '0064': ['SQ', '1', 'TherapeuticRoleCategoryCodeSequence'],\n    '0065': ['SQ', '1', 'TherapeuticRoleTypeCodeSequence'],\n    '0066': ['US', '1', 'ConceptualVolumeOptimizationPrecedence'],\n    '0067': ['SQ', '1', 'ConceptualVolumeCategoryCodeSequence'],\n    '0068': ['CS', '1', 'ConceptualVolumeBlockingConstraint'],\n    '0069': ['SQ', '1', 'ConceptualVolumeTypeCodeSequence'],\n    '006A': ['SQ', '1', 'ConceptualVolumeTypeModifierCodeSequence'],\n    '006B': ['SQ', '1', 'RTPrescriptionSequence'],\n    '006C': ['SQ', '1', 'DosimetricObjectiveSequence'],\n    '006D': ['SQ', '1', 'DosimetricObjectiveTypeCodeSequence'],\n    '006E': ['UI', '1', 'DosimetricObjectiveUID'],\n    '006F': ['UI', '1', 'ReferencedDosimetricObjectiveUID'],\n    '0070': ['SQ', '1', 'DosimetricObjectiveParameterSequence'],\n    '0071': ['SQ', '1', 'ReferencedDosimetricObjectivesSequence'],\n    '0073': ['CS', '1', 'AbsoluteDosimetricObjectiveFlag'],\n    '0074': ['FD', '1', 'DosimetricObjectiveWeight'],\n    '0075': ['CS', '1', 'DosimetricObjectivePurpose'],\n    '0076': ['SQ', '1', 'PlanningInputInformationSequence'],\n    '0077': ['LO', '1', 'TreatmentSite'],\n    '0078': ['SQ', '1', 'TreatmentSiteCodeSequence'],\n    '0079': ['SQ', '1', 'FractionPatternSequence'],\n    '007A': ['UT', '1', 'TreatmentTechniqueNotes'],\n    '007B': ['UT', '1', 'PrescriptionNotes'],\n    '007C': ['IS', '1', 'NumberOfIntervalFractions'],\n    '007D': ['US', '1', 'NumberOfFractions'],\n    '007E': ['US', '1', 'IntendedDeliveryDuration'],\n    '007F': ['UT', '1', 'FractionationNotes'],\n    '0080': ['SQ', '1', 'RTTreatmentTechniqueCodeSequence'],\n    '0081': ['SQ', '1', 'PrescriptionNotesSequence'],\n    '0082': ['SQ', '1', 'FractionBasedRelationshipSequence'],\n    '0083': ['CS', '1', 'FractionBasedRelationshipIntervalAnchor'],\n    '0084': ['FD', '1', 'MinimumHoursBetweenFractions'],\n    '0085': ['TM', '1-n', 'IntendedFractionStartTime'],\n    '0086': ['LT', '1', 'IntendedStartDayOfWeek'],\n    '0087': ['SQ', '1', 'WeekdayFractionPatternSequence'],\n    '0088': ['SQ', '1', 'DeliveryTimeStructureCodeSequence'],\n    '0089': ['SQ', '1', 'TreatmentSiteModifierCodeSequence'],\n    '0090': ['CS', '1', 'RoboticBaseLocationIndicator'],\n    '0091': ['SQ', '1', 'RoboticPathNodeSetCodeSequence'],\n    '0092': ['UL', '1', 'RoboticNodeIdentifier'],\n    '0093': ['FD', '3', 'RTTreatmentSourceCoordinates'],\n    '0094': ['FD', '1', 'RadiationSourceCoordinateSystemYawAngle'],\n    '0095': ['FD', '1', 'RadiationSourceCoordinateSystemRollAngle'],\n    '0096': ['FD', '1', 'RadiationSourceCoordinateSystemPitchAngle'],\n    '0097': ['SQ', '1', 'RoboticPathControlPointSequence'],\n    '0098': ['SQ', '1', 'TomotherapeuticControlPointSequence'],\n    '0099': ['FD', '1-n', 'TomotherapeuticLeafOpenDurations'],\n    '009A': ['FD', '1-n', 'TomotherapeuticLeafInitialClosedDurations']\n  },\n  '4000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['LT', '1', 'Arbitrary'],\n    '4000': ['LT', '1', 'TextComments']\n  },\n  '4008': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0040': ['SH', '1', 'ResultsID'],\n    '0042': ['LO', '1', 'ResultsIDIssuer'],\n    '0050': ['SQ', '1', 'ReferencedInterpretationSequence'],\n    '00FF': ['CS', '1', 'ReportProductionStatusTrial'],\n    '0100': ['DA', '1', 'InterpretationRecordedDate'],\n    '0101': ['TM', '1', 'InterpretationRecordedTime'],\n    '0102': ['PN', '1', 'InterpretationRecorder'],\n    '0103': ['LO', '1', 'ReferenceToRecordedSound'],\n    '0108': ['DA', '1', 'InterpretationTranscriptionDate'],\n    '0109': ['TM', '1', 'InterpretationTranscriptionTime'],\n    '010A': ['PN', '1', 'InterpretationTranscriber'],\n    '010B': ['ST', '1', 'InterpretationText'],\n    '010C': ['PN', '1', 'InterpretationAuthor'],\n    '0111': ['SQ', '1', 'InterpretationApproverSequence'],\n    '0112': ['DA', '1', 'InterpretationApprovalDate'],\n    '0113': ['TM', '1', 'InterpretationApprovalTime'],\n    '0114': ['PN', '1', 'PhysicianApprovingInterpretation'],\n    '0115': ['LT', '1', 'InterpretationDiagnosisDescription'],\n    '0117': ['SQ', '1', 'InterpretationDiagnosisCodeSequence'],\n    '0118': ['SQ', '1', 'ResultsDistributionListSequence'],\n    '0119': ['PN', '1', 'DistributionName'],\n    '011A': ['LO', '1', 'DistributionAddress'],\n    '0200': ['SH', '1', 'InterpretationID'],\n    '0202': ['LO', '1', 'InterpretationIDIssuer'],\n    '0210': ['CS', '1', 'InterpretationTypeID'],\n    '0212': ['CS', '1', 'InterpretationStatusID'],\n    '0300': ['ST', '1', 'Impressions'],\n    '4000': ['ST', '1', 'ResultsComments']\n  },\n  '4010': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['CS', '1', 'LowEnergyDetectors'],\n    '0002': ['CS', '1', 'HighEnergyDetectors'],\n    '0004': ['SQ', '1', 'DetectorGeometrySequence'],\n    '1001': ['SQ', '1', 'ThreatROIVoxelSequence'],\n    '1004': ['FL', '3', 'ThreatROIBase'],\n    '1005': ['FL', '3', 'ThreatROIExtents'],\n    '1006': ['OB', '1', 'ThreatROIBitmap'],\n    '1007': ['SH', '1', 'RouteSegmentID'],\n    '1008': ['CS', '1', 'GantryType'],\n    '1009': ['CS', '1', 'OOIOwnerType'],\n    '100A': ['SQ', '1', 'RouteSegmentSequence'],\n    '1010': ['US', '1', 'PotentialThreatObjectID'],\n    '1011': ['SQ', '1', 'ThreatSequence'],\n    '1012': ['CS', '1', 'ThreatCategory'],\n    '1013': ['LT', '1', 'ThreatCategoryDescription'],\n    '1014': ['CS', '1', 'ATDAbilityAssessment'],\n    '1015': ['CS', '1', 'ATDAssessmentFlag'],\n    '1016': ['FL', '1', 'ATDAssessmentProbability'],\n    '1017': ['FL', '1', 'Mass'],\n    '1018': ['FL', '1', 'Density'],\n    '1019': ['FL', '1', 'ZEffective'],\n    '101A': ['SH', '1', 'BoardingPassID'],\n    '101B': ['FL', '3', 'CenterOfMass'],\n    '101C': ['FL', '3', 'CenterOfPTO'],\n    '101D': ['FL', '6-n', 'BoundingPolygon'],\n    '101E': ['SH', '1', 'RouteSegmentStartLocationID'],\n    '101F': ['SH', '1', 'RouteSegmentEndLocationID'],\n    '1020': ['CS', '1', 'RouteSegmentLocationIDType'],\n    '1021': ['CS', '1-n', 'AbortReason'],\n    '1023': ['FL', '1', 'VolumeOfPTO'],\n    '1024': ['CS', '1', 'AbortFlag'],\n    '1025': ['DT', '1', 'RouteSegmentStartTime'],\n    '1026': ['DT', '1', 'RouteSegmentEndTime'],\n    '1027': ['CS', '1', 'TDRType'],\n    '1028': ['CS', '1', 'InternationalRouteSegment'],\n    '1029': ['LO', '1-n', 'ThreatDetectionAlgorithmAndVersion'],\n    '102A': ['SH', '1', 'AssignedLocation'],\n    '102B': ['DT', '1', 'AlarmDecisionTime'],\n    '1031': ['CS', '1', 'AlarmDecision'],\n    '1033': ['US', '1', 'NumberOfTotalObjects'],\n    '1034': ['US', '1', 'NumberOfAlarmObjects'],\n    '1037': ['SQ', '1', 'PTORepresentationSequence'],\n    '1038': ['SQ', '1', 'ATDAssessmentSequence'],\n    '1039': ['CS', '1', 'TIPType'],\n    '103A': ['CS', '1', 'DICOSVersion'],\n    '1041': ['DT', '1', 'OOIOwnerCreationTime'],\n    '1042': ['CS', '1', 'OOIType'],\n    '1043': ['FL', '3', 'OOISize'],\n    '1044': ['CS', '1', 'AcquisitionStatus'],\n    '1045': ['SQ', '1', 'BasisMaterialsCodeSequence'],\n    '1046': ['CS', '1', 'PhantomType'],\n    '1047': ['SQ', '1', 'OOIOwnerSequence'],\n    '1048': ['CS', '1', 'ScanType'],\n    '1051': ['LO', '1', 'ItineraryID'],\n    '1052': ['SH', '1', 'ItineraryIDType'],\n    '1053': ['LO', '1', 'ItineraryIDAssigningAuthority'],\n    '1054': ['SH', '1', 'RouteID'],\n    '1055': ['SH', '1', 'RouteIDAssigningAuthority'],\n    '1056': ['CS', '1', 'InboundArrivalType'],\n    '1058': ['SH', '1', 'CarrierID'],\n    '1059': ['CS', '1', 'CarrierIDAssigningAuthority'],\n    '1060': ['FL', '3', 'SourceOrientation'],\n    '1061': ['FL', '3', 'SourcePosition'],\n    '1062': ['FL', '1', 'BeltHeight'],\n    '1064': ['SQ', '1', 'AlgorithmRoutingCodeSequence'],\n    '1067': ['CS', '1', 'TransportClassification'],\n    '1068': ['LT', '1', 'OOITypeDescriptor'],\n    '1069': ['FL', '1', 'TotalProcessingTime'],\n    '106C': ['OB', '1', 'DetectorCalibrationData'],\n    '106D': ['CS', '1', 'AdditionalScreeningPerformed'],\n    '106E': ['CS', '1', 'AdditionalInspectionSelectionCriteria'],\n    '106F': ['SQ', '1', 'AdditionalInspectionMethodSequence'],\n    '1070': ['CS', '1', 'AITDeviceType'],\n    '1071': ['SQ', '1', 'QRMeasurementsSequence'],\n    '1072': ['SQ', '1', 'TargetMaterialSequence'],\n    '1073': ['FD', '1', 'SNRThreshold'],\n    '1075': ['DS', '1', 'ImageScaleRepresentation'],\n    '1076': ['SQ', '1', 'ReferencedPTOSequence'],\n    '1077': ['SQ', '1', 'ReferencedTDRInstanceSequence'],\n    '1078': ['ST', '1', 'PTOLocationDescription'],\n    '1079': ['SQ', '1', 'AnomalyLocatorIndicatorSequence'],\n    '107A': ['FL', '3', 'AnomalyLocatorIndicator'],\n    '107B': ['SQ', '1', 'PTORegionSequence'],\n    '107C': ['CS', '1', 'InspectionSelectionCriteria'],\n    '107D': ['SQ', '1', 'SecondaryInspectionMethodSequence'],\n    '107E': ['DS', '6', 'PRCSToRCSOrientation']\n  },\n  '4FFE': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['SQ', '1', 'MACParametersSequence']\n  },\n  '5000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0005': ['US', '1', 'CurveDimensions'],\n    '0010': ['US', '1', 'NumberOfPoints'],\n    '0020': ['CS', '1', 'TypeOfData'],\n    '0022': ['LO', '1', 'CurveDescription'],\n    '0030': ['SH', '1-n', 'AxisUnits'],\n    '0040': ['SH', '1-n', 'AxisLabels'],\n    '0103': ['US', '1', 'DataValueRepresentation'],\n    '0104': ['US', '1-n', 'MinimumCoordinateValue'],\n    '0105': ['US', '1-n', 'MaximumCoordinateValue'],\n    '0106': ['SH', '1-n', 'CurveRange'],\n    '0110': ['US', '1-n', 'CurveDataDescriptor'],\n    '0112': ['US', '1-n', 'CoordinateStartValue'],\n    '0114': ['US', '1-n', 'CoordinateStepValue'],\n    '1001': ['CS', '1', 'CurveActivationLayer'],\n    '2000': ['US', '1', 'AudioType'],\n    '2002': ['US', '1', 'AudioSampleFormat'],\n    '2004': ['US', '1', 'NumberOfChannels'],\n    '2006': ['UL', '1', 'NumberOfSamples'],\n    '2008': ['UL', '1', 'SampleRate'],\n    '200A': ['UL', '1', 'TotalTime'],\n    '200C': ['ox', '1', 'AudioSampleData'],\n    '200E': ['LT', '1', 'AudioComments'],\n    '2500': ['LO', '1', 'CurveLabel'],\n    '2600': ['SQ', '1', 'CurveReferencedOverlaySequence'],\n    '2610': ['US', '1', 'CurveReferencedOverlayGroup'],\n    '3000': ['ox', '1', 'CurveData']\n  },\n  '5200': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '9229': ['SQ', '1', 'SharedFunctionalGroupsSequence'],\n    '9230': ['SQ', '1', 'PerFrameFunctionalGroupsSequence']\n  },\n  '5400': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0100': ['SQ', '1', 'WaveformSequence'],\n    '0110': ['ox', '1', 'ChannelMinimumValue'],\n    '0112': ['ox', '1', 'ChannelMaximumValue'],\n    '1004': ['US', '1', 'WaveformBitsAllocated'],\n    '1006': ['CS', '1', 'WaveformSampleInterpretation'],\n    '100A': ['ox', '1', 'WaveformPaddingValue'],\n    '1010': ['ox', '1', 'WaveformData']\n  },\n  '5600': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['OF', '1', 'FirstOrderPhaseCorrectionAngle'],\n    '0020': ['OF', '1', 'SpectroscopyData']\n  },\n  '6000': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['US', '1', 'OverlayRows'],\n    '0011': ['US', '1', 'OverlayColumns'],\n    '0012': ['US', '1', 'OverlayPlanes'],\n    '0015': ['IS', '1', 'NumberOfFramesInOverlay'],\n    '0022': ['LO', '1', 'OverlayDescription'],\n    '0040': ['CS', '1', 'OverlayType'],\n    '0045': ['LO', '1', 'OverlaySubtype'],\n    '0050': ['SS', '2', 'OverlayOrigin'],\n    '0051': ['US', '1', 'ImageFrameOrigin'],\n    '0052': ['US', '1', 'OverlayPlaneOrigin'],\n    '0060': ['CS', '1', 'OverlayCompressionCode'],\n    '0061': ['SH', '1', 'OverlayCompressionOriginator'],\n    '0062': ['SH', '1', 'OverlayCompressionLabel'],\n    '0063': ['CS', '1', 'OverlayCompressionDescription'],\n    '0066': ['AT', '1-n', 'OverlayCompressionStepPointers'],\n    '0068': ['US', '1', 'OverlayRepeatInterval'],\n    '0069': ['US', '1', 'OverlayBitsGrouped'],\n    '0100': ['US', '1', 'OverlayBitsAllocated'],\n    '0102': ['US', '1', 'OverlayBitPosition'],\n    '0110': ['CS', '1', 'OverlayFormat'],\n    '0200': ['US', '1', 'OverlayLocation'],\n    '0800': ['CS', '1-n', 'OverlayCodeLabel'],\n    '0802': ['US', '1', 'OverlayNumberOfTables'],\n    '0803': ['AT', '1-n', 'OverlayCodeTableLocation'],\n    '0804': ['US', '1', 'OverlayBitsForCodeWord'],\n    '1001': ['CS', '1', 'OverlayActivationLayer'],\n    '1100': ['US', '1', 'OverlayDescriptorGray'],\n    '1101': ['US', '1', 'OverlayDescriptorRed'],\n    '1102': ['US', '1', 'OverlayDescriptorGreen'],\n    '1103': ['US', '1', 'OverlayDescriptorBlue'],\n    '1200': ['US', '1-n', 'OverlaysGray'],\n    '1201': ['US', '1-n', 'OverlaysRed'],\n    '1202': ['US', '1-n', 'OverlaysGreen'],\n    '1203': ['US', '1-n', 'OverlaysBlue'],\n    '1301': ['IS', '1', 'ROIArea'],\n    '1302': ['DS', '1', 'ROIMean'],\n    '1303': ['DS', '1', 'ROIStandardDeviation'],\n    '1500': ['LO', '1', 'OverlayLabel'],\n    '3000': ['ox', '1', 'OverlayData'],\n    '4000': ['LT', '1', 'OverlayComments']\n  },\n  '7F00': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0010': ['ox', '1', 'VariablePixelData'],\n    '0011': ['US', '1', 'VariableNextDataGroup'],\n    '0020': ['OW', '1', 'VariableCoefficientsSDVN'],\n    '0030': ['OW', '1', 'VariableCoefficientsSDHN'],\n    '0040': ['OW', '1', 'VariableCoefficientsSDDN']\n  },\n  '7FE0': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    '0001': ['OV', '1', 'ExtendedOffsetTable'],\n    '0002': ['OV', '1', 'ExtendedOffsetTableLengths'],\n    '0008': ['OF', '1', 'FloatPixelData'],\n    '0009': ['OD', '1', 'DoubleFloatPixelData'],\n    '0010': ['ox', '1', 'PixelData'],\n    '0020': ['OW', '1', 'CoefficientsSDVN'],\n    '0030': ['OW', '1', 'CoefficientsSDHN'],\n    '0040': ['OW', '1', 'CoefficientsSDDN']\n  },\n  'FFFA': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    'FFFA': ['SQ', '1', 'DigitalSignaturesSequence']\n  },\n  'FFFC': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    'FFFC': ['OB', '1', 'DataSetTrailingPadding']\n  },\n  'FFFE': {\n    '0000': ['UL', '1', 'GenericGroupLength'],\n    'E000': ['NONE', '1', 'Item'],\n    'E00D': ['NONE', '1', 'ItemDelimitationItem'],\n    'E0DD': ['NONE', '1', 'SequenceDelimitationItem']\n  }\n}; // Dictionary\n\n/**\n * Add tags to the dictionary.\n *\n * @param {string} group The group key.\n * @param {Object<string, string[]>} tags The tags to add as an\n *   object indexed by element key with values as:\n *   [VR, multiplicity, TagName] (all strings).\n */\nexport function addTagsToDictionary(group, tags) {\n  // TODO: add checks!\n  dictionary[group] = tags;\n}\n\n/**\n * Tag groups: key to name pairs.\n * Copied from gdcm-2.6.1\\Source\\DataDictionary\\GroupName.dic\n * -> removed duplicates (commented).\n *\n * @type {Object<string, string>}\n */\nexport const tagGroups = {\n  '0000': 'Command',\n  '0002': 'Meta Element',\n  '0004': 'File Set',\n  //'0004': 'Directory',\n  '0008': 'Identifying',\n  '0009': 'SPI Identifying',\n  '0010': 'Patient',\n  '0012': 'Clinical Trial',\n  '0018': 'Acquisition',\n  '0019': 'SPI Acquisition',\n  '0020': 'Image',\n  '0021': 'SPI Image',\n  '0022': 'Ophtalmology',\n  '0028': 'Image Presentation',\n  '0032': 'Study',\n  '0038': 'Visit',\n  '003A': 'Waveform',\n  '0040': 'Procedure',\n  //'0040': ''Modality Worklist',\n  '0042': 'Encapsulated Document',\n  '0050': 'Device Informations',\n  //'0050': 'XRay Angio Device',\n  '0054': 'Nuclear Medicine',\n  '0060': 'Histogram',\n  '0070': 'Presentation State',\n  '0072': 'Hanging Protocol',\n  '0088': 'Storage',\n  //'0088': 'Medicine',\n  '0100': 'Authorization',\n  '0400': 'Digital Signature',\n  '1000': 'Code Table',\n  '1010': 'Zonal Map',\n  '2000': 'Film Session',\n  '2010': 'Film Box',\n  '2020': 'Image Box',\n  '2030': 'Annotation',\n  '2040': 'Overlay Box',\n  '2050': 'Presentation LUT',\n  '2100': 'Print Job',\n  '2110': 'Printer',\n  '2120': 'Queue',\n  '2130': 'Print Content',\n  '2200': 'Media Creation',\n  '3002': 'RT Image',\n  '3004': 'RT Dose',\n  '3006': 'RT StructureSet',\n  '3008': 'RT Treatment',\n  '300A': 'RT Plan',\n  '300C': 'RT Relationship',\n  '300E': 'RT Approval',\n  '4000': 'Text',\n  '4008': 'Results',\n  '4FFE': 'MAC Parameters',\n  '5000': 'Curve',\n  '5002': 'Curve',\n  '5004': 'Curve',\n  '5006': 'Curve',\n  '5008': 'Curve',\n  '500A': 'Curve',\n  '500C': 'Curve',\n  '500E': 'Curve',\n  '5400': 'Waveform Data',\n  '6000': 'Overlays',\n  '6002': 'Overlays',\n  '6004': 'Overlays',\n  '6008': 'Overlays',\n  '600A': 'Overlays',\n  '600C': 'Overlays',\n  '600E': 'Overlays',\n  'FFFC': 'Generic',\n  '7FE0': 'Pixel Data',\n  'FFFF': 'Unknown'\n};\n\n/**\n * List of Value Representation (VR) with 32bit Value Length (VL).\n *\n * Added locally used 'ox'.\n * See {@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/chapter_7.html#table_7.1-1}.\n *\n * @type {Object<string, boolean>}\n */\nconst vr32bitVL = {\n  OB: true,\n  OD: true,\n  OF: true,\n  OL: true,\n  OV: true,\n  OW: true,\n  SQ: true,\n  SV: true,\n  UC: true,\n  UN: true,\n  UR: true,\n  UT: true,\n  UV: true,\n  ox: true\n};\n\n/**\n * Does the input Value Representation (VR) have a 32bit Value Length (VL).\n *\n * @param {string} vr The data Value Representation (VR).\n * @returns {boolean} True if this VR has a 32-bit VL.\n */\nexport function is32bitVLVR(vr) {\n  return typeof vr32bitVL[vr] !== 'undefined';\n}\n\n/**\n * List of string VR with extended or replaced default character repertoire defined in\n *   Specific Character Set (0008,0005).\n *\n * See {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/chapter_6.html#sect_6.1.2.2}.\n *\n * @type {Object<string, boolean>}\n */\nconst vrCharSetString = {\n  SH: true,\n  LO: true,\n  UC: true,\n  ST: true,\n  LT: true,\n  UT: true,\n  PN: true\n};\n\n/**\n * Does the input Value Representation (VR) have an special character repertoire.\n *\n * @param {string} vr The data VR.\n * @returns {boolean} True if this VR has a special char set.\n */\nexport function isCharSetStringVR(vr) {\n  return typeof vrCharSetString[vr] !== 'undefined';\n}\n\n/**\n * VR equivalent javascript types.\n *\n * See {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_6.2.html#table_6.2-1}.\n *\n * @type {Object<string, string>}\n */\nexport const vrTypes = {\n  AE: 'string',\n  AS: 'string',\n  AT: undefined,\n  CS: 'string',\n  DA: 'string',\n  DS: 'string',\n  DT: 'string',\n  FL: 'Float32',\n  FD: 'Float64',\n  IS: 'string',\n  LO: 'string',\n  LT: 'string',\n  OB: 'Uint8',\n  OD: 'Uint64',\n  OF: 'Uint32',\n  OL: 'Uint32',\n  OV: 'Uint64',\n  OW: 'Uint16',\n  PN: 'string',\n  SH: 'string',\n  SL: 'Int32',\n  SQ: undefined,\n  SS: 'Int16',\n  ST: 'string',\n  SV: 'Int64',\n  TM: 'string',\n  UC: 'string',\n  UI: 'string',\n  UL: 'Uint32',\n  UN: 'Uint8',\n  UR: 'string',\n  US: 'Uint16',\n  UT: 'string',\n  UV: 'Uint64'\n};\n\n/**\n * Transfer syntaxes.\n *\n * See {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part06/chapter_A.html#table_A-1}.\n *\n * @type {Object<string, string>}\n */\nexport const transferSyntaxes = {\n  '1.2.840.10008.1.2': 'Implicit VR Little Endian',\n  '1.2.840.10008.1.2.1': 'Explicit VR Little Endian',\n  '1.2.840.10008.1.2.1.98': 'Encapsulated Uncompressed Explicit VR Little Endian',\n  '1.2.840.10008.1.2.1.99': 'Deflated Explicit VR Little Endian',\n  '1.2.840.10008.1.2.2': 'Explicit VR Big Endian (Retired)',\n  '1.2.840.10008.1.2.4.50': 'JPEG Baseline (Process 1)',\n  '1.2.840.10008.1.2.4.51': 'JPEG Extended (Process 2 & 4)',\n  '1.2.840.10008.1.2.4.52': 'JPEG Extended (Process 3 & 5) (Retired)',\n  '1.2.840.10008.1.2.4.53': 'JPEG Spectral Selection, Non-Hierarchical (Process 6 & 8) (Retired)',\n  '1.2.840.10008.1.2.4.54': 'JPEG Spectral Selection, Non-Hierarchical (Process 7 & 9) (Retired)',\n  '1.2.840.10008.1.2.4.55': 'JPEG Full Progression, Non-Hierarchical (Process 10 & 12) (Retired)',\n  '1.2.840.10008.1.2.4.56': 'JPEG Full Progression, Non-Hierarchical (Process 11 & 13) (Retired)',\n  '1.2.840.10008.1.2.4.57': 'JPEG Lossless, Non-Hierarchical (Process 14)',\n  '1.2.840.10008.1.2.4.58': 'JPEG Lossless, Non-Hierarchical (Process 15) (Retired)',\n  '1.2.840.10008.1.2.4.59': 'JPEG Extended, Hierarchical (Process 16 & 18) (Retired)',\n  '1.2.840.10008.1.2.4.60': 'JPEG Extended, Hierarchical (Process 17 & 19) (Retired)',\n  '1.2.840.10008.1.2.4.61': 'JPEG Spectral Selection, Hierarchical (Process 20 & 22) (Retired)',\n  '1.2.840.10008.1.2.4.62': 'JPEG Spectral Selection, Hierarchical (Process 21 & 23) (Retired)',\n  '1.2.840.10008.1.2.4.63': 'JPEG Full Progression, Hierarchical (Process 24 & 26) (Retired)',\n  '1.2.840.10008.1.2.4.64': 'JPEG Full Progression, Hierarchical (Process 25 & 27) (Retired)',\n  '1.2.840.10008.1.2.4.65': 'JPEG Lossless, Hierarchical (Process 28) (Retired)',\n  '1.2.840.10008.1.2.4.66': 'JPEG Lossless, Hierarchical (Process 29) (Retired)',\n  '1.2.840.10008.1.2.4.70': 'JPEG Lossless, Non-Hierarchical, First-Order Prediction (Process 14 [Selection Value 1])',\n  '1.2.840.10008.1.2.4.80': 'JPEG-LS Lossless Image Compression',\n  '1.2.840.10008.1.2.4.81': 'JPEG-LS Lossy (Near-Lossless) Image Compression',\n  '1.2.840.10008.1.2.4.90': 'JPEG 2000 Image Compression (Lossless Only)',\n  '1.2.840.10008.1.2.4.91': 'JPEG 2000 Image Compression',\n  '1.2.840.10008.1.2.4.92': 'JPEG 2000 Part 2 Multi-component Image Compression (Lossless Only)',\n  '1.2.840.10008.1.2.4.93': 'JPEG 2000 Part 2 Multi-component Image Compression',\n  '1.2.840.10008.1.2.4.94': 'JPIP Referenced',\n  '1.2.840.10008.1.2.4.95': 'JPIP Referenced Deflate',\n  '1.2.840.10008.1.2.4.100': 'MPEG2 Main Profile / Main Level',\n  '1.2.840.10008.1.2.4.101': 'MPEG2 Main Profile / High Level',\n  '1.2.840.10008.1.2.4.102': 'MPEG-4 AVC/H.264 High Profile / Level 4.1',\n  '1.2.840.10008.1.2.4.103': 'MPEG-4 AVC/H.264 BD-compatible High Profile / Level 4.1',\n  '1.2.840.10008.1.2.4.104': 'MPEG-4 AVC/H.264 High Profile / Level 4.2 For 2D Video',\n  '1.2.840.10008.1.2.4.105': 'MPEG-4 AVC/H.264 High Profile / Level 4.2 For 3D Video',\n  '1.2.840.10008.1.2.4.106': 'MPEG-4 AVC/H.264 Stereo High Profile / Level 4.2',\n  '1.2.840.10008.1.2.4.107': 'HEVC/H.265 Main Profile / Level 5.1',\n  '1.2.840.10008.1.2.4.108': 'HEVC/H.265 Main 10 Profile / Level 5.1',\n  '1.2.840.10008.1.2.5': 'RLE Lossless',\n  '1.2.840.10008.1.2.6.1': 'RFC 2557 MIME encapsulation (Retired)',\n  '1.2.840.10008.1.2.6.2': 'XML Encoding (Retired)',\n  '1.2.840.10008.1.2.7.1': 'SMPTE ST 2110-20 Uncompressed Progressive Active Video',\n  '1.2.840.10008.1.2.7.2': 'SMPTE ST 2110-20 Uncompressed Interlaced Active Video',\n  '1.2.840.10008.1.2.7.3': 'SMPTE ST 2110-30 PCM Digital Audio',\n  '1.2.840.10008.1.20': 'Papyrus 3 Implicit VR Little Endian (Retired)'\n};\n\n/**\n * Transfer syntaxes indexed by keyword.\n *\n * @type {Object<string, string>}\n */\nexport const transferSyntaxKeywords = {\n  ImplicitVRLittleEndian: '1.2.840.10008.1.2',\n  ExplicitVRLittleEndian: '1.2.840.10008.1.2.1',\n  EncapsulatedUncompressedExplicitVRLittleEndian: '1.2.840.10008.1.2.1.98',\n  DeflatedExplicitVRLittleEndian: '1.2.840.10008.1.2.1.99',\n  ExplicitVRBigEndian: '1.2.840.10008.1.2.2',\n  JPEGBaseline8Bit: '1.2.840.10008.1.2.4.50',\n  JPEGExtended12Bit: '1.2.840.10008.1.2.4.51',\n  JPEGExtended35: '1.2.840.10008.1.2.4.52',\n  JPEGSpectralSelectionNonHierarchical68: '1.2.840.10008.1.2.4.53',\n  JPEGSpectralSelectionNonHierarchical79: '1.2.840.10008.1.2.4.54',\n  JPEGFullProgressionNonHierarchical1012: '1.2.840.10008.1.2.4.55',\n  JPEGFullProgressionNonHierarchical1113: '1.2.840.10008.1.2.4.56',\n  JPEGLossless: '1.2.840.10008.1.2.4.57',\n  JPEGLosslessNonHierarchical15: '1.2.840.10008.1.2.4.58',\n  JPEGExtendedHierarchical1618: '1.2.840.10008.1.2.4.59',\n  JPEGExtendedHierarchical1719: '1.2.840.10008.1.2.4.60',\n  JPEGSpectralSelectionHierarchical2022: '1.2.840.10008.1.2.4.61',\n  JPEGSpectralSelectionHierarchical2123: '1.2.840.10008.1.2.4.62',\n  JPEGFullProgressionHierarchical2426: '1.2.840.10008.1.2.4.63',\n  JPEGFullProgressionHierarchical2527: '1.2.840.10008.1.2.4.64',\n  JPEGLosslessHierarchical28: '1.2.840.10008.1.2.4.65',\n  JPEGLosslessHierarchical29: '1.2.840.10008.1.2.4.66',\n  JPEGLosslessSV1: '1.2.840.10008.1.2.4.70',\n  JPEGLSLossless: '1.2.840.10008.1.2.4.80',\n  JPEGLSNearLossless: '1.2.840.10008.1.2.4.81',\n  JPEG2000Lossless: '1.2.840.10008.1.2.4.90',\n  JPEG2000: '1.2.840.10008.1.2.4.91',\n  JPEG2000MCLossless: '1.2.840.10008.1.2.4.92',\n  JPEG2000MC: '1.2.840.10008.1.2.4.93',\n  JPIPReferenced: '1.2.840.10008.1.2.4.94',\n  JPIPReferencedDeflate: '1.2.840.10008.1.2.4.95',\n  MPEG2MPML: '1.2.840.10008.1.2.4.100',\n  MPEG2MPHL: '1.2.840.10008.1.2.4.101',\n  MPEG4HP41: '1.2.840.10008.1.2.4.102',\n  MPEG4HP41BD: '1.2.840.10008.1.2.4.103',\n  MPEG4HP422D: '1.2.840.10008.1.2.4.104',\n  MPEG4HP423D: '1.2.840.10008.1.2.4.105',\n  MPEG4HP42STEREO: '1.2.840.10008.1.2.4.106',\n  HEVCMP51: '1.2.840.10008.1.2.4.107',\n  HEVCM10P51: '1.2.840.10008.1.2.4.108',\n  RLELossless: '1.2.840.10008.1.2.5',\n  RFC2557MIMEEncapsulation: '1.2.840.10008.1.2.6.1',\n  XMLEncoding: '1.2.840.10008.1.2.6.2',\n  SMPTEST211020UncompressedProgressiveActiveVideo: '1.2.840.10008.1.2.7.1',\n  SMPTEST211020UncompressedInterlacedActiveVideo: '1.2.840.10008.1.2.7.2',\n  SMPTEST211030PCMDigitalAudio: '1.2.840.10008.1.2.7.3',\n  Papyrus3ImplicitVRLittleEndian: '1.2.840.10008.1.20'\n};\n","import {\n  dictionary,\n  tagGroups\n} from './dictionary';\n\n/**\n * Immutable tag.\n */\nexport class Tag {\n\n  /**\n   * The tag group.\n   *\n   * @type {string}\n   */\n  #group;\n\n  /**\n   * The tag element.\n   *\n   * @type {string}\n   */\n  #element;\n\n  /**\n   * @param {string} group The tag group as '####'.\n   * @param {string} element The tag element as '####'.\n   */\n  constructor(group, element) {\n    if (!group || typeof group === 'undefined') {\n      throw new Error('Cannot create tag with no group.');\n    }\n    if (group.length !== 4) {\n      throw new Error('Cannot create tag with badly sized group: ' + group);\n    }\n    if (!element || typeof element === 'undefined') {\n      throw new Error('Cannot create tag with no element.');\n    }\n    if (element.length !== 4) {\n      throw new Error('Cannot create tag with badly sized element: ' + element);\n    }\n    this.#group = group;\n    this.#element = element;\n  }\n\n  /**\n   * Get the tag group.\n   *\n   * @returns {string} The tag group.\n   */\n  getGroup() {\n    return this.#group;\n  }\n\n  /**\n   * Get the tag element.\n   *\n   * @returns {string} The tag element.\n   */\n  getElement() {\n    return this.#element;\n  }\n\n  /**\n   * Get as string representation of the tag: 'key: name'.\n   *\n   * @returns {string} A string representing the tag.\n   */\n  toString() {\n    return this.getKey() + ': ' + this.getNameFromDictionary();\n  }\n\n  /**\n   * Check for Tag equality.\n   *\n   * @param {Tag} rhs The other tag to compare to.\n   * @returns {boolean} True if both tags are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      typeof rhs !== 'undefined' &&\n      this.#group === rhs.getGroup() &&\n      this.#element === rhs.getElement();\n  }\n\n  /**\n   * Get the group-element key used to store DICOM elements.\n   *\n   * @returns {string} The key as '########'.\n   */\n  getKey() {\n    return this.#group + this.#element;\n  }\n\n  /**\n   * Get the group name as defined in TagGroups.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return tagGroups[this.#group];\n  }\n\n  /**\n   * Does this tag have a VR.\n   * Basically not the Item, ItemDelimitationItem nor\n   *  SequenceDelimitationItem tags.\n   *\n   * @returns {boolean} True if this tag has a VR.\n   */\n  isWithVR() {\n    return !(this.#group === 'FFFE' &&\n      (this.#element === 'E000' ||\n      this.#element === 'E00D' ||\n      this.#element === 'E0DD')\n    );\n  }\n\n  /**\n   * Is the tag group a private tag group ?\n   *\n   * See: {@link http://dicom.nema.org/medical/dicom/2022a/output/html/part05.html#sect_7.8}.\n   *\n   * @returns {boolean} True if the tag group is private,\n   *   ie if its group is an odd number.\n   */\n  isPrivate() {\n    return parseInt(this.#group, 16) % 2 === 1;\n  }\n\n  /**\n   * Get the tag info from the dicom dictionary.\n   *\n   * @returns {string[]|undefined} The info as [vr, multiplicity, name].\n   */\n  #getInfoFromDictionary() {\n    let info;\n    if (typeof dictionary[this.#group] !== 'undefined' &&\n      typeof dictionary[this.#group][this.#element] !==\n        'undefined') {\n      info = dictionary[this.#group][this.#element];\n    }\n    return info;\n  }\n\n  /**\n   * Get the tag Value Representation (VR) from the dicom dictionary.\n   *\n   * @returns {string|undefined} The VR.\n   */\n  getVrFromDictionary() {\n    let vr;\n    const info = this.#getInfoFromDictionary();\n    if (typeof info !== 'undefined') {\n      vr = info[0];\n    }\n    return vr;\n  }\n\n  /**\n   * Get the multiplicity from the dicom dictionary.\n   *\n   * @returns {number|undefined} The multiplicity.\n   */\n  getMultiplicityFromDictionary() {\n    let multiplicity;\n    const info = this.#getInfoFromDictionary();\n    if (typeof info !== 'undefined') {\n      multiplicity = parseInt(info[1], 10);\n    }\n    return multiplicity;\n  }\n\n  /**\n   * Get the tag name from the dicom dictionary.\n   *\n   * @returns {string|undefined} The VR.\n   */\n  getNameFromDictionary() {\n    let name;\n    const info = this.#getInfoFromDictionary();\n    if (typeof info !== 'undefined') {\n      name = info[2];\n    }\n    return name;\n  }\n\n} // Tag class\n\n/**\n * Tag compare function.\n *\n * @param {Tag} a The first tag.\n * @param {Tag} b The second tag.\n * @returns {number} The result of the tag comparison,\n *   positive for b before a, negative for a before b and\n *   zero to keep same order.\n */\nexport function tagCompareFunction(a, b) {\n  // first by group\n  let res = parseInt(a.getGroup(), 16) - parseInt(b.getGroup(), 16);\n  if (res === 0) {\n    // by element if same group\n    res = parseInt(a.getElement(), 16) - parseInt(b.getElement(), 16);\n  }\n  return res;\n}\n\n/**\n * Split a group-element key used to store DICOM elements.\n *\n * @param {string} key The key in form \"00280102\" as generated by tag::getKey.\n * @returns {Tag} The DICOM tag.\n */\nexport function getTagFromKey(key) {\n  if (!key || typeof key === 'undefined') {\n    throw new Error('Cannot create tag with no key.');\n  }\n  if (key.length !== 8) {\n    throw new Error('Cannot create tag with badly sized key: ' + key);\n  }\n  return new Tag(key.substring(0, 4), key.substring(4, 8));\n}\n\n/**\n * Get the TransferSyntaxUID Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getTransferSyntaxUIDTag() {\n  return new Tag('0002', '0010');\n}\n\n/**\n * Get the FileMetaInformationGroupLength Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getFileMetaInformationGroupLengthTag() {\n  return new Tag('0002', '0000');\n}\n\n/**\n * Is the input tag the FileMetaInformationGroupLength Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isFileMetaInformationGroupLengthTag(tag) {\n  return tag.equals(getFileMetaInformationGroupLengthTag());\n}\n\n/**\n * Get the Item Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getItemTag() {\n  return new Tag('FFFE', 'E000');\n}\n\n/**\n * Is the input tag the Item Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isItemTag(tag) {\n  // faster than tag.equals(getItemTag());\n  return tag.getKey() === 'FFFEE000';\n}\n\n/**\n * Get the ItemDelimitationItem Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getItemDelimitationItemTag() {\n  return new Tag('FFFE', 'E00D');\n}\n\n/**\n * Is the input tag the ItemDelimitationItem Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isItemDelimitationItemTag(tag) {\n  // faster than tag.equals(getItemDelimitationItemTag());\n  return tag.getKey() === 'FFFEE00D';\n}\n\n/**\n * Get the SequenceDelimitationItem Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getSequenceDelimitationItemTag() {\n  return new Tag('FFFE', 'E0DD');\n}\n\n/**\n * Is the input tag the SequenceDelimitationItem Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isSequenceDelimitationItemTag(tag) {\n  // faster than tag.equals(getSequenceDelimitationItemTag());\n  return tag.getKey() === 'FFFEE0DD';\n}\n\n/**\n * Get the PixelData Tag.\n *\n * @returns {Tag} The tag.\n */\nexport function getPixelDataTag() {\n  return new Tag('7FE0', '0010');\n}\n\n/**\n * Is the input tag the PixelData Tag.\n *\n * @param {Tag} tag The tag to test.\n * @returns {boolean} True if the asked tag.\n */\nexport function isPixelDataTag(tag) {\n  // faster than tag.equals(getPixelDataTag());\n  return tag.getKey() === '7FE00010';\n}\n\n/**\n * Get a tag from the dictionary using a tag string name.\n *\n * @param {string} tagName The tag string name.\n * @returns {Tag|undefined} The tag object or null if not found.\n */\nexport function getTagFromDictionary(tagName) {\n  if (typeof tagName === 'undefined' || tagName === null) {\n    return null;\n  }\n  let group = null;\n  let element = null;\n  const dict = dictionary;\n  const keys0 = Object.keys(dict);\n  let keys1 = null;\n  let foundTag = false;\n  // search through dictionary\n  for (let k0 = 0, lenK0 = keys0.length; k0 < lenK0; ++k0) {\n    group = keys0[k0];\n    keys1 = Object.keys(dict[group]);\n    for (let k1 = 0, lenK1 = keys1.length; k1 < lenK1; ++k1) {\n      element = keys1[k1];\n      if (dict[group][element][2] === tagName) {\n        foundTag = true;\n        break;\n      }\n    }\n    if (foundTag) {\n      break;\n    }\n  }\n  let tag;\n  if (foundTag) {\n    tag = new Tag(group, element);\n  }\n  return tag;\n}\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {Tag} from './dicomTag';\n/* eslint-enable no-unused-vars */\n\n/**\n * DICOM data element.\n */\nexport class DataElement {\n  /**\n   * The element Value Representation.\n   *\n   * @type {string}\n   */\n  vr;\n  /**\n   * The element value.\n   *\n   * @type {Array}\n   */\n  value;\n\n  // [start] internal values\n  // only present during parsing or writing otherwise not set\n\n  /**\n   * The element dicom tag.\n   *\n   * @type {Tag}\n   */\n  tag;\n\n  /**\n   * The element Value Length.\n   *\n   * @type {number}\n   */\n  vl;\n\n  /**\n   * Flag to know if defined or undefined sequence length.\n   *\n   * @type {boolean}\n   */\n  undefinedLength;\n\n  /**\n   * The element start offset.\n   *\n   * @type {number}\n   */\n  startOffset;\n\n  /**\n   * The element end offset.\n   *\n   * @type {number}\n   */\n  endOffset;\n\n  /**\n   * The sequence items.\n   *\n   * @type {Array}\n   */\n  items;\n\n  // [end] internal values\n\n  /**\n   * @param {string} vr The element VR (Value Representation).\n   */\n  constructor(vr) {\n    this.vr = vr;\n  }\n}\n\n/**\n * Check an input data element, returns true if:\n * - the element is not undefined,\n * - the elements' value is not undefined,\n * - the elements' value has content.\n *\n * @param {DataElement} element The data element.\n * @returns {boolean} True if there is a value.\n */\nfunction hasValue(element) {\n  return typeof element !== 'undefined' &&\n    typeof element.value !== 'undefined' &&\n    element.value.length !== 0;\n}\n\n/**\n * Safely get an elements' first value from a list of elements.\n *\n * @param {Object<string, DataElement>} dataElements A list of data elements.\n * @param {string} key The tag key as for example '00100020'.\n * @returns {any|undefined} The elements' value or undefined.\n */\nexport function safeGet(dataElements, key) {\n  let res;\n  if (hasValue(dataElements[key])) {\n    res = dataElements[key].value[0];\n  }\n  return res;\n};\n\n/**\n * Safely get all of an elements' values from a list of elements.\n *\n * @param {Object<string, DataElement>} dataElements A list of data elements.\n * @param {string} key The tag key as for example '00100020'.\n * @returns {any[]|undefined} The elements' values or undefined.\n */\nexport function safeGetAll(dataElements, key) {\n  let res;\n  if (hasValue(dataElements[key])) {\n    res = dataElements[key].value;\n  }\n  return res;\n};\n\n/**\n * Check a DICOM data element: checks\n * - if the element is not undefined,\n * - if the elements' value is not undefined,\n * - if the elements' value is not empty,\n * - (optional) if the elements' values have specific values.\n *\n * @param {DataElement} element The element to check.\n * @param {string} name The element name.\n * @param {Array} [values] Optional list of expected values.\n * @returns {string} A warning if the element is not as expected.\n */\nexport function checkDataElement(element, name, values) {\n  let warning = '';\n  if (typeof element === 'undefined') {\n    warning += ' ' + name + ' is undefined,';\n  } else if (typeof element.value === 'undefined') {\n    warning += ' ' + name + ' has undefined value,';\n  } else if (element.value.length === 0) {\n    warning += ' ' + name + ' is empty,';\n  } else {\n    if (typeof values !== 'undefined') {\n      for (let i = 0; i < values.length; ++i) {\n        if (!element.value.includes(values[i])) {\n          warning += ' ' + name + ' does not contain ' + values[i] +\n            ' (value: ' + element.value + '),';\n        }\n      }\n    }\n  }\n  return warning;\n}\n","/**\n * Is the Native endianness Little Endian.\n *\n * @returns {boolean} True if little endian.\n */\nexport function isNativeLittleEndian() {\n  return new Int8Array(new Int16Array([1]).buffer)[0] > 0;\n}\n\n/**\n * Flip an array's endianness.\n * Inspired from [DataStream.js]{@link https://github.com/kig/DataStream.js}.\n *\n * @param {object} array The array to flip (modified).\n */\nfunction flipArrayEndianness(array) {\n  const blen = array.byteLength;\n  const u8 = new Uint8Array(array.buffer, array.byteOffset, blen);\n  const bpe = array.BYTES_PER_ELEMENT;\n  let tmp;\n  for (let i = 0; i < blen; i += bpe) {\n    for (let j = i + bpe - 1, k = i; j > k; j--, k++) {\n      tmp = u8[k];\n      u8[k] = u8[j];\n      u8[j] = tmp;\n    }\n  }\n}\n\n/**\n * Data reader.\n */\nexport class DataReader {\n\n  /**\n   * The input buffer.\n   *\n   * @type {ArrayBuffer}\n   */\n  #buffer;\n\n  /**\n   * Is the endianness Little Endian.\n   *\n   * @type {boolean}\n   */\n  #isLittleEndian = true;\n\n  /**\n   * Is the Native endianness Little Endian.\n   *\n   * @type {boolean}\n   */\n  #isNativeLittleEndian = isNativeLittleEndian();\n\n  /**\n   * Flag to know if the TypedArray data needs flipping.\n   *\n   * @type {boolean}\n   */\n  #needFlip;\n\n  /**\n   * The main data view.\n   *\n   * @type {DataView}\n   */\n  #view;\n\n  /**\n   * @param {ArrayBuffer} buffer The input array buffer.\n   * @param {boolean} [isLittleEndian] Flag to tell if the data is little\n   *   or big endian (default: true).\n   */\n  constructor(buffer, isLittleEndian) {\n    this.#buffer = buffer;\n    // Set endian flag if not defined.\n    if (typeof isLittleEndian !== 'undefined') {\n      this.#isLittleEndian = isLittleEndian;\n    }\n    this.#needFlip = (this.#isLittleEndian !== this.#isNativeLittleEndian);\n    this.#view = new DataView(buffer);\n  }\n\n  /**\n   * Read Uint16 (2 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readUint16(byteOffset) {\n    return this.#view.getUint16(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Int16 (2 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readInt16(byteOffset) {\n    return this.#view.getInt16(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Uint32 (4 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readUint32(byteOffset) {\n    return this.#view.getUint32(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read BigUint64 (8 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {bigint} The read data.\n   */\n  readBigUint64(byteOffset) {\n    return this.#view.getBigUint64(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Int32 (4 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readInt32(byteOffset) {\n    return this.#view.getInt32(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read BigInt64 (8 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {bigint} The read data.\n   */\n  readBigInt64(byteOffset) {\n    return this.#view.getBigInt64(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Float32 (4 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readFloat32(byteOffset) {\n    return this.#view.getFloat32(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read Float64 (8 bytes) data.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {number} The read data.\n   */\n  readFloat64(byteOffset) {\n    return this.#view.getFloat64(byteOffset, this.#isLittleEndian);\n  }\n\n  /**\n   * Read binary (0/1) array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Uint8Array} The read data.\n   */\n  readBinaryArray(byteOffset, size) {\n    // input\n    const bitArray = new Uint8Array(this.#buffer, byteOffset, size);\n    // result\n    const byteArrayLength = 8 * bitArray.length;\n    const data = new Uint8Array(byteArrayLength);\n    let bitNumber = 0;\n    let bitIndex = 0;\n    for (let i = 0; i < byteArrayLength; ++i) {\n      bitNumber = i % 8;\n      bitIndex = Math.floor(i / 8);\n      // see https://stackoverflow.com/questions/4854207/get-a-specific-bit-from-byte/4854257\n      // @ts-ignore\n      data[i] = 255 * ((bitArray[bitIndex] & (1 << bitNumber)) !== 0);\n    }\n    return data;\n  }\n\n  /**\n   * Read Uint8 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Uint8Array} The read data.\n   */\n  readUint8Array(byteOffset, size) {\n    return new Uint8Array(this.#buffer, byteOffset, size);\n  }\n\n  /**\n   * Read Int8 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Int8Array} The read data.\n   */\n  readInt8Array(byteOffset, size) {\n    return new Int8Array(this.#buffer, byteOffset, size);\n  }\n\n  /**\n   * Read Uint16 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Uint16Array} The read data.\n   */\n  readUint16Array(byteOffset, size) {\n    const bpe = Uint16Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Uint16Array.BYTES_PER_ELEMENT (=2)\n    if (byteOffset % bpe === 0) {\n      data = new Uint16Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Uint16Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readUint16(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Int16 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Int16Array} The read data.\n   */\n  readInt16Array(byteOffset, size) {\n    const bpe = Int16Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Int16Array.BYTES_PER_ELEMENT (=2)\n    if (byteOffset % bpe === 0) {\n      data = new Int16Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Int16Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readInt16(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Uint32 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Uint32Array} The read data.\n   */\n  readUint32Array(byteOffset, size) {\n    const bpe = Uint32Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Uint32Array.BYTES_PER_ELEMENT (=4)\n    if (byteOffset % bpe === 0) {\n      data = new Uint32Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Uint32Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readUint32(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Uint64 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {BigUint64Array} The read data.\n   */\n  readUint64Array(byteOffset, size) {\n    const bpe = BigUint64Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of BigUint64Array.BYTES_PER_ELEMENT (=8)\n    if (byteOffset % bpe === 0) {\n      data = new BigUint64Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new BigUint64Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readBigUint64(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Int32 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Int32Array} The read data.\n   */\n  readInt32Array(byteOffset, size) {\n    const bpe = Int32Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Int32Array.BYTES_PER_ELEMENT (=4)\n    if (byteOffset % bpe === 0) {\n      data = new Int32Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Int32Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readInt32(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Int64 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {BigInt64Array} The read data.\n   */\n  readInt64Array(byteOffset, size) {\n    const bpe = BigInt64Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of BigInt64Array.BYTES_PER_ELEMENT (=8)\n    if (byteOffset % bpe === 0) {\n      data = new BigInt64Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new BigInt64Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readBigInt64(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Float32 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Float32Array} The read data.\n   */\n  readFloat32Array(byteOffset, size) {\n    const bpe = Float32Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Float32Array.BYTES_PER_ELEMENT (=4)\n    if (byteOffset % bpe === 0) {\n      data = new Float32Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Float32Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readFloat32(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read Float64 array.\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @param {number} size The size of the array.\n   * @returns {Float64Array} The read data.\n   */\n  readFloat64Array(byteOffset, size) {\n    const bpe = Float64Array.BYTES_PER_ELEMENT;\n    const arraySize = size / bpe;\n    let data = null;\n    // byteOffset should be a multiple of Float64Array.BYTES_PER_ELEMENT (=8)\n    if (byteOffset % bpe === 0) {\n      data = new Float64Array(this.#buffer, byteOffset, arraySize);\n      if (this.#needFlip) {\n        flipArrayEndianness(data);\n      }\n    } else {\n      data = new Float64Array(arraySize);\n      let index = byteOffset;\n      for (let i = 0; i < arraySize; ++i) {\n        data[i] = this.readFloat64(index);\n        index += bpe;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Read data as an hexadecimal string of length 4 (no '0x' prefix).\n   *\n   * @param {number} byteOffset The offset to start reading from.\n   * @returns {string} The read data ('####').\n   */\n  readHex(byteOffset) {\n    // read and convert to hex string\n    const str = this.readUint16(byteOffset).toString(16);\n    // return padded\n    return '0000'.substring(0, 4 - str.length) + str.toUpperCase();\n  }\n\n} // class DataReader\n","import {\n  Tag,\n  getTransferSyntaxUIDTag,\n  isSequenceDelimitationItemTag,\n  isItemDelimitationItemTag,\n  isPixelDataTag\n} from './dicomTag';\nimport {\n  is32bitVLVR,\n  isCharSetStringVR,\n  transferSyntaxes,\n  transferSyntaxKeywords,\n  vrTypes,\n} from './dictionary';\nimport {\n  safeGet,\n  DataElement\n} from './dataElement';\nimport {DataReader} from './dataReader';\nimport {logger} from '../utils/logger';\n\n/**\n * List of DICOM data elements indexed via a 8 character string formed from\n * the group and element numbers.\n *\n * @typedef {Object<string, DataElement>} DataElements\n */\n\n/**\n * Get the version of the library.\n *\n * @returns {string} The version of the library.\n */\nexport function getDwvVersion() {\n  return '0.35.0-beta.20';\n}\n\n/**\n * Get the version of the library as a Unique Identifier (UI),\n * meaning just numbers and dots.\n *\n * @returns {string} The UI version of the library.\n */\nexport function getDwvVersionUI() {\n  // replace beta with '.99'\n  return getDwvVersion().replace('-beta', '.99');\n}\n\n/**\n * Get the dwv UID prefix.\n * Issued by Medical Connections Ltd (www.medicalconnections.co.uk)\n *   on 25/10/2017.\n *\n * @returns {string} The dwv UID prefix.\n */\nexport function getDwvUIDPrefix() {\n  return '1.2.826.0.1.3680043.9.7278.1';\n}\n\n/**\n * Get the value of the ImplementationVersionName tag.\n *\n * @returns {string} The name.\n */\nexport function getImplementationVersionName() {\n  return 'DWV_' + getDwvVersion();\n}\n\n/**\n * Get the value of the ImplementationClassUID tag.\n *\n * @returns {string} The uid.\n */\nexport function getImplementationClassUID() {\n  return getDwvUIDPrefix() + '.' + getDwvVersionUI();\n}\n\n/**\n * Get the dwv version from the value of the\n *   ImplementationClassUID tag.\n *\n * @param {string} uid The uid.\n * @returns {string|undefined} The dwv version.\n */\nexport function getDwvVersionFromImplementationClassUID(uid) {\n  let version;\n  const dwvPrefix = getDwvUIDPrefix();\n  if (uid.startsWith(dwvPrefix)) {\n    // reverse getDwvVersionUI\n    version = uid.substring(dwvPrefix.length + 1).replace('.99', '-beta');\n  }\n  return version;\n}\n\n/**\n * Split a string version into parts.\n * The input version follows a 'm.n.p[-beta.q]' version sheme (related\n *   to semantic versioning).\n *\n * @param {string} version The version.\n * @returns {string[]} The splited version.\n */\nfunction splitVersion(version) {\n  const split = version.split('-');\n  let versions = [];\n  for (const s of split) {\n    versions = versions.concat(s.split('.'));\n  }\n  return versions;\n}\n\n/**\n * Compare versions.\n * The input versions follow a 'm.n.p[-beta.q]' version sheme (related\n *   to semantic versioning).\n *\n * @param {string} a The first version.\n * @param {string} b The second version.\n * @returns {number} >0 to sort a after b, <0 to sort a before b,\n *   0 to not change order.\n */\nexport function compareVersions(a, b) {\n  let res = 0;\n  const splitA = splitVersion(a);\n  const splitB = splitVersion(b);\n  for (let i = 0; i < 3; ++i) {\n    res = parseInt(splitA[i], 10) - parseInt(splitB[i], 10);\n    if (res !== 0) {\n      break;\n    }\n  }\n  // beta part\n  if (res === 0) {\n    const betaIndex = 4;\n    const betaA = splitA[betaIndex];\n    const betaB = splitB[betaIndex];\n    if (typeof betaA === 'undefined' &&\n      typeof betaB === 'undefined') {\n      res = 0;\n    } else if (typeof betaA === 'undefined' &&\n      typeof betaB !== 'undefined') {\n      res = 1;\n    } else if (typeof betaA !== 'undefined' &&\n      typeof betaB === 'undefined') {\n      res = -1;\n    } else {\n      res = parseInt(betaA, 10) - parseInt(betaB, 10);\n    }\n  }\n  return res;\n}\n\n/**\n * Check if a version in inside bounds (bounds inclusives).\n * The input version follows a 'm.n.p[-beta.q]' version sheme (related\n *   to semantic versioning).\n *\n * @param {string} version The version to check.\n * @param {string} min The minimum version.\n * @param {string} max The maximum version.\n * @returns {boolean} True if the version in inside the bounds.\n */\nexport function isVersionInBounds(version, min, max) {\n  const compareMin = compareVersions(version, min);\n  const compareMax = compareVersions(version, max);\n  return compareMin >= 0 && compareMax <= 0;\n}\n\n/**\n * Check that an input buffer includes the DICOM prefix 'DICM'\n *   after the 128 bytes preamble.\n *\n * Ref: [DICOM File Meta]{@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part10/chapter_7.html#sect_7.1}.\n *\n * @param {ArrayBuffer} buffer The buffer to check.\n * @returns {boolean} True if the buffer includes the prefix.\n */\nexport function hasDicomPrefix(buffer) {\n  // check size: typed array constructor will throw RangeError if\n  // byteOffset + length * TypedArray.BYTES_PER_ELEMENT > buffer.byteLength\n  if (buffer.byteLength < 132) {\n    return false;\n  }\n  const prefixArray = new Uint8Array(buffer, 128, 4);\n  const stringReducer = function (previous, current) {\n    return previous += String.fromCharCode(current);\n  };\n  return prefixArray.reduce(stringReducer, '') === 'DICM';\n}\n\n// Zero-width space (u200B)\n// @ts-ignore\nconst ZWS = String.fromCharCode('u200B');\n\n/**\n * Clean string: remove zero-width space ending and trim.\n * Warning: no tests are done on the input, will fail if\n *   null or undefined or not string.\n * Exported for tests only.\n *\n * @param {string} inputStr The string to clean.\n * @returns {string} The cleaned string.\n */\nexport function cleanString(inputStr) {\n  let res = inputStr;\n  // get rid of ending zero-width space\n  const lastIndex = inputStr.length - 1;\n  if (inputStr[lastIndex] === ZWS) {\n    res = inputStr.substring(0, lastIndex);\n  }\n  // trim spaces\n  res = res.trim();\n  // return\n  return res;\n}\n\n/**\n * Get the utfLabel (used by the TextDecoder) from a character set term.\n *\n * References:\n * - DICOM [Value Encoding]{@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/chapter_6.html},\n * - DICOM [Specific Character Set]{@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.12.html#sect_C.12.1.1.2},\n * - [TextDecoder#Parameters]{@link https://developer.mozilla.org/en-US/docs/Web/API/TextDecoder/TextDecoder#Parameters}.\n *\n * @param {string} charSetTerm The DICOM character set.\n * @returns {string} The corresponding UTF label.\n */\nfunction getUtfLabel(charSetTerm) {\n  let label = 'utf-8';\n  if (charSetTerm === 'ISO_IR 100') {\n    label = 'iso-8859-1';\n  } else if (charSetTerm === 'ISO_IR 101') {\n    label = 'iso-8859-2';\n  } else if (charSetTerm === 'ISO_IR 109') {\n    label = 'iso-8859-3';\n  } else if (charSetTerm === 'ISO_IR 110') {\n    label = 'iso-8859-4';\n  } else if (charSetTerm === 'ISO_IR 144') {\n    label = 'iso-8859-5';\n  } else if (charSetTerm === 'ISO_IR 127') {\n    label = 'iso-8859-6';\n  } else if (charSetTerm === 'ISO_IR 126') {\n    label = 'iso-8859-7';\n  } else if (charSetTerm === 'ISO_IR 138') {\n    label = 'iso-8859-8';\n  } else if (charSetTerm === 'ISO_IR 148') {\n    label = 'iso-8859-9';\n  } else if (charSetTerm === 'ISO_IR 13') {\n    label = 'shift-jis';\n  } else if (charSetTerm === 'ISO_IR 166') {\n    label = 'iso-8859-11';\n  } else if (charSetTerm === 'ISO 2022 IR 87') {\n    label = 'iso-2022-jp';\n  } else if (charSetTerm === 'ISO 2022 IR 149') {\n    // not supported by TextDecoder when it says it should...\n    //label = \"iso-2022-kr\";\n  } else if (charSetTerm === 'ISO 2022 IR 58') {\n    // not supported by TextDecoder...\n    //label = \"iso-2022-cn\";\n  } else if (charSetTerm === 'ISO_IR 192') {\n    label = 'utf-8';\n  } else if (charSetTerm === 'GB18030') {\n    label = 'gb18030';\n  } else if (charSetTerm === 'GB2312') {\n    label = 'gb2312';\n  } else if (charSetTerm === 'GBK') {\n    label = 'chinese';\n  }\n  return label;\n}\n\n/**\n * Default text decoder.\n */\nclass DefaultTextDecoder {\n  /**\n   * Decode an input string buffer.\n   *\n   * @param {Uint8Array} buffer The buffer to decode.\n   * @returns {string} The decoded string.\n   */\n  decode(buffer) {\n    let result = '';\n    for (let i = 0, leni = buffer.length; i < leni; ++i) {\n      result += String.fromCharCode(buffer[i]);\n    }\n    return result;\n  }\n}\n\n/**\n * Get patient orientation label in the reverse direction.\n *\n * @param {string} ori Patient Orientation value.\n * @returns {string} Reverse Orientation Label.\n */\nexport function getReverseOrientation(ori) {\n  if (!ori) {\n    return null;\n  }\n  // reverse labels\n  const rlabels = {\n    L: 'R',\n    R: 'L',\n    A: 'P',\n    P: 'A',\n    H: 'F',\n    F: 'H'\n  };\n\n  let rori = '';\n  for (let n = 0; n < ori.length; n++) {\n    const o = ori.substring(n, n + 1);\n    const r = rlabels[o];\n    if (r) {\n      rori += r;\n    }\n  }\n  // return\n  return rori;\n}\n\n/**\n * Tell if a given syntax is an implicit one (element with no VR).\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if an implicit syntax.\n */\nexport function isImplicitTransferSyntax(syntax) {\n  return syntax === transferSyntaxKeywords.ImplicitVRLittleEndian;\n}\n\n/**\n * Tell if a given syntax is a big endian syntax.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a big endian syntax.\n */\nexport function isBigEndianTransferSyntax(syntax) {\n  return syntax === transferSyntaxKeywords.ExplicitVRBigEndian;\n}\n\n/**\n * Tell if a given syntax is a JPEG baseline one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a jpeg baseline syntax.\n */\nexport function isJpegBaselineTransferSyntax(syntax) {\n  return syntax === transferSyntaxKeywords.JPEGBaseline8Bit ||\n    syntax === transferSyntaxKeywords.JPEGExtended12Bit;\n}\n\n/**\n * Tell if a given syntax is a JPEG Lossless one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a jpeg lossless syntax.\n */\nexport function isJpegLosslessTransferSyntax(syntax) {\n  return syntax === transferSyntaxKeywords.JPEGLossless ||\n    syntax === transferSyntaxKeywords.JPEGLosslessSV1;\n}\n\n/**\n * Tell if a given syntax is a JPEG 2000 one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a jpeg 2000 syntax.\n */\nexport function isJpeg2000TransferSyntax(syntax) {\n  return syntax.match(/1.2.840.10008.1.2.4.9/) !== null;\n}\n\n/**\n * Tell if a given syntax is a RLE (Run-length encoding) one.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a RLE syntax.\n */\nfunction isRleTransferSyntax(syntax) {\n  return syntax === transferSyntaxKeywords.RLELossless;\n}\n\n/**\n * Tell if a given syntax needs decompression.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {string|undefined} The name of the decompression algorithm.\n */\nexport function getSyntaxDecompressionName(syntax) {\n  let algo;\n  if (isJpeg2000TransferSyntax(syntax)) {\n    algo = 'jpeg2000';\n  } else if (isJpegBaselineTransferSyntax(syntax)) {\n    algo = 'jpeg-baseline';\n  } else if (isJpegLosslessTransferSyntax(syntax)) {\n    algo = 'jpeg-lossless';\n  } else if (isRleTransferSyntax(syntax)) {\n    algo = 'rle';\n  }\n  return algo;\n}\n\n/**\n * Tell if a given syntax is supported for reading.\n *\n * @param {string} syntax The transfer syntax to test.\n * @returns {boolean} True if a supported syntax.\n */\nfunction isReadSupportedTransferSyntax(syntax) {\n  return (syntax === transferSyntaxKeywords.ImplicitVRLittleEndian ||\n    syntax === transferSyntaxKeywords.ExplicitVRLittleEndian ||\n    syntax === transferSyntaxKeywords.ExplicitVRBigEndian ||\n    isJpegBaselineTransferSyntax(syntax) ||\n    isJpegLosslessTransferSyntax(syntax) ||\n    isJpeg2000TransferSyntax(syntax) ||\n    isRleTransferSyntax(syntax));\n}\n\n/**\n * Get a transfer syntax name from its UID.\n *\n * @param {string} syntax The transfer syntax UID value.\n * @returns {string} The transfer syntax name.\n */\nexport function getTransferSyntaxName(syntax) {\n  let name = 'Unknown';\n  if (typeof transferSyntaxes[syntax] !== 'undefined') {\n    name = transferSyntaxes[syntax];\n  }\n  return name;\n}\n\n/**\n * Guess the transfer syntax from the first data element.\n *\n * See {@link https://github.com/ivmartel/dwv/issues/188}\n *   (Allow to load DICOM with no DICM preamble) for more details.\n *\n * @param {DataElement} firstDataElement The first data element\n *   of the DICOM header.\n * @returns {DataElement} The transfer syntax data element.\n */\nfunction guessTransferSyntax(firstDataElement) {\n  const oEightGroupBigEndian = '0800';\n  const oEightGroupLittleEndian = '0008';\n  // check that group is 0008\n  const group = firstDataElement.tag.getGroup();\n  if (group !== oEightGroupBigEndian &&\n    group !== oEightGroupLittleEndian) {\n    throw new Error(\n      'Not a valid DICOM file (no magic DICM word found' +\n        ' and first element not in 0008 group)'\n    );\n  }\n  // reasonable assumption: 2 uppercase characters => explicit vr\n  const vr = firstDataElement.vr;\n  const vr0 = vr.charCodeAt(0);\n  const vr1 = vr.charCodeAt(1);\n  const implicit = (vr0 >= 65 && vr0 <= 90 && vr1 >= 65 && vr1 <= 90)\n    ? false : true;\n  // guess transfer syntax\n  let syntax = null;\n  if (group === oEightGroupLittleEndian) {\n    if (implicit) {\n      syntax = transferSyntaxKeywords.ImplicitVRLittleEndian;\n    } else {\n      syntax = transferSyntaxKeywords.ExplicitVRLittleEndian;\n    }\n  } else {\n    if (implicit) {\n      // ImplicitVRBigEndian: impossible\n      throw new Error(\n        'Not a valid DICOM file (no magic DICM word found' +\n        'and implicit VR big endian detected)'\n      );\n    } else {\n      syntax = transferSyntaxKeywords.ExplicitVRBigEndian;\n    }\n  }\n  // set transfer syntax data element\n  const dataElement = new DataElement('UI');\n  dataElement.tag = getTransferSyntaxUIDTag();\n  dataElement.value = [syntax];\n  dataElement.vl = dataElement.value[0].length;\n  dataElement.startOffset = firstDataElement.startOffset;\n  dataElement.endOffset = dataElement.startOffset + dataElement.vl;\n\n  return dataElement;\n}\n\n/**\n * Get the appropriate TypedArray in function of arguments.\n *\n * @param {number} bitsAllocated The number of bites used to store\n *   the data: [8, 16, 32].\n * @param {number} pixelRepresentation The pixel representation,\n *   0:unsigned;1:signed.\n * @param {number} size The size of the new array.\n * @returns {Uint8Array|Int8Array|Uint16Array|Int16Array|Uint32Array|Int32Array}\n *   The good typed array.\n */\nexport function getTypedArray(bitsAllocated, pixelRepresentation, size) {\n  let res = null;\n  try {\n    if (bitsAllocated === 1 || bitsAllocated === 8) {\n      if (pixelRepresentation === 0) {\n        res = new Uint8Array(size);\n      } else {\n        res = new Int8Array(size);\n      }\n    } else if (bitsAllocated === 16) {\n      if (pixelRepresentation === 0) {\n        res = new Uint16Array(size);\n      } else {\n        res = new Int16Array(size);\n      }\n    } else if (bitsAllocated === 32) {\n      if (pixelRepresentation === 0) {\n        res = new Uint32Array(size);\n      } else {\n        res = new Int32Array(size);\n      }\n    }\n  } catch (error) {\n    if (error instanceof RangeError) {\n      const powerOf2 = Math.floor(Math.log(size) / Math.log(2));\n      logger.error('Cannot allocate array of size: ' +\n        size + ' (>2^' + powerOf2 + ').');\n    }\n  }\n  return res;\n}\n\n/**\n * Get the number of bytes occupied by a data element prefix,\n *   (without its value).\n *\n * WARNING: this is valid for tags with a VR, if not sure use\n *   the 'isTagWithVR' function first.\n *\n * Reference:\n * - [Data Element explicit]{@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/chapter_7.html#table_7.1-1},\n * - [Data Element implicit]{@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_7.5.2.html#table_7.5-1}.\n *\n * ```\n * | Tag | VR  | VL | Value |\n * | 4   | 2   | 2  | X     | -> regular explicit: 8 + X\n * | 4   | 2+2 | 4  | X     | -> 32bit VL: 12 + X\n *\n * | Tag | VL | Value |\n * | 4   | 4  | X     | -> implicit (32bit VL): 8 + X\n *\n * | Tag | Len | Value |\n * | 4   | 4   | X     | -> item: 8 + X\n * ```\n *\n * @param {string} vr The Value Representation of the element.\n * @param {boolean} isImplicit Does the data use implicit VR?\n * @returns {number} The size of the element prefix.\n */\nexport function getDataElementPrefixByteSize(vr, isImplicit) {\n  return isImplicit ? 8 : is32bitVLVR(vr) ? 12 : 8;\n}\n\n/**\n * Is the input VR a known VR.\n *\n * @param {string} vr The vr to test.\n * @returns {boolean} True if known.\n */\nfunction isKnownVR(vr) {\n  const extraVrTypes = ['NONE', 'ox', 'xx', 'xs'];\n  const knownTypes = Object.keys(vrTypes).concat(extraVrTypes);\n  return knownTypes.includes(vr);\n}\n\n/**\n * Small list of used tag keys.\n */\nconst TagKeys = {\n  TransferSyntax: '00020010',\n  SpecificCharacterSet: '00080005',\n  NumberOfFrames: '00280008',\n  BitsAllocated: '00280100',\n  PixelRepresentation: '00280103',\n  PixelData: '7FE00010'\n};\n\n/**\n * DicomParser class.\n *\n * @example\n * // XMLHttpRequest onload callback\n * const onload = function (event) {\n *   // setup the dicom parser\n *   const dicomParser = new dwv.DicomParser();\n *   // parse the buffer\n *   dicomParser.parse(event.target.response);\n *   // get the dicom tags\n *   const tags = dicomParser.getDicomElements();\n *   // display the modality\n *   const div = document.getElementById('dwv');\n *   div.appendChild(document.createTextNode(\n *     'Modality: ' + tags['00080060'].value[0]\n *   ));\n * };\n * // DICOM file request\n * const request = new XMLHttpRequest();\n * const url = 'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm';\n * request.open('GET', url);\n * request.responseType = 'arraybuffer';\n * request.onload = onload;\n * request.send();\n */\nexport class DicomParser {\n\n  /**\n   * The list of DICOM elements.\n   *\n   * @type {DataElements}\n   */\n  #dataElements = {};\n\n  /**\n   * Default character set (optional).\n   *\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * Default text decoder.\n   *\n   * @type {DefaultTextDecoder}\n   */\n  #defaultTextDecoder = new DefaultTextDecoder();\n\n  /**\n   * Special text decoder.\n   *\n   * @type {DefaultTextDecoder|TextDecoder}\n   */\n  #textDecoder = this.#defaultTextDecoder;\n\n  /**\n   * Decode an input string buffer using the default text decoder.\n   *\n   * @param {Uint8Array} buffer The buffer to decode.\n   * @returns {string} The decoded string.\n   */\n  #decodeString(buffer) {\n    return this.#defaultTextDecoder.decode(buffer);\n  }\n\n  /**\n   * Decode an input string buffer using the 'special' text decoder.\n   *\n   * @param {Uint8Array} buffer The buffer to decode.\n   * @returns {string} The decoded string.\n   */\n  #decodeSpecialString(buffer) {\n    return this.#textDecoder.decode(buffer);\n  }\n\n  /**\n   * Get the default character set.\n   *\n   * @returns {string} The default character set.\n   */\n  getDefaultCharacterSet() {\n    return this.#defaultCharacterSet;\n  }\n\n  /**\n   * Set the default character set.\n   *\n   * @param {string} characterSet The input character set.\n   */\n  setDefaultCharacterSet(characterSet) {\n    this.#defaultCharacterSet = characterSet;\n  }\n\n  /**\n   * Set the text decoder character set.\n   *\n   * @param {string} characterSet The input character set.\n   */\n  setDecoderCharacterSet(characterSet) {\n    /**\n     * The text decoder.\n     *\n     * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/API/TextDecoder}.\n     *\n     * @external TextDecoder\n     */\n    this.#textDecoder = new TextDecoder(characterSet);\n  }\n\n  // not using type DataElements since the typedef is not exported with the API\n\n  /**\n   * Get the DICOM data elements.\n   *\n   * @returns {Object<string, DataElement>} The data elements.\n   */\n  getDicomElements() {\n    return this.#dataElements;\n  }\n\n  /**\n   * Safely get an elements' first value from the parsed elements.\n   *\n   * @param {string} key The tag key as for example '00100020'.\n   * @returns {any|undefined} The elements' value or undefined.\n   */\n  safeGet(key) {\n    return safeGet(this.#dataElements, key);\n  }\n\n  /**\n   * Read a DICOM tag.\n   *\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} offset The offset where to start to read.\n   * @returns {object} An object containing the tag and the end offset.\n   */\n  #readTag(reader, offset) {\n    // group\n    const group = reader.readHex(offset);\n    offset += Uint16Array.BYTES_PER_ELEMENT;\n    // element\n    const element = reader.readHex(offset);\n    offset += Uint16Array.BYTES_PER_ELEMENT;\n    // return\n    return {\n      tag: new Tag(group, element),\n      endOffset: offset\n    };\n  }\n\n  /**\n   * Read an item data element.\n   *\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} offset The offset where to start to read.\n   * @param {boolean} implicit Is the DICOM VR implicit?\n   * @returns {object} The item data as a list of data elements.\n   */\n  #readItemDataElement(reader, offset, implicit) {\n    const itemData = {};\n\n    // read the first item\n    let item = this.#readDataElement(reader, offset, implicit);\n    offset = item.endOffset;\n\n    // exit if it is a sequence delimitation item\n    if (isSequenceDelimitationItemTag(item.tag)) {\n      return {\n        data: itemData,\n        endOffset: item.endOffset,\n        isSeqDelim: true\n      };\n    }\n\n    // store item (mainly to keep vl)\n    itemData[item.tag.getKey()] = {\n      tag: item.tag,\n      vr: 'NONE',\n      vl: item.vl,\n      undefinedLength: item.undefinedLength\n    };\n\n    if (!item.undefinedLength) {\n      // explicit VR item: read until the end offset\n      const endOffset = offset;\n      offset -= item.vl;\n      while (offset < endOffset) {\n        item = this.#readDataElement(reader, offset, implicit);\n        offset = item.endOffset;\n        itemData[item.tag.getKey()] = item;\n      }\n    } else {\n      // implicit VR item: read until the item delimitation item\n      let isItemDelim = false;\n      while (!isItemDelim) {\n        item = this.#readDataElement(reader, offset, implicit);\n        offset = item.endOffset;\n        isItemDelim = isItemDelimitationItemTag(item.tag);\n        if (!isItemDelim) {\n          itemData[item.tag.getKey()] = item;\n        }\n      }\n    }\n\n    return {\n      data: itemData,\n      endOffset: offset,\n      isSeqDelim: false\n    };\n  }\n\n  /**\n   * Read the pixel item data element.\n   * Ref: [Single frame fragments]{@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_A.4.html#table_A.4-1}.\n   *\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} offset The offset where to start to read.\n   * @param {boolean} implicit Is the DICOM VR implicit?\n   * @returns {object} The item data as an array of data elements.\n   */\n  #readPixelItemDataElement(\n    reader, offset, implicit) {\n    const itemData = [];\n\n    // first item: basic offset table\n    let item = this.#readDataElement(reader, offset, implicit);\n    const offsetTableVl = item.vl;\n    offset = item.endOffset;\n\n    // read until the sequence delimitation item\n    let isSeqDelim = false;\n    while (!isSeqDelim) {\n      item = this.#readDataElement(reader, offset, implicit);\n      offset = item.endOffset;\n      isSeqDelim = isSequenceDelimitationItemTag(item.tag);\n      if (!isSeqDelim) {\n        // force pixel item vr to OB\n        item.vr = 'OB';\n        itemData.push(item);\n      }\n    }\n\n    return {\n      data: itemData,\n      endOffset: offset,\n      offsetTableVl: offsetTableVl\n    };\n  }\n\n  /**\n   * Read a DICOM data element.\n   *\n   * Reference: [DICOM VRs]{@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_6.2.html#table_6.2-1}.\n   *\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} offset The offset where to start to read.\n   * @param {boolean} implicit Is the DICOM VR implicit?\n   * @param {Tag} [untilTag] Optional tag to stop the reading once reached,\n   *   the returned element will only contain the tag.\n   * @returns {DataElement} The data element.\n   */\n  #readDataElement(reader, offset, implicit, untilTag) {\n    // Tag: group, element\n    const readTagRes = this.#readTag(reader, offset);\n    const tag = readTagRes.tag;\n\n    if (typeof untilTag !== 'undefined' &&\n      tag.equals(untilTag)) {\n      const element = new DataElement('');\n      element.tag = tag;\n      return element;\n    }\n\n    offset = readTagRes.endOffset;\n\n    // Value Representation (VR)\n    let vr = null;\n    let is32bitVL = false;\n    if (tag.isWithVR()) {\n      // implicit VR\n      if (implicit) {\n        vr = tag.getVrFromDictionary();\n        if (typeof vr === 'undefined') {\n          vr = 'UN';\n        }\n        is32bitVL = true;\n      } else {\n        vr = this.#decodeString(reader.readUint8Array(offset, 2));\n        offset += 2 * Uint8Array.BYTES_PER_ELEMENT;\n        is32bitVL = is32bitVLVR(vr);\n        // reserved 2 bytes\n        if (is32bitVL) {\n          offset += 2 * Uint8Array.BYTES_PER_ELEMENT;\n        }\n      }\n    } else {\n      vr = 'NONE';\n      is32bitVL = true;\n    }\n\n    // check vr\n    if (!isKnownVR(vr)) {\n      logger.warn('Unknown VR: ' + vr +\n        ' (for tag ' + tag.getKey() + '), treating as \\'UN\\'');\n      vr = 'UN';\n    }\n\n    // Value Length (VL)\n    let vl = 0;\n    if (is32bitVL) {\n      vl = reader.readUint32(offset);\n      offset += Uint32Array.BYTES_PER_ELEMENT;\n    } else {\n      vl = reader.readUint16(offset);\n      offset += Uint16Array.BYTES_PER_ELEMENT;\n    }\n\n    // check the value of VL\n    let undefinedLength = false;\n    if (vl === 0xffffffff) {\n      undefinedLength = true;\n      vl = 0;\n    }\n\n    // treat private tag with unknown VR and zero VL as a sequence (see #799)\n    if (tag.isPrivate() && vr === 'UN' && vl === 0) {\n      vr = 'SQ';\n    }\n\n    let startOffset = offset;\n    let endOffset = startOffset + vl;\n\n    // read sequence elements\n    let data;\n    if (isPixelDataTag(tag) && undefinedLength) {\n      // pixel data sequence (implicit)\n      const pixItemData =\n        this.#readPixelItemDataElement(reader, offset, implicit);\n      offset = pixItemData.endOffset;\n      startOffset += pixItemData.offsetTableVl;\n      data = pixItemData.data;\n      endOffset = offset;\n      vl = offset - startOffset;\n    } else if (vr === 'SQ') {\n      // sequence\n      data = [];\n      let itemData;\n      if (!undefinedLength) {\n        if (vl !== 0) {\n          // explicit VR sequence: read until the end offset\n          const sqEndOffset = offset + vl;\n          while (offset < sqEndOffset) {\n            itemData = this.#readItemDataElement(reader, offset, implicit);\n            data.push(itemData.data);\n            offset = itemData.endOffset;\n          }\n          endOffset = offset;\n          vl = offset - startOffset;\n        }\n      } else {\n        // implicit VR sequence: read until the sequence delimitation item\n        let isSeqDelim = false;\n        while (!isSeqDelim) {\n          itemData = this.#readItemDataElement(reader, offset, implicit);\n          isSeqDelim = itemData.isSeqDelim;\n          offset = itemData.endOffset;\n          // do not store the delimitation item\n          if (!isSeqDelim) {\n            data.push(itemData.data);\n          }\n        }\n        endOffset = offset;\n        vl = offset - startOffset;\n      }\n    }\n\n    // return\n    const element = new DataElement(vr);\n    element.tag = tag;\n    element.vl = vl;\n    element.startOffset = startOffset;\n    element.endOffset = endOffset;\n    // only set if true (only for sequences and items)\n    if (undefinedLength) {\n      element.undefinedLength = undefinedLength;\n    }\n    if (data) {\n      element.items = data;\n    }\n    return element;\n  }\n\n  /**\n   * Interpret the data of an element.\n   *\n   * @param {DataElement} element The data element.\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} [pixelRepresentation] PixelRepresentation 0->unsigned,\n   *   1->signed (needed for pixel data or VR=xs).\n   * @param {number} [bitsAllocated] Bits allocated (needed for pixel data).\n   * @returns {object} The interpreted data.\n   */\n  #interpretElement(\n    element, reader, pixelRepresentation, bitsAllocated) {\n\n    const tag = element.tag;\n    const vl = element.vl;\n    const vr = element.vr;\n    const offset = element.startOffset;\n\n    // data\n    let data = null;\n    const vrType = vrTypes[vr];\n    if (isPixelDataTag(tag)) {\n      if (element.undefinedLength) {\n        // implicit pixel data sequence\n        data = [];\n        for (let j = 0; j < element.items.length; ++j) {\n          data.push(this.#interpretElement(\n            element.items[j], reader,\n            pixelRepresentation, bitsAllocated));\n        }\n        // remove non parsed items\n        delete element.items;\n      } else {\n        // check bits allocated and VR\n        // https://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_A.2.html\n        if (bitsAllocated > 8 && vr === 'OB') {\n          logger.warn(\n            'Reading DICOM pixel data with bitsAllocated>8 and OB VR' +\n            ', treating as OW'\n          );\n          element.vr = 'OW';\n        }\n        // read\n        data = [];\n        if (bitsAllocated === 1) {\n          data.push(reader.readBinaryArray(offset, vl));\n        } else if (bitsAllocated === 8) {\n          if (pixelRepresentation === 0) {\n            data.push(reader.readUint8Array(offset, vl));\n          } else {\n            data.push(reader.readInt8Array(offset, vl));\n          }\n        } else if (bitsAllocated === 16) {\n          if (pixelRepresentation === 0) {\n            data.push(reader.readUint16Array(offset, vl));\n          } else {\n            data.push(reader.readInt16Array(offset, vl));\n          }\n        } else {\n          throw new Error('Unsupported bits allocated: ' + bitsAllocated);\n        }\n      }\n    } else if (typeof vrType !== 'undefined') {\n      if (vrType === 'Uint8') {\n        data = reader.readUint8Array(offset, vl);\n      } else if (vrType === 'Uint16') {\n        data = reader.readUint16Array(offset, vl);\n        // keep as binary for 'O*' VR\n        if (vr[0] !== 'O') {\n          data = Array.from(data);\n        }\n      } else if (vrType === 'Uint32') {\n        data = reader.readUint32Array(offset, vl);\n        // keep as binary for 'O*' VR\n        if (vr[0] !== 'O') {\n          data = Array.from(data);\n        }\n      } else if (vrType === 'Uint64') {\n        data = reader.readUint64Array(offset, vl);\n      } else if (vrType === 'Int16') {\n        data = Array.from(reader.readInt16Array(offset, vl));\n      } else if (vrType === 'Int32') {\n        data = Array.from(reader.readInt32Array(offset, vl));\n      } else if (vrType === 'Int64') {\n        data = reader.readInt64Array(offset, vl);\n      } else if (vrType === 'Float32') {\n        data = Array.from(reader.readFloat32Array(offset, vl));\n      } else if (vrType === 'Float64') {\n        data = Array.from(reader.readFloat64Array(offset, vl));\n      } else if (vrType === 'string') {\n        const stream = reader.readUint8Array(offset, vl);\n        if (isCharSetStringVR(vr)) {\n          data = this.#decodeSpecialString(stream);\n        } else {\n          data = this.#decodeString(stream);\n        }\n        data = cleanString(data).split('\\\\');\n      } else {\n        throw new Error('Unknown VR type: ' + vrType);\n      }\n    } else if (vr === 'xx') {\n      // US or OW\n      data = Array.from(reader.readUint16Array(offset, vl));\n    } else if (vr === 'ox') {\n      // OB or OW\n      if (bitsAllocated === 8) {\n        if (pixelRepresentation === 0) {\n          data = Array.from(reader.readUint8Array(offset, vl));\n        } else {\n          data = Array.from(reader.readInt8Array(offset, vl));\n        }\n      } else {\n        if (pixelRepresentation === 0) {\n          data = Array.from(reader.readUint16Array(offset, vl));\n        } else {\n          data = Array.from(reader.readInt16Array(offset, vl));\n        }\n      }\n    } else if (vr === 'xs') {\n      // (US or SS) or (US or SS or OW)\n      if (pixelRepresentation === 0) {\n        data = Array.from(reader.readUint16Array(offset, vl));\n      } else {\n        data = Array.from(reader.readInt16Array(offset, vl));\n      }\n    } else if (vr === 'AT') {\n      // attribute\n      const raw = reader.readUint16Array(offset, vl);\n      data = [];\n      for (let i = 0, leni = raw.length; i < leni; i += 2) {\n        const stri = raw[i].toString(16);\n        const stri1 = raw[i + 1].toString(16);\n        let str = '(';\n        str += '0000'.substring(0, 4 - stri.length) + stri.toUpperCase();\n        str += ',';\n        str += '0000'.substring(0, 4 - stri1.length) + stri1.toUpperCase();\n        str += ')';\n        data.push(str);\n      }\n    } else if (vr === 'SQ') {\n      // sequence\n      data = [];\n      for (let k = 0; k < element.items.length; ++k) {\n        const item = element.items[k];\n        const itemData = {};\n        const keys = Object.keys(item);\n        let sqBitsAllocated = bitsAllocated;\n        let sqPixelRepresentation = pixelRepresentation;\n        for (let l = 0; l < keys.length; ++l) {\n          // check if local bitsAllocated\n          // (inside item loop to get interpreted value)\n          let dataElement = item[TagKeys.BitsAllocated];\n          if (typeof dataElement !== 'undefined' &&\n            typeof dataElement.value !== 'undefined') {\n            sqBitsAllocated = dataElement.value[0];\n          }\n          // check if local pixelRepresentation\n          // (inside item loop to get interpreted value)\n          dataElement = item[TagKeys.PixelRepresentation];\n          if (typeof dataElement !== 'undefined' &&\n            typeof dataElement.value !== 'undefined') {\n            sqPixelRepresentation = dataElement.value[0];\n          }\n          const subElement = item[keys[l]];\n          subElement.value = this.#interpretElement(\n            subElement, reader,\n            sqPixelRepresentation, sqBitsAllocated);\n          delete subElement.tag;\n          delete subElement.vl;\n          delete subElement.startOffset;\n          delete subElement.endOffset;\n          itemData[keys[l]] = subElement;\n        }\n        data.push(itemData);\n      }\n      // remove non parsed elements\n      delete element.items;\n    } else if (vr === 'NONE') {\n      // no VR -> no data\n      data = [];\n    } else {\n      logger.warn('Unknown VR: ' + vr +\n        ' (for tag ' + element.tag.getKey() + ')');\n      // empty data...\n      data = [];\n    }\n\n    return data;\n  }\n\n  /**\n   * Interpret the data of a list of elements.\n   *\n   * @param {DataElements} elements A list of data elements.\n   * @param {DataReader} reader The raw data reader.\n   * @param {number} pixelRepresentation PixelRepresentation 0->unsigned,\n   *   1->signed.\n   * @param {number} bitsAllocated Bits allocated.\n   */\n  #interpret(\n    elements, reader,\n    pixelRepresentation, bitsAllocated) {\n\n    const keys = Object.keys(elements);\n    for (let i = 0; i < keys.length; ++i) {\n      const element = elements[keys[i]];\n      if (typeof element.value === 'undefined') {\n        element.value = this.#interpretElement(\n          element, reader, pixelRepresentation, bitsAllocated);\n      }\n      // delete interpretation specific properties\n      delete element.tag;\n      delete element.vl;\n      delete element.startOffset;\n      delete element.endOffset;\n    }\n  }\n\n  /**\n   * Parse a DICOM buffer.\n   * Fills in the member object 'dataElements'.\n   *\n   * @param {ArrayBuffer} buffer The input array buffer.\n   * @param {Tag} [untilTag] Optional tag to stop the parsing once reached.\n   */\n  parse(buffer, untilTag) {\n    let offset = 0;\n    let syntax = '';\n    let dataElement = null;\n    // default readers\n    const metaReader = new DataReader(buffer);\n    let dataReader = new DataReader(buffer);\n\n    // 128 -> 132: magic word\n    offset = 128;\n    const magicword = this.#decodeString(metaReader.readUint8Array(offset, 4));\n    offset += 4 * Uint8Array.BYTES_PER_ELEMENT;\n    if (magicword === 'DICM') {\n      // 0002, 0000: FileMetaInformationGroupLength (vr='UL')\n      dataElement = this.#readDataElement(metaReader, offset, false);\n      dataElement.value = this.#interpretElement(dataElement, metaReader);\n      // increment offset\n      offset = dataElement.endOffset;\n      // store the data element\n      this.#dataElements[dataElement.tag.getKey()] = dataElement;\n      // get meta length\n      const metaLength = dataElement.value[0];\n\n      // meta elements\n      const metaEnd = offset + metaLength;\n      while (offset < metaEnd) {\n        // get the data element\n        dataElement = this.#readDataElement(metaReader, offset, false);\n        offset = dataElement.endOffset;\n        // store the data element\n        this.#dataElements[dataElement.tag.getKey()] = dataElement;\n      }\n\n      // check the TransferSyntaxUID (has to be there!)\n      dataElement = this.#dataElements[TagKeys.TransferSyntax];\n      if (typeof dataElement === 'undefined') {\n        throw new Error('Not a valid DICOM file (no TransferSyntaxUID found)');\n      }\n      dataElement.value = this.#interpretElement(dataElement, metaReader);\n      syntax = dataElement.value[0];\n\n    } else {\n      logger.warn('No DICM prefix, trying to guess tansfer syntax.');\n      // read first element\n      dataElement = this.#readDataElement(dataReader, 0, false);\n      // guess transfer syntax\n      const tsElement = guessTransferSyntax(dataElement);\n      // store\n      this.#dataElements[tsElement.tag.getKey()] = tsElement;\n      syntax = tsElement.value[0];\n      // reset offset\n      offset = 0;\n    }\n\n    // check transfer syntax support\n    if (!isReadSupportedTransferSyntax(syntax)) {\n      throw new Error('Unsupported DICOM transfer syntax: \\'' + syntax +\n        '\\' (' + getTransferSyntaxName(syntax) + ')');\n    }\n\n    // set implicit flag\n    let implicit = false;\n    if (isImplicitTransferSyntax(syntax)) {\n      implicit = true;\n    }\n\n    // Big Endian\n    if (isBigEndianTransferSyntax(syntax)) {\n      dataReader = new DataReader(buffer, false);\n    }\n\n    let reachedUntilTag = false;\n\n    // DICOM data elements\n    while (offset < buffer.byteLength) {\n      // get the data element\n      dataElement = this.#readDataElement(\n        dataReader, offset, implicit, untilTag);\n      // until tag\n      if (typeof untilTag !== 'undefined' &&\n        dataElement.tag.equals(untilTag)) {\n        reachedUntilTag = true;\n        break;\n      }\n      // increment offset\n      offset = dataElement.endOffset;\n      // store the data element\n      const key = dataElement.tag.getKey();\n      if (typeof this.#dataElements[key] === 'undefined') {\n        this.#dataElements[key] = dataElement;\n      } else {\n        logger.warn('Not saving duplicate tag: ' + key);\n      }\n    }\n\n    // safety checks...\n    if (isNaN(offset)) {\n      throw new Error('Problem while parsing, bad offset');\n    }\n    if (!reachedUntilTag && buffer.byteLength !== offset) {\n      logger.warn('Did not reach the end of the buffer: ' +\n        offset + ' != ' + buffer.byteLength);\n    }\n\n    //-------------------------------------------------\n    // values needed for data interpretation\n\n    // pixel specific\n    let pixelRepresentation = 0;\n    let bitsAllocated = 16;\n    if (typeof this.#dataElements[TagKeys.PixelData] !== 'undefined') {\n      // PixelRepresentation 0->unsigned, 1->signed\n      dataElement = this.#dataElements[TagKeys.PixelRepresentation];\n      if (typeof dataElement !== 'undefined') {\n        dataElement.value = this.#interpretElement(dataElement, dataReader);\n        pixelRepresentation = dataElement.value[0];\n      } else {\n        logger.warn(\n          'Reading DICOM pixel data with default pixelRepresentation.');\n      }\n\n      // BitsAllocated\n      dataElement = this.#dataElements[TagKeys.BitsAllocated];\n      if (typeof dataElement !== 'undefined') {\n        dataElement.value = this.#interpretElement(dataElement, dataReader);\n        bitsAllocated = dataElement.value[0];\n      } else {\n        logger.warn('Reading DICOM pixel data with default bitsAllocated.');\n      }\n    }\n\n    // default character set\n    if (typeof this.#defaultCharacterSet !== 'undefined') {\n      this.setDecoderCharacterSet(this.#defaultCharacterSet);\n    }\n\n    // SpecificCharacterSet\n    dataElement = this.#dataElements[TagKeys.SpecificCharacterSet];\n    if (typeof dataElement !== 'undefined') {\n      dataElement.value = this.#interpretElement(dataElement, dataReader);\n      let charSetTerm;\n      if (dataElement.value.length === 1) {\n        charSetTerm = dataElement.value[0];\n      } else {\n        charSetTerm = dataElement.value[1];\n        logger.warn('Unsupported character set with code extensions: \\'' +\n          charSetTerm + '\\'.');\n      }\n      this.setDecoderCharacterSet(getUtfLabel(charSetTerm));\n    }\n\n    // interpret the dicom elements\n    this.#interpret(\n      this.#dataElements, dataReader,\n      pixelRepresentation, bitsAllocated\n    );\n\n    // handle fragmented pixel buffer\n    // Reference: http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_8.2.html\n    // (third note, \"Depending on the transfer syntax...\")\n    dataElement = this.#dataElements[TagKeys.PixelData];\n    if (typeof dataElement !== 'undefined') {\n      if (dataElement.undefinedLength) {\n        let numberOfFrames = 1;\n        if (typeof this.#dataElements[TagKeys.NumberOfFrames] !== 'undefined') {\n          numberOfFrames = Number(\n            this.#dataElements[TagKeys.NumberOfFrames].value[0]\n          );\n        }\n        const pixItems = dataElement.value;\n        if (pixItems.length > 1 && pixItems.length > numberOfFrames) {\n          // concatenate pixel data items\n          // concat does not work on typed arrays\n          //this.pixelBuffer = this.pixelBuffer.concat( dataElement.data );\n          // manual concat...\n          const nItemPerFrame = pixItems.length / numberOfFrames;\n          const newPixItems = [];\n          let index = 0;\n          for (let f = 0; f < numberOfFrames; ++f) {\n            index = f * nItemPerFrame;\n            // calculate the size of a frame\n            let size = 0;\n            for (let i = 0; i < nItemPerFrame; ++i) {\n              size += pixItems[index + i].length;\n            }\n            // create new buffer\n            const newBuffer = new pixItems[0].constructor(size);\n            // fill new buffer\n            let fragOffset = 0;\n            for (let j = 0; j < nItemPerFrame; ++j) {\n              newBuffer.set(pixItems[index + j], fragOffset);\n              fragOffset += pixItems[index + j].length;\n            }\n            newPixItems[f] = newBuffer;\n          }\n          // store as pixel data\n          dataElement.value = newPixItems;\n        }\n      }\n    }\n  }\n\n} // class DicomParser\n","import {logger} from './logger';\n\n/**\n * ListenerHandler class: handles add/removing and firing listeners.\n *\n * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget#example}.\n */\nexport class ListenerHandler {\n  /**\n   * Listeners.\n   *\n   * @type {object}\n   */\n  #listeners = {};\n\n  /**\n   * Add an event listener.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *    event type, will be called with the fired event.\n   */\n  add(type, callback) {\n    // create array if not present\n    if (typeof this.#listeners[type] === 'undefined') {\n      this.#listeners[type] = [];\n    }\n    // add callback to listeners array\n    this.#listeners[type].push(callback);\n  }\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  remove(type, callback) {\n    // check if the type is present\n    if (typeof this.#listeners[type] === 'undefined') {\n      return;\n    }\n    // remove from listeners array\n    let nFound = 0;\n    for (let i = 0; i < this.#listeners[type].length; ++i) {\n      if (this.#listeners[type][i] === callback) {\n        ++nFound;\n        this.#listeners[type].splice(i, 1);\n      }\n    }\n    if (nFound === 0) {\n      logger.debug('No callback found on remove listener for type ' + type);\n    }\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  fireEvent = (event) => {\n    // check if they are listeners for the event type\n    if (typeof this.#listeners[event.type] === 'undefined') {\n      return;\n    }\n    // fire events from a copy of the listeners array\n    // to avoid interference from possible add/remove\n    const stack = this.#listeners[event.type].slice();\n    for (let i = 0; i < stack.length; ++i) {\n      stack[i](event);\n    }\n  };\n}\n","import {Index} from '../math/index';\nimport {Point2D} from '../math/point';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\nimport {Matrix33} from '../math/matrix';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get an simple iterator for a given range for a one component data.\n *\n * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols}.\n *\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start The start of the range (included).\n * @param {number} end The end of the range (excluded).\n * @param {number} [increment] The increment between indicies (default=1).\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function simpleRange(dataAccessor, start, end, increment) {\n  if (typeof increment === 'undefined') {\n    increment = 1;\n  }\n  let nextIndex = start;\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        const result = {\n          value: dataAccessor(nextIndex),\n          done: false,\n          index: nextIndex\n        };\n        nextIndex += increment;\n        return result;\n      }\n      return {\n        done: true,\n        index: end\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range for a one component data.\n *\n * Using 'maxIter' and not an 'end' index since it fails in some edge cases\n * (for ex coronal2, ie zxy).\n *\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start Zero-based index at which to start the iteration.\n * @param {number} maxIter The maximum number of iterations.\n * @param {number} increment Increment between indicies.\n * @param {number} blockMaxIter Number of applied increment after which\n *   blockIncrement is applied.\n * @param {number} blockIncrement Increment after blockMaxIter is reached,\n *   the value is from block start to the next block start.\n * @param {boolean} reverse1 If true, loop from end to start.\n *   WARN: don't forget to set the value of start as the last index!\n * @param {boolean} reverse2 If true, loop from block end to block start.\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function range(dataAccessor, start, maxIter, increment,\n  blockMaxIter, blockIncrement, reverse1, reverse2) {\n  if (typeof reverse1 === 'undefined') {\n    reverse1 = false;\n  }\n  if (typeof reverse2 === 'undefined') {\n    reverse2 = false;\n  }\n\n  // first index of the iteration\n  let nextIndex = start;\n  // adapt first index and increments to reverse values\n  if (reverse1) {\n    blockIncrement *= -1;\n    if (reverse2) {\n      // start at end of line\n      nextIndex -= (blockMaxIter - 1) * increment;\n    } else {\n      increment *= -1;\n    }\n  } else {\n    if (reverse2) {\n      // start at end of line\n      nextIndex += (blockMaxIter - 1) * increment;\n      increment *= -1;\n    }\n  }\n  const finalBlockIncrement = blockIncrement - blockMaxIter * increment;\n\n  // counters\n  let mainCount = 0;\n  let blockCount = 0;\n  // result\n  return {\n    next: function () {\n      if (mainCount < maxIter) {\n        const result = {\n          value: dataAccessor(nextIndex),\n          done: false,\n          index: nextIndex\n        };\n        nextIndex += increment;\n        ++mainCount;\n        ++blockCount;\n        if (blockCount === blockMaxIter) {\n          blockCount = 0;\n          nextIndex += finalBlockIncrement;\n        }\n        return result;\n      }\n      return {\n        done: true,\n        index: nextIndex\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range with bounds (for a one component data).\n *\n * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols}.\n *\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start The start of the range (included).\n * @param {number} end The end of the range (excluded).\n * @param {number} increment The increment between indicies.\n * @param {number} regionSize The size of the region to iterate through.\n * @param {number} regionOffset The offset between regions.\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function rangeRegion(\n  dataAccessor, start, end, increment, regionSize, regionOffset) {\n  let nextIndex = start;\n  let regionElementCount = 0;\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        const result = {\n          value: dataAccessor(nextIndex),\n          done: false,\n          index: nextIndex\n        };\n        regionElementCount += 1;\n        nextIndex += increment;\n        if (regionElementCount === regionSize) {\n          regionElementCount = 0;\n          nextIndex += regionOffset;\n        }\n        return result;\n      }\n      return {\n        done: true,\n        index: end\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range with bounds (for a one component data).\n *\n * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols}.\n *\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start The start of the range (included).\n * @param {number} end The end of the range (excluded).\n * @param {number} increment The increment between indicies.\n * @param {number[][]} regions An array of regions: [off0, size, off1].\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function rangeRegions(\n  dataAccessor, start, end, increment, regions) {\n  let nextIndex = start;\n  let regionCount = 0;\n  let regionElementCount = 0;\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        const result = {\n          value: dataAccessor(nextIndex),\n          done: false,\n          index: nextIndex\n        };\n        regionElementCount += 1;\n        nextIndex += increment;\n        if (regionElementCount === regions[regionCount][1]) {\n          regionElementCount = 0;\n          // off1 of current group\n          nextIndex += regions[regionCount][2];\n          regionCount += 1;\n          // off0 of next group\n          if (regionCount < regions.length) {\n            nextIndex += regions[regionCount][0];\n          }\n        }\n        return result;\n      }\n      return {\n        done: true,\n        index: end\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range for a 3 components data.\n *\n * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols}.\n *\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start The start of the range (included).\n * @param {number} end The end of the range (excluded).\n *   (end - start) needs to be a multiple of 3...\n * @param {number} increment The increment between indicies (default=1).\n * @param {boolean} isPlanar A flag to know if the data is planar\n *   (RRRR...GGGG...BBBB...) or not (RGBRGBRGBRGB...), defaults to false.\n * @returns {object} A 3 components iterator folowing the iterator and iterable\n *   protocol, the value is an array of size 3 with each component.\n */\nexport function simpleRange3d(\n  dataAccessor, start, end, increment, isPlanar) {\n  if (typeof increment === 'undefined') {\n    increment = 1;\n  }\n  if (typeof isPlanar === 'undefined') {\n    isPlanar = false;\n  }\n  let nextIndex = start;\n  let componentIncrement = 1;\n  if (isPlanar) {\n    componentIncrement = (end - start) / 3;\n  } else {\n    increment *= 3;\n  }\n  let nextIndex1 = nextIndex + componentIncrement;\n  let nextIndex2 = nextIndex + 2 * componentIncrement;\n\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        const result = {\n          value: [\n            dataAccessor(nextIndex),\n            dataAccessor(nextIndex1),\n            dataAccessor(nextIndex2)\n          ],\n          done: false,\n          index: [nextIndex, nextIndex1, nextIndex2]\n        };\n        nextIndex += increment;\n        nextIndex1 += increment;\n        nextIndex2 += increment;\n        return result;\n      }\n      return {\n        done: true,\n        index: [end]\n      };\n    }\n  };\n}\n\n/**\n * Get an iterator for a given range for a 3 components data.\n *\n * Using 'maxIter' and not an 'end' index since it fails in some edge cases\n * (for ex coronal2, ie zxy).\n *\n * @param {Function} dataAccessor Function to access data.\n * @param {number} start Zero-based index at which to start the iteration.\n * @param {number} maxIter The maximum number of iterations.\n * @param {number} increment Increment between indicies.\n * @param {number} blockMaxIter Number of applied increment after which\n *   blockIncrement is applied.\n * @param {number} blockIncrement Increment after blockMaxIter is reached,\n *   the value is from block start to the next block start.\n * @param {boolean} reverse1 If true, loop from end to start.\n *   WARN: don't forget to set the value of start as the last index!\n * @param {boolean} reverse2 If true, loop from block end to block start.\n * @param {boolean} isPlanar A flag to know if the data is planar\n *   (RRRR...GGGG...BBBB...) or not (RGBRGBRGBRGB...), defaults to false.\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function range3d(dataAccessor, start, maxIter, increment,\n  blockMaxIter, blockIncrement, reverse1, reverse2, isPlanar) {\n  const iters = [];\n  if (isPlanar) {\n    iters.push(range(\n      dataAccessor, start, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n    iters.push(range(\n      dataAccessor, start + maxIter * increment, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n    iters.push(range(\n      dataAccessor, start + 2 * maxIter * increment, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n  } else {\n    increment *= 3;\n    blockIncrement *= 3;\n    iters.push(range(\n      dataAccessor, start, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n    iters.push(range(\n      dataAccessor, start + 1, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n    iters.push(range(\n      dataAccessor, start + 2, maxIter, increment,\n      blockMaxIter, blockIncrement, reverse1, reverse2\n    ));\n  }\n\n  // result\n  return {\n    next: function () {\n      const r0 = iters[0].next();\n      const r1 = iters[1].next();\n      const r2 = iters[2].next();\n      if (!r0.done) {\n        return {\n          value: [\n            r0.value,\n            r1.value,\n            r2.value\n          ],\n          done: false,\n          index: [\n            r0.index,\n            r1.index,\n            r2.index\n          ]\n        };\n      }\n      return {\n        done: true,\n        index: r2.index\n      };\n    }\n  };\n}\n\n/**\n * Get a list of values for a given iterator.\n *\n * @param {object} iterator The iterator to use to loop through data.\n * @returns {Array} The list of values.\n */\nexport function getIteratorValues(iterator) {\n  const values = [];\n  let ival = iterator.next();\n  while (!ival.done) {\n    values.push(ival.value);\n    ival = iterator.next();\n  }\n  return values;\n}\n\n/**\n * Get a slice index iterator.\n *\n * @param {Image} image The image to parse.\n * @param {Index} index The current index.\n * @param {boolean} isRescaled Flag for rescaled values (default false).\n * @param {Matrix33} viewOrientation The view orientation.\n * @returns {object} The slice iterator.\n */\nexport function getSliceIterator(\n  image, index, isRescaled, viewOrientation) {\n  const size = image.getGeometry().getSize();\n  // zero-ify non direction index\n  let dirMax2Index = 2;\n  if (viewOrientation && typeof viewOrientation !== 'undefined') {\n    dirMax2Index = viewOrientation.getColAbsMax(2).index;\n  }\n  const posValues = index.getValues();\n  // keep the main direction and any other than 3D\n  const indexFilter = function (element, i) {\n    return (i === dirMax2Index || i > 2) ? element : 0;\n  };\n  const posStart = new Index(posValues.map(indexFilter));\n  let start = size.indexToOffset(posStart);\n\n  // default to non rescaled data\n  if (typeof isRescaled === 'undefined') {\n    isRescaled = false;\n  }\n  let dataAccessor = null;\n  if (isRescaled) {\n    dataAccessor = function (offset) {\n      return image.getRescaledValueAtOffset(offset);\n    };\n  } else {\n    dataAccessor = function (offset) {\n      return image.getValueAtOffset(offset);\n    };\n  }\n\n  const ncols = size.get(0);\n  const nrows = size.get(1);\n  const nslices = size.get(2);\n  let sliceSize = size.getDimSize(2);\n\n  const ncomp = image.getNumberOfComponents();\n  const isPlanar = image.getPlanarConfiguration() === 1;\n  const getRange = function (\n    dataAccessor, start, maxIter, increment,\n    blockMaxIter, blockIncrement, reverse1, reverse2) {\n    if (ncomp === 1) {\n      return range(dataAccessor, start, maxIter, increment,\n        blockMaxIter, blockIncrement, reverse1, reverse2);\n    } else if (ncomp === 3) {\n      return range3d(dataAccessor, 3 * start, maxIter, increment,\n        blockMaxIter, blockIncrement, reverse1, reverse2, isPlanar);\n    }\n  };\n\n  let rangeObj = null;\n  if (viewOrientation && typeof viewOrientation !== 'undefined') {\n    const dirMax0 = viewOrientation.getColAbsMax(0);\n    const dirMax2 = viewOrientation.getColAbsMax(2);\n\n    // default reverse\n    const reverse1 = false;\n    const reverse2 = false;\n\n    let maxIter = null;\n    if (dirMax2.index === 2) {\n      // axial\n      maxIter = ncols * nrows;\n      if (dirMax0.index === 0) {\n        // xyz\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, 1, ncols, ncols, reverse1, reverse2);\n      } else {\n        // yxz\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, ncols, nrows, 1, reverse1, reverse2);\n      }\n    } else if (dirMax2.index === 0) {\n      // sagittal\n      maxIter = nslices * nrows;\n      if (dirMax0.index === 1) {\n        // yzx\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, ncols, nrows, sliceSize, reverse1, reverse2);\n      } else {\n        // zyx\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, sliceSize, nslices, ncols, reverse1, reverse2);\n      }\n    } else if (dirMax2.index === 1) {\n      // coronal\n      maxIter = nslices * ncols;\n      if (dirMax0.index === 0) {\n        // xzy\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, 1, ncols, sliceSize, reverse1, reverse2);\n      } else {\n        // zxy\n        rangeObj = getRange(dataAccessor,\n          start, maxIter, sliceSize, nslices, 1, reverse1, reverse2);\n      }\n    } else {\n      throw new Error('Unknown direction: ' + dirMax2.index);\n    }\n  } else {\n    if (image.getNumberOfComponents() === 1) {\n      rangeObj = simpleRange(dataAccessor, start, start + sliceSize);\n    } else if (image.getNumberOfComponents() === 3) {\n      // 3 times bigger...\n      start *= 3;\n      sliceSize *= 3;\n      rangeObj = simpleRange3d(\n        dataAccessor, start, start + sliceSize, 1, isPlanar);\n    } else {\n      throw new Error('Unsupported number of components: ' +\n        image.getNumberOfComponents());\n    }\n  }\n\n  return rangeObj;\n}\n\n/**\n * Get a slice index iterator for a rectangular region.\n *\n * @param {Image} image The image to parse.\n * @param {Index} index The current index.\n * @param {boolean} isRescaled Flag for rescaled values (default false).\n * @param {Point2D} min The minimum position (optional).\n * @param {Point2D} max The maximum position (optional).\n * @returns {object} The slice iterator.\n */\nexport function getRegionSliceIterator(\n  image, index, isRescaled, min, max) {\n  if (image.getNumberOfComponents() !== 1) {\n    throw new Error('Unsupported number of components for region iterator: ' +\n      image.getNumberOfComponents());\n  }\n\n  // default to non rescaled data\n  if (typeof isRescaled === 'undefined') {\n    isRescaled = false;\n  }\n  let dataAccessor = null;\n  if (isRescaled) {\n    dataAccessor = function (offset) {\n      return image.getRescaledValueAtOffset(offset);\n    };\n  } else {\n    dataAccessor = function (offset) {\n      return image.getValueAtOffset(offset);\n    };\n  }\n\n  const size = image.getGeometry().getSize();\n  if (typeof min === 'undefined') {\n    min = new Point2D(0, 0);\n  }\n  if (typeof max === 'undefined') {\n    max = new Point2D(\n      size.get(0) - 1,\n      size.get(1)\n    );\n  }\n  // position to pixel for max: extra X is ok, remove extra Y\n  const startOffset = size.indexToOffset(index.getWithNew2D(\n    min.getX(), min.getY()\n  ));\n  const endOffset = size.indexToOffset(index.getWithNew2D(\n    max.getX(), max.getY() - 1\n  ));\n\n  // minimum 1 column\n  const rangeNumberOfColumns = Math.max(1, max.getX() - min.getX());\n  const rowIncrement = size.get(0) - rangeNumberOfColumns;\n\n  return rangeRegion(\n    dataAccessor, startOffset, endOffset + 1,\n    1, rangeNumberOfColumns, rowIncrement);\n}\n\n/**\n * Get a slice index iterator for a rectangular region.\n *\n * @param {Image} image The image to parse.\n * @param {Index} index The current index.\n * @param {boolean} isRescaled Flag for rescaled values (default false).\n * @param {number[][][]} regions An array of [x, y] pairs (min, max).\n * @returns {object|undefined} The slice iterator.\n */\nexport function getVariableRegionSliceIterator(\n  image, index, isRescaled, regions) {\n  if (image.getNumberOfComponents() !== 1) {\n    throw new Error('Unsupported number of components for region iterator: ' +\n      image.getNumberOfComponents());\n  }\n\n  // default to non rescaled data\n  if (typeof isRescaled === 'undefined') {\n    isRescaled = false;\n  }\n  let dataAccessor = null;\n  if (isRescaled) {\n    dataAccessor = function (offset) {\n      return image.getRescaledValueAtOffset(offset);\n    };\n  } else {\n    dataAccessor = function (offset) {\n      return image.getValueAtOffset(offset);\n    };\n  }\n\n  const size = image.getGeometry().getSize();\n\n  const offsetRegions = [];\n  let region;\n  let min = null;\n  let max = null;\n  let regionIndex = null;\n  for (let i = 0; i < regions.length; ++i) {\n    region = regions[i];\n    const width = region[1][0] - region[0][0];\n    if (width !== 0) {\n      regionIndex = i;\n      if (!min) {\n        min = region[0];\n      }\n      offsetRegions.push([\n        region[0][0],\n        width,\n        size.get(0) - region[1][0]\n      ]);\n    }\n  }\n  if (regionIndex !== null) {\n    max = regions[regionIndex][1];\n  }\n\n  // exit if no offsets\n  if (offsetRegions.length === 0) {\n    return undefined;\n  }\n\n  const startOffset = size.indexToOffset(index.getWithNew2D(\n    min[0], min[1]\n  ));\n  const endOffset = size.indexToOffset(index.getWithNew2D(\n    max[0], max[1]\n  ));\n\n  return rangeRegions(\n    dataAccessor, startOffset, endOffset + 1,\n    1, offsetRegions);\n}\n\n/**\n * Get a multiple value iterator. The input array defines the values and\n * their start index.\n *\n * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols}.\n *\n * @param {Array} values An array of {index, value} pairs.\n * @param {number} end The end of the range (excluded).\n * @returns {object} An iterator folowing the iterator and iterable protocol.\n */\nexport function valueRange(values, end) {\n  let nextIndex = 0;\n  let nextValueIndex = 0;\n  // result\n  return {\n    next: function () {\n      if (nextIndex < end) {\n        if (nextValueIndex + 1 < values.length &&\n          nextIndex >= values[nextValueIndex + 1].index) {\n          ++nextValueIndex;\n        }\n        const result = {\n          value: values[nextValueIndex].value,\n          done: false,\n          index: nextIndex\n        };\n        ++nextIndex;\n        return result;\n      }\n      return {\n        done: true,\n        index: end\n      };\n    }\n  };\n}\n","/**\n * Rescale Slope and Intercept.\n */\nexport class RescaleSlopeAndIntercept {\n\n  /**\n   * The slope.\n   *\n   * @type {number}\n   */\n  #slope;\n\n  /**\n   * The intercept.\n   *\n   * @type {number}\n   */\n  #intercept;\n\n  /**\n   * @param {number} slope The slope of the RSI.\n   * @param {number} intercept The intercept of the RSI.\n   */\n  constructor(slope, intercept) {\n    /*// Check the rescale slope.\n      if(typeof(slope) === 'undefined') {\n          slope = 1;\n      }\n      // Check the rescale intercept.\n      if(typeof(intercept) === 'undefined') {\n          intercept = 0;\n      }*/\n    this.#slope = slope;\n    this.#intercept = intercept;\n  }\n\n  /**\n   * Get the slope of the RSI.\n   *\n   * @returns {number} The slope of the RSI.\n   */\n  getSlope() {\n    return this.#slope;\n  }\n\n  /**\n   * Get the intercept of the RSI.\n   *\n   * @returns {number} The intercept of the RSI.\n   */\n  getIntercept() {\n    return this.#intercept;\n  }\n\n  /**\n   * Apply the RSI on an input value.\n   *\n   * @param {number} value The input value.\n   * @returns {number} The value to rescale.\n   */\n  apply(value) {\n    return value * this.#slope + this.#intercept;\n  }\n\n  /**\n   * Check for RSI equality.\n   *\n   * @param {RescaleSlopeAndIntercept} rhs The other RSI to compare to.\n   * @returns {boolean} True if both RSI are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      typeof rhs !== 'undefined' &&\n      this.getSlope() === rhs.getSlope() &&\n      this.getIntercept() === rhs.getIntercept();\n  }\n\n  /**\n   * Is this RSI an ID RSI.\n   *\n   * @returns {boolean} True if the RSI has a slope of 1 and no intercept.\n   */\n  isID() {\n    return (this.getSlope() === 1 && this.getIntercept() === 0);\n  }\n\n} // class RescaleSlopeAndIntercept\n","import {Index} from '../math/index';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Matrix33} from '../math/matrix';\nimport {Scalar2D} from '../math/scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * Immutable Size class.\n * Warning: the input array is NOT cloned, modifying it will\n *  modify the index values.\n */\nexport class Size {\n\n  /**\n   * The size values.\n   *\n   * @type {number[]}\n   */\n  #values;\n\n  /**\n   * @param {number[]} values The size values.\n   */\n  constructor(values) {\n    if (!values || typeof values === 'undefined') {\n      throw new Error('Cannot create size with no values.');\n    }\n    if (values.length === 0) {\n      throw new Error('Cannot create size with empty values.');\n    }\n    const valueCheck = function (val) {\n      return !isNaN(val) && val !== 0;\n    };\n    if (!values.every(valueCheck)) {\n      throw new Error('Cannot create size with non number or zero values.');\n    }\n    this.#values = values;\n  }\n\n  /**\n   * Get the size value at the given array index.\n   *\n   * @param {number} i The index to get.\n   * @returns {number} The value.\n   */\n  get(i) {\n    return this.#values[i];\n  }\n\n  /**\n   * Get the length of the index.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return this.#values.length;\n  }\n\n  /**\n   * Get a string representation of the size.\n   *\n   * @returns {string} The Size as a string.\n   */\n  toString() {\n    return '(' + this.#values.toString() + ')';\n  }\n\n  /**\n   * Get the values of this index.\n   *\n   * @returns {number[]} The array of values.\n   */\n  getValues() {\n    return this.#values.slice();\n  }\n\n  /**\n   * Check if a dimension exists and has more than one element.\n   *\n   * @param {number} dimension The dimension to check.\n   * @returns {boolean} True if the size is more than one.\n   */\n  moreThanOne(dimension) {\n    return this.length() >= dimension + 1 && this.get(dimension) !== 1;\n  }\n\n  /**\n   * Check if the associated data is scrollable in 3D.\n   *\n   * @param {Matrix33} [viewOrientation] The orientation matrix.\n   * @returns {boolean} True if scrollable.\n   */\n  canScroll3D(viewOrientation) {\n    let dimension = 2;\n    if (typeof viewOrientation !== 'undefined') {\n      dimension = viewOrientation.getThirdColMajorDirection();\n    }\n    return this.moreThanOne(dimension);\n  }\n\n  /**\n   * Check if the associated data is scrollable: either in 3D or\n   * in other directions.\n   *\n   * @param {Matrix33} viewOrientation The orientation matrix.\n   * @returns {boolean} True if scrollable.\n   */\n  canScroll(viewOrientation) {\n    let canScroll = this.canScroll3D(viewOrientation);\n    // check possible other dimensions\n    for (let i = 3; i < this.length(); ++i) {\n      canScroll = canScroll || this.moreThanOne(i);\n    }\n    return canScroll;\n  }\n\n  /**\n   * Get the size of a given dimension.\n   *\n   * @param {number} dimension The dimension.\n   * @param {number} [start] Optional start dimension to start counting from.\n   * @returns {number} The size.\n   */\n  getDimSize(dimension, start) {\n    if (dimension > this.length()) {\n      return null;\n    }\n    if (typeof start === 'undefined') {\n      start = 0;\n    } else {\n      if (start < 0 || start > dimension) {\n        throw new Error('Invalid start value for getDimSize');\n      }\n    }\n    let size = 1;\n    for (let i = start; i < dimension; ++i) {\n      size *= this.get(i);\n    }\n    return size;\n  }\n\n  /**\n   * Get the total size.\n   *\n   * @param {number} [start] Optional start dimension to base the offset on.\n   * @returns {number} The total size.\n   */\n  getTotalSize(start) {\n    return this.getDimSize(this.length(), start);\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Size} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    // check input\n    if (!rhs) {\n      return false;\n    }\n    // check length\n    const length = this.length();\n    if (length !== rhs.length()) {\n      return false;\n    }\n    // check values\n    for (let i = 0; i < length; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Check that an index is within bounds.\n   *\n   * @param {Index} index The index to check.\n   * @param {number[]} dirs Optional list of directions to check.\n   * @returns {boolean} True if the given coordinates are within bounds.\n   */\n  isInBounds(index, dirs) {\n    // check input\n    if (!index) {\n      return false;\n    }\n    // check length\n    const length = this.length();\n    if (length !== index.length()) {\n      return false;\n    }\n    // create dirs if not there\n    if (typeof dirs === 'undefined') {\n      dirs = [];\n      for (let j = 0; j < length; ++j) {\n        dirs.push(j);\n      }\n    } else {\n      for (let k = 0; k < length; ++k) {\n        if (dirs[k] > length - 1) {\n          throw new Error('Wrong input dir value: ' + dirs[k]);\n        }\n      }\n    }\n    // check values is 0 <= v < size\n    const inBound = function (value, size) {\n      return value >= 0 && value < size;\n    };\n    // check\n    for (let i = 0; i < dirs.length; ++i) {\n      if (!inBound(index.get(dirs[i]), this.get(dirs[i]))) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Convert an index to an offset in memory.\n   *\n   * @param {Index} index The index to convert.\n   * @param {number} [start] Optional start dimension to base the offset on.\n   * @returns {number} The offset.\n   */\n  indexToOffset(index, start) {\n    // TODO check for equality\n    if (index.length() < this.length()) {\n      throw new Error('Incompatible index and size length');\n    }\n    if (typeof start === 'undefined') {\n      start = 0;\n    } else {\n      if (start < 0 || start > this.length() - 1) {\n        throw new Error('Invalid start value for indexToOffset');\n      }\n    }\n    let offset = 0;\n    for (let i = start; i < this.length(); ++i) {\n      const dimMax = this.get(i);\n      const dimIndex = index.get(i);\n\n      if (dimIndex >= dimMax || dimIndex < 0) {\n        // This index is outside the bounds of the geometry\n        return -1;\n      }\n\n      offset += dimIndex * this.getDimSize(i, start);\n    }\n    return offset;\n  }\n\n  /**\n   * Convert an offset in memory to an index.\n   *\n   * @param {number} offset The offset to convert.\n   * @returns {Index} The index.\n   */\n  offsetToIndex(offset) {\n    const values = new Array(this.length());\n    let off = offset;\n    let dimSize = 0;\n    for (let i = this.length() - 1; i > 0; --i) {\n      dimSize = this.getDimSize(i);\n      values[i] = Math.floor(off / dimSize);\n      off = off - values[i] * dimSize;\n    }\n    values[0] = off;\n    return new Index(values);\n  }\n\n  /**\n   * Get the 2D base of this size.\n   *\n   * @returns {Scalar2D} The 2D base [0,1] as {x,y}.\n   */\n  get2D() {\n    return {\n      x: this.get(0),\n      y: this.get(1)\n    };\n  }\n\n} // Size class\n","/**\n * Statistics storage class.\n * 'simple' statistics do not include median, p25 nor p75.\n */\nexport class Statistics {\n  /**\n   * Minimum.\n   *\n   * @type {number}\n   */\n  min;\n  /**\n   * Maximum.\n   *\n   * @type {number}\n   */\n  max;\n  /**\n   * Mean.\n   *\n   * @type {number}\n   */\n  mean;\n  /**\n   * Standard deviation.\n   *\n   * @type {number}\n   */\n  stdDev;\n  /**\n   * Median.\n   *\n   * @type {number|undefined}\n   */\n  median;\n  /**\n   * 25th percentile.\n   *\n   * @type {number|undefined}\n   */\n  p25;\n  /**\n   * 75th percentile.\n   *\n   * @type {number|undefined}\n   */\n  p75;\n\n  /**\n   * @param {number} min The minimum.\n   * @param {number} max The maxnimum.\n   * @param {number} mean The mean.\n   * @param {number} stdDev The standard deviation.\n   */\n  constructor(min, max, mean, stdDev) {\n    this.min = min;\n    this.max = max;\n    this.mean = mean;\n    this.stdDev = stdDev;\n  }\n}\n\n/**\n * Get statistics on an input array of number.\n * Note: could use {@link https://github.com/tmcw/simple-statistics}.\n *\n * @param {number[]} values The array of values to extract stats from.\n * @param {string[]} flags A list of stat value names to calculate.\n * @returns {Statistics} A statistics object.\n */\nexport function getStats(values, flags) {\n  if (includesFullStatsFlags(flags)) {\n    return getFullStats(values);\n  } else {\n    return getBasicStats(values);\n  }\n}\n\n/**\n * Does the input flag list contain a full stat element?\n *\n * @param {string[]} flags A list of stat values to calculate.\n * @returns {boolean} True if one of the flags is a full stat flag.\n */\nfunction includesFullStatsFlags(flags) {\n  return typeof flags !== 'undefined' &&\n    flags !== null &&\n    (flags.includes('median') ||\n    flags.includes('p25') ||\n    flags.includes('p75'));\n}\n\n/**\n * Get simple stats: minimum, maximum, mean and standard deviation\n * of an array of values.\n *\n * @param {number[]} values The array of values to extract stats from.\n * @returns {Statistics} Simple statistics (no median, p25 nor p75).\n */\nexport function getBasicStats(values) {\n  let min = values[0];\n  let max = min;\n  let sum = 0;\n  let sumSqr = 0;\n  let val = 0;\n  const length = values.length;\n  for (let i = 0; i < length; ++i) {\n    val = values[i];\n    if (val < min) {\n      min = val;\n    } else if (val > max) {\n      max = val;\n    }\n    sum += val;\n    sumSqr += val * val;\n  }\n\n  const mean = sum / length;\n  // see http://en.wikipedia.org/wiki/Algorithms_for_calculating_variance\n  let variance = sumSqr / length - mean * mean;\n  if (variance < 0) {\n    variance = 0;\n  }\n  const stdDev = Math.sqrt(variance);\n\n  return new Statistics(min, max, mean, stdDev);\n}\n\n/**\n * Get full stats: minimum, maximum, mean, standard deviation, median, 25%\n * and 75% percentile of an array of values.\n *\n * @param {number[]} values The array of values to extract stats from.\n * @returns {Statistics} Complete statistics (includes median, p25 and p75).\n */\nfunction getFullStats(values) {\n  // get basic stats\n  const stats = getBasicStats(values);\n\n  // sort array... can get slow...\n  values.sort(function (a, b) {\n    return a - b;\n  });\n\n  stats.median = getPercentile(values, 0.5);\n  stats.p25 = getPercentile(values, 0.25);\n  stats.p75 = getPercentile(values, 0.75);\n\n  return stats;\n}\n\n/**\n * Get an arrays' percentile. Uses linear interpolation for percentiles\n *   that lie between data points.\n * See: {@link https://en.wikipedia.org/wiki/Percentile} (second variant interpolation).\n *\n * @param {number[]} values The sorted array of values.\n * @param {number} ratio The percentile ratio [0-1].\n * @returns {number} The percentile.\n */\nfunction getPercentile(values, ratio) {\n  // check input\n  if (values.length === 0) {\n    throw new Error('Empty array provided for percentile calculation.');\n  }\n  if (ratio < 0 || ratio > 1) {\n    throw new Error(\n      'Invalid ratio provided for percentile calculation: ' + ratio);\n  }\n  // return min for ratio=0 amd max for ratio=1\n  if (ratio === 0) {\n    return values[0];\n  } else if (ratio === 1) {\n    return values[values.length - 1];\n  }\n  // general case: interpolate between indices if needed\n  const i = (values.length - 1) * ratio;\n  const i0 = Math.floor(i);\n  const v0 = values[i0];\n  const v1 = values[i0 + 1];\n  return v0 + (v1 - v0) * (i - i0);\n}\n\n/**\n * Unique ID generator.\n *\n * See {@link http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript}\n *   and this {@link http://stackoverflow.com/a/13403498 answer}.\n *\n * @returns {string} A unique ID.\n */\nexport function guid() {\n  return Math.random().toString(36).substring(2, 15);\n}\n\n/**\n * Number range.\n */\nexport class NumberRange {\n  /**\n   * @type {number}\n   */\n  min;\n  /**\n   * @type {number}\n   */\n  max;\n  /**\n   * @param {number} min The minimum.\n   * @param {number} max The maximum.\n   */\n  constructor(min, max) {\n    this.min = min;\n    this.max = max;\n  }\n}\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {Scalar2D} from '../math/scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * Immutable Spacing class.\n * Warning: the input array is NOT cloned, modifying it will\n *  modify the index values.\n */\nexport class Spacing {\n\n  /**\n   * The spacing values.\n   *\n   * @type {number[]}\n   */\n  #values;\n\n  /**\n   * @param {number[]} values The spacing values.\n   */\n  constructor(values) {\n    if (!values || typeof values === 'undefined') {\n      throw new Error('Cannot create spacing with no values.');\n    }\n    if (values.length === 0) {\n      throw new Error('Cannot create spacing with empty values.');\n    }\n    const valueCheck = function (val) {\n      return !isNaN(val) && val !== 0;\n    };\n    if (!values.every(valueCheck)) {\n      throw new Error('Cannot create spacing with non number or zero values.');\n    }\n    this.#values = values;\n  }\n\n  /**\n   * Get the spacing value at the given array index.\n   *\n   * @param {number} i The index to get.\n   * @returns {number} The value.\n   */\n  get(i) {\n    return this.#values[i];\n  }\n\n  /**\n   * Get the length of the spacing.\n   *\n   * @returns {number} The length.\n   */\n  length() {\n    return this.#values.length;\n  }\n\n  /**\n   * Get a string representation of the spacing.\n   *\n   * @returns {string} The spacing as a string.\n   */\n  toString() {\n    return '(' + this.#values.toString() + ')';\n  }\n\n  /**\n   * Get the values of this spacing.\n   *\n   * @returns {number[]} The array of values.\n   */\n  getValues() {\n    return this.#values.slice();\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Spacing} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    // check input\n    if (!rhs) {\n      return false;\n    }\n    // check length\n    const length = this.length();\n    if (length !== rhs.length()) {\n      return false;\n    }\n    // check values\n    for (let i = 0; i < length; ++i) {\n      if (this.get(i) !== rhs.get(i)) {\n        return false;\n      }\n    }\n    // seems ok!\n    return true;\n  }\n\n  /**\n   * Get the 2D base of this size.\n   *\n   * @returns {Scalar2D} The 2D base [col,row] as {x,y}.\n   */\n  get2D() {\n    return {\n      x: this.get(0),\n      y: this.get(1)\n    };\n  }\n\n} // Spacing class\n","import {\n  getIdentityMat33,\n  REAL_WORLD_EPSILON,\n  BIG_EPSILON_EXPONENT\n} from '../math/matrix';\nimport {Point3D, Point} from '../math/point';\nimport {Vector3D} from '../math/vector';\nimport {Index} from '../math/index';\nimport {getBasicStats} from '../math/stats';\nimport {precisionRound} from '../utils/string';\nimport {logger} from '../utils/logger';\nimport {Size} from './size';\nimport {Spacing} from './spacing';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Matrix33} from '../math/matrix';\n/* eslint-enable no-unused-vars */\n\n/**\n * 2D/3D Geometry class.\n */\nexport class Geometry {\n\n  /**\n   * Array of origins.\n   *\n   * @type {Point3D[]}\n   */\n  #origins;\n\n  /**\n   * Data size.\n   *\n   * @type {Size}\n   */\n  #size;\n\n  /**\n   * Data spacing.\n   *\n   * @type {Spacing}\n   */\n  #spacing;\n\n  /**\n   * Local helper object for time points.\n   *\n   * @type {Object<string, Point3D[]>}\n   */\n  #timeOrigins = {};\n\n  /**\n   * Initial time index.\n   *\n   * @type {number}\n   */\n  #initialTime;\n\n  /**\n   * Data orientation.\n   *\n   * @type {Matrix33}\n   */\n  #orientation = getIdentityMat33();\n\n  /**\n   * Flag to know if new origins were added.\n   *\n   * @type {boolean}\n   */\n  #newOrigins = false;\n\n  /**\n   * @param {Point3D[]} origins The object origins.\n   * @param {Size} size The object size.\n   * @param {Spacing} spacing The object spacing.\n   * @param {Matrix33} [orientation] The object orientation (3*3 matrix,\n   *   default to 3*3 identity).\n   * @param {number} [time] Optional time index.\n   */\n  constructor(origins, size, spacing, orientation, time) {\n    this.#origins = origins;\n    this.#size = size;\n    this.#spacing = spacing;\n    if (typeof time !== 'undefined') {\n      this.#initialTime = time;\n      this.#timeOrigins[time] = origins;\n    }\n    // check input orientation\n    if (typeof orientation !== 'undefined') {\n      this.#orientation = orientation;\n    }\n  }\n\n  /**\n   * Get the time value that was passed at construction.\n   *\n   * @returns {number} The time value.\n   */\n  getInitialTime() {\n    return this.#initialTime;\n  }\n\n  /**\n   * Get the total number of slices.\n   * Can be different from what is stored in the size object\n   *  during a volume with time points creation process.\n   *\n   * @returns {number} The total count.\n   */\n  getCurrentTotalNumberOfSlices() {\n    const keys = Object.keys(this.#timeOrigins);\n    if (keys.length === 0) {\n      return this.#origins.length;\n    }\n    let count = 0;\n    for (let i = 0; i < keys.length; ++i) {\n      count += this.#timeOrigins[keys[i]].length;\n    }\n    return count;\n  }\n\n  /**\n   * Check if a time point has associated slices.\n   *\n   * @param {number} time The time point to check.\n   * @returns {boolean} True if slices are present.\n   */\n  hasSlicesAtTime(time) {\n    return typeof this.#timeOrigins[time] !== 'undefined';\n  }\n\n  /**\n   * Get the number of slices stored for time points preceding\n   * the input one.\n   *\n   * @param {number} time The time point to check.\n   * @returns {number|undefined} The count.\n   */\n  getCurrentNumberOfSlicesBeforeTime(time) {\n    const keys = Object.keys(this.#timeOrigins);\n    if (keys.length === 0) {\n      return undefined;\n    }\n    let count = 0;\n    for (let i = 0; i < keys.length; ++i) {\n      const key = keys[i];\n      if (parseInt(key, 10) === time) {\n        break;\n      }\n      count += this.#timeOrigins[key].length;\n    }\n    return count;\n  }\n\n  /**\n   * Get the object origin.\n   * This should be the lowest origin to ease calculations (?).\n   *\n   * @returns {Point3D} The object origin.\n   */\n  getOrigin() {\n    return this.#origins[0];\n  }\n\n  /**\n   * Get the object origins.\n   *\n   * @returns {Point3D[]} The object origins.\n   */\n  getOrigins() {\n    return this.#origins;\n  }\n\n  /**\n   * Check if a point is in the origin list.\n   *\n   * @param {Point3D} point3D The point to check.\n   * @param {number} [tol] Optional number comparison tolerance\n   *   defaults to Number.EPSILON.\n   * @returns {boolean} True if in list.\n   */\n  includesOrigin(point3D, tol) {\n    for (let i = 0; i < this.#origins.length; ++i) {\n      if (this.#origins[i].isSimilar(point3D, tol)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the object size.\n   * Warning: the size comes as stored in DICOM, meaning that it could\n   * be oriented.\n   *\n   * @param {Matrix33} [viewOrientation] The view orientation (optional).\n   * @returns {Size} The object size.\n   */\n  getSize(viewOrientation) {\n    let res = this.#size;\n    if (viewOrientation && typeof viewOrientation !== 'undefined') {\n      let values = getOrientedArray3D(\n        [\n          this.#size.get(0),\n          this.#size.get(1),\n          this.#size.get(2)\n        ],\n        viewOrientation);\n      values = values.map(Math.abs);\n      res = new Size(values.concat(this.#size.getValues().slice(3)));\n    }\n    return res;\n  }\n\n  /**\n   * Calculate slice spacing from origins and replace current\n   *   if needed.\n   */\n  #updateSliceSpacing() {\n    const geoSliceSpacing = getSliceGeometrySpacing(this.#origins);\n    // update local if needed\n    if (typeof geoSliceSpacing !== 'undefined' &&\n      this.#spacing.get(2) !== geoSliceSpacing) {\n      logger.trace('Using geometric spacing ' + geoSliceSpacing +\n        ' instead of tag spacing ' + this.#spacing.get(2));\n      const values = this.#spacing.getValues();\n      values[2] = geoSliceSpacing;\n      this.#spacing = new Spacing(values);\n    }\n  }\n\n  /**\n   * Get the object spacing.\n   * Warning: the spacing comes as stored in DICOM, meaning that it could\n   * be oriented.\n   *\n   * @param {Matrix33} [viewOrientation] The view orientation (optional).\n   * @returns {Spacing} The object spacing.\n   */\n  getSpacing(viewOrientation) {\n    // update slice spacing after appendSlice\n    if (this.#newOrigins) {\n      this.#updateSliceSpacing();\n      this.#newOrigins = false;\n    }\n    let res = this.#spacing;\n    if (viewOrientation && typeof viewOrientation !== 'undefined') {\n      let orientedValues = getOrientedArray3D(\n        [\n          this.#spacing.get(0),\n          this.#spacing.get(1),\n          this.#spacing.get(2)\n        ],\n        viewOrientation);\n      orientedValues = orientedValues.map(Math.abs);\n      res = new Spacing(orientedValues);\n    }\n    return res;\n  }\n\n  /**\n   * Get the image spacing in real world.\n   *\n   * @returns {Spacing} The object spacing.\n   */\n  getRealSpacing() {\n    // asOneAndZeros to not change spacing values...\n    return this.getSpacing(\n      this.#orientation.getInverse().asOneAndZeros()\n    );\n  }\n\n  /**\n   * Get the object orientation.\n   *\n   * @returns {Matrix33} The object orientation.\n   */\n  getOrientation() {\n    return this.#orientation;\n  }\n\n  /**\n   * Get the slice position of a point in the current slice layout.\n   * Slice indices increase with decreasing origins (high index -> low origin),\n   * this simplified the handling of reconstruction since it means\n   * the displayed data is in the same 'direction' as the extracted data.\n   * As seen in the getOrigin method, the main origin is the lowest one.\n   * This implies that the index to world and reverse method do some flipping\n   * magic...\n   *\n   * @param {Point3D} point The point to evaluate.\n   * @param {number} time Optional time index.\n   * @returns {number} The slice index.\n   */\n  getSliceIndex(point, time) {\n    // cannot use this.worldToIndex(point).getK() since\n    // we cannot guaranty consecutive slices...\n\n    let localOrigins = this.#origins;\n    if (typeof time !== 'undefined') {\n      localOrigins = this.#timeOrigins[time];\n    }\n\n    // find the closest origin\n    const closestOriginIndex = point.getClosest(localOrigins);\n    const closestOrigin = localOrigins[closestOriginIndex];\n\n    // direction between the input point and the closest origin\n    const pointDir = point.minus(closestOrigin);\n\n    // use third orientation matrix column as plane normal vector\n    const normal = new Vector3D(\n      this.#orientation.get(0, 2),\n      this.#orientation.get(1, 2),\n      this.#orientation.get(2, 2)\n    );\n\n    // codirectional vectors: above slice index\n    // oposite vectors: below slice index\n    const isCodirectional = normal.isCodirectional(pointDir);\n    const sliceIndex = isCodirectional\n      ? closestOriginIndex + 1 : closestOriginIndex;\n\n    return sliceIndex;\n  }\n\n  /**\n   * Append an origin to the geometry.\n   *\n   * @param {Point3D} origin The origin to append.\n   * @param {number} index The index at which to append.\n   * @param {number} [time] Optional time index.\n   */\n  appendOrigin(origin, index, time) {\n    // equal callback\n    const equalToOrigin = function (element) {\n      return element.equals(origin);\n    };\n    if (typeof time !== 'undefined') {\n      // check if not already in list\n      const found = this.#timeOrigins[time].find(equalToOrigin);\n      if (typeof found !== 'undefined') {\n        throw new Error('Cannot append same time origin twice');\n      }\n      // add in origin array\n      this.#timeOrigins[time].splice(index, 0, origin);\n    }\n    if (typeof time === 'undefined' || time === this.#initialTime) {\n      // check if not already in list\n      const found = this.#origins.find(equalToOrigin);\n      if (typeof found !== 'undefined') {\n        throw new Error('Cannot append same origin twice');\n      }\n      // update flag\n      this.#newOrigins = true;\n      // add in origin array\n      this.#origins.splice(index, 0, origin);\n      // increment second dimension\n      const values = this.#size.getValues();\n      values[2] += 1;\n      this.#size = new Size(values);\n    }\n  }\n\n  /**\n   * Append a frame to the geometry.\n   *\n   * @param {Point3D} origin The origin to append.\n   * @param {number} time Optional time index.\n   */\n  appendFrame(origin, time) {\n    // add origin to list\n    this.#timeOrigins[time] = [origin];\n    // increment third dimension\n    const sizeValues = this.#size.getValues();\n    const spacingValues = this.#spacing.getValues();\n    if (sizeValues.length === 4) {\n      sizeValues[3] += 1;\n    } else {\n      sizeValues.push(2);\n      spacingValues.push(1);\n    }\n    this.#size = new Size(sizeValues);\n    this.#spacing = new Spacing(spacingValues);\n  }\n\n  /**\n   * Get a string representation of the geometry.\n   *\n   * @returns {string} The geometry as a string.\n   */\n  toString() {\n    return 'Origin: ' + this.getOrigin() +\n      ', Size: ' + this.getSize() +\n      ', Spacing: ' + this.getSpacing() +\n      ', Orientation: ' + this.getOrientation();\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Geometry} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getOrigin().equals(rhs.getOrigin()) &&\n      this.getSize().equals(rhs.getSize()) &&\n      this.getSpacing().equals(rhs.getSpacing());\n  }\n\n  /**\n   * Check that a point is within bounds.\n   *\n   * @param {Point} point The point to check.\n   * @returns {boolean} True if the given coordinates are within bounds.\n   */\n  isInBounds(point) {\n    return this.isIndexInBounds(this.worldToIndex(point));\n  }\n\n  /**\n   * Check that a index is within bounds.\n   *\n   * @param {Index} index The index to check.\n   * @param {number[]} [dirs] Optional list of directions to check.\n   * @returns {boolean} True if the given coordinates are within bounds.\n   */\n  isIndexInBounds(index, dirs) {\n    return this.getSize().isInBounds(index, dirs);\n  }\n\n  /**\n   * Get the geometrical range, ie the minimum and maximum\n   *   positions.\n   *\n   * @returns {Point[]} The min and max positions.\n   */\n  getRange() {\n    const nDims = this.getSize().length();\n    const minValues = new Array(nDims);\n    minValues.fill(0);\n    const minIndex = new Index(minValues);\n    const maxIndex = new Index(this.getSize().getValues());\n    return [\n      this.indexToWorld(minIndex),\n      this.indexToWorld(maxIndex)\n    ];\n  }\n\n  /**\n   * Convert an index into world coordinates.\n   *\n   * @param {Index} index The index to convert.\n   * @returns {Point} The corresponding point.\n   */\n  indexToWorld(index) {\n    // apply spacing\n    // (spacing is oriented, apply before orientation)\n    const spacing = this.getSpacing();\n    const orientedPoint3D = new Point3D(\n      index.get(0) * spacing.get(0),\n      index.get(1) * spacing.get(1),\n      index.get(2) * spacing.get(2)\n    );\n    // de-orient\n    const point3D = this.getOrientation().multiplyPoint3D(orientedPoint3D);\n    // keep >3d values\n    const values = index.getValues();\n    const origin = this.getOrigin();\n    values[0] = origin.getX() + point3D.getX();\n    values[1] = origin.getY() + point3D.getY();\n    values[2] = origin.getZ() + point3D.getZ();\n    // return point\n    return new Point(values);\n  }\n\n  /**\n   * Convert a 3D point into world coordinates.\n   *\n   * @param {Point3D} point The 3D point to convert.\n   * @returns {Point3D} The corresponding world 3D point.\n   */\n  pointToWorld(point) {\n    // apply spacing\n    // (spacing is oriented, apply before orientation)\n    const spacing = this.getSpacing();\n    const orientedPoint3D = new Point3D(\n      point.getX() * spacing.get(0),\n      point.getY() * spacing.get(1),\n      point.getZ() * spacing.get(2)\n    );\n    // de-orient\n    const point3D = this.getOrientation().multiplyPoint3D(orientedPoint3D);\n    // return point3D\n    const origin = this.getOrigin();\n    return new Point3D(\n      origin.getX() + point3D.getX(),\n      origin.getY() + point3D.getY(),\n      origin.getZ() + point3D.getZ()\n    );\n  }\n\n  /**\n   * Convert world coordinates into an index.\n   *\n   * @param {Point} point The point to convert.\n   * @returns {Index} The corresponding index.\n   */\n  worldToIndex(point) {\n    // compensate for origin\n    // (origin is not oriented, compensate before orientation)\n    // TODO: use slice origin...\n    const origin = this.getOrigin();\n    const point3D = new Point3D(\n      point.get(0) - origin.getX(),\n      point.get(1) - origin.getY(),\n      point.get(2) - origin.getZ()\n    );\n    // orient\n    const orientedPoint3D =\n      this.getOrientation().getInverse().multiplyPoint3D(point3D);\n    // keep >3d values\n    const values = point.getValues();\n    // apply spacing and floor\n    // (precisionRound to avoid float number inaccuracies)\n    const spacing = this.getSpacing();\n    values[0] = Math.floor(precisionRound(\n      orientedPoint3D.getX() / spacing.get(0),\n      BIG_EPSILON_EXPONENT\n    ));\n    values[1] = Math.floor(precisionRound(\n      orientedPoint3D.getY() / spacing.get(1),\n      BIG_EPSILON_EXPONENT\n    ));\n    values[2] = Math.floor(precisionRound(\n      orientedPoint3D.getZ() / spacing.get(2),\n      BIG_EPSILON_EXPONENT\n    ));\n    // return index\n    return new Index(values);\n  }\n\n  /**\n   * Convert world coordinates into an point.\n   *\n   * @param {Point} point The world point to convert.\n   * @returns {Point3D} The corresponding point.\n   */\n  worldToPoint(point) {\n    // compensate for origin\n    // (origin is not oriented, compensate before orientation)\n    const origin = this.getOrigin();\n    const point3D = new Point3D(\n      point.get(0) - origin.getX(),\n      point.get(1) - origin.getY(),\n      point.get(2) - origin.getZ()\n    );\n    // orient\n    const orientedPoint3D =\n      this.getOrientation().getInverse().multiplyPoint3D(point3D);\n    // keep >3d values\n    const values = point.getValues();\n    // apply spacing and round\n    const spacing = this.getSpacing();\n    values[0] = orientedPoint3D.getX() / spacing.get(0);\n    values[1] = orientedPoint3D.getY() / spacing.get(1);\n    values[2] = orientedPoint3D.getZ() / spacing.get(2);\n\n    // return index\n    return new Point3D(values[0], values[1], values[2]);\n  }\n\n} // class Geometry\n\n/**\n * Get the oriented values of an input 3D array.\n *\n * @param {number[]} array3D The 3D array.\n * @param {Matrix33} orientation The orientation 3D matrix.\n * @returns {number[]} The values reordered according to the orientation.\n */\nexport function getOrientedArray3D(array3D, orientation) {\n  // values = orientation * orientedValues\n  // -> inv(orientation) * values = orientedValues\n  return orientation.getInverse().multiplyArray3D(array3D);\n}\n\n/**\n * Get the raw values of an oriented input 3D array.\n *\n * @param {number[]} array3D The 3D array.\n * @param {Matrix33} orientation The orientation 3D matrix.\n * @returns {number[]} The values reordered to compensate the orientation.\n */\nexport function getDeOrientedArray3D(array3D, orientation) {\n  // values = orientation * orientedValues\n  return orientation.multiplyArray3D(array3D);\n}\n\n/**\n * Get the slice spacing from the difference in the Z directions\n * of input origins.\n *\n * @param {Point3D[]} origins An array of Point3D.\n * @returns {number|undefined} The spacing.\n */\nexport function getSliceGeometrySpacing(origins) {\n  // check origins\n  if (origins.length <= 1) {\n    return;\n  }\n\n  const spacings = [];\n  for (let i = 0; i < origins.length - 1; ++i) {\n    const origin1 = origins[i];\n    const origin2 = origins[i + 1];\n    const sliceSpacing = origin1.getDistance(origin2);\n    if (sliceSpacing === 0) {\n      throw new Error('Zero slice spacing ' +\n        origin1.toString() + ' ' + origin2.toString());\n    }\n    spacings.push(sliceSpacing);\n  }\n\n  // use rounded mean value as spacing\n  const stats = getBasicStats(spacings);\n  const spacing = precisionRound(stats.mean, 4);\n\n  // warn if non constant\n  if (stats.stdDev > REAL_WORLD_EPSILON) {\n    logger.warn('Varying slice spacing, value: ' + spacing +\n      ' (mean: ' + stats.mean +\n      ', min: ' + stats.min +\n      ', max: ' + stats.max +\n      ', stdDev: ' + stats.stdDev + ')');\n  }\n\n  return spacing;\n}\n\n/**\n * Merge two geometries into one using the merge size and\n *   smallest resolution.\n * WARNING: needs to be called with the final geometries.\n *\n * @param {Geometry} geometry1 The first geometry.\n * @param {Geometry} geometry2 The second geometry.\n * @returns {Geometry} The merged geometry.\n */\nexport function mergeGeometries(geometry1, geometry2) {\n  const orientation = geometry1.getOrientation();\n  // check input\n  if (!orientation.isSimilar(geometry2.getOrientation())) {\n    throw new Error('Cannot merge geometries with different orientation');\n  }\n  const invOrientation = orientation.getInverse();\n\n  const minByIndex = function (array1, array2) {\n    return array1.map((v, i) => Math.min(v, array2[i]));\n  };\n  const maxByIndex = function (array1, array2) {\n    return array1.map((v, i) => Math.max(v, array2[i]));\n  };\n\n  const newSpacing = new Spacing(minByIndex(\n    geometry1.getSpacing().getValues(),\n    geometry2.getSpacing().getValues()\n  ));\n\n  const deorient = function (item) {\n    return invOrientation.multiplyPoint3D(item.get3D());\n  };\n  const range1 = geometry1.getRange().map(deorient);\n  const range2 = geometry2.getRange().map(deorient);\n\n  const minRangeValues = minByIndex(\n    range1[0].getValues(),\n    range2[0].getValues()\n  );\n  const maxRangeValues = maxByIndex(\n    range1[1].getValues(),\n    range2[1].getValues()\n  );\n\n  const sizeValues = [];\n  for (let i = 0; i < minRangeValues.length; ++i) {\n    sizeValues.push(Math.round(\n      Math.abs(maxRangeValues[i] - minRangeValues[i]) / newSpacing.get(i)\n    ));\n  }\n  // TODO: handle extra dims\n  const newSize = new Size(sizeValues);\n\n  const newOrigins = [];\n  for (let i = 0; i < newSize.get(2); ++i) {\n    const values = minRangeValues.slice();\n    values[2] = minRangeValues[2] + i * newSpacing.get(2);\n    const origin = new Point3D(values[0], values[1], values[2]);\n    newOrigins.push(orientation.multiplyPoint3D(origin));\n  }\n\n  return new Geometry(\n    newOrigins,\n    newSize,\n    newSpacing,\n    orientation\n  );\n}\n","import {Vector3D} from './vector';\nimport {\n  Matrix33,\n  getIdentityMat33\n} from './matrix';\n\n/**\n * Create a 3x3 coronal (xzy) matrix.\n *\n * @returns {Matrix33} The coronal matrix.\n */\nexport function getCoronalMat33() {\n  /* eslint-disable @stylistic/js/array-element-newline */\n  return new Matrix33([\n    1, 0, 0,\n    0, 0, 1,\n    0, -1, 0\n  ]);\n  /* eslint-enable @stylistic/js/array-element-newline */\n}\n\n/**\n * Create a 3x3 sagittal (yzx) matrix.\n *\n * @returns {Matrix33} The sagittal matrix.\n */\nexport function getSagittalMat33() {\n  /* eslint-disable @stylistic/js/array-element-newline */\n  return new Matrix33([\n    0, 0, -1,\n    1, 0, 0,\n    0, -1, 0\n  ]);\n  /* eslint-enable @stylistic/js/array-element-newline */\n}\n\n/**\n * Default anatomical plane orientations.\n */\nexport const Orientation = {\n  /**\n   * Axial, also known as transverse.\n   */\n  Axial: 'axial',\n  /**\n   * Coronal, also known as frontal.\n   */\n  Coronal: 'coronal',\n  /**\n   * Sagittal, also known as anteroposterior.\n   */\n  Sagittal: 'sagittal'\n};\n\n/**\n * Get an orientation matrix from a name.\n *\n * @param {string} name The orientation name.\n * @returns {Matrix33|undefined} The orientation matrix.\n */\nexport function getMatrixFromName(name) {\n  let matrix;\n  if (name === Orientation.Axial) {\n    matrix = getIdentityMat33();\n  } else if (name === Orientation.Coronal) {\n    matrix = getCoronalMat33();\n  } else if (name === Orientation.Sagittal) {\n    matrix = getSagittalMat33();\n  }\n  return matrix;\n}\n\n/**\n * Get the orientation code of an orientation matrix. Each letter defines\n * the towards direction. Letters are: R (right), L (left),\n * A (anterior), P (posterior), I (inferior) and S (superior).\n *\n * @param {Matrix33} matrix The orientation matrix.\n * @returns {string} The orientation code.\n */\nexport function getOrientationStringLPS(matrix) {\n  const v0 = new Vector3D(\n    matrix.get(0, 0),\n    matrix.get(1, 0),\n    matrix.get(2, 0)\n  );\n  const v1 = new Vector3D(\n    matrix.get(0, 1),\n    matrix.get(1, 1),\n    matrix.get(2, 1)\n  );\n  const v2 = new Vector3D(\n    matrix.get(0, 2),\n    matrix.get(1, 2),\n    matrix.get(2, 2)\n  );\n  return getVectorStringLPS(v0) +\n    getVectorStringLPS(v1) +\n    getVectorStringLPS(v2);\n}\n\n/**\n * Get the orientation code of an orientation vector.\n * Credits: David Clunie, {@link https://www.dclunie.com/medical-image-faq/html/part2.html}.\n *\n * @param {Vector3D} vector The orientation vector.\n * @returns {string} The orientation code.\n */\nfunction getVectorStringLPS(vector) {\n  let abs = new Vector3D(\n    Math.abs(vector.getX()),\n    Math.abs(vector.getY()),\n    Math.abs(vector.getZ())\n  );\n\n  let orientation = '';\n  const orientationX = vector.getX() < 0 ? 'R' : 'L';\n  const orientationY = vector.getY() < 0 ? 'A' : 'P';\n  // as defined in DICOM\n  //const orientationZ = vector.getZ() < 0 ? 'F' : 'H';\n  const orientationZ = vector.getZ() < 0 ? 'I' : 'S';\n\n  const threshold = 0.0001;\n\n  for (let i = 0; i < 3; i++) {\n    if (abs.getX() > threshold &&\n      abs.getX() > abs.getY() &&\n      abs.getX() > abs.getZ()) {\n      orientation += orientationX;\n      abs = new Vector3D(0, abs.getY(), abs.getZ());\n    } else if (abs.getY() > threshold &&\n      abs.getY() > abs.getX() &&\n      abs.getY() > abs.getZ()) {\n      orientation += orientationY;\n      abs = new Vector3D(abs.getX(), 0, abs.getZ());\n    } else if (abs.getZ() > threshold &&\n      abs.getZ() > abs.getX() &&\n      abs.getZ() > abs.getY()) {\n      orientation += orientationZ;\n      abs = new Vector3D(abs.getX(), abs.getY(), 0);\n    } else {\n      break;\n    }\n  }\n\n  return orientation;\n}\n\n/**\n * Get the LPS 'group' (axial, coronal or sagittal) from a LPS code.\n *\n * @param {string} code The LPS code string.\n * @returns {string|undefined} The group.\n */\nfunction getLPSGroup(code) {\n  let orientStr;\n  const axialCodes =\n    ['LPS', 'LAI', 'RPI', 'RAS', 'ALS', 'ARI', 'PLI', 'PRS'];\n  const coronalCodes =\n    ['LSA', 'LIP', 'RSP', 'RIA', 'ILA', 'IRP', 'SLP', 'SRA'];\n  const sagittalCodes =\n    ['PSL', 'PIR', 'ASR', 'AIL', 'IAR', 'IPL', 'SAL', 'SPR'];\n  if (axialCodes.includes(code)) {\n    orientStr = Orientation.Axial;\n  } else if (coronalCodes.includes(code)) {\n    orientStr = Orientation.Coronal;\n  } else if (sagittalCodes.includes(code)) {\n    orientStr = Orientation.Sagittal;\n  }\n  return orientStr;\n}\n\n/**\n * Get the name of an image orientation patient.\n *\n * @param {number[]} cosines The image orientation\n *   patient cosines (6 values).\n * @returns {string|undefined} The orientation\n *   name: axial, coronal or sagittal.\n */\nexport function getOrientationName(cosines) {\n  let name;\n  const orientMatrix = getOrientationFromCosines(cosines);\n  if (typeof orientMatrix !== 'undefined') {\n    const lpsStr = getOrientationStringLPS(orientMatrix.asOneAndZeros());\n    name = getLPSGroup(lpsStr);\n  }\n  return name;\n}\n\n/**\n * Get the orientation matrix associated to the direction cosines.\n *\n * @param {number[]} cosines The image orientation\n *   patient cosines (6 values).\n * @returns {Matrix33|undefined} The orientation matrix.\n */\nexport function getOrientationFromCosines(cosines) {\n  let orientationMatrix;\n  if (typeof cosines !== 'undefined' && cosines.length === 6) {\n    const rowCosines = new Vector3D(cosines[0], cosines[1], cosines[2]);\n    const colCosines = new Vector3D(cosines[3], cosines[4], cosines[5]);\n    const normal = rowCosines.crossProduct(colCosines);\n    /* eslint-disable @stylistic/js/array-element-newline */\n    orientationMatrix = new Matrix33([\n      rowCosines.getX(), colCosines.getX(), normal.getX(),\n      rowCosines.getY(), colCosines.getY(), normal.getY(),\n      rowCosines.getZ(), colCosines.getZ(), normal.getZ()\n    ]);\n    /* eslint-enable @stylistic/js/array-element-newline */\n  }\n  return orientationMatrix;\n}\n\n/**\n * Get the direction cosines from an orientation matrix.\n *\n * @param {Matrix33} matrix The input matrix.\n * @returns {number[]} The image orientation\n *   patient cosines (6 values).\n */\nexport function getCosinesFromOrientation(matrix) {\n  return [\n    matrix.get(0, 0),\n    matrix.get(1, 0),\n    matrix.get(2, 0),\n    matrix.get(0, 1),\n    matrix.get(1, 1),\n    matrix.get(2, 1)\n  ];\n}\n\n/**\n * Get the view orientation according to an image and target orientation.\n * The view orientation is used to go from target to image space.\n *\n * @param {Matrix33} imageOrientation The image geometry.\n * @param {Matrix33} targetOrientation The target orientation.\n * @returns {Matrix33} The view orientation.\n */\nexport function getViewOrientation(imageOrientation, targetOrientation) {\n  let viewOrientation = getIdentityMat33();\n  if (typeof targetOrientation !== 'undefined') {\n    // i: image, v: view, t: target, O: orientation, P: point\n    // [Img] -- Oi --> [Real] <-- Ot -- [Target]\n    // Pi = (Oi)-1 * Ot * Pt = Ov * Pt\n    // -> Ov = (Oi)-1 * Ot\n    // TODO: asOneAndZeros simplifies but not nice...\n    viewOrientation =\n      imageOrientation.asOneAndZeros().getInverse().multiply(targetOrientation);\n  }\n  // TODO: why abs???\n  return viewOrientation.getAbs();\n}\n\n/**\n * Get the target orientation according to an image and view orientation.\n * The target orientation is used to go from target to real space.\n *\n * @param {Matrix33} imageOrientation The image geometry.\n * @param {Matrix33} viewOrientation The view orientation.\n * @returns {Matrix33} The target orientation.\n */\nexport function getTargetOrientation(imageOrientation, viewOrientation) {\n  // i: image, v: view, t: target, O: orientation, P: point\n  // [Img] -- Oi --> [Real] <-- Ot -- [Target]\n  // Pi = (Oi)-1 * Ot * Pt = Ov * Pt\n  // -> Ot = Oi * Ov\n  // note: asOneAndZeros as in getViewOrientation...\n  let targetOrientation =\n    imageOrientation.asOneAndZeros().multiply(viewOrientation);\n\n  // TODO: why abs???\n  const simpleImageOrientation = imageOrientation.asOneAndZeros().getAbs();\n  if (simpleImageOrientation.isSimilar(getCoronalMat33().getAbs())) {\n    targetOrientation = targetOrientation.getAbs();\n  }\n\n  return targetOrientation;\n}\n","import {custom} from '../app/custom';\nimport {\n  isJpeg2000TransferSyntax,\n  isJpegBaselineTransferSyntax,\n  isJpegLosslessTransferSyntax\n} from './dicomParser';\nimport {safeGet, safeGetAll} from './dataElement';\nimport {getOrientationFromCosines} from '../math/orientation';\nimport {Spacing} from '../image/spacing';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Matrix33} from '../math/matrix';\nimport {DataElement} from './dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * Related DICOM tag keys.\n */\nconst TagKeys = {\n  TransferSyntax: '00020010',\n  SOPClassUID: '00080016',\n  Modality: '00080060',\n  Rows: '00280010',\n  Columns: '00280011',\n  PixelSpacing: '00280030',\n  ImagerPixelSpacing: '00181164',\n  NominalScannedPixelSpacing: '00182010',\n  PixelAspectRatio: '00280034',\n  SpacingBetweenSlices: '00180088',\n  RescaleType: '00281054',\n  Units: '00541001',\n  ImageOrientationPatient: '00200037',\n  PhotometricInterpretation: '00280004',\n  SamplesPerPixel: '00280002'\n};\n\n/**\n * Extract the 2D size from dicom elements.\n *\n * @param {Object<string, DataElement>} elements The DICOM elements.\n * @returns {number[]} The size.\n */\nexport function getImage2DSize(elements) {\n  // rows\n  const rows = elements[TagKeys.Rows];\n  if (typeof rows === 'undefined') {\n    throw new Error('Missing DICOM image number of rows');\n  }\n  if (rows.value.length === 0) {\n    throw new Error('Empty DICOM image number of rows');\n  }\n  // columns\n  const columns = elements[TagKeys.Columns];\n  if (typeof columns === 'undefined') {\n    throw new Error('Missing DICOM image number of columns');\n  }\n  if (columns.value.length === 0) {\n    throw new Error('Empty DICOM image number of columns');\n  }\n  return [columns.value[0], rows.value[0]];\n}\n\n/**\n * Get the pixel spacing from the different spacing tags.\n *\n * @param {Object<string, DataElement>} elements The DICOM elements.\n * @returns {Spacing} The read spacing or the default [1,1].\n */\nexport function getPixelSpacing(elements) {\n  let rowSpacing;\n  let columnSpacing;\n\n  const tags = [\n    'PixelSpacing',\n    'ImagerPixelSpacing',\n    'NominalScannedPixelSpacing',\n    'PixelAspectRatio'\n  ];\n  for (const tag of tags) {\n    const spacing = safeGetAll(elements, TagKeys[tag]);\n    if (typeof spacing !== 'undefined' &&\n      spacing.length === 2) {\n      // spacing order: [row, column]\n      rowSpacing = parseFloat(spacing[0]);\n      columnSpacing = parseFloat(spacing[1]);\n      break;\n    }\n  }\n\n  // check\n  if (typeof rowSpacing === 'undefined') {\n    logger.warn('Undefined row spacing, using default (1mm).');\n    rowSpacing = 1;\n  } else if (rowSpacing === 0) {\n    logger.warn('Zero row spacing, using default (1mm).');\n    rowSpacing = 1;\n  }\n  if (typeof columnSpacing === 'undefined') {\n    logger.warn('Undefined column spacing, using default (1mm).');\n    columnSpacing = 1;\n  } else if (columnSpacing === 0) {\n    logger.warn('Zero column spacing, using default (1mm).');\n    columnSpacing = 1;\n  }\n\n  // return\n  // (slice spacing will be calculated using the image position patient)\n  return new Spacing([columnSpacing, rowSpacing, 1]);\n}\n\n/**\n * Get a spacing object from a dicom measure element.\n *\n * @param {Object<string, DataElement>} dataElements The dicom element.\n * @returns {Spacing|undefined} A spacing object.\n */\nexport function getSpacingFromMeasure(dataElements) {\n  // Pixel Spacing\n  const pixelSpacing = safeGetAll(dataElements, TagKeys.PixelSpacing);\n  if (typeof pixelSpacing === 'undefined' ||\n    pixelSpacing.length !== 2\n  ) {\n    return undefined;\n  }\n  // spacing order: [row, column]\n  const spacingValues = [\n    parseFloat(pixelSpacing[1]),\n    parseFloat(pixelSpacing[0]),\n  ];\n  // Spacing Between Slices\n  const sbs = safeGet(dataElements, TagKeys.SpacingBetweenSlices);\n  if (typeof sbs !== 'undefined') {\n    spacingValues.push(parseFloat(sbs));\n  }\n  return new Spacing(spacingValues);\n}\n\n/**\n * Get pixel data unit from a list of tags.\n *\n * @param {Object<string, DataElement>} elements The DICOM elements.\n * @returns {string|undefined} The unit value if available.\n */\nexport function getTagPixelUnit(elements) {\n  if (typeof custom.getTagPixelUnit !== 'undefined') {\n    return custom.getTagPixelUnit(elements);\n  } else {\n    return defaultGetTagPixelUnit(elements);\n  }\n}\n\n/**\n * Default get pixel data unit.\n *\n * @param {Object<string, DataElement>} elements The DICOM elements.\n * @returns {string|undefined} The unit value if available.\n */\nfunction defaultGetTagPixelUnit(elements) {\n  let unit;\n  const tags = ['RescaleType', 'Units'];\n  for (const tag of tags) {\n    const unit = safeGet(elements, TagKeys[tag]);\n    if (typeof unit !== 'undefined') {\n      break;\n    }\n  }\n  // default rescale type for CT\n  if (typeof unit === 'undefined') {\n    const modality = safeGet(elements, TagKeys.Modality);\n    if (typeof modality !== 'undefined' && modality === 'CT') {\n      unit = 'HU';\n    }\n  }\n  return unit;\n}\n\n/**\n * Get an orientation matrix from a dicom orientation element.\n *\n * @param {Object<string, DataElement>} dataElements The dicom element.\n * @returns {Matrix33|undefined} The orientation matrix.\n */\nexport function getOrientationMatrix(dataElements) {\n  const imageOrientationPatient =\n    safeGetAll(dataElements, TagKeys.ImageOrientationPatient);\n  let orientationMatrix;\n  // slice orientation (cosines are matrices' columns)\n  // http://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.7.6.2.html#sect_C.7.6.2.1.1\n  if (typeof imageOrientationPatient !== 'undefined') {\n    orientationMatrix =\n      getOrientationFromCosines(\n        imageOrientationPatient.map((item) => parseFloat(item))\n      );\n  }\n  return orientationMatrix;\n}\n\n/**\n * Get a dicom item from a measure sequence.\n *\n * @param {Spacing} spacing The spacing object.\n * @returns {object} The dicom item.\n */\nexport function getDicomMeasureItem(spacing) {\n  return {\n    SpacingBetweenSlices: spacing.get(2),\n    PixelSpacing: [spacing.get(1), spacing.get(0)]\n  };\n}\n\n/**\n * Get a dicom element from a plane orientation sequence.\n *\n * @param {Matrix33} orientation The image orientation.\n * @returns {object} The dicom element.\n */\nexport function getDicomPlaneOrientationItem(orientation) {\n  return {\n    ImageOrientationPatient: [\n      orientation.get(0, 0),\n      orientation.get(1, 0),\n      orientation.get(2, 0),\n      orientation.get(0, 1),\n      orientation.get(1, 1),\n      orientation.get(2, 1)\n    ]\n  };\n}\n\n/**\n * Get the photometric interpretation from the data elements.\n *\n * @param {Object<string, DataElement>} dataElements The data elements.\n * @returns {string|undefined} The photometric interpretation value.\n */\nexport function getPhotometricInterpretation(dataElements) {\n  const photometricInterpretation =\n    safeGet(dataElements, TagKeys.PhotometricInterpretation);\n  const transferSyntax = safeGet(dataElements, TagKeys.TransferSyntax);\n\n  if (typeof photometricInterpretation !== 'undefined' &&\n    typeof transferSyntax !== 'undefined') {\n    let photo = photometricInterpretation.toUpperCase();\n    // TransferSyntaxUID\n    const isJpeg = isJpeg2000TransferSyntax(transferSyntax) ||\n      isJpegBaselineTransferSyntax(transferSyntax) ||\n      isJpegLosslessTransferSyntax(transferSyntax);\n    // jpeg decoders output RGB data\n    if (isJpeg && !isMonochrome(photo)) {\n      photo = 'RGB';\n    }\n    // samplesPerPixel\n    let samplesPerPixel = safeGet(dataElements, TagKeys.SamplesPerPixel);\n    if (typeof samplesPerPixel === 'undefined') {\n      samplesPerPixel = 1;\n    }\n    // check samples per pixels\n    if (photo === 'RGB' && samplesPerPixel === 1) {\n      photo = 'PALETTE COLOR';\n    }\n    return photo;\n  }\n}\n\n/**\n * Check if an input photometricInterpretation is monochrome.\n *\n * @param {string} photometricInterpretation The photometric interpretation.\n * @returns {boolean} True if the input string starts with 'MONOCHROME'.\n */\nexport function isMonochrome(photometricInterpretation) {\n  return typeof photometricInterpretation !== 'undefined' &&\n    photometricInterpretation.match(/MONOCHROME/) !== null;\n}\n\n/**\n * Check if the received string represents a secondary capture.\n *\n * @param {string} SOPClassUID The sop class uid.\n * @returns {boolean} True if it is secondary capture.\n */\nexport function isSecondatyCapture(SOPClassUID) {\n  const pattern = /^1\\.2\\.840\\.10008\\.5\\.1\\.4\\.1\\.1\\.7/;\n  return typeof SOPClassUID !== 'undefined' &&\n    pattern.test(SOPClassUID);\n}\n","import {custom} from '../app/custom';\nimport {DataElement} from './dataElement';\n\n/**\n * Pad an input string with a '0' to form a 2 digit one.\n *\n * @param {string} str The string to pad.\n * @returns {string} The padded string.\n */\nfunction padZeroTwoDigit(str) {\n  return ('0' + str).slice(-2);\n}\n\n/**\n * Get the time from a list of tags. Defaults\n *   returns undefined.\n *\n * @param {Object<string, DataElement>} elements The DICOM elements.\n * @returns {number|undefined} The time value if available.\n */\nexport function getTagTime(elements) {\n  if (typeof custom.getTagTime !== 'undefined') {\n    return custom.getTagTime(elements);\n  } else {\n    return;\n  }\n}\n\n/**\n * Get a 'date' object with {year, monthIndex, day} ready for the\n *   Date constructor from a DICOM element with vr=DA.\n *\n * @param {DataElement} element The DICOM element with date information.\n * @returns {{year, monthIndex, day}|undefined} The 'date' object.\n */\nexport function getDate(element) {\n  if (typeof element === 'undefined') {\n    return undefined;\n  }\n  if (element.value.length !== 1) {\n    return undefined;\n  }\n  const daValue = element.value[0];\n  // Two possible formats:\n  // - standard 'YYYYMMDD'\n  // - non-standard 'YYYY.MM.DD' (previous ACR-NEMA)\n  let monthBeginIndex = 4;\n  let dayBeginIndex = 6;\n  if (daValue.length === 10) {\n    monthBeginIndex = 5;\n    dayBeginIndex = 8;\n  }\n  const daYears = parseInt(daValue.substring(0, 4), 10);\n  // 0-11 range\n  const daMonthIndex = daValue.length >= monthBeginIndex + 2\n    ? parseInt(daValue.substring(\n      monthBeginIndex, monthBeginIndex + 2), 10) - 1 : 0;\n  const daDay = daValue.length === dayBeginIndex + 2\n    ? parseInt(daValue.substring(\n      dayBeginIndex, dayBeginIndex + 2), 10) : 0;\n  return {\n    year: daYears,\n    monthIndex: daMonthIndex,\n    day: daDay\n  };\n}\n\n/**\n * Get a time object with {hours, minutes, seconds} ready for the\n *   Date constructor from a DICOM element with vr=TM.\n *\n * @param {DataElement} element The DICOM element with date information.\n * @returns {{hours, minutes, seconds, milliseconds}|undefined} The time object.\n */\nexport function getTime(element) {\n  if (typeof element === 'undefined') {\n    return undefined;\n  }\n  if (element.value.length !== 1) {\n    return undefined;\n  }\n  // format: HH[MMSS.FFFFFF]\n  const tmValue = element.value[0];\n  const tmHours = parseInt(tmValue.substring(0, 2), 10);\n  const tmMinutes = tmValue.length >= 4\n    ? parseInt(tmValue.substring(2, 4), 10) : 0;\n  const tmSeconds = tmValue.length >= 6\n    ? parseInt(tmValue.substring(4, 6), 10) : 0;\n  const tmFracSecondsStr = tmValue.length >= 8\n    ? tmValue.substring(7, 10) : 0;\n  const tmMilliSeconds = tmFracSecondsStr === 0 ? 0\n    : parseInt(tmFracSecondsStr, 10) *\n      Math.pow(10, 3 - tmFracSecondsStr.length);\n  return {\n    hours: tmHours,\n    minutes: tmMinutes,\n    seconds: tmSeconds,\n    milliseconds: tmMilliSeconds\n  };\n}\n\n/**\n * Get a 'dateTime' object with {date, time} ready for the\n *   Date constructor from a DICOM element with vr=DT.\n *\n * @param {DataElement} element The DICOM element with date-time information.\n * @returns {{date, time}|undefined} The time object.\n */\nexport function getDateTime(element) {\n  if (typeof element === 'undefined') {\n    return undefined;\n  }\n  if (element.value.length !== 1) {\n    return undefined;\n  }\n  // format: YYYYMMDDHHMMSS.FFFFFF&ZZXX\n  const dtFullValue = element.value[0];\n  // remove offset (&ZZXX)\n  const dtValue = dtFullValue.split('&')[0];\n  const dateDataElement = new DataElement('DA');\n  dateDataElement.value = [dtValue.substring(0, 8)];\n  const dtDate = getDate(dateDataElement);\n  const timeDataElement = new DataElement('TM');\n  timeDataElement.value = [dtValue.substring(8)];\n  const dtTime = dtValue.length >= 9\n    ? getTime(timeDataElement) : undefined;\n  return {\n    date: dtDate,\n    time: dtTime\n  };\n}\n\n/**\n * Extract date values from a Date object.\n *\n * @param {Date} date The input date.\n * @returns {{year, monthIndex, day}} A 'date' object.\n */\nexport function dateToDateObj(date) {\n  return {\n    year: date.getFullYear().toString(),\n    monthIndex: padZeroTwoDigit((date.getMonth() + 1).toString()),\n    day: padZeroTwoDigit(date.getDate().toString())\n  };\n}\n\n/**\n * Extract time values from a Date object.\n *\n * @param {Date} date The input date.\n * @returns {{hours, minutes, seconds}} A 'time' object.\n */\nexport function dateToTimeObj(date) {\n  return {\n    hours: padZeroTwoDigit(date.getHours().toString()),\n    minutes: padZeroTwoDigit(date.getMinutes().toString()),\n    seconds: padZeroTwoDigit(date.getSeconds().toString())\n  };\n}\n\n/**\n * Get a DICOM formated date string.\n *\n * @param {{year, monthIndex, day}} dateObj The date to format.\n * @returns {string} The formated date.\n */\nexport function getDicomDate(dateObj) {\n  // YYYYMMDD\n  return (\n    dateObj.year +\n    dateObj.monthIndex +\n    dateObj.day\n  );\n}\n\n/**\n * Get a DICOM formated time string.\n *\n * @param {{hours, minutes, seconds}} dateObj The date to format.\n * @returns {string} The formated time.\n */\nexport function getDicomTime(dateObj) {\n  // HHMMSS\n  return (\n    dateObj.hours +\n    dateObj.minutes +\n    dateObj.seconds\n  );\n}\n\n/**\n * Get a DICOM formated datetime string.\n *\n * @param {{date, time}} datetime The datetime to format.\n * @returns {string} The formated datetime.\n */\nexport function getDicomDateTime(datetime) {\n  // HHMMSS\n  let res = getDicomDate(datetime.date);\n  if (typeof datetime.time !== 'undefined') {\n    res += getDicomTime(datetime.time);\n  }\n  return res;\n}\n","import {\n  getDate,\n  getTime,\n  getDateTime\n} from './dicomDate';\nimport {checkDataElement} from './dataElement';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from './dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * Related DICOM tag keys.\n */\nconst TagKeys = {\n  SeriesDate: '00080021',\n  AcquisitionDate: '00080022',\n  SeriesTime: '00080031',\n  AcquisitionTime: '00080032',\n  RadiopharmaceuticalInformationSequence: '00540016',\n  RadionuclideTotalDose: '00181074',\n  RadionuclideHalfLife: '00181075',\n  RadiopharmaceuticalStartDateTime: '00181078',\n  RadiopharmaceuticalStartTime: '00181072',\n  FrameReferenceTime: '00541300',\n  ActualFrameDuration: '00181242',\n  CorrectedImage: '00280051',\n  DecayCorrection: '00541102',\n  Units: '00541001',\n  PatientWeight: '00101030'\n};\n\n/**\n * Get the decayed dose (Bq).\n *\n * @param {Object<string, DataElement>} elements The DICOM elements to check.\n * @returns {object} The value and a warning if\n *   the elements are not as expected.\n */\nfunction getDecayedDose(elements) {\n  let warning = '';\n  let warn;\n\n  // SeriesDate (type1)\n  const seriesDateEl = elements[TagKeys.SeriesDate];\n  const seriesDateObj = getDate(seriesDateEl);\n\n  let totalDose;\n  let halfLife;\n  let radioStart;\n\n  const radioInfoSqStr = 'RadiopharmaceuticalInformationSequence (00540016)';\n  const radioInfoSq = elements[TagKeys.RadiopharmaceuticalInformationSequence];\n  warning += checkDataElement(radioInfoSq, radioInfoSqStr);\n  if (typeof radioInfoSq !== 'undefined') {\n    if (radioInfoSq.value.length !== 1) {\n      logger.warn(\n        'Found more than 1 istopes in RadiopharmaceuticalInformation Sequence.'\n      );\n    }\n\n    // RadionuclideTotalDose (type3, Bq)\n    const totalDoseStr = 'RadionuclideTotalDose (00181074)';\n    const totalDoseEl = radioInfoSq.value[0][TagKeys.RadionuclideTotalDose];\n    warn = checkDataElement(totalDoseEl, totalDoseStr);\n    if (warn.length === 0) {\n      const dose = parseFloat(totalDoseEl.value[0]);\n      if (!isNaN(dose)) {\n        totalDose = dose;\n      } else {\n        warning += ' TotalDose is not a number';\n      }\n    } else {\n      warning += warn;\n    }\n\n    // RadionuclideHalfLife (type3, seconds)\n    const halfLifeStr = 'RadionuclideHalfLife (00181075)';\n    const halfLifeEl = radioInfoSq.value[0][TagKeys.RadionuclideHalfLife];\n    warn = checkDataElement(halfLifeEl, halfLifeStr);\n    if (warn.length === 0) {\n      const hl = parseFloat(halfLifeEl.value[0]);\n      if (!isNaN(hl)) {\n        halfLife = hl;\n      } else {\n        warning += ' HalfLife is not a number';\n      }\n    } else {\n      warning += warn;\n    }\n\n    // RadiopharmaceuticalStartDateTime (type3)\n    const radioStartDateTimeEl =\n      radioInfoSq.value[0][TagKeys.RadiopharmaceuticalStartDateTime];\n    let radioStartDateObj;\n    let radioStartTimeObj;\n    if (typeof radioStartDateTimeEl === 'undefined') {\n      // use seriesDate as radioStartDate\n      radioStartDateObj = seriesDateObj;\n      // try RadiopharmaceuticalStartTime (type3)\n      const radioStartTimeEl =\n        radioInfoSq.value[0][TagKeys.RadiopharmaceuticalStartTime];\n      radioStartTimeObj = getTime(radioStartTimeEl);\n    } else {\n      const radioStartDateTime = getDateTime(radioStartDateTimeEl);\n      radioStartDateObj = radioStartDateTime.date;\n      radioStartTimeObj = radioStartDateTime.time;\n    }\n    if (typeof radioStartTimeObj === 'undefined') {\n      radioStartTimeObj = {\n        hours: 0, minutes: 0, seconds: 0, milliseconds: 0\n      };\n    }\n    radioStart = new Date(\n      radioStartDateObj.year,\n      radioStartDateObj.monthIndex,\n      radioStartDateObj.day,\n      radioStartTimeObj.hours,\n      radioStartTimeObj.minutes,\n      radioStartTimeObj.seconds,\n      radioStartTimeObj.milliseconds\n    );\n  }\n\n  // SeriesTime (type1)\n  const seriesTimeEl = elements[TagKeys.SeriesTime];\n  const seriesTimeObj = getTime(seriesTimeEl);\n  // Series date/time\n  let scanStart = new Date(\n    seriesDateObj.year,\n    seriesDateObj.monthIndex,\n    seriesDateObj.day,\n    seriesTimeObj.hours,\n    seriesTimeObj.minutes,\n    seriesTimeObj.seconds,\n    seriesTimeObj.milliseconds\n  );\n\n  // scanStart Date check\n  // AcquisitionDate (type3)\n  const acqDateEl = elements[TagKeys.AcquisitionDate];\n  // AcquisitionTime (type3)\n  const acqTimeEl = elements[TagKeys.AcquisitionTime];\n  if (typeof acqDateEl !== 'undefined' &&\n    typeof acqTimeEl !== 'undefined') {\n    const acqDateObj = getDate(acqDateEl);\n    const acqTimeObj = getTime(acqTimeEl);\n    const acqDate = new Date(\n      acqDateObj.year,\n      acqDateObj.monthIndex,\n      acqDateObj.day,\n      acqTimeObj.hours,\n      acqTimeObj.minutes,\n      acqTimeObj.seconds,\n      acqTimeObj.milliseconds\n    );\n\n    if (scanStart > acqDate) {\n      const diff = scanStart.getTime() - acqDate.getTime();\n      const warn = 'Series date/time is after Aquisition date/time (diff=' +\n        diff.toString() + 'ms) ';\n      logger.debug(warn);\n\n      // back compute from center (average count rate) of time window\n      // for bed position (frame) in series (reliable in all cases)\n\n      let frameRefTime = 0;\n      const frameRefTimeElStr = 'FrameReferenceTime (00541300)';\n      const frameRefTimeEl = elements[TagKeys.FrameReferenceTime];\n      warning += checkDataElement(frameRefTimeEl, frameRefTimeElStr);\n      if (typeof frameRefTimeEl !== 'undefined') {\n        frameRefTime = frameRefTimeEl.value[0];\n      }\n      let actualFrameDuration = 0;\n      const actualFrameDurationElStr = 'ActualFrameDuration (00181242)';\n      const actualFrameDurationEl = elements[TagKeys.ActualFrameDuration];\n      warning += checkDataElement(\n        actualFrameDurationEl, actualFrameDurationElStr);\n      if (typeof actualFrameDurationEl !== 'undefined') {\n        actualFrameDuration = actualFrameDurationEl.value[0];\n      }\n      if (frameRefTime > 0 && actualFrameDuration > 0) {\n        // convert to seconds\n        actualFrameDuration = actualFrameDuration / 1000;\n        frameRefTime = frameRefTime / 1000;\n        const decayConstant = Math.log(2) / halfLife;\n        const decayDuringFrame = decayConstant * actualFrameDuration;\n        const averageCountRateTimeWithinFrame =\n          1 /\n          decayConstant *\n          Math.log(decayDuringFrame / (1 - Math.exp(-decayDuringFrame)));\n        const offsetSeconds = averageCountRateTimeWithinFrame - frameRefTime;\n        scanStart = new Date(\n          acqDateObj.year,\n          acqDateObj.monthIndex,\n          acqDateObj.day,\n          acqTimeObj.hours,\n          acqTimeObj.minutes,\n          acqTimeObj.seconds + offsetSeconds,\n          acqTimeObj.milliseconds\n        );\n      }\n    }\n  }\n\n  // decayed dose (Bq)\n  let decayedDose;\n  if (typeof scanStart !== 'undefined' &&\n    typeof radioStart !== 'undefined' &&\n    typeof totalDose !== 'undefined' &&\n    typeof halfLife !== 'undefined') {\n    // decay time (s) (Date diff is in milliseconds)\n    const decayTime = (scanStart.getTime() - radioStart.getTime()) / 1000;\n    const decay = Math.pow(2, (-decayTime / halfLife));\n    decayedDose = totalDose * decay;\n  }\n\n  return {\n    value: decayedDose,\n    warning: warning\n  };\n}\n\n/**\n * Get the PET SUV factor.\n *\n * Ref:\n * - {@link https://qibawiki.rsna.org/index.php/Standardized_Uptake_Value_(SUV)#SUV_Calculation},\n * - {@link https://qibawiki.rsna.org/images/6/62/SUV_vendorneutral_pseudocode_happypathonly_20180626_DAC.pdf},\n * - {@link https://qibawiki.rsna.org/images/8/86/SUV_vendorneutral_pseudocode_20180626_DAC.pdf}.\n *\n * @param {Object<string, DataElement>} elements The DICOM elements.\n * @returns {object} The value and a warning if\n *   the elements are not as expected.\n */\nexport function getSuvFactor(elements) {\n  let warning = '';\n  const result = {};\n\n\n  // CorrectedImage (type2): must contain ATTN and DECY\n  const corrImageTagStr = 'Corrected Image (00280051)';\n  const corrImageEl = elements[TagKeys.CorrectedImage];\n  warning += checkDataElement(corrImageEl, corrImageTagStr, ['ATTN', 'DECY']);\n  // DecayCorrection (type1): must be START\n  const decayCorrTagStr = 'Decay Correction (00541102)';\n  const decayCorrEl = elements[TagKeys.DecayCorrection];\n  warning += checkDataElement(decayCorrEl, decayCorrTagStr, ['START']);\n  // Units (type1): must be BQML\n  const unitTagStr = 'Units (00541001)';\n  const unitEl = elements[TagKeys.Units];\n  warning += checkDataElement(unitEl, unitTagStr, ['BQML']);\n\n  // PatientWeight (type3, kg)\n  let patWeight;\n  const patientWeightStr = ' PatientWeight (00101030)';\n  const patWeightEl = elements[TagKeys.PatientWeight];\n  const warn = checkDataElement(patWeightEl, patientWeightStr);\n  if (warn.length === 0) {\n    const weight = parseFloat(patWeightEl.value[0]);\n    if (!isNaN(weight)) {\n      patWeight = weight;\n    } else {\n      warning += ' PatientWeight is not a number';\n    }\n  } else {\n    warning += warn;\n  }\n\n  // Decayed dose (Bq)\n  const decayedDose = getDecayedDose(elements);\n  warning += decayedDose.warning;\n\n\n  if (warning.length !== 0) {\n    result.warning = 'Cannot calculate PET SUV:' + warning;\n  } else {\n    // SUV factor (grams/Bq)\n    result.value = (patWeight * 1000) / decayedDose.value;\n  }\n\n  return result;\n}\n","import {Size} from './size';\nimport {Geometry} from './geometry';\nimport {RescaleSlopeAndIntercept} from './rsi';\nimport {WindowLevel} from './windowLevel';\nimport {Image} from './image';\nimport {ColourMap} from './luts';\nimport {safeGet, safeGetAll} from '../dicom/dataElement';\nimport {\n  getImage2DSize,\n  getPixelSpacing,\n  getTagPixelUnit,\n  getOrientationMatrix,\n  getPhotometricInterpretation,\n  isMonochrome,\n  isSecondatyCapture\n} from '../dicom/dicomImage';\nimport {getTagTime} from '../dicom/dicomDate';\nimport {getSuvFactor} from '../dicom/dicomPet';\nimport {Point3D} from '../math/point';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from '../dicom/dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * @typedef {Object<string, DataElement>} DataElements\n */\n\n/**\n * Related DICOM tag keys.\n */\nconst TagKeys = {\n  TransferSyntaxUID: '00020010',\n  SOPClassUID: '00080016',\n  SOPInstanceUID: '00080018',\n  Modality: '00080060',\n  NumberOfFrames: '00280008',\n  ImagePositionPatient: '00200032',\n  SamplesPerPixel: '00280002',\n  PlanarConfiguration: '00280006',\n  RescaleSlope: '00281053',\n  RescaleIntercept: '00281052',\n  MediaStorageSOPClassUID: '00020002',\n  ImageType: '00080008',\n  PhotometricInterpretation: '00280004',\n  PixelRepresentation: '00280103',\n  BitsAllocated: '00280100',\n  BitsStored: '00280101',\n  HighBit: '00280102',\n  ImageOrientationPatient: '00200037',\n  WindowCenter: '00281050',\n  WindowLevel: '00281051',\n  WindowCenterWidthExplanation: '00281055',\n  RedPaletteColorLookupTableDescriptor: '00281101',\n  RedPaletteColorLookupTableData: '00281201',\n  GreenPaletteColorLookupTableData: '00281202',\n  BluePaletteColorLookupTableData: '00281203',\n  RecommendedDisplayFrameRate: '00082144'\n};\n\n/**\n * Meta tag keys.\n */\nconst MetaTagKeys = {\n  // patient\n  PatientName: '00100010',\n  PatientID: '00100020',\n  PatientBirthDate: '00100030',\n  PatientSex: '00100040',\n  // general study\n  StudyDate: '00080020',\n  StudyTime: '00080030',\n  StudyInstanceUID: '0020000D',\n  StudyID: '00200010',\n  ReferringPhysicianName: '00080090',\n  // general series\n  SeriesDate: '00080021',\n  SeriesTime: '00080031',\n  SeriesInstanceUID: '0020000E',\n  SeriesNumber: '00200011',\n  // frame of reference\n  FrameOfReferenceUID: '00200052',\n  // general equipment\n  Manufacturer: '00080070',\n  ManufacturerModelName: '00081090',\n  DeviceSerialNumber: '00181000',\n  SoftwareVersions: '00181020',\n  // general image\n  LossyImageCompression: '00282110'\n};\n\n/**\n * Get the palette colour map.\n *\n * @param {Object<string, DataElement>} dataElements The data elements.\n * @returns {ColourMap|undefined} The palette colour map.\n */\nfunction getPaletteColourMap(dataElements) {\n  let colourMap;\n  // check red palette descriptor (should all be equal)\n  // Red Palette Color Lookup Table Descriptor\n  // 0: number of entries in the lookup table\n  // 1: first input value mapped\n  // 2: number of bits for each entry in the Lookup Table Data (8 or 16)\n  const descriptor =\n    safeGetAll(dataElements, TagKeys.RedPaletteColorLookupTableDescriptor);\n  if (typeof descriptor !== 'undefined' &&\n    descriptor.length === 3) {\n    let redLut;\n    let greenLut;\n    let blueLut;\n    // Red Palette Color Lookup Table Data\n    const redLutElement =\n      dataElements[TagKeys.RedPaletteColorLookupTableData];\n    // Green Palette Color Lookup Table Data\n    const greenLutElement =\n      dataElements[TagKeys.GreenPaletteColorLookupTableData];\n    // Blue Palette Color Lookup Table Data\n    const blueLutElement =\n      dataElements[TagKeys.BluePaletteColorLookupTableData];\n\n    if (descriptor[2] === 16) {\n      let doScale = false;\n      // (C.7.6.3.1.5 Palette Color Lookup Table Descriptor)\n      // Some implementations have encoded 8 bit entries with 16 bits\n      // allocated, padding the high bits;\n      let descSize = descriptor[0];\n      // (C.7.6.3.1.5 Palette Color Lookup Table Descriptor)\n      // The first Palette Color Lookup Table Descriptor value is the\n      // number of entries in the lookup table. When the number of table\n      // entries is equal to 216 then this value shall be 0.\n      if (descSize === 0) {\n        descSize = 65536;\n      }\n      // red palette VL\n      // TODO vl is undefined, find info elsewhere...\n      const vlSize = redLutElement.vl;\n      // check double size\n      if (vlSize !== 2 * descSize) {\n        doScale = true;\n        logger.info('16bits lut but size is not double. desc: ' +\n          descSize + ' vl: ' + vlSize);\n      }\n      // (C.7.6.3.1.6 Palette Color Lookup Table Data)\n      // Palette color values must always be scaled across the full\n      // range of available intensities\n      const bitsAllocated = parseInt(\n        safeGet(dataElements, TagKeys.BitsAllocated), 10);\n      if (bitsAllocated === 8) {\n        doScale = true;\n        logger.info(\n          'Scaling 16bits color lut since bits allocated is 8.');\n      }\n\n      if (doScale) {\n        const scaleTo8 = function (value) {\n          return value >> 8;\n        };\n\n        redLut = redLutElement.value.map(scaleTo8);\n        greenLut = greenLutElement.value.map(scaleTo8);\n        blueLut = blueLutElement.value.map(scaleTo8);\n      }\n    } else if (descriptor[2] === 8) {\n      // lut with vr=OW was read as Uint16, convert it to Uint8\n      logger.info(\n        'Scaling 16bits color lut since the lut descriptor is 8.');\n      let clone = redLutElement.value.slice(0);\n      // @ts-expect-error\n      redLut = Array.from(new Uint8Array(clone.buffer));\n      clone = greenLutElement.value.slice(0);\n      // @ts-expect-error\n      greenLut = Array.from(new Uint8Array(clone.buffer));\n      clone = blueLutElement.value.slice(0);\n      // @ts-expect-error\n      blueLut = Array.from(new Uint8Array(clone.buffer));\n    }\n    colourMap = new ColourMap(redLut, greenLut, blueLut);\n  }\n  // return\n  return colourMap;\n}\n\n/**\n * Get the window level presets.\n *\n * @param {Object<string, DataElement>} dataElements The data elements.\n * @param {number} intensityFactor The intensity factor.\n * @returns {object|undefined} The presets.\n */\nfunction getWindowPresets(dataElements, intensityFactor) {\n  let windowPresets;\n  const windowCenter = safeGetAll(dataElements, TagKeys.WindowCenter);\n  const windowWidth = safeGetAll(dataElements, TagKeys.WindowLevel);\n  if (typeof windowCenter !== 'undefined' &&\n    typeof windowWidth !== 'undefined') {\n    windowPresets = {};\n    const windowCWExplanation =\n      safeGetAll(dataElements, TagKeys.WindowCenterWidthExplanation);\n    let name;\n    for (let j = 0; j < windowCenter.length; ++j) {\n      const center = parseFloat(windowCenter[j]);\n      let width = parseFloat(windowWidth[j]);\n      if (center && width && width !== 0) {\n        name = '';\n        if (typeof windowCWExplanation !== 'undefined') {\n          name = windowCWExplanation[j];\n        }\n        if (name === '') {\n          name = 'Default' + j;\n        }\n        width *= intensityFactor;\n        if (width < 1) {\n          width = 1;\n        }\n        windowPresets[name] = {\n          wl: [new WindowLevel(\n            center * intensityFactor,\n            width\n          )],\n          name: name\n        };\n      }\n      if (width === 0) {\n        logger.warn('Zero window width found in DICOM.');\n      }\n    }\n  }\n  // return\n  return windowPresets;\n}\n\n/**\n * {@link Image} factory.\n */\nexport class ImageFactory {\n\n  /**\n   * Possible warning created by checkElements.\n   *\n   * @type {string|undefined}\n   */\n  #warning;\n\n  /**\n   * The PET SUV factor.\n   *\n   * @type {number|undefined}\n   */\n  #suvFactor;\n\n  /**\n   * Get a warning string if elements are not as expected.\n   * Created by checkElements.\n   *\n   * @returns {string|undefined} The warning.\n   */\n  getWarning() {\n    return this.#warning;\n  }\n\n  /**\n   * Check dicom elements.\n   *\n   * @param {DataElements} dataElements The DICOM data elements.\n   * @returns {string|undefined} A possible warning.\n   * @throws Error for missing or wrong data.\n   */\n  checkElements(dataElements) {\n    // reset\n    this.#warning = undefined;\n    // will throw if columns or rows is not defined\n    getImage2DSize(dataElements);\n    // check PET SUV\n    const modality = safeGet(dataElements, TagKeys.Modality);\n    if (typeof modality !== 'undefined' && modality === 'PT') {\n      const photometricInterpretation =\n        getPhotometricInterpretation(dataElements);\n      const SOPClassUID = safeGet(dataElements, TagKeys.SOPClassUID);\n      if (isSecondatyCapture(SOPClassUID) ||\n        !isMonochrome(photometricInterpretation)) {\n        return this.#warning;\n      }\n      const suvFactor = getSuvFactor(dataElements);\n      this.#suvFactor = suvFactor.value;\n      this.#warning = suvFactor.warning;\n    }\n\n    return this.#warning;\n  }\n\n  /**\n   * Get an {@link Image} object from the read DICOM file.\n   *\n   * @param {DataElements} dataElements The DICOM tags.\n   * @param {Uint8Array | Int8Array |\n   *   Uint16Array | Int16Array |\n   *   Uint32Array | Int32Array} pixelBuffer The pixel buffer.\n   * @param {number} numberOfFiles The input number of files.\n   * @returns {Image} A new Image.\n   * @throws Error for missing or wrong data.\n   */\n  create(dataElements, pixelBuffer, numberOfFiles) {\n    // safe get shortcuts\n    const safeGetLocal = function (key) {\n      return safeGet(dataElements, key);\n    };\n    const safeGetAllLocal = function (key) {\n      return safeGetAll(dataElements, key);\n    };\n\n    const size2D = getImage2DSize(dataElements);\n    const sizeValues = [size2D[0], size2D[1], 1];\n\n    // NumberOfFrames\n    const numberOfFrames = safeGetLocal(TagKeys.NumberOfFrames);\n    if (typeof numberOfFrames !== 'undefined') {\n      const number = parseInt(numberOfFrames, 10);\n      if (number > 1) {\n        sizeValues.push(number);\n      }\n    }\n\n    // image size\n    const size = new Size(sizeValues);\n\n    // image spacing\n    const spacing = getPixelSpacing(dataElements);\n\n    // ImagePositionPatient\n    const imagePositionPatient = safeGetAllLocal(TagKeys.ImagePositionPatient);\n    // slice position\n    let slicePosition = new Array(0, 0, 0);\n    if (typeof imagePositionPatient !== 'undefined') {\n      slicePosition = [\n        parseFloat(imagePositionPatient[0]),\n        parseFloat(imagePositionPatient[1]),\n        parseFloat(imagePositionPatient[2])\n      ];\n    }\n\n    // Image orientation patient\n    const orientationMatrix = getOrientationMatrix(dataElements);\n\n    // geometry\n    const origin = new Point3D(\n      slicePosition[0], slicePosition[1], slicePosition[2]);\n    const time = getTagTime(dataElements);\n    const geometry = new Geometry(\n      [origin], size, spacing, orientationMatrix, time);\n\n    // SOP Instance UID\n    const sopInstanceUid = safeGetLocal(TagKeys.SOPInstanceUID);\n\n    // Sample per pixels\n    let samplesPerPixel = safeGetLocal(TagKeys.SamplesPerPixel);\n    if (typeof samplesPerPixel === 'undefined') {\n      samplesPerPixel = 1;\n    }\n\n    // check buffer size\n    const bufferSize = size.getTotalSize() * samplesPerPixel;\n    if (bufferSize !== pixelBuffer.length) {\n      logger.warn('Badly sized pixel buffer: ' +\n        pixelBuffer.length + ' != ' + bufferSize);\n      if (bufferSize < pixelBuffer.length) {\n        pixelBuffer = pixelBuffer.slice(0, size.getTotalSize());\n      } else {\n        throw new Error('Underestimated buffer size, can\\'t fix it...');\n      }\n    }\n\n    // image\n    const image = new Image(geometry, pixelBuffer, [sopInstanceUid]);\n\n    // PhotometricInterpretation\n    const photo = getPhotometricInterpretation(dataElements);\n    if (typeof photo !== 'undefined') {\n      image.setPhotometricInterpretation(photo);\n    }\n    // PlanarConfiguration\n    const planarConfiguration =\n      safeGetLocal(TagKeys.PlanarConfiguration);\n    if (typeof planarConfiguration !== 'undefined') {\n      image.setPlanarConfiguration(planarConfiguration);\n    }\n\n    // rescale slope and intercept\n    let slope = 1;\n    // RescaleSlope\n    const rescaleSlope = safeGetLocal(TagKeys.RescaleSlope);\n    if (typeof rescaleSlope !== 'undefined') {\n      const value = parseFloat(rescaleSlope);\n      if (!isNaN(value)) {\n        slope = value;\n      }\n    }\n    let intercept = 0;\n    // RescaleIntercept\n    const rescaleIntercept = safeGetLocal(TagKeys.RescaleIntercept);\n    if (typeof rescaleIntercept !== 'undefined') {\n      const value = parseFloat(rescaleIntercept);\n      if (!isNaN(value)) {\n        intercept = value;\n      }\n    }\n\n    // PET SUV\n    let isPetWithSuv = false;\n    let intensityFactor = 1;\n    if (typeof this.#suvFactor !== 'undefined') {\n      isPetWithSuv = true;\n      intensityFactor = this.#suvFactor;\n      logger.info('Applying PET SUV calibration: ' + intensityFactor);\n      slope *= intensityFactor;\n      intercept *= intensityFactor;\n    }\n    const rsi = new RescaleSlopeAndIntercept(slope, intercept);\n    image.setRescaleSlopeAndIntercept(rsi);\n\n    // PALETTE COLOR lut\n    if (image.getPhotometricInterpretation() === 'PALETTE COLOR') {\n      const colourMap = getPaletteColourMap(dataElements);\n      if (typeof colourMap !== 'undefined') {\n        image.setPaletteColourMap(colourMap);\n      }\n    }\n\n    // meta information\n    const meta = {\n      numberOfFiles: numberOfFiles\n    };\n\n    // defaults\n    meta.TransferSyntaxUID = safeGetLocal(TagKeys.TransferSyntaxUID);\n    meta.MediaStorageSOPClassUID =\n      safeGetLocal(TagKeys.MediaStorageSOPClassUID);\n    meta.SOPClassUID = safeGetLocal(TagKeys.SOPClassUID);\n    meta.Modality = safeGetLocal(TagKeys.Modality);\n    meta.ImageType = safeGetLocal(TagKeys.ImageType);\n    meta.SamplesPerPixel = safeGetLocal(TagKeys.SamplesPerPixel);\n    meta.PhotometricInterpretation =\n      safeGetLocal(TagKeys.PhotometricInterpretation);\n    meta.PixelRepresentation = safeGetLocal(TagKeys.PixelRepresentation);\n    meta.BitsAllocated = safeGetLocal(TagKeys.BitsAllocated);\n\n    meta.BitsStored = safeGetLocal(TagKeys.BitsStored);\n    meta.HighBit = safeGetLocal(TagKeys.HighBit);\n\n    meta.ImageOrientationPatient =\n      safeGetAllLocal(TagKeys.ImageOrientationPatient);\n\n    // meta tags\n    const metaKeys = Object.keys(MetaTagKeys);\n    for (const key of metaKeys) {\n      meta[key] = safeGetLocal(MetaTagKeys[key]);\n    }\n\n    // local pixel unit\n    if (isPetWithSuv) {\n      meta.pixelUnit = 'SUV';\n    } else {\n      const pixelUnit = getTagPixelUnit(dataElements);\n      if (typeof pixelUnit !== 'undefined') {\n        meta.pixelUnit = pixelUnit;\n      }\n    }\n\n    // window level presets\n    const presets = getWindowPresets(dataElements, intensityFactor);\n    if (typeof presets !== 'undefined') {\n      meta.windowPresets = presets;\n    }\n\n    // store the meta data\n    image.setMeta(meta);\n\n    return image;\n  }\n\n}","/**\n * Data writer.\n */\nexport class DataWriter {\n\n  /**\n   * Is the endianness Little Endian.\n   *\n   * @type {boolean}\n   */\n  #isLittleEndian = true;\n\n  /**\n   * The main data view.\n   *\n   * @type {DataView}\n   */\n  #view;\n\n  /**\n   * @param {ArrayBuffer} buffer The input array buffer.\n   * @param {boolean} [isLittleEndian] Flag to tell if the data is\n   *   little or big endian.\n   */\n  constructor(buffer, isLittleEndian) {\n    // Set endian flag if not defined.\n    if (typeof isLittleEndian !== 'undefined') {\n      this.#isLittleEndian = isLittleEndian;\n    }\n    this.#view = new DataView(buffer);\n  }\n\n  /**\n   * Write Uint8 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint8(byteOffset, value) {\n    this.#view.setUint8(byteOffset, value);\n    return byteOffset + Uint8Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Int8 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt8(byteOffset, value) {\n    this.#view.setInt8(byteOffset, value);\n    return byteOffset + Int8Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Uint16 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint16(byteOffset, value) {\n    this.#view.setUint16(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Uint16Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Int16 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt16(byteOffset, value) {\n    this.#view.setInt16(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Int16Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Uint32 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint32(byteOffset, value) {\n    this.#view.setUint32(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Uint32Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Uint64 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {bigint} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint64(byteOffset, value) {\n    this.#view.setBigUint64(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + BigUint64Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Int32 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt32(byteOffset, value) {\n    this.#view.setInt32(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Int32Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Int64 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {bigint} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt64(byteOffset, value) {\n    this.#view.setBigInt64(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + BigInt64Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Float32 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeFloat32(byteOffset, value) {\n    this.#view.setFloat32(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Float32Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write Float64 data.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {number} value The data to write.\n   * @returns {number} The new offset position.\n   */\n  writeFloat64(byteOffset, value) {\n    this.#view.setFloat64(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Float64Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write string data of length 4 as hexadecimal (no '0x' prefix).\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {string} str The hexadecimal string to write ('####').\n   * @returns {number} The new offset position.\n   */\n  writeHex(byteOffset, str) {\n    // remove first two chars and parse\n    const value = parseInt(str, 16);\n    this.#view.setUint16(byteOffset, value, this.#isLittleEndian);\n    return byteOffset + Uint16Array.BYTES_PER_ELEMENT;\n  }\n\n  /**\n   * Write a boolean array as binary.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeBinaryArray(byteOffset, array) {\n    if (array.length % 8 !== 0) {\n      throw new Error('Cannot write boolean array as binary.');\n    }\n    let byte = null;\n    let val = null;\n    for (let i = 0, len = array.length; i < len; i += 8) {\n      byte = 0;\n      for (let j = 0; j < 8; ++j) {\n        val = array[i + j] === 0 ? 0 : 1;\n        byte += val << j;\n      }\n      byteOffset = this.writeUint8(byteOffset, byte);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Uint8 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array|Uint8Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint8Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeUint8(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Int8 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt8Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeInt8(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Uint16 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint16Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeUint16(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Int16 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt16Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeInt16(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Uint32 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint32Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeUint32(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Uint64 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeUint64Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeUint64(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Int32 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt32Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeInt32(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Int64 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeInt64Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeInt64(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Float32 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeFloat32Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeFloat32(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n  /**\n   * Write Float64 array.\n   *\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} array The array to write.\n   * @returns {number} The new offset position.\n   */\n  writeFloat64Array(byteOffset, array) {\n    for (let i = 0, len = array.length; i < len; ++i) {\n      byteOffset = this.writeFloat64(byteOffset, array[i]);\n    }\n    return byteOffset;\n  }\n\n} // class DataWriter\n","import {\n  is32bitVLVR,\n  isCharSetStringVR,\n  vrTypes\n} from './dictionary';\nimport {\n  Tag,\n  getTagFromDictionary,\n  getTagFromKey,\n  getItemTag,\n  getItemDelimitationItemTag,\n  getSequenceDelimitationItemTag,\n  getFileMetaInformationGroupLengthTag,\n  isPixelDataTag,\n  isItemTag,\n  isItemDelimitationItemTag,\n  tagCompareFunction\n} from './dicomTag';\nimport {\n  getDwvUIDPrefix,\n  getImplementationClassUID,\n  getImplementationVersionName,\n  isImplicitTransferSyntax,\n  isBigEndianTransferSyntax,\n  getDataElementPrefixByteSize\n} from './dicomParser';\nimport {DataElement} from './dataElement';\nimport {DataWriter} from './dataWriter';\nimport {DataReader} from './dataReader';\nimport {logger} from '../utils/logger';\n\n// local generated uid counter\nlet _uidCount = 0;\n\n/**\n * Writer rule.\n */\nexport class WriterRule {\n  /**\n   * Rule action: `copy`, `remove`, `clear` or `replace`.\n   *\n   * @type {string}\n   */\n  action;\n  /**\n   * Optional value to use for replace action.\n   *\n   * @type {any|undefined}\n   */\n  value;\n\n  /**\n   * @param {string} action The rule action.\n   */\n  constructor(action) {\n    this.action = action;\n  }\n}\n\n/**\n * Possible writer actions.\n *\n * @type {Object<string, Function>}\n */\nconst writerActions = {\n  copy: function (item) {\n    return item;\n  },\n  remove: function () {\n    return null;\n  },\n  clear: function (item) {\n    item.value = [];\n    return item;\n  },\n  replace: function (item, value) {\n    item.value = [value];\n    return item;\n  }\n};\n\n/**\n * Get simple (non official) DICOM anonymisation rules.\n *\n * @returns {Object<string, WriterRule>} The rules.\n */\nexport function getDefaultAnonymisationRules() {\n  return {\n    default: {action: 'copy', value: null},\n    PatientName: {action: 'replace', value: 'Anonymized'}, // tag\n    'Meta Element': {action: 'copy', value: null}, // group '0002'\n    Acquisition: {action: 'copy', value: null}, // group '0018'\n    'Image Presentation': {action: 'copy', value: null}, // group '0028'\n    Procedure: {action: 'copy', value: null}, // group '0040'\n    'Pixel Data': {action: 'copy', value: null} // group '7fe0'\n  };\n}\n\n/**\n * Get a UID for a DICOM tag.\n *\n * Note: Use {@link https://github.com/uuidjs/uuid}?\n *\n * Ref:\n * - {@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/chapter_9.html},\n * - {@link http://dicomiseasy.blogspot.com/2011/12/chapter-4-dicom-objects-in-chapter-3.html},\n * - {@link https://stackoverflow.com/questions/46304306/how-to-generate-unique-dicom-uid}.\n *\n * @param {string} tagName The input tag.\n * @returns {string} The corresponding UID.\n */\nexport function getUID(tagName) {\n  const prefix = getDwvUIDPrefix() + '.';\n  // date (only numbers), do not keep milliseconds\n  const date = (new Date()).toISOString().replace(/\\D/g, '');\n  const datePart = '.' + date.substring(0, 14);\n  // count\n  _uidCount += 1;\n  const countPart = '.' + _uidCount;\n\n  // uid = prefix . tag . date . count\n  let uid = prefix;\n\n  // limit tag part to not exceed 64 length\n  const nonTagLength = prefix.length + countPart.length + datePart.length;\n  const leni = Math.min(tagName.length, 64 - nonTagLength);\n  if (leni > 1) {\n    let tagNumber = '';\n    for (let i = 0; i < leni; ++i) {\n      tagNumber += tagName.charCodeAt(i);\n    }\n    uid += tagNumber.substring(0, leni);\n  }\n\n  // finish\n  uid += datePart + countPart;\n\n  return uid;\n}\n\n/**\n * Return true if the input number is even.\n *\n * @param {number} number The number to check.\n * @returns {boolean} True is the number is even.\n */\nfunction isEven(number) {\n  return number % 2 === 0;\n}\n\n/**\n * Is the input VR a VR that stores data in a typed array.\n * TODO: include ox and xs?\n *\n * @param {string} vr The element VR.\n * @returns {boolean} True if the VR is a typed array one.\n */\nfunction isTypedArrayVr(vr) {\n  const vrType = vrTypes[vr];\n  return typeof vrType !== 'undefined' &&\n    vrType !== 'string';\n}\n\n/**\n * Is the input VR a string VR.\n *\n * @param {string} vr The element VR.\n * @returns {boolean} True if the VR is a string one.\n */\nfunction isStringVr(vr) {\n  const vrType = vrTypes[vr];\n  return typeof vrType !== 'undefined' &&\n    vrType === 'string';\n}\n\n/**\n * Is the input VR a VR that could need padding.\n *\n * See {@link http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_6.2.html}.\n *\n * @param {string} vr The element VR.\n * @returns {boolean} True if the VR needs padding.\n */\nfunction isVrToPad(vr) {\n  return isStringVr(vr) || vr === 'OB';\n}\n\n/**\n * Get the VR specific padding value.\n *\n * @param {string} vr The element VR.\n * @returns {string} The value used to pad.\n */\nfunction getVrPad(vr) {\n  let pad = '';\n  if (isStringVr(vr)) {\n    if (vr === 'UI') {\n      pad = '\\0';\n    } else {\n      pad = ' ';\n    }\n  }\n  return pad;\n}\n\n/**\n * Push a value at the end of an input Uint8Array.\n *\n * @param {Array|Uint8Array} arr The input array.\n * @param {Array|Uint8Array} value The value to push.\n * @returns {Uint8Array} The new array.\n */\nfunction uint8ArrayPush(arr, value) {\n  const newArr = new Uint8Array(arr.length + 1);\n  newArr.set(arr);\n  newArr.set(value, arr.length);\n  return newArr;\n}\n\n/**\n * Pad an input OB value.\n *\n * @param {Array|Uint8Array} value The input value.\n * @returns {Array|Uint8Array} The padded input.\n */\nfunction padOBValue(value) {\n  if (value !== null &&\n    typeof value !== 'undefined' &&\n    typeof value.length !== 'undefined') {\n    // calculate size and pad if needed\n    if (value.length !== 0 &&\n      typeof value[0].length !== 'undefined') {\n      // handle array of array\n      let size = 0;\n      for (let i = 0; i < value.length; ++i) {\n        size += value[i].length;\n      }\n      if (!isEven(size)) {\n        value[value.length - 1] = uint8ArrayPush(\n          value[value.length - 1], [0]);\n      }\n    } else {\n      if (!isEven(value.length)) {\n        value = uint8ArrayPush(value, [0]);\n      }\n    }\n  } else {\n    throw new Error('Cannot pad undefined or null OB value.');\n  }\n  // uint8ArrayPush may create a new array so we\n  // need to return it\n  return value;\n}\n\n/**\n * Helper method to flatten an array of typed arrays to 2D typed array.\n *\n * @param {Array} initialArray Array of typed arrays.\n * @returns {object} A typed array containing all values.\n */\nfunction flattenArrayOfTypedArrays(initialArray) {\n  const initialArrayLength = initialArray.length;\n  const arrayLength = initialArray[0].length;\n  // If this is not a array of arrays, just return the initial one:\n  if (typeof arrayLength === 'undefined') {\n    return initialArray;\n  }\n\n  const flattenendArrayLength = initialArrayLength * arrayLength;\n\n  const flattenedArray = new initialArray[0].constructor(flattenendArrayLength);\n\n  for (let i = 0; i < initialArrayLength; i++) {\n    const indexFlattenedArray = i * arrayLength;\n    flattenedArray.set(initialArray[i], indexFlattenedArray);\n  }\n  return flattenedArray;\n}\n\n/**\n * Default text encoder.\n */\nclass DefaultTextEncoder {\n  /**\n   * Encode an input string.\n   *\n   * @param {string} str The string to encode.\n   * @returns {Uint8Array} The encoded string.\n   */\n  encode(str) {\n    const result = new Uint8Array(str.length);\n    for (let i = 0, leni = str.length; i < leni; ++i) {\n      result[i] = str.charCodeAt(i);\n    }\n    return result;\n  }\n}\n\n/**\n * Small list of used tag keys.\n */\nconst TagKeys = {\n  TransferSyntax: '00020010',\n  SpecificCharacterSet: '00080005',\n  BitsAllocated: '00280100',\n};\n\n/**\n * DICOM writer.\n *\n * @example\n * // add link to html\n * const link = document.createElement(\"a\");\n * link.appendChild(document.createTextNode(\"download\"));\n * const div = document.getElementById(\"dwv\");\n * div.appendChild(link);\n * // XMLHttpRequest onload callback\n * const onload = function (event) {\n *   const parser = new dwv.DicomParser();\n *   parser.parse(event.target.response);\n *   // create writer\n *   const writer = new dwv.DicomWriter();\n *   // get buffer using default rules\n *   const dicomBuffer = writer.getBuffer(parser.getDicomElements());\n *   // create blob\n *   const blob = new Blob([dicomBuffer], {type: 'application/dicom'});\n *   // add blob to download link\n *   link.href = URL.createObjectURL(blob);\n *   link.download = \"anonym.dcm\";\n * };\n * // DICOM file request\n * const request = new XMLHttpRequest();\n * const url = 'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm';\n * request.open('GET', url);\n * request.responseType = 'arraybuffer';\n * request.onload = onload;\n * request.send();\n */\nexport class DicomWriter {\n\n  /**\n   * Flag to use VR=UN for private sequences, default to false\n   * (mainly used in tests).\n   *\n   * @type {boolean}\n   */\n  #useUnVrForPrivateSq = false;\n\n  /**\n   * Flag to activate or not the vr=UN tag check and fix\n   * if present in the dictionary. Default to true.\n   *\n   * @type {boolean}\n   */\n  #fixUnknownVR = true;\n\n  /**\n   * Default rules: just copy.\n   *\n   * @type {Object<string, WriterRule>}\n   */\n  #defaultRules = {\n    default: {action: 'copy', value: null}\n  };\n\n  /**\n   * Writing rules.\n   *\n   * @type {Object<string, WriterRule>}\n   */\n  #rules = this.#defaultRules;\n\n  /**\n   * List of compulsory tags keys.\n   *\n   * @type {string[]}\n   */\n  #compulsoryTags = [];\n\n  /**\n   * Default text encoder.\n   *\n   * @type {DefaultTextEncoder}\n   */\n  #defaultTextEncoder = new DefaultTextEncoder();\n\n  /**\n   * Special text encoder.\n   *\n   * @type {DefaultTextEncoder|TextEncoder}\n   */\n  #textEncoder = this.#defaultTextEncoder;\n\n  /**\n   * Set the use UN VR for private sequence flag.\n   *\n   * @param {boolean} flag True to use UN VR.\n   */\n  setUseUnVrForPrivateSq(flag) {\n    this.#useUnVrForPrivateSq = flag;\n  }\n\n  /**\n   * Set the vr=UN check and fix flag.\n   *\n   * @param {boolean} flag True to activate the check and fix.\n   */\n  setFixUnknownVR(flag) {\n    this.#fixUnknownVR = flag;\n  }\n\n  /**\n   * Set the writing rules.\n   * List of writer rules indexed by either `default`,\n   *   tagKey, tagName or groupName.\n   * Each DICOM element will be checked to see if a rule is applicable.\n   * First checked by tagKey, tagName and then by groupName,\n   * if nothing is found the default rule is applied.\n   *\n   * @param {Object<string, WriterRule>} rules The input rules.\n   * @param {boolean} [addMissingTags] If true, explicit tags that\n   *   have replace rule and a value will be\n   *   added if missing. Defaults to false.\n   */\n  setRules(rules, addMissingTags) {\n    this.#rules = rules;\n\n    // default compulsory list is empty\n    this.#compulsoryTags = [];\n\n    // use replace rule tags as compulsory tags\n    if (addMissingTags) {\n      const keys = Object.keys(rules);\n      for (const key of keys) {\n        const rule = rules[key];\n        if (rule.action === 'replace' &&\n          typeof rule.value !== 'undefined' &&\n          rule.value !== null) {\n          // check if key really exists\n          let isKey = false;\n          if (key.length === 8) {\n            const tag = getTagFromKey(key);\n            isKey = typeof tag.getNameFromDictionary() !== 'undefined';\n          }\n          // get tag key, rules can use key or tag name\n          let tagKey;\n          if (isKey) {\n            tagKey = key;\n          } else {\n            // try tag name\n            const tag = getTagFromDictionary(key);\n            if (typeof tag !== 'undefined') {\n              tagKey = tag.getKey();\n            }\n          }\n          // add to list\n          if (typeof tagKey !== 'undefined') {\n            this.#compulsoryTags.push(tagKey);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Encode string data.\n   *\n   * @param {string} str The string to encode.\n   * @returns {Uint8Array} The encoded string.\n   */\n  #encodeString(str) {\n    return this.#defaultTextEncoder.encode(str);\n  }\n\n  /**\n   * Encode data as a UTF-8.\n   *\n   * @param {string} str The string to write.\n   * @returns {Uint8Array} The encoded string.\n   */\n  #encodeSpecialString(str) {\n    return this.#textEncoder.encode(str);\n  }\n\n  /**\n   * Use a TextEncoder instead of the default text decoder.\n   */\n  useSpecialTextEncoder() {\n    /**\n     * The text encoder.\n     *\n     * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/API/TextEncoder}.\n     *\n     * @external TextEncoder\n     */\n    this.#textEncoder = new TextEncoder();\n  }\n\n  /**\n   * Get the element to write according to the class rules.\n   * Priority order: tagName, groupName, default.\n   *\n   * @param {DataElement} element The element to check.\n   * @returns {DataElement|null} The element to write, can be null.\n   */\n  getElementToWrite(element) {\n    // get group and tag string name\n    const groupName = element.tag.getGroupName();\n    const tagName = element.tag.getNameFromDictionary();\n\n    // apply rules:\n    let rule;\n    if (typeof this.#rules[element.tag.getKey()] !== 'undefined') {\n      // 1. tag itself\n      rule = this.#rules[element.tag.getKey()];\n    } else if (typeof tagName !== 'undefined' &&\n      typeof this.#rules[tagName] !== 'undefined') {\n      // 2. tag name\n      rule = this.#rules[tagName];\n    } else if (typeof this.#rules[groupName] !== 'undefined') {\n      // 3. group name\n      rule = this.#rules[groupName];\n    } else {\n      // 4. default\n      rule = this.#rules['default'];\n    }\n    // apply action on element and return\n    return writerActions[rule.action](element, rule.value);\n  }\n\n  /**\n   * Write a list of items.\n   *\n   * @param {DataWriter} writer The raw data writer.\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} items The list of items to write.\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\n   * @returns {number} The new offset position.\n   */\n  #writeDataElementItems(\n    writer, byteOffset, items, isImplicit) {\n\n    const isItemTagWithNoVR = function (item) {\n      return isItemTag(item.tag) && item.vr === 'NONE';\n    };\n\n    let item;\n    for (let i = 0; i < items.length; ++i) {\n      item = items[i];\n      if (item.length === 0) {\n        continue;\n      }\n      // item element (create new to not modify original)\n      let undefinedLength = false;\n      const itemTag = item.find((subItem) => isItemTagWithNoVR(subItem));\n      if (typeof itemTag !== 'undefined' &&\n        typeof itemTag.undefinedLength !== 'undefined') {\n        undefinedLength = itemTag.undefinedLength;\n      }\n      const itemElement = new DataElement('NONE');\n      itemElement.vl = undefinedLength ? 0xffffffff : itemTag.vl,\n      itemElement.tag = getItemTag();\n      itemElement.value = [];\n      byteOffset = this.#writeDataElement(\n        writer, itemElement, byteOffset, isImplicit);\n      // write rest\n      for (const subItem of item) {\n        if (!isItemTagWithNoVR(subItem) &&\n          !isItemDelimitationItemTag(subItem.tag)) {\n          byteOffset = this.#writeDataElement(\n            writer, subItem, byteOffset, isImplicit);\n        }\n      }\n      // item delimitation\n      if (undefinedLength) {\n        const itemDelimElement = new DataElement('NONE');\n        itemDelimElement.vl = 0;\n        itemDelimElement.tag = getItemDelimitationItemTag();\n        itemDelimElement.value = [];\n        byteOffset = this.#writeDataElement(\n          writer, itemDelimElement, byteOffset, isImplicit);\n      }\n    }\n\n    // return new offset\n    return byteOffset;\n  }\n\n  /**\n   * Write data with a specific Value Representation (VR).\n   *\n   * @param {DataWriter} writer The raw data writer.\n   * @param {DataElement} element The element to write.\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} value The array to write.\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\n   * @returns {number} The new offset position.\n   */\n  #writeDataElementValue(\n    writer, element, byteOffset, value, isImplicit) {\n\n    const startOffset = byteOffset;\n\n    if (element.vr === 'NONE') {\n      // nothing to do!\n    } else if (value instanceof Uint8Array) {\n      // binary data has been expanded 8 times at read\n      if (value.length === 8 * element.vl) {\n        byteOffset = writer.writeBinaryArray(byteOffset, value);\n      } else {\n        byteOffset = writer.writeUint8Array(byteOffset, value);\n      }\n    } else if (value instanceof Int8Array) {\n      byteOffset = writer.writeInt8Array(byteOffset, value);\n    } else if (value instanceof Uint16Array) {\n      byteOffset = writer.writeUint16Array(byteOffset, value);\n    } else if (value instanceof Int16Array) {\n      byteOffset = writer.writeInt16Array(byteOffset, value);\n    } else if (value instanceof Uint32Array) {\n      byteOffset = writer.writeUint32Array(byteOffset, value);\n    } else if (value instanceof Int32Array) {\n      byteOffset = writer.writeInt32Array(byteOffset, value);\n    } else if (value instanceof BigUint64Array) {\n      byteOffset = writer.writeUint64Array(byteOffset, value);\n    } else if (value instanceof BigInt64Array) {\n      byteOffset = writer.writeInt64Array(byteOffset, value);\n    } else {\n      // switch according to VR if input type is undefined\n      const vrType = vrTypes[element.vr];\n      if (typeof vrType !== 'undefined') {\n        if (vrType === 'Uint8') {\n          byteOffset = writer.writeUint8Array(byteOffset, value);\n        } else if (vrType === 'Uint16') {\n          byteOffset = writer.writeUint16Array(byteOffset, value);\n        } else if (vrType === 'Int16') {\n          byteOffset = writer.writeInt16Array(byteOffset, value);\n        } else if (vrType === 'Uint32') {\n          byteOffset = writer.writeUint32Array(byteOffset, value);\n        } else if (vrType === 'Int32') {\n          byteOffset = writer.writeInt32Array(byteOffset, value);\n        } else if (vrType === 'Uint64') {\n          byteOffset = writer.writeUint64Array(byteOffset, value);\n        } else if (vrType === 'Int64') {\n          byteOffset = writer.writeInt64Array(byteOffset, value);\n        } else if (vrType === 'Float32') {\n          byteOffset = writer.writeFloat32Array(byteOffset, value);\n        } else if (vrType === 'Float64') {\n          byteOffset = writer.writeFloat64Array(byteOffset, value);\n        } else if (vrType === 'string') {\n          byteOffset = writer.writeUint8Array(byteOffset, value);\n        } else {\n          throw new Error('Unknown VR type: ' + vrType);\n        }\n      } else if (element.vr === 'SQ') {\n        byteOffset = this.#writeDataElementItems(\n          writer, byteOffset, value, isImplicit);\n      } else if (element.vr === 'AT') {\n        for (let i = 0; i < value.length; ++i) {\n          const hexString = value[i] + '';\n          const hexString1 = hexString.substring(1, 5);\n          const hexString2 = hexString.substring(6, 10);\n          const dec1 = parseInt(hexString1, 16);\n          const dec2 = parseInt(hexString2, 16);\n          const atValue = [dec1, dec2];\n          byteOffset = writer.writeUint16Array(byteOffset, atValue);\n        }\n      } else if (element.vr === 'xs') {\n        // TODO would be better to use pixelRepresentation in if\n        if (value instanceof Int16Array) {\n          byteOffset = writer.writeInt16Array(byteOffset, value);\n        } else {\n          byteOffset = writer.writeUint16Array(byteOffset, value);\n        }\n      } else {\n        logger.warn('Unknown VR: ' + element.vr);\n      }\n    }\n\n    if (element.vr !== 'SQ' && element.vr !== 'NONE') {\n      const diff = byteOffset - startOffset;\n      if (diff !== element.vl) {\n        let message = 'Offset difference and VL are not equal: ' +\n          diff + ' != ' + element.vl;\n        message += ' (';\n        if (typeof element.tag !== 'undefined') {\n          message += element.tag + ', ';\n        }\n        message += 'vr:' + element.vr + ')';\n        logger.warn(message);\n      }\n    }\n\n    // return new offset\n    return byteOffset;\n  }\n\n  /**\n   * Write a pixel data element.\n   *\n   * @param {DataWriter} writer The raw data writer.\n   * @param {DataElement} element The element to write.\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {Array} value The array to write.\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\n   * @returns {number} The new offset position.\n   */\n  #writePixelDataElementValue(\n    writer, element, byteOffset, value, isImplicit) {\n    // undefined length flag\n    let undefinedLength = false;\n    if (typeof element.undefinedLength !== 'undefined') {\n      undefinedLength = element.undefinedLength;\n    }\n    // explicit length\n    if (!undefinedLength) {\n      let finalValue = value[0];\n      // flatten multi frame\n      if (value.length > 1) {\n        finalValue = flattenArrayOfTypedArrays(value);\n      }\n      // write\n      byteOffset = this.#writeDataElementValue(\n        writer, element, byteOffset, finalValue, isImplicit);\n    } else {\n      // pixel data as sequence\n      const item = [];\n      // first item: basic offset table\n      item.push({\n        tag: getItemTag(),\n        vr: 'NONE',\n        vl: 0,\n        value: []\n      });\n      // data\n      for (let i = 0; i < value.length; ++i) {\n        item.push({\n          tag: getItemTag(),\n          vr: element.vr,\n          vl: value[i].length,\n          value: value[i]\n        });\n      }\n      // write\n      byteOffset = this.#writeDataElementItems(\n        writer, byteOffset, [item], isImplicit);\n    }\n\n    // return new offset\n    return byteOffset;\n  }\n\n  /**\n   * Write a data element.\n   *\n   * @param {DataWriter} writer The raw data writer.\n   * @param {DataElement} element The DICOM data element to write.\n   * @param {number} byteOffset The offset to start writing from.\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\n   * @returns {number} The new offset position.\n   */\n  #writeDataElement(\n    writer, element, byteOffset, isImplicit) {\n    const isTagWithVR = element.tag.isWithVR();\n    const is32bitVL = (isImplicit || !isTagWithVR)\n      ? true : is32bitVLVR(element.vr);\n    // group\n    byteOffset = writer.writeHex(byteOffset, element.tag.getGroup());\n    // element\n    byteOffset = writer.writeHex(byteOffset, element.tag.getElement());\n    // VR\n    let vr = element.vr;\n    // use VR=UN for private sequence\n    if (this.#useUnVrForPrivateSq &&\n      element.tag.isPrivate() &&\n      vr === 'SQ') {\n      logger.warn('Write element using VR=UN for private sequence.');\n      vr = 'UN';\n    }\n    if (isTagWithVR && !isImplicit) {\n      byteOffset = writer.writeUint8Array(byteOffset, this.#encodeString(vr));\n      // reserved 2 bytes for 32bit VL\n      if (is32bitVL) {\n        byteOffset += 2;\n      }\n    }\n\n    let undefinedLengthSequence = false;\n    if (element.vr === 'SQ' ||\n      isPixelDataTag(element.tag)) {\n      if (typeof element.undefinedLength !== 'undefined') {\n        undefinedLengthSequence = element.undefinedLength;\n      }\n    }\n    let undefinedLengthItem = false;\n    if (isItemTag(element.tag)) {\n      if (typeof element.undefinedLength !== 'undefined') {\n        undefinedLengthItem = element.undefinedLength;\n      }\n    }\n\n    // update vl for sequence or item with undefined length\n    let vl = element.vl;\n    if (undefinedLengthSequence || undefinedLengthItem) {\n      vl = 0xffffffff;\n    }\n    // VL\n    if (is32bitVL) {\n      byteOffset = writer.writeUint32(byteOffset, vl);\n    } else {\n      byteOffset = writer.writeUint16(byteOffset, vl);\n    }\n\n    // value\n    let value = element.value;\n    // check value\n    if (typeof value === 'undefined') {\n      value = [];\n    }\n    // write\n    if (isPixelDataTag(element.tag)) {\n      byteOffset = this.#writePixelDataElementValue(\n        writer, element, byteOffset, value, isImplicit);\n    } else {\n      byteOffset = this.#writeDataElementValue(\n        writer, element, byteOffset, value, isImplicit);\n    }\n\n    // sequence delimitation item for sequence with undefined length\n    if (undefinedLengthSequence) {\n      const seqDelimElement = new DataElement('NONE');\n      seqDelimElement.vl = 0;\n      seqDelimElement.tag = getSequenceDelimitationItemTag();\n      seqDelimElement.value = [];\n      byteOffset = this.#writeDataElement(\n        writer, seqDelimElement, byteOffset, isImplicit);\n    }\n\n    // return new offset\n    return byteOffset;\n  }\n\n  /**\n   * Get the ArrayBuffer corresponding to input DICOM elements.\n   *\n   * @param {Object<string, DataElement>} dataElements The elements to write.\n   * @returns {ArrayBuffer} The elements as a buffer.\n   */\n  getBuffer(dataElements) {\n    // Transfer Syntax\n    const syntax = dataElements[TagKeys.TransferSyntax].value[0];\n    const isImplicit = isImplicitTransferSyntax(syntax);\n    const isBigEndian = isBigEndianTransferSyntax(syntax);\n    // Specific CharacterSet\n    if (typeof dataElements[TagKeys.SpecificCharacterSet] !== 'undefined') {\n      const oldscs = dataElements[TagKeys.SpecificCharacterSet].value[0];\n      // force UTF-8 if not default character set\n      if (typeof oldscs !== 'undefined' && oldscs !== 'ISO-IR 6') {\n        logger.debug('Change charset to UTF, was: ' + oldscs);\n        this.useSpecialTextEncoder();\n        dataElements[TagKeys.SpecificCharacterSet].value = ['ISO_IR 192'];\n      }\n    }\n    // Bits Allocated (for image data)\n    let bitsAllocated;\n    if (typeof dataElements[TagKeys.BitsAllocated] !== 'undefined') {\n      bitsAllocated = dataElements[TagKeys.BitsAllocated].value[0];\n    }\n\n    // calculate buffer size and split elements (meta and non meta)\n    let totalSize = 128 + 4; // DICM\n    let localSize = 0;\n    const metaElements = [];\n    const rawElements = [];\n    let element;\n    let groupName;\n    let metaLength = 0;\n    // FileMetaInformationGroupLength\n    const fmiglTag = getFileMetaInformationGroupLengthTag();\n    // FileMetaInformationVersion\n    const fmivTag = new Tag('0002', '0001');\n    // ImplementationClassUID\n    const icUIDTag = new Tag('0002', '0012');\n    // ImplementationVersionName\n    const ivnTag = new Tag('0002', '0013');\n\n    // missing tag list: start as a copy of compulsory\n    const missingTags = this.#compulsoryTags.slice();\n\n    // loop through elements to get the buffer size\n    const keys = Object.keys(dataElements);\n    for (let i = 0, leni = keys.length; i < leni; ++i) {\n      const originalElement = dataElements[keys[i]];\n      originalElement.tag = getTagFromKey(keys[i]);\n      element = this.getElementToWrite(originalElement);\n      if (element !== null &&\n        !fmiglTag.equals(element.tag) &&\n        !fmivTag.equals(element.tag) &&\n        !icUIDTag.equals(element.tag) &&\n        !ivnTag.equals(element.tag)) {\n        localSize = 0;\n\n        // check if compulsory tag, if present remove from missing list\n        const index = missingTags.indexOf(element.tag.getKey());\n        if (index !== -1) {\n          missingTags.splice(index, 1);\n        }\n\n        // XB7 2020-04-17\n        // Check if UN can be converted to correct VR.\n        // This check must be done BEFORE calculating totalSize,\n        // otherwise there may be extra null bytes at the end of the file\n        // (dcmdump may crash because of these bytes)\n        if (this.#fixUnknownVR) {\n          checkAndFixUnknownVR(element, !isBigEndian);\n        }\n\n        // update value and vl\n        this.#setElementValue(\n          element, element.value, isImplicit, bitsAllocated);\n\n        // tag group name\n        groupName = element.tag.getGroupName();\n\n        // prefix\n        if (groupName === 'Meta Element') {\n          localSize += getDataElementPrefixByteSize(element.vr, false);\n        } else {\n          localSize += getDataElementPrefixByteSize(\n            element.vr, isImplicit);\n        }\n\n        // value\n        localSize += element.vl;\n\n        // sort elements\n        if (groupName === 'Meta Element') {\n          metaElements.push(element);\n          metaLength += localSize;\n        } else {\n          rawElements.push(element);\n        }\n\n        // add to total size\n        totalSize += localSize;\n      }\n    }\n\n    // add compulsory tags to output data if not present\n    for (const key of missingTags) {\n      const tag = getTagFromKey(key);\n      const dataElement = new DataElement(tag.getVrFromDictionary());\n      dataElement.tag = tag;\n      // rules are indexed by key or tag name\n      let value;\n      if (typeof this.#rules[key] !== 'undefined') {\n        value = this.#rules[key].value;\n      } else {\n        const name = tag.getNameFromDictionary();\n        value = this.#rules[name].value;\n      }\n      // add element\n      let size = getDataElementPrefixByteSize(dataElement.vr, isImplicit);\n      size += this.#setElementValue(dataElement, [value], isImplicit);\n      rawElements.push(dataElement);\n      totalSize += size;\n    }\n\n    // FileMetaInformationVersion\n    const fmiv = getDataElement('FileMetaInformationVersion');\n    let fmivSize = getDataElementPrefixByteSize(fmiv.vr, false);\n    fmivSize += this.#setElementValue(fmiv, [0, 1], false);\n    metaElements.push(fmiv);\n    metaLength += fmivSize;\n    totalSize += fmivSize;\n    // ImplementationClassUID\n    const icUID = getDataElement('ImplementationClassUID');\n    let icUIDSize = getDataElementPrefixByteSize(icUID.vr, false);\n    const icUIDValue = getImplementationClassUID();\n    icUIDSize += this.#setElementValue(icUID, [icUIDValue], false);\n    metaElements.push(icUID);\n    metaLength += icUIDSize;\n    totalSize += icUIDSize;\n    // ImplementationVersionName\n    const ivn = getDataElement('ImplementationVersionName');\n    let ivnSize = getDataElementPrefixByteSize(ivn.vr, false);\n    const ivnValue = getImplementationVersionName();\n    ivnSize += this.#setElementValue(ivn, [ivnValue], false);\n    metaElements.push(ivn);\n    metaLength += ivnSize;\n    totalSize += ivnSize;\n\n    // sort elements\n    const elemSortFunc = function (a, b) {\n      return tagCompareFunction(a.tag, b.tag);\n    };\n    metaElements.sort(elemSortFunc);\n    rawElements.sort(elemSortFunc);\n\n    // create the FileMetaInformationGroupLength element\n    const fmigl = getDataElement('FileMetaInformationGroupLength');\n    let fmiglSize = getDataElementPrefixByteSize(fmigl.vr, false);\n    fmiglSize += this.#setElementValue(\n      fmigl, new Uint32Array([metaLength]), false);\n    totalSize += fmiglSize;\n\n    // create buffer\n    const buffer = new ArrayBuffer(totalSize);\n    const metaWriter = new DataWriter(buffer);\n    const dataWriter = new DataWriter(buffer, !isBigEndian);\n\n    let offset = 128;\n    // DICM\n    offset = metaWriter.writeUint8Array(offset, this.#encodeString('DICM'));\n    // FileMetaInformationGroupLength\n    offset = this.#writeDataElement(metaWriter, fmigl, offset, false);\n    // write meta\n    for (let j = 0, lenj = metaElements.length; j < lenj; ++j) {\n      offset = this.#writeDataElement(\n        metaWriter, metaElements[j], offset, false);\n    }\n\n    // check meta position\n    const preambleSize = 128 + 4;\n    const metaOffset = preambleSize + fmiglSize + metaLength;\n    if (offset !== metaOffset) {\n      logger.warn('Bad size calculation... meta offset: ' + offset +\n        ', calculated size:' + metaOffset +\n        ' (diff:' + (offset - metaOffset) + ')');\n    }\n\n    // write non meta\n    for (let k = 0, lenk = rawElements.length; k < lenk; ++k) {\n      offset = this.#writeDataElement(\n        dataWriter, rawElements[k], offset, isImplicit);\n    }\n\n    // check final position\n    if (offset !== totalSize) {\n      logger.warn('Bad size calculation... final offset: ' + offset +\n        ', calculated size:' + totalSize +\n        ' (diff:' + (offset - totalSize) + ')');\n    }\n    // return\n    return buffer;\n  }\n\n  /**\n   * Set a DICOM element value according to its VR (Value Representation).\n   *\n   * @param {DataElement} element The DICOM element to set the value.\n   * @param {object} value The value to set.\n   * @param {boolean} isImplicit Does the data use implicit VR?\n   * @param {number} [bitsAllocated] Bits allocated used for pixel data.\n   * @returns {number} The total element size.\n   */\n  #setElementValue(\n    element, value, isImplicit, bitsAllocated) {\n    // byte size of the element\n    let size = 0;\n    // special sequence case\n    if (element.vr === 'SQ') {\n\n      if (value !== null && value !== 0) {\n        const newItems = [];\n\n        // explicit or undefined length sequence\n        let undefinedLength = false;\n        if (typeof element.undefinedLength !== 'undefined') {\n          undefinedLength = element.undefinedLength;\n          delete element.undefinedLength;\n        }\n\n        // items\n        for (let i = 0; i < value.length; ++i) {\n          const oldItemElements = value[i];\n          const newItemElements = [];\n          let subSize = 0;\n\n          // check data\n          if (oldItemElements === null || oldItemElements === 0) {\n            continue;\n          }\n\n          // possible local bitsAllocated\n          let sqBitsAllocated = bitsAllocated;\n          const dataElement = oldItemElements[TagKeys.BitsAllocated];\n          if (typeof dataElement !== 'undefined' &&\n            typeof dataElement.value !== 'undefined') {\n            sqBitsAllocated = dataElement.value[0];\n          }\n\n          // elements\n          const itemKeys = Object.keys(oldItemElements);\n          for (let j = 0, lenj = itemKeys.length; j < lenj; ++j) {\n            const itemKey = itemKeys[j];\n            const subElement = oldItemElements[itemKey];\n            subElement.tag = getTagFromKey(itemKey);\n\n            if (isItemTag(subElement.tag)) {\n              continue;\n            }\n            // set item value\n            subSize += this.#setElementValue(\n              subElement, subElement.value, isImplicit, sqBitsAllocated);\n            newItemElements.push(subElement);\n            // add prefix size\n            subSize += getDataElementPrefixByteSize(\n              subElement.vr, isImplicit);\n          }\n\n          // add item element (used to store its size)\n          const itemElement = {\n            tag: getItemTag(),\n            vr: 'NONE',\n            vl: subSize,\n            value: []\n          };\n          if (undefinedLength) {\n            itemElement.undefinedLength = undefinedLength;\n          }\n          newItemElements.push(itemElement);\n          subSize += getDataElementPrefixByteSize(\n            itemElement.vr, isImplicit);\n\n          // add item delimitation size\n          if (undefinedLength) {\n            subSize += getDataElementPrefixByteSize(\n              'NONE', isImplicit);\n          }\n\n          // sort\n          const elemSortFunc = function (a, b) {\n            return tagCompareFunction(a.tag, b.tag);\n          };\n          newItemElements.sort(elemSortFunc);\n\n          size += subSize;\n          newItems.push(newItemElements);\n        }\n\n        // add sequence delimitation size\n        if (undefinedLength) {\n          size += getDataElementPrefixByteSize('NONE', isImplicit);\n        }\n\n        // update sequence element\n        element.value = newItems;\n        element.vl = size;\n        if (undefinedLength) {\n          element.undefinedLength = undefinedLength;\n        }\n      }\n    } else {\n      // pad if necessary\n      if (isVrToPad(element.vr)) {\n        const padStr = getVrPad(element.vr);\n        // encode string\n        // TODO: not sure for UN...\n        if (isStringVr(element.vr)) {\n          let pad;\n          if (isCharSetStringVR(element.vr)) {\n            value = this.#encodeSpecialString(value.join('\\\\'));\n            pad = this.#encodeSpecialString(padStr);\n          } else {\n            value = this.#encodeString(value.join('\\\\'));\n            pad = this.#encodeString(padStr);\n          }\n          if (!isEven(value.length)) {\n            value = uint8ArrayPush(value, pad);\n          }\n        } else if (element.vr === 'OB') {\n          value = padOBValue(value);\n        }\n      }\n\n      // calculate byte size\n      size = 0;\n      if (element.vr === 'AT') {\n        size = 4 * value.length;\n      } else if (element.vr === 'xs') {\n        size = value.length * Uint16Array.BYTES_PER_ELEMENT;\n      } else if (isTypedArrayVr(element.vr) || element.vr === 'ox') {\n        if (isPixelDataTag(element.tag) &&\n          Array.isArray(value)) {\n          size = 0;\n          for (let b = 0; b < value.length; ++b) {\n            size += value[b].length;\n          }\n        } else {\n          size = value.length;\n        }\n\n        // convert size to bytes\n        const vrType = vrTypes[element.vr];\n        if (isPixelDataTag(element.tag) || element.vr === 'ox') {\n          if (element.undefinedLength) {\n            const itemPrefixSize =\n              getDataElementPrefixByteSize('NONE', isImplicit);\n            // offset table\n            size += itemPrefixSize;\n            // pixel items\n            size += itemPrefixSize * value.length;\n            // add sequence delimitation size\n            size += itemPrefixSize;\n          } else {\n            // use bitsAllocated for pixel data\n            // no need to multiply for 8 bits\n            if (typeof bitsAllocated !== 'undefined') {\n              if (bitsAllocated === 1) {\n                // binary data\n                size /= 8;\n              } else if (bitsAllocated === 16) {\n                size *= Uint16Array.BYTES_PER_ELEMENT;\n              }\n            }\n          }\n        } else if (typeof vrType !== 'undefined') {\n          const bpe = getBpeForVrType(vrType);\n          if (typeof bpe !== 'undefined') {\n            size *= bpe;\n          } else {\n            throw new Error('Unknown bytes per element for VR type: ' + vrType);\n          }\n        } else {\n          throw new Error('Unsupported element: ' + element.vr);\n        }\n      } else {\n        size = value.length;\n      }\n\n      element.value = value;\n      element.vl = size;\n    }\n\n    // return the size of that data\n    return size;\n  }\n\n} // class DicomWriter\n\n/**\n * Fix for broken DICOM elements: replace \"UN\" with correct VR if the\n * element exists in dictionary.\n *\n * @param {DataElement} element The DICOM element.\n * @param {boolean} [isLittleEndian] Flag to tell if the data is little\n *   or big endian (default: true).\n */\nfunction checkAndFixUnknownVR(element, isLittleEndian) {\n  if (element.vr === 'UN') {\n    const dictVr = element.tag.getVrFromDictionary();\n    if (typeof dictVr !== 'undefined' && element.vr !== dictVr) {\n      element.vr = dictVr;\n      // cast typed array value from Uint8 to vr type\n      const vrType = vrTypes[element.vr];\n      if (typeof vrType !== 'undefined' &&\n        vrType !== 'Uint8' &&\n        vrType !== 'string') {\n        const data = getUint8ToVrValue(\n          element.value, element.vr, isLittleEndian);\n        if (typeof data !== 'undefined') {\n          element.value = data;\n        }\n      }\n      logger.info('Element ' + element.tag.getGroup() +\n        ' ' + element.tag.getElement() +\n        ' VR changed from UN to ' + element.vr);\n    }\n  }\n}\n\n/**\n * Get the casted typed array value from Uint8 to vr type.\n *\n * @param {object} value The value to cast.\n * @param {string} vr The DICOM element VR.\n * @param {boolean} [isLittleEndian] Flag to tell if the data is little\n *   or big endian (default: true).\n * @returns {object} The element value casted to the vr type.\n */\nfunction getUint8ToVrValue(value, vr, isLittleEndian) {\n  let data;\n  if (typeof value.buffer === 'undefined') {\n    return data;\n  }\n  const reader = new DataReader(value.buffer, isLittleEndian);\n  const offset = value.byteOffset;\n  const vl = value.length; // size before cast\n  const vrType = vrTypes[vr];\n  if (vrType === 'Uint16') {\n    data = reader.readUint16Array(offset, vl);\n  } else if (vrType === 'Uint32') {\n    data = reader.readUint32Array(offset, vl);\n  } else if (vrType === 'Uint64') {\n    data = reader.readUint64Array(offset, vl);\n  } else if (vrType === 'Int16') {\n    data = Array.from(reader.readInt16Array(offset, vl));\n  } else if (vrType === 'Int32') {\n    data = Array.from(reader.readInt32Array(offset, vl));\n  } else if (vrType === 'Int64') {\n    data = reader.readInt64Array(offset, vl);\n  } else if (vrType === 'Float32') {\n    data = Array.from(reader.readFloat32Array(offset, vl));\n  } else if (vrType === 'Float64') {\n    data = Array.from(reader.readFloat64Array(offset, vl));\n  }\n  return data;\n}\n\n/**\n * Get a DICOM element from its tag name (value set separatly).\n *\n * @param {string} tagName The string tag name.\n * @returns {DataElement} The DICOM element.\n */\nfunction getDataElement(tagName) {\n  const tag = getTagFromDictionary(tagName);\n  const element = new DataElement(tag.getVrFromDictionary());\n  element.tag = tag;\n  return element;\n}\n\n/**\n * Get the number of bytes per element for a given VR type.\n *\n * @param {string} vrType The VR type as defined in the dictionary.\n * @returns {number} The bytes per element.\n */\nfunction getBpeForVrType(vrType) {\n  let bpe;\n  if (vrType === 'Uint8') {\n    bpe = Uint8Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Uint16') {\n    bpe = Uint16Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Int16') {\n    bpe = Int16Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Uint32') {\n    bpe = Uint32Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Int32') {\n    bpe = Int32Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Float32') {\n    bpe = Float32Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Float64') {\n    bpe = Float64Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Uint64') {\n    bpe = BigUint64Array.BYTES_PER_ELEMENT;\n  } else if (vrType === 'Int64') {\n    bpe = BigInt64Array.BYTES_PER_ELEMENT;\n  }\n  return bpe;\n}\n\n/**\n * Get the DICOM elements from a 'simple' DICOM tags object.\n * The input object is a simplified version of the oficial DICOM json with\n * tag names instead of keys and direct values (no value property) for\n * simple tags. See synthetic test data (in tests/dicom) for examples.\n *\n * @param {Object<string, any>} simpleTags The 'simple' DICOM\n *   tags object.\n * @returns {Object<string, DataElement>} The DICOM elements.\n */\nexport function getElementsFromJSONTags(simpleTags) {\n  const keys = Object.keys(simpleTags);\n  const dataElements = {};\n  for (let k = 0, len = keys.length; k < len; ++k) {\n    // get the DICOM element definition from its name\n    const tag = getTagFromDictionary(keys[k]);\n    if (typeof tag === 'undefined') {\n      continue;\n    }\n    const vr = tag.getVrFromDictionary();\n    // tag value\n    let value;\n    let undefinedLength = false;\n    const simpleTag = simpleTags[keys[k]];\n    if (vr === 'SQ') {\n      const items = [];\n      if (typeof simpleTag.undefinedLength !== 'undefined') {\n        undefinedLength = simpleTag.undefinedLength;\n      }\n      if (typeof simpleTag.value !== 'undefined' &&\n        simpleTag.value !== null) {\n        for (let i = 0; i < simpleTag.value.length; ++i) {\n          items.push(getElementsFromJSONTags(simpleTag.value[i]));\n        }\n      } else {\n        logger.trace('Undefined or null simpleTag SQ value.');\n      }\n      value = items;\n    } else {\n      if (Array.isArray(simpleTag)) {\n        value = simpleTag;\n      } else {\n        value = [simpleTag];\n      }\n    }\n    // create element\n    const dataElement = new DataElement(vr);\n    dataElement.tag = tag;\n    dataElement.value = value;\n    if (undefinedLength) {\n      dataElement.undefinedLength = undefinedLength;\n    }\n    // store\n    dataElements[tag.getKey()] = dataElement;\n  }\n  // return\n  // @ts-expect-error\n  return dataElements;\n}\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from './dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * DICOM code tag keys.\n */\nconst TagKeys = {\n  CodeValue: '00080100',\n  CodingSchemeDesignator: '00080102',\n  CodeMeaning: '00080104',\n  LongCodeValue: '00080119',\n  URNCodeValue: '00080120'\n};\n\n/**\n * DICOM code: item of a basic code sequence.\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_8.8.html}.\n */\nexport class DicomCode {\n  /**\n   * Code meaning.\n   *\n   * @type {string}\n   */\n  meaning;\n  /**\n   * Code value.\n   *\n   * @type {string|undefined}\n   */\n  value;\n  /**\n   * Long code value.\n   *\n   * @type {string|undefined}\n   */\n  longValue;\n  /**\n   * URN code value.\n   *\n   * @type {string|undefined}\n   */\n  urnValue;\n  /**\n   * Coding scheme designator.\n   *\n   * @type {string|undefined}\n   */\n  schemeDesignator;\n\n  /**\n   * @param {string} meaning The code meaning.\n   */\n  constructor(meaning) {\n    this.meaning = meaning;\n  }\n\n  /**\n   * Get a string representation of this object.\n   *\n   * @returns {string} The code as string.\n   */\n  toString() {\n    return '(' + this.value + ', ' +\n      this.schemeDesignator + ', \\'' +\n      this.meaning + '\\')';\n  }\n}\n\n/**\n * Check if two code objects are equal.\n *\n * @param {DicomCode} code1 The first code.\n * @param {DicomCode} code2 The second code.\n * @returns {boolean} True if both codes are equal.\n */\nexport function isEqualCode(code1, code2) {\n  return Object.keys(code1).length === Object.keys(code2).length &&\n  Object.keys(code1).every(key =>\n    Object.prototype.hasOwnProperty.call(code2, key) &&\n    code1[key] === code2[key]\n  );\n}\n\n/**\n * Get a code object from a dicom element.\n *\n * @param {Object<string, DataElement>} dataElements The dicom element.\n * @returns {DicomCode} A code object.\n */\nexport function getCode(dataElements) {\n  // meaning -> CodeMeaning (type1)\n  const code = new DicomCode(dataElements[TagKeys.CodeMeaning].value[0]);\n  // value -> CodeValue (type1C)\n  // longValue -> LongCodeValue (type1C)\n  // urnValue -> URNCodeValue (type1C)\n  if (typeof dataElements[TagKeys.CodeValue] !== 'undefined') {\n    code.value = dataElements[TagKeys.CodeValue].value[0];\n  } else if (typeof dataElements[TagKeys.LongCodeValue] !== 'undefined') {\n    code.longValue = dataElements[TagKeys.LongCodeValue].value[0];\n  } else if (typeof dataElements[TagKeys.URNCodeValue] !== 'undefined') {\n    code.urnValue = dataElements[TagKeys.URNCodeValue].value[0];\n  } else {\n    throw new Error(\n      'Invalid code with no value, no long value and no urn value.');\n  }\n  // schemeDesignator -> CodingSchemeDesignator (type1C)\n  if (typeof code.value !== 'undefined' ||\n    typeof code.longValue !== 'undefined') {\n    if (typeof dataElements[TagKeys.CodingSchemeDesignator] !== 'undefined') {\n      code.schemeDesignator =\n        dataElements[TagKeys.CodingSchemeDesignator].value[0];\n    } else {\n      throw new Error(\n        'No coding sheme designator when code value or long value is present');\n    }\n  }\n  return code;\n}\n\n/**\n * Get a simple dicom element item from a code object.\n *\n * @param {DicomCode} code The code object.\n * @returns {Object<string, any>} The item as a list of (key, value) pairs.\n */\nexport function getDicomCodeItem(code) {\n  // dicom item (tags are in group/element order)\n  const item = {};\n  // value\n  if (typeof code.value !== 'undefined') {\n    item.CodeValue = code.value;\n  } else if (typeof code.longValue !== 'undefined') {\n    item.LongCodeValue = code.longValue;\n  } else if (typeof code.urnValue !== 'undefined') {\n    item.URNCodeValue = code.urnValue;\n  }\n  // CodingSchemeDesignator\n  if (typeof code.schemeDesignator !== 'undefined') {\n    item.CodingSchemeDesignator = code.schemeDesignator;\n  }\n  // CodeMeaning\n  item.CodeMeaning = code.meaning;\n  // return\n  return item;\n}\n\n/**\n * DICOM codes.\n * List: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part16/chapter_d.html}.\n */\nconst DcmCodes = {\n  111030: 'Image Region',\n  112039: 'Tracking Identifier',\n  112040: 'Tracking Unique Identifier',\n  113048: 'Pixel by pixel Maximum',\n  113049: 'Pixel by pixel mean',\n  113051: 'Pixel by pixel Minimum',\n  113061: 'Standard Deviation',\n  113076: 'Segmentation',\n  121055: 'Path',\n  121207: 'Height',\n  121322: 'Source image for image processing operation',\n  121324: 'Source Image',\n  122438: 'Reference Points',\n  125007: 'Measurement Group',\n  125309: 'Short label',\n  128773: 'Reference Geometry'\n};\n\n/**\n * SNOMED-CT codes.\n * List: {@link https://browser.ihtsdotools.org}.\n */\nconst SctCodes = {\n  1483009: 'Angle',\n  42798000: 'Area',\n  103355008: 'Width',\n  103339001: 'Long axis',\n  103340004: 'Short axis',\n  131190003: 'Radius',\n  261665006: 'Unknown',\n  410668003: 'Length',\n  718499004: 'Color'\n};\n\n/**\n * UCUM codes.\n * Definition: {@link https://unitsofmeasure.org/ucum}.\n * List: {@link https://ucum.nlm.nih.gov/ucum-lhc/demo.html}.\n */\nconst UcumCodes = {\n  1: 'No units',\n  mm: 'Millimeter',\n  deg: 'Degree - plane angle',\n  cm2: 'Square centimeter',\n  'cm2/ml': 'Square centimeter per milliliter',\n  '/cm': 'Per centimeter',\n  'g/ml': 'Gram per milliliter',\n  'g/ml{SUVbw}': 'Standardized Uptake Value body weight',\n  'mg/ml': 'Milligram per milliliter',\n  'umol/ml': 'Micromole per milliliter',\n  'Bq/ml': 'Becquerels per milliliter',\n  'mg/min/ml': 'Milligrams per minute per milliliter',\n  'umol/min/ml': 'Micromole per minute per milliliter',\n  'ml/min/g': 'Milliliter per minute per gram',\n  'ml/g': 'Milliliter per gram',\n  'ml/min/ml': 'Milliliter per minute per milliliter',\n  'ml/ml': 'Milliliter per milliliter',\n  '%': 'Percentage',\n  '[hnsf\\'U]': 'Hounsfield unit',\n  '10*23/ml': 'Electron density',\n  '{counts}': 'Counts',\n  '{counts}/s': 'Counts per second',\n  '{propcounts}': 'Proportional to counts',\n  '{propcounts}/s': 'Proportional to counts per second',\n};\n\n/**\n * Get a DICOM code from a value (~id).\n *\n * @param {string} value The code value.\n * @param {string} scheme The scheme designator.\n * @returns {DicomCode|undefined} The DICOM code.\n */\nfunction getDicomCode(value, scheme) {\n  let meaning;\n  if (scheme === 'DCM') {\n    meaning = DcmCodes[value];\n  } else if (scheme === 'SCT') {\n    meaning = SctCodes[value];\n  } else if (scheme === 'UCUM') {\n    meaning = UcumCodes[value];\n  }\n  let code;\n  if (typeof meaning !== 'undefined') {\n    code = new DicomCode(meaning);\n    code.schemeDesignator = scheme;\n    code.value = value;\n  }\n  return code;\n}\n\n/**\n * Get a measurement group DICOM code.\n *\n * @returns {DicomCode} The code.\n */\nexport function getMeasurementGroupCode() {\n  return getDicomCode('125007', 'DCM');\n}\n\n/**\n * Get an image region DICOM code.\n *\n * @returns {DicomCode} The code.\n */\nexport function getImageRegionCode() {\n  return getDicomCode('111030', 'DCM');\n}\n\n/**\n * Get a reference geometry DICOM code.\n *\n * @returns {DicomCode} The code.\n */\nexport function getReferenceGeometryCode() {\n  return getDicomCode('128773', 'DCM');\n}\n\n/**\n * Get a path DICOM code.\n *\n * @returns {DicomCode} The code.\n */\nexport function getPathCode() {\n  return getDicomCode('121055', 'DCM');\n}\n\n/**\n * Get a source image DICOM code.\n *\n * @returns {DicomCode} The code.\n */\nexport function getSourceImageCode() {\n  return getDicomCode('121324', 'DCM');\n}\n\n/**\n * Get a tracking identifier DICOM code.\n *\n * @returns {DicomCode} The code.\n */\nexport function getTrackingIdentifierCode() {\n  return getDicomCode('112039', 'DCM');\n}\n\n/**\n * Get a segmentation DICOM code.\n *\n * @returns {DicomCode} The code.\n */\nexport function getSegmentationCode() {\n  return getDicomCode('113076', 'DCM');\n}\n\n/**\n * Get a source image for processing DICOM code.\n *\n * @returns {DicomCode} The code.\n */\nexport function getSourceImageForProcessingCode() {\n  return getDicomCode('121322', 'DCM');\n}\n\n/**\n * Get a short label DICOM code.\n *\n * @returns {DicomCode} The code.\n */\nexport function getShortLabelCode() {\n  return getDicomCode('125309', 'DCM');\n}\n\n/**\n * Get a reference points DICOM code.\n *\n * @returns {DicomCode} The code.\n */\nexport function getReferencePointsCode() {\n  return getDicomCode('122438', 'DCM');\n}\n\n/**\n * Get a colour DICOM code.\n *\n * @returns {DicomCode} The code.\n */\nexport function getColourCode() {\n  return getDicomCode('718499004', 'SCT');\n}\n\n/**\n * Quantification name to dictionary item.\n */\nconst QuantificationName2DictItem = {\n  angle: {key: '1483009', scheme: 'SCT'},\n  length: {key: '410668003', scheme: 'SCT'},\n  surface: {key: '42798000', scheme: 'SCT'},\n  height: {key: '121207', scheme: 'DCM'},\n  width: {key: '103355008', scheme: 'SCT'},\n  radius: {key: '131190003', scheme: 'SCT'},\n  a: {key: '103339001', scheme: 'SCT'},\n  b: {key: '103340004', scheme: 'SCT'},\n  min: {key: '113051', scheme: 'DCM'},\n  max: {key: '113048', scheme: 'DCM'},\n  mean: {key: '113049', scheme: 'DCM'},\n  stddev: {key: '113061', scheme: 'DCM'},\n  // median\n  // 25th percentile\n  // 75th percentile\n};\n\n/**\n * Get a concept name DICOM code.\n *\n * @param {string} name The measurment name as defined\n *   in a quantification object.\n * @returns {DicomCode|undefined} The code.\n */\nexport function getConceptNameCode(name) {\n  const item = QuantificationName2DictItem[name];\n  let code;\n  if (typeof item !== 'undefined') {\n    code = getDicomCode(item.key, item.scheme);\n  }\n  return code;\n}\n\n/**\n * Get the DICOM code for a quantification name.\n *\n * @param {DicomCode} code The Dicom code.\n * @returns {string|undefined} The quantification name.\n */\nexport function getQuantificationName(code) {\n  let name;\n  for (const propKey in QuantificationName2DictItem) {\n    const item = QuantificationName2DictItem[propKey];\n    if (item.scheme === code.schemeDesignator &&\n      item.key === code.value) {\n      name = propKey;\n      break;\n    }\n  }\n  return name;\n}\n\n/**\n * Quantification unit to UCUM key. Associated tags:\n * - Rescale type {@link https://dicom.innolitics.com/ciods/computed-radiography-image/modality-lut/00281054},\n * - Units {@link https://dicom.innolitics.com/ciods/positron-emission-tomography-image/pet-series/00541001}.\n * - SUV {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part16/sect_CID_85.html}.\n */\nconst QuantificationUnit2UcumKey = {\n  'unit.mm': 'mm',\n  'unit.cm2': 'cm2',\n  'unit.degree': 'deg',\n  // OD optical density\n  HU: '[hnsf\\'U]',\n  // US: '1', // duplicates 'NONE'\n  MGML: 'mg/ml',\n  // Z_EFF Effective Atomic Number (i.e., Effective-Z)\n  ED: '10*23/ml',\n  // EDW Electron density normalized\n  // HU_MOD Modified Hounsfield Unit\n  PCT: '%',\n  CNTS: '{counts}',\n  NONE: '1',\n  CM2: 'cm2',\n  CM2ML: 'cm2/ml',\n  PCNT: '%',\n  CPS: '{counts}/s',\n  BQML: 'Bq/ml',\n  MGMINML: 'mg/min/ml',\n  UMOLMINML: 'umol/min/ml',\n  MLMING: 'ml/min/g',\n  MLG: 'ml/g',\n  '1CM': '/cm',\n  UMOLML: 'umol/ml',\n  PROPCNTS: '{propcounts}',\n  PROPCPS: '{propcounts}/s',\n  MLMINML: 'ml/min/ml',\n  MLML: 'ml/ml',\n  GML: 'g/ml',\n  //STDDEV\n  SUV: 'g/ml{SUVbw}',\n};\n\n/**\n * Get a measurement units DICOM code.\n *\n * @param {string} name The unit name as defined in a quantification object.\n * @returns {DicomCode|undefined} The code.\n */\nexport function getMeasurementUnitsCode(name) {\n  const key = QuantificationUnit2UcumKey[name];\n  let code;\n  if (typeof key !== 'undefined') {\n    code = getDicomCode(key, 'UCUM');\n  } else if (typeof key === 'undefined') {\n    // no unit\n    code = getDicomCode('1', 'UCUM');\n  }\n  return code;\n}\n\n/**\n * Get a quantification unit name.\n *\n * @param {DicomCode} code The code to get the unit from.\n * @returns {string} The quantification unit.\n */\nexport function getQuantificationUnit(code) {\n  let unit;\n  for (const propKey in QuantificationUnit2UcumKey) {\n    const ucumKey = QuantificationUnit2UcumKey[propKey];\n    if (code.schemeDesignator === 'UCUM' &&\n      ucumKey === code.value) {\n      unit = propKey;\n      break;\n    }\n  }\n  return unit;\n}\n","import {\n  isEqualRgb,\n  cielabToSrgb,\n  uintLabToLab,\n  labToUintLab,\n  srgbToCielab\n} from '../utils/colour';\nimport {\n  getCode,\n  getDicomCodeItem\n} from './dicomCode';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {RGB} from '../utils/colour';\nimport {DataElement} from './dataElement';\nimport {DicomCode} from './dicomCode';\n/* eslint-enable no-unused-vars */\n\n/**\n * Related DICOM tag keys.\n */\nconst TagKeys = {\n  SegmentNumber: '00620004',\n  SegmentLabel: '00620005',\n  SegmentAlgorithmType: '00620008',\n  SegmentAlgorithmName: '00620009',\n  RecommendedDisplayGrayscaleValue: '0062000C',\n  RecommendedDisplayCIELabValue: '0062000D',\n  SegmentedPropertyCategoryCodeSequence: '00620003',\n  SegmentedPropertyTypeCodeSequence: '0062000F',\n  TrackingID: '00620020',\n  TrackingUID: '00620021'\n};\n\n/**\n * Get a default RGB colour for a segment.\n *\n * @param {number} segmentNumber The segment number.\n * @returns {RGB} A colour.\n */\nfunction getDefaultColour(segmentNumber) {\n  // ITK snap colours\n  const colours = [\n    new RGB(0, 0, 0),\n    new RGB(255, 0, 0),\n    new RGB(0, 255, 0),\n    new RGB(0, 0, 255),\n    new RGB(255, 255, 0),\n    new RGB(0, 255, 255),\n    new RGB(255, 0, 255),\n    new RGB(255, 239, 213),\n    new RGB(0, 0, 205),\n    new RGB(205, 133, 63),\n    new RGB(210, 180, 140),\n    new RGB(102, 205, 170),\n    new RGB(0, 0, 128),\n    new RGB(0, 139, 139),\n    new RGB(46, 139, 87),\n    new RGB(255, 228, 225)\n  ];\n  let colour;\n  if (segmentNumber < colours.length) {\n    colour = colours[segmentNumber];\n  } else {\n    colour = new RGB(\n      Math.random() * 255,\n      Math.random() * 255,\n      Math.random() * 255\n    );\n  }\n  return colour;\n};\n\n/**\n * DICOM (mask) segment: item of a SegmentSequence (0062,0002).\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.8.20.4.html}.\n */\nexport class MaskSegment {\n  /**\n   * Segment number (0062,0004).\n   *\n   * @type {number}\n   */\n  number;\n  /**\n   * Segment label (0062,0005).\n   *\n   * @type {string}\n   */\n  label;\n  /**\n   * Segment algorithm type (0062,0008).\n   *\n   * @type {string}\n   */\n  algorithmType;\n  /**\n   * Segment algorithm name (0062,0009).\n   *\n   * @type {string|undefined}\n   */\n  algorithmName;\n  /**\n   * Segment display value as simple value.\n   *\n   * @type {number|undefined}\n   */\n  displayValue;\n  /**\n   * Segment display value as RGB colour ({r,g,b}).\n   *\n   * @type {RGB|undefined}\n   */\n  displayRGBValue;\n  /**\n   * Segment property code: specific property\n   * the segment represents (0062,000F).\n   *\n   * @type {DicomCode|undefined}\n   */\n  propertyTypeCode;\n  /**\n   * Segment property category code: general category\n   * of the property the segment represents (0062,0003).\n   *\n   * @type {DicomCode|undefined}\n   */\n  propertyCategoryCode;\n  /**\n   * Segment tracking UID (0062,0021).\n   *\n   * @type {string|undefined}\n   */\n  trackingUid;\n  /**\n   * Segment tracking id: text label for the UID (0062,0020).\n   *\n   * @type {string|undefined}\n   */\n  trackingId;\n\n  /**\n   * @param {number} number The segment number.\n   * @param {string} label The segment label.\n   * @param {string} algorithmType The segment number.\n   */\n  constructor(number, label, algorithmType) {\n    this.number = number;\n    this.label = label;\n    this.algorithmType = algorithmType;\n  }\n}\n\n/**\n * Get a segment object from a dicom element.\n *\n * @param {Object<string, DataElement>} dataElements The dicom element.\n * @returns {MaskSegment} A segment object.\n */\nexport function getSegment(dataElements) {\n  // number -> SegmentNumber (type1)\n  // label -> SegmentLabel (type1)\n  // algorithmType -> SegmentAlgorithmType (type1)\n  const segment = new MaskSegment(\n    dataElements[TagKeys.SegmentNumber].value[0],\n    dataElements[TagKeys.SegmentLabel]\n      ? dataElements[TagKeys.SegmentLabel].value[0] : 'n/a',\n    dataElements[TagKeys.SegmentAlgorithmType].value[0]\n  );\n  // algorithmName -> SegmentAlgorithmName (type1C)\n  if (typeof dataElements[TagKeys.SegmentAlgorithmName] !== 'undefined') {\n    segment.algorithmName = dataElements[TagKeys.SegmentAlgorithmName].value[0];\n  }\n  // // required if type is not MANUAL\n  // if (segment.algorithmType !== 'MANUAL' &&\n  //   (typeof segment.algorithmName === 'undefined' ||\n  //   segment.algorithmName.length === 0)) {\n  //   throw new Error('Empty algorithm name for non MANUAL algorithm type.');\n  // }\n  // displayValue ->\n  // - RecommendedDisplayGrayscaleValue\n  // - RecommendedDisplayCIELabValue converted to RGB\n  if (typeof dataElements[TagKeys.RecommendedDisplayGrayscaleValue] !==\n    'undefined') {\n    segment.displayValue =\n      dataElements[TagKeys.RecommendedDisplayGrayscaleValue].value[0];\n  } else if (typeof dataElements[TagKeys.RecommendedDisplayCIELabValue] !==\n    'undefined') {\n    const cielabElement =\n      dataElements[TagKeys.RecommendedDisplayCIELabValue].value;\n    const rgb = cielabToSrgb(uintLabToLab({\n      l: cielabElement[0],\n      a: cielabElement[1],\n      b: cielabElement[2]\n    }));\n    segment.displayRGBValue = rgb;\n  } else {\n    logger.warn('No recommended colour for segment, using default');\n    segment.displayRGBValue = getDefaultColour(segment.number);\n  }\n  // Segmented Property Category Code Sequence (type1, only one)\n  if (typeof dataElements[TagKeys.SegmentedPropertyCategoryCodeSequence] !==\n    'undefined') {\n    segment.propertyCategoryCode =\n      getCode(\n        dataElements[TagKeys.SegmentedPropertyCategoryCodeSequence].value[0]\n      );\n  } else {\n    throw new Error('Missing Segmented Property Category Code Sequence.');\n  }\n  // Segmented Property Type Code Sequence (type1)\n  if (typeof dataElements[TagKeys.SegmentedPropertyTypeCodeSequence] !==\n    'undefined') {\n    segment.propertyTypeCode =\n      getCode(dataElements[TagKeys.SegmentedPropertyTypeCodeSequence].value[0]);\n  } else {\n    throw new Error('Missing Segmented Property Type Code Sequence.');\n  }\n  // tracking Id and UID (type1C)\n  if (typeof dataElements[TagKeys.TrackingID] !== 'undefined') {\n    segment.trackingId = dataElements[TagKeys.TrackingID].value[0];\n    segment.trackingUid = dataElements[TagKeys.TrackingUID].value[0];\n  }\n\n  return segment;\n}\n\n/**\n * Check if two segment objects are equal.\n *\n * @param {MaskSegment} seg1 The first segment.\n * @param {MaskSegment} seg2 The second segment.\n * @returns {boolean} True if both segment are equal.\n */\nexport function isEqualSegment(seg1, seg2) {\n  // basics\n  if (typeof seg1 === 'undefined' ||\n    typeof seg2 === 'undefined' ||\n    seg1 === null ||\n    seg2 === null) {\n    return false;\n  }\n  let isEqual = seg1.number === seg2.number &&\n    seg1.label === seg2.label &&\n    seg1.algorithmType === seg2.algorithmType;\n  // display value\n  if (typeof seg1.displayRGBValue !== 'undefined' &&\n    typeof seg2.displayRGBValue !== 'undefined') {\n    isEqual = isEqual &&\n      isEqualRgb(seg1.displayRGBValue, seg2.displayRGBValue);\n  } else if (typeof seg1.displayValue !== 'undefined' &&\n    typeof seg2.displayValue !== 'undefined') {\n    isEqual = isEqual &&\n      seg1.displayValue === seg2.displayValue;\n  } else {\n    isEqual = false;\n  }\n  // algorithmName\n  if (typeof seg1.algorithmName !== 'undefined') {\n    if (typeof seg2.algorithmName === 'undefined') {\n      isEqual = false;\n    } else {\n      isEqual = isEqual &&\n        seg1.algorithmName === seg2.algorithmName;\n    }\n  }\n\n  return isEqual;\n}\n\n/**\n * Check if two segment objects are similar: either the\n * number or the displayValue are equal.\n *\n * @param {MaskSegment} seg1 The first segment.\n * @param {MaskSegment} seg2 The second segment.\n * @returns {boolean} True if both segment are similar.\n */\nexport function isSimilarSegment(seg1, seg2) {\n  // basics\n  if (typeof seg1 === 'undefined' ||\n    typeof seg2 === 'undefined' ||\n    seg1 === null ||\n    seg2 === null) {\n    return false;\n  }\n  let isSimilar = seg1.number === seg2.number;\n  // display value\n  if (typeof seg1.displayRGBValue !== 'undefined' &&\n    typeof seg2.displayRGBValue !== 'undefined') {\n    isSimilar = isSimilar ||\n      isEqualRgb(seg1.displayRGBValue, seg2.displayRGBValue);\n  } else if (typeof seg1.displayValue !== 'undefined' &&\n    typeof seg2.displayValue !== 'undefined') {\n    isSimilar = isSimilar ||\n      seg1.displayValue === seg2.displayValue;\n  } else {\n    isSimilar = false;\n  }\n\n  return isSimilar;\n}\n\n/**\n * Get a dicom simple tag from a segment object.\n *\n * @param {MaskSegment} segment The segment object.\n * @returns {Object<string, any>} The item as a list of (key, value) pairs.\n */\nexport function getDicomSegmentItem(segment) {\n  let algoType = segment.algorithmType;\n  if (algoType === undefined) {\n    algoType = 'MANUAL';\n  }\n  // dicom item (tags are in group/element order)\n  const segmentItem = {\n    SegmentNumber: segment.number,\n    SegmentLabel: segment.label,\n    SegmentAlgorithmType: algoType\n  };\n  // SegmentAlgorithmName\n  if (algoType !== 'MANUAL' && segment.algorithmName !== undefined) {\n    segmentItem.SegmentAlgorithmName = segment.algorithmName;\n  }\n  // RecommendedDisplay value\n  if (segment.displayRGBValue) {\n    const cieLab = labToUintLab(srgbToCielab(segment.displayRGBValue));\n    segmentItem.RecommendedDisplayCIELabValue = [\n      Math.round(cieLab.l),\n      Math.round(cieLab.a),\n      Math.round(cieLab.b)\n    ];\n  } else {\n    segmentItem.RecommendedDisplayGrayscaleValue = segment.displayValue;\n  }\n  // SegmentedPropertyCategoryCodeSequence\n  if (segment.propertyCategoryCode) {\n    segmentItem.SegmentedPropertyCategoryCodeSequence = {\n      value: [getDicomCodeItem(segment.propertyCategoryCode)]\n    };\n  }\n  // SegmentedPropertyTypeCodeSequence\n  if (segment.propertyTypeCode) {\n    segmentItem.SegmentedPropertyTypeCodeSequence = {\n      value: [getDicomCodeItem(segment.propertyTypeCode)]\n    };\n  }\n  // tracking\n  if (segment.trackingId) {\n    segmentItem.TrackingID = segment.trackingId;\n    segmentItem.TrackingUID = segment.trackingUid;\n  }\n  // return\n  return segmentItem;\n}\n","import {getSpacingFromMeasure} from './dicomImage';\nimport {logger} from '../utils/logger';\nimport {arrayEquals} from '../utils/array';\nimport {\n  getDicomCodeItem,\n  getSegmentationCode,\n  getSourceImageForProcessingCode\n} from './dicomCode';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from './dataElement';\nimport {Spacing} from '../image/spacing';\n/* eslint-enable no-unused-vars */\n\n/**\n * Related DICOM tag keys.\n */\nconst TagKeys = {\n  DerivationImageSequence: '00089124',\n  SourceImageSequence: '00082112',\n  ReferencedSOPClassUID: '00081150',\n  ReferencedSOPInstanceUID: '00081155',\n  FrameContentSequence: '00209111',\n  DimensionIndexValue: '00209157',\n  SegmentIdentificationSequence: '0062000A',\n  ReferencedSegmentNumber: '0062000B',\n  PlanePositionSequence: '00209113',\n  ImagePosition: '00200032',\n  PlaneOrientationSequence: '00209116',\n  ImageOrientation: '00200037',\n  PixelMeasuresSequence: '00289110'\n};\n\n/**\n * Check the dimension organization from a dicom element.\n *\n * @param {Object<string, DataElement>} dataElements The root dicom element.\n * @returns {object} The dimension organizations and indices.\n */\nexport function getDimensionOrganization(dataElements) {\n  // Dimension Organization Sequence (required)\n  const orgSq = dataElements['00209221'];\n  if (typeof orgSq === 'undefined' || orgSq.value.length !== 1) {\n    throw new Error('Unsupported dimension organization sequence length');\n  }\n  // Dimension Organization UID\n  const orgUID = orgSq.value[0]['00209164'].value[0];\n\n  // Dimension Index Sequence (conditionally required)\n  const indices = [];\n  const indexSqElem = dataElements['00209222'];\n  if (typeof indexSqElem !== 'undefined') {\n    const indexSq = indexSqElem.value;\n    // expecting 2D index\n    if (indexSq.length !== 2) {\n      throw new Error('Unsupported dimension index sequence length');\n    }\n    let indexPointer;\n    for (let i = 0; i < indexSq.length; ++i) {\n      // Dimension Organization UID (required)\n      const indexOrg = indexSq[i]['00209164'].value[0];\n      if (indexOrg !== orgUID) {\n        throw new Error(\n          'Dimension Index Sequence contains a unknown Dimension Organization');\n      }\n      // Dimension Index Pointer (required)\n      indexPointer = indexSq[i]['00209165'].value[0];\n\n      const index = {\n        DimensionOrganizationUID: indexOrg,\n        DimensionIndexPointer: indexPointer\n      };\n      // Dimension Description Label (optional)\n      if (typeof indexSq[i]['00209421'] !== 'undefined') {\n        index.DimensionDescriptionLabel = indexSq[i]['00209421'].value[0];\n      }\n      // store\n      indices.push(index);\n    }\n    // expecting Image Position at last position\n    if (indexPointer !== '(0020,0032)') {\n      throw new Error('Unsupported non image position as last index');\n    }\n  }\n\n  return {\n    organizations: {\n      value: [\n        {\n          DimensionOrganizationUID: orgUID\n        }\n      ]\n    },\n    indices: {\n      value: indices\n    }\n  };\n}\n\n/**\n * DICOM segment frame info: item of a\n *  PerframeFunctionalGroupsSequence (5200,9230).\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.7.6.16.html}.\n */\nexport class DicomSegmentFrameInfo {\n  /**\n   * The dimension index.\n   *\n   * @type {number[]}\n   */\n  dimIndex;\n  /**\n   * The frame image position patient.\n   *\n   * @type {number[]}\n   */\n  imagePosPat;\n  /**\n   * List of derivation images.\n   *\n   * @type {Array}\n   */\n  derivationImages;\n  /**\n   * The reference segment number.\n   *\n   * @type {number}\n   */\n  refSegmentNumber;\n\n  /**\n   * The frame image orientation.\n   *\n   * @type {number[]|undefined}\n   */\n  imageOrientationPatient;\n  /**\n   * The frame spacing.\n   *\n   * @type {Spacing|undefined}\n   */\n  spacing;\n\n  /**\n   * @param {number[]} dimIndex The dimension index.\n   * @param {number[]} imagePosPat The frame image position patient.\n   * @param {Array} derivationImages List of derivation images.\n   * @param {number} refSegmentNumber The reference segment number.\n   */\n  constructor(dimIndex, imagePosPat, derivationImages, refSegmentNumber) {\n    this.dimIndex = dimIndex;\n    this.imagePosPat = imagePosPat;\n    this.derivationImages = derivationImages;\n    this.refSegmentNumber = refSegmentNumber;\n  }\n}\n\n/**\n * Get a frame information object from a dicom element.\n *\n * @param {Object<string, DataElement>} dataElements The dicom element.\n * @returns {DicomSegmentFrameInfo} A frame information object.\n */\nexport function getSegmentFrameInfo(dataElements) {\n  // Derivation Image Sequence\n  const derivationImages = [];\n  if (typeof dataElements[TagKeys.DerivationImageSequence] !== 'undefined') {\n    const derivationImageSq =\n      dataElements[TagKeys.DerivationImageSequence].value;\n    // Source Image Sequence\n    for (let i = 0; i < derivationImageSq.length; ++i) {\n      const sourceImages = [];\n      if (typeof derivationImageSq[i][TagKeys.SourceImageSequence] !==\n        'undefined') {\n        const sourceImageSq =\n          derivationImageSq[i][TagKeys.SourceImageSequence].value;\n        for (let j = 0; j < sourceImageSq.length; ++j) {\n          const sourceImage = {};\n          // Referenced SOP Class UID\n          if (typeof sourceImageSq[j][TagKeys.ReferencedSOPClassUID] !==\n            'undefined') {\n            sourceImage.referencedSOPClassUID =\n              sourceImageSq[j][TagKeys.ReferencedSOPClassUID].value[0];\n          }\n          // Referenced SOP Instance UID\n          if (typeof sourceImageSq[j][TagKeys.ReferencedSOPInstanceUID] !==\n            'undefined') {\n            sourceImage.referencedSOPInstanceUID =\n              sourceImageSq[j][TagKeys.ReferencedSOPInstanceUID].value[0];\n          }\n          sourceImages.push(sourceImage);\n        }\n      }\n      derivationImages.push({\n        sourceImages: sourceImages\n      });\n    }\n  }\n  // Frame Content Sequence (required, only one)\n  const frameContentSq = dataElements[TagKeys.FrameContentSequence].value;\n  // Dimension Index Value\n  const dimIndex = frameContentSq[0][TagKeys.DimensionIndexValue].value;\n  // Segment Identification Sequence (required, only one)\n  const segmentIdSq = dataElements[TagKeys.SegmentIdentificationSequence].value;\n  // Referenced Segment Number\n  const refSegmentNumber =\n    parseInt(segmentIdSq[0][TagKeys.ReferencedSegmentNumber].value[0], 0);\n  // Plane Position Sequence (required, only one)\n  const planePosSq = dataElements[TagKeys.PlanePositionSequence].value;\n  // Image Position (Patient) (conditionally required)\n  const imagePosPat = planePosSq[0][TagKeys.ImagePosition].value;\n  for (let p = 0; p < imagePosPat.length; ++p) {\n    imagePosPat[p] = parseFloat(imagePosPat[p]);\n  }\n  const frameInfo = new DicomSegmentFrameInfo(\n    dimIndex,\n    imagePosPat,\n    derivationImages,\n    refSegmentNumber\n  );\n  // Plane Orientation Sequence\n  if (typeof dataElements[TagKeys.PlaneOrientationSequence] !== 'undefined') {\n    const framePlaneOrientationSeq =\n      dataElements[TagKeys.PlaneOrientationSequence];\n    if (framePlaneOrientationSeq.value.length !== 0) {\n      // should only be one Image Orientation (Patient)\n      const frameImageOrientation =\n        framePlaneOrientationSeq.value[0][TagKeys.ImageOrientation].value;\n      if (typeof frameImageOrientation !== 'undefined') {\n        frameInfo.imageOrientationPatient = frameImageOrientation;\n      }\n    }\n  }\n  // Pixel Measures Sequence\n  if (typeof dataElements[TagKeys.PixelMeasuresSequence] !== 'undefined') {\n    const framePixelMeasuresSeq = dataElements[TagKeys.PixelMeasuresSequence];\n    if (framePixelMeasuresSeq.value.length !== 0) {\n      // should only be one\n      const frameSpacing =\n        getSpacingFromMeasure(framePixelMeasuresSeq.value[0]);\n      if (typeof frameSpacing !== 'undefined') {\n        frameInfo.spacing = frameSpacing;\n      }\n    } else {\n      logger.warn(\n        'No shared functional group pixel measure sequence items.');\n    }\n  }\n\n  return frameInfo;\n}\n\n/**\n * Check if two frame info objects are equal.\n *\n * @param {DicomSegmentFrameInfo} dsfi1 The first frame info.\n * @param {DicomSegmentFrameInfo} dsfi2 The second frame info.\n * @returns {boolean} True if both frame info are equal.\n */\nexport function isEqualSegmentFrameInfo(dsfi1, dsfi2) {\n  // basics\n  if (typeof dsfi1 === 'undefined' ||\n    typeof dsfi2 === 'undefined' ||\n    dsfi1 === null ||\n    dsfi2 === null) {\n    return false;\n  }\n  let isEqual =\n    arrayEquals(dsfi1.dimIndex, dsfi2.dimIndex) &&\n    arrayEquals(dsfi1.imagePosPat, dsfi2.imagePosPat) &&\n    dsfi1.refSegmentNumber === dsfi2.refSegmentNumber;\n\n  isEqual = isEqual &&\n    dsfi1.derivationImages.length === dsfi2.derivationImages.length;\n  for (let i = 0; i < dsfi1.derivationImages.length; ++i) {\n    const derivationImage1 = dsfi1.derivationImages[i];\n    const derivationImage2 = dsfi2.derivationImages[i];\n    isEqual = isEqual &&\n      derivationImage1.sourceImages.length ===\n        derivationImage2.sourceImages.length;\n    for (let j = 0; j < derivationImage1.length; ++j) {\n      const sourceImage1 = derivationImage1.sourceImages[j];\n      const sourceImage2 = derivationImage2.sourceImages[j];\n      isEqual = isEqual &&\n        sourceImage1.referencedSOPClassUID ===\n          sourceImage2.referencedSOPClassUID &&\n        sourceImage1.referencedSOPInstanceUID ===\n          sourceImage2.referencedSOPInstanceUID;\n    }\n  }\n\n  return isEqual;\n}\n\n/**\n * Get a dicom item from a frame information object.\n *\n * @param {object} frameInfo The frame information object.\n * @returns {Object<string, any>} The item as a list of (key, value) pairs.\n */\nexport function getDicomSegmentFrameInfoItem(frameInfo) {\n  const item = {\n    FrameContentSequence: {\n      value: [\n        {\n          DimensionIndexValues: frameInfo.dimIndex\n        }\n      ]\n    },\n    PlanePositionSequence: {\n      value: [\n        {\n          ImagePositionPatient: frameInfo.imagePosPat\n        }\n      ]\n    },\n    SegmentIdentificationSequence: {\n      value: [\n        {\n          ReferencedSegmentNumber: frameInfo.refSegmentNumber\n        }\n      ]\n    }\n  };\n  // optional DerivationImageSequence\n  if (frameInfo.derivationImages !== undefined) {\n    const sourceImgPurposeOfReferenceCode =\n      getDicomCodeItem(getSourceImageForProcessingCode());\n    const segDerivationCode =\n      getDicomCodeItem(getSegmentationCode());\n\n    const derivationImageItems = [];\n    for (const derivationImage of frameInfo.derivationImages) {\n      const sourceImages = [];\n      for (const sourceImage of derivationImage.sourceImages) {\n        sourceImages.push({\n          PurposeOfReferenceCodeSequence: {\n            value: [sourceImgPurposeOfReferenceCode]\n          },\n          ReferencedSOPClassUID: sourceImage.referencedSOPClassUID,\n          ReferencedSOPInstanceUID: sourceImage.referencedSOPInstanceUID\n        });\n      }\n\n      derivationImageItems.push({\n        DerivationCodeSequence: {\n          value: [segDerivationCode]\n        },\n        SourceImageSequence: {\n          value: sourceImages\n        }\n      });\n    }\n\n    item.DerivationImageSequence = {\n      value: derivationImageItems\n    };\n  }\n\n  return item;\n}\n","import {\n  dateToDateObj,\n  getDicomDate,\n  dateToTimeObj,\n  getDicomTime,\n} from '../dicom/dicomDate';\nimport {\n  safeGet,\n  safeGetAll\n} from '../dicom/dataElement';\nimport {\n  getImage2DSize,\n  getSpacingFromMeasure,\n  getDicomMeasureItem,\n  getDicomPlaneOrientationItem\n} from '../dicom/dicomImage';\nimport {Tag} from '../dicom/dicomTag';\nimport {getElementsFromJSONTags} from '../dicom/dicomWriter';\nimport {\n  getSegment,\n  getDicomSegmentItem,\n} from '../dicom/dicomSegment';\nimport {\n  getSegmentFrameInfo,\n  getDicomSegmentFrameInfoItem,\n  getDimensionOrganization,\n} from '../dicom/dicomSegmentFrameInfo';\nimport {transferSyntaxKeywords} from '../dicom/dictionary';\nimport {Image} from '../image/image';\nimport {Geometry} from '../image/geometry';\nimport {getOrientationFromCosines} from '../math/orientation';\nimport {Point, Point3D} from '../math/point';\nimport {Index} from '../math/index';\nimport {REAL_WORLD_EPSILON} from '../math/matrix';\nimport {logger} from '../utils/logger';\nimport {arraySortEquals} from '../utils/array';\nimport {Size} from './size';\nimport {ColourMap} from './luts';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Matrix33} from '../math/matrix';\nimport {DataElement} from '../dicom/dataElement';\nimport {MaskSegment} from '../dicom/dicomSegment';\n/* eslint-enable no-unused-vars */\n\n/**\n * @typedef {Object<string, DataElement>} DataElements\n */\n\n/**\n * Related DICOM tag keys.\n */\nconst TagKeys = {\n  SOPInstanceUID: '00080018',\n  NumberOfFrames: '00280008',\n  SegmentSequence: '00620002',\n  SharedFunctionalGroupsSequence: '52009229',\n  PlaneOrientationSequence: '00209116',\n  ImageOrientationPatient: '00200037',\n  PixelMeasuresSequence: '00289110',\n  PerFrameFunctionalGroupsSequence: '52009230'\n};\n\n/**\n * Meta tag keys.\n */\nconst MetaTagKeys = {\n  // patient\n  PatientName: '00100010',\n  PatientID: '00100020',\n  PatientBirthDate: '00100030',\n  PatientSex: '00100040',\n  // general study\n  StudyDate: '00080020',\n  StudyTime: '00080030',\n  StudyInstanceUID: '0020000D',\n  StudyID: '00200010',\n  ReferringPhysicianName: '00080090',\n  // general series\n  SeriesDate: '00080021',\n  SeriesTime: '00080031',\n  SeriesInstanceUID: '0020000E',\n  SeriesNumber: '00200011',\n  // frame of reference\n  FrameOfReferenceUID: '00200052',\n  // general equipment\n  Manufacturer: '00080070',\n  ManufacturerModelName: '00081090',\n  DeviceSerialNumber: '00181000',\n  SoftwareVersions: '00181020',\n  // general image\n  LossyImageCompression: '00282110'\n};\n\n/**\n * Check two position patients for equality.\n *\n * @param {*} pos1 The first position patient.\n * @param {*} pos2 The second position patient.\n * @returns {boolean} True is equal.\n */\nfunction equalPosPat(pos1, pos2) {\n  return JSON.stringify(pos1) === JSON.stringify(pos2);\n}\n\n/**\n * @callback compareFn\n * @param {object} a The first object.\n * @param {object} b The first object.\n * @returns {number} >0 to sort a after b, <0 to sort a before b,\n *   0 to not change order.\n */\n\n/**\n * Get a position patient compare function accroding to an\n * input orientation.\n *\n * @param {Matrix33} orientation The orientation matrix.\n * @returns {compareFn} The position compare function.\n */\nfunction getComparePosPat(orientation) {\n  const invOrientation = orientation.getInverse();\n  return function (pos1, pos2) {\n    const p1 = invOrientation.multiplyArray3D(pos1);\n    const p2 = invOrientation.multiplyArray3D(pos2);\n    return p1[2] - p2[2];\n  };\n}\n\n/**\n * Merge two tag lists.\n *\n * @param {object} tags1 Base list, will be modified.\n * @param {object} tags2 List to merge.\n */\nfunction mergeTags(tags1, tags2) {\n  const keys2 = Object.keys(tags2);\n  for (const tagName2 of keys2) {\n    if (tags1[tagName2] !== undefined) {\n      logger.trace('Overwritting tag: ' + tagName2);\n    }\n    tags1[tagName2] = tags2[tagName2];\n  }\n}\n\n/**\n * Check that a DICOM tag definition is present in a parsed element.\n *\n * @param {DataElements} dataElements The root dicom element.\n * @param {object} tagDefinition The tag definition as {name, tag, type, enum}.\n */\nfunction checkTag(dataElements, tagDefinition) {\n  const element = dataElements[tagDefinition.tag];\n  // check null and undefined\n  if (tagDefinition.type === 1 || tagDefinition.type === 2) {\n    if (typeof element === 'undefined') {\n      throw new Error('Missing or empty ' + tagDefinition.name);\n    }\n  } else {\n    if (typeof element === 'undefined') {\n      // non mandatory value, exit\n      return;\n    }\n  }\n  let includes = false;\n  let tagValue;\n  if (element.value.length === 1) {\n    tagValue = element.value[0];\n  } else {\n    tagValue = element.value;\n  }\n  if (Array.isArray(tagValue)) {\n    for (let i = 0; i < tagDefinition.enum.length; ++i) {\n      if (!Array.isArray(tagDefinition.enum[i])) {\n        throw new Error('Cannot compare array and non array tag value.');\n      }\n      if (arraySortEquals(tagDefinition.enum[i], tagValue)) {\n        includes = true;\n        break;\n      }\n    }\n  } else {\n    includes = tagDefinition.enum.includes(tagValue);\n  }\n  if (!includes) {\n    throw new Error(\n      'Unsupported ' + tagDefinition.name + ' value: ' + tagValue);\n  }\n}\n\n/**\n * Create ROI slice buffers.\n *\n * @param {Image} image The mask image.\n * @param {MaskSegment[]} segments The mask segments.\n * @param {number} sliceOffset The slice offset.\n * @returns {object} The ROI slice image buffers.\n */\nfunction createRoiSliceBuffers(\n  image,\n  segments,\n  sliceOffset\n) {\n  // create binary mask buffers\n  const geometry = image.getGeometry();\n  const size = geometry.getSize();\n  const sliceSize = size.getDimSize(2);\n  const buffers = {};\n  for (let o = 0; o < sliceSize; ++o) {\n    const inputOffset = sliceOffset + o;\n    const pixelValue = image.getValueAtOffset(inputOffset);\n    for (const segment of segments) {\n      const segmentIndex = segment.number - 1;\n      if (pixelValue === segment.number) {\n        if (buffers[segmentIndex] === undefined) {\n          buffers[segmentIndex] = new Uint8Array(sliceSize);\n        }\n        buffers[segmentIndex][o] = 1;\n      }\n    }\n  }\n  return buffers;\n}\n\n/**\n * Create ROI buffers.\n *\n * @param {Image} image The mask image.\n * @param {MaskSegment[]} segments The mask segments.\n * @returns {object} The ROI buffers.\n */\nfunction createRoiBuffers(image, segments) {\n  const geometry = image.getGeometry();\n  const size = geometry.getSize();\n\n  // image buffer to multi frame\n  const sliceSize = size.getDimSize(2);\n  const roiBuffers = {};\n  for (let k = 0; k < size.get(2); ++k) {\n    const sliceOffset = k * sliceSize;\n    // create slice buffers\n    const buffers = createRoiSliceBuffers(image, segments, sliceOffset);\n    // store slice buffers\n    const keys0 = Object.keys(buffers);\n    for (const key0 of keys0) {\n      if (roiBuffers[key0] === undefined) {\n        roiBuffers[key0] = {};\n      }\n      // ordering by slice index (follows posPat)\n      roiBuffers[key0][k] = buffers[key0];\n    }\n  }\n  return roiBuffers;\n}\n\n/**\n * List of DICOM Seg required tags.\n */\nconst RequiredDicomTags = [\n  {\n    name: 'TransferSyntaxUID',\n    tag: '00020010',\n    type: '1',\n    enum: [\n      transferSyntaxKeywords.ImplicitVRLittleEndian,\n      transferSyntaxKeywords.ExplicitVRLittleEndian,\n      transferSyntaxKeywords.ExplicitVRBigEndian\n    ]\n  },\n  {\n    name: 'MediaStorageSOPClassUID',\n    tag: '00020002',\n    type: '1',\n    enum: ['1.2.840.10008.5.1.4.1.1.66.4']\n  },\n  {\n    name: 'SOPClassUID',\n    tag: '00020002',\n    type: '1',\n    enum: ['1.2.840.10008.5.1.4.1.1.66.4']\n  },\n  {\n    name: 'Modality',\n    tag: '00080060',\n    type: '1',\n    enum: ['SEG']\n  },\n  {\n    name: 'SegmentationType',\n    tag: '00620001',\n    type: '1',\n    enum: ['BINARY']\n  },\n  {\n    name: 'DimensionOrganizationType',\n    tag: '00209311',\n    type: '3',\n    enum: ['3D']\n  },\n  {\n    name: 'ImageType',\n    tag: '00080008',\n    type: '1',\n    enum: [['DERIVED', 'PRIMARY']]\n  },\n  {\n    name: 'SamplesPerPixel',\n    tag: '00280002',\n    type: '1',\n    enum: [1]\n  },\n  {\n    name: 'PhotometricInterpretation',\n    tag: '00280004',\n    type: '1',\n    enum: ['MONOCHROME2']\n  },\n  {\n    name: 'PixelRepresentation',\n    tag: '00280103',\n    type: '1',\n    enum: [0]\n  },\n  {\n    name: 'BitsAllocated',\n    tag: '00280100',\n    type: '1',\n    enum: [1]\n  },\n  {\n    name: 'BitsStored',\n    tag: '00280101',\n    type: '1',\n    enum: [1]\n  },\n  {\n    name: 'HighBit',\n    tag: '00280102',\n    type: '1',\n    enum: [0]\n  },\n];\n\n/**\n * Get the default DICOM seg tags as an object.\n *\n * @returns {object} The default tags.\n */\nexport function getDefaultDicomSegJson() {\n  const tags = {};\n  for (const tag of RequiredDicomTags) {\n    tags[tag.name] = tag.enum[0];\n  }\n  return tags;\n}\n\n/**\n * Mask {@link Image} factory.\n */\nexport class MaskFactory {\n\n  /**\n   * Possible warning created by checkElements.\n   *\n   * @type {string|undefined}\n   */\n  #warning;\n\n  /**\n   * Get a warning string if elements are not as expected.\n   * Created by checkElements.\n   *\n   * @returns {string|undefined} The warning.\n   */\n  getWarning() {\n    return this.#warning;\n  }\n\n  /**\n   * Check dicom elements.\n   *\n   * @param {Object<string, DataElement>} _dicomElements The DICOM tags.\n   * @returns {string|undefined} A possible warning.\n   * @throws Error for missing or wrong data.\n   */\n  checkElements(_dicomElements) {\n    // does nothing\n    return;\n  }\n\n  /**\n   * Get an {@link Image} object from the read DICOM file.\n   *\n   * @param {Object<string, DataElement>} dataElements The DICOM tags.\n   * @param {Uint8Array | Int8Array |\n   *   Uint16Array | Int16Array |\n   *   Uint32Array | Int32Array} pixelBuffer The pixel buffer.\n   * @returns {Image} A new Image.\n   * @throws Error for missing or wrong data.\n   */\n  create(dataElements, pixelBuffer) {\n    // safe get shortcuts\n    const safeGetLocal = function (key) {\n      return safeGet(dataElements, key);\n    };\n    const safeGetAllLocal = function (key) {\n      return safeGetAll(dataElements, key);\n    };\n\n    // check required and supported tags\n    for (const tag of RequiredDicomTags) {\n      checkTag(dataElements, tag);\n    }\n\n    // image size\n    const size2D = getImage2DSize(dataElements);\n    const size = new Size([size2D[0], size2D[1], 1]);\n\n    const sliceSize = size.getTotalSize();\n\n    // NumberOfFrames\n    let numberOfFrames = safeGetLocal(TagKeys.NumberOfFrames);\n    if (typeof numberOfFrames !== 'undefined') {\n      numberOfFrames = parseInt(numberOfFrames, 10);\n    } else {\n      numberOfFrames = 1;\n    }\n\n    if (numberOfFrames !== pixelBuffer.length / sliceSize) {\n      throw new Error(\n        'Buffer and numberOfFrames meta are not equal.' +\n        numberOfFrames + ' ' + pixelBuffer.length / sliceSize);\n    }\n\n    // Dimension Organization and Index\n    const dimension = getDimensionOrganization(dataElements);\n\n    // Segment Sequence\n    const segSequence = safeGetAllLocal(TagKeys.SegmentSequence);\n    if (typeof segSequence === 'undefined') {\n      throw new Error('Missing or empty segmentation sequence');\n    }\n    const segments = [];\n    // segment number is unique and starts at 1, use 0 as background\n    const redLut = [0];\n    const greenLut = [0];\n    const blueLut = [0];\n    for (let i = 0; i < segSequence.length; ++i) {\n      const segment = getSegment(segSequence[i]);\n      if (typeof segment.displayRGBValue !== 'undefined') {\n        // add palette colour\n        redLut[segment.number] = segment.displayRGBValue.r;\n        greenLut[segment.number] = segment.displayRGBValue.g;\n        blueLut[segment.number] = segment.displayRGBValue.b;\n      }\n      // store\n      segments.push(segment);\n    }\n\n    let hasDisplayRGBValue = false;\n    let paletteColourMap;\n    if (redLut.length > 1) {\n      hasDisplayRGBValue = true;\n      paletteColourMap = new ColourMap(redLut, greenLut, blueLut);\n    }\n\n    // Shared Functional Groups Sequence\n    let spacing;\n    let imageOrientationPatient;\n    const sharedFunctionalGroupsSeq =\n      safeGetAllLocal(TagKeys.SharedFunctionalGroupsSequence);\n    if (typeof sharedFunctionalGroupsSeq !== 'undefined') {\n      // should be only one\n      const funcGroup0 = sharedFunctionalGroupsSeq[0];\n      // Plane Orientation Sequence\n      if (typeof funcGroup0[TagKeys.PlaneOrientationSequence] !== 'undefined') {\n        const planeOrientationSeq =\n          funcGroup0[TagKeys.PlaneOrientationSequence];\n        if (planeOrientationSeq.value.length !== 0) {\n          // should be only one\n          imageOrientationPatient =\n            planeOrientationSeq.value[0][TagKeys.ImageOrientationPatient].value;\n        } else {\n          logger.warn(\n            'No shared functional group plane orientation sequence items.');\n        }\n      }\n      // Pixel Measures Sequence\n      if (typeof funcGroup0[TagKeys.PixelMeasuresSequence] !== 'undefined') {\n        const pixelMeasuresSeq = funcGroup0[TagKeys.PixelMeasuresSequence];\n        if (pixelMeasuresSeq.value.length !== 0) {\n          // should be only one\n          spacing = getSpacingFromMeasure(pixelMeasuresSeq.value[0]);\n        } else {\n          logger.warn(\n            'No shared functional group pixel measure sequence items.');\n        }\n      }\n    }\n\n    const includesPosPat = function (arr, val) {\n      return arr.some(function (arrVal) {\n        return equalPosPat(val, arrVal);\n      });\n    };\n\n    const findIndexPosPat = function (arr, val) {\n      return arr.findIndex(function (arrVal) {\n        return equalPosPat(val, arrVal);\n      });\n    };\n\n    // Per-frame Functional Groups Sequence\n    const perFrameFuncGroupSequence =\n      safeGetAllLocal(TagKeys.PerFrameFunctionalGroupsSequence);\n    if (typeof perFrameFuncGroupSequence === 'undefined') {\n      throw new Error('Missing or empty per frame functional sequence');\n    }\n    if (numberOfFrames !== perFrameFuncGroupSequence.length) {\n      throw new Error(\n        'perFrameFuncGroupSequence meta and numberOfFrames are not equal.');\n    }\n    // create frame info object from per frame func\n    const frameInfos = [];\n    for (let j = 0; j < perFrameFuncGroupSequence.length; ++j) {\n      frameInfos.push(\n        getSegmentFrameInfo(perFrameFuncGroupSequence[j]));\n    }\n\n    // check frame infos\n    const framePosPats = [];\n    for (let ii = 0; ii < frameInfos.length; ++ii) {\n      if (!includesPosPat(framePosPats, frameInfos[ii].imagePosPat)) {\n        framePosPats.push(frameInfos[ii].imagePosPat);\n      }\n      // store orientation if needed, avoid multi\n      if (typeof frameInfos[ii].imageOrientationPatient !== 'undefined') {\n        if (typeof imageOrientationPatient === 'undefined') {\n          imageOrientationPatient = frameInfos[ii].imageOrientationPatient;\n        } else {\n          if (!arraySortEquals(\n            imageOrientationPatient, frameInfos[ii].imageOrientationPatient)) {\n            throw new Error('Unsupported multi orientation dicom seg.');\n          }\n        }\n      }\n      // store spacing if needed, avoid multi\n      if (typeof frameInfos[ii].spacing !== 'undefined') {\n        if (typeof spacing === 'undefined') {\n          spacing = frameInfos[ii].spacing;\n        } else {\n          if (!spacing.equals(frameInfos[ii].spacing)) {\n            throw new Error('Unsupported multi resolution dicom seg.');\n          }\n        }\n      }\n    }\n\n    // check spacing and orientation\n    if (typeof spacing === 'undefined') {\n      throw new Error('No spacing found for DICOM SEG');\n    }\n    if (spacing.length() !== 3) {\n      throw new Error('Incomplete spacing found for DICOM SEG');\n    }\n    if (typeof imageOrientationPatient === 'undefined') {\n      throw new Error('No imageOrientationPatient found for DICOM SEG');\n    }\n    // orientation\n    const orientationMatrix = getOrientationFromCosines(\n      imageOrientationPatient.map((item) => parseFloat(item))\n    );\n    if (typeof orientationMatrix === 'undefined') {\n      throw new Error('Invalid imageOrientationPatient found for DICOM SEG');\n    }\n\n    // sort positions patient\n    framePosPats.sort(getComparePosPat(orientationMatrix));\n\n    const point3DFromArray = function (arr) {\n      return new Point3D(arr[0], arr[1], arr[2]);\n    };\n\n    // frame origins\n    const frameOrigins = [];\n    for (const framePosPat of framePosPats) {\n      frameOrigins.push(point3DFromArray(framePosPat));\n    }\n\n    // tmp geometry with correct spacing but only one slice\n    const tmpGeometry = new Geometry(\n      [frameOrigins[0]], size, spacing, orientationMatrix);\n\n    // origin distance test\n    // TODO: maybe use sliceSpacing / 10\n    const isAboveEpsilon = function (value) {\n      let res = value > REAL_WORLD_EPSILON;\n      if (res) {\n        // try larger epsilon\n        res = value > REAL_WORLD_EPSILON * 10;\n        if (!res) {\n          // warn if epsilon < value < epsilon * 10\n          logger.warn(\n            'Using larger real world epsilon in SEG pos pat adding'\n          );\n        } else {\n          res = value > REAL_WORLD_EPSILON * 100;\n          if (!res) {\n            // warn if epsilon < value < epsilon * 100\n            logger.warn(\n              'Using larger+ real world epsilon in SEG pos pat adding'\n            );\n          }\n        }\n      }\n      return res;\n    };\n\n    // add possibly missing posPats\n    const posPats = [];\n    posPats.push(framePosPats[0]);\n    let sliceIndex = 0;\n    for (let g = 1; g < framePosPats.length; ++g) {\n      ++sliceIndex;\n      let index = new Index([0, 0, sliceIndex]);\n      let point = tmpGeometry.indexToWorld(index).get3D();\n      const frameOrigin = frameOrigins[g];\n      // check if more pos pats are needed\n      let dist = frameOrigin.getDistance(point);\n      const distPrevious = dist;\n      // TODO: good threshold?\n      while (isAboveEpsilon(dist)) {\n        logger.debug('Adding intermediate pos pats for DICOM seg at ' +\n          point.toString());\n        posPats.push([point.getX(), point.getY(), point.getZ()]);\n        ++sliceIndex;\n        index = new Index([0, 0, sliceIndex]);\n        point = tmpGeometry.indexToWorld(index).get3D();\n        dist = frameOrigin.getDistance(point);\n        if (dist > distPrevious) {\n          throw new Error(\n            'Test distance is increasing when adding intermediate pos pats');\n        }\n      }\n      // add frame pos pat\n      posPats.push(framePosPats[g]);\n    }\n\n    // as many slices as posPats\n    const numberOfSlices = posPats.length;\n\n    // final geometry\n    const geometry = new Geometry(\n      [frameOrigins[0]], size, spacing, orientationMatrix);\n    const uids = ['0'];\n    for (let m = 1; m < numberOfSlices; ++m) {\n      geometry.appendOrigin(point3DFromArray(posPats[m]), m);\n      uids.push(m.toString());\n    }\n\n    const getFindSegmentFunc = function (number) {\n      return function (item) {\n        return item.number === number;\n      };\n    };\n\n    // create output buffer\n    const buffer =\n      // @ts-ignore\n      new pixelBuffer.constructor(sliceSize * numberOfSlices);\n    buffer.fill(0);\n    // merge frame buffers\n    let sliceOffset = null;\n    let frameOffset = null;\n    for (let f = 0; f < frameInfos.length; ++f) {\n      // get the slice index from the position in the posPat array\n      sliceIndex = findIndexPosPat(posPats, frameInfos[f].imagePosPat);\n      frameOffset = sliceSize * f;\n      sliceOffset = sliceSize * sliceIndex;\n      // get the frame display value\n      const frameSegment = segments.find(\n        getFindSegmentFunc(frameInfos[f].refSegmentNumber)\n      );\n      for (let l = 0; l < sliceSize; ++l) {\n        if (pixelBuffer[frameOffset + l] !== 0) {\n          const offset = sliceOffset + l;\n          if (hasDisplayRGBValue) {\n            buffer[offset] = frameSegment.number;\n          } else {\n            buffer[offset] = frameSegment.displayValue;\n          }\n        }\n      }\n    }\n\n    // create image\n    const image = new Image(geometry, buffer, uids);\n    if (hasDisplayRGBValue) {\n      image.setPhotometricInterpretation('PALETTE COLOR');\n      image.setPaletteColourMap(paletteColourMap);\n    }\n    // meta information\n    const meta = getDefaultDicomSegJson();\n\n    // meta tags\n    const metaKeys = Object.keys(MetaTagKeys);\n    for (const key of metaKeys) {\n      meta[key] = safeGetLocal(MetaTagKeys[key]);\n    }\n\n    // dicom seg dimension\n    meta.DimensionOrganizationSequence = dimension.organizations;\n    meta.DimensionIndexSequence = dimension.indices;\n    // custom\n    meta.custom = {\n      segments: segments,\n      frameInfos: frameInfos,\n      SOPInstanceUID: safeGetLocal(TagKeys.SOPInstanceUID)\n    };\n\n    // number of files: in this case equal to number slices,\n    //   used to calculate buffer size\n    meta.numberOfFiles = numberOfSlices;\n\n    image.setMeta(meta);\n\n    return image;\n  }\n\n  /**\n   * Convert a mask image into a DICOM segmentation object.\n   *\n   * @param {Image} image The mask image.\n   * @param {MaskSegment[]} segments The mask segments.\n   * @param {Image} sourceImage The source image.\n   * @param {Object<string, any>} [extraTags] Optional list of extra tags.\n   * @returns {Object<string, DataElement>} A list of dicom elements.\n   */\n  toDicom(\n    image,\n    segments,\n    sourceImage,\n    extraTags\n  ) {\n    // original image tags\n    const tags = image.getMeta();\n\n    // use image segments if not provided as input\n    if (segments === undefined) {\n      segments = tags.segments;\n    }\n\n    const geometry = image.getGeometry();\n    const size = geometry.getSize();\n\n    // (not in meta)\n    tags.Rows = size.get(1);\n    tags.Columns = size.get(0);\n    // update content tags\n    const now = new Date();\n    tags.ContentDate = getDicomDate(dateToDateObj(now));\n    tags.ContentTime = getDicomTime(dateToTimeObj(now));\n\n    // keep source image StudyInstanceUID\n    if (sourceImage !== undefined) {\n      tags.StudyInstanceUID = (sourceImage.getMeta()).StudyInstanceUID;\n    }\n\n    // segments\n    const segmentItems = [];\n    for (const segment of segments) {\n      segmentItems.push(getDicomSegmentItem(segment));\n    }\n    tags.SegmentSequence = {\n      value: segmentItems\n    };\n\n    // Shared Functional Groups Sequence\n    tags.SharedFunctionalGroupsSequence = {\n      value: [\n        {\n          PlaneOrientationSequence: {\n            value: [getDicomPlaneOrientationItem(geometry.getOrientation())]\n          },\n          PixelMeasuresSequence: {\n            value: [getDicomMeasureItem(geometry.getSpacing())]\n          }\n        }\n      ]\n    };\n\n    // image buffer to multi frame\n    const roiBuffers = createRoiBuffers(image, segments);\n\n    const frameInfos = [];\n\n    // flatten buffer array\n    const finalBuffers = [];\n    const referencedSOPs = [];\n    for (const segment of segments) {\n      const number40 = segment.number;\n      const number4 = number40 - 1;\n      // check if buffer has values\n      if (roiBuffers[number4] === undefined) {\n        continue;\n      }\n      const keys1 = Object.keys(roiBuffers[number4]);\n      // revert slice order\n      for (let k1 = keys1.length - 1; k1 >= 0; --k1) {\n        const key1 = Number.parseInt(keys1[k1], 10);\n        finalBuffers.push(roiBuffers[number4][key1]);\n        // frame info\n        const posPat = image.getGeometry().getOrigins()[key1];\n        const posPatArray = [posPat.getX(), posPat.getY(), posPat.getZ()];\n        const frameInfo = {\n          dimIndex: [number40, keys1.length - k1],\n          imagePosPat: posPatArray,\n          refSegmentNumber: number40\n        };\n        // derivation image info\n        if (sourceImage !== undefined) {\n          const sourceGeometry = sourceImage.getGeometry();\n          const sourceIndex = sourceGeometry.worldToIndex(\n            new Point([posPat.getX(), posPat.getY(), posPat.getZ()])\n          );\n          frameInfo.derivationImages = [\n            {\n              sourceImages: [\n                {\n                  referencedSOPInstanceUID:\n                    sourceImage.getImageUid(sourceIndex),\n                  referencedSOPClassUID:\n                    (sourceImage.getMeta()).SOPClassUID\n                }\n              ]\n            }\n          ];\n          // store as tag\n          referencedSOPs.push({\n            ReferencedSOPInstanceUID:\n              sourceImage.getImageUid(sourceIndex),\n            ReferencedSOPClassUID:\n              (sourceImage.getMeta()).SOPClassUID\n          });\n        }\n        frameInfos.push(frameInfo);\n      }\n    }\n\n    tags.NumberOfFrames = finalBuffers.length.toString();\n\n    // frame infos\n    const frameInfosTag = [];\n    for (const frameInfo of frameInfos) {\n      frameInfosTag.push(getDicomSegmentFrameInfoItem(frameInfo));\n    }\n    tags.PerFrameFunctionalGroupsSequence = {\n      value: frameInfosTag\n    };\n\n    // also store referenced SOPs in ReferencedSeriesSequence\n    if (sourceImage !== undefined) {\n      const refSeriesTag = [];\n      refSeriesTag.push({\n        ReferencedInstanceSequence: {\n          value: referencedSOPs\n        },\n        SeriesInstanceUID: (sourceImage.getMeta()).SeriesInstanceUID\n      });\n      tags.ReferencedSeriesSequence = {\n        value: refSeriesTag\n      };\n    }\n\n    // merge extra tags if provided\n    if (extraTags !== undefined) {\n      mergeTags(tags, extraTags);\n    }\n\n    // convert JSON to DICOM element object\n    const dicomElements = getElementsFromJSONTags(tags);\n\n    // pixel value length: divide by 8 to trigger binary write\n    const sliceSize = size.getDimSize(2);\n    const pixVl = (finalBuffers.length * sliceSize) / 8;\n    const de = new DataElement('OB');\n    de.tag = new Tag('7FE0', '0010');\n    de.vl = pixVl;\n    de.value = finalBuffers;\n    dicomElements['7FE00010'] = de;\n\n    return dicomElements;\n  }\n\n} // class MaskFactory\n","import {Index} from '../math/index';\nimport {Point3D} from '../math/point';\nimport {logger} from '../utils/logger';\nimport {arrayContains} from '../utils/array';\nimport {getTypedArray} from '../dicom/dicomParser';\nimport {ListenerHandler} from '../utils/listen';\nimport {valueRange} from './iterator';\nimport {RescaleSlopeAndIntercept} from './rsi';\nimport {ImageFactory} from './imageFactory';\nimport {MaskFactory} from './maskFactory';\nimport {isMonochrome} from '../dicom/dicomImage';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Geometry} from './geometry';\nimport {Matrix33, REAL_WORLD_EPSILON} from '../math/matrix';\nimport {NumberRange} from '../math/stats';\nimport {DataElement} from '../dicom/dataElement';\nimport {RGB} from '../utils/colour';\nimport {ColourMap} from './luts';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get the slice index of an input slice into a volume geometry.\n *\n * @param {Geometry} volumeGeometry The volume geometry.\n * @param {Geometry} sliceGeometry The slice geometry.\n * @returns {Index} The index of the slice in the volume geomtry.\n */\nfunction getSliceIndex(volumeGeometry, sliceGeometry) {\n  // possible time\n  const timeId = sliceGeometry.getInitialTime();\n  // index values\n  const values = [];\n  // x, y\n  values.push(0);\n  values.push(0);\n  // z\n  values.push(volumeGeometry.getSliceIndex(sliceGeometry.getOrigin(), timeId));\n  // time\n  if (typeof timeId !== 'undefined') {\n    values.push(timeId);\n  }\n  // return index\n  return new Index(values);\n}\n\n/**\n * Create an Image from DICOM elements.\n *\n * @param {Object<string, DataElement>} elements The DICOM elements.\n * @returns {Image} The Image object.\n */\nexport function createImage(elements) {\n  const factory = new ImageFactory();\n  return factory.create(\n    elements,\n    elements['7FE00010'].value[0],\n    1\n  );\n}\n\n/**\n * Create a mask Image from DICOM elements.\n *\n * @param {Object<string, DataElement>} elements The DICOM elements.\n * @returns {Image} The mask Image object.\n */\nexport function createMaskImage(elements) {\n  const factory = new MaskFactory();\n  return factory.create(\n    elements,\n    elements['7FE00010'].value[0]\n  );\n}\n\n/**\n * Image class.\n * Usable once created, optional are:\n * - rescale slope and intercept (default 1:0),\n * - photometric interpretation (default MONOCHROME2),\n * - planar configuration (default RGBRGB...).\n *\n * @example\n * // XMLHttpRequest onload callback\n * const onload = function (event) {\n *   // parse the dicom buffer\n *   const dicomParser = new dwv.DicomParser();\n *   dicomParser.parse(event.target.response);\n *   // create the image object\n *   const image = dwv.createImage(dicomParser.getDicomElements());\n *   // result div\n *   const div = document.getElementById('dwv');\n *   // display the image size\n *   const size = image.getGeometry().getSize();\n *   div.appendChild(document.createTextNode(\n *     'Size: ' + size.toString() +\n *     ' (should be 256,256,1)'));\n *   // break line\n *   div.appendChild(document.createElement('br'));\n *   // display a pixel value\n *   div.appendChild(document.createTextNode(\n *     'Pixel @ [128,40,0]: ' +\n *     image.getRescaledValue(128,40,0) +\n *     ' (should be 101)'));\n * };\n * // DICOM file request\n * const request = new XMLHttpRequest();\n * const url = 'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm';\n * request.open('GET', url);\n * request.responseType = 'arraybuffer';\n * request.onload = onload;\n * request.send();\n */\nexport class Image {\n\n  /**\n   * Data geometry.\n   *\n   * @type {Geometry}\n   */\n  #geometry;\n\n  /**\n   * List of compatible typed arrays.\n   *\n   * @typedef {(\n   *   Uint8Array | Int8Array |\n   *   Uint16Array | Int16Array |\n   *   Uint32Array | Int32Array\n   * )} TypedArray\n   */\n\n  /**\n   * Data buffer.\n   *\n   * @type {TypedArray}\n   */\n  #buffer;\n\n  /**\n   * Image UIDs.\n   *\n   * @type {string[]}\n   */\n  #imageUids;\n\n  /**\n   * Constant rescale slope and intercept (default).\n   *\n   * @type {RescaleSlopeAndIntercept}\n   */\n  #rsi = new RescaleSlopeAndIntercept(1, 0);\n\n  /**\n   * Varying rescale slope and intercept.\n   *\n   * @type {RescaleSlopeAndIntercept[]}\n   */\n  #rsis = null;\n\n  /**\n   * Flag to know if the RSIs are all identity (1,0).\n   *\n   * @type {boolean}\n   */\n  #isIdentityRSI = true;\n\n  /**\n   * Flag to know if the RSIs are all equals.\n   *\n   * @type {boolean}\n   */\n  #isConstantRSI = true;\n\n  /**\n   * Photometric interpretation (MONOCHROME, RGB...).\n   *\n   * @type {string}\n   */\n  #photometricInterpretation = 'MONOCHROME2';\n\n  /**\n   * Palette colour map.\n   *\n   * @type {ColourMap}\n   */\n  #paletteColourMap;\n\n  /**\n   * Planar configuration for RGB data (`0:RGBRGBRGBRGB...` or\n   *   `1:RRR...GGG...BBB...`).\n   *\n   * @type {number}\n   */\n  #planarConfiguration = 0;\n\n  /**\n   * Number of components.\n   *\n   * @type {number}\n   */\n  #numberOfComponents;\n\n  /**\n   * Meta information.\n   *\n   * @type {Object<string, any>}\n   */\n  #meta = {};\n\n  /**\n   * Data range.\n   *\n   * @type {NumberRange}\n   */\n  #dataRange = null;\n\n  /**\n   * Rescaled data range.\n   *\n   * @type {NumberRange}\n   */\n  #rescaledDataRange = null;\n\n  /**\n   * Histogram.\n   *\n   * @type {Array}\n   */\n  #histogram = null;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * @param {Geometry} geometry The geometry of the image.\n   * @param {TypedArray} buffer The image data as a one dimensional buffer.\n   * @param {string[]} [imageUids] An array of Uids indexed to slice number.\n   */\n  constructor(geometry, buffer, imageUids) {\n    this.#geometry = geometry;\n    this.#buffer = buffer;\n    this.#imageUids = imageUids;\n\n    this.#numberOfComponents = this.#buffer.length / (\n      this.#geometry.getSize().getTotalSize());\n  }\n\n  /**\n   * Get the image UID at a given index.\n   *\n   * @param {Index} [index] The index at which to get the id.\n   * @returns {string} The UID.\n   */\n  getImageUid(index) {\n    let uid = this.#imageUids[0];\n    if (this.#imageUids.length !== 1 && typeof index !== 'undefined') {\n      uid = this.#imageUids[this.getSecondaryOffset(index)];\n    }\n    return uid;\n  }\n\n  /**\n   * Get the image origin for a image UID.\n   *\n   * @param {string} uid The UID.\n   * @returns {Point3D|undefined} The origin.\n   */\n  getOriginForImageUid(uid) {\n    let origin;\n    const uidIndex = this.#imageUids.indexOf(uid);\n    if (uidIndex !== -1) {\n      const origins = this.getGeometry().getOrigins();\n      origin = origins[uidIndex];\n    }\n    return origin;\n  }\n\n  /**\n   * Check if the image includes an UID.\n   *\n   * @param {string} uid The UID.\n   * @returns {boolean} True if present.\n   */\n  includesImageUid(uid) {\n    return this.#imageUids.includes(uid);\n  }\n\n  /**\n   * Check if this image includes the input uids.\n   *\n   * @param {string[]} uids UIDs to test for presence.\n   * @returns {boolean} True if all uids are in this image uids.\n   */\n  containsImageUids(uids) {\n    return arrayContains(this.#imageUids, uids);\n  }\n\n  /**\n   * Get the geometry of the image.\n   *\n   * @returns {Geometry} The geometry.\n   */\n  getGeometry() {\n    return this.#geometry;\n  }\n\n  /**\n   * Get the data buffer of the image.\n   *\n   * @todo Dangerous...\n   * @returns {TypedArray} The data buffer of the image.\n   */\n  getBuffer() {\n    return this.#buffer;\n  }\n\n  /**\n   * Can the image values be quantified?\n   *\n   * @returns {boolean} True if only one component.\n   */\n  canQuantify() {\n    return this.getNumberOfComponents() === 1;\n  }\n\n  /**\n   * Can window and level be applied to the data?\n   *\n   * @returns {boolean} True if the data is monochrome.\n   * @deprecated Since v0.33, please use isMonochrome instead.\n   */\n  canWindowLevel() {\n    return this.isMonochrome();\n  }\n\n  /**\n   * Is the data monochrome.\n   *\n   * @returns {boolean} True if the data is monochrome.\n   */\n  isMonochrome() {\n    return isMonochrome(this.getPhotometricInterpretation());\n  }\n\n  /**\n   * Can the data be scrolled?\n   *\n   * @param {Matrix33} viewOrientation The view orientation.\n   * @returns {boolean} True if the data has a third dimension greater than one\n   *   after applying the view orientation.\n   */\n  canScroll(viewOrientation) {\n    const size = this.getGeometry().getSize();\n    // also check the numberOfFiles in case we are in the middle of a load\n    let nFiles = 1;\n    if (typeof this.#meta.numberOfFiles !== 'undefined') {\n      nFiles = this.#meta.numberOfFiles;\n    }\n    return size.canScroll(viewOrientation) || nFiles !== 1;\n  }\n\n  /**\n   * Get the secondary offset max.\n   *\n   * @returns {number} The maximum offset.\n   */\n  #getSecondaryOffsetMax() {\n    return this.#geometry.getSize().getTotalSize(2);\n  }\n\n  /**\n   * Get the secondary offset: an offset that takes into account\n   *   the slice and above dimension numbers.\n   *\n   * @param {Index} index The index.\n   * @returns {number} The offset.\n   */\n  getSecondaryOffset(index) {\n    return this.#geometry.getSize().indexToOffset(index, 2);\n  }\n\n  /**\n   * Get the rescale slope and intercept.\n   *\n   * @param {Index} [index] The index (only needed for non constant rsi).\n   * @returns {RescaleSlopeAndIntercept} The rescale slope and intercept.\n   */\n  getRescaleSlopeAndIntercept(index) {\n    let res = this.#rsi;\n    if (!this.isConstantRSI()) {\n      if (typeof index === 'undefined') {\n        throw new Error('Cannot get non constant RSI with empty slice index.');\n      }\n      const offset = this.getSecondaryOffset(index);\n      if (typeof this.#rsis[offset] !== 'undefined') {\n        res = this.#rsis[offset];\n      } else {\n        logger.warn('undefined non constant rsi at ' + offset);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Get the rsi at a specified (secondary) offset.\n   *\n   * @param {number} offset The desired (secondary) offset.\n   * @returns {RescaleSlopeAndIntercept} The coresponding rsi.\n   */\n  #getRescaleSlopeAndInterceptAtOffset(offset) {\n    return this.#rsis[offset];\n  }\n\n  /**\n   * Set the rescale slope and intercept.\n   *\n   * @param {RescaleSlopeAndIntercept} inRsi The input rescale\n   *   slope and intercept.\n   * @param {number} [offset] The rsi offset (only needed for non constant rsi).\n   */\n  setRescaleSlopeAndIntercept(inRsi, offset) {\n    // update identity flag\n    this.#isIdentityRSI = this.#isIdentityRSI && inRsi.isID();\n    // update constant flag\n    if (!this.#isConstantRSI) {\n      if (typeof offset === 'undefined') {\n        throw new Error(\n          'Cannot store non constant RSI with empty slice index.');\n      }\n      this.#rsis.splice(offset, 0, inRsi);\n    } else {\n      if (!this.#rsi.equals(inRsi)) {\n        if (typeof offset === 'undefined') {\n          // no slice index, replace existing\n          this.#rsi = inRsi;\n        } else {\n          // first non constant rsi\n          this.#isConstantRSI = false;\n          // switch to non constant mode\n          this.#rsis = [];\n          // initialise RSIs\n          for (let i = 0, leni = this.#getSecondaryOffsetMax(); i < leni; ++i) {\n            this.#rsis.push(this.#rsi);\n          }\n          // store\n          this.#rsi = null;\n          this.#rsis.splice(offset, 0, inRsi);\n        }\n      }\n    }\n  }\n\n  /**\n   * Are all the RSIs identity (1,0).\n   *\n   * @returns {boolean} True if they are.\n   */\n  isIdentityRSI() {\n    return this.#isIdentityRSI;\n  }\n\n  /**\n   * Are all the RSIs equal.\n   *\n   * @returns {boolean} True if they are.\n   */\n  isConstantRSI() {\n    return this.#isConstantRSI;\n  }\n\n  /**\n   * Get the photometricInterpretation of the image.\n   *\n   * @returns {string} The photometricInterpretation of the image.\n   */\n  getPhotometricInterpretation() {\n    return this.#photometricInterpretation;\n  }\n\n  /**\n   * Set the photometricInterpretation of the image.\n   *\n   * @param {string} interp The photometricInterpretation of the image.\n   */\n  setPhotometricInterpretation(interp) {\n    this.#photometricInterpretation = interp;\n  }\n\n  /**\n   * Set the palette colour map.\n   *\n   * @param {ColourMap} map The colour map.\n   */\n  setPaletteColourMap(map) {\n    this.#paletteColourMap = map;\n    // fire imagecontentchange\n    this.#fireEvent({type: 'imagecontentchange'});\n  }\n\n  /**\n   * Get the palette colour map.\n   *\n   * @returns {ColourMap} The colour map.\n   */\n  getPaletteColourMap() {\n    return this.#paletteColourMap;\n  }\n\n  /**\n   * Update the palette colour map.\n   *\n   * @param {number} index The index to change the colour of.\n   * @param {RGB} colour The colour to use at index.\n   */\n  updatePaletteColourMap(index, colour) {\n    this.#paletteColourMap.red[index] = colour.r;\n    this.#paletteColourMap.green[index] = colour.g;\n    this.#paletteColourMap.blue[index] = colour.b;\n    // fire imagecontentchange\n    this.#fireEvent({type: 'imagecontentchange'});\n  }\n\n  /**\n   * Get the planarConfiguration of the image.\n   *\n   * @returns {number} The planarConfiguration of the image.\n   */\n  getPlanarConfiguration() {\n    return this.#planarConfiguration;\n  }\n\n  /**\n   * Set the planarConfiguration of the image.\n   *\n   * @param {number} config The planarConfiguration of the image.\n   */\n  setPlanarConfiguration(config) {\n    this.#planarConfiguration = config;\n  }\n\n  /**\n   * Get the numberOfComponents of the image.\n   *\n   * @returns {number} The numberOfComponents of the image.\n   */\n  getNumberOfComponents() {\n    return this.#numberOfComponents;\n  }\n\n  /**\n   * Get the meta information of the image.\n   *\n   * @returns {Object<string, any>} The meta information of the image.\n   */\n  getMeta() {\n    return this.#meta;\n  }\n\n  /**\n   * Set the meta information of the image.\n   *\n   * @param {Object<string, any>} rhs The meta information of the image.\n   */\n  setMeta(rhs) {\n    this.#meta = rhs;\n  }\n\n  /**\n   * Get value at offset. Warning: No size check...\n   *\n   * @param {number} offset The desired offset.\n   * @returns {number} The value at offset.\n   */\n  getValueAtOffset(offset) {\n    return this.#buffer[offset];\n  }\n\n  /**\n   * Get the offsets where the buffer equals the input value.\n   * Loops through the whole volume, can get long for big data...\n   *\n   * @param {number|RGB} value The value to check.\n   * @returns {number[]} The list of offsets.\n   */\n  getOffsets(value) {\n    // value to array\n    let bufferValue;\n    if (typeof value === 'number') {\n      if (this.#numberOfComponents !== 1) {\n        throw new Error(\n          'Number of components is not 1 for getting single value.');\n      }\n      bufferValue = [value];\n    } else if (typeof value.r !== 'undefined' &&\n      typeof value.g !== 'undefined' &&\n      typeof value.b !== 'undefined') {\n      if (this.#numberOfComponents !== 3) {\n        throw new Error(\n          'Number of components is not 3 for getting RGB value.');\n      }\n      bufferValue = [value.r, value.g, value.b];\n    }\n\n    // main loop\n    const offsets = [];\n    let equal;\n    for (let i = 0; i < this.#buffer.length; i = i + this.#numberOfComponents) {\n      equal = true;\n      for (let j = 0; j < this.#numberOfComponents; ++j) {\n        if (this.#buffer[i + j] !== bufferValue[j]) {\n          equal = false;\n          break;\n        }\n      }\n      if (equal) {\n        offsets.push(i);\n      }\n    }\n    return offsets;\n  }\n\n  /**\n   * Check if the input values are in the buffer.\n   * Could loop through the whole volume, can get long for big data...\n   *\n   * @param {Array} values The values to check.\n   * @returns {boolean[]} A list of booleans for each input value,\n   *   set to true if the value is present in the buffer.\n   */\n  hasValues(values) {\n    // check input\n    if (typeof values === 'undefined' ||\n      values.length === 0) {\n      return [];\n    }\n    // final array value\n    const finalValues = [];\n    for (let v1 = 0; v1 < values.length; ++v1) {\n      if (this.#numberOfComponents === 1) {\n        finalValues.push([values[v1]]);\n      } else if (this.#numberOfComponents === 3) {\n        finalValues.push([\n          values[v1].r,\n          values[v1].g,\n          values[v1].b\n        ]);\n      }\n    }\n    // find callback\n    let equalFunc;\n    if (this.#numberOfComponents === 1) {\n      equalFunc = function (a, b) {\n        return a[0] === b[0];\n      };\n    } else if (this.#numberOfComponents === 3) {\n      equalFunc = function (a, b) {\n        return a[0] === b[0] &&\n          a[1] === b[1] &&\n          a[2] === b[2];\n      };\n    }\n    const getEqualCallback = function (value) {\n      return function (item) {\n        return equalFunc(item, value);\n      };\n    };\n    // main loop\n    const res = new Array(values.length);\n    res.fill(false);\n    const valuesToFind = finalValues.slice();\n    let equal;\n    let indicesToRemove;\n    for (let i = 0, leni = this.#buffer.length;\n      i < leni; i = i + this.#numberOfComponents) {\n      indicesToRemove = [];\n      for (let v = 0; v < valuesToFind.length; ++v) {\n        equal = true;\n        // check value(s)\n        for (let j = 0; j < this.#numberOfComponents; ++j) {\n          if (this.#buffer[i + j] !== valuesToFind[v][j]) {\n            equal = false;\n            break;\n          }\n        }\n        // if found, store answer and add to indices to remove\n        if (equal) {\n          const valIndex = finalValues.findIndex(\n            getEqualCallback(valuesToFind[v]));\n          res[valIndex] = true;\n          indicesToRemove.push(v);\n        }\n      }\n      // remove found values\n      for (let r = 0; r < indicesToRemove.length; ++r) {\n        valuesToFind.splice(indicesToRemove[r], 1);\n      }\n      // exit if no values to find\n      if (valuesToFind.length === 0) {\n        break;\n      }\n    }\n    // return\n    return res;\n  }\n\n  /**\n   * Clone the image.\n   *\n   * @returns {Image} A clone of this image.\n   */\n  clone() {\n    // clone the image buffer\n    const clonedBuffer = this.#buffer.slice(0);\n    // create the image copy\n    const copy = new Image(this.getGeometry(), clonedBuffer, this.#imageUids);\n    // copy the RSI(s)\n    if (this.isConstantRSI()) {\n      copy.setRescaleSlopeAndIntercept(this.getRescaleSlopeAndIntercept());\n    } else {\n      for (let i = 0; i < this.#getSecondaryOffsetMax(); ++i) {\n        copy.setRescaleSlopeAndIntercept(\n          this.#getRescaleSlopeAndInterceptAtOffset(i), i);\n      }\n    }\n    // copy extras\n    copy.setPhotometricInterpretation(this.getPhotometricInterpretation());\n    copy.setPlanarConfiguration(this.getPlanarConfiguration());\n    copy.setMeta(this.getMeta());\n    // return\n    return copy;\n  }\n\n  /**\n   * Re-allocate buffer memory to an input size.\n   *\n   * @param {number} size The new size.\n   */\n  #realloc(size) {\n    // save buffer\n    let tmpBuffer = this.#buffer;\n    // create new\n    this.#buffer = getTypedArray(\n      this.#buffer.BYTES_PER_ELEMENT * 8,\n      this.#meta.PixelRepresentation,\n      size);\n    if (this.#buffer === null) {\n      throw new Error('Cannot reallocate data for image.');\n    }\n    // put old in new\n    this.#buffer.set(tmpBuffer);\n    // clean\n    tmpBuffer = null;\n  }\n\n  /**\n   * Append a slice to the image.\n   *\n   * @param {Image} rhs The slice to append.\n   * @fires Image#imagegeometrychange\n   */\n  appendSlice(rhs) {\n    // check input\n    if (rhs === null) {\n      throw new Error('Cannot append null slice');\n    }\n    const rhsSize = rhs.getGeometry().getSize();\n    let size = this.#geometry.getSize();\n    if (rhsSize.get(2) !== 1) {\n      throw new Error('Cannot append more than one slice');\n    }\n    if (size.get(0) !== rhsSize.get(0)) {\n      throw new Error('Cannot append a slice with different number of columns');\n    }\n    if (size.get(1) !== rhsSize.get(1)) {\n      throw new Error('Cannot append a slice with different number of rows');\n    }\n    if (!this.#geometry.getOrientation().isSimilar(\n      rhs.getGeometry().getOrientation(), REAL_WORLD_EPSILON)) {\n      throw new Error('Cannot append a slice with different orientation');\n    }\n    if (this.#photometricInterpretation !==\n      rhs.getPhotometricInterpretation()) {\n      throw new Error(\n        'Cannot append a slice with different photometric interpretation');\n    }\n    // all meta should be equal\n    for (const key in this.#meta) {\n      if (\n        key === 'windowPresets' ||\n        key === 'numberOfFiles' ||\n        key === 'custom' ||\n        // This was already checked with #geometry.getOrientation()\n        key === 'ImageOrientationPatient'\n      ) {\n        continue;\n      }\n\n      if (this.#meta[key] !== rhs.getMeta()[key]) {\n        throw new Error('Cannot append a slice with different ' + key +\n          ': ' + this.#meta[key] + ' != ' + rhs.getMeta()[key]);\n      }\n    }\n\n    // update ranges\n    const rhsRange = rhs.getDataRange();\n    const range = this.getDataRange();\n    this.#dataRange = {\n      min: Math.min(rhsRange.min, range.min),\n      max: Math.max(rhsRange.max, range.max),\n    };\n    const rhsResRange = rhs.getRescaledDataRange();\n    const resRange = this.getRescaledDataRange();\n    this.#rescaledDataRange = {\n      min: Math.min(rhsResRange.min, resRange.min),\n      max: Math.max(rhsResRange.max, resRange.max),\n    };\n\n    // possible time\n    const timeId = rhs.getGeometry().getInitialTime();\n\n    // append frame if needed\n    let isNewFrame = false;\n    if (typeof timeId !== 'undefined' &&\n      !this.#geometry.hasSlicesAtTime(timeId)) {\n      // update grometry\n      this.appendFrame(timeId, rhs.getGeometry().getOrigin());\n      // update size\n      size = this.#geometry.getSize();\n      // update flag\n      isNewFrame = true;\n    }\n\n    // get slice index\n    const index = getSliceIndex(this.#geometry, rhs.getGeometry());\n\n    // calculate slice size\n    const sliceSize = this.#numberOfComponents * size.getDimSize(2);\n\n    // create full buffer if not done yet\n    if (typeof this.#meta.numberOfFiles === 'undefined') {\n      throw new Error('Missing number of files for buffer manipulation.');\n    }\n    const fullBufferSize = sliceSize * this.#meta.numberOfFiles;\n    if (this.#buffer.length !== fullBufferSize) {\n      this.#realloc(fullBufferSize);\n    }\n\n    // slice index\n    const sliceIndex = index.get(2);\n\n    // slice index including possible 4D\n    let fullSliceIndex = sliceIndex;\n    if (typeof timeId !== 'undefined') {\n      fullSliceIndex +=\n        this.#geometry.getCurrentNumberOfSlicesBeforeTime(timeId);\n    }\n    // offset of the input slice\n    const indexOffset = fullSliceIndex * sliceSize;\n    const maxOffset =\n      this.#geometry.getCurrentTotalNumberOfSlices() * sliceSize;\n    // move content if needed\n    if (indexOffset < maxOffset) {\n      this.#buffer.set(\n        this.#buffer.subarray(indexOffset, maxOffset),\n        indexOffset + sliceSize\n      );\n    }\n    // add new slice content\n    this.#buffer.set(rhs.getBuffer(), indexOffset);\n\n    // update geometry\n    if (!isNewFrame) {\n      this.#geometry.appendOrigin(\n        rhs.getGeometry().getOrigin(), sliceIndex, timeId);\n    }\n    // update rsi\n    // (rhs should just have one rsi)\n    this.setRescaleSlopeAndIntercept(\n      rhs.getRescaleSlopeAndIntercept(), fullSliceIndex);\n\n    // current number of images\n    const numberOfImages = this.#imageUids.length;\n\n    // insert sop instance UIDs\n    this.#imageUids.splice(fullSliceIndex, 0, rhs.getImageUid());\n\n    // update window presets\n    if (typeof this.#meta.windowPresets !== 'undefined') {\n      const windowPresets = this.#meta.windowPresets;\n      const rhsPresets = rhs.getMeta().windowPresets;\n      const keys = Object.keys(rhsPresets);\n      let pkey = null;\n      for (let i = 0; i < keys.length; ++i) {\n        pkey = keys[i];\n        const rhsPreset = rhsPresets[pkey];\n        const windowPreset = windowPresets[pkey];\n        if (typeof windowPreset !== 'undefined') {\n          // if not set or false, check perslice\n          if (typeof windowPreset.perslice === 'undefined' ||\n            windowPreset.perslice === false) {\n            // if different preset.wl, mark it as perslice\n            if (!windowPreset.wl[0].equals(rhsPreset.wl[0])) {\n              windowPreset.perslice = true;\n              // fill wl array with copy of wl[0]\n              // (loop on number of images minus the existing one)\n              for (let j = 0; j < numberOfImages - 1; ++j) {\n                windowPreset.wl.push(windowPreset.wl[0]);\n              }\n            }\n          }\n          // store (first) rhs preset.wl if needed\n          if (typeof windowPreset.perslice !== 'undefined' &&\n            windowPreset.perslice === true) {\n            windowPresets[pkey].wl.splice(\n              fullSliceIndex, 0, rhsPreset.wl[0]);\n          }\n        } else {\n          // if not defined (it should be), store all\n          windowPresets[pkey] = rhsPresets[pkey];\n        }\n      }\n    }\n    /**\n     * Image geometry change event.\n     *\n     * @event Image#imagegeometrychange\n     * @type {object}\n     * @property {string} type The event type.\n     */\n    this.#fireEvent({\n      type: 'imagegeometrychange'\n    });\n  }\n\n  /**\n   * Append a frame buffer to the image.\n   *\n   * @param {object} frameBuffer The frame buffer to append.\n   * @param {number} frameIndex The frame index.\n   */\n  appendFrameBuffer(frameBuffer, frameIndex) {\n    // create full buffer if not done yet\n    const size = this.#geometry.getSize();\n    const frameSize = this.#numberOfComponents * size.getDimSize(2);\n    if (typeof this.#meta.numberOfFiles === 'undefined') {\n      throw new Error('Missing number of files for frame buffer manipulation.');\n    }\n    const fullBufferSize = frameSize * this.#meta.numberOfFiles;\n    if (this.#buffer.length !== fullBufferSize) {\n      this.#realloc(fullBufferSize);\n    }\n    // check index\n    if (frameIndex >= this.#meta.numberOfFiles) {\n      logger.warn('Ignoring frame at index ' + frameIndex +\n        ' (size: ' + this.#meta.numberOfFiles + ')');\n      return;\n    }\n    // append\n    this.#buffer.set(frameBuffer, frameSize * frameIndex);\n    // update geometry\n    this.appendFrame(frameIndex, new Point3D(0, 0, 0));\n  }\n\n  /**\n   * Append a frame to the image.\n   *\n   * @param {number} time The frame time value.\n   * @param {Point3D} origin The origin of the frame.\n   */\n  appendFrame(time, origin) {\n    this.#geometry.appendFrame(origin, time);\n    /**\n     * Append frame event.\n     *\n     * @event Image#appendframe\n     * @type {object}\n     * @property {string} type The event type.\n     */\n    this.#fireEvent({\n      type: 'appendframe'\n    });\n    // memory will be updated at the first appendSlice or appendFrameBuffer\n  }\n\n  /**\n   * Get the data range.\n   *\n   * @returns {NumberRange} The data range.\n   */\n  getDataRange() {\n    if (!this.#dataRange) {\n      this.#dataRange = this.calculateDataRange();\n    }\n    return this.#dataRange;\n  }\n\n  /**\n   * Get the rescaled data range.\n   *\n   * @returns {NumberRange} The rescaled data range.\n   */\n  getRescaledDataRange() {\n    if (!this.#rescaledDataRange) {\n      this.#rescaledDataRange = this.calculateRescaledDataRange();\n    }\n    return this.#rescaledDataRange;\n  }\n\n  /**\n   * Get the histogram.\n   *\n   * @returns {Array} The histogram.\n   */\n  getHistogram() {\n    if (!this.#histogram) {\n      const res = this.calculateHistogram();\n      this.#dataRange = res.dataRange;\n      this.#rescaledDataRange = res.rescaledDataRange;\n      this.#histogram = res.histogram;\n    }\n    return this.#histogram;\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  // ****************************************\n  // image data modifiers... carefull...\n  // ****************************************\n\n  /**\n   * Set the inner buffer values at given offsets.\n   *\n   * @param {number[]} offsets List of offsets where to set the data.\n   * @param {number|RGB} value The value to set at the given offsets.\n   * @fires Image#imagecontentchange\n   */\n  setAtOffsets(offsets, value) {\n    // value to array\n    let bufferValue;\n    if (typeof value === 'number') {\n      if (this.#numberOfComponents !== 1) {\n        throw new Error(\n          'Number of components is not 1 for setting single value.');\n      }\n      bufferValue = [value];\n    } else if (typeof value.r !== 'undefined' &&\n      typeof value.g !== 'undefined' &&\n      typeof value.b !== 'undefined') {\n      if (this.#numberOfComponents !== 3) {\n        throw new Error(\n          'Number of components is not 3 for setting RGB value.');\n      }\n      bufferValue = [value.r, value.g, value.b];\n    }\n\n    let offset;\n    for (let i = 0, leni = offsets.length; i < leni; ++i) {\n      offset = offsets[i];\n      for (let j = 0; j < this.#numberOfComponents; ++j) {\n        this.#buffer[offset + j] = bufferValue[j];\n      }\n    }\n    // fire imagecontentchange\n    this.#fireEvent({type: 'imagecontentchange'});\n  }\n\n  /**\n   * Set the inner buffer values at given offsets.\n   *\n   * @param {number[][]} offsetsLists List of offset lists where\n   *   to set the data.\n   * @param {number} value The value to set at the given offsets.\n   * @returns {Array} A list of objects representing the original values before\n   *  replacing them.\n   * @fires Image#imagecontentchange\n   */\n  setAtOffsetsAndGetOriginals(offsetsLists, value) {\n    const originalValuesLists = [];\n\n    // update and store\n    for (let j = 0; j < offsetsLists.length; ++j) {\n      const offsets = offsetsLists[j];\n      // first value\n      let offset = offsets[0];\n      let previousValue = this.#buffer[offset];\n      // original value storage\n      const originalValues = [];\n      originalValues.push({\n        index: 0,\n        value: previousValue\n      });\n      for (let i = 0; i < offsets.length; ++i) {\n        offset = offsets[i];\n        const currentValue = this.#buffer[offset];\n        // check if new value\n        if (previousValue !== currentValue) {\n          // store new value\n          originalValues.push({\n            index: i,\n            value: currentValue\n          });\n          previousValue = currentValue;\n        }\n        // write update value\n        this.#buffer[offset] = value;\n      }\n      originalValuesLists.push(originalValues);\n    }\n    // fire imagecontentchange\n    this.#fireEvent({type: 'imagecontentchange'});\n    return originalValuesLists;\n  }\n\n  /**\n   * Set the inner buffer values at given offsets.\n   *\n   * @param {number[][]} offsetsLists List of offset lists\n   *   where to set the data.\n   * @param {number|Array} value The value to set at the given offsets.\n   * @fires Image#imagecontentchange\n   */\n  setAtOffsetsWithIterator(offsetsLists, value) {\n    const isValueArray = Array.isArray(value);\n\n    for (let j = 0; j < offsetsLists.length; ++j) {\n      const offsets = offsetsLists[j];\n      let iterator;\n      if (isValueArray) {\n        // input value is a list of iterators\n        // created by setAtOffsetsAndGetOriginals\n        iterator = valueRange(\n          value[j], offsets.length);\n      } else {\n        // input value is a simple color\n        iterator = valueRange(\n          [{index: 0, value: value}], offsets.length);\n      }\n\n      // set values\n      let ival = iterator.next();\n      while (!ival.done) {\n        const offset = offsets[ival.index];\n        this.#buffer[offset] = ival.value;\n        ival = iterator.next();\n      }\n    }\n    /**\n     * Image content change event.\n     *\n     * @event Image#imagecontentchange\n     * @type {object}\n     * @property {string} type The event type.\n     */\n    this.#fireEvent({type: 'imagecontentchange'});\n  }\n\n  /**\n   * Get the value of the image at a specific coordinate.\n   *\n   * @param {number} i The X index.\n   * @param {number} j The Y index.\n   * @param {number} k The Z index.\n   * @param {number} f The frame number.\n   * @returns {number} The value at the desired position.\n   * Warning: No size check...\n   */\n  getValue(i, j, k, f) {\n    const frame = (f || 0);\n    const index = new Index([i, j, k, frame]);\n    return this.getValueAtOffset(\n      this.getGeometry().getSize().indexToOffset(index));\n  }\n\n  /**\n   * Get the value of the image at a specific index.\n   *\n   * @param {Index} index The index.\n   * @returns {number} The value at the desired position.\n   * Warning: No size check...\n   */\n  getValueAtIndex(index) {\n    return this.getValueAtOffset(\n      this.getGeometry().getSize().indexToOffset(index));\n  }\n\n  /**\n   * Get the rescaled value of the image at a specific position.\n   *\n   * @param {number} i The X index.\n   * @param {number} j The Y index.\n   * @param {number} k The Z index.\n   * @param {number} f The frame number.\n   * @returns {number} The rescaled value at the desired position.\n   * Warning: No size check...\n   */\n  getRescaledValue(i, j, k, f) {\n    if (typeof f === 'undefined') {\n      f = 0;\n    }\n    let val = this.getValue(i, j, k, f);\n    if (!this.isIdentityRSI()) {\n      if (this.isConstantRSI()) {\n        val = this.getRescaleSlopeAndIntercept().apply(val);\n      } else {\n        const values = [i, j, k, f];\n        const index = new Index(values);\n        val = this.getRescaleSlopeAndIntercept(index).apply(val);\n      }\n    }\n    return val;\n  }\n\n  /**\n   * Get the rescaled value of the image at a specific index.\n   *\n   * @param {Index} index The index.\n   * @returns {number} The rescaled value at the desired position.\n   * Warning: No size check...\n   */\n  getRescaledValueAtIndex(index) {\n    return this.getRescaledValueAtOffset(\n      this.getGeometry().getSize().indexToOffset(index)\n    );\n  }\n\n  /**\n   * Get the rescaled value of the image at a specific offset.\n   *\n   * @param {number} offset The desired offset.\n   * @returns {number} The rescaled value at the desired offset.\n   * Warning: No size check...\n   */\n  getRescaledValueAtOffset(offset) {\n    let val = this.getValueAtOffset(offset);\n    if (!this.isIdentityRSI()) {\n      if (this.isConstantRSI()) {\n        val = this.getRescaleSlopeAndIntercept().apply(val);\n      } else {\n        const index = this.getGeometry().getSize().offsetToIndex(offset);\n        val = this.getRescaleSlopeAndIntercept(index).apply(val);\n      }\n    }\n    return val;\n  }\n\n  /**\n   * Calculate the data range of the image.\n   * WARNING: for speed reasons, only calculated on the first frame...\n   *\n   * @returns {object} The range {min, max}.\n   */\n  calculateDataRange() {\n    let min = this.getValueAtOffset(0);\n    let max = min;\n    let value = 0;\n    const size = this.getGeometry().getSize();\n    let leni = size.getTotalSize();\n    // max to 3D\n    if (size.length() >= 3) {\n      leni = size.getDimSize(3);\n    }\n    for (let i = 0; i < leni; ++i) {\n      value = this.getValueAtOffset(i);\n      if (value > max) {\n        max = value;\n      }\n      if (value < min) {\n        min = value;\n      }\n    }\n    // return\n    return {min: min, max: max};\n  }\n\n  /**\n   * Calculate the rescaled data range of the image.\n   * WARNING: for speed reasons, only calculated on the first frame...\n   *\n   * @returns {object} The range {min, max}.\n   */\n  calculateRescaledDataRange() {\n    if (this.isIdentityRSI()) {\n      return this.getDataRange();\n    } else if (this.isConstantRSI()) {\n      const range = this.getDataRange();\n      const resmin = this.getRescaleSlopeAndIntercept().apply(range.min);\n      const resmax = this.getRescaleSlopeAndIntercept().apply(range.max);\n      return {\n        min: ((resmin < resmax) ? resmin : resmax),\n        max: ((resmin > resmax) ? resmin : resmax)\n      };\n    } else {\n      let rmin = this.getRescaledValueAtOffset(0);\n      let rmax = rmin;\n      let rvalue = 0;\n      const size = this.getGeometry().getSize();\n      let leni = size.getTotalSize();\n      // max to 3D\n      if (size.length() === 3) {\n        leni = size.getDimSize(3);\n      }\n      for (let i = 0; i < leni; ++i) {\n        rvalue = this.getRescaledValueAtOffset(i);\n        if (rvalue > rmax) {\n          rmax = rvalue;\n        }\n        if (rvalue < rmin) {\n          rmin = rvalue;\n        }\n      }\n      // return\n      return {min: rmin, max: rmax};\n    }\n  }\n\n  /**\n   * Calculate the histogram of the image.\n   *\n   * @returns {object} The histogram, data range and rescaled data range.\n   */\n  calculateHistogram() {\n    const size = this.getGeometry().getSize();\n    const histo = [];\n    let min = this.getValueAtOffset(0);\n    let max = min;\n    let value = 0;\n    let rmin = this.getRescaledValueAtOffset(0);\n    let rmax = rmin;\n    let rvalue = 0;\n    for (let i = 0, leni = size.getTotalSize(); i < leni; ++i) {\n      value = this.getValueAtOffset(i);\n      if (value > max) {\n        max = value;\n      }\n      if (value < min) {\n        min = value;\n      }\n      rvalue = this.getRescaledValueAtOffset(i);\n      if (rvalue > rmax) {\n        rmax = rvalue;\n      }\n      if (rvalue < rmin) {\n        rmin = rvalue;\n      }\n      histo[rvalue] = (histo[rvalue] || 0) + 1;\n    }\n    // set data range\n    const dataRange = {min: min, max: max};\n    const rescaledDataRange = {min: rmin, max: rmax};\n    // generate data for plotting\n    const histogram = [];\n    for (let b = rmin; b <= rmax; ++b) {\n      histogram.push([b, (histo[b] || 0)]);\n    }\n    // return\n    return {\n      dataRange: dataRange,\n      rescaledDataRange: rescaledDataRange,\n      histogram: histogram\n    };\n  }\n\n  /**\n   * Convolute the image with a given 2D kernel.\n   *\n   * Note: Uses raw buffer values.\n   *\n   * @param {number[]} weights The weights of the 2D kernel as a 3x3 matrix.\n   * @returns {Image} The convoluted image.\n   */\n  convolute2D(weights) {\n    if (weights.length !== 9) {\n      throw new Error(\n        'The convolution matrix does not have a length of 9; it has ' +\n        weights.length);\n    }\n\n    const newImage = this.clone();\n    const newBuffer = newImage.getBuffer();\n\n    const imgSize = this.getGeometry().getSize();\n    const dimOffset = imgSize.getDimSize(2) * this.getNumberOfComponents();\n    for (let k = 0; k < imgSize.get(2); ++k) {\n      this.convoluteBuffer(weights, newBuffer, k * dimOffset);\n    }\n\n    return newImage;\n  }\n\n  /**\n   * Convolute an image buffer with a given 2D kernel.\n   *\n   * Note: Uses raw buffer values.\n   *\n   * @param {number[]} weights The weights of the 2D kernel as a 3x3 matrix.\n   * @param {TypedArray} buffer The buffer to convolute.\n   * @param {number} startOffset The index to start at.\n   */\n  convoluteBuffer(\n    weights, buffer, startOffset) {\n    const imgSize = this.getGeometry().getSize();\n    const ncols = imgSize.get(0);\n    const nrows = imgSize.get(1);\n    const ncomp = this.getNumberOfComponents();\n\n    // number of component and planar configuration vars\n    let factor = 1;\n    let componentOffset = 1;\n    if (ncomp === 3) {\n      if (this.getPlanarConfiguration() === 0) {\n        factor = 3;\n      } else {\n        componentOffset = imgSize.getDimSize(2);\n      }\n    }\n\n    // allow special indent for matrices\n    /*jshint indent:false */\n\n    // default weight offset matrix\n    const wOff = [];\n    wOff[0] = (-ncols - 1) * factor;\n    wOff[1] = (-ncols) * factor;\n    wOff[2] = (-ncols + 1) * factor;\n    wOff[3] = -factor;\n    wOff[4] = 0;\n    wOff[5] = 1 * factor;\n    wOff[6] = (ncols - 1) * factor;\n    wOff[7] = (ncols) * factor;\n    wOff[8] = (ncols + 1) * factor;\n\n    // border weight offset matrices\n    // borders are extended (see http://en.wikipedia.org/wiki/Kernel_%28image_processing%29)\n\n    // i=0, j=0\n    const wOff00 = [];\n    wOff00[0] = wOff[4]; wOff00[1] = wOff[4]; wOff00[2] = wOff[5];\n    wOff00[3] = wOff[4]; wOff00[4] = wOff[4]; wOff00[5] = wOff[5];\n    wOff00[6] = wOff[7]; wOff00[7] = wOff[7]; wOff00[8] = wOff[8];\n    // i=0, j=*\n    const wOff0x = [];\n    wOff0x[0] = wOff[1]; wOff0x[1] = wOff[1]; wOff0x[2] = wOff[2];\n    wOff0x[3] = wOff[4]; wOff0x[4] = wOff[4]; wOff0x[5] = wOff[5];\n    wOff0x[6] = wOff[7]; wOff0x[7] = wOff[7]; wOff0x[8] = wOff[8];\n    // i=0, j=nrows\n    const wOff0n = [];\n    wOff0n[0] = wOff[1]; wOff0n[1] = wOff[1]; wOff0n[2] = wOff[2];\n    wOff0n[3] = wOff[4]; wOff0n[4] = wOff[4]; wOff0n[5] = wOff[5];\n    wOff0n[6] = wOff[4]; wOff0n[7] = wOff[4]; wOff0n[8] = wOff[5];\n\n    // i=*, j=0\n    const wOffx0 = [];\n    wOffx0[0] = wOff[3]; wOffx0[1] = wOff[4]; wOffx0[2] = wOff[5];\n    wOffx0[3] = wOff[3]; wOffx0[4] = wOff[4]; wOffx0[5] = wOff[5];\n    wOffx0[6] = wOff[6]; wOffx0[7] = wOff[7]; wOffx0[8] = wOff[8];\n    // i=*, j=* -> wOff\n    // i=*, j=nrows\n    const wOffxn = [];\n    wOffxn[0] = wOff[0]; wOffxn[1] = wOff[1]; wOffxn[2] = wOff[2];\n    wOffxn[3] = wOff[3]; wOffxn[4] = wOff[4]; wOffxn[5] = wOff[5];\n    wOffxn[6] = wOff[3]; wOffxn[7] = wOff[4]; wOffxn[8] = wOff[5];\n\n    // i=ncols, j=0\n    const wOffn0 = [];\n    wOffn0[0] = wOff[3]; wOffn0[1] = wOff[4]; wOffn0[2] = wOff[4];\n    wOffn0[3] = wOff[3]; wOffn0[4] = wOff[4]; wOffn0[5] = wOff[4];\n    wOffn0[6] = wOff[6]; wOffn0[7] = wOff[7]; wOffn0[8] = wOff[7];\n    // i=ncols, j=*\n    const wOffnx = [];\n    wOffnx[0] = wOff[0]; wOffnx[1] = wOff[1]; wOffnx[2] = wOff[1];\n    wOffnx[3] = wOff[3]; wOffnx[4] = wOff[4]; wOffnx[5] = wOff[4];\n    wOffnx[6] = wOff[6]; wOffnx[7] = wOff[7]; wOffnx[8] = wOff[7];\n    // i=ncols, j=nrows\n    const wOffnn = [];\n    wOffnn[0] = wOff[0]; wOffnn[1] = wOff[1]; wOffnn[2] = wOff[1];\n    wOffnn[3] = wOff[3]; wOffnn[4] = wOff[4]; wOffnn[5] = wOff[4];\n    wOffnn[6] = wOff[3]; wOffnn[7] = wOff[4]; wOffnn[8] = wOff[4];\n\n    // restore indent for rest of method\n    /*jshint indent:4 */\n\n    // loop vars\n    let pixelOffset = startOffset;\n    let newValue = 0;\n    let wOffFinal = [];\n    for (let c = 0; c < ncomp; ++c) {\n      // component offset\n      pixelOffset += c * componentOffset;\n      for (let j = 0; j < nrows; ++j) {\n        for (let i = 0; i < ncols; ++i) {\n          wOffFinal = wOff;\n          // special border cases\n          if (i === 0 && j === 0) {\n            wOffFinal = wOff00;\n          } else if (i === 0 && j === (nrows - 1)) {\n            wOffFinal = wOff0n;\n          } else if (i === (ncols - 1) && j === 0) {\n            wOffFinal = wOffn0;\n          } else if (i === (ncols - 1) && j === (nrows - 1)) {\n            wOffFinal = wOffnn;\n          } else if (i === 0 && j !== (nrows - 1) && j !== 0) {\n            wOffFinal = wOff0x;\n          } else if (i === (ncols - 1) && j !== (nrows - 1) && j !== 0) {\n            wOffFinal = wOffnx;\n          } else if (i !== 0 && i !== (ncols - 1) && j === 0) {\n            wOffFinal = wOffx0;\n          } else if (i !== 0 && i !== (ncols - 1) && j === (nrows - 1)) {\n            wOffFinal = wOffxn;\n          }\n          // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n          newValue = 0;\n          for (let wi = 0; wi < 9; ++wi) {\n            newValue += this.getValueAtOffset(\n              pixelOffset + wOffFinal[wi]) * weights[wi];\n          }\n          buffer[pixelOffset] = newValue;\n          // increment pixel offset\n          pixelOffset += factor;\n        }\n      }\n    }\n  }\n\n  /**\n   * Transform an image using a specific operator.\n   * WARNING: no size check!\n   *\n   * @param {Function} operator The operator to use when transforming.\n   * @returns {Image} The transformed image.\n   * Note: Uses the raw buffer values.\n   */\n  transform(operator) {\n    const newImage = this.clone();\n    const newBuffer = newImage.getBuffer();\n    for (let i = 0, leni = newBuffer.length; i < leni; ++i) {\n      newBuffer[i] = operator(newImage.getValueAtOffset(i));\n    }\n    return newImage;\n  }\n\n  /**\n   * Compose this image with another one and using a specific operator.\n   * WARNING: no size check!\n   *\n   * @param {Image} rhs The image to compose with.\n   * @param {Function} operator The operator to use when composing.\n   * @returns {Image} The composed image.\n   * Note: Uses the raw buffer values.\n   */\n  compose(rhs, operator) {\n    const newImage = this.clone();\n    const newBuffer = newImage.getBuffer();\n    for (let i = 0, leni = newBuffer.length; i < leni; ++i) {\n      // using the operator on the local buffer, i.e. the\n      // latest (not original) data\n      newBuffer[i] = Math.floor(\n        operator(this.getValueAtOffset(i), rhs.getValueAtOffset(i))\n      );\n    }\n    return newImage;\n  }\n\n} // class Image\n","import {custom} from '../app/custom';\nimport {View} from './view';\nimport {WindowLevel} from './windowLevel';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\nimport {DataElement} from '../dicom/dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * List of default window level presets.\n *\n * @type {Object.<string, Object.<string, WindowLevel>>}\n */\nconst defaultWlPresets = {\n  CT: {\n    mediastinum: new WindowLevel(40, 400),\n    lung: new WindowLevel(-500, 1500),\n    bone: new WindowLevel(500, 2000),\n    brain: new WindowLevel(40, 80),\n    head: new WindowLevel(90, 350)\n  }\n};\n\n/**\n * {@link View} factory.\n */\nexport class ViewFactory {\n\n  /**\n   * Get an View object from the read DICOM file.\n   *\n   * @param {Object<string, DataElement>} dataElements The DICOM tags.\n   * @param {Image} image The associated image.\n   * @returns {View} The new View.\n   */\n  create(dataElements, image) {\n    // view\n    const view = new View(image);\n\n    // default color map\n    if (image.getPhotometricInterpretation() === 'MONOCHROME1') {\n      view.setColourMap('invPlain');\n    }\n\n    // window level presets\n    let windowPresets = {};\n    // image presets\n    if (typeof image.getMeta().windowPresets !== 'undefined') {\n      windowPresets = image.getMeta().windowPresets;\n    }\n    // min/max\n    // Not filled yet since it is stil too costly to calculate min/max\n    // for each slice... It will be filled at first use\n    // (see view.setWindowLevelPreset).\n    // Order is important, if no wl from DICOM, this will be the default.\n    windowPresets.minmax = {name: 'minmax'};\n    // optional modality presets\n    const modality = image.getMeta().Modality;\n    let wlPresets;\n    if (typeof custom.wlPresets !== 'undefined' &&\n      typeof custom.wlPresets[modality] !== 'undefined') {\n      wlPresets = custom.wlPresets[modality];\n    } else {\n      wlPresets = defaultWlPresets[modality];\n    }\n    for (const key in wlPresets) {\n      const preset = wlPresets[key];\n      windowPresets[key] = {\n        wl: [new WindowLevel(preset.center, preset.width)],\n        name: key\n      };\n    }\n\n    // store\n    view.setWindowPresets(windowPresets);\n\n    // initialise the view\n    view.init();\n\n    return view;\n  }\n\n} // class ViewFactory\n","import {Index} from '../math/index';\nimport {ModalityLut} from './modalityLut';\nimport {WindowLut} from './windowLut';\nimport {luts} from './luts';\nimport {VoiLut} from './voiLut';\nimport {WindowLevel} from './windowLevel';\nimport {generateImageDataMonochrome} from './viewMonochrome';\nimport {generateImageDataPaletteColor} from './viewPaletteColor';\nimport {generateImageDataRgb} from './viewRgb';\nimport {generateImageDataYbrFull} from './viewYbrFull';\nimport {ViewFactory} from './viewFactory';\nimport {isIdentityMat33} from '../math/matrix';\nimport {getSliceIterator} from '../image/iterator';\nimport {ListenerHandler} from '../utils/listen';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\nimport {RescaleSlopeAndIntercept} from './rsi';\nimport {ColourMap} from './luts';\nimport {Matrix33} from '../math/matrix';\nimport {\n  Point,\n  Point3D\n} from '../math/point';\nimport {DataElement} from '../dicom/dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * List of view event names.\n *\n * @type {string[]}\n */\nexport const viewEventNames = [\n  'wlchange',\n  'wlpresetadd',\n  'colourmapchange',\n  'positionchange',\n  'opacitychange',\n  'alphafuncchange'\n];\n\n/**\n * Create a View from DICOM elements and image.\n *\n * @param {Object<string, DataElement>} elements The DICOM elements.\n * @param {Image} image The associated image.\n * @returns {View} The View object.\n */\nexport function createView(elements, image) {\n  const factory = new ViewFactory();\n  return factory.create(elements, image);\n}\n\n/**\n * View class.\n *\n * Need to set the window lookup table once created\n * (either directly or with helper methods).\n *\n * @example\n * // XMLHttpRequest onload callback\n * const onload = function (event) {\n *   // parse the dicom buffer\n *   const dicomParser = new dwv.DicomParser();\n *   dicomParser.parse(event.target.response);\n *   // create the image object\n *   const image = dwv.createImage(dicomParser.getDicomElements());\n *   // create the view\n *   const view = dwv.createView(dicomParser.getDicomElements(), image);\n *   // setup canvas\n *   const canvas = document.createElement('canvas');\n *   canvas.width = 256;\n *   canvas.height = 256;\n *   const ctx = canvas.getContext(\"2d\");\n *   // update the image data\n *   const imageData = ctx.createImageData(256, 256);\n *   view.generateImageData(imageData);\n *   ctx.putImageData(imageData, 0, 0);\n *   // update html\n *   const div = document.getElementById('dwv');\n *   div.appendChild(canvas);;\n * };\n * // DICOM file request\n * const request = new XMLHttpRequest();\n * const url = 'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm';\n * request.open('GET', url);\n * request.responseType = 'arraybuffer';\n * request.onload = onload;\n * request.send();\n */\nexport class View {\n\n  /**\n   * The associated image.\n   *\n   * @type {Image}\n   */\n  #image;\n\n  /**\n   * Window lookup tables, indexed per Rescale Slope and Intercept (RSI).\n   *\n   * @type {WindowLut}\n   */\n  #windowLut;\n\n  /**\n   * Flag for image constant RSI.\n   *\n   * @type {boolean}\n   */\n  #isConstantRSI;\n\n  /**\n   * Window presets.\n   * Minmax will be filled at first use (see view.setWindowLevelPreset).\n   *\n   * @type {object}\n   */\n  #windowPresets = {minmax: {name: 'minmax'}};\n\n  /**\n   * Current window preset name.\n   *\n   * @type {string}\n   */\n  #currentPresetName = null;\n\n  /**\n   * Current window level.\n   *\n   * @type {WindowLevel}\n   */\n  #currentWl;\n\n  /**\n   * Colour map name.\n   *\n   * @type {string}\n   */\n  #colourMapName = 'plain';\n\n  /**\n   * Current position as a Point.\n   * Store position and not index to stay geometry independent.\n   *\n   * @type {Point}\n   */\n  #currentPosition = null;\n\n  /**\n   * View orientation. Undefined will use the original slice ordering.\n   *\n   * @type {Matrix33}\n   */\n  #orientation;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * @param {Image} image The associated image.\n   */\n  constructor(image) {\n    this.#image = image;\n\n    // listen to appendframe event to update the current position\n    //   to add the extra dimension\n    this.#image.addEventListener('appendframe', () => {\n      // update current position if first appendFrame\n      const index = this.getCurrentIndex();\n      if (index.length() === 3) {\n        // add dimension\n        const values = index.getValues();\n        values.push(0);\n        this.setCurrentIndex(new Index(values));\n      }\n    });\n  }\n\n  /**\n   * Get the associated image.\n   *\n   * @returns {Image} The associated image.\n   */\n  getImage() {\n    return this.#image;\n  }\n\n  /**\n   * Set the associated image.\n   *\n   * @param {Image} inImage The associated image.\n   */\n  setImage(inImage) {\n    this.#image = inImage;\n  }\n\n  /**\n   * Get the view orientation.\n   *\n   * @returns {Matrix33} The orientation matrix.\n   */\n  getOrientation() {\n    return this.#orientation;\n  }\n\n  /**\n   * Set the view orientation.\n   *\n   * @param {Matrix33} mat33 The orientation matrix.\n   */\n  setOrientation(mat33) {\n    this.#orientation = mat33;\n  }\n\n  /**\n   * Initialise the view: set initial index.\n   */\n  init() {\n    this.setInitialIndex();\n  }\n\n  /**\n   * Set the initial index to the middle position.\n   */\n  setInitialIndex() {\n    const geometry = this.#image.getGeometry();\n    const size = geometry.getSize();\n    const values = new Array(size.length());\n    values.fill(0);\n    // middle\n    values[0] = Math.floor(size.get(0) / 2);\n    values[1] = Math.floor(size.get(1) / 2);\n    values[2] = Math.floor(size.get(2) / 2);\n    this.setCurrentIndex(new Index(values), true);\n  }\n\n  /**\n   * Get the milliseconds per frame from frame rate.\n   *\n   * @param {number} recommendedDisplayFrameRate Recommended Display Frame Rate.\n   * @returns {number} The milliseconds per frame.\n   */\n  getPlaybackMilliseconds(recommendedDisplayFrameRate) {\n    if (!recommendedDisplayFrameRate) {\n      // Default to 10 FPS if none is found in the meta\n      recommendedDisplayFrameRate = 10;\n    }\n    // round milliseconds per frame to nearest whole number\n    return Math.round(1000 / recommendedDisplayFrameRate);\n  }\n\n  /**\n   * Per value alpha function.\n   *\n   * @param {number[]|number} _value The pixel value.\n   *   Can be a number for monochrome data or an array for RGB data.\n   * @param {number} _index The index of the value.\n   * @returns {number} The coresponding alpha [0,255].\n   */\n  #alphaFunction = function (_value, _index) {\n    // default always returns fully visible\n    return 0xff;\n  };\n\n  /**\n   * @callback alphaFn\n   * @param {number[]|number} value The pixel value.\n   * @param {number} index The values' index.\n   * @returns {number} The opacity of the input value.\n   */\n\n  /**\n   * Get the alpha function.\n   *\n   * @returns {alphaFn} The function.\n   */\n  getAlphaFunction() {\n    return this.#alphaFunction;\n  }\n\n  /**\n   * Set alpha function.\n   *\n   * @param {alphaFn} func The function.\n   * @fires View#alphafuncchange\n   */\n  setAlphaFunction(func) {\n    this.#alphaFunction = func;\n    /**\n     * Alpha func change event.\n     *\n     * @event View#alphafuncchange\n     * @type {object}\n     * @property {string} type The event type.\n     */\n    this.#fireEvent({\n      type: 'alphafuncchange'\n    });\n  }\n\n  /**\n   * Get the window LUT of the image.\n   * Warning: can be undefined in no window/level was set.\n   *\n   * @returns {WindowLut} The window LUT of the image.\n   * @fires View#wlchange\n   */\n  #getCurrentWindowLut() {\n    // special case for 'perslice' presets\n    if (this.#currentPresetName &&\n      typeof this.#windowPresets[this.#currentPresetName] !== 'undefined' &&\n      typeof this.#windowPresets[this.#currentPresetName].perslice !==\n        'undefined' &&\n      this.#windowPresets[this.#currentPresetName].perslice === true) {\n      // check position\n      if (!this.getCurrentIndex()) {\n        this.setInitialIndex();\n      }\n      // get the slice window level\n      const currentIndex = this.getCurrentIndex();\n      const offset = this.#image.getSecondaryOffset(currentIndex);\n      const currentPreset = this.#windowPresets[this.#currentPresetName];\n      const sliceWl = currentPreset.wl[offset];\n      // set window level: will send a change event, mark it as silent as\n      // this change is always triggered by a position change\n      this.setWindowLevel(sliceWl, this.#currentPresetName, true);\n    }\n\n    // if no current, use first id\n    if (typeof this.#currentWl === 'undefined') {\n      this.setWindowLevelPresetById(0, true);\n    }\n\n    // get the window lut\n    if (typeof this.#isConstantRSI === 'undefined' ||\n      this.#image.isConstantRSI() !== this.#isConstantRSI) {\n      this.#isConstantRSI = this.#image.isConstantRSI();\n      // set or update windowLut if isConstantRSI has changed\n      // (can be different at first slice and after having loaded\n      //  the full volume...)\n      let rsi;\n      let isDiscrete;\n      if (this.#isConstantRSI) {\n        rsi = this.#image.getRescaleSlopeAndIntercept();\n        isDiscrete = true;\n      } else {\n        rsi = new RescaleSlopeAndIntercept(1, 0);\n        isDiscrete = false;\n      }\n      // create the rescale lookup table\n      const modalityLut = new ModalityLut(\n        rsi,\n        this.#image.getMeta().BitsStored);\n      // create the window lookup table\n      this.#windowLut = new WindowLut(\n        modalityLut,\n        this.#image.getMeta().PixelRepresentation === 1,\n        isDiscrete);\n    }\n\n    // update VOI lut if not present or its window level\n    // is different from the current one\n    const voiLut = this.#windowLut.getVoiLut();\n    let voiLutWl;\n    if (typeof voiLut !== 'undefined') {\n      voiLutWl = voiLut.getWindowLevel();\n    }\n    if (typeof voiLut === 'undefined' ||\n      !this.#currentWl.equals(voiLutWl)) {\n      // set lut window level\n      const voiLut = new VoiLut(this.#currentWl);\n      this.#windowLut.setVoiLut(voiLut);\n    }\n\n    // return\n    return this.#windowLut;\n  }\n\n  /**\n   * Get the window presets.\n   *\n   * @returns {object} The window presets.\n   */\n  getWindowPresets() {\n    return this.#windowPresets;\n  }\n\n  /**\n   * Get the window presets names.\n   *\n   * @returns {string[]} The list of window presets names.\n   */\n  getWindowPresetsNames() {\n    return Object.keys(this.#windowPresets);\n  }\n\n  /**\n   * Set the window presets.\n   *\n   * @param {object} presets The window presets.\n   */\n  setWindowPresets(presets) {\n    this.#windowPresets = presets;\n  }\n\n  /**\n   * Add window presets to the existing ones.\n   *\n   * @param {object} presets The window presets.\n   */\n  addWindowPresets(presets) {\n    const keys = Object.keys(presets);\n    let key = null;\n    for (let i = 0; i < keys.length; ++i) {\n      key = keys[i];\n      if (typeof this.#windowPresets[key] !== 'undefined') {\n        if (typeof this.#windowPresets[key].perslice !== 'undefined' &&\n          this.#windowPresets[key].perslice === true) {\n          throw new Error('Cannot add perslice preset');\n        } else {\n          // update existing\n          this.#windowPresets[key] = presets[key];\n        }\n      } else {\n        // add new\n        this.#windowPresets[key] = presets[key];\n        // fire event\n        /**\n         * Window/level add preset event.\n         *\n         * @event View#wlpresetadd\n         * @type {object}\n         * @property {string} type The event type.\n         * @property {string} name The name of the preset.\n         */\n        this.#fireEvent({\n          type: 'wlpresetadd',\n          name: key\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the current window level preset name.\n   *\n   * @returns {string} The preset name.\n   */\n  getCurrentWindowPresetName() {\n    return this.#currentPresetName;\n  }\n\n  /**\n   * Get the colour map of the image.\n   *\n   * @returns {string} The colour map name.\n   */\n  getColourMap() {\n    return this.#colourMapName;\n  }\n\n  /**\n   * Get the colour map object.\n   *\n   * @returns {ColourMap} The colour map.\n   */\n  #getColourMapLut() {\n    return luts[this.#colourMapName];\n  }\n\n  /**\n   * Set the colour map of the image.\n   *\n   * @param {string} name The colour map name.\n   * @fires View#colourmapchange\n   */\n  setColourMap(name) {\n    // check if we have it\n    if (!luts[name]) {\n      throw new Error('Unknown colour map: \\'' + name + '\\'');\n    }\n\n    this.#colourMapName = name;\n\n    /**\n     * Color change event.\n     *\n     * @event View#colourmapchange\n     * @type {object}\n     * @property {string} type The event type.\n     * @property {Array} value The changed value.\n     */\n    this.#fireEvent({\n      type: 'colourmapchange',\n      value: [name]\n    });\n  }\n\n  /**\n   * Get the current position.\n   *\n   * @returns {Point} The current position.\n   */\n  getCurrentPosition() {\n    return this.#currentPosition;\n  }\n\n  /**\n   * Get the current index.\n   *\n   * @returns {Index} The current index.\n   */\n  getCurrentIndex() {\n    const position = this.getCurrentPosition();\n    if (!position) {\n      return null;\n    }\n    const geometry = this.getImage().getGeometry();\n    return geometry.worldToIndex(position);\n  }\n\n  /**\n   * Get the SOP image UID of the current image.\n   *\n   * @returns {string} The UID.\n   */\n  getCurrentImageUid() {\n    return this.#image.getImageUid(this.getCurrentIndex());\n  }\n\n  /**\n   * Get the image origin for a image UID.\n   *\n   * @param {string} uid The UID.\n   * @returns {Point3D|undefined} The origin.\n   */\n  getOriginForImageUid(uid) {\n    return this.#image.getOriginForImageUid(uid);\n  }\n\n  /**\n   * Check if the image includes an UID.\n   *\n   * @param {string} uid The UID.\n   * @returns {boolean} True if present.\n   */\n  includesImageUid(uid) {\n    return this.#image.includesImageUid(uid);\n  }\n\n  /**\n   * Check if the current position (default) or\n   * the provided position is in bounds.\n   *\n   * @param {Point} [position] Optional position.\n   * @returns {boolean} True is the position is in bounds.\n   */\n  isPositionInBounds(position) {\n    if (typeof position === 'undefined') {\n      position = this.#currentPosition;\n    }\n    const geometry = this.#image.getGeometry();\n    const index = geometry.worldToIndex(position);\n    const dirs = [this.getScrollDimIndex()];\n    if (index.length() === 4) {\n      dirs.push(3);\n    }\n    return geometry.isIndexInBounds(index, dirs);\n  }\n\n  /**\n   * Get the first origin or at a given position.\n   *\n   * @param {Point} [position] Optional position.\n   * @returns {Point3D} The origin.\n   */\n  getOrigin(position) {\n    const geometry = this.#image.getGeometry();\n    let originIndex = 0;\n    if (typeof position !== 'undefined') {\n      const index = geometry.worldToIndex(position);\n      // index is reoriented, 2 is scroll index\n      originIndex = index.get(2);\n    }\n    return geometry.getOrigins()[originIndex];\n  }\n\n  /**\n   * Set the current position via an index.\n   *\n   * @param {Index} index The new index.\n   * @param {boolean} [silent] Flag to fire event or not.\n   * @returns {boolean} False if not in bounds.\n   * @fires View#positionchange\n   */\n  setCurrentIndex(index, silent) {\n    const geometry = this.#image.getGeometry();\n    const position = geometry.indexToWorld(index);\n    return this.setCurrentPosition(position, silent);\n  }\n\n  /**\n   * Set current position.\n   *\n   * @param {Point} position The new position.\n   * @param {boolean} [silent] Flag to fire event or not.\n   * @returns {boolean} False if not in bounds.\n   * @fires View#positionchange\n   */\n  setCurrentPosition(position, silent) {\n    // check input\n    if (typeof silent === 'undefined') {\n      silent = false;\n    }\n\n    const geometry = this.#image.getGeometry();\n    const index = geometry.worldToIndex(position);\n\n    // check if possible\n    const dirs = [this.getScrollDimIndex()];\n    if (index.length() === 4) {\n      dirs.push(3);\n    }\n    if (!geometry.isIndexInBounds(index, dirs)) {\n      this.#currentPosition = position;\n      if (!silent) {\n        // fire event with valid: false\n        this.#fireEvent({\n          type: 'positionchange',\n          value: [\n            index.getValues(),\n            position.getValues(),\n          ],\n          valid: false\n        });\n      }\n\n      // do no send invalid positionchange event: avoid empty repaint\n      return false;\n    }\n\n    // calculate diff dims before updating internal\n    let diffDims = null;\n    let currentIndex = null;\n    if (this.getCurrentPosition()) {\n      currentIndex = this.getCurrentIndex();\n    }\n    if (currentIndex) {\n      if (currentIndex.canCompare(index)) {\n        diffDims = currentIndex.compare(index);\n      } else {\n        diffDims = [];\n        const minLen = Math.min(currentIndex.length(), index.length());\n        for (let i = 0; i < minLen; ++i) {\n          if (currentIndex.get(i) !== index.get(i)) {\n            diffDims.push(i);\n          }\n        }\n        const maxLen = Math.max(currentIndex.length(), index.length());\n        for (let j = minLen; j < maxLen; ++j) {\n          diffDims.push(j);\n        }\n      }\n    } else {\n      diffDims = [];\n      for (let k = 0; k < index.length(); ++k) {\n        diffDims.push(k);\n      }\n    }\n\n    // assign\n    this.#currentPosition = position;\n\n    if (!silent) {\n      /**\n       * Position change event.\n       *\n       * @event View#positionchange\n       * @type {object}\n       * @property {Array} value The changed value as [index, pixelValue].\n       * @property {number[]} diffDims An array of modified indices.\n       */\n      const posEvent = {\n        type: 'positionchange',\n        value: [\n          index.getValues(),\n          position.getValues(),\n        ],\n        diffDims: diffDims,\n        data: {\n          imageUid: this.#image.getImageUid(index)\n        }\n      };\n\n      // add value if possible\n      if (this.#image.canQuantify()) {\n        const pixValue = this.#image.getRescaledValueAtIndex(index);\n        posEvent.value.push(pixValue);\n      }\n\n      // fire\n      this.#fireEvent(posEvent);\n    }\n\n    // all good\n    return true;\n  }\n\n  /**\n   * Set the view window/level.\n   *\n   * @param {WindowLevel} wl The window and level.\n   * @param {string} [name] Associated preset name, defaults to 'manual'.\n   * Warning: uses the latest set rescale LUT or the default linear one.\n   * @param {boolean} [silent] Flag to launch events with skipGenerate.\n   * @fires View#wlchange\n   */\n  setWindowLevel(wl, name, silent) {\n    // check input\n    if (typeof name === 'undefined') {\n      name = 'manual';\n    }\n    if (name !== 'manual' &&\n      typeof this.#windowPresets[name] === 'undefined') {\n      throw new Error('Unknown window level preset: \\'' + name + '\\'');\n    }\n    if (typeof silent === 'undefined') {\n      silent = false;\n    }\n\n    // check if new wl\n    const isNewWl = !wl.equals(this.#currentWl);\n    // check if new name\n    const isNewName = this.#currentPresetName !== name;\n\n    // compare to previous if present\n    if (isNewWl || isNewName) {\n      // assign\n      this.#currentWl = wl;\n      this.#currentPresetName = name;\n\n      // update manual\n      if (name === 'manual') {\n        if (typeof this.#windowPresets[name] !== 'undefined') {\n          this.#windowPresets[name].wl[0] = wl;\n        } else {\n          // add if not present\n          this.addWindowPresets({\n            manual: {\n              wl: [wl],\n              name: 'manual'\n            }\n          });\n        }\n      }\n\n      /**\n       * Window/level change event.\n       *\n       * @event View#wlchange\n       * @type {object}\n       * @property {string} type The event type.\n       * @property {Array} value The changed value.\n       * @property {number} wc The new window center value.\n       * @property {number} ww The new window wdth value.\n       * @property {boolean} skipGenerate Flag to skip view generation.\n       */\n      this.#fireEvent({\n        type: 'wlchange',\n        value: [wl.center, wl.width, name],\n        wc: wl.center,\n        ww: wl.width,\n        skipGenerate: silent\n      });\n    }\n  }\n\n  /**\n   * Get the window/level.\n   *\n   * @returns {WindowLevel} The window and level.\n   */\n  getWindowLevel() {\n    // same as #currentWl...\n    const windowLut = this.#getCurrentWindowLut();\n    return windowLut.getVoiLut().getWindowLevel();\n  }\n\n  /**\n   * Set the window level to the preset with the input name.\n   *\n   * @param {string} name The name of the preset to activate.\n   * @param {boolean} [silent] Flag to launch events with skipGenerate.\n   */\n  setWindowLevelPreset(name, silent) {\n    const preset = this.getWindowPresets()[name];\n    if (typeof preset === 'undefined') {\n      throw new Error('Unknown window level preset: \\'' + name + '\\'');\n    }\n    // special min/max\n    if (name === 'minmax' && typeof preset.wl === 'undefined') {\n      preset.wl = [this.getWindowLevelMinMax()];\n    }\n    // default to first\n    let wl = preset.wl[0];\n    // check if 'perslice' case\n    if (typeof preset.perslice !== 'undefined' &&\n      preset.perslice === true) {\n      const offset = this.#image.getSecondaryOffset(this.getCurrentIndex());\n      wl = preset.wl[offset];\n    }\n    // set w/l\n    this.setWindowLevel(wl, name, silent);\n  }\n\n  /**\n   * Set the window level to the preset with the input id.\n   *\n   * @param {number} id The id of the preset to activate.\n   * @param {boolean} [silent] Flag to launch events with skipGenerate.\n   */\n  setWindowLevelPresetById(id, silent) {\n    const keys = Object.keys(this.getWindowPresets());\n    this.setWindowLevelPreset(keys[id], silent);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Get the image window/level that covers the full data range.\n   * Warning: uses the latest set rescale LUT or the default linear one.\n   *\n   * @returns {WindowLevel} A min/max window level.\n   */\n  getWindowLevelMinMax() {\n    const range = this.getImage().getRescaledDataRange();\n    const min = range.min;\n    const max = range.max;\n    let width = max - min;\n    // full black / white images, defaults to 1.\n    if (width < 1) {\n      logger.warn('Zero or negative window width, defaulting to one.');\n      width = 1;\n    }\n    const center = min + width / 2;\n    return new WindowLevel(center, width);\n  }\n\n  /**\n   * Set the image window/level to cover the full data range.\n   * Warning: uses the latest set rescale LUT or the default linear one.\n   */\n  setWindowLevelMinMax() {\n    // calculate center and width\n    const wl = this.getWindowLevelMinMax();\n    // set window level\n    this.setWindowLevel(wl, 'minmax');\n  }\n\n  /**\n   * Generate display image data to be given to a canvas.\n   *\n   * @param {ImageData} data The iamge data to fill in.\n   * @param {Index} index Optional index at which to generate,\n   *   otherwise generates at current index.\n   */\n  generateImageData(data, index) {\n    // check index\n    if (typeof index === 'undefined') {\n      if (!this.getCurrentIndex()) {\n        this.setInitialIndex();\n      }\n      index = this.getCurrentIndex();\n    }\n\n    const image = this.getImage();\n    const isRescaled = !image.isConstantRSI();\n    const iterator = getSliceIterator(\n      image, index, isRescaled, this.getOrientation());\n\n    const photoInterpretation = image.getPhotometricInterpretation();\n    switch (photoInterpretation) {\n    case 'MONOCHROME1':\n    case 'MONOCHROME2':\n      generateImageDataMonochrome(\n        data,\n        iterator,\n        this.getAlphaFunction(),\n        this.#getCurrentWindowLut(),\n        this.#getColourMapLut()\n      );\n      break;\n\n    case 'PALETTE COLOR':\n      generateImageDataPaletteColor(\n        data,\n        iterator,\n        this.getAlphaFunction(),\n        image.getPaletteColourMap(),\n        image.getMeta().BitsStored === 16\n      );\n      break;\n\n    case 'RGB':\n      generateImageDataRgb(\n        data,\n        iterator,\n        this.getAlphaFunction()\n      );\n      break;\n\n    case 'YBR_FULL':\n      generateImageDataYbrFull(\n        data,\n        iterator,\n        this.getAlphaFunction()\n      );\n      break;\n\n    default:\n      throw new Error(\n        'Unsupported photometric interpretation: ' + photoInterpretation);\n    }\n  }\n\n  /**\n   * Get the scroll dimension index.\n   *\n   * @returns {number} The index.\n   */\n  getScrollDimIndex() {\n    let index = null;\n    const orientation = this.getOrientation();\n    if (typeof orientation !== 'undefined') {\n      index = orientation.getThirdColMajorDirection();\n    } else {\n      index = 2;\n    }\n    return index;\n  }\n\n  /**\n   * Is this view in the same orientation as the image aquisition.\n   *\n   * @returns {boolean} True if in aquisition plane.\n   */\n  isAquisitionOrientation() {\n    return isIdentityMat33(this.#orientation);\n  }\n\n} // class View\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {WindowLut} from './windowLut';\nimport {ColourMap} from './luts';\n/* eslint-enable no-unused-vars */\n\n/**\n * Generate image data for 'MONOCHROME*' photometric interpretation.\n *\n * @param {ImageData} array The array to store the outut data.\n * @param {object} iterator Position iterator.\n * @param {Function} alphaFunc The alpha function.\n * @param {WindowLut} windowLut The window/level LUT.\n * @param {ColourMap} colourMap The colour map.\n */\nexport function generateImageDataMonochrome(\n  array,\n  iterator,\n  alphaFunc,\n  windowLut,\n  colourMap) {\n  let index = 0;\n  let pxValue = 0;\n  let ival = iterator.next();\n  while (!ival.done) {\n    // pixel value\n    pxValue = windowLut.getValue(ival.value);\n    // store data\n    array.data[index] = colourMap.red[pxValue];\n    array.data[index + 1] = colourMap.green[pxValue];\n    array.data[index + 2] = colourMap.blue[pxValue];\n    array.data[index + 3] = alphaFunc(ival.value, ival.index);\n    // increment\n    index += 4;\n    ival = iterator.next();\n  }\n}\n","import {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ColourMap} from './luts';\n/* eslint-enable no-unused-vars */\n\n/**\n * Generate image data for 'PALETTE COLOR' photometric interpretation.\n *\n * @param {ImageData} array The array to store the outut data.\n * @param {object} iterator Position iterator.\n * @param {Function} alphaFunc The alpha function.\n * @param {ColourMap} colourMap The colour map.\n * @param {boolean} is16BitsStored Flag to know if the data is 16bits.\n */\nexport function generateImageDataPaletteColor(\n  array,\n  iterator,\n  alphaFunc,\n  colourMap,\n  is16BitsStored) {\n  // right shift 8\n  const to8 = function (value) {\n    return value >> 8;\n  };\n\n  if (is16BitsStored) {\n    logger.info('Scaling 16bits data to 8bits.');\n  }\n\n  let index = 0;\n  let pxValue = 0;\n  let ival = iterator.next();\n  while (!ival.done) {\n    // pixel value\n    pxValue = ival.value;\n    // store data\n    // TODO check pxValue fits in lut\n    if (is16BitsStored) {\n      array.data[index] = to8(colourMap.red[pxValue]);\n      array.data[index + 1] = to8(colourMap.green[pxValue]);\n      array.data[index + 2] = to8(colourMap.blue[pxValue]);\n    } else {\n      array.data[index] = colourMap.red[pxValue];\n      array.data[index + 1] = colourMap.green[pxValue];\n      array.data[index + 2] = colourMap.blue[pxValue];\n    }\n    array.data[index + 3] = alphaFunc(pxValue, ival.index);\n    // increment\n    index += 4;\n    ival = iterator.next();\n  }\n}\n","/**\n * Generate image data for 'RGB' photometric interpretation.\n *\n * @param {ImageData} array The array to store the outut data.\n * @param {object} iterator Position iterator.\n * @param {Function} alphaFunc The alpha function.\n */\nexport function generateImageDataRgb(\n  array,\n  iterator,\n  alphaFunc) {\n  let index = 0;\n  let ival = iterator.next();\n  while (!ival.done) {\n    // store data\n    array.data[index] = ival.value[0];\n    array.data[index + 1] = ival.value[1];\n    array.data[index + 2] = ival.value[2];\n    array.data[index + 3] = alphaFunc(ival.value, ival.index);\n    // increment\n    index += 4;\n    ival = iterator.next();\n  }\n}\n","import {ybrToRgb} from '../utils/colour';\n\n/**\n * Generate image data for 'YBR_FULL' photometric interpretation.\n *\n * @param {ImageData} array The array to store the outut data.\n * @param {object} iterator Position iterator.\n * @param {Function} alphaFunc The alpha function.\n */\nexport function generateImageDataYbrFull(\n  array,\n  iterator,\n  alphaFunc) {\n  let index = 0;\n  let rgb = null;\n  let ival = iterator.next();\n  while (!ival.done) {\n    // convert ybr to rgb\n    rgb = ybrToRgb(ival.value[0], ival.value[1], ival.value[2]);\n    // store data\n    array.data[index] = rgb.r;\n    array.data[index + 1] = rgb.g;\n    array.data[index + 2] = rgb.b;\n    array.data[index + 3] = alphaFunc(ival.value, ival.index);\n    // increment\n    index += 4;\n    ival = iterator.next();\n  }\n}\n","import {Vector3D} from '../math/vector';\nimport {Point3D, Point2D} from '../math/point';\nimport {isIdentityMat33} from '../math/matrix';\nimport {\n  getCosinesFromOrientation,\n  getTargetOrientation\n} from '../math/orientation';\nimport {getOrientedArray3D, getDeOrientedArray3D} from './geometry';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point} from '../math/point';\nimport {Index} from '../math/index';\nimport {Geometry} from '../image/geometry';\nimport {Matrix33} from '../math/matrix';\nimport {Spacing} from './spacing';\nimport {Scalar2D, Scalar3D} from '../math/scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * Plane geometry helper.\n */\nexport class PlaneHelper {\n\n  /**\n   * The image geometry.\n   *\n   * @type {Geometry}\n   */\n  #imageGeometry;\n\n  /**\n   * The associated spacing.\n   *\n   * @type {Spacing}\n   */\n  #spacing;\n\n  /**\n   * The image orientation.\n   *\n   * @type {Matrix33}\n   */\n  #imageOrientation;\n\n  /**\n   * The viewe orientation.\n   *\n   * @type {Matrix33}\n   */\n  #viewOrientation;\n\n  /**\n   * The target orientation.\n   *\n   * @type {Matrix33}\n   */\n  #targetOrientation;\n\n  /**\n   * @param {Geometry} imageGeometry The image geometry.\n   * @param {Matrix33} viewOrientation The view orientation.\n   */\n  constructor(imageGeometry, viewOrientation) {\n    this.#imageGeometry = imageGeometry;\n    this.#spacing = imageGeometry.getRealSpacing();\n    this.#imageOrientation = imageGeometry.getOrientation();\n    this.#viewOrientation = viewOrientation;\n\n    this.#targetOrientation = getTargetOrientation(\n      this.#imageOrientation, viewOrientation);\n  }\n\n  /**\n   * Get the view orientation.\n   *\n   * @returns {Matrix33} The orientation matrix.\n   */\n  getViewOrientation() {\n    return this.#viewOrientation;\n  }\n\n  /**\n   * Get the target orientation.\n   *\n   * @returns {Matrix33} The orientation matrix.\n   */\n  getTargetOrientation() {\n    return this.#targetOrientation;\n  }\n\n  /**\n   * Get a 3D offset from a plane one.\n   *\n   * @param {Scalar2D} offset2D The plane offset as {x,y}.\n   * @returns {Vector3D} The 3D world offset.\n   */\n  getOffset3DFromPlaneOffset(offset2D) {\n    // make 3D\n    const planeOffset = new Vector3D(\n      offset2D.x, offset2D.y, 0);\n    // de-orient\n    const pixelOffset = this.getTargetDeOrientedVector3D(planeOffset);\n    // ~indexToWorld\n    return new Vector3D(\n      pixelOffset.getX() * this.#spacing.get(0),\n      pixelOffset.getY() * this.#spacing.get(1),\n      pixelOffset.getZ() * this.#spacing.get(2));\n  }\n\n  /**\n   * Get a plane offset from a 3D one.\n   *\n   * @param {Scalar3D} offset3D The 3D offset as {x,y,z}.\n   * @returns {Scalar2D} The plane offset as {x,y}.\n   */\n  getPlaneOffsetFromOffset3D(offset3D) {\n    // ~worldToIndex\n    const pixelOffset = new Vector3D(\n      offset3D.x / this.#spacing.get(0),\n      offset3D.y / this.#spacing.get(1),\n      offset3D.z / this.#spacing.get(2));\n    // orient\n    const planeOffset = this.getTargetOrientedVector3D(pixelOffset);\n    // make 2D\n    return {\n      x: planeOffset.getX(),\n      y: planeOffset.getY()\n    };\n  }\n\n  /**\n   * Orient an input vector from real to target space.\n   *\n   * @param {Vector3D} vector The input vector.\n   * @returns {Vector3D} The oriented vector.\n   */\n  getTargetOrientedVector3D(vector) {\n    let planeVector = vector;\n    if (typeof this.#targetOrientation !== 'undefined') {\n      planeVector =\n        this.#targetOrientation.getInverse().multiplyVector3D(vector);\n    }\n    return planeVector;\n  }\n\n  /**\n   * De-orient an input vector from target to real space.\n   *\n   * @param {Vector3D} planeVector The input vector.\n   * @returns {Vector3D} The de-orienteded vector.\n   */\n  getTargetDeOrientedVector3D(planeVector) {\n    let vector = planeVector;\n    if (typeof this.#targetOrientation !== 'undefined') {\n      vector = this.#targetOrientation.multiplyVector3D(planeVector);\n    }\n    return vector;\n  }\n\n  /**\n   * De-orient an input point from target to real space.\n   *\n   * @param {Point3D} planePoint The input point.\n   * @returns {Point3D} The de-orienteded point.\n   */\n  getTargetDeOrientedPoint3D(planePoint) {\n    let point = planePoint;\n    if (typeof this.#targetOrientation !== 'undefined') {\n      point = this.#targetOrientation.multiplyPoint3D(planePoint);\n    }\n    return point;\n  }\n\n  /**\n   * Orient an input vector from target to image space.\n   *\n   * @param {Vector3D} planeVector The input vector.\n   * @returns {Vector3D} The orienteded vector.\n   */\n  getImageOrientedVector3D(planeVector) {\n    let vector = planeVector;\n    if (typeof this.#viewOrientation !== 'undefined') {\n      // image oriented => view de-oriented\n      const values = getDeOrientedArray3D(\n        [\n          planeVector.getX(),\n          planeVector.getY(),\n          planeVector.getZ()\n        ],\n        this.#viewOrientation);\n      vector = new Vector3D(\n        values[0],\n        values[1],\n        values[2]\n      );\n    }\n    return vector;\n  }\n\n  /**\n   * Orient an input point from target to image space.\n   *\n   * @param {Point3D} planePoint The input vector.\n   * @returns {Point3D} The orienteded vector.\n   */\n  getImageOrientedPoint3D(planePoint) {\n    let point = planePoint;\n    if (typeof this.#viewOrientation !== 'undefined') {\n      // image oriented => view de-oriented\n      const values = getDeOrientedArray3D(\n        [\n          planePoint.getX(),\n          planePoint.getY(),\n          planePoint.getZ()\n        ],\n        this.#viewOrientation);\n      point = new Point3D(\n        values[0],\n        values[1],\n        values[2]\n      );\n    }\n    return point;\n  }\n\n  /**\n   * De-orient an input vector from image to target space.\n   *\n   * @param {Vector3D} vector The input vector.\n   * @returns {Vector3D} The de-orienteded vector.\n   */\n  getImageDeOrientedVector3D(vector) {\n    let planeVector = vector;\n    if (typeof this.#viewOrientation !== 'undefined') {\n      // image de-oriented => view oriented\n      const orientedValues = getOrientedArray3D(\n        [\n          vector.getX(),\n          vector.getY(),\n          vector.getZ()\n        ],\n        this.#viewOrientation);\n      planeVector = new Vector3D(\n        orientedValues[0],\n        orientedValues[1],\n        orientedValues[2]\n      );\n    }\n    return planeVector;\n  }\n\n  /**\n   * De-orient an input point from image to target space.\n   *\n   * @param {Point3D} point The input point.\n   * @returns {Point3D} The de-orienteded point.\n   */\n  getImageDeOrientedPoint3D(point) {\n    let planePoint = point;\n    if (typeof this.#viewOrientation !== 'undefined') {\n      // image de-oriented => view oriented\n      const orientedValues = getOrientedArray3D(\n        [\n          point.getX(),\n          point.getY(),\n          point.getZ()\n        ],\n        this.#viewOrientation);\n      planePoint = new Point3D(\n        orientedValues[0],\n        orientedValues[1],\n        orientedValues[2]\n      );\n    }\n    return planePoint;\n  }\n\n  /**\n   * Get a world position from a 2D plane position.\n   *\n   * @param {Point2D} point2D The plane point.\n   * @param {number} k The slice index.\n   * @returns {Point3D} The world position.\n   */\n  getPositionFromPlanePoint(point2D, k) {\n    const planePoint = new Point3D(point2D.getX(), point2D.getY(), k);\n    // de-orient\n    const point = this.getImageOrientedPoint3D(planePoint);\n    // ~indexToWorld to not loose precision\n    return this.#imageGeometry.pointToWorld(point);\n  }\n\n  /**\n   * Get a 2D plane position from a world position.\n   *\n   * @param {Point} point The world position.\n   * @returns {Point3D} The plane point.\n   */\n  getPlanePointFromPosition(point) {\n    const point3D = this.#imageGeometry.worldToPoint(point);\n    return this.getImageDeOrientedPoint3D(point3D);\n  }\n\n  /**\n   * Get the cosines of this plane.\n   *\n   * @returns {number[]} The 2 cosines vectors (3D).\n   */\n  getCosines() {\n    return getCosinesFromOrientation(this.#targetOrientation);\n  }\n\n  /**\n   * Get a list of points that define the plane at input position,\n   *   given this classes orientation.\n   *\n   * @param {Point} position The position.\n   * @returns {Point3D[]} An origin and 2 cosines vectors.\n   */\n  getPlanePoints(position) {\n    // snap to grid\n    const index = this.worldToIndex(position);\n    const snapPosition = this.indexToWorld(index);\n    // get plane point\n    const planePoint = this.getPlanePointFromPosition(snapPosition);\n    // get origin\n    const planeOrigin = this.getPositionFromPlanePoint(\n      new Point2D(0, 0), planePoint.getZ());\n    // find image origin\n    const origins = this.#imageGeometry.getOrigins();\n    const closestOriginIndex = planeOrigin.getClosest(origins);\n    const imageOrigin = origins[closestOriginIndex];\n\n    // use image origin for scroll to cope with\n    // possible irregular slice spacing\n    const pValues = planeOrigin.getValues();\n    const iValues = imageOrigin.getValues();\n    const scrollDimIndex = this.getNativeScrollDimIndex();\n    pValues[scrollDimIndex] = iValues[scrollDimIndex];\n\n    // plane cosines\n    const cosines = this.getCosines();\n\n    return [\n      new Point3D(pValues[0], pValues[1], pValues[2]),\n      new Point3D(cosines[0], cosines[1], cosines[2]),\n      new Point3D(cosines[3], cosines[4], cosines[5])\n    ];\n  }\n\n  /**\n   * Image world to index.\n   *\n   * @param {Point} point The input point.\n   * @returns {Index} The corresponding index.\n   */\n  worldToIndex(point) {\n    return this.#imageGeometry.worldToIndex(point);\n  }\n\n  /**\n   * Image index to world.\n   *\n   * @param {Index} index The input index.\n   * @returns {Point} The corresponding point.\n   */\n  indexToWorld(index) {\n    return this.#imageGeometry.indexToWorld(index);\n  }\n\n  /**\n   * Is this view in the same orientation as the image aquisition.\n   *\n   * @returns {boolean} True if in aquisition plane.\n   */\n  isAquisitionOrientation() {\n    return isIdentityMat33(this.#viewOrientation);\n  }\n\n  /**\n   * Reorder values to follow target orientation.\n   *\n   * @param {Scalar3D} values Values as {x,y,z}.\n   * @returns {Scalar3D} Reoriented values as {x,y,z}.\n   */\n  getTargetOrientedPositiveXYZ(values) {\n    const orientedValues = getOrientedArray3D(\n      [\n        values.x,\n        values.y,\n        values.z\n      ],\n      this.#targetOrientation);\n    return {\n      x: orientedValues[0],\n      y: orientedValues[1],\n      z: orientedValues[2]\n    };\n  }\n\n  /**\n   * Get the (view) scroll dimension index.\n   *\n   * @returns {number} The index.\n   */\n  getScrollDimIndex() {\n    let index = null;\n    if (typeof this.#viewOrientation !== 'undefined') {\n      index = this.#viewOrientation.getThirdColMajorDirection();\n    } else {\n      index = 2;\n    }\n    return index;\n  }\n\n  /**\n   * Get the native (image) scroll dimension index.\n   *\n   * @returns {number} The index.\n   */\n  getNativeScrollDimIndex() {\n    let index = null;\n    if (typeof this.#imageOrientation !== 'undefined') {\n      index = this.#imageOrientation.getThirdColMajorDirection();\n    } else {\n      index = 2;\n    }\n    return index;\n  }\n\n} // class PlaneHelper\n","import {mergeGeometries} from './geometry';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point} from '../math/point';\nimport {Index} from '../math/index';\nimport {View} from './view';\nimport {Geometry} from './geometry';\n/* eslint-enable no-unused-vars */\n\nclass ViewPositionAccessor {\n  /**\n   * @type {View}\n   */\n  #view;\n  /**\n   * @param {View} view The view.\n   */\n  constructor(view) {\n    this.#view = view;\n  }\n  /**\n   * Get the current position.\n   *\n   * @returns {Point} The position.\n   */\n  getCurrentPosition() {\n    return this.#view.getCurrentPosition();\n  }\n  /**\n   * Set the current position.\n   *\n   * @param {Point} position The position.\n   * @param {boolean} [silent] Flag to fire event or not.\n   * @returns {boolean} True if possible and in bounds.\n   */\n  setCurrentPosition(position, silent) {\n    let res = false;\n    if (typeof position !== 'undefined') {\n      res = this.#view.setCurrentPosition(position, silent);\n    }\n    return res;\n  }\n}\n\n/**\n * Position helper.\n */\nexport class PositionHelper {\n\n  /**\n   * @type {ViewPositionAccessor}\n   */\n  #positionAccessor;\n\n  /**\n   * @type {Geometry}\n   */\n  #geometry;\n\n  /**\n   * @type {number}\n   */\n  #scrollDimIndex;\n\n  /**\n   * @param {View} view The associated view.\n   */\n  constructor(view) {\n    this.#positionAccessor = new ViewPositionAccessor(view);\n    this.#geometry = view.getImage().getGeometry();\n    this.#scrollDimIndex = view.getScrollDimIndex();\n  }\n\n  /**\n   * Get the geometry.\n   *\n   * @returns {Geometry} The geometry.\n   */\n  getGeometry() {\n    return this.#geometry;\n  }\n\n  /**\n   * Get the scroll index.\n   *\n   * @returns {number} The scroll index.\n   */\n  getScrollDimIndex() {\n    return this.#scrollDimIndex;\n  }\n\n  /**\n   * Get the maximum dimension value.\n   *\n   * @param {number} dim The dimension.\n   * @returns {number} The maximum value.\n   */\n  getMaximumDimValue(dim) {\n    return this.#geometry.getSize().get(dim) - 1;\n  }\n\n  /**\n   * Get the maximum scroll value.\n   *\n   * @returns {number} The maximum value.\n   */\n  getMaximumScrollValue() {\n    return this.getMaximumDimValue(this.#scrollDimIndex);\n  }\n\n  /**\n   * Get the current position.\n   *\n   * @returns {Point} The current position.\n   */\n  getCurrentPosition() {\n    return this.#positionAccessor.getCurrentPosition();\n  }\n\n  /**\n   * Get the value at dimension index for the current position.\n   *\n   * @param {number} dim The dimension.\n   * @returns {number} The value.\n   */\n  getCurrentPositionDimValue(dim) {\n    return this.getCurrentIndex().get(dim);\n  }\n\n  /**\n   * Get the value at scroll index for the current position.\n   *\n   * @returns {number} The value.\n   */\n  getCurrentPositionScrollValue() {\n    return this.getCurrentPositionDimValue(this.#scrollDimIndex);\n  }\n\n  /**\n   * Get the current position updated at the provided dimension index\n   *   with the input value.\n   *\n   * @param {number} dim The dimension.\n   * @param {number} value The value to used at dimension index.\n   * @returns {Point} The position.\n   */\n  getCurrentPositionAtDimValue(dim, value) {\n    const values = this.getCurrentIndex().getValues();\n    values[dim] = value;\n    return this.#geometry.indexToWorld(new Index(values));\n  }\n\n  /**\n   * Get the current position updated at scroll index with the input value.\n   *\n   * @param {number} value The value to use at scroll index.\n   * @returns {Point} The position.\n   */\n  getCurrentPositionAtScrollValue(value) {\n    return this.getCurrentPositionAtDimValue(this.#scrollDimIndex, value);\n  }\n\n  /**\n   * Get the current index.\n   *\n   * @returns {Index} The current index.\n   */\n  getCurrentIndex() {\n    return this.#geometry.worldToIndex(this.getCurrentPosition());\n  }\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point} position The position.\n   * @param {boolean} [silent] Flag to fire event or not.\n   * @returns {boolean} True if possible and in bounds.\n   */\n  setCurrentPosition(position, silent) {\n    let res = false;\n    if (typeof position !== 'undefined') {\n      res = this.#positionAccessor.setCurrentPosition(position, silent);\n    }\n    return res;\n  }\n\n  /**\n   * Set the current position only if it is in the geometry bounds.\n   *\n   * @param {Point} position The position.\n   * @param {boolean} [silent] Flag to fire event or not.\n   * @returns {boolean} True if possible and in bounds.\n   */\n  setCurrentPositionSafe(position, silent) {\n    let res = false;\n    if (this.isPositionInBounds(position)) {\n      res = this.setCurrentPosition(position, silent);\n    }\n    return res;\n  }\n\n  /**\n   * Merge with another helper.\n   *\n   * @param {PositionHelper} rhs The helper to merge with this one.\n   */\n  merge(rhs) {\n    // check compatibility\n    if (this.#scrollDimIndex !== rhs.getScrollDimIndex()) {\n      throw new Error(\n        'Cannot merge helper of a view with different orientation'\n      );\n    }\n    // merge geometries\n    this.#geometry = mergeGeometries(this.#geometry, rhs.getGeometry());\n  }\n\n  /**\n   * Check if the current position (default) or\n   * the provided position is in bounds.\n   *\n   * @param {Point} position Optional position.\n   * @returns {boolean} True is the position is in bounds.\n   */\n  isPositionInBounds(position) {\n    const index = this.#geometry.worldToIndex(position);\n    const dirs = [this.#scrollDimIndex];\n    if (index.length() === 4) {\n      dirs.push(3);\n    }\n    return this.#geometry.isIndexInBounds(index, dirs);\n  }\n\n  /**\n   * Get the current position incremented in the input direction.\n   *\n   * @param {number} dim The direction in which to increment.\n   * @returns {Point} The resulting point.\n   */\n  getIncrementPosition(dim) {\n    const nextIndex = this.getCurrentIndex().next(dim);\n    return this.#geometry.indexToWorld(nextIndex);\n  }\n\n  /**\n   * Get the current position decremented in the input direction.\n   *\n   * @param {number} dim The direction in which to decrement.\n   * @returns {Point} The resulting point.\n   */\n  getDecrementPosition(dim) {\n    const previousIndex = this.getCurrentIndex().previous(dim);\n    return this.#geometry.indexToWorld(previousIndex);\n  }\n\n  /**\n   * Increment the current position along the provided dim.\n   *\n   * @param {number} dim The direction in which to increment.\n   * @returns {boolean} True if possible and in bounds.\n   */\n  incrementPosition(dim) {\n    return this.setCurrentPositionSafe(this.getIncrementPosition(dim));\n  }\n\n  /**\n   * Decrement the current position along the provided dim.\n   *\n   * @param {number} dim The direction in which to decrement.\n   * @returns {boolean} True if possible and in bounds.\n   */\n  decrementPosition(dim) {\n    return this.setCurrentPositionSafe(this.getDecrementPosition(dim));\n  }\n\n  /**\n   * Increment the current position along the scroll dimension.\n   *\n   * @returns {boolean} True if possible and in bounds.\n   */\n  incrementPositionAlongScroll() {\n    return this.incrementPosition(this.#scrollDimIndex);\n  }\n\n  /**\n   * Decrement the current position along the scroll dimension.\n   *\n   * @returns {boolean} True if possible and in bounds.\n   */\n  decrementPositionAlongScroll() {\n    return this.decrementPosition(this.#scrollDimIndex);\n  }\n\n}","import {Index} from '../math/index';\nimport {Vector3D} from '../math/vector';\nimport {Point3D} from '../math/point';\nimport {isIdentityMat33} from '../math/matrix';\nimport {Size} from '../image/size';\nimport {Spacing} from '../image/spacing';\nimport {Image} from '../image/image';\nimport {Geometry} from '../image/geometry';\nimport {PlaneHelper} from '../image/planeHelper';\nimport {\n  getSliceIterator,\n  getIteratorValues,\n  getRegionSliceIterator,\n  getVariableRegionSliceIterator\n} from '../image/iterator';\nimport {PositionHelper} from '../image/positionHelper';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {View} from '../image/view';\nimport {WindowLevel} from '../image/windowLevel';\nimport {Point, Point2D} from '../math/point';\nimport {Scalar2D} from '../math/scalar';\nimport {Matrix33} from '../math/matrix';\nimport {ViewLayer} from '../gui/viewLayer';\n/* eslint-enable no-unused-vars */\n\n/**\n * View controller.\n */\nexport class ViewController {\n\n  /**\n   * Associated View.\n   *\n   * @type {View}\n   */\n  #view;\n\n  /**\n   * Plane helper.\n   *\n   * @type {PlaneHelper}\n   */\n  #planeHelper;\n\n  /**\n   * Position helper.\n   *\n   * @type {PositionHelper}\n   */\n  #positionHelper;\n\n  /**\n   * Third dimension player ID (created by setInterval).\n   *\n   * @type {number|undefined}\n   */\n  #playerID;\n\n  /**\n   * Is DICOM seg mask flag.\n   *\n   * @type {boolean}\n   */\n  #isMask = false;\n\n  /**\n   * @param {View} view The associated view.\n   */\n  constructor(view) {\n    // check view\n    if (typeof view.getImage() === 'undefined') {\n      throw new Error('View does not have an image, cannot setup controller');\n    }\n\n    this.#view = view;\n\n    // setup the plane helper\n    this.#planeHelper = new PlaneHelper(\n      view.getImage().getGeometry(),\n      view.getOrientation()\n    );\n\n    // position helper\n    this.#positionHelper = new PositionHelper(view);\n\n    // mask segment helper\n    if (view.getImage().getMeta().Modality === 'SEG') {\n      this.#isMask = true;\n    }\n  }\n\n  /**\n   * Get the plane helper.\n   *\n   * @returns {PlaneHelper} The helper.\n   */\n  getPlaneHelper() {\n    return this.#planeHelper;\n  }\n\n  /**\n   * Check is the associated image is a mask.\n   *\n   * @returns {boolean} True if the associated image is a mask.\n   */\n  isMask() {\n    return this.#isMask;\n  }\n\n  /**\n   * Initialise the controller.\n   */\n  initialise() {\n    // set window/level to first preset\n    this.setWindowLevelPresetById(0);\n    // default position\n    this.setCurrentPosition(this.getPositionFromPlanePoint(\n      new Point2D(0, 0)\n    ));\n  }\n\n  /**\n   * Get the image modality.\n   *\n   * @returns {string} The modality.\n   */\n  getModality() {\n    return this.#view.getImage().getMeta().Modality;\n  }\n\n  /**\n   * Get the window/level presets names.\n   *\n   * @returns {string[]} The presets names.\n   */\n  getWindowLevelPresetsNames() {\n    return this.#view.getWindowPresetsNames();\n  }\n\n  /**\n   * Add window/level presets to the view.\n   *\n   * @param {object} presets A preset object.\n   * @returns {object} The list of presets.\n   */\n  addWindowLevelPresets(presets) {\n    return this.#view.addWindowPresets(presets);\n  }\n\n  /**\n   * Set the window level to the preset with the input name.\n   *\n   * @param {string} name The name of the preset to activate.\n   */\n  setWindowLevelPreset(name) {\n    this.#view.setWindowLevelPreset(name);\n  }\n\n  /**\n   * Set the window level to the preset with the input id.\n   *\n   * @param {number} id The id of the preset to activate.\n   */\n  setWindowLevelPresetById(id) {\n    this.#view.setWindowLevelPresetById(id);\n  }\n\n  /**\n   * Check if the controller is playing.\n   *\n   * @returns {boolean} True if the controler is playing.\n   */\n  isPlaying() {\n    return (typeof this.#playerID !== 'undefined');\n  }\n\n  /**\n   * Get the position helper.\n   *\n   * @returns {PositionHelper} The helper.\n   */\n  getPositionHelper() {\n    return this.#positionHelper;\n  }\n\n  /**\n   * Get a clone of the position helper.\n   *\n   * @returns {PositionHelper} The helper clone.\n   */\n  getPositionHelperClone() {\n    return new PositionHelper(this.#view);\n  }\n\n  /**\n   * Get the current position.\n   *\n   * @returns {Point} The position.\n   */\n  getCurrentPosition() {\n    return this.#positionHelper.getCurrentPosition();\n  }\n\n  /**\n   * Get the current index.\n   *\n   * @returns {Index} The current index.\n   */\n  getCurrentIndex() {\n    return this.#positionHelper.getCurrentIndex();\n  }\n\n  /**\n   * Get the SOP image UID of the current image.\n   *\n   * @returns {string} The UID.\n   */\n  getCurrentImageUid() {\n    return this.#view.getCurrentImageUid();\n  }\n\n  /**\n   * Get the image origin for a image UID.\n   *\n   * @param {string} uid The UID.\n   * @returns {Point3D|undefined} The origin.\n   */\n  getOriginForImageUid(uid) {\n    return this.#view.getOriginForImageUid(uid);\n  }\n\n  /**\n   * Check if the image includes an UID.\n   *\n   * @param {string} uid The UID.\n   * @returns {boolean} True if present.\n   */\n  includesImageUid(uid) {\n    return this.#view.includesImageUid(uid);\n  }\n\n  /**\n   * Get the current oriented index.\n   *\n   * @returns {Index} The index.\n   */\n  getCurrentOrientedIndex() {\n    let res = this.getCurrentIndex();\n    if (typeof this.#view.getOrientation() !== 'undefined') {\n      // view oriented => image de-oriented\n      const vector = this.#planeHelper.getImageDeOrientedVector3D(\n        new Vector3D(res.get(0), res.get(1), res.get(2))\n      );\n      res = new Index([\n        vector.getX(), vector.getY(), vector.getZ()\n      ]);\n    }\n    return res;\n  }\n\n  /**\n   * Get the scroll dimension index.\n   *\n   * @returns {number} The index.\n   */\n  getScrollDimIndex() {\n    return this.#view.getScrollDimIndex();\n  }\n\n  /**\n   * Get the current index scroll value.\n   *\n   * @returns {number} The value.\n   */\n  getCurrentIndexScrollValue() {\n    return this.getCurrentIndex().get(this.#view.getScrollDimIndex());\n  }\n\n  /**\n   * Get the first origin or at a given position.\n   *\n   * @param {Point} [position] Optional position.\n   * @returns {Point3D} The origin.\n   */\n  getOrigin(position) {\n    return this.#view.getOrigin(position);\n  }\n\n  /**\n   * Is this view in the same orientation as the image aquisition.\n   *\n   * @returns {boolean} True if in aquisition plane.\n   */\n  isAquisitionOrientation() {\n    return this.#view.isAquisitionOrientation();\n  }\n\n  /**\n   * Get a list of points that define the plane at input position,\n   *   given this classes orientation.\n   *\n   * @param {Point} position The position.\n   * @returns {Point3D[]} An origin and 2 cosines vectors.\n   */\n  getPlanePoints(position) {\n    return this.#planeHelper.getPlanePoints(position);\n  }\n\n  /**\n   * Get the current scroll position value.\n   *\n   * @returns {number} The value.\n   */\n  getCurrentScrollPosition() {\n    const scrollDimIndex = this.#view.getScrollDimIndex();\n    return this.#view.getCurrentPosition().get(scrollDimIndex);\n  }\n\n  /**\n   * Generate display image data to be given to a canvas.\n   *\n   * @param {ImageData} array The array to fill in.\n   * @param {Index} [index] Optional index at which to generate,\n   *   otherwise generates at current index.\n   */\n  generateImageData(array, index) {\n    this.#view.generateImageData(array, index);\n  }\n\n  /**\n   * Set the associated image.\n   *\n   * @param {Image} img The associated image.\n   */\n  setImage(img) {\n    this.#view.setImage(img);\n  }\n\n  /**\n   * Get the current view (2D) spacing.\n   *\n   * @returns {Scalar2D} The spacing as a 2D array.\n   */\n  get2DSpacing() {\n    const spacing = this.#view.getImage().getGeometry().getSpacing(\n      this.#view.getOrientation());\n    return spacing.get2D();\n  }\n\n  /**\n   * Get the image rescaled value at the input position.\n   *\n   * @param {Point} position The input position.\n   * @returns {number|undefined} The image value or undefined if out of bounds\n   *   or no quantifiable (for ex RGB).\n   */\n  getRescaledImageValue(position) {\n    const image = this.#view.getImage();\n    if (!image.canQuantify()) {\n      return;\n    }\n    const geometry = image.getGeometry();\n    const index = geometry.worldToIndex(position);\n    let value;\n    if (geometry.isIndexInBounds(index)) {\n      value = image.getRescaledValueAtIndex(index);\n    }\n    return value;\n  }\n\n  /**\n   * Get the image pixel unit.\n   *\n   * @returns {string} The unit.\n   */\n  getPixelUnit() {\n    return this.#view.getImage().getMeta().pixelUnit;\n  }\n\n  /**\n   * Extract a slice from an image at the given index and orientation.\n   *\n   * @param {Image} image The image to parse.\n   * @param {Index} index The index at which to get the\n   *   image values.\n   * @param {boolean} isRescaled Flag for rescaled values (default false).\n   * @param {Matrix33} orientation The desired orientation.\n   * @returns {Image} The extracted slice.\n   */\n  #getSlice(image, index, isRescaled, orientation) {\n    // generate slice values\n    const sliceIter = getSliceIterator(\n      image,\n      index,\n      isRescaled,\n      orientation\n    );\n    const sliceValues = getIteratorValues(sliceIter);\n    // oriented geometry\n    const orientedSize = image.getGeometry().getSize(orientation);\n    const sizeValues = orientedSize.getValues();\n    sizeValues[2] = 1;\n    const sliceSize = new Size(sizeValues);\n    const orientedSpacing = image.getGeometry().getSpacing(orientation);\n    const spacingValues = orientedSpacing.getValues();\n    spacingValues[2] = 1;\n    const sliceSpacing = new Spacing(spacingValues);\n    const sliceOrigin = new Point3D(0, 0, 0);\n    const sliceGeometry =\n      new Geometry([sliceOrigin], sliceSize, sliceSpacing);\n    // slice image\n    // @ts-ignore\n    return new Image(sliceGeometry, sliceValues);\n  }\n\n  /**\n   * Get some values from the associated image in a region.\n   *\n   * @param {Point2D} min Minimum point.\n   * @param {Point2D} max Maximum point.\n   * @param {Index} index The index at which to get the\n   *   image values (combined with min/max).\n   * @returns {Array} A list of values.\n   */\n  getImageRegionValues(min, max, index) {\n    let image = this.#view.getImage();\n    const orientation = this.#view.getOrientation();\n    let imageIndex = index;\n    let rescaled = true;\n\n    // create oriented slice if needed\n    if (!isIdentityMat33(orientation)) {\n      image = this.#getSlice(image, imageIndex, rescaled, orientation);\n      // update position\n      imageIndex = new Index([0, 0, 0]);\n      rescaled = false;\n    }\n\n    // get region values\n    const iter = getRegionSliceIterator(\n      image, imageIndex, rescaled, min, max);\n    let values = [];\n    if (iter) {\n      values = getIteratorValues(iter);\n    }\n    return values;\n  }\n\n  /**\n   * Get some values from the associated image in variable regions.\n   *\n   * @param {number[][][]} regions A list of [x, y] pairs (min, max).\n   * @param {Index} index The index at which to get the\n   *   image values (combined with regions min/max).\n   * @returns {Array} A list of values.\n   */\n  getImageVariableRegionValues(regions, index) {\n    let image = this.#view.getImage();\n    const orientation = this.#view.getOrientation();\n    let imageIndex = index;\n    let rescaled = true;\n\n    // create oriented slice if needed\n    if (!isIdentityMat33(orientation)) {\n      image = this.#getSlice(image, imageIndex, rescaled, orientation);\n      // update position\n      imageIndex = new Index([0, 0, 0]);\n      rescaled = false;\n    }\n\n    // get region values\n    const iter = getVariableRegionSliceIterator(\n      image, imageIndex, rescaled, regions);\n    let values = [];\n    if (iter) {\n      values = getIteratorValues(iter);\n    }\n    return values;\n  }\n\n  /**\n   * Can the image values be quantified?\n   *\n   * @returns {boolean} True if possible.\n   */\n  canQuantifyImage() {\n    return this.#view.getImage().canQuantify();\n  }\n\n  /**\n   * Can window and level be applied to the data?\n   *\n   * @returns {boolean} True if possible.\n   * @deprecated Since v0.33, please use isMonochrome instead.\n   */\n  canWindowLevel() {\n    return this.isMonochrome();\n  }\n\n  /**\n   * Is the data monochrome.\n   *\n   * @returns {boolean} True if the data is monochrome.\n   */\n  isMonochrome() {\n    return this.#view.getImage().isMonochrome();\n  }\n\n  /**\n   * Can the data be scrolled?\n   *\n   * @returns {boolean} True if the data has either the third dimension\n   * or above greater than one.\n   */\n  canScroll() {\n    return this.#view.getImage().canScroll(this.#view.getOrientation());\n  }\n\n  /**\n   * Get the oriented image size.\n   *\n   * @returns {Size} The size.\n   */\n  getImageSize() {\n    return this.#view.getImage().getGeometry().getSize(\n      this.#view.getOrientation());\n  }\n\n\n  /**\n   * Is the data size larger than one in the given dimension?\n   *\n   * @param {number} dim The dimension.\n   * @returns {boolean} True if the image size is larger than one\n   *   in the given dimension.\n   */\n  moreThanOne(dim) {\n    return this.getImageSize().moreThanOne(dim);\n  }\n\n  /**\n   * Get the image world (mm) 2D size.\n   *\n   * @returns {Scalar2D} The 2D size as {x,y}.\n   */\n  getImageWorldSize() {\n    const geometry = this.#view.getImage().getGeometry();\n    const size = geometry.getSize(this.#view.getOrientation()).get2D();\n    const spacing = geometry.getSpacing(this.#view.getOrientation()).get2D();\n    return {\n      x: size.x * spacing.x,\n      y: size.y * spacing.y\n    };\n  }\n\n  /**\n   * Get the image rescaled data range.\n   *\n   * @returns {object} The range as {min, max}.\n   */\n  getImageRescaledDataRange() {\n    return this.#view.getImage().getRescaledDataRange();\n  }\n\n  /**\n   * Compare the input meta data to the associated image one.\n   *\n   * @param {object} meta The meta data.\n   * @returns {boolean} True if the associated image has equal meta data.\n   */\n  equalImageMeta(meta) {\n    const imageMeta = this.#view.getImage().getMeta();\n    // loop through input meta keys\n    const metaKeys = Object.keys(meta);\n    for (let i = 0; i < metaKeys.length; ++i) {\n      const metaKey = metaKeys[i];\n      if (typeof imageMeta[metaKey] === 'undefined') {\n        return false;\n      }\n      if (imageMeta[metaKey] !== meta[metaKey]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Check if the current position (default) or\n   * the provided position is in bounds.\n   *\n   * @param {Point} [position] Optional position.\n   * @returns {boolean} True is the position is in bounds.\n   */\n  isPositionInBounds(position) {\n    return this.#view.isPositionInBounds(position);\n  }\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point} pos The position.\n   * @param {boolean} [silent] If true, does not fire a\n   *   positionchange event.\n   * @returns {boolean} False if not in bounds.\n   */\n  setCurrentPosition(pos, silent) {\n    return this.#view.setCurrentPosition(pos, silent);\n  }\n\n  /**\n   * Get a world position from a 2D plane position.\n   *\n   * @param {Point2D} point2D The input point.\n   * @param {number} [k] Optional slice index,\n   *   if undefined, uses the current one.\n   * @returns {Point} The associated position.\n   */\n  getPositionFromPlanePoint(point2D, k) {\n    // keep third direction\n    if (typeof k === 'undefined') {\n      k = this.getCurrentIndexScrollValue();\n    }\n    const planePoint = new Point3D(point2D.getX(), point2D.getY(), k);\n    // de-orient\n    const point = this.#planeHelper.getImageOrientedPoint3D(planePoint);\n    // ~indexToWorld to not loose precision\n    const geometry = this.#view.getImage().getGeometry();\n    const point3D = geometry.pointToWorld(point);\n    // merge with current position to keep extra dimensions\n    return this.getCurrentPosition().mergeWith3D(point3D);\n  }\n\n  /**\n   * Get a 2D plane position from a world position.\n   *\n   * @param {Point} point The 3D position.\n   * @returns {Point2D} The 2D position.\n   */\n  getPlanePositionFromPosition(point) {\n    // orient\n    const geometry = this.#view.getImage().getGeometry();\n    // ~worldToIndex to not loose precision\n    const point3D = geometry.worldToPoint(point);\n    const planePoint = this.#planeHelper.getImageDeOrientedPoint3D(point3D);\n    // return\n    return new Point2D(\n      planePoint.getX(),\n      planePoint.getY(),\n    );\n  }\n\n  /**\n   * Get the index of a world position.\n   *\n   * @param {Point} point The 3D position.\n   * @returns {Index} The index.\n   */\n  getIndexFromPosition(point) {\n    // orient\n    const geometry = this.#view.getImage().getGeometry();\n    // ~worldToIndex to not loose precision\n    return geometry.worldToIndex(point);\n  }\n\n  /**\n   * Set the current index.\n   *\n   * @param {Index} index The index.\n   * @param {boolean} [silent] If true, does not fire a positionchange event.\n   * @returns {boolean} False if not in bounds.\n   */\n  setCurrentIndex(index, silent) {\n    return this.#view.setCurrentIndex(index, silent);\n  }\n\n  /**\n   * Get a plane 3D position from a plane 2D position: does not compensate\n   *   for the image origin. Needed for setting the scale center...\n   *\n   * @param {Point2D} point2D The 2D position.\n   * @returns {Point3D} The 3D point.\n   */\n  getPlanePositionFromPlanePoint(point2D) {\n    // keep third direction\n    const k = this.getCurrentIndexScrollValue();\n    const planePoint = new Point3D(point2D.getX(), point2D.getY(), k);\n    // de-orient\n    const point = this.#planeHelper.getTargetDeOrientedPoint3D(planePoint);\n    // ~indexToWorld to not loose precision\n    const geometry = this.#view.getImage().getGeometry();\n    const spacing = geometry.getRealSpacing();\n    return new Point3D(\n      point.getX() * spacing.get(0),\n      point.getY() * spacing.get(1),\n      point.getZ() * spacing.get(2));\n  }\n\n  /**\n   * Get a 3D offset from a plane one.\n   *\n   * @param {Scalar2D} offset2D The plane offset as {x,y}.\n   * @returns {Vector3D} The 3D world offset.\n   */\n  getOffset3DFromPlaneOffset(offset2D) {\n    return this.#planeHelper.getOffset3DFromPlaneOffset(offset2D);\n  }\n\n  /**\n   * Scroll play: loop through all slices.\n   */\n  play() {\n    // ensure data is scrollable: dim >= 3\n    if (!this.canScroll()) {\n      return;\n    }\n    if (typeof this.#playerID === 'undefined') {\n      const image = this.#view.getImage();\n      const recommendedDisplayFrameRate =\n        image.getMeta().RecommendedDisplayFrameRate;\n      const milliseconds = this.#view.getPlaybackMilliseconds(\n        recommendedDisplayFrameRate);\n      const size = image.getGeometry().getSize();\n      const canScroll3D = size.canScroll3D();\n\n      this.#playerID = window.setInterval(() => {\n        let canDoMore = false;\n        if (canScroll3D) {\n          canDoMore = this.#positionHelper.incrementPositionAlongScroll();\n        } else {\n          canDoMore = this.#positionHelper.incrementPosition(3);\n        }\n        // end of scroll, loop back\n        if (!canDoMore) {\n          const pos1 = this.getCurrentIndex();\n          const values = pos1.getValues();\n          const orientation = this.#view.getOrientation();\n          if (canScroll3D) {\n            values[orientation.getThirdColMajorDirection()] = 0;\n          } else {\n            values[3] = 0;\n          }\n          const index = new Index(values);\n          const geometry = this.#view.getImage().getGeometry();\n          this.setCurrentPosition(geometry.indexToWorld(index));\n        }\n      }, milliseconds);\n    } else {\n      this.stop();\n    }\n  }\n\n  /**\n   * Stop scroll playing.\n   */\n  stop() {\n    if (typeof this.#playerID !== 'undefined') {\n      clearInterval(this.#playerID);\n      this.#playerID = undefined;\n    }\n  }\n\n  /**\n   * Get the window/level.\n   *\n   * @returns {WindowLevel} The window and level.\n   */\n  getWindowLevel() {\n    return this.#view.getWindowLevel();\n  }\n\n  /**\n   * Get the current window level preset name.\n   *\n   * @returns {string} The preset name.\n   */\n  getCurrentWindowPresetName() {\n    return this.#view.getCurrentWindowPresetName();\n  }\n\n  /**\n   * Set the window and level.\n   *\n   * @param {WindowLevel} wl The window and level.\n   */\n  setWindowLevel(wl) {\n    this.#view.setWindowLevel(wl);\n  }\n\n  /**\n   * Get the colour map.\n   *\n   * @returns {string} The colour map name.\n   */\n  getColourMap() {\n    return this.#view.getColourMap();\n  }\n\n  /**\n   * Set the colour map.\n   *\n   * @param {string} name The colour map name.\n   */\n  setColourMap(name) {\n    this.#view.setColourMap(name);\n  }\n\n  /**\n   * @callback alphaFn\n   * @param {number[]|number} value The pixel value.\n   * @param {number} index The values' index.\n   * @returns {number} The opacity of the input value.\n   */\n\n  /**\n   * Set the view per value alpha function.\n   *\n   * @param {alphaFn} func The function.\n   */\n  setViewAlphaFunction(func) {\n    this.#view.setAlphaFunction(func);\n  }\n\n  /**\n   * Bind the view image to the provided layer.\n   *\n   * @param {ViewLayer} viewLayer The layer to bind.\n   */\n  bindImageAndLayer(viewLayer) {\n    const image = this.#view.getImage();\n    image.addEventListener('imagecontentchange',\n      viewLayer.onimagecontentchange\n    );\n    image.addEventListener('imagegeometrychange',\n      viewLayer.onimagegeometrychange\n    );\n  }\n\n  /**\n   * Unbind the view image to the provided layer.\n   *\n   * @param {ViewLayer} viewLayer The layer to bind.\n   */\n  unbindImageAndLayer(viewLayer) {\n    const image = this.#view.getImage();\n    image.removeEventListener('imagecontentchange',\n      viewLayer.onimagecontentchange\n    );\n    image.removeEventListener('imagegeometrychange',\n      viewLayer.onimagegeometrychange\n    );\n  }\n\n} // class ViewController\n","import {logger} from '../utils/logger';\nimport {Point2D} from '../math/point';\n\n/**\n * List of interaction event names.\n */\nexport const InteractionEventNames = [\n  'mousedown',\n  'mousemove',\n  'mouseup',\n  'mouseout',\n  'wheel',\n  'dblclick',\n  'touchstart',\n  'touchmove',\n  'touchend'\n];\n\n/**\n * Get the positions (without the parent offset) of a list of touch events.\n *\n * @param {Array} touches The list of touch events.\n * @returns {Point2D[]} The list of positions of the touch events.\n */\nfunction getTouchesPositions(touches) {\n  // get the touch offset from all its parents\n  let offsetLeft = 0;\n  let offsetTop = 0;\n  if (touches.length !== 0 &&\n    typeof touches[0].target !== 'undefined') {\n    let offsetParent = touches[0].target.offsetParent;\n    while (offsetParent) {\n      if (!isNaN(offsetParent.offsetLeft)) {\n        offsetLeft += offsetParent.offsetLeft;\n      }\n      if (!isNaN(offsetParent.offsetTop)) {\n        offsetTop += offsetParent.offsetTop;\n      }\n      offsetParent = offsetParent.offsetParent;\n    }\n  } else {\n    logger.debug('No touch target offset parent.');\n  }\n  // set its position\n  const positions = [];\n  for (let i = 0; i < touches.length; ++i) {\n    positions.push(new Point2D(\n      touches[i].pageX - offsetLeft,\n      touches[i].pageY - offsetTop\n    ));\n  }\n  return positions;\n}\n\n/**\n * Get the offsets of an input touch event.\n *\n * @param {object} event The event to get the offset from.\n * @returns {Point2D[]} The array of points.\n */\nexport function getTouchPoints(event) {\n  let positions = [];\n  if (typeof event.targetTouches !== 'undefined' &&\n    event.targetTouches.length !== 0) {\n    // see https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/targetTouches\n    positions = getTouchesPositions(event.targetTouches);\n  } else if (typeof event.changedTouches !== 'undefined' &&\n    event.changedTouches.length !== 0) {\n    // see https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/changedTouches\n    positions = getTouchesPositions(event.changedTouches);\n  }\n  return positions;\n}\n\n/**\n * Get the offset of an input mouse event.\n *\n * @param {object} event The event to get the offset from.\n * @returns {Point2D} The 2D point.\n */\nexport function getMousePoint(event) {\n  // offsetX/Y: the offset in the X coordinate of the mouse pointer\n  // between that event and the padding edge of the target node\n  // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/offsetX\n  // https://caniuse.com/mdn-api_mouseevent_offsetx\n  return new Point2D(\n    event.offsetX,\n    event.offsetY\n  );\n}\n\n/**\n * Test if a canvas with the input size can be created.\n *\n * Ref:\n * - {@link https://github.com/ivmartel/dwv/issues/902},\n * - {@link https://github.com/jhildenbiddle/canvas-size/blob/v1.2.4/src/canvas-test.js}.\n *\n * @param {number} width The canvas width.\n * @param {number} height The canvas height.\n * @returns {boolean} True is the canvas can be created.\n */\nexport function canCreateCanvas(width, height) {\n  // test canvas with input size\n  const testCvs = document.createElement('canvas');\n  testCvs.width = width;\n  testCvs.height = height;\n  // crop canvas to speed up test\n  const cropCvs = document.createElement('canvas');\n  cropCvs.width = 1;\n  cropCvs.height = 1;\n  // contexts\n  const testCtx = testCvs.getContext('2d');\n  const cropCtx = cropCvs.getContext('2d');\n  // set data\n  if (testCtx) {\n    testCtx.fillRect(width - 1, height - 1, 1, 1);\n    // Render the test pixel in the bottom-right corner of the\n    // test canvas in the top-left of the 1x1 crop canvas. This\n    // dramatically reducing the time for getImageData to complete.\n    cropCtx.drawImage(testCvs, width - 1, height - 1, 1, 1, 0, 0, 1, 1);\n  }\n  // Verify image data (alpha component, Pass = 255, Fail = 0)\n  return cropCtx && cropCtx.getImageData(0, 0, 1, 1).data[3] !== 0;\n}\n","import {Index} from '../math/index';\nimport {ListenerHandler} from '../utils/listen';\nimport {viewEventNames} from '../image/view';\nimport {ViewController} from '../app/viewController';\nimport {Point2D} from '../math/point';\nimport {\n  canCreateCanvas,\n  InteractionEventNames\n} from './generic';\nimport {getScaledOffset} from './layerGroup';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Vector3D} from '../math/vector';\nimport {Point, Point3D} from '../math/point';\nimport {Scalar2D, Scalar3D} from '../math/scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * View layer.\n */\nexport class ViewLayer {\n\n  /**\n   * Container div.\n   *\n   * @type {HTMLElement}\n   */\n  #containerDiv;\n\n  /**\n   * The view controller.\n   *\n   * @type {ViewController}\n   */\n  #viewController = null;\n\n  /**\n   * The main display canvas.\n   *\n   * @type {object}\n   */\n  #canvas = null;\n\n  /**\n   * The offscreen canvas: used to store the raw, unscaled pixel data.\n   *\n   * @type {object}\n   */\n  #offscreenCanvas = null;\n\n  /**\n   * The associated CanvasRenderingContext2D.\n   *\n   * @type {object}\n   */\n  #context = null;\n\n  /**\n   * Flag to know if the current position is valid.\n   *\n   * @type {boolean}\n   */\n  #isValidPosition = true;\n\n  /**\n   * The image data array.\n   *\n   * @type {ImageData}\n   */\n  #imageData = null;\n\n  /**\n   * The layer base size as {x,y}.\n   *\n   * @type {Scalar2D}\n   */\n  #baseSize;\n\n  /**\n   * The layer base spacing as {x,y}.\n   *\n   * @type {Scalar2D}\n   */\n  #baseSpacing;\n\n  /**\n   * The layer opacity.\n   *\n   * @type {number}\n   */\n  #opacity = 1;\n\n  /**\n   * The layer scale.\n   *\n   * @type {Scalar2D}\n   */\n  #scale = {x: 1, y: 1};\n\n  /**\n   * The layer fit scale.\n   *\n   * @type {Scalar2D}\n   */\n  #fitScale = {x: 1, y: 1};\n\n  /**\n   * The layer flip scale.\n   *\n   * @type {Scalar3D}\n   */\n  #flipScale = {x: 1, y: 1, z: 1};\n\n  /**\n   * The full layer offset: sum of all other offsets.\n   *\n   * @type {Scalar2D}\n   */\n  #offset = {x: 0, y: 0};\n\n  /**\n   * The base layer offset.\n   *\n   * @type {Scalar2D}\n   */\n  #baseOffset = {x: 0, y: 0};\n\n  /**\n   * The view offset.\n   *\n   * @type {Scalar2D}\n   */\n  #viewOffset = {x: 0, y: 0};\n\n  /**\n   * The zoom offset.\n   *\n   * @type {Scalar2D}\n   */\n  #zoomOffset = {x: 0, y: 0};\n\n  /**\n   * The pan offset.\n   *\n   * @type {Scalar2D}\n   */\n  #panOffset = {x: 0, y: 0};\n\n  /**\n   * The flip offset.\n   *\n   * @type {Scalar2D}\n   */\n  #flipOffset = {x: 0, y: 0};\n\n  /**\n   * Data update flag.\n   *\n   * @type {boolean}\n   */\n  #needsDataUpdate = null;\n\n  /**\n   * The associated data id.\n   *\n   * @type {string}\n   */\n  #dataId;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Image smoothing flag.\n   *\n   * See: {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/imageSmoothingEnabled}.\n   *\n   * @type {boolean}\n   */\n  #imageSmoothing = false;\n\n  /**\n   * Layer group origin.\n   *\n   * @type {Point3D}\n   */\n  #layerGroupOrigin;\n\n  /**\n   * Layer group first origin.\n   *\n   * @type {Point3D}\n   */\n  #layerGroupOrigin0;\n\n  /**\n   * @param {HTMLElement} containerDiv The layer div, its id will be used\n   *   as this layer id.\n   */\n  constructor(containerDiv) {\n    this.#containerDiv = containerDiv;\n    // specific css class name\n    this.#containerDiv.className += ' viewLayer';\n  }\n\n  /**\n   * Get the associated data id.\n   *\n   * @returns {string} The data id.\n   */\n  getDataId() {\n    return this.#dataId;\n  }\n\n  /**\n   * Get the layer scale.\n   *\n   * @returns {Scalar2D} The scale as {x,y}.\n   */\n  getScale() {\n    return this.#scale;\n  }\n\n  /**\n   * Get the layer zoom offset without the fit scale.\n   *\n   * @returns {Scalar2D} The offset as {x,y}.\n   */\n  getAbsoluteZoomOffset() {\n    return {\n      x: this.#zoomOffset.x * this.#fitScale.x,\n      y: this.#zoomOffset.y * this.#fitScale.y\n    };\n  }\n\n  /**\n   * Set the imageSmoothing flag value.\n   *\n   * @param {boolean} flag True to enable smoothing.\n   */\n  setImageSmoothing(flag) {\n    this.#imageSmoothing = flag;\n  }\n\n  /**\n   * Set the associated view.\n   *\n   * @param {object} view The view.\n   * @param {string} dataId The associated data id.\n   */\n  setView(view, dataId) {\n    this.#dataId = dataId;\n    // local listeners\n    view.addEventListener('wlchange', this.#onWLChange);\n    view.addEventListener('colourmapchange', this.#onColourMapChange);\n    view.addEventListener('positionchange', this.#onPositionChange);\n    view.addEventListener('alphafuncchange', this.#onAlphaFuncChange);\n    // view events\n    for (let j = 0; j < viewEventNames.length; ++j) {\n      view.addEventListener(viewEventNames[j], this.#fireEvent);\n    }\n    // create view controller\n    this.#viewController = new ViewController(view);\n    // bind layer and image\n    this.bindImage();\n  }\n\n  /**\n   * Get the view controller.\n   *\n   * @returns {ViewController} The controller.\n   */\n  getViewController() {\n    return this.#viewController;\n  }\n\n  /**\n   * Get the canvas image data.\n   *\n   * @returns {object} The image data.\n   */\n  getImageData() {\n    return this.#imageData;\n  }\n\n  /**\n   * Handle an image set event.\n   *\n   * @param {object} event The event.\n   * @function\n   */\n  onimageset = (event) => {\n    // event.value = [index, image]\n    if (this.#dataId === event.dataid) {\n      this.#viewController.setImage(event.value[0]);\n      this.#setBaseSize(this.#viewController.getImageSize().get2D());\n      this.#needsDataUpdate = true;\n    }\n  };\n\n  /**\n   * Bind this layer to the view image.\n   */\n  bindImage() {\n    if (this.#viewController) {\n      this.#viewController.bindImageAndLayer(this);\n    }\n  }\n\n  /**\n   * Unbind this layer to the view image.\n   */\n  unbindImage() {\n    if (this.#viewController) {\n      this.#viewController.unbindImageAndLayer(this);\n    }\n  }\n\n  /**\n   * Handle an image content change event.\n   *\n   * @param {object} event The event.\n   * @function\n   */\n  onimagecontentchange = (event) => {\n    // event.value = [index]\n    if (this.#dataId === event.dataid) {\n      this.#isValidPosition = this.#viewController.isPositionInBounds();\n      // flag update and draw\n      this.#needsDataUpdate = true;\n      this.draw();\n    }\n  };\n\n  /**\n   * Handle an image change event.\n   *\n   * @param {object} event The event.\n   * @function\n   */\n  onimagegeometrychange = (event) => {\n    // event.value = [index]\n    if (this.#dataId === event.dataid) {\n      const vcSize = this.#viewController.getImageSize().get2D();\n      if (this.#baseSize.x !== vcSize.x ||\n        this.#baseSize.y !== vcSize.y) {\n        // size changed, recalculate base offset\n        // in case origin changed\n        if (typeof this.#layerGroupOrigin !== 'undefined' &&\n          typeof this.#layerGroupOrigin0 !== 'undefined') {\n          const origin0 = this.#viewController.getOrigin();\n          const scrollOffset = this.#layerGroupOrigin0.minus(origin0);\n          const origin = this.#viewController.getOrigin(\n            this.#viewController.getCurrentPosition()\n          );\n          const planeOffset = this.#layerGroupOrigin.minus(origin);\n          this.setBaseOffset(scrollOffset, planeOffset);\n        }\n        // update base size\n        this.#setBaseSize(vcSize);\n        // flag update and draw\n        this.#needsDataUpdate = true;\n        this.draw();\n      }\n    }\n  };\n\n  // common layer methods [start] ---------------\n\n  /**\n   * Get the id of the layer.\n   *\n   * @returns {string} The string id.\n   */\n  getId() {\n    return this.#containerDiv.id;\n  }\n\n  /**\n   * Remove the HTML element from the DOM.\n   */\n  removeFromDOM() {\n    this.#containerDiv.remove();\n  }\n\n  /**\n   * Get the layer base size (without scale).\n   *\n   * @returns {Scalar2D} The size as {x,y}.\n   */\n  getBaseSize() {\n    return this.#baseSize;\n  }\n\n  /**\n   * Get the image world (mm) 2D size.\n   *\n   * @returns {Scalar2D} The 2D size as {x,y}.\n   */\n  getImageWorldSize() {\n    return this.#viewController.getImageWorldSize();\n  }\n\n  /**\n   * Get the layer opacity.\n   *\n   * @returns {number} The opacity ([0:1] range).\n   */\n  getOpacity() {\n    return this.#opacity;\n  }\n\n  /**\n   * Set the layer opacity.\n   *\n   * @param {number} alpha The opacity ([0:1] range).\n   */\n  setOpacity(alpha) {\n    if (alpha === this.#opacity) {\n      return;\n    }\n\n    this.#opacity = Math.min(Math.max(alpha, 0), 1);\n\n    /**\n     * Opacity change event.\n     *\n     * @event App#opacitychange\n     * @type {object}\n     * @property {string} type The event type.\n     */\n    const event = {\n      type: 'opacitychange',\n      value: [this.#opacity]\n    };\n    this.#fireEvent(event);\n  }\n\n  /**\n   * Add a flip offset along the layer X axis.\n   */\n  addFlipOffsetX() {\n    this.#flipOffset.x += this.#canvas.width / this.#scale.x;\n    this.#offset.x += this.#flipOffset.x;\n  }\n\n  /**\n   * Add a flip offset along the layer Y axis.\n   */\n  addFlipOffsetY() {\n    this.#flipOffset.y += this.#canvas.height / this.#scale.y;\n    this.#offset.y += this.#flipOffset.y;\n  }\n\n  /**\n   * Flip the scale along the layer X axis.\n   */\n  flipScaleX() {\n    this.#flipScale.x *= -1;\n  }\n\n  /**\n   * Flip the scale along the layer Y axis.\n   */\n  flipScaleY() {\n    this.#flipScale.y *= -1;\n  }\n\n  /**\n   * Flip the scale along the layer Z axis.\n   */\n  flipScaleZ() {\n    this.#flipScale.z *= -1;\n  }\n\n  /**\n   * Set the layer scale.\n   *\n   * @param {Scalar3D} newScale The scale as {x,y,z}.\n   * @param {Point3D} [center] The scale center.\n   */\n  setScale(newScale, center) {\n    const helper = this.#viewController.getPlaneHelper();\n    const orientedNewScale = helper.getTargetOrientedPositiveXYZ({\n      x: newScale.x * this.#flipScale.x,\n      y: newScale.y * this.#flipScale.y,\n      z: newScale.z * this.#flipScale.z,\n    });\n    const finalNewScale = {\n      x: this.#fitScale.x * orientedNewScale.x,\n      y: this.#fitScale.y * orientedNewScale.y\n    };\n\n    if (Math.abs(newScale.x) === 1 &&\n      Math.abs(newScale.y) === 1 &&\n      Math.abs(newScale.z) === 1) {\n      // reset zoom offset for scale=1\n      const resetOffset = {\n        x: this.#offset.x - this.#zoomOffset.x,\n        y: this.#offset.y - this.#zoomOffset.y\n      };\n      // store new offset\n      this.#zoomOffset = {x: 0, y: 0};\n      this.#offset = resetOffset;\n    } else {\n      if (typeof center !== 'undefined') {\n        let worldCenter = helper.getPlaneOffsetFromOffset3D({\n          x: center.getX(),\n          y: center.getY(),\n          z: center.getZ()\n        });\n        // center was obtained with viewLayer.displayToMainPlanePos\n        // compensated for baseOffset\n        // TODO: justify...\n        worldCenter = {\n          x: worldCenter.x + this.#baseOffset.x,\n          y: worldCenter.y + this.#baseOffset.y\n        };\n\n        const newOffset = getScaledOffset(\n          this.#offset, this.#scale, finalNewScale, worldCenter);\n\n        const newZoomOffset = {\n          x: this.#zoomOffset.x + newOffset.x - this.#offset.x,\n          y: this.#zoomOffset.y + newOffset.y - this.#offset.y\n        };\n        // store new offset\n        this.#zoomOffset = newZoomOffset;\n        this.#offset = newOffset;\n      }\n    }\n\n    // store new scale\n    this.#scale = finalNewScale;\n  }\n\n  /**\n   * Initialise the layer scale.\n   *\n   * @param {Scalar3D} newScale The scale as {x,y,z}.\n   * @param {Scalar2D} absoluteZoomOffset The zoom offset as {x,y}\n   *   without the fit scale (as provided by getAbsoluteZoomOffset).\n   */\n  initScale(newScale, absoluteZoomOffset) {\n    const helper = this.#viewController.getPlaneHelper();\n    const orientedNewScale = helper.getTargetOrientedPositiveXYZ({\n      x: newScale.x * this.#flipScale.x,\n      y: newScale.y * this.#flipScale.y,\n      z: newScale.z * this.#flipScale.z,\n    });\n    const finalNewScale = {\n      x: this.#fitScale.x * orientedNewScale.x,\n      y: this.#fitScale.y * orientedNewScale.y\n    };\n    this.#scale = finalNewScale;\n\n    this.#zoomOffset = {\n      x: absoluteZoomOffset.x / this.#fitScale.x,\n      y: absoluteZoomOffset.y / this.#fitScale.y\n    };\n    this.#offset = {\n      x: this.#offset.x + this.#zoomOffset.x,\n      y: this.#offset.y + this.#zoomOffset.y\n    };\n  }\n\n  /**\n   * Set the base layer offset. Updates the layer offset.\n   *\n   * @param {Vector3D} scrollOffset The scroll offset vector.\n   * @param {Vector3D} planeOffset The plane offset vector.\n   * @param {Point3D} [layerGroupOrigin] The layer group origin.\n   * @param {Point3D} [layerGroupOrigin0] The layer group first origin.\n   * @returns {boolean} True if the offset was updated.\n   */\n  setBaseOffset(\n    scrollOffset, planeOffset,\n    layerGroupOrigin, layerGroupOrigin0) {\n    const helper = this.#viewController.getPlaneHelper();\n    const scrollDimIndex = helper.getNativeScrollDimIndex();\n    const newOffset = helper.getPlaneOffsetFromOffset3D({\n      x: scrollDimIndex === 0 ? scrollOffset.getX() : planeOffset.getX(),\n      y: scrollDimIndex === 1 ? scrollOffset.getY() : planeOffset.getY(),\n      z: scrollDimIndex === 2 ? scrollOffset.getZ() : planeOffset.getZ(),\n    });\n    const needsUpdate = this.#baseOffset.x !== newOffset.x ||\n      this.#baseOffset.y !== newOffset.y;\n    // store layer group origins\n    if (typeof layerGroupOrigin !== 'undefined' &&\n      typeof layerGroupOrigin0 !== 'undefined') {\n      this.#layerGroupOrigin = layerGroupOrigin;\n      this.#layerGroupOrigin0 = layerGroupOrigin0;\n    }\n    // reset offset if needed\n    if (needsUpdate) {\n      this.#offset = {\n        x: this.#offset.x - this.#baseOffset.x + newOffset.x,\n        y: this.#offset.y - this.#baseOffset.y + newOffset.y\n      };\n      this.#baseOffset = newOffset;\n    }\n    return needsUpdate;\n  }\n\n  /**\n   * Set the layer offset.\n   *\n   * @param {Scalar3D} newOffset The offset as {x,y,z}.\n   */\n  setOffset(newOffset) {\n    const helper = this.#viewController.getPlaneHelper();\n    const newPanOffset = helper.getPlaneOffsetFromOffset3D(newOffset);\n    this.#offset = {\n      x: this.#offset.x - this.#panOffset.x + newPanOffset.x,\n      y: this.#offset.y - this.#panOffset.y + newPanOffset.y\n    };\n    this.#panOffset = newPanOffset;\n  }\n\n  /**\n   * Transform a display position to a 2D index.\n   *\n   * @param {Point2D} point2D The input point.\n   * @returns {Index} The equivalent 2D index.\n   */\n  displayToPlaneIndex(point2D) {\n    const planePos = this.displayToPlanePos(point2D);\n    return new Index([\n      Math.floor(planePos.getX()),\n      Math.floor(planePos.getY())\n    ]);\n  }\n\n  /**\n   * Remove scale from a display position.\n   *\n   * @param {Point2D} point2D The input point.\n   * @returns {Point2D} The de-scaled point.\n   */\n  displayToPlaneScale(point2D) {\n    return new Point2D(\n      point2D.getX() / this.#scale.x,\n      point2D.getY() / this.#scale.y\n    );\n  }\n\n  /**\n   * Get a plane position from a display position.\n   *\n   * @param {Point2D} point2D The input point.\n   * @returns {Point2D} The plane position.\n   */\n  displayToPlanePos(point2D) {\n    const deScaled = this.displayToPlaneScale(point2D);\n    return new Point2D(\n      deScaled.getX() + this.#offset.x,\n      deScaled.getY() + this.#offset.y\n    );\n  }\n\n  /**\n   * Get a display position from a plane position.\n   *\n   * @param {Point2D} point2D The input point.\n   * @returns {Point2D} The display position, can be individually\n   *   undefined if out of bounds.\n   */\n  planePosToDisplay(point2D) {\n    let posX =\n      (point2D.getX() - this.#offset.x + this.#baseOffset.x) * this.#scale.x;\n    let posY =\n      (point2D.getY() - this.#offset.y + this.#baseOffset.y) * this.#scale.y;\n    // check if in bounds\n    if (posX < 0 || posX >= this.#canvas.width) {\n      posX = undefined;\n    }\n    if (posY < 0 || posY >= this.#canvas.height) {\n      posY = undefined;\n    }\n    return new Point2D(posX, posY);\n  }\n\n  /**\n   * Get a main plane position from a display position.\n   *\n   * @param {Point2D} point2D The input point.\n   * @returns {Point2D} The main plane position.\n   */\n  displayToMainPlanePos(point2D) {\n    const planePos = this.displayToPlanePos(point2D);\n    return new Point2D(\n      planePos.getX() - this.#baseOffset.x,\n      planePos.getY() - this.#baseOffset.y\n    );\n  }\n\n  /**\n   * Display the layer.\n   *\n   * @param {boolean} flag Whether to display the layer or not.\n   */\n  display(flag) {\n    this.#containerDiv.style.display = flag ? '' : 'none';\n  }\n\n  /**\n   * Check if the layer is visible.\n   *\n   * @returns {boolean} True if the layer is visible.\n   */\n  isVisible() {\n    return this.#containerDiv.style.display === '';\n  }\n\n  /**\n   * Draw the content (imageData) of the layer.\n   * The imageData variable needs to be set.\n   *\n   * @fires App#renderstart\n   * @fires App#renderend\n   */\n  draw() {\n    // skip for non valid position\n    if (!this.#isValidPosition) {\n      return;\n    }\n\n    /**\n     * Render start event.\n     *\n     * @event App#renderstart\n     * @type {object}\n     * @property {string} type The event type.\n     */\n    let event = {\n      type: 'renderstart',\n      layerid: this.getId(),\n      dataid: this.getDataId()\n    };\n    this.#fireEvent(event);\n\n    // update data if needed\n    if (this.#needsDataUpdate) {\n      this.#updateImageData();\n    }\n\n    // context opacity\n    this.#context.globalAlpha = this.#opacity;\n\n    // clear context\n    this.clear();\n\n    // draw the cached canvas on the context\n    // transform takes as input a, b, c, d, e, f to create\n    // the transform matrix (column-major order):\n    // [ a c e ]\n    // [ b d f ]\n    // [ 0 0 1 ]\n    this.#context.setTransform(\n      this.#scale.x,\n      0,\n      0,\n      this.#scale.y,\n      -1 * this.#offset.x * this.#scale.x,\n      -1 * this.#offset.y * this.#scale.y\n    );\n\n    // disable smoothing (set just before draw, could be reset by resize)\n    this.#context.imageSmoothingEnabled = this.#imageSmoothing;\n    // draw image\n    this.#context.drawImage(this.#offscreenCanvas, 0, 0);\n\n    /**\n     * Render end event.\n     *\n     * @event App#renderend\n     * @type {object}\n     * @property {string} type The event type.\n     */\n    event = {\n      type: 'renderend',\n      layerid: this.getId(),\n      dataid: this.getDataId()\n    };\n    this.#fireEvent(event);\n  }\n\n  /**\n   * Initialise the layer: set the canvas and context.\n   *\n   * @param {Scalar2D} size The image size as {x,y}.\n   * @param {Scalar2D} spacing The image spacing as {x,y}.\n   * @param {number} alpha The initial data opacity.\n   */\n  initialise(size, spacing, alpha) {\n    // set locals\n    this.#baseSpacing = spacing;\n    this.#opacity = Math.min(Math.max(alpha, 0), 1);\n\n    // create canvas\n    // (canvas size is set in fitToContainer)\n    this.#canvas = document.createElement('canvas');\n    this.#containerDiv.appendChild(this.#canvas);\n\n    // check that the getContext method exists\n    if (!this.#canvas.getContext) {\n      alert('Error: no canvas.getContext method.');\n      return;\n    }\n    // get the 2D context\n    this.#context = this.#canvas.getContext('2d');\n    if (!this.#context) {\n      alert('Error: failed to get the 2D context.');\n      return;\n    }\n\n    // off screen canvas\n    this.#offscreenCanvas = document.createElement('canvas');\n\n    // set base size: needs an existing context and off screen canvas\n    this.#setBaseSize(size);\n\n    // update data on first draw\n    this.#needsDataUpdate = true;\n  }\n\n  /**\n   * Set the base size of the layer.\n   *\n   * @param {Scalar2D} size The size as {x,y}.\n   */\n  #setBaseSize(size) {\n    // check canvas creation\n    if (!canCreateCanvas(size.x, size.y)) {\n      throw new Error('Cannot create canvas with size ' +\n        size.x + ', ' + size.y);\n    }\n\n    // set local\n    this.#baseSize = size;\n\n    // off screen canvas\n    this.#offscreenCanvas.width = this.#baseSize.x;\n    this.#offscreenCanvas.height = this.#baseSize.y;\n    // original empty image data array\n    this.#context.clearRect(0, 0, this.#baseSize.x, this.#baseSize.y);\n    this.#imageData = this.#context.createImageData(\n      this.#baseSize.x, this.#baseSize.y);\n  }\n\n  /**\n   * Fit the layer to its parent container.\n   *\n   * @param {Scalar2D} containerSize The fit size as {x,y}.\n   * @param {number} divToWorldSizeRatio The div to world size ratio.\n   * @param {Scalar2D} fitOffset The fit offset as {x,y}.\n   */\n  fitToContainer(containerSize, divToWorldSizeRatio, fitOffset) {\n    let needsDraw = false;\n\n    // fit scale\n    const newFitScale = {\n      x: divToWorldSizeRatio * this.#baseSpacing.x,\n      y: divToWorldSizeRatio * this.#baseSpacing.y\n    };\n    const fitRatio = {\n      x: newFitScale.x / this.#fitScale.x,\n      y: newFitScale.y / this.#fitScale.y\n    };\n\n    // size ratio (calculated before update)\n    const sizeRatio = {\n      x: containerSize.x / (this.#canvas.width * fitRatio.x),\n      y: containerSize.y / (this.#canvas.height * fitRatio.y)\n    };\n\n    // set canvas size if different from previous\n    if (this.#canvas.width !== containerSize.x ||\n      this.#canvas.height !== containerSize.y) {\n      if (!canCreateCanvas(containerSize.x, containerSize.y)) {\n        throw new Error('Cannot resize canvas ' +\n          containerSize.x + ', ' + containerSize.y);\n      }\n      // canvas size change triggers canvas reset\n      this.#canvas.width = containerSize.x;\n      this.#canvas.height = containerSize.y;\n      // update draw flag\n      needsDraw = true;\n    }\n\n    // #scale = inputScale * fitScale * flipScale\n    // flipScale does not change here, we can omit it\n    // newScale = (#scale / fitScale) * newFitScale\n    const newScale = {\n      x: this.#scale.x * fitRatio.x,\n      y: this.#scale.y * fitRatio.y\n    };\n\n    // set scales if different from previous\n    if (this.#scale.x !== newScale.x ||\n      this.#scale.y !== newScale.y) {\n      this.#fitScale = newFitScale;\n      this.#scale = newScale;\n      // update draw flag\n      needsDraw = true;\n    }\n\n    // view offset\n    const newViewOffset = {\n      x: fitOffset.x / newFitScale.x,\n      y: fitOffset.y / newFitScale.y\n    };\n    // flip offset\n    const scaledImageSize = {\n      x: containerSize.x / newFitScale.x,\n      y: containerSize.y / newFitScale.y\n    };\n    const newFlipOffset = {\n      x: this.#flipOffset.x !== 0 ? scaledImageSize.x : 0,\n      y: this.#flipOffset.y !== 0 ? scaledImageSize.y : 0,\n    };\n\n    // set offsets if different from previous\n    if (this.#viewOffset.x !== newViewOffset.x ||\n      this.#viewOffset.y !== newViewOffset.y ||\n      this.#flipOffset.x !== newFlipOffset.x ||\n      this.#flipOffset.y !== newFlipOffset.y) {\n      const newZoomOffset = {\n        x: this.#zoomOffset.x * sizeRatio.x,\n        y: this.#zoomOffset.y * sizeRatio.y\n      };\n      // update global offset\n      this.#offset = {\n        x: this.#offset.x +\n          newViewOffset.x - this.#viewOffset.x +\n          newFlipOffset.x - this.#flipOffset.x +\n          newZoomOffset.x - this.#zoomOffset.x,\n        y: this.#offset.y +\n          newViewOffset.y - this.#viewOffset.y +\n          newFlipOffset.y - this.#flipOffset.y +\n          newZoomOffset.y - this.#zoomOffset.y\n      };\n      // update private local offsets\n      this.#flipOffset = newFlipOffset;\n      this.#viewOffset = newViewOffset;\n      this.#zoomOffset = newZoomOffset;\n      // update draw flag\n      needsDraw = true;\n    }\n\n    // draw if needed\n    if (needsDraw) {\n      this.draw();\n    }\n  }\n\n  /**\n   * Enable and listen to container interaction events.\n   */\n  bindInteraction() {\n    // allow pointer events\n    this.#containerDiv.style.pointerEvents = 'auto';\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      const eventName = names[i];\n      const passive = eventName !== 'wheel';\n      this.#containerDiv.addEventListener(\n        eventName, this.#fireEvent, {passive: passive});\n    }\n  }\n\n  /**\n   * Disable and stop listening to container interaction events.\n   */\n  unbindInteraction() {\n    // disable pointer events\n    this.#containerDiv.style.pointerEvents = 'none';\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      this.#containerDiv.removeEventListener(names[i], this.#fireEvent);\n    }\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    event.srclayerid = this.getId();\n    event.dataid = this.#dataId;\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  // common layer methods [end] ---------------\n\n  /**\n   * Update the canvas image data.\n   */\n  #updateImageData() {\n    // generate image data\n    this.#viewController.generateImageData(this.#imageData);\n    // pass the data to the off screen canvas\n    this.#offscreenCanvas.getContext('2d').putImageData(this.#imageData, 0, 0);\n    // update data flag\n    this.#needsDataUpdate = false;\n  }\n\n  /**\n   * Handle window/level change.\n   *\n   * @param {object} event The event fired when changing the window/level.\n   */\n  #onWLChange = (event) => {\n    // generate and draw if no skip flag\n    const skip = typeof event.skipGenerate !== 'undefined' &&\n      event.skipGenerate === true;\n    if (!skip) {\n      this.#needsDataUpdate = true;\n      this.draw();\n    }\n  };\n\n  /**\n   * Handle colour map change.\n   *\n   * @param {object} event The event fired when changing the colour map.\n   */\n  #onColourMapChange = (event) => {\n    const skip = typeof event.skipGenerate !== 'undefined' &&\n      event.skipGenerate === true;\n    if (!skip) {\n      this.#needsDataUpdate = true;\n      this.draw();\n    }\n  };\n\n  /**\n   * Handle position change.\n   *\n   * @param {object} event The event fired when changing the position.\n   */\n  #onPositionChange = (event) => {\n    const skip = typeof event.skipGenerate !== 'undefined' &&\n      event.skipGenerate === true;\n    if (!skip) {\n      let valid = true;\n      if (typeof event.valid !== 'undefined') {\n        valid = event.valid;\n      }\n      // clear for non valid events\n      if (!valid) {\n        // clear only once\n        if (this.#isValidPosition) {\n          this.#isValidPosition = false;\n          this.clear();\n        }\n      } else {\n        // 3D dimensions\n        const dims3D = [0, 1, 2];\n        // remove scroll index\n        const indexScrollDimIndex =\n          dims3D.indexOf(this.#viewController.getScrollDimIndex());\n        dims3D.splice(indexScrollDimIndex, 1);\n        // remove non scroll index from diff dims\n        const diffDims = event.diffDims.filter(function (item) {\n          return dims3D.indexOf(item) === -1;\n        });\n        // update if we have something left\n        if (diffDims.length !== 0 || !this.#isValidPosition) {\n          // reset valid flag\n          this.#isValidPosition = true;\n          // reset update flag\n          this.#needsDataUpdate = true;\n          this.draw();\n        }\n      }\n    }\n  };\n\n  /**\n   * Handle alpha function change.\n   *\n   * @param {object} event The event fired when changing the function.\n   */\n  #onAlphaFuncChange = (event) => {\n    const skip = typeof event.skipGenerate !== 'undefined' &&\n      event.skipGenerate === true;\n    if (!skip) {\n      this.#needsDataUpdate = true;\n      this.draw();\n    }\n  };\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point} position The new position.\n   * @param {Index} _index The new index.\n   * @returns {boolean} True if the position was updated.\n   */\n  setCurrentPosition(position, _index) {\n    return this.#viewController.setCurrentPosition(position);\n  }\n\n  /**\n   * Clear the context.\n   */\n  clear() {\n    // clear the context: reset the transform first\n    // store the current transformation matrix\n    this.#context.save();\n    // use the identity matrix while clearing the canvas\n    this.#context.setTransform(1, 0, 0, 1, 0, 0);\n    this.#context.clearRect(0, 0, this.#canvas.width, this.#canvas.height);\n    // restore the transform\n    this.#context.restore();\n  }\n\n} // ViewLayer class\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get a normalised spin speed in the Y direction to try to support\n * trackpads (small and large deltaY) and mouse wheel (large deltaY).\n * Should return 1 or -1 for a single mouse wheel tick.\n *\n * @param {object} event The wheel event.\n * @returns {number} The normalised spin Y.\n */\nfunction getSpinY(event) {\n  // (notes of 03/2024)\n\n  // firefox seems to change the value of deltaY\n  // if you ask for deltaMode before (?????)\n\n  // deltaY (for a single mouse wheel tick):\n  // - chrome: [linux] 120, [mac]: 4\n  // - firefox: [linux] 132, [mac]: 16\n\n  // wheelDelta (for a single mouse wheel tick):\n  // - chrome: [linux] 120, [mac]: 240\n  // - firefox: [linux] 120, [mac]: 48\n\n  // -> using wheelDelta for mouse wheel detection as\n  //    it is consistently larger than trackpad scroll\n\n  // wheelDeltaY and deltaY do not go in the same direction,\n  // using -deltaY so that they do...\n\n  if (typeof event.wheelDeltaY === 'undefined') {\n    //logger.warn('No wheel delta, scroll could be tricky...);\n    return -event.deltaY;\n  } else {\n    const threshold = 45;\n    if (event.wheelDeltaY > threshold) {\n      return 1;\n    } else if (event.wheelDeltaY < -threshold) {\n      return -1;\n    } else {\n      return -event.deltaY / 60;\n    }\n  }\n}\n\n/**\n * Class to sum wheel events and know if that sum\n * corresponds to a 'tick'.\n */\nclass ScrollSum {\n  /**\n   * The scroll sum.\n   *\n   * @type {number}\n   */\n  #sum = 0;\n\n  /**\n   * Get the scroll sum.\n   *\n   * @returns {number} The scroll sum.\n   */\n  getSum() {\n    return this.#sum;\n  }\n\n  /**\n   * Add scroll.\n   *\n   * @param {object} event The wheel event.\n   */\n  add(event) {\n    this.#sum += getSpinY(event);\n  }\n\n  /**\n   * Clear the scroll sum.\n   */\n  clear() {\n    this.#sum = 0;\n  }\n\n  /**\n   * Does the accumulated scroll correspond to a 'tick'.\n   *\n   * @returns {boolean} True if the sum corresponds to a 'tick'.\n   */\n  isTick() {\n    return Math.abs(this.#sum) >= 1;\n  }\n}\n\n/**\n * Scroll wheel class: provides a wheel event handler\n *   that scroll the corresponding data.\n */\nexport class ScrollWheel {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Accumulated scroll.\n   *\n   * @type {ScrollSum}\n   */\n  #scrollSum = new ScrollSum();\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {WheelEvent} event The mouse wheel event.\n   */\n  wheel(event) {\n    this.#scrollSum.add(event);\n    const up = this.#scrollSum.getSum() >= 0;\n\n    // exit if no tick\n    if (!this.#scrollSum.isTick()) {\n      return;\n    } else {\n      this.#scrollSum.clear();\n    }\n\n    // prevent default page scroll\n    event.preventDefault();\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const positionHelper = layerGroup.getPositionHelper();\n\n    if (layerGroup.canScroll()) {\n      if (up) {\n        positionHelper.incrementPositionAlongScroll();\n      } else {\n        positionHelper.decrementPositionAlongScroll();\n      }\n    } else if (layerGroup.moreThanOne(3)) {\n      if (up) {\n        positionHelper.incrementPosition(3);\n      } else {\n        positionHelper.decrementPosition(3);\n      }\n    }\n  }\n\n} // ScrollWheel class\n","import {Point2D} from './point';\nimport {\n  isSimilar,\n  REAL_WORLD_EPSILON,\n} from './matrix';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ViewController} from '../app/viewController';\nimport {Scalar2D} from './scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * Line shape.\n */\nexport class Line {\n\n  /**\n   * Line begin point.\n   *\n   * @type {Point2D}\n   */\n  #begin;\n\n  /**\n   * Line end point.\n   *\n   * @type {Point2D}\n   */\n  #end;\n\n  /**\n   * @param {Point2D} begin A Point2D representing the beginning\n   *   of the line.\n   * @param {Point2D} end A Point2D representing the end of the line.\n   */\n  constructor(begin, end) {\n    this.#begin = begin;\n    this.#end = end;\n  }\n\n  /**\n   * Get the begin point of the line.\n   *\n   * @returns {Point2D} The beginning point of the line.\n   */\n  getBegin() {\n    return this.#begin;\n  }\n\n  /**\n   * Get the end point of the line.\n   *\n   * @returns {Point2D} The ending point of the line.\n   */\n  getEnd() {\n    return this.#end;\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Line} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getBegin().equals(rhs.getBegin()) &&\n      this.getEnd().equals(rhs.getEnd());\n  }\n\n  /**\n   * Get the line delta in the X direction.\n   *\n   * @returns {number} The delta in the X direction.\n   */\n  getDeltaX() {\n    return this.getEnd().getX() - this.getBegin().getX();\n  }\n\n  /**\n   * Get the line delta in the Y direction.\n   *\n   * @returns {number} The delta in the Y direction.\n   */\n  getDeltaY() {\n    return this.getEnd().getY() - this.getBegin().getY();\n  }\n\n  /**\n   * Get the length of the line.\n   *\n   * @returns {number} The length of the line.\n   */\n  getLength() {\n    return Math.sqrt(\n      this.getDeltaX() * this.getDeltaX() +\n      this.getDeltaY() * this.getDeltaY()\n    );\n  }\n\n  /**\n   * Get the length of the line according to a  spacing.\n   *\n   * @param {Scalar2D} spacing2D The 2D spacing.\n   * @returns {number} The length of the line with spacing\n   *  or null for null spacings.\n   */\n  getWorldLength(spacing2D) {\n    let wlen = null;\n    if (spacing2D !== null) {\n      const dxs = this.getDeltaX() * spacing2D.x;\n      const dys = this.getDeltaY() * spacing2D.y;\n      wlen = Math.sqrt(dxs * dxs + dys * dys);\n    }\n    return wlen;\n  }\n\n  /**\n   * Get the mid point of the line.\n   *\n   * @returns {Point2D} The mid point of the line.\n   */\n  getMidpoint() {\n    return new Point2D(\n      (this.getBegin().getX() + this.getEnd().getX()) / 2,\n      (this.getBegin().getY() + this.getEnd().getY()) / 2\n    );\n  }\n\n  /**\n   * Get the centroid of the line.\n   *\n   * @returns {Point2D} THe centroid point.\n   */\n  getCentroid() {\n    return this.getMidpoint();\n  }\n\n  /**\n   * Get the slope of the line.\n   *\n   * @returns {number} The slope of the line.\n   */\n  getSlope() {\n    return this.getDeltaY() / this.getDeltaX();\n  }\n\n  /**\n   * Get the intercept of the line.\n   *\n   * @returns {number} The slope of the line.\n   */\n  getIntercept() {\n    return (\n      this.getEnd().getX() * this.getBegin().getY() -\n      this.getBegin().getX() * this.getEnd().getY()\n    ) / this.getDeltaX();\n  }\n\n  /**\n   * Get the inclination of the line.\n   *\n   * @returns {number} The inclination of the line.\n   */\n  getInclination() {\n    // tan(theta) = slope\n    const angle =\n      Math.atan2(this.getDeltaY(), this.getDeltaX()) * 180 / Math.PI;\n    // shift?\n    return 180 - angle;\n  }\n\n  /**\n   * Quantify a line according to view information.\n   *\n   * @param {ViewController} viewController The associated view controller.\n   * @returns {object} A quantification object.\n   */\n  quantify(viewController) {\n    const quant = {};\n    // length\n    const spacing2D = viewController.get2DSpacing();\n    const length = this.getWorldLength(spacing2D);\n    if (length !== null) {\n      quant.length = {value: length, unit: 'unit.mm'};\n    }\n    // return\n    return quant;\n  }\n\n} // Line class\n\n/**\n * Get the angle between two lines in degree.\n *\n * @param {Line} line0 The first line.\n * @param {Line} line1 The second line.\n * @returns {number} The angle.\n */\nexport function getAngle(line0, line1) {\n  const dx0 = line0.getDeltaX();\n  const dy0 = line0.getDeltaY();\n  const dx1 = line1.getDeltaX();\n  const dy1 = line1.getDeltaY();\n  // dot = ||a||*||b||*cos(theta)\n  const dot = dx0 * dx1 + dy0 * dy1;\n  // cross = ||a||*||b||*sin(theta)\n  const det = dx0 * dy1 - dy0 * dx1;\n  // tan = sin / cos\n  const angle = Math.atan2(det, dot) * 180 / Math.PI;\n  // complementary angle\n  // shift?\n  return 360 - (180 - angle);\n}\n\n/**\n * Check if two lines are orthogonal.\n *\n * @param {Line} line0 The first line.\n * @param {Line} line1 The second line.\n * @returns {boolean} True if both lines are orthogonal.\n */\nexport function areOrthogonal(line0, line1) {\n  const dx0 = line0.getDeltaX();\n  const dy0 = line0.getDeltaY();\n  const dx1 = line1.getDeltaX();\n  const dy1 = line1.getDeltaY();\n  // dot = ||a||*||b||*cos(theta)\n  return (dx0 * dx1 + dy0 * dy1) === 0;\n}\n\n/**\n * Check if a point is in a line coordinate range.\n *\n * @param {Point2D} point The input point.\n * @param {Line} line The input line.\n * @returns {boolean} True if the input point is in the line coordinate range.\n */\nexport function isPointInLineRange(point, line) {\n  const minX = Math.min(line.getBegin().getX(), line.getEnd().getX());\n  const maxX = Math.max(line.getBegin().getX(), line.getEnd().getX());\n  const minY = Math.min(line.getBegin().getY(), line.getEnd().getY());\n  const maxY = Math.max(line.getBegin().getY(), line.getEnd().getY());\n  return point.getX() >= minX &&\n    point.getX() <= maxX &&\n    point.getY() >= minY &&\n    point.getY() <= maxY;\n}\n\n/**\n * Get a perpendicular line to an input one at a given point.\n *\n * @param {Line} line The line to be perpendicular to.\n * @param {Point2D} point The middle point of the perpendicular line.\n * @param {number} length The length of the perpendicular line.\n * @param {Scalar2D} [spacing] Optional image spacing, default to [1,1].\n * @returns {Line} The perpendicular line.\n */\nexport function getPerpendicularLine(line, point, length, spacing) {\n  if (typeof spacing === 'undefined') {\n    spacing = {x: 1, y: 1};\n  }\n  const sx2 = spacing.x * spacing.x;\n  const sy2 = spacing.y * spacing.y;\n  // a0 * a1 = -1 (in square space)\n  const perpSlope = -sx2 / (sy2 * line.getSlope());\n  // y0 = a1*x0 + b1 -> b1 = y0 - a1*x0\n  const prepIntercept = point.getY() - perpSlope * point.getX();\n  // return\n  return getLineFromEquation(perpSlope, prepIntercept, point, length, spacing);\n}\n\n/**\n * Get a perpendicular line to an input one at a given distance\n *   of its begin point.\n *\n * @param {Line} line The line to be perpendicular to.\n * @param {number} distance The distance to the input line begin point.\n * @param {number} length The length of the perpendicular line.\n * @param {Scalar2D} [spacing] Optional image spacing, default to [1,1].\n * @returns {Line} The perpendicular line.\n */\nexport function getPerpendicularLineAtDistance(\n  line, distance, length, spacing) {\n  // get a line along the input one and centered on begin point\n  const lineFromEq = getLineFromEquation(\n    line.getSlope(),\n    line.getIntercept(),\n    line.getBegin(),\n    distance,\n    spacing\n  );\n  // select the point on the input line\n  let startPoint;\n  if (isPointInLineRange(lineFromEq.getBegin(), line)) {\n    startPoint = lineFromEq.getBegin();\n  } else {\n    startPoint = lineFromEq.getEnd();\n  }\n  // use it as base for a perpendicular line\n  return getPerpendicularLine(line, startPoint, length, spacing);\n}\n\n/**\n * Get a line from an equation, a middle point and a length.\n *\n * @param {number} slope The line slope.\n * @param {number} intercept The line intercept.\n * @param {Point2D} point The middle point of the line.\n * @param {number} length The line length.\n * @param {Scalar2D} [spacing] Optional image spacing, default to [1,1].\n * @returns {Line} The resulting line.\n */\nexport function getLineFromEquation(slope, intercept, point, length, spacing) {\n  if (typeof spacing === 'undefined') {\n    spacing = {x: 1, y: 1};\n  }\n  // begin point\n  let beginX = 0;\n  let beginY = 0;\n  // end point\n  let endX = 0;\n  let endY = 0;\n\n  if (isSimilar(slope, 0, REAL_WORLD_EPSILON)) {\n    // slope = ~0 -> horizontal input line\n    beginX = point.getX() - length / (2 * spacing.x);\n    beginY = point.getY();\n    endX = point.getX() + length / (2 * spacing.x);\n    endY = point.getY();\n  } else if (Math.abs(slope) > 1e6) {\n    // slope = ~(+/-)Infinity -> vertical input line\n    beginX = point.getX();\n    beginY = point.getY() - length / (2 * spacing.y);\n    endX = point.getX();\n    endY = point.getY() + length / (2 * spacing.y);\n  } else {\n    const sx2 = spacing.x * spacing.x;\n    const sy2 = spacing.y * spacing.y;\n\n    // 1. [length] sx^2 * (x - x0)^2 + sy^2 * (y - y0)^2 = d^2\n    // 2. [slope] a = (y - y0) / (x - x0) -> y - y0 = a*(x - x0)\n    // ->  sx^2 * (x - x0)^2 + sy^2 * a^2 * (x - x0)^2 = d^2\n    // ->  (x - x0)^2 = d^2 / (sx^2 + sy^2 * a^2)\n    // -> x = x0 +- d / sqrt(sx^2 + sy^2 * a^2)\n\n    // length is the distance between begin and end,\n    // point is half way between both -> d = length / 2\n    const dx = length / (2 * Math.sqrt(sx2 + sy2 * slope * slope));\n\n    // begin point\n    beginX = point.getX() - dx;\n    beginY = slope * beginX + intercept;\n    // end point\n    endX = point.getX() + dx;\n    endY = slope * endX + intercept;\n  }\n  return new Line(\n    new Point2D(beginX, beginY),\n    new Point2D(endX, endY));\n}\n","// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Annotation} from '../image/annotation';\nimport {DrawController} from '../app/drawController';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get the display name of the input shape.\n *\n * @param {Konva.Shape} shape The Konva shape.\n * @returns {string} The display name.\n */\nexport function getShapeDisplayName(shape) {\n  let displayName = 'shape';\n  if (shape instanceof Konva.Line) {\n    if (shape.points().length === 4) {\n      displayName = 'line';\n    } else if (shape.points().length === 6) {\n      displayName = 'protractor';\n    } else {\n      displayName = 'roi';\n    }\n  } else if (shape instanceof Konva.Rect) {\n    displayName = 'rectangle';\n  } else if (shape instanceof Konva.Ellipse) {\n    displayName = 'ellipse';\n  }\n  // return\n  return displayName;\n}\n\n/**\n * Add annotation command.\n */\nexport class AddAnnotationCommand {\n  /**\n   * @type {Annotation}\n   */\n  #annotation;\n\n  /**\n   * @type {DrawController}\n   */\n  #drawController;\n\n  /**\n   * @param {Annotation} annotation The annotation to add.\n   * @param {DrawController} drawController The associated draw controller.\n   */\n  constructor(annotation, drawController) {\n    this.#annotation = annotation;\n    this.#drawController = drawController;\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'AddAnnotation-' + this.#annotation.id;\n  }\n\n  /**\n   * Execute the command.\n   */\n  execute() {\n    this.#drawController.addAnnotation(this.#annotation);\n  }\n\n  /**\n   * Undo the command.\n   */\n  undo() {\n    this.#drawController.removeAnnotation(this.#annotation.id);\n  }\n}\n\n/**\n * Remove annotation command.\n */\nexport class RemoveAnnotationCommand {\n  /**\n   * @type {Annotation}\n   */\n  #annotation;\n\n  /**\n   * @type {DrawController}\n   */\n  #drawController;\n\n  /**\n   * @param {Annotation} annotation The annotation to remove.\n   * @param {DrawController} drawController The associated draw controller.\n   */\n  constructor(annotation, drawController) {\n    this.#annotation = annotation;\n    this.#drawController = drawController;\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'RemoveAnnotation-' + this.#annotation.id;\n  }\n\n  /**\n   * Execute the command.\n   */\n  execute() {\n    this.#drawController.removeAnnotation(this.#annotation.id);\n  }\n\n  /**\n   * Undo the command.\n   */\n  undo() {\n    this.#drawController.addAnnotation(this.#annotation);\n  }\n}\n\n/**\n * Update annotation command.\n */\nexport class UpdateAnnotationCommand {\n  /**\n   * @type {Annotation}\n   */\n  #annotation;\n\n  /**\n   * @type {DrawController}\n   */\n  #drawController;\n\n  /**\n   * Original annotation properties.\n   *\n   * @type {object}\n   */\n  #originalProps;\n\n  /**\n   * New annotation properties.\n   *\n   * @type {object}\n   */\n  #newProps;\n\n  /**\n   * @param {Annotation} annotation The annotation to update.\n   * @param {object} originaProps The original annotation properties.\n   * @param {object} newProps The new annotation properties.\n   * @param {DrawController} drawController The associated draw controller.\n   */\n  constructor(annotation, originaProps, newProps, drawController) {\n    this.#annotation = annotation;\n    this.#drawController = drawController;\n    this.#originalProps = originaProps;\n    this.#newProps = newProps;\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'UpdateAnnotation-' + this.#annotation.id;\n  }\n\n  /**\n   * Execute the command.\n   */\n  execute() {\n    const keys = Object.keys(this.#newProps);\n    for (const key of keys) {\n      this.#annotation[key] = this.#newProps[key];\n    }\n    this.#drawController.updateAnnotation(this.#annotation, keys);\n  }\n\n  /**\n   * Undo the command.\n   */\n  undo() {\n    const keys = Object.keys(this.#originalProps);\n    for (const key of keys) {\n      this.#annotation[key] = this.#originalProps[key];\n    }\n    this.#drawController.updateAnnotation(this.#annotation, keys);\n  }\n}\n","import {getShadowColour} from '../utils/colour';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Scalar2D} from '../math/scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * Style class.\n */\nexport class Style {\n  /**\n   * Font size.\n   *\n   * @type {number}\n   */\n  #fontSize = 10;\n\n  /**\n   * Font family.\n   *\n   * @type {string}\n   */\n  #fontFamily = 'Verdana';\n\n  /**\n   * Text colour.\n   *\n   * @type {string}\n   */\n  #textColour = '#fff';\n\n  /**\n   * Line colour.\n   *\n   * @type {string}\n   */\n  #lineColour = '#ffff80';\n\n  /**\n   * Base scale.\n   *\n   * @type {Scalar2D}\n   */\n  #baseScale = {x: 1, y: 1};\n\n  /**\n   * Zoom scale.\n   *\n   * @type {Scalar2D}\n   */\n  #zoomScale = {x: 1, y: 1};\n\n  /**\n   * Stroke width.\n   *\n   * @type {number}\n   */\n  #strokeWidth = 2;\n\n  /**\n   * Shadow offset.\n   *\n   * @type {Scalar2D}\n   */\n  #shadowOffset = {x: 0.25, y: 0.25};\n\n  /**\n   * Tag opacity.\n   *\n   * @type {number}\n   */\n  #tagOpacity = 0.2;\n\n  /**\n   * Text padding.\n   *\n   * @type {number}\n   */\n  #textPadding = 3;\n\n  /**\n   * Get the font family.\n   *\n   * @returns {string} The font family.\n   */\n  getFontFamily() {\n    return this.#fontFamily;\n  }\n\n  /**\n   * Get the font size.\n   *\n   * @returns {number} The font size.\n   */\n  getFontSize() {\n    return this.#fontSize;\n  }\n\n  /**\n   * Get the stroke width.\n   *\n   * @returns {number} The stroke width.\n   */\n  getStrokeWidth() {\n    return this.#strokeWidth;\n  }\n\n  /**\n   * Get the text colour.\n   *\n   * @returns {string} The text colour.\n   */\n  getTextColour() {\n    return this.#textColour;\n  }\n\n  /**\n   * Get the line colour.\n   *\n   * @returns {string} The line colour.\n   */\n  getLineColour() {\n    return this.#lineColour;\n  }\n\n  /**\n   * Set the line colour.\n   *\n   * @param {string} colour The line colour.\n   */\n  setLineColour(colour) {\n    this.#lineColour = colour;\n  }\n\n  /**\n   * Set the base scale.\n   *\n   * @param {Scalar2D} scale The scale as {x,y}.\n   */\n  setBaseScale(scale) {\n    this.#baseScale = scale;\n  }\n\n  /**\n   * Set the zoom scale.\n   *\n   * @param {Scalar2D} scale The scale as {x,y}.\n   */\n  setZoomScale(scale) {\n    this.#zoomScale = scale;\n  }\n\n  /**\n   * Get the base scale.\n   *\n   * @returns {Scalar2D} The scale as {x,y}.\n   */\n  getBaseScale() {\n    return this.#baseScale;\n  }\n\n  /**\n   * Get the zoom scale.\n   *\n   * @returns {Scalar2D} The scale as {x,y}.\n   */\n  getZoomScale() {\n    return this.#zoomScale;\n  }\n\n  /**\n   * Scale an input value using the base scale.\n   *\n   * @param {number} value The value to scale.\n   * @returns {number} The scaled value.\n   */\n  scale(value) {\n    // TODO: 2D?\n    return value / this.#baseScale.x;\n  }\n\n  /**\n   * Apply zoom scale on an input value.\n   *\n   * @param {number} value The value to scale.\n   * @returns {Scalar2D} The scaled value as {x,y}.\n   */\n  applyZoomScale(value) {\n    return {\n      x: value / this.#zoomScale.x,\n      y: value / this.#zoomScale.y\n    };\n  }\n\n  /**\n   * Multiply an input value by the zoom ratio (zx/zy).\n   *\n   * @param {number} value The value to scale.\n   * @returns {number} The scaled value.\n   */\n  applyZoomRatio(value) {\n    return value * this.#zoomScale.x / this.#zoomScale.y;\n  }\n\n  /**\n   * Get the shadow offset.\n   *\n   * @returns {Scalar2D} The offset as {x,y}.\n   */\n  getShadowOffset() {\n    return this.#shadowOffset;\n  }\n\n  /**\n   * Get the tag opacity.\n   *\n   * @returns {number} The opacity.\n   */\n  getTagOpacity() {\n    return this.#tagOpacity;\n  }\n\n  /**\n   * Get the text padding.\n   *\n   * @returns {number} The padding.\n   */\n  getTextPadding() {\n    return this.#textPadding;\n  }\n\n  /**\n   * Get the font definition string.\n   *\n   * @returns {string} The font definition string.\n   */\n  getFontStr() {\n    return ('normal ' + this.getFontSize() + 'px sans-serif');\n  }\n\n  /**\n   * Get the line height.\n   *\n   * @returns {number} The line height.\n   */\n  getLineHeight() {\n    return (this.getFontSize() + this.getFontSize() / 5);\n  }\n\n  /**\n   * Get the font size scaled to the display.\n   *\n   * @returns {number} The scaled font size.\n   */\n  getScaledFontSize() {\n    return this.scale(this.getFontSize());\n  }\n\n  /**\n   * Get the stroke width scaled to the display.\n   *\n   * @returns {number} The scaled stroke width.\n   */\n  getScaledStrokeWidth() {\n    return this.scale(this.getStrokeWidth());\n  }\n\n  /**\n   * Get the shadow line colour.\n   *\n   * @returns {string} The shadow line colour.\n   */\n  getShadowLineColour() {\n    return getShadowColour(this.getLineColour());\n  }\n\n} // class Style\n","import {Point2D} from '../math/point';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Scalar2D} from '../math/scalar';\nimport {Style} from '../gui/style';\n// external\nimport Konva from 'konva';\n/* eslint-enable no-unused-vars */\n\n/**\n * List of default label texts.\n *\n * @type {Object.<string, Object.<string, string>>}\n */\nexport const defaultLabelTexts = {\n  arrow: {\n    '*': ''\n  },\n  circle: {\n    '*': '{surface}'\n  },\n  ellipse: {\n    '*': '{surface}'\n  },\n  protractor: {\n    '*': '{angle}'\n  },\n  rectangle: {\n    '*': '{surface}'\n  },\n  roi: {\n    '*': ''\n  },\n  ruler: {\n    '*': '{length}'\n  }\n};\n\n/**\n * Is an input node's name 'label'.\n *\n * @param {Konva.Node} node A Konva node.\n * @returns {boolean} True if the node's name is 'label'.\n */\nexport function isNodeNameLabel(node) {\n  return node.name() === 'label';\n}\n\n/**\n * Is an input node's name 'shape'.\n *\n * @param {Konva.Node} node A Konva node.\n * @returns {boolean} True if the node's name is 'shape'.\n */\nexport function isNodeNameShape(node) {\n  return node.name() === 'shape';\n}\n\n/**\n * Is an input node a position node.\n *\n * @param {Konva.Node} node A Konva node.\n * @returns {boolean} True if the node's name is 'position-group'.\n */\nexport function isPositionNode(node) {\n  return node.name() === 'position-group';\n}\n\n/**\n * Get a Konva.Line shape from a group.\n *\n * @param {Konva.Group} group The group to look into.\n * @returns {Konva.Line|undefined} The shape.\n */\nexport function getLineShape(group) {\n  const kshape = group.getChildren(isNodeNameShape)[0];\n  if (!(kshape instanceof Konva.Line)) {\n    return;\n  }\n  return kshape;\n}\n\n/**\n * Get a Konva.Ellipse anchor shape from a group.\n *\n * @param {Konva.Group} group The group to look into.\n * @param {number} index The anchor index.\n * @returns {Konva.Ellipse|undefined} The anchor shape.\n */\nexport function getAnchorShape(group, index) {\n  const kshape = group.getChildren(function (node) {\n    return node.id() === 'anchor' + index;\n  })[0];\n  if (!(kshape instanceof Konva.Ellipse)) {\n    return;\n  }\n  return kshape;\n}\n\n/**\n * @callback testFn\n * @param {Konva.Node} node The node.\n * @returns {boolean} True if the node passes the test.\n */\n\n/**\n * Get a lambda to check a node's id.\n *\n * @param {string} id The id to check.\n * @returns {testFn} A function to check a node's id.\n */\nexport function isNodeWithId(id) {\n  return function (node) {\n    return node.id() === id;\n  };\n}\n\n/**\n * Draw Debug flag.\n */\nexport const DRAW_DEBUG = false;\n\n/**\n * Get the default anchor shape.\n *\n * @param {number} x The X position.\n * @param {number} y The Y position.\n * @param {string} id The shape id.\n * @param {Style} style The application style.\n * @returns {Konva.Ellipse} The default anchor shape.\n */\nexport function getDefaultAnchor(x, y, id, style) {\n  const radius = style.applyZoomScale(6);\n  const absRadius = {\n    x: Math.abs(radius.x),\n    y: Math.abs(radius.y)\n  };\n  return new Konva.Ellipse({\n    x: x,\n    y: y,\n    stroke: '#999',\n    fill: 'rgba(100,100,100,0.7',\n    strokeWidth: style.getStrokeWidth(),\n    strokeScaleEnabled: false,\n    radius: absRadius,\n    radiusX: absRadius.x,\n    radiusY: absRadius.y,\n    name: 'anchor',\n    id: id.toString(),\n    dragOnTop: false,\n    draggable: true,\n    visible: false\n  });\n}\n\n/**\n * Get an anchor index from its id.\n *\n * @param {string} id The anchor id as 'anchor#'.\n * @returns {number} The anchor index.\n */\nexport function getAnchorIndex(id) {\n  // 'anchor'.length = 6\n  return parseInt(id.substring(6), 10);\n}\n\n/**\n * Bound a node position.\n *\n * @param {Konva.Node} node The node to bound the position.\n * @param {Point2D} min The minimum position.\n * @param {Point2D} max The maximum position.\n * @returns {boolean} True if the position was corrected.\n */\nfunction boundNodePosition(node, min, max) {\n  let changed = false;\n  if (node.x() < min.getX()) {\n    node.x(min.getX());\n    changed = true;\n  } else if (node.x() > max.getX()) {\n    node.x(max.getX());\n    changed = true;\n  }\n  if (node.y() < min.getY()) {\n    node.y(min.getY());\n    changed = true;\n  } else if (node.y() > max.getY()) {\n    node.y(max.getY());\n    changed = true;\n  }\n  return changed;\n}\n\n/**\n * Get a shape top left position range.\n *\n * @param {Scalar2D} stageSize The stage size as {x,y}.\n * @param {Konva.Shape} shape The shape to evaluate.\n * @returns {object} The range as {min, max}.\n */\nexport function getShapePositionRange(stageSize, shape) {\n  const min = new Point2D(0, 0);\n  const max = new Point2D(\n    stageSize.x - Math.abs(shape.width()),\n    stageSize.y - Math.abs(shape.height())\n  );\n\n  return {min: min, max: max};\n}\n\n/**\n * Is an input shape top left position in the input range.\n *\n * @param {Konva.Shape} shape The shape to evaluate.\n * @param {Point2D} min The minimum top left position.\n * @param {Point2D} max The maximum top left position.\n * @returns {boolean} True if in range.\n */\nexport function isShapeInRange(shape, min, max) {\n  // use client rect to get the shape's top left position\n  const boundRect = shape.getClientRect({relativeTo: shape.getParent()});\n  return boundRect.x > min.getX() &&\n    boundRect.x < max.getX() &&\n    boundRect.y > min.getY() &&\n    boundRect.y < max.getY();\n}\n\n/**\n * Validate an anchor position.\n *\n * @param {Scalar2D} stageSize The stage size {x,y}.\n * @param {Konva.Shape} anchor The anchor to evaluate.\n * @returns {boolean} True if the position was corrected.\n */\nexport function validateAnchorPosition(stageSize, anchor) {\n  const group = anchor.getParent();\n\n  const min = new Point2D(\n    -group.x(),\n    -group.y()\n  );\n  const max = new Point2D(\n    stageSize.x - group.x(),\n    stageSize.y - group.y()\n  );\n\n  return boundNodePosition(anchor, min, max);\n}\n","import {logger} from '../utils/logger';\nimport {UpdateAnnotationCommand} from './drawCommands';\nimport {validateAnchorPosition} from './drawBounds';\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\nimport {DrawLayer} from '../gui/drawLayer';\nimport {Annotation} from '../image/annotation';\n/* eslint-enable no-unused-vars */\n\n/**\n * Draw shape editor.\n */\nexport class DrawShapeEditor {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Event callback.\n   *\n   * @type {Function}\n   */\n  #eventCallback;\n\n  /**\n   * @param {App} app The associated application.\n   * @param {Function} eventCallback Event callback.\n   */\n  constructor(app, eventCallback) {\n    this.#app = app;\n    this.#eventCallback = eventCallback;\n  }\n\n  /**\n   * Current shape factory.\n   *\n   * @type {object}\n   */\n  #currentFactory = null;\n\n  /**\n   * Edited shape.\n   *\n   * @type {Konva.Shape}\n   */\n  #shape = null;\n\n  /**\n   * Associated draw layer. Used to bound anchor move.\n   *\n   * @type {DrawLayer}\n   */\n  #drawLayer;\n\n  /**\n   * The associated annotation.\n   *\n   * @type {Annotation}\n   */\n  #annotation;\n\n  /**\n   * Active flag.\n   *\n   * @type {boolean}\n   */\n  #isActive = false;\n\n  /**\n   * @callback eventFn\n   * @param {object} event The event.\n   */\n\n  /**\n   * Set the shape to edit.\n   *\n   * @param {Konva.Shape} inshape The shape to edit.\n   * @param {DrawLayer} drawLayer The associated draw layer.\n   * @param {Annotation} annotation The associated annotation.\n   */\n  setShape(inshape, drawLayer, annotation) {\n    this.#shape = inshape;\n    this.#drawLayer = drawLayer;\n    this.#annotation = annotation;\n\n    if (this.#shape) {\n      // remove old anchors\n      this.#removeAnchors();\n\n      this.#currentFactory = annotation.getFactory();\n      if (this.#currentFactory === null) {\n        throw new Error('Could not find a factory to update shape.');\n      }\n\n      // add new anchors\n      this.#addAnchors();\n    }\n  }\n\n  /**\n   * Get the edited shape.\n   *\n   * @returns {Konva.Shape} The edited shape.\n   */\n  getShape() {\n    return this.#shape;\n  }\n\n  /**\n   * Get the edited annotation.\n   *\n   * @returns {Annotation} The annotation.\n   */\n  getAnnotation() {\n    return this.#annotation;\n  }\n\n  /**\n   * Get the active flag.\n   *\n   * @returns {boolean} The active flag.\n   */\n  isActive() {\n    return this.#isActive;\n  }\n\n  /**\n   * Enable the editor. Redraws the layer.\n   */\n  enable() {\n    this.#isActive = true;\n    if (this.#shape) {\n      this.#setAnchorsVisible(true);\n      if (this.#shape.getLayer()) {\n        this.#shape.getLayer().draw();\n      }\n    }\n  }\n\n  /**\n   * Disable the editor. Redraws the layer.\n   */\n  disable() {\n    this.#isActive = false;\n    if (this.#shape) {\n      this.#setAnchorsVisible(false);\n      if (this.#shape.getLayer()) {\n        this.#shape.getLayer().draw();\n      }\n    }\n  }\n\n  /**\n   * Reset the editor.\n   */\n  reset() {\n    this.#shape = undefined;\n    this.#drawLayer = undefined;\n    this.#annotation = undefined;\n  }\n\n  /**\n   * Reset the anchors.\n   */\n  resetAnchors() {\n    // remove previous controls\n    this.#removeAnchors();\n    // add anchors\n    this.#addAnchors();\n    // set them visible\n    this.#setAnchorsVisible(true);\n  }\n\n  /**\n   * Apply a function on all anchors.\n   *\n   * @param {object} func A f(shape) function.\n   */\n  #applyFuncToAnchors(func) {\n    if (this.#shape && this.#shape.getParent()) {\n      const anchors = this.#shape.getParent().find('.anchor');\n      anchors.forEach(func);\n    }\n  }\n\n  /**\n   * Set anchors visibility.\n   *\n   * @param {boolean} flag The visible flag.\n   */\n  #setAnchorsVisible(flag) {\n    this.#applyFuncToAnchors(function (anchor) {\n      anchor.visible(flag);\n    });\n  }\n\n  /**\n   * Set anchors active.\n   *\n   * @param {boolean} flag The active (on/off) flag.\n   */\n  setAnchorsActive(flag) {\n    let func = null;\n    if (flag) {\n      func = (anchor) => {\n        this.#setAnchorOn(anchor);\n      };\n    } else {\n      func = (anchor) => {\n        this.#setAnchorOff(anchor);\n      };\n    }\n    this.#applyFuncToAnchors(func);\n  }\n\n  /**\n   * Remove anchors.\n   */\n  #removeAnchors() {\n    this.#applyFuncToAnchors(function (anchor) {\n      anchor.remove();\n    });\n  }\n\n  /**\n   * Add the shape anchors.\n   */\n  #addAnchors() {\n    // exit if no shape or no layer\n    if (!this.#shape || !this.#shape.getLayer()) {\n      return;\n    }\n    // get shape group\n    const group = this.#shape.getParent();\n\n    // activate and add anchors to group\n    const anchors =\n      this.#currentFactory.getAnchors(this.#shape, this.#app.getStyle());\n    for (let i = 0; i < anchors.length; ++i) {\n      // set anchor on\n      this.#setAnchorOn(anchors[i]);\n      // add the anchor to the group\n      group.add(anchors[i]);\n    }\n  }\n\n  /**\n   * Set the anchor on listeners.\n   *\n   * @param {Konva.Ellipse} anchor The anchor to set on.\n   */\n  #setAnchorOn(anchor) {\n    let originalProps;\n\n    // drag start listener\n    anchor.on('dragstart.edit', (event) => {\n      // prevent bubbling upwards\n      event.cancelBubble = true;\n      // store original properties\n      originalProps = {\n        mathShape: this.#annotation.mathShape,\n        referencePoints: this.#annotation.referencePoints\n      };\n    });\n    // drag move listener\n    anchor.on('dragmove.edit', (event) => {\n      const anchor = event.target;\n      if (!(anchor instanceof Konva.Shape)) {\n        return;\n      }\n      // validate the anchor position\n      validateAnchorPosition(this.#drawLayer.getBaseSize(), anchor);\n      if (typeof this.#currentFactory.constrainAnchorMove !== 'undefined') {\n        this.#currentFactory.constrainAnchorMove(anchor);\n      }\n\n      // udpate annotation\n      this.#currentFactory.updateAnnotationOnAnchorMove(\n        this.#annotation, anchor);\n      // udpate shape\n      this.#currentFactory.updateShapeGroupOnAnchorMove(\n        this.#annotation, anchor, this.#app.getStyle());\n\n      // redraw\n      if (anchor.getLayer()) {\n        anchor.getLayer().draw();\n      } else {\n        logger.warn('No layer to draw the anchor!');\n      }\n      // prevent bubbling upwards\n      event.cancelBubble = true;\n    });\n    // drag end listener\n    anchor.on('dragend.edit', (event) => {\n      // update annotation command\n      const newProps = {\n        mathShape: this.#annotation.mathShape,\n        referencePoints: this.#annotation.referencePoints\n      };\n      const command = new UpdateAnnotationCommand(\n        this.#annotation,\n        originalProps,\n        newProps,\n        this.#drawLayer.getDrawController()\n      );\n      // add command to undo stack\n      this.#app.addToUndoStack(command);\n      // fire event manually since command is not executed\n      this.#eventCallback({\n        type: 'annotationupdate',\n        data: this.#annotation,\n        dataid: this.#drawLayer.getDataId(),\n        keys: Object.keys(newProps)\n      });\n      // update original properties\n      originalProps = {\n        mathShape: newProps.mathShape,\n        referencePoints: newProps.referencePoints\n      };\n\n      // prevent bubbling upwards\n      event.cancelBubble = true;\n    });\n    // mouse down listener\n    anchor.on('mousedown touchstart', (event) => {\n      const anchor = event.target;\n      anchor.moveToTop();\n    });\n    // mouse over styling\n    anchor.on('mouseover.edit', (event) => {\n      const anchor = event.target;\n      if (!(anchor instanceof Konva.Shape)) {\n        return;\n      }\n      // style is handled by the group\n      anchor.stroke('#ddd');\n      if (anchor.getLayer()) {\n        anchor.getLayer().draw();\n      } else {\n        logger.warn('No layer to draw the anchor!');\n      }\n    });\n    // mouse out styling\n    anchor.on('mouseout.edit', (event) => {\n      const anchor = event.target;\n      if (!(anchor instanceof Konva.Shape)) {\n        return;\n      }\n      // style is handled by the group\n      anchor.stroke('#999');\n      if (anchor.getLayer()) {\n        anchor.getLayer().draw();\n      } else {\n        logger.warn('No layer to draw the anchor!');\n      }\n    });\n  }\n\n  /**\n   * Set the anchor off listeners.\n   *\n   * @param {Konva.Ellipse} anchor The anchor to set off.\n   */\n  #setAnchorOff(anchor) {\n    anchor.off('dragstart.edit');\n    anchor.off('dragmove.edit');\n    anchor.off('dragend.edit');\n    anchor.off('mousedown touchstart');\n    anchor.off('mouseover.edit');\n    anchor.off('mouseout.edit');\n  }\n\n} // class Editor\n","import Konva from 'konva';\n\n/* eslint-disable no-unused-vars */\nimport {Scalar2D} from '../math/scalar';\nimport {DrawLayer} from '../gui/drawLayer';\n/* eslint-enable no-unused-vars */\n\nexport class DrawTrash {\n  /**\n   * Trash draw: a cross.\n   *\n   * @type {Konva.Group}\n   */\n  #trash;\n\n  constructor() {\n    this.createTrashIcon();\n\n  }\n\n  /**\n   * Creates the trash icon o positionates it.\n   */\n  createTrashIcon() {\n    this.#trash = new Konva.Group();\n    // first line of the cross\n    const trashLine1 = new Konva.Line({\n      points: [-10, -10, 10, 10],\n      stroke: 'red'\n    });\n    // second line of the cross\n    const trashLine2 = new Konva.Line({\n      points: [10, -10, -10, 10],\n      stroke: 'red'\n    });\n    this.#trash.width(20);\n    this.#trash.height(20);\n    this.#trash.add(trashLine1);\n    this.#trash.add(trashLine2);\n  }\n\n  /**\n   *\n   * Activates the trash, by showing the icon into the layer draw layer.\n   *\n   * @param {DrawLayer} drawLayer The draw layer where to draw.\n   */\n  activate(drawLayer) {\n    const stage = drawLayer.getKonvaStage();\n    const scale = stage.scale();\n    const konvaLayer = drawLayer.getKonvaLayer();\n    const invscale = {x: 1 / scale.x, y: 1 / scale.y};\n    this.#trash.x(stage.offset().x + (stage.width() / (2 * scale.x)));\n    this.#trash.y(stage.offset().y + (stage.height() / (15 * scale.y)));\n    this.#trash.scale(invscale);\n    konvaLayer.add(this.#trash);\n    // draw\n    konvaLayer.draw();\n  }\n\n  /**\n   *\n   * Change colour on trash over.\n   *\n   * @param {Scalar2D} eventPosition The event drag move position.\n   * @param {Konva.Group} shapeGroup The shape group whose colour\n   *   must be change.\n   * @param {string} originalShapeColour The original shape colour.\n   */\n  changeChildrenColourOnTrashHover(eventPosition,\n    shapeGroup, originalShapeColour) {\n    if (this.isOverTrash(eventPosition)) {\n      this.changeGroupChildrenColour(this.#trash, 'orange');\n      this.changeGroupChildrenColour(shapeGroup, 'red');\n      return;\n\n    }\n    this.changeGroupChildrenColour(this.#trash, 'red');\n    this.changeGroupChildrenColour(shapeGroup, originalShapeColour);\n  }\n\n  /**\n   * Change colour on trash out.\n   *\n   * @param {Konva.Group} group The group whose colour must be change.\n   * @param {string} colour The new colour to be set.\n   */\n  changeGroupChildrenColour(group, colour) {\n    group.getChildren().forEach(function (tshape) {\n      if (tshape instanceof Konva.Shape &&\n        typeof tshape.stroke !== 'undefined') {\n        tshape.stroke(colour);\n      }\n    });\n  }\n\n  /**\n   * Removes the trash from the draw layer.\n   */\n  remove() {\n    this.#trash.remove();\n  }\n\n  /**\n   * Determines if the event is over trash.\n   *\n   * @param {Scalar2D} eventPosition The event position.\n   * @returns {boolean} True if the event is over trash.\n   */\n  isOverTrash(eventPosition) {\n    const trashHalfWidth =\n        this.#trash.width() * Math.abs(this.#trash.scaleX()) / 2;\n    const trashHalfHeight =\n        this.#trash.height() * Math.abs(this.#trash.scaleY()) / 2;\n    return Math.abs(eventPosition.x - this.#trash.x()) < trashHalfWidth &&\n        Math.abs(eventPosition.y - this.#trash.y()) < trashHalfHeight;\n  }\n\n}","import {custom} from '../app/custom';\nimport {\n  getMousePoint,\n} from '../gui/generic';\nimport {\n  RemoveAnnotationCommand,\n  UpdateAnnotationCommand\n} from './drawCommands';\nimport {\n  isNodeNameShape,\n  isNodeNameLabel,\n  getShapePositionRange,\n  isShapeInRange\n} from './drawBounds';\nimport {DrawShapeEditor} from './drawShapeEditor';\nimport {DrawTrash} from './drawTrash';\n\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\nimport {Scalar2D} from '../math/scalar';\nimport {DrawLayer} from '../gui/drawLayer';\nimport {Annotation} from '../image/annotation';\nimport {Point2D} from '../math/point';\n/* eslint-enable no-unused-vars */\n\n/**\n * Open a dialogue to edit roi data. Defaults to window.prompt.\n *\n * @param {Annotation} annotation The roi data.\n * @param {Function} callback The callback to launch on dialogue exit.\n */\nfunction defaultOpenRoiDialog(annotation, callback) {\n  const textExpr = prompt('Label', annotation.textExpr);\n  if (textExpr !== null) {\n    annotation.textExpr = textExpr;\n    callback(annotation);\n  }\n}\n\n/**\n * Draw shape handler: handle action on existing shapes.\n */\nexport class DrawShapeHandler {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Shape editor.\n   *\n   * @type {DrawShapeEditor}\n   */\n  #shapeEditor;\n\n  /**\n   * Trash draw: a cross.\n   *\n   * @type {DrawTrash}\n   */\n  #trash;\n\n  /**\n   * Mouse cursor.\n   *\n   * @type {string}\n   */\n  #mouseOverCursor = 'pointer';\n\n  /**\n   * Original mouse cursor.\n   *\n   * @type {string}\n   */\n  #originalCursor;\n\n  /**\n   * Shape with mouse over.\n   *\n   * @type {Konva.Group}\n   */\n  #mouseOverShapeGroup;\n\n  /**\n   * Event callback.\n   *\n   * @type {Function}\n   */\n  #eventCallback;\n\n  /**\n   * @callback eventFn\n   * @param {object} event The event.\n   */\n\n  /**\n   * @param {App} app The associated application.\n   * @param {Function} eventCallback Event callback.\n   */\n  constructor(app, eventCallback) {\n    this.#app = app;\n    this.#eventCallback = eventCallback;\n    this.#shapeEditor = new DrawShapeEditor(app, eventCallback);\n    this.#trash = new DrawTrash();\n  }\n\n  /**\n   * Set the draw editor shape.\n   *\n   * @param {Konva.Shape} shape The shape to edit.\n   * @param {DrawLayer} drawLayer The layer the shape belongs to.\n   */\n  setEditorShape(shape, drawLayer) {\n    const drawController = drawLayer.getDrawController();\n    if (shape &&\n      shape instanceof Konva.Shape &&\n      shape !== this.#shapeEditor.getShape() &&\n      drawController.isAnnotationGroupEditable()) {\n      // disable\n      this.#shapeEditor.disable();\n      // set shape\n      this.#shapeEditor.setShape(\n        shape,\n        drawLayer,\n        drawLayer.getDrawController().getAnnotation(shape.getParent().id()));\n      // enable\n      this.#shapeEditor.enable();\n    }\n  }\n\n  /**\n   * Get the currently edited shape group.\n   *\n   * @returns {Konva.Group|undefined} The edited group.\n   */\n  getEditorShapeGroup() {\n    let res;\n    if (this.#shapeEditor.isActive()) {\n      res = this.#shapeEditor.getShape().getParent();\n      if (!(res instanceof Konva.Group)) {\n        return;\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Get the currently edited annotation.\n   *\n   * @returns {Annotation|undefined} The edited annotation.\n   */\n  getEditorAnnotation() {\n    let res;\n    if (this.#shapeEditor.isActive()) {\n      res = this.#shapeEditor.getAnnotation();\n    }\n    return res;\n  }\n\n  /**\n   * Disable and reset the shape editor.\n   */\n  disableAndResetEditor() {\n    this.#shapeEditor.disable();\n    this.#shapeEditor.reset();\n  }\n\n  /**\n   * Get the real position from an event.\n   * TODO: use layer method?\n   *\n   * @param {Scalar2D} index The input index as {x,y}.\n   * @param {DrawLayer} drawLayer The origin draw layer.\n   * @returns {Scalar2D} The real position in the image as {x,y}.\n   */\n  #getRealPosition(index, drawLayer) {\n    const stage = drawLayer.getKonvaStage();\n    return {\n      x: stage.offset().x + index.x / stage.scale().x,\n      y: stage.offset().y + index.y / stage.scale().y\n    };\n  }\n\n  /**\n   * Store specific mouse over cursor.\n   *\n   * @param {string} cursor The cursor name.\n   */\n  storeMouseOverCursor(cursor) {\n    this.#mouseOverCursor = cursor;\n  }\n\n  /**\n   * Handle shape group mouseover.\n   */\n  #onMouseOverShapeGroup() {\n    // mouse cursor\n    this.#originalCursor = document.body.style.cursor;\n    document.body.style.cursor = this.#mouseOverCursor;\n    // shape opacity\n    this.#mouseOverShapeGroup.opacity(0.75);\n  }\n\n  /**\n   * Handle shape group mouseout.\n   */\n  onMouseOutShapeGroup() {\n    // mouse cursor\n    if (typeof this.#originalCursor !== 'undefined') {\n      document.body.style.cursor = this.#originalCursor;\n      this.#originalCursor = undefined;\n    }\n    // shape opacity\n    if (typeof this.#mouseOverShapeGroup !== 'undefined') {\n      this.#mouseOverShapeGroup.opacity(1);\n    }\n  }\n\n  /**\n   * Add shape group mouse over and out listeners: updates\n   *   shape group opacity and cursor.\n   *\n   * @param {Konva.Group} shapeGroup The shape group.\n   */\n  #addShapeOverListeners(shapeGroup) {\n    // handle mouse over\n    shapeGroup.on('mouseover', () => {\n      this.#mouseOverShapeGroup = shapeGroup;\n      this.#onMouseOverShapeGroup();\n    });\n\n    // handle mouse out\n    shapeGroup.on('mouseout', () => {\n      this.onMouseOutShapeGroup();\n      this.#mouseOverShapeGroup = undefined;\n    });\n  }\n\n  /**\n   * Remove shape group mouse over and out listeners.\n   *\n   * @param {Konva.Group} shapeGroup The shape group.\n   */\n  #removeShapeOverListeners(shapeGroup) {\n    shapeGroup.off('mouseover');\n    shapeGroup.off('mouseout');\n  }\n\n  /**\n   * Add shape group listeners.\n   *\n   * @param {Konva.Group} shapeGroup The shape group to set on.\n   * @param {Annotation} annotation The associated annotation.\n   * @param {DrawLayer} drawLayer The origin draw layer.\n   */\n  addShapeGroupListeners(shapeGroup, annotation, drawLayer) {\n    // shape mouse over\n    this.#addShapeOverListeners(shapeGroup);\n\n    // make shape draggable\n    this.#addShapeListeners(shapeGroup, annotation, drawLayer);\n\n    // make label draggable\n    this.#addLabelListeners(shapeGroup, annotation, drawLayer);\n\n    // double click handling: update annotation text\n    shapeGroup.on('dblclick', () => {\n      // original text expr\n      const originalTextExpr = annotation.textExpr;\n\n      const onSaveCallback = (annotation) => {\n        // new text expr\n        const newTextExpr = annotation.textExpr;\n        // create annotation update command\n        const command = new UpdateAnnotationCommand(\n          annotation,\n          {textExpr: originalTextExpr},\n          {textExpr: newTextExpr},\n          drawLayer.getDrawController()\n        );\n        // add command to undo stack\n        this.#app.addToUndoStack(command);\n        // execute command\n        command.execute();\n      };\n\n      // call roi dialog\n      if (typeof custom.openRoiDialog !== 'undefined') {\n        custom.openRoiDialog(annotation, onSaveCallback);\n      } else {\n        defaultOpenRoiDialog(annotation, onSaveCallback);\n      }\n    });\n  }\n\n  /**\n   * Add shape listeners.\n   *\n   * @param {Konva.Group} shapeGroup The shape group to get the shape from.\n   * @param {Annotation} annotation The associated annotation.\n   * @param {DrawLayer} drawLayer The origin draw layer.\n   */\n  #addShapeListeners(shapeGroup, annotation, drawLayer) {\n    const konvaLayer = drawLayer.getKonvaLayer();\n\n    const shape = shapeGroup.getChildren(isNodeNameShape)[0];\n    if (!(shape instanceof Konva.Shape)) {\n      return;\n    }\n    shape.draggable(true);\n\n    // cache vars\n    let dragStartPos;\n    let previousPos;\n    let originalProps;\n    let colour;\n\n    // drag start event handling\n    shape.on('dragstart.draw', (event) => {\n      // store colour\n      colour = shape.stroke();\n      // store pos\n      dragStartPos = {\n        x: shape.x(),\n        y: shape.y()\n      };\n      previousPos = {\n        x: event.target.x(),\n        y: event.target.y()\n      };\n      // store original properties\n      originalProps = {\n        mathShape: annotation.mathShape,\n        referencePoints: annotation.referencePoints\n      };\n\n      // display trash\n      this.#trash.activate(drawLayer);\n      // deactivate anchors to avoid events on null shape\n      this.#shapeEditor.setAnchorsActive(false);\n      // draw\n      konvaLayer.draw();\n    });\n\n    // drag move event handling\n    shape.on('dragmove.draw', (event) => {\n      // if out of range, reset shape position and exit\n      const range = getShapePositionRange(drawLayer.getBaseSize(), shape);\n      if (range && !isShapeInRange(shape, range.min, range.max)) {\n        shape.x(previousPos.x);\n        shape.y(previousPos.y);\n        return;\n      }\n\n      // move associated shapes (but not label)\n      const diff = {\n        x: event.target.x() - previousPos.x,\n        y: event.target.y() - previousPos.y\n      };\n      const children = shapeGroup.getChildren();\n      const labelWithDefaultPosition =\n        typeof annotation.labelPosition === 'undefined';\n      for (const child of children) {\n        // skip shape and label with defined position\n        if (child === event.target ||\n          (child.name() === 'label' && !labelWithDefaultPosition) ||\n          child.name() === 'connector'\n        ) {\n          continue;\n        }\n        // move other nodes\n        child.move(diff);\n      }\n\n      // store pos\n      previousPos = {\n        x: event.target.x(),\n        y: event.target.y()\n      };\n\n      // get appropriate factory\n      const factory = annotation.getFactory();\n      // update annotation\n      factory.updateAnnotationOnTranslation(annotation, diff);\n      // update label\n      factory.updateLabelContent(annotation, shapeGroup, this.#app.getStyle());\n      // update connector\n      factory.updateConnector(shapeGroup);\n      // highlight trash when on it\n      const mousePoint = getMousePoint(event.evt);\n      const offset = {\n        x: mousePoint.getX(),\n        y: mousePoint.getY()\n      };\n      const eventPos = this.#getRealPosition(offset, drawLayer);\n      this.#trash.changeChildrenColourOnTrashHover(eventPos,\n        shapeGroup, colour);\n      // draw\n      konvaLayer.draw();\n    });\n\n    // drag end event handling\n    shape.on('dragend.draw', (event) => {\n      // remove trash\n      this.#trash.remove();\n      // activate(false) will also trigger a dragend.draw\n      if (typeof event === 'undefined' ||\n        typeof event.evt === 'undefined') {\n        return;\n      }\n      const pos = {x: shape.x(), y: shape.y()};\n      // delete case\n      const mousePoint = getMousePoint(event.evt);\n      const offset = {\n        x: mousePoint.getX(),\n        y: mousePoint.getY()\n      };\n      const eventPos = this.#getRealPosition(offset, drawLayer);\n      if (this.#trash.isOverTrash(eventPos)) {\n        // compensate for the drag translation\n        shapeGroup.x(dragStartPos.x);\n        shapeGroup.y(dragStartPos.y);\n        // disable editor\n        this.#shapeEditor.disable();\n        this.#shapeEditor.reset();\n        this.#trash.changeGroupChildrenColour(shapeGroup, colour);\n        // reset math shape (for undo)\n        annotation.mathShape = originalProps.mathShape;\n        annotation.referencePoints = originalProps.referencePoints;\n\n        // create remove annotation command\n        const command = new RemoveAnnotationCommand(\n          annotation,\n          drawLayer.getDrawController()\n        );\n        // add command to undo stack\n        this.#app.addToUndoStack(command);\n        // execute command: triggers draw remove\n        command.execute();\n\n        // reset cursor\n        this.onMouseOutShapeGroup();\n      } else {\n        const translation = {\n          x: pos.x - dragStartPos.x,\n          y: pos.y - dragStartPos.y\n        };\n        if (translation.x !== 0 || translation.y !== 0) {\n          // update annotation command\n          const newProps = {\n            mathShape: annotation.mathShape,\n            referencePoints: annotation.referencePoints\n          };\n          const command = new UpdateAnnotationCommand(\n            annotation,\n            originalProps,\n            newProps,\n            drawLayer.getDrawController()\n          );\n          // add command to undo stack\n          this.#app.addToUndoStack(command);\n          // fire event manually since command is not executed\n          this.#eventCallback({\n            type: 'annotationupdate',\n            data: annotation,\n            dataid: drawLayer.getDataId(),\n            keys: Object.keys(newProps)\n          });\n          // update original shape\n          originalProps = {\n            mathShape: newProps.mathShape,\n            referencePoints: newProps.referencePoints\n          };\n        }\n        // reset anchors\n        this.#shapeEditor.setAnchorsActive(true);\n        this.#shapeEditor.resetAnchors();\n      }\n      // draw\n      konvaLayer.draw();\n      // reset start position\n      dragStartPos = {\n        x: shape.x(),\n        y: shape.y()\n      };\n    });\n  }\n\n  /**\n   * Add label listeners.\n   *\n   * @param {Konva.Group} shapeGroup The shape group to get the label from.\n   * @param {Annotation} annotation The associated annotation.\n   * @param {DrawLayer} drawLayer The origin draw layer.\n   */\n  #addLabelListeners(shapeGroup, annotation, drawLayer) {\n    const label = shapeGroup.getChildren(isNodeNameLabel)[0];\n    if (!(label instanceof Konva.Label)) {\n      return;\n    }\n    label.draggable(true);\n\n    // cache vars\n    let dragStartPos;\n    let originalLabelPosition;\n\n    // drag start event handling\n    label.on('dragstart.draw', (/*event*/) => {\n      // store pos\n      dragStartPos = {\n        x: label.x(),\n        y: label.y()\n      };\n      // store original position\n      originalLabelPosition = annotation.labelPosition;\n    });\n\n    // drag move event handling\n    label.on('dragmove.draw', (/*event*/) => {\n      // get factory\n      const factory = annotation.getFactory();\n      // update label\n      factory.updateConnector(shapeGroup);\n    });\n\n    // drag end event handling\n    label.on('dragend.draw', (/*event*/) => {\n      const translation = {\n        x: label.x() - dragStartPos.x,\n        y: label.y() - dragStartPos.y\n      };\n      if (translation.x !== 0 || translation.y !== 0) {\n        const newLabelPosition = new Point2D(label.x(), label.y());\n        // set label position\n        annotation.labelPosition = newLabelPosition;\n        // update annotation command\n        const command = new UpdateAnnotationCommand(\n          annotation,\n          {labelPosition: originalLabelPosition},\n          {labelPosition: newLabelPosition},\n          drawLayer.getDrawController()\n        );\n        // add command to undo stack\n        this.#app.addToUndoStack(command);\n        // fire event manually since command is not executed\n        this.#eventCallback({\n          type: 'annotationupdate',\n          data: annotation,\n          dataid: drawLayer.getDataId(),\n          keys: ['labelPosition']\n        });\n        // update original position\n        originalLabelPosition = newLabelPosition;\n      }\n      dragStartPos = {x: label.x(), y: label.y()};\n    });\n  }\n\n  /**\n   * Remove shape group listeners.\n   *\n   * @param {Konva.Group} shapeGroup The shape group to set off.\n   */\n  removeShapeListeners(shapeGroup) {\n    // mouse over\n    this.#removeShapeOverListeners(shapeGroup);\n    // double click\n    shapeGroup.off('dblclick');\n    // remove listeners from shape\n    const shape = shapeGroup.getChildren(isNodeNameShape)[0];\n    if (shape instanceof Konva.Shape) {\n      shape.draggable(false);\n      shape.off('dragstart.draw');\n      shape.off('dragmove.draw');\n      shape.off('dragend.draw');\n    }\n    // remove listeners from label\n    const label = shapeGroup.getChildren(isNodeNameLabel)[0];\n    if (label instanceof Konva.Label) {\n      label.draggable(false);\n      label.off('dragstart.draw');\n      label.off('dragend.draw');\n    }\n  }\n} // DrawShapeHandler class","import {getStats} from './stats';\nimport {Index} from './index';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D} from '../math/point';\nimport {ViewController} from '../app/viewController';\nimport {Scalar2D} from './scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * Mulitply the three inputs if the last two are not null.\n *\n * @param {number} a The first input.\n * @param {number} b The second input.\n * @param {number} c The third input.\n * @returns {number} The multiplication of the three inputs or\n *  null if one of the last two is null.\n */\nfunction mulABC(a, b, c) {\n  let res = null;\n  if (b !== null && c !== null) {\n    res = a * b * c;\n  }\n  return res;\n}\n\n/**\n * Ellipse shape.\n */\nexport class Ellipse {\n\n  /**\n   * Ellipse centre.\n   *\n   * @type {Point2D}\n   */\n  #centre;\n\n  /**\n   * Ellipse horizontal radius.\n   *\n   * @type {number}\n   */\n  #a;\n\n  /**\n   * Ellipse vertical radius.\n   *\n   * @type {number}\n   */\n  #b;\n\n  /**\n   * @param {Point2D} centre A Point2D representing the centre\n   *   of the ellipse.\n   * @param {number} a The radius of the ellipse on the horizontal axe.\n   * @param {number} b The radius of the ellipse on the vertical axe.\n   */\n  constructor(centre, a, b) {\n    this.#centre = centre;\n    this.#a = a;\n    this.#b = b;\n  }\n\n  /**\n   * Get the centre (point) of the ellipse.\n   *\n   * @returns {Point2D} The center (point) of the ellipse.\n   */\n  getCenter() {\n    return this.#centre;\n  }\n\n  /**\n   * Get the centroid of the ellipse.\n   *\n   * @returns {Point2D} The centroid point.\n   */\n  getCentroid() {\n    return this.#centre;\n  }\n\n  /**\n   * Get the radius of the ellipse on the horizontal axe.\n   *\n   * @returns {number} The radius of the ellipse on the horizontal axe.\n   */\n  getA() {\n    return this.#a;\n  }\n\n  /**\n   * Get the radius of the ellipse on the vertical axe.\n   *\n   * @returns {number} The radius of the ellipse on the vertical axe.\n   */\n  getB() {\n    return this.#b;\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Ellipse} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getCenter().equals(rhs.getCenter()) &&\n      this.getA() === rhs.getA() &&\n      this.getB() === rhs.getB();\n  }\n\n  /**\n   * Get the surface of the ellipse.\n   *\n   * @returns {number} The surface of the ellipse.\n   */\n  getSurface() {\n    return Math.PI * this.getA() * this.getB();\n  }\n\n  /**\n   * Get the surface of the ellipse according to a spacing.\n   *\n   * @param {Scalar2D} spacing2D The 2D spacing.\n   * @returns {number} The surface of the ellipse multiplied by the given\n   *  spacing or null for null spacings.\n   */\n  getWorldSurface(spacing2D) {\n    return mulABC(this.getSurface(), spacing2D.x, spacing2D.y);\n  }\n\n  /**\n   * Get the rounded limits of the ellipse.\n   *\n   * See: {@link https://en.wikipedia.org/wiki/Ellipse#Standard_equation}.\n   *\n   * Ellipse formula: `x*x / a*a + y*y / b*b = 1`.\n   *\n   * Implies: `y = (+-)(b/a) * sqrt(a*a - x*x)`.\n   *\n   * @returns {number[][][]} The rounded limits:\n   *  list of [x, y] pairs (min, max).\n   */\n  getRound() {\n    const centerX = this.getCenter().getX();\n    const centerY = this.getCenter().getY();\n    const radiusX = this.getA();\n    const radiusY = this.getB();\n    const radiusRatio = radiusX / radiusY;\n    const rySquare = Math.pow(radiusY, 2);\n    // Y bounds\n    const minY = centerY - radiusY;\n    const maxY = centerY + radiusY;\n    const regions = [];\n    // loop through lines and store limits\n    for (let y = minY; y < maxY; ++y) {\n      const diff = rySquare - Math.pow(y - centerY, 2);\n      // remove small values (possibly negative)\n      if (Math.abs(diff) < 1e-7) {\n        continue;\n      }\n      const transX = radiusRatio * Math.sqrt(diff);\n      // remove small values\n      if (transX < 0.5) {\n        continue;\n      }\n      regions.push([\n        [Math.round(centerX - transX), Math.round(y)],\n        [Math.round(centerX + transX), Math.round(y)]\n      ]);\n    }\n    return regions;\n  }\n\n  /**\n   * Quantify an ellipse according to view information.\n   *\n   * @param {ViewController} viewController The associated view controller.\n   * @param {Index} index The index at which to get the\n   *   image values.\n   * @param {string[]} flags A list of stat values to calculate.\n   * @returns {object} A quantification object.\n   */\n  quantify(viewController, index, flags) {\n    const quant = {};\n    // shape quantification\n    const spacing2D = viewController.get2DSpacing();\n    quant.a = {\n      value: this.getA() * spacing2D.x,\n      unit: 'unit.mm'\n    };\n    quant.b = {\n      value: this.getB() * spacing2D.y,\n      unit: 'unit.mm'\n    };\n    const surface = this.getWorldSurface(spacing2D);\n    if (surface !== null) {\n      quant.surface = {\n        value: surface / 100,\n        unit: 'unit.cm2'\n      };\n    }\n\n    // pixel values quantification\n    if (viewController.canQuantifyImage()) {\n      const regions = this.getRound();\n      if (regions.length !== 0) {\n        const values = viewController.getImageVariableRegionValues(\n          regions, index);\n        const unit = viewController.getPixelUnit();\n        const quantif = getStats(values, flags);\n        quant.min = {value: quantif.min, unit: unit};\n        quant.max = {value: quantif.max, unit: unit};\n        quant.mean = {value: quantif.mean, unit: unit};\n        quant.stdDev = {value: quantif.stdDev, unit: unit};\n        if (typeof quantif.median !== 'undefined') {\n          quant.median = {value: quantif.median, unit: unit};\n        }\n        if (typeof quantif.p25 !== 'undefined') {\n          quant.p25 = {value: quantif.p25, unit: unit};\n        }\n        if (typeof quantif.p75 !== 'undefined') {\n          quant.p75 = {value: quantif.p75, unit: unit};\n        }\n      }\n    }\n\n    // return\n    return quant;\n  }\n\n} // Ellipse class\n\n/**\n * Get the indices that form a ellpise.\n *\n * @param {Index} center The ellipse center.\n * @param {number[]} radius The 2 ellipse radiuses.\n * @param {number[]} dir The 2 ellipse directions.\n * @returns {Index[]} The indices of the ellipse.\n */\nexport function getEllipseIndices(center, radius, dir) {\n  const centerValues = center.getValues();\n  // keep all values for possible extra dimensions\n  const values = centerValues.slice();\n  const indices = [];\n  const radiusI = radius[0];\n  const radiusJ = radius[1];\n  const radiusRatio = radiusI / radiusJ;\n  const radiusJ2 = Math.pow(radiusJ, 2);\n  const di = dir[0];\n  const dj = dir[1];\n  // deduce 4 positions from top right\n  for (let j = 0; j < radiusJ; ++j) {\n    // right triangle formed by radiuses, j and len\n    // ellipse: i*i / a*a + j*j / b*b = 1\n    // -> i = a/b * sqrt(b*b - j*j)\n    const len = Math.round(\n      radiusRatio * Math.sqrt(radiusJ2 - Math.pow(j, 2)));\n    const jmax = centerValues[dj] + j;\n    const jmin = centerValues[dj] - j;\n    for (let i = 0; i < len; ++i) {\n      const imax = centerValues[di] + i;\n      const imin = centerValues[di] - i;\n\n      // right\n      values[di] = imax;\n      // right - top\n      values[dj] = jmax;\n      indices.push(new Index(values.slice()));\n      // right - bottom\n      if (jmin !== jmax) {\n        values[dj] = jmin;\n        indices.push(new Index(values.slice()));\n      }\n\n      // left\n      if (imin !== imax) {\n        values[di] = imin;\n        // left - top\n        values[dj] = jmax;\n        indices.push(new Index(values.slice()));\n        // left - bottom\n        if (jmin !== jmax) {\n          values[dj] = jmin;\n          indices.push(new Index(values.slice()));\n        }\n      }\n    }\n  }\n  return indices;\n}\n","import {ListenerHandler} from '../utils/listen';\nimport {mergeObjects} from '../utils/operator';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from '../image/image';\nimport {AnnotationGroup} from '../image/annotationGroup';\n/* eslint-enable no-unused-vars */\n\n/**\n * DICOM data: meta and possible image.\n */\nexport class DicomData {\n  /**\n   * DICOM meta data.\n   *\n   * @type {object}\n   */\n  meta;\n\n  /**\n   * Image extracted from meta data.\n   *\n   * @type {Image|undefined}\n   */\n  image;\n  /**\n   * Annotattion group extracted from meta data.\n   *\n   * @type {AnnotationGroup|undefined}\n   */\n  annotationGroup;\n\n  /**\n   * @param {object} meta The DICOM meta data.\n   */\n  constructor(meta) {\n    this.meta = meta;\n  }\n}\n\n/*\n * DicomData controller.\n */\nexport class DataController {\n\n  /**\n   * List of DICOM data.\n   *\n   * @type {Object<string, DicomData>}\n   */\n  #dataList = {};\n\n  /**\n   * Distinct data loaded counter.\n   *\n   * @type {number}\n   */\n  #dataIdCounter = -1;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the next data id.\n   *\n   * @returns {string} The data id.\n   */\n  getNextDataId() {\n    ++this.#dataIdCounter;\n    return this.#dataIdCounter.toString();\n  }\n\n  /**\n   * Get the list of ids in the data storage.\n   *\n   * @returns {string[]} The list of data ids.\n   */\n  getDataIds() {\n    return Object.keys(this.#dataList);\n  }\n\n  /**\n   * Reset the class: empty the data storage.\n   */\n  reset() {\n    this.#dataList = {};\n  }\n\n  /**\n   * Get a data at a given index.\n   *\n   * @param {string} dataId The data id.\n   * @returns {DicomData|undefined} The DICOM data.\n   */\n  get(dataId) {\n    return this.#dataList[dataId];\n  }\n\n  /**\n   * Get the list of dataIds that contain the input UIDs.\n   *\n   * @param {string[]} uids A list of UIDs.\n   * @returns {string[]} The list of dataIds that contain the UIDs.\n   */\n  getDataIdsFromSopUids(uids) {\n    const res = [];\n    // check input\n    if (typeof uids === 'undefined' ||\n      uids.length === 0) {\n      return res;\n    }\n    const keys = Object.keys(this.#dataList);\n    for (const key of keys) {\n      if (typeof this.#dataList[key].image !== 'undefined' &&\n        this.#dataList[key].image.containsImageUids(uids)) {\n        res.push(key);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Set the image at a given index.\n   *\n   * @param {string} dataId The data id.\n   * @param {Image} image The image to set.\n   */\n  setImage(dataId, image) {\n    this.#dataList[dataId].image = image;\n    /**\n     * Data image set event.\n     *\n     * @event DataController#dataimageset\n     * @type {object}\n     * @property {string} type The event type.\n     * @property {Array} value The event value, first element is the image.\n     * @property {string} dataid The data id.\n     */\n    this.#fireEvent({\n      type: 'dataimageset',\n      value: [image],\n      dataid: dataId\n    });\n    // listen to image change\n    image.addEventListener('imagecontentchange', this.#getFireEvent(dataId));\n    image.addEventListener('imagegeometrychange', this.#getFireEvent(dataId));\n  }\n\n  /**\n   * Add a new data.\n   *\n   * @param {string} dataId The data id.\n   * @param {DicomData} data The data.\n   */\n  add(dataId, data) {\n    if (typeof this.#dataList[dataId] !== 'undefined') {\n      throw new Error('Data id already used in storage: ' + dataId);\n    }\n    // store the new image\n    this.#dataList[dataId] = data;\n    /**\n     * Data add event.\n     *\n     * @event DataController#dataadd\n     * @type {object}\n     * @property {string} type The event type.\n     * @property {string} dataid The data id.\n     */\n    this.#fireEvent({\n      type: 'dataadd',\n      dataid: dataId\n    });\n    // listen to image change\n    if (typeof data.image !== 'undefined') {\n      data.image.addEventListener(\n        'imagecontentchange', this.#getFireEvent(dataId));\n      data.image.addEventListener(\n        'imagegeometrychange', this.#getFireEvent(dataId));\n    }\n    if (typeof data.annotationGroup !== 'undefined') {\n      data.annotationGroup.addEventListener(\n        'annotationadd', this.#getFireEvent(dataId));\n      data.annotationGroup.addEventListener(\n        'annotationupdate', this.#getFireEvent(dataId));\n      data.annotationGroup.addEventListener(\n        'annotationremove', this.#getFireEvent(dataId));\n    }\n  }\n\n  /**\n   * Remove a data from the list.\n   *\n   * @param {string} dataId The data id.\n   */\n  remove(dataId) {\n    if (typeof this.#dataList[dataId] !== 'undefined') {\n      // stop listeners\n      const image = this.#dataList[dataId].image;\n      if (typeof image !== 'undefined') {\n        image.removeEventListener(\n          'imagecontentchange', this.#getFireEvent(dataId));\n        image.removeEventListener(\n          'imagegeometrychange', this.#getFireEvent(dataId));\n      }\n      const annotationGroup = this.#dataList[dataId].annotationGroup;\n      if (typeof annotationGroup !== 'undefined') {\n        annotationGroup.removeEventListener(\n          'annotationadd', this.#getFireEvent(dataId));\n        annotationGroup.removeEventListener(\n          'annotationupdate', this.#getFireEvent(dataId));\n        annotationGroup.removeEventListener(\n          'annotationremove', this.#getFireEvent(dataId));\n      }\n      // remove data from list\n      delete this.#dataList[dataId];\n      /**\n       * Data remove event.\n       *\n       * @event DataController#dataremove\n       * @type {object}\n       * @property {string} type The event type.\n       * @property {string} dataid The data id.\n       */\n      this.#fireEvent({\n        type: 'dataremove',\n        dataid: dataId\n      });\n    }\n  }\n\n  /**\n   * Update the current data.\n   *\n   * @param {string} dataId The data id.\n   * @param {DicomData} data The data.\n   */\n  update(dataId, data) {\n    if (typeof this.#dataList[dataId] === 'undefined') {\n      throw new Error('Cannot find data to update: ' + dataId);\n    }\n    const dataToUpdate = this.#dataList[dataId];\n\n    // add slice to current image\n    if (typeof dataToUpdate.image !== 'undefined' &&\n      typeof data.image !== 'undefined'\n    ) {\n      dataToUpdate.image.appendSlice(data.image);\n    }\n\n    // update meta data\n    // TODO add time support\n    let idKey = '';\n    if (typeof data.meta['00020010'] !== 'undefined') {\n      // dicom case, use 'InstanceNumber'\n      idKey = '00200013';\n    } else {\n      idKey = 'imageUid';\n    }\n    dataToUpdate.meta = mergeObjects(\n      dataToUpdate.meta,\n      data.meta,\n      idKey,\n      'value');\n\n    /**\n     * Data udpate event.\n     *\n     * @event DataController#dataupdate\n     * @type {object}\n     * @property {string} type The event type.\n     * @property {string} dataid The data id.\n     */\n    this.#fireEvent({\n      type: 'dataupdate',\n      dataid: dataId\n    });\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Get a fireEvent function that adds the input data id\n   * to the event value.\n   *\n   * @param {string} dataId The data id.\n   * @returns {Function} A fireEvent function.\n   */\n  #getFireEvent(dataId) {\n    return (event) => {\n      event.dataid = dataId;\n      this.#fireEvent(event);\n    };\n  }\n\n} // DataController class\n","import {arrayEquals} from './array';\n\n/**\n * Merge two similar objects.\n *\n * Objects need to be in the form of:\n * <code>\n * {\n *   idKey: {valueKey: [0]},\n *   key0: {valueKey: [\"abc\"]},\n *   key1: {valueKey: [33]}\n * }\n * </code>.\n *\n * Merged objects will be in the form of:\n * <code>\n * {\n *   idKey: {valueKey: [0,1,2], merged: true},\n *   key0: {valueKey: {\n *     0: [\"abc\"],\n *     1: [\"def\"],\n *     2: [\"ghi\"]\n *   }},\n *   key1: {valueKey: {\n *     0: [33],\n *     1: [44],\n *     2: [55]\n *   }}\n * }\n * </code>.\n *\n * @param {object} obj1 The first object, can be the result of a previous merge.\n * @param {object} obj2 The second object.\n * @param {string} idKey The key to use as index for duplicate values.\n * @param {string} valueKey The key to use to access object values.\n * @returns {object} The merged object.\n */\nexport function mergeObjects(obj1, obj2, idKey, valueKey) {\n  const res = {};\n  // check id key\n  if (!idKey) {\n    throw new Error('Cannot merge object with an undefined id key: ' + idKey);\n  } else {\n    if (!Object.prototype.hasOwnProperty.call(obj1, idKey)) {\n      throw new Error('Id key not found in first object while merging: ' +\n        idKey + ', obj: ' + obj1);\n    }\n    if (!Object.prototype.hasOwnProperty.call(obj2, idKey)) {\n      throw new Error('Id key not found in second object while merging: ' +\n        idKey + ', obj: ' + obj2);\n    }\n  }\n  // check value key\n  if (!valueKey) {\n    throw new Error('Cannot merge object with an undefined value key: ' +\n      valueKey);\n  }\n\n  // check if merged object\n  let mergedObj1 = false;\n  if (Object.prototype.hasOwnProperty.call(obj1[idKey], 'merged') &&\n    obj1[idKey].merged) {\n    mergedObj1 = true;\n  }\n  // handle the id part\n  if (!Object.prototype.hasOwnProperty.call(obj1[idKey], valueKey)) {\n    throw new Error('Id value not found in first object while merging: ' +\n      idKey + ', valueKey: ' + valueKey + ', ojb: ' + obj1);\n  }\n  if (!Object.prototype.hasOwnProperty.call(obj2[idKey], valueKey)) {\n    throw new Error('Id value not found in second object while merging: ' +\n      idKey + ', valueKey: ' + valueKey + ', ojb: ' + obj2);\n  }\n  let id1 = obj1[idKey][valueKey];\n  const id2 = obj2[idKey][valueKey][0];\n  // update id key\n  res[idKey] = obj1[idKey];\n  if (mergedObj1) {\n    // check if array does not include id2\n    for (let k = 0; k < id1.length; ++k) {\n      if (id1[k] === id2) {\n        throw new Error('The first object already contains id2: ' +\n          id2 + ', id1: ' + id1);\n      }\n    }\n    res[idKey][valueKey].push(id2);\n  } else {\n    id1 = id1[0];\n    if (id1 === id2) {\n      throw new Error('Cannot merge object with same ids: ' +\n        id1 + ', id2: ' + id2);\n    }\n    // update merge object\n    res[idKey][valueKey].push(id2);\n    res[idKey].merged = true;\n  }\n\n  // get keys\n  const keys1 = Object.keys(obj1);\n  // keys2 without duplicates of keys1\n  const keys2 = Object.keys(obj2).filter(function (item) {\n    return keys1.indexOf(item) < 0;\n  });\n  const keys = keys1.concat(keys2);\n\n  // loop through keys\n  for (let i = 0; i < keys.length; ++i) {\n    const key = keys[i];\n    if (key !== idKey) {\n      // first\n      let value1;\n      let subValue1;\n      if (Object.prototype.hasOwnProperty.call(obj1, key)) {\n        value1 = obj1[key];\n        if (Object.prototype.hasOwnProperty.call(value1, valueKey)) {\n          subValue1 = value1[valueKey];\n        }\n      }\n      // second\n      let value2;\n      let subValue2;\n      if (Object.prototype.hasOwnProperty.call(obj2, key)) {\n        value2 = obj2[key];\n        if (Object.prototype.hasOwnProperty.call(value2, valueKey)) {\n          subValue2 = value2[valueKey];\n        }\n      }\n      // result value\n      let value;\n      // use existing to copy properties\n      if (typeof value1 !== 'undefined') {\n        value = value1;\n      } else if (typeof value2 !== 'undefined') {\n        value = value2;\n      }\n      // create merge object if different values\n      if (!arrayEquals(subValue1, subValue2)) {\n        // add to merged object or create new\n        if (mergedObj1) {\n          if (Array.isArray(subValue1)) {\n            // merged object with repeated value\n            // copy it with the index list\n            value[valueKey] = {};\n            for (let j = 0; j < id1.length; ++j) {\n              value[valueKey][id1[j]] = subValue1;\n            }\n          } else {\n            value[valueKey] = subValue1;\n          }\n          // undefined subValue1\n          if (typeof value[valueKey] === 'undefined') {\n            value[valueKey] = {};\n          }\n          // add obj2 value\n          value[valueKey][id2] = subValue2;\n        } else {\n          // create merge object\n          const newValue = {};\n          newValue[id1] = subValue1;\n          newValue[id2] = subValue2;\n          value[valueKey] = newValue;\n        }\n      }\n      // store value in result object\n      res[key] = value;\n    }\n  }\n  return res;\n}\n","\nimport {logger} from '../utils/logger';\nimport {Point2D} from '../math/point';\nimport {Index} from '../math/index';\nimport {getEllipseIndices} from '../math/ellipse';\nimport {Image} from '../image/image';\nimport {Size} from '../image/size';\nimport {Geometry} from '../image/geometry';\nimport {ColourMap} from '../image/luts';\nimport {getDefaultDicomSegJson} from '../image/maskFactory';\nimport {getDwvUIDPrefix} from '../dicom/dicomParser';\nimport {getElementsFromJSONTags} from '../dicom/dicomWriter';\nimport {DicomData} from '../app/dataController';\nimport {ViewConfig} from '../app/application';\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {ScrollWheel} from './scrollWheel';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point, Point3D} from '../math/point';\nimport {App} from '../app/application';\nimport {LayerGroup} from '../gui/layerGroup';\nimport {ViewLayer} from '../gui/viewLayer';\n/* eslint-enable no-unused-vars */\n\nconst ERROR_MESSAGES = {\n  brush: {\n    noSourceDataId: 'No source data ID defined',\n    noSourceDataIdAdd: 'No source data ID defined when adding mask slices',\n    noSourceImage: 'No source image to get origins, ID: {0}',\n    noSourceImageCreateMask: 'No source image to create mask',\n    noSourceImageGetOffset: 'No source image to get offsets, ID: {0}',\n    noBrushOrigins: 'No brush origins',\n    noBrushColour: 'No brush colour',\n    noMaskDefined: 'No mask defined when adding mask slices',\n    noCreatedMaskImage: 'No created mask image',\n    noMaskImage: 'No mask image for temporary draw command, ID: {0}',\n    noMaskImageGetOffset: 'No mask image to get offsets from',\n    noMaskImageDraw: 'No mask image for draw command, ID: {0}',\n    noMaskId: 'No mask ID to apply mask index',\n    noMaskImageForApply: 'No mask image for apply index, ID: {0}',\n    noSegments: 'No segments have been set for a new mask',\n    noMaskViewLayers: 'No mask view layers',\n    noSelectedSegmentNumber: 'No selected segment number',\n    tooManyMaskLayers: 'Too many mask view layers: {0}',\n    moreMaskLayers: 'More mask layers than expected',\n    cannotCreateMask: 'Cannot create mask with no source ID',\n    cannotDisplayMask: 'Cannot display mask with no mask ID',\n    cannotDrawNoMaskId: 'Cannot draw with no mask data ID',\n    cannotDrawNoOffset: 'Cannot draw with no offsets',\n    cannotDrawNoSegment: 'Cannot draw with no selected segment',\n    cannotDrawNoColourList: 'Cannot draw with no colour list',\n    cannotGetMaskLayers: 'Cannot get mask layers with no mask ID',\n    cannotGetMaskVCNoMaskId: 'Cannot get mask view controller: no mask ID',\n    cannotGetMaskVCNoMaskLayers:\n      'Cannot get mask view controller: no mask layers',\n    cannotSaveNoSourceId: 'Cannot save with no source data ID',\n    cannotSaveNoMask: 'Cannot save with no mask',\n    cannotFindSourceData:\n      'Cannot find source data for an existing mask, ID: {0}',\n    cannotFindSegment: 'Cannot find a segment for the selected number: {0}',\n    unsupportedScrollIndex: 'Unsupported scroll index: {0}'\n  }\n};\n\n/**\n * Format string.\n *\n * @param {*} template The template where to add values.\n * @param  {...any} values The values to add to the template.\n * @returns {string} The formated string.\n */\nfunction formatString(template, ...values) {\n  return template.replace(/{(\\d+)}/g, (_match, index) => values[index] || '');\n};\n\n/**\n * Retrieves the unique div ids in the current data view configs.\n *\n * @param {object} dataViewConfigs The data view configs.\n * @returns {string[]} Array of unique div ids.\n */\nfunction getUniqueDataViewConfigsDivIds(dataViewConfigs) {\n  let allDivIds = [];\n  if (!dataViewConfigs) {\n    return [];\n  }\n  for (const key in dataViewConfigs) {\n    if (dataViewConfigs[key]) {\n      const viewConfigs = dataViewConfigs[key];\n      if (Array.isArray(viewConfigs)) {\n        const divIds = viewConfigs.map(function (config) {\n          return config.divId;\n        });\n        allDivIds = [...allDivIds, ...divIds];\n      }\n    }\n  }\n  return [...new Set(allDivIds)];\n};\n\n// -----------------------------------------------------------------------------\n// -----------------------------------------------------------------------------\n\nconst _MouseEventButtons = {\n  left: 0,\n  middle: 1,\n  right: 2\n};\n\nconst _BrushMode = {\n  Del: 'del',\n  Add: 'add'\n};\n\n/**\n * Get an array sort callback:\n * - f(a,b) > 0 -> b,a,\n * - f(a,b) < 0 -> a,b,\n * - f(a,b) = 0 -> original order.\n *\n * @param {number} direction The direction to use to compare indices.\n * @returns {object} A function that compares two Index.\n */\nfunction getIndexCompareFunction(direction) {\n  return function (a, b) {\n    let result = 0;\n    const va = a.get(direction);\n    const vb = b.get(direction);\n    if (typeof va !== 'undefined' && typeof vb !== 'undefined') {\n      result = va - vb;\n    }\n    return result;\n  };\n}\n\n/**\n * Get a dimension organisation used to index a DICOM seg.\n *\n * @returns {object} The indices and organisations.\n */\nfunction getDimensionOrganization() {\n  // 681051091011101: first 15 of charCode('DimensionOrganizationUID')\n  const organizationUID = getDwvUIDPrefix() + '681051091011101.1';\n  return {\n    indices: {\n      value: [\n        {\n          DimensionOrganizationUID: organizationUID,\n          DimensionDescriptionLabel: 'ReferencedSegmentNumber',\n          DimensionIndexPointer: '(0062,000B)',\n          FunctionalGroupPointer: '(0062,000A)'\n        },\n        {\n          DimensionOrganizationUID: organizationUID,\n          DimensionDescriptionLabel: 'ImagePositionPatient',\n          DimensionIndexPointer: '(0020,0032)',\n          FunctionalGroupPointer: '(0020,9113)'\n        }\n      ]\n    },\n    organizations: {\n      value: [\n        {\n          DimensionOrganizationUID: organizationUID\n        }\n      ]\n    }\n  };\n}\n\n/**\n * Get the indices that form a circle.\n * Can be an ellipse to adapt to view.\n *\n * @param {Geometry} geometry The geometry.\n * @param {Point} position The circle center.\n * @param {number[]} radiuses The circle radiuses.\n * @param {number[]} dims The 2 dimensions.\n * @returns {Index[]} The indices of the circle.\n */\nfunction getCircleIndices(\n  geometry,\n  position,\n  radiuses,\n  dims\n) {\n  const centerIndex = geometry.worldToIndex(position);\n  return getEllipseIndices(centerIndex, radiuses, dims);\n}\n\n/**\n * Get the range of origin indices that correspond to input new\n * mask indices.\n *\n * @param {Geometry} geometry The geometry.\n * @param {Index[]} indices An array of indices.\n * @returns {number[]} Range of indices in the input origins.\n */\nfunction getOriginIndexRangeFromMaskIndices(geometry, indices) {\n  // sort indices according to Z\n  const sorted = indices.sort(getIndexCompareFunction(2));\n\n  // lowest origin\n  const z0 = sorted[0].get(2);\n  if (typeof z0 === 'undefined') {\n    return [];\n  }\n  const index0 = new Index([0, 0, z0]);\n  const origin0 = geometry.indexToWorld(index0);\n\n  // highest origin\n  const z1 = sorted.at(-1).get(2);\n  if (typeof z1 === 'undefined') {\n    return [];\n  }\n  const index1 = new Index([0, 0, z1]);\n  const origin1 = geometry.indexToWorld(index1);\n\n  const origins = geometry.getOrigins();\n  // threshold for distance warning\n  const spacing = geometry.getSpacing().get(2);\n  const threshold = 0.1 * spacing;\n\n  // index of origin closest to lowest point\n  const indexStart = origin0.get3D().getClosest(origins);\n  const originStart = origins[indexStart];\n  const d0 = origin0.get3D().getDistance(originStart);\n  if (d0 > threshold) {\n    logger.warn(\n      'Large distance between origin and origin for first index: ' + d0);\n  }\n\n  // index of origin closest to highest point\n  const indexEnd = origin1.get3D().getClosest(origins);\n  const originEnd = origins[indexEnd];\n  const d1 = origin1.get3D().getDistance(originEnd);\n  if (d1 > threshold) {\n    logger.warn(\n      'Large distance between origin and origin for last index: ' + d1);\n  }\n\n  return [indexStart, indexEnd];\n}\n\n/**\n * Get the data offsets that correspond to input indices.\n *\n * @param {Geometry} geometry The geometry.\n * @param {Index[]} indices An array of indices.\n * @returns {number[]} An array of offsets.\n */\nfunction getOffsetsFromIndices(geometry, indices) {\n  const imageSize = geometry.getSize();\n  const offsets = [];\n  for (const index of indices) {\n    const offset = imageSize.indexToOffset(index);\n    if (offset >= 0) {\n      offsets.push(offset);\n    }\n  }\n  return offsets.sort(function compareNumbers(a, b) {\n    return a - b;\n  });\n}\n\nclass DrawBrushCommandProperties {\n  mask;\n  dataId;\n  offsetsLists;\n  mode;\n  segmentNumber;\n  srclayerid;\n  originalValuesLists;\n  isSilent;\n}\n/**\n * Draw brush command.\n */\nclass DrawBrushCommand {\n  #mask;\n  #dataId;\n  #offsetsLists;\n  #mode;\n  #segmentNumber;\n  #srclayerid;\n  #originalValuesLists;\n  #isSilent;\n\n  #exeType;\n  #undoType;\n\n  /**\n   * @param {DrawBrushCommandProperties} properties The command properties.\n   */\n  constructor(properties) {\n    this.#mask = properties.mask;\n    this.#dataId = properties.dataId;\n    this.#offsetsLists = properties.offsetsLists;\n    this.#mode = properties.mode;\n    this.#segmentNumber = properties.segmentNumber;\n    this.#srclayerid = properties.srclayerid;\n\n    if (typeof properties.originalValuesLists !== 'undefined') {\n      this.#originalValuesLists = properties.originalValuesLists;\n    }\n    this.#isSilent = properties.isSilent ?? false;\n    // event types\n    this.#exeType = this.#mode === _BrushMode.Del ? 'brushremove' : 'brushdraw';\n    this.#undoType =\n      this.#exeType === 'brushdraw' ? 'brushremove' : 'brushdraw';\n  }\n\n  /**\n   * Get the original values before applying brush.\n   *\n   * @returns {Array|undefined} Lists of original value iterators,\n   *   undefined when erasing.\n   */\n  getOriginalValuesLists() {\n    return this.#originalValuesLists;\n  }\n\n  /**\n   * Get the execute event.\n   *\n   * @returns {CustomEvent} The event.\n   */\n  getExecuteEvent() {\n    const segNumber =\n      this.#exeType === 'brushdraw' ? this.#segmentNumber : undefined;\n    return new CustomEvent(this.#exeType, {\n      detail: {\n        segmentnumber: segNumber,\n        dataid: this.#dataId,\n        srclayerid: this.#srclayerid\n      }\n    });\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Draw-brush';\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires DrawBrushCommand#brushdraw\n   */\n  execute() {\n    if (typeof this.#segmentNumber === 'undefined') {\n      return;\n    }\n\n    let segNumber = this.#segmentNumber;\n    if (this.#exeType === 'brushremove') {\n      segNumber = 0;\n    }\n\n    // draw\n    if (typeof this.#originalValuesLists === 'undefined') {\n      this.#originalValuesLists = this.#mask.setAtOffsetsAndGetOriginals(\n        this.#offsetsLists,\n        segNumber\n      );\n    } else {\n      this.#mask.setAtOffsetsWithIterator(this.#offsetsLists, segNumber);\n    }\n\n    // callback\n    if (!this.#isSilent) {\n      /**\n       * Draw create event.\n       *\n       * @event DrawBrushCommand#brushdraw\n       * @type {object}\n       * @property {number} id The id of the created brush.\n       */\n      this.onExecute(this.getExecuteEvent());\n    }\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires DrawBrushCommand#brushremove\n   */\n  undo() {\n    if (typeof this.#originalValuesLists === 'undefined') {\n      this.#originalValuesLists = this.#mask.setAtOffsetsAndGetOriginals(\n        this.#offsetsLists,\n        0\n      );\n    } else {\n      this.#mask.setAtOffsetsWithIterator(\n        this.#offsetsLists, this.#originalValuesLists);\n    }\n\n    // callback\n    const number =\n      this.#undoType === 'brushdraw' ? this.#segmentNumber : undefined;\n    const undoEvent = new CustomEvent(this.#undoType, {\n      detail: {\n        segmentnumber: number,\n        dataid: this.#dataId,\n        srclayerid: this.#srclayerid\n      }\n    });\n    this.onUndo(undoEvent);\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {CustomEvent} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {CustomEvent} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n} // DrawBrushCommand class\n\n/**\n * Brush class.\n */\nexport class Brush extends EventTarget {\n  #app;\n\n  /**\n   * Scroll wheel handler.\n   *\n   * @type {ScrollWheel}\n   */\n  #scrollWhell;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    super();\n    this.#app = app;\n    this.#scrollWhell = new ScrollWheel(app);\n  }\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Mask image.\n   *\n   * @type {Image}\n   */\n  #mask;\n\n  /**\n   * Mask data index.\n   *\n   * @type {string}\n   */\n  #maskDataId;\n\n  /**\n   * The brush size.\n   *\n   * @type {number}\n   */\n  #brushSize = 10;\n\n  /**\n   * The brush size range.\n   *\n   * @type {object}\n   */\n  #brushSizeRange = {min: 1, max: 20};\n\n  /**\n   * The brush mode: 'add' or 'del'.\n   *\n   * @type {string}\n   */\n  #brushMode = _BrushMode.Del;\n\n  /**\n   * The selected segment number.\n   *\n   * @type {number}\n   */\n  #selectedSegmentNumber;\n\n  /**\n   * UID counter.\n   *\n   * @type {number}\n   */\n  #uid = 0;\n\n  /**\n   * Current layer group.\n   *\n   * @type {LayerGroup}\n   */\n  #currentLayerGroup;\n\n  /**\n   * Interaction start point.\n   *\n   * @type {Point2D}\n   */\n  #startPoint;\n\n  // temporary variables\n  #tmpOffsetsLists;\n  #tmpOriginalValuesLists;\n\n  /**\n   * Black list: series instance uid list\n   * for which brush segmentation creation\n   * is forbidden.\n   *\n   * @type {string[]}\n   */\n  #blacklist = [];\n\n  /**\n   * Get a mask slice.\n   *\n   * @param {Geometry} geometry The mask geometry.\n   * @param {Point3D} origin The slice origin.\n   * @param {object} meta The mask meta.\n   * @returns {Image} The slice.\n   */\n  #createMaskImage(geometry, origin, meta) {\n    // create data\n    const sizeValues = geometry.getSize().getValues();\n    sizeValues[2] = 1;\n    const maskSize = new Size(sizeValues);\n    const maskGeometry = new Geometry(\n      [origin],\n      maskSize,\n      geometry.getSpacing(),\n      geometry.getOrientation()\n    );\n    const values = new Uint8Array(maskSize.getDimSize(2));\n    values.fill(0);\n    ++this.#uid;\n    const uids = [this.#uid.toString()];\n    const maskSlice = new Image(maskGeometry, values, uids);\n    maskSlice.setMeta(meta);\n    maskSlice.setPhotometricInterpretation('PALETTE COLOR');\n    maskSlice.setPaletteColourMap(new ColourMap([0], [0], [0]));\n\n    return maskSlice;\n  }\n\n  /**\n   * Add slices to mask if needed.\n   *\n   * @param {Geometry} sourceGeometry The source geometry.\n   * @param {Geometry} maskGeometry The mask geometry.\n   * @param {Point} position The circle center.\n   * @param {number[]} circleDims The circle dimensions.\n   * @param {number[]} radiuses The circle radiuses.\n   * @param {object} sliceMeta The slice meta.\n   */\n  #addMaskSlices(\n    sourceGeometry,\n    maskGeometry,\n    position,\n    circleDims,\n    radiuses,\n    sliceMeta\n  ) {\n    // circle indices in the image geometry\n    const circleIndices = getCircleIndices(\n      sourceGeometry,\n      position,\n      radiuses,\n      circleDims\n    );\n    // origin index range represented by the circle indicies\n    const newOrigIndexRange = getOriginIndexRangeFromMaskIndices(\n      sourceGeometry,\n      circleIndices\n    );\n    if (typeof newOrigIndexRange === 'undefined' ||\n      newOrigIndexRange.length === 0) {\n      throw new Error(ERROR_MESSAGES.brush.noBrushOrigins);\n    }\n\n    const sourceOrigins = sourceGeometry.getOrigins();\n    const maskOrigins = maskGeometry.getOrigins();\n\n    // min and max mask origin closest source origin indices\n    const maskOrigIndexStart = maskOrigins[0].getClosest(sourceOrigins);\n    const maskOrigIndexEnd = maskOrigins.at(-1).getClosest(sourceOrigins);\n\n    // index in source origin array of slices to add\n    const indicesToAdd = [];\n\n    // first index compare\n    // (go from closest to mask to avoid variable spacing warning\n    //  when appending image slices)\n    if (newOrigIndexRange[0] < maskOrigIndexStart) {\n      for (\n        let index = maskOrigIndexStart - 1;\n        index >= newOrigIndexRange[0];\n        --index\n      ) {\n        indicesToAdd.push(index);\n      }\n    }\n    // last index compare\n    if (newOrigIndexRange[1] > maskOrigIndexEnd) {\n      for (\n        let index = maskOrigIndexEnd + 1;\n        index <= newOrigIndexRange[1];\n        ++index\n      ) {\n        indicesToAdd.push(index);\n      }\n    }\n\n    // convert index to origin\n    const originsToAdd = [];\n    for (const index of indicesToAdd) {\n      originsToAdd.push(sourceOrigins[index]);\n    }\n\n    // append slices\n    if (typeof this.#mask === 'undefined') {\n      throw new Error(ERROR_MESSAGES.brush.noMaskDefined);\n    }\n    const tags = this.#mask.getMeta();\n    for (const element of originsToAdd) {\n      tags.numberOfFiles += 1;\n      this.#mask.appendSlice(\n        this.#createMaskImage(maskGeometry, element, sliceMeta));\n    }\n  }\n\n  /**\n   * Paint the mask at the given offsets.\n   *\n   * @param {Array} offsets The mask offsets.\n   */\n  #paintMaskAtOffsets(offsets) {\n    const maskVl = this.#getMaskViewLayer();\n    const srclayerid = maskVl.getId();\n\n    // get mask image\n    if (typeof this.#maskDataId === 'undefined') {\n      throw new Error(ERROR_MESSAGES.brush.noMaskId);\n    }\n    const maskData = this.#app.getData(this.#maskDataId);\n    if (!maskData) {\n      throw new Error(\n        formatString(ERROR_MESSAGES.brush.noMaskImage, this.#maskDataId));\n    }\n\n    // temporary command\n    const props = new DrawBrushCommandProperties();\n    props.mask = maskData.image;\n    props.dataId = this.#maskDataId;\n    props.offsetsLists = [offsets];\n    props.mode = this.#brushMode;\n    props.segmentNumber = this.#selectedSegmentNumber;\n    props.srclayerid = srclayerid;\n    const command = new DrawBrushCommand(props);\n    command.execute();\n\n    // store offsets and colours for final command\n    this.#tmpOffsetsLists.push(offsets);\n    // only one element in original colours\n    const originalValues = command.getOriginalValuesLists();\n    if (typeof originalValues !== 'undefined') {\n      this.#tmpOriginalValuesLists.push(originalValues[0]);\n    }\n  }\n\n  /**\n   * Create the mask.\n   *\n   * @param {Point} position The first slice position.\n   * @param {Image} sourceImage The source image.\n   * @returns {string} The mask data id.\n   */\n  #createMask(position, sourceImage) {\n    // check souce image\n    if (!sourceImage) {\n      throw new Error(\n        formatString(ERROR_MESSAGES.brush.noSourceImageCreateMask));\n    }\n    const sourceGeometry = sourceImage.getGeometry();\n\n    const imgK = sourceGeometry.worldToIndex(position).get(2);\n    if (typeof imgK === 'undefined') {\n      throw new Error('Z position is undefined');\n    }\n    const index = new Index([0, 0, imgK]);\n\n    // default tags\n    const firstSliceMeta = getDefaultDicomSegJson();\n    // dicom seg dimension\n    const dimension = getDimensionOrganization();\n    firstSliceMeta.DimensionOrganizationSequence = dimension.organizations;\n    firstSliceMeta.DimensionIndexSequence = dimension.indices;\n    // local\n    firstSliceMeta.PixelRepresentation = 0;\n    firstSliceMeta.numberOfFiles = 1;\n\n    const tags = sourceImage.getMeta();\n\n    firstSliceMeta.PatientID = tags.PatientID;\n    firstSliceMeta.StudyInstanceUID = tags.StudyInstanceUID;\n    firstSliceMeta.SeriesInstanceUID = tags.SeriesInstanceUID;\n    const referencedSOPs = [\n      {\n        referencedSOPClassUID: tags.SOPClassUID,\n        referencedSOPInstanceUID: sourceImage.getImageUid(index)\n      }\n    ];\n    const referenceSeriesTag = [];\n    referenceSeriesTag.push({\n      ReferencedInstanceSequence: {\n        value: referencedSOPs\n      },\n      SeriesInstanceUID: tags.SeriesInstanceUID\n    });\n    firstSliceMeta.ReferencedSeriesSequence = {\n      value: referenceSeriesTag\n    };\n    firstSliceMeta.custom = {\n      frameInfos: [\n        {\n          dimIndex: [1, 1],\n          refSegmentNumber: 1,\n          imagePosPat: tags.ImageOrientationPatient,\n          derivationImages: [\n            {\n              sourceImages: referencedSOPs\n            }\n          ]\n        }\n      ]\n    };\n\n    this.#mask = this.#createMaskImage(\n      sourceGeometry,\n      sourceGeometry.getOrigins()[imgK],\n      firstSliceMeta\n    );\n    // fires load events and renders data\n    // (will create viewLayer for it)\n    const elements = getElementsFromJSONTags(firstSliceMeta);\n    const data = new DicomData(elements);\n    data.image = this.#mask;\n    return this.#app.addData(data);\n  }\n\n  /**\n   * Get the orientation of the first data view config of the input\n   * divId.\n   *\n   * @param {string} divId The divId.\n   * @returns {string} The orientation.\n   */\n  #getDataViewConfigOrientation(divId) {\n    const dataConfigs = this.#app.getDataViewConfigs();\n    let orient;\n    for (const key in dataConfigs) {\n      const config = dataConfigs[key].find(function (item) {\n        return item.divId === divId;\n      });\n      if (typeof config !== 'undefined') {\n        orient = config.orientation;\n        break;\n      }\n    }\n    return orient;\n  }\n\n  /**\n   * Display a newly created mask.\n   *\n   * @param {string} divId The div id where to display the mask.\n   */\n  #displayMask(divId) {\n    // check mask data id\n    if (typeof this.#maskDataId === 'undefined') {\n      throw new Error(ERROR_MESSAGES.brush.cannotDisplayMask);\n    }\n    const viewConfig = new ViewConfig(divId);\n    viewConfig.orientation = this.#getDataViewConfigOrientation(divId);\n    this.#app.addDataViewConfig(this.#maskDataId, viewConfig);\n    this.#app.render(this.#maskDataId);\n  }\n\n  /**\n   * Get the first referenced UID of a mask image.\n   *\n   * @param {object} meta The mask image meta.\n   * @returns {string|undefined} The UID.\n   */\n  #getReferenceDataUID(meta) {\n    let dataUid;\n    const customMeta = meta.custom;\n    const frameInfos = customMeta.frameInfos;\n    if (frameInfos.length === 0) {\n      return dataUid;\n    }\n    // DerivationImageSequence (0008,9124)\n    const derivationImages = frameInfos[0].derivationImages;\n    if (typeof derivationImages === 'undefined') {\n      return dataUid;\n    }\n    if (derivationImages.length === 0) {\n      return dataUid;\n    }\n    // SourceImageSequence (0008,2112)\n    const sourceImages = derivationImages[0].sourceImages;\n    if (typeof sourceImages === 'undefined') {\n      return dataUid;\n    }\n    if (sourceImages.length === 0) {\n      return;\n    }\n    // ReferencedSOPInstanceUID (0008,1155)\n    return sourceImages[0].referencedSOPInstanceUID;\n  }\n\n  /**\n   * Get the source data id from the mask image meta.\n   *\n   * @param {Image} mask The mask image.\n   * @returns {string} The source data id.\n   */\n  #getSourceDataIdFromMask(mask) {\n    // get source id from mask meta\n    const meta = mask.getMeta();\n    const sourceDataUID = this.#getReferenceDataUID(meta);\n    // search app for the data ID of this SOPInstanceUID...\n    let ids = [];\n    if (sourceDataUID !== 'undefined') {\n      ids = this.#app.getDataIdsFromSopUids([sourceDataUID]);\n    }\n    let sourceDataId = '0';\n    if (ids.length > 0) {\n      sourceDataId = ids[0];\n    } else {\n      // mask with no source data...\n      logger.warn(\n        formatString(ERROR_MESSAGES.brush.cannotFindSourceData, sourceDataUID));\n    }\n    return sourceDataId;\n  }\n\n  /**\n   * Get the mask view layer.\n   *\n   * @param {LayerGroup} layerGroup The layer group to search.\n   * @returns {ViewLayer} The view layer.\n   */\n  #getLayerGroupMaskViewLayer(layerGroup) {\n    // check mask data id\n    if (typeof this.#maskDataId === 'undefined') {\n      throw new Error(ERROR_MESSAGES.brush.cannotGetMaskLayers);\n    }\n\n    const maskViewLayers = layerGroup.getViewLayersByDataId(\n      this.#maskDataId\n    );\n    if (maskViewLayers.length === 0) {\n      throw new Error(ERROR_MESSAGES.brush.noMaskViewLayers);\n    }\n    if (maskViewLayers.length !== 1) {\n      logger.warn(\n        formatString(\n          ERROR_MESSAGES.brush.tooManyMaskLayers, maskViewLayers.length)\n      );\n    }\n    return maskViewLayers[0];\n  }\n\n  /**\n   * Get the mask image.\n   *\n   * @param {string} maskDataId The mask data id.\n   * @returns {Image} The image.\n   */\n  #getMaskImage(maskDataId) {\n    if (typeof maskDataId === 'undefined') {\n      throw new Error(ERROR_MESSAGES.brush.noMaskId);\n    }\n    const maskData = this.#app.getData(maskDataId);\n    if (typeof maskData === 'undefined') {\n      throw new Error(ERROR_MESSAGES.brush.noMaskImageGetOffset);\n    }\n    return maskData.image;\n  }\n\n  /**\n   * Get the mask offset for an event.\n   *\n   * @param {object} event The event containing the mask position.\n   * @returns {Array} The array of offset to paint.\n   */\n  #getMaskOffsets(event) {\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const mousePoint = new Point2D(event.offsetX, event.offsetY);\n    const layerGroup = this.#app.getLayerGroupByDivId(\n      layerDetails.groupDivId\n    );\n    if (typeof layerGroup === 'undefined') {\n      throw new Error('No layergroup to get mask offsets');\n    }\n    this.#currentLayerGroup = layerGroup;\n\n    let viewLayer;\n    if (typeof this.#maskDataId === 'undefined') {\n      viewLayer = layerGroup.getBaseViewLayer();\n    } else {\n      viewLayer = layerGroup.getViewLayersByDataId(this.#maskDataId)[0];\n    }\n    if (typeof viewLayer === 'undefined') {\n      return [];\n    }\n    const viewController = viewLayer.getViewController();\n\n    const searchMaskMeta = {\n      Modality: 'SEG'\n    };\n\n    // update existing mask from current vl or create a new one\n    let maskVl;\n    let maskVc;\n    let sourcePosition;\n    let sourceImage;\n    if (viewController.equalImageMeta(searchMaskMeta)) {\n      this.#mask = this.#getMaskImage(this.#maskDataId);\n      // get source image\n      const sourceDataId = this.#getSourceDataIdFromMask(this.#mask);\n      const sourceData = this.#app.getData(sourceDataId);\n      if (!sourceData) {\n        throw new Error(formatString(\n          ERROR_MESSAGES.brush.noSourceImageGetOffset, sourceDataId\n        ));\n      }\n      sourceImage = sourceData.image;\n      //\n      const sourceVl = layerGroup.getViewLayersByDataId(sourceDataId)[0];\n      const sourceViewController = sourceVl.getViewController();\n      const planePos = sourceVl.displayToPlanePos(mousePoint);\n      sourcePosition = sourceViewController.getPositionFromPlanePoint(planePos);\n      // update locals\n      maskVl = viewLayer;\n      maskVc = viewController;\n    } else {\n      // view layer is source\n      const sourceDataId = viewLayer.getDataId();\n      const sourceData = this.#app.getData(sourceDataId);\n      if (!sourceData) {\n        throw new Error(formatString(\n          ERROR_MESSAGES.brush.noSourceImageGetOffset, sourceDataId\n        ));\n      }\n      sourceImage = sourceData.image;\n\n      const planePos = viewLayer.displayToPlanePos(mousePoint);\n      sourcePosition = viewController.getPositionFromPlanePoint(planePos);\n      // create mask (sets this.#mask)\n      this.#maskDataId = this.#createMask(sourcePosition, sourceImage);\n      // check\n      if (typeof this.#mask === 'undefined') {\n        throw new Error(ERROR_MESSAGES.brush.noCreatedMaskImage);\n      }\n      // display mask\n      const divId = layerGroup.getDivId();\n      if (typeof divId !== 'undefined') {\n        this.#displayMask(divId);\n      }\n      // newly create mask case: find the SEG view layer\n      maskVl = this.#getLayerGroupMaskViewLayer(layerGroup);\n      maskVc = maskVl.getViewController();\n    }\n\n    const sourceGeometry = sourceImage.getGeometry();\n    const sliceMeta = this.#mask.getMeta();\n    const maskGeometry = this.#mask.getGeometry();\n\n    const spacing2D = viewController.get2DSpacing();\n    const rx = Math.round(this.#brushSize / spacing2D.x);\n    const ry = Math.round(this.#brushSize / spacing2D.y);\n    const radiuses = [rx, ry];\n\n    let circleDims;\n    const scrollIndex = viewController.getScrollDimIndex();\n    switch (scrollIndex) {\n    case 0: {\n      circleDims = [1, 2];\n      break;\n    }\n    case 1: {\n      circleDims = [0, 2];\n      break;\n    }\n    case 2: {\n      circleDims = [0, 1];\n      break;\n    }\n    default: {\n      throw new Error(\n        formatString(ERROR_MESSAGES.brush.unsupportedScrollIndex, scrollIndex)\n      );\n    }\n    }\n\n    this.#addMaskSlices(\n      sourceGeometry,\n      maskGeometry,\n      sourcePosition,\n      circleDims,\n      radiuses,\n      sliceMeta\n    );\n\n    // circle indices in the mask geometry\n    const maskPlanePos = maskVl.displayToPlanePos(mousePoint);\n    const maskPosition = maskVc.getPositionFromPlanePoint(maskPlanePos);\n    const maskCircleIndices = getCircleIndices(\n      maskGeometry,\n      maskPosition,\n      radiuses,\n      circleDims\n    );\n\n    return getOffsetsFromIndices(maskGeometry, maskCircleIndices);\n  }\n\n  /**\n   * Determines if the event is over a series inside the blacklist.\n   *\n   * @param {MouseEvent} event The mouse down event.\n   * @returns {boolean} True if in black list.\n   */\n  #isInBlackList(event) {\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(\n      layerDetails.groupDivId\n    );\n    if (typeof layerGroup === 'undefined') {\n      throw new Error('No layergroup to check black list');\n    }\n    const drawLayer = layerGroup.getActiveDrawLayer();\n\n    if (typeof drawLayer === 'undefined') {\n      const viewLayer = layerGroup.getActiveViewLayer();\n      const referenceDataId = viewLayer.getDataId();\n      const referenceData = this.#app.getData(referenceDataId);\n      const referenceMeta = referenceData.image.getMeta();\n      const seriesInstanceUID = referenceMeta.SeriesInstanceUID;\n      // check black list\n      if (this.#blacklist.includes(seriesInstanceUID)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {MouseEvent} event The mouse down event.\n   */\n  mousedown = (event) => {\n    if (this.#isInBlackList(event)) {\n      return;\n    }\n    if (typeof this.#selectedSegmentNumber === 'undefined') {\n      logger.warn(ERROR_MESSAGES.brush.noSelectedSegmentNumber);\n      return;\n    }\n\n    // start flag\n    this.#started = true;\n    // first position\n    this.#startPoint = new Point2D(event.offsetX, event.offsetY);\n\n    // reset tmp vars\n    this.#tmpOffsetsLists = [];\n    this.#tmpOriginalValuesLists = [];\n\n    // check right button\n    this.#setEraserOnRightMousedown(event);\n    // paint\n    const offsets = this.#getMaskOffsets(event);\n    if (offsets.length > 0) {\n      this.#paintMaskAtOffsets(offsets);\n    } else {\n      // reset flag\n      this.#started = false;\n      this.#removeEraserOnRightMousedown(event);\n    }\n  };\n\n  /**\n   * Checks if the mouse down event has been done with right click\n   * and if true, set erasing mode to the brush color.\n   *\n   * @param {MouseEvent} event The mouse event.\n   */\n  #setEraserOnRightMousedown(event) {\n    if (event.button === _MouseEventButtons.right) {\n      this.#brushMode = _BrushMode.Del;\n      const activateErasingEvent = new CustomEvent('erasingactivated');\n      this.dispatchEvent(activateErasingEvent);\n    }\n  }\n\n  /**\n   * Checks if the mouse down event has been done with right click\n   * and if true, removes erasing mode from the brush color.\n   *\n   * @param {MouseEvent} event The mouse event.\n   */\n  #removeEraserOnRightMousedown(event) {\n    if (event.button === _MouseEventButtons.right) {\n      this.#brushMode = _BrushMode.Add;\n      const deactivateErasingEvent = new CustomEvent('erasingdeactivated');\n      this.dispatchEvent(deactivateErasingEvent);\n    }\n  }\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    if (!this.#started) {\n      return;\n    }\n    if (typeof this.#startPoint === 'undefined') {\n      return;\n    }\n    const mousePoint = new Point2D(event.offsetX, event.offsetY);\n    const diffX = Math.abs(mousePoint.getX() - this.#startPoint.getX());\n    const diffY = Math.abs(mousePoint.getY() - this.#startPoint.getY());\n    if (diffX > this.#brushSize / 2 || diffY > this.#brushSize / 2) {\n      const offsets = this.#getMaskOffsets(event);\n      if (offsets.length > 0) {\n        this.#paintMaskAtOffsets(offsets);\n      }\n      this.#startPoint = mousePoint;\n    }\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {MouseEvent} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    if (this.#started) {\n      this.#started = false;\n      this.#removeEraserOnRightMousedown(_event);\n\n      if (typeof this.#maskDataId === 'undefined') {\n        throw new Error(ERROR_MESSAGES.brush.cannotDrawNoMaskId);\n      }\n      if (typeof this.#tmpOffsetsLists === 'undefined') {\n        throw new Error(ERROR_MESSAGES.brush.cannotDrawNoOffset);\n      }\n      if (typeof this.#tmpOriginalValuesLists === 'undefined') {\n        throw new Error(ERROR_MESSAGES.brush.cannotDrawNoColourList);\n      }\n\n      // reverse lists for command to respect original colours\n      this.#tmpOffsetsLists.reverse();\n      this.#tmpOriginalValuesLists.reverse();\n      const maskVl = this.#getMaskViewLayer();\n      const srclayerid = maskVl.getId();\n\n      // full draw from mouse down to up\n      const maskData = this.#app.getData(this.#maskDataId);\n      if (!maskData) {\n        throw new Error(\n          formatString(ERROR_MESSAGES.brush.noMaskImageDraw, this.#maskDataId)\n        );\n      }\n      const props = new DrawBrushCommandProperties();\n      props.mask = maskData.image;\n      props.dataId = this.#maskDataId;\n      props.offsetsLists = this.#tmpOffsetsLists;\n      props.mode = this.#brushMode;\n      props.segmentNumber = this.#selectedSegmentNumber;\n      props.srclayerid = srclayerid;\n      props.originalValuesLists = this.#tmpOriginalValuesLists;\n      const command = new DrawBrushCommand(props);\n      command.onExecute = (event) => {\n        this.dispatchEvent(event);\n      };\n      command.onUndo = (event) => {\n        this.dispatchEvent(event);\n      };\n      // save command in undo stack\n      this.#app.addToUndoStack(command);\n      // fire event\n      this.dispatchEvent(command.getExecuteEvent());\n    }\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} event The mouse out event.\n   */\n  mouseout = (event) => {\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    // call mouse equivalent\n    this.mousedown(event);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    // call mouse equivalent\n    this.mousemove(event);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    // call mouse equivalent\n    this.mouseup(event);\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {WheelEvent} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    this.#scrollWhell.wheel(event);\n  };\n\n  /**\n   * Get the mask view layer.\n   *\n   * @returns {ViewLayer} The mask view layer.\n   */\n  #getMaskViewLayer() {\n    if (typeof this.#maskDataId === 'undefined') {\n      throw new Error(ERROR_MESSAGES.brush.cannotGetMaskVCNoMaskId);\n    }\n    if (typeof this.#currentLayerGroup === 'undefined') {\n      throw new Error('No current layer group');\n    }\n\n    const maskLayers = this.#currentLayerGroup.getViewLayersByDataId(\n      this.#maskDataId\n    );\n    if (maskLayers.length === 0) {\n      throw new Error(ERROR_MESSAGES.brush.cannotGetMaskVCNoMaskLayers);\n    }\n    if (maskLayers.length !== 1) {\n      logger.warn(ERROR_MESSAGES.brush.moreMaskLayers);\n    }\n    return maskLayers[0];\n  }\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'Brush';\n    this.#app.onKeydown(event);\n\n    const ctrlOrAlt = event.ctrlKey || event.altKey;\n\n    if (\n      !ctrlOrAlt &&\n      event.key === '+' &&\n      this.#brushSize + 1 < this.#brushSizeRange.max\n    ) {\n      this.#brushSize += 1;\n      logger.debug('Brush size: ' + this.#brushSize);\n    } else if (\n      !ctrlOrAlt &&\n      event.key === '-' &&\n      this.#brushSize - 1 >= this.#brushSizeRange.min\n    ) {\n      this.#brushSize -= 1;\n      logger.debug('Brush size: ' + this.#brushSize);\n    } else if (!ctrlOrAlt && !Number.isNaN(Number.parseInt(event.key, 10))) {\n      this.#brushMode = _BrushMode.Add;\n      //const number = Number.parseInt(event.key, 10);\n      //this.#setSelectedSegment2(number);\n    } else if (!ctrlOrAlt && event.key === 'a') {\n      this.#brushMode = _BrushMode.Add;\n      logger.debug('Brush mode: ' + this.#brushMode);\n    } else if (!ctrlOrAlt && event.key === 'd') {\n      this.#brushMode = _BrushMode.Del;\n      logger.debug('Brush mode: ' + this.#brushMode);\n    }\n  };\n\n  /**\n   * Activate the tool and activates/deactivates\n   * the context menu of all dwv div ids.\n   *\n   * @param {boolean} bool The flag to activate or not.\n   */\n  activate(bool) {\n    const viewConfigs = this.#app.getDataViewConfigs();\n    const allDivIds = getUniqueDataViewConfigsDivIds(viewConfigs);\n    if (bool) {\n      this.#deactivateDivIdsContextMenu(allDivIds);\n      return;\n    }\n    this.#reactivateDivIdsContextMenu(allDivIds);\n  }\n\n  /**\n   * Deactivates the context menu on all dwv div ids.\n   *\n   * @param {string[]} divIds The div ids whose context menu\n   *   should be deactivated.\n   */\n  #deactivateDivIdsContextMenu(divIds) {\n    for (const divId of divIds) {\n      const element = document.querySelector('#' + divId);\n      if (!element) {\n        return;\n      }\n      element.addEventListener('contextmenu', (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n      });\n    }\n  }\n\n  /**\n   * Reactivates the context menu on all dwv div ids.\n   *\n   * @param {string[]} divIds The div ids whose context menu\n   *   should be reactivated.\n   */\n  #reactivateDivIdsContextMenu(divIds) {\n    for (const divId of divIds) {\n      const element = document.querySelector('#' + divId);\n      if (!element) {\n        return;\n      }\n      element.addEventListener('contextmenu', (_event) => {\n        // Intentionally empty\n      });\n    }\n  }\n\n  /**\n   * Set the tool live features.\n   * See the documentation of the class members for details.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.brushSizeRange !== 'undefined') {\n      this.#brushSizeRange = features.brushSizeRange;\n    }\n    if (\n      typeof features.brushSize !== 'undefined' &&\n      features.brushSize >= this.#brushSizeRange.min &&\n      features.brushSize < this.#brushSizeRange.max\n    ) {\n      this.#brushSize = features.brushSize;\n    }\n\n    if (typeof features.brushMode !== 'undefined') {\n      this.#brushMode = features.brushMode;\n    }\n\n    // createMask is needed since not all properties are always needed,\n    // maskDataId could be undefined for example when\n    // just changing the brushSize\n    if (features.createMask) {\n      this.#maskDataId = undefined;\n    } else if (typeof features.maskDataId !== 'undefined') {\n      this.#maskDataId = features.maskDataId;\n    }\n\n    // used in draw events\n    if (typeof features.selectedSegmentNumber !== 'undefined') {\n      this.#selectedSegmentNumber = features.selectedSegmentNumber;\n    }\n\n    if (typeof features.blacklist !== 'undefined') {\n      this.#blacklist = features.blacklist;\n    }\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Get the list of event names that this tool can fire.\n   *\n   * @returns {Array} The list of event names.\n   */\n  getEventNames() {\n    return [\n      'brushdraw', 'brushremove', 'erasingactivated', 'erasingdeactivated'\n    ];\n  }\n\n  /**\n   * Help for this tool.\n   *\n   * @returns {object} The help content.\n   */\n  getHelpKeys() {\n    return {\n      title: 'tool.Brush.name',\n      brief: 'tool.Brush.brief',\n      mouse: {\n        mouse_click: 'tool.Brush.mouse_click'\n      },\n      touch: {\n        touch_click: 'tool.Brush.touch_click'\n      }\n    };\n  }\n} // Brush class\n","import {Point2D} from '../math/point';\n\n/**\n * Region Of Interest shape.\n * Note: should be a closed path.\n */\nexport class ROI {\n\n  /**\n   * List of points.\n   *\n   * @type {Point2D[]}\n   */\n  #points = [];\n\n  /**\n   * @param {Point2D[]} [points] Optional initial point list.\n   */\n  constructor(points) {\n    if (typeof points !== 'undefined') {\n      this.#points = points;\n    }\n  }\n\n  /**\n   * Get a point of the list at a given index.\n   *\n   * @param {number} index The index of the point to get\n   *   (beware, no size check).\n   * @returns {Point2D|undefined} The Point2D at the given index.\n   */\n  getPoint(index) {\n    return this.#points[index];\n  }\n\n  /**\n   * Get the point list.\n   *\n   * @returns {Point2D[]} The list.\n   */\n  getPoints() {\n    return this.#points;\n  }\n\n  /**\n   * Get the length of the point list.\n   *\n   * @returns {number} The length of the point list.\n   */\n  getLength() {\n    return this.#points.length;\n  }\n\n  /**\n   * Add a point to the ROI.\n   *\n   * @param {Point2D} point The Point2D to add.\n   */\n  addPoint(point) {\n    this.#points.push(point);\n  }\n\n  /**\n   * Add points to the ROI.\n   *\n   * @param {Point2D[]} rhs The array of POints2D to add.\n   */\n  addPoints(rhs) {\n    this.#points = this.#points.concat(rhs);\n  }\n\n  /**\n   * Get the centroid of the roi. Only valid for\n   * a non-self-intersecting closed polygon.\n   * Ref: {@link https://en.wikipedia.org/wiki/Centroid#Of_a_polygon}.\n   *\n   * @returns {Point2D|undefined} The centroid point.\n   */\n  getCentroid() {\n    let a = 0;\n    let cx = 0;\n    let cy = 0;\n    for (let i = 0; i < this.#points.length; ++i) {\n      const pi = this.#points[i];\n      let pi1;\n      if (i === this.#points.length - 1) {\n        pi1 = this.#points[0];\n      } else {\n        pi1 = this.#points[i + 1];\n      }\n      const ai = pi.getX() * pi1.getY() - pi1.getX() * pi.getY();\n      a += ai;\n      cx += (pi.getX() + pi1.getX()) * ai;\n      cy += (pi.getY() + pi1.getY()) * ai;\n    }\n\n    let res;\n    if (a !== 0) {\n      const a1 = 1 / (3 * a);\n      res = new Point2D(a1 * cx, a1 * cy);\n    }\n    return res;\n  }\n\n} // ROI class\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D} from '../math/point';\n/* eslint-enable no-unused-vars */\n\n/**\n * Path shape.\n */\nexport class Path {\n\n  /**\n   * @param {Point2D[]} [inputPointArray] The list of Point2D that make\n   *   the path (optional).\n   * @param {number[]} [inputControlPointIndexArray] The list of control\n   *  point of path, as indexes (optional).\n   * Note: first and last point do not need to be equal.\n   */\n  constructor(inputPointArray, inputControlPointIndexArray) {\n    /**\n     * List of points.\n     *\n     * @type {Point2D[]}\n     */\n    this.pointArray = inputPointArray ? inputPointArray.slice() : [];\n    /**\n     * List of control points.\n     *\n     * @type {number[]}\n     */\n    this.controlPointIndexArray = inputControlPointIndexArray\n      ? inputControlPointIndexArray.slice() : [];\n  }\n\n  /**\n   * Get a point of the list.\n   *\n   * @param {number} index The index of the point\n   *   to get (beware, no size check).\n   * @returns {Point2D} The Point2D at the given index.\n   */\n  getPoint(index) {\n    return this.pointArray[index];\n  }\n\n  /**\n   * Is the given point a control point.\n   *\n   * @param {Point2D} point The Point2D to check.\n   * @returns {boolean} True if a control point.\n   */\n  isControlPoint(point) {\n    const index = this.pointArray.indexOf(point);\n    if (index !== -1) {\n      return this.controlPointIndexArray.indexOf(index) !== -1;\n    } else {\n      throw new Error('Error: isControlPoint called with not in list point.');\n    }\n  }\n\n  /**\n   * Get the length of the path.\n   *\n   * @returns {number} The length of the path.\n   */\n  getLength() {\n    return this.pointArray.length;\n  }\n\n  /**\n   * Add a point to the path.\n   *\n   * @param {Point2D} point The Point2D to add.\n   */\n  addPoint(point) {\n    this.pointArray.push(point);\n  }\n\n  /**\n   * Add a control point to the path.\n   *\n   * @param {Point2D} point The Point2D to make a control point.\n   */\n  addControlPoint(point) {\n    const index = this.pointArray.indexOf(point);\n    if (index !== -1) {\n      this.controlPointIndexArray.push(index);\n    } else {\n      throw new Error(\n        'Cannot mark a non registered point as control point.');\n    }\n  }\n\n  /**\n   * Add points to the path.\n   *\n   * @param {Point2D[]} newPointArray The list of Point2D to add.\n   */\n  addPoints(newPointArray) {\n    this.pointArray = this.pointArray.concat(newPointArray);\n  }\n\n  /**\n   * Append a Path to this one.\n   *\n   * @param {Path} other The Path to append.\n   */\n  appenPath(other) {\n    const oldSize = this.pointArray.length;\n    this.pointArray = this.pointArray.concat(other.pointArray);\n    const indexArray = [];\n    for (let i = 0; i < other.controlPointIndexArray.length; ++i) {\n      indexArray[i] = other.controlPointIndexArray[i] + oldSize;\n    }\n    this.controlPointIndexArray =\n      this.controlPointIndexArray.concat(indexArray);\n  }\n\n} // Path class\n","/**\n * Circular Bucket Queue.\n *\n * Returns input'd points in sorted order. All operations run in roughly O(1)\n * time (for input with small cost values), but it has a strict requirement:\n *\n * If the most recent point had a cost of c, any points added should have a cost\n * c' in the range c <= c' <= c + (capacity - 1).\n */\nexport class BucketQueue {\n\n  /**\n   * @param {number} bits Number of bits.\n   * @param {Function} cost_functor The cost functor.\n   */\n  constructor(bits, cost_functor) {\n    this.bucketCount = 1 << bits; // # of buckets = 2^bits\n    this.mask = this.bucketCount - 1; // 2^bits - 1 = index mask\n    this.size = 0;\n\n    this.loc = 0; // Current index in bucket list\n    // Cost defaults to item value\n    this.cost = (typeof (cost_functor) !== 'undefined')\n      ? cost_functor : function (item) {\n        return item;\n      };\n    this.buckets = this.buildArray(this.bucketCount);\n  }\n\n  push(item) {\n    // Prepend item to the list in the appropriate bucket\n    const bucket = this.getBucket(item);\n    item.next = this.buckets[bucket];\n    this.buckets[bucket] = item;\n\n    this.size++;\n  }\n\n  pop() {\n    if (this.size === 0) {\n      throw new Error('Cannot pop, bucketQueue is empty.');\n    }\n\n    // Find first empty bucket\n    while (this.buckets[this.loc] === null) {\n      this.loc = (this.loc + 1) % this.bucketCount;\n    }\n\n    // All items in bucket have same cost, return the first one\n    const ret = this.buckets[this.loc];\n    this.buckets[this.loc] = ret.next;\n    ret.next = null;\n\n    this.size--;\n    return ret;\n  }\n\n  // TODO: needs at least two items...\n  remove(item) {\n    // Tries to remove item from queue. Returns true on success, false otherwise\n    if (!item) {\n      return false;\n    }\n\n    // To find node, go to bucket and search through unsorted list.\n    const bucket = this.getBucket(item);\n    let node = this.buckets[bucket];\n\n    while (node !== null &&\n      !(node.next !== null &&\n      item.x === node.next.x &&\n      item.y === node.next.y)) {\n      node = node.next;\n    }\n\n    if (node === null) {\n      // Item not in list, ergo item not in queue\n      return false;\n    } else {\n      // Found item, do standard list node deletion\n      node.next = node.next.next;\n\n      this.size--;\n      return true;\n    }\n  }\n\n  isEmpty() {\n    return this.size === 0;\n  }\n\n  getBucket(item) {\n    // Bucket index is the masked cost\n    return this.cost(item) & this.mask;\n  }\n\n  buildArray(newSize) {\n    // Create array and initialze pointers to null\n    const buckets = new Array(newSize);\n\n    for (let i = 0; i < buckets.length; i++) {\n      buckets[i] = null;\n    }\n\n    return buckets;\n  }\n\n} // class BucketQueue\n","import {BucketQueue} from './bucketQueue';\n\n// Pre-created to reduce allocation in inner loops\nconst __twothirdpi = (2 / (3 * Math.PI));\n\n/**\n * Compute grey scale.\n *\n * @param {Array} data The input data.\n * @param {number} width The width of the output.\n * @param {number} height The height of the output.\n * @returns {object} A greyscale object.\n */\nfunction computeGreyscale(data, width, height) {\n  // Returns 2D augmented array containing greyscale data\n  // Greyscale values found by averaging colour channels\n  // Input should be in a flat RGBA array, with values between 0 and 255\n  const greyscale = {\n    data: []\n  };\n\n  // Compute actual values\n  for (let y = 0; y < height; y++) {\n    greyscale.data[y] = [];\n\n    for (let x = 0; x < width; x++) {\n      const p = (y * width + x) * 4;\n      greyscale.data[y][x] = (data[p] + data[p + 1] + data[p + 2]) / (3 * 255);\n    }\n  }\n\n  // Augment with convenience functions\n  greyscale.dx = function (x, y) {\n    if (x + 1 === this.data[y].length) {\n      // If we're at the end, back up one\n      x--;\n    }\n    return this.data[y][x + 1] - this.data[y][x];\n  };\n\n  greyscale.dy = function (x, y) {\n    if (y + 1 === this.data.length) {\n      // If we're at the end, back up one\n      y--;\n    }\n    return this.data[y][x] - this.data[y + 1][x];\n  };\n\n  greyscale.gradMagnitude = function (x, y) {\n    const dx = this.dx(x, y);\n    const dy = this.dy(x, y);\n    return Math.sqrt(dx * dx + dy * dy);\n  };\n\n  greyscale.laplace = function (x, y) {\n    // Laplacian of Gaussian\n    let lap = -16 * this.data[y][x];\n    lap += this.data[y - 2][x];\n    lap += this.data[y - 1][x - 1] +\n      2 * this.data[y - 1][x] +\n      this.data[y - 1][x + 1];\n    lap += this.data[y][x - 2] +\n      2 * this.data[y][x - 1] +\n      2 * this.data[y][x + 1] +\n      this.data[y][x + 2];\n    lap += this.data[y + 1][x - 1] +\n      2 * this.data[y + 1][x] +\n      this.data[y + 1][x + 1];\n    lap += this.data[y + 2][x];\n\n    return lap;\n  };\n\n  return greyscale;\n}\n\n/**\n * Compute gradient.\n *\n * @param {object} greyscale The input greyscale.\n * @returns {object} A gradient object.\n */\nfunction computeGradient(greyscale) {\n  // Returns a 2D array of gradient magnitude values for greyscale. The values\n  // are scaled between 0 and 1, and then flipped, so that it works as a cost\n  // function.\n  const gradient = [];\n\n  let max = 0; // Maximum gradient found, for scaling purposes\n\n  let x = 0;\n  let y = 0;\n\n  for (y = 0; y < greyscale.data.length - 1; y++) {\n    gradient[y] = [];\n\n    for (x = 0; x < greyscale.data[y].length - 1; x++) {\n      gradient[y][x] = greyscale.gradMagnitude(x, y);\n      max = Math.max(gradient[y][x], max);\n    }\n\n    gradient[y][greyscale.data[y].length - 1] =\n      gradient[y][greyscale.data.length - 2];\n  }\n\n  gradient[greyscale.data.length - 1] = [];\n  for (let i = 0; i < gradient[0].length; i++) {\n    gradient[greyscale.data.length - 1][i] =\n      gradient[greyscale.data.length - 2][i];\n  }\n\n  // Flip and scale.\n  for (y = 0; y < gradient.length; y++) {\n    for (x = 0; x < gradient[y].length; x++) {\n      // @ts-ignore\n      gradient[y][x] = 1 - (gradient[y][x] / max);\n    }\n  }\n\n  return gradient;\n}\n\n/**\n * @param {object} greyscale The input greyscale.\n * @returns {object} A laplace object.\n */\nfunction computeLaplace(greyscale) {\n  // Returns a 2D array of Laplacian of Gaussian values\n  const laplace = [];\n\n  // Make the edges low cost here.\n\n  laplace[0] = [];\n  laplace[1] = [];\n  for (let i = 1; i < greyscale.data.length; i++) {\n    // Pad top, since we can't compute Laplacian\n    laplace[0][i] = 1;\n    laplace[1][i] = 1;\n  }\n\n  for (let y = 2; y < greyscale.data.length - 2; y++) {\n    laplace[y] = [];\n    // Pad left, ditto\n    laplace[y][0] = 1;\n    laplace[y][1] = 1;\n\n    for (let x = 2; x < greyscale.data[y].length - 2; x++) {\n      // Threshold needed to get rid of clutter.\n      laplace[y][x] = (greyscale.laplace(x, y) > 0.33) ? 0 : 1;\n    }\n\n    // Pad right, ditto\n    laplace[y][greyscale.data[y].length - 2] = 1;\n    laplace[y][greyscale.data[y].length - 1] = 1;\n  }\n\n  laplace[greyscale.data.length - 2] = [];\n  laplace[greyscale.data.length - 1] = [];\n  for (let j = 1; j < greyscale.data.length; j++) {\n    // Pad bottom, ditto\n    laplace[greyscale.data.length - 2][j] = 1;\n    laplace[greyscale.data.length - 1][j] = 1;\n  }\n\n  return laplace;\n}\n\n/**\n * Compute the X gradient.\n *\n * @param {object} greyscale The values.\n * @returns {Array} The gradient.\n */\nfunction computeGradX(greyscale) {\n  // Returns 2D array of x-gradient values for greyscale\n  const gradX = [];\n\n  for (let y = 0; y < greyscale.data.length; y++) {\n    gradX[y] = [];\n\n    for (let x = 0; x < greyscale.data[y].length - 1; x++) {\n      gradX[y][x] = greyscale.dx(x, y);\n    }\n\n    gradX[y][greyscale.data[y].length - 1] =\n      gradX[y][greyscale.data[y].length - 2];\n  }\n\n  return gradX;\n}\n\n/**\n * Compute the Y gradient.\n *\n * @param {object} greyscale The values.\n * @returns {Array} The gradient.\n */\nfunction computeGradY(greyscale) {\n  // Returns 2D array of y-gradient values for greyscale\n  const gradY = [];\n\n  for (let y = 0; y < greyscale.data.length - 1; y++) {\n    gradY[y] = [];\n\n    for (let x = 0; x < greyscale.data[y].length; x++) {\n      gradY[y][x] = greyscale.dy(x, y);\n    }\n  }\n\n  gradY[greyscale.data.length - 1] = [];\n  for (let i = 0; i < greyscale.data[0].length; i++) {\n    gradY[greyscale.data.length - 1][i] = gradY[greyscale.data.length - 2][i];\n  }\n\n  return gradY;\n}\n\n/**\n * Compute the gradient unit vector.\n *\n * @param {Array} gradX The X gradient.\n * @param {Array} gradY The Y gradient.\n * @param {number} px The point X.\n * @param {number} py The point Y.\n * @param {object} out The result.\n */\nfunction gradUnitVector(gradX, gradY, px, py, out) {\n  // Returns the gradient vector at (px,py), scaled to a magnitude of 1\n  const ox = gradX[py][px];\n  const oy = gradY[py][px];\n\n  let gvm = Math.sqrt(ox * ox + oy * oy);\n  gvm = Math.max(gvm, 1e-100); // To avoid possible divide-by-0 errors\n\n  out.x = ox / gvm;\n  out.y = oy / gvm;\n}\n\n/**\n * Compute the gradient direction.\n *\n * @param {Array} gradX The X gradient.\n * @param {Array} gradY The Y gradient.\n * @param {number} px The point X.\n * @param {number} py The point Y.\n * @param {number} qx The q X.\n * @param {number} qy The q Y.\n * @returns {number} The direction.\n */\nfunction gradDirection(gradX, gradY, px, py, qx, qy) {\n  const __dgpuv = {x: -1, y: -1};\n  const __gdquv = {x: -1, y: -1};\n  // Compute the gradiant direction, in radians, between to points\n  gradUnitVector(gradX, gradY, px, py, __dgpuv);\n  gradUnitVector(gradX, gradY, qx, qy, __gdquv);\n\n  let dp = __dgpuv.y * (qx - px) - __dgpuv.x * (qy - py);\n  let dq = __gdquv.y * (qx - px) - __gdquv.x * (qy - py);\n\n  // Make sure dp is positive, to keep things consistant\n  if (dp < 0) {\n    dp = -dp;\n    dq = -dq;\n  }\n\n  if (px !== qx && py !== qy) {\n    // We're going diagonally between pixels\n    dp *= Math.SQRT1_2;\n    dq *= Math.SQRT1_2;\n  }\n\n  return __twothirdpi * (Math.acos(dp) + Math.acos(dq));\n}\n\n/**\n * Compute the sides.\n *\n * @param {number} dist The distance.\n * @param {Array} gradX The X gradient.\n * @param {Array} gradY The Y gradient.\n * @param {object} greyscale The value.\n * @returns {object} The sides.\n */\nfunction computeSides(dist, gradX, gradY, greyscale) {\n  // Returns 2 2D arrays, containing inside and outside greyscale values.\n  // These greyscale values are the intensity just a little bit along the\n  // gradient vector, in either direction, from the supplied point. These\n  // values are used when using active-learning Intelligent Scissors\n\n  const sides = {};\n  sides.inside = [];\n  sides.outside = [];\n\n  const guv = {x: -1, y: -1}; // Current gradient unit vector\n\n  for (let y = 0; y < gradX.length; y++) {\n    sides.inside[y] = [];\n    sides.outside[y] = [];\n\n    for (let x = 0; x < gradX[y].length; x++) {\n      gradUnitVector(gradX, gradY, x, y, guv);\n\n      //(x, y) rotated 90 = (y, -x)\n\n      let ix = Math.round(x + dist * guv.y);\n      let iy = Math.round(y - dist * guv.x);\n      let ox = Math.round(x - dist * guv.y);\n      let oy = Math.round(y + dist * guv.x);\n\n      ix = Math.max(Math.min(ix, gradX[y].length - 1), 0);\n      ox = Math.max(Math.min(ox, gradX[y].length - 1), 0);\n      iy = Math.max(Math.min(iy, gradX.length - 1), 0);\n      oy = Math.max(Math.min(oy, gradX.length - 1), 0);\n\n      sides.inside[y][x] = greyscale.data[iy][ix];\n      sides.outside[y][x] = greyscale.data[oy][ox];\n    }\n  }\n\n  return sides;\n}\n\n/**\n * Gaussian blur an input buffer.\n *\n * @param {Array} buffer The input buffer.\n * @param {Array} out The result.\n */\nfunction gaussianBlur(buffer, out) {\n  // Smooth values over to fill in gaps in the mapping\n  out[0] = 0.4 * buffer[0] + 0.5 * buffer[1] + 0.1 * buffer[1];\n  out[1] = 0.25 * buffer[0] + 0.4 * buffer[1] + 0.25 * buffer[2] +\n    0.1 * buffer[3];\n\n  for (let i = 2; i < buffer.length - 2; i++) {\n    out[i] = 0.05 * buffer[i - 2] + 0.25 * buffer[i - 1] +\n      0.4 * buffer[i] + 0.25 * buffer[i + 1] + 0.05 * buffer[i + 2];\n  }\n\n  const len = buffer.length;\n  out[len - 2] = 0.25 * buffer[len - 1] + 0.4 * buffer[len - 2] +\n    0.25 * buffer[len - 3] + 0.1 * buffer[len - 4];\n  out[len - 1] = 0.4 * buffer[len - 1] + 0.5 * buffer[len - 2] +\n    0.1 * buffer[len - 3];\n}\n\n/**\n * Scissors.\n *\n * Ref: Eric N. Mortensen, William A. Barrett, Interactive Segmentation with\n *   Intelligent Scissors, Graphical Models and Image Processing, Volume 60,\n *   Issue 5, September 1998, Pages 349-384, ISSN 1077-3169,\n *   DOI: 10.1006/gmip.1998.0480.\n *\n * See: {@link http://www.sciencedirect.com/science/article/B6WG4-45JB8WN-9/2/6fe59d8089fd1892c2bfb82283065579}.\n *\n * Highly inspired from: {@link http://code.google.com/p/livewire-javascript/}.\n */\nexport class Scissors {\n\n  constructor() {\n    this.width = -1;\n    this.height = -1;\n\n    this.curPoint = null; // Corrent point we're searching on.\n    this.searchGranBits = 8; // Bits of resolution for BucketQueue.\n    this.searchGran = 1 << this.searchGranBits; //bits.\n    this.pointsPerPost = 500;\n\n    // Precomputed image data. All in ranges 0 >= x >= 1 and\n    //   all inverted (1 - x).\n    this.greyscale = null; // Greyscale of image\n    this.laplace = null; // Laplace zero-crossings (either 0 or 1).\n    this.gradient = null; // Gradient magnitudes.\n    this.gradX = null; // X-differences.\n    this.gradY = null; // Y-differences.\n\n    // Matrix mapping point => parent along shortest-path to root.\n    this.parents = null;\n\n    this.working = false; // Currently computing shortest paths?\n\n    // Begin Training:\n    this.trained = false;\n    this.trainingPoints = null;\n\n    this.edgeWidth = 2;\n    this.trainingLength = 32;\n\n    this.edgeGran = 256;\n    this.edgeTraining = null;\n\n    this.gradPointsNeeded = 32;\n    this.gradGran = 1024;\n    this.gradTraining = null;\n\n    this.insideGran = 256;\n    this.insideTraining = null;\n\n    this.outsideGran = 256;\n    this.outsideTraining = null;\n  }\n  // End Training\n\n\n  // Begin training methods //\n  getTrainingIdx(granularity, value) {\n    return Math.round((granularity - 1) * value);\n  }\n\n  getTrainedEdge(edge) {\n    return this.edgeTraining[this.getTrainingIdx(this.edgeGran, edge)];\n  }\n\n  getTrainedGrad(grad) {\n    return this.gradTraining[this.getTrainingIdx(this.gradGran, grad)];\n  }\n\n  getTrainedInside(inside) {\n    return this.insideTraining[this.getTrainingIdx(this.insideGran, inside)];\n  }\n\n  getTrainedOutside(outside) {\n    return this.outsideTraining[this.getTrainingIdx(this.outsideGran, outside)];\n  }\n  // End training methods //\n\n  setWorking(working) {\n    // Sets working flag\n    this.working = working;\n  }\n\n  setDimensions(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n\n  setData(data) {\n    if (this.width === -1 || this.height === -1) {\n      // The width and height should have already been set\n      throw new Error('Dimensions have not been set.');\n    }\n\n    this.greyscale = computeGreyscale(data, this.width, this.height);\n    this.laplace = computeLaplace(this.greyscale);\n    this.gradient = computeGradient(this.greyscale);\n    this.gradX = computeGradX(this.greyscale);\n    this.gradY = computeGradY(this.greyscale);\n\n    const sides = computeSides(\n      this.edgeWidth, this.gradX, this.gradY, this.greyscale);\n    this.inside = sides.inside;\n    this.outside = sides.outside;\n    this.edgeTraining = [];\n    this.gradTraining = [];\n    this.insideTraining = [];\n    this.outsideTraining = [];\n  }\n\n  findTrainingPoints(p) {\n    // Grab the last handful of points for training\n    const points = [];\n\n    if (this.parents !== null) {\n      for (let i = 0; i < this.trainingLength && p; i++) {\n        points.push(p);\n        p = this.parents[p.y][p.x];\n      }\n    }\n\n    return points;\n  }\n\n  resetTraining() {\n    this.trained = false; // Training is ignored with this flag set\n  }\n\n  doTraining(p) {\n    // Compute training weights and measures\n    this.trainingPoints = this.findTrainingPoints(p);\n\n    if (this.trainingPoints.length < 8) {\n      return; // Not enough points, I think. It might crash if length = 0.\n    }\n\n    const buffer = [];\n    this.calculateTraining(\n      buffer, this.edgeGran, this.greyscale, this.edgeTraining);\n    this.calculateTraining(\n      buffer, this.gradGran, this.gradient, this.gradTraining);\n    this.calculateTraining(\n      buffer, this.insideGran, this.inside, this.insideTraining);\n    this.calculateTraining(\n      buffer, this.outsideGran, this.outside, this.outsideTraining);\n\n    if (this.trainingPoints.length < this.gradPointsNeeded) {\n      // If we have two few training points, the gradient weight map might not\n      // be smooth enough, so average with normal weights.\n      this.addInStaticGrad(this.trainingPoints.length, this.gradPointsNeeded);\n    }\n\n    this.trained = true;\n  }\n\n  calculateTraining(\n    buffer, granularity, input, output) {\n    let i = 0;\n    // Build a map of raw-weights to trained-weights by favoring input values\n    buffer.length = granularity;\n    for (i = 0; i < granularity; i++) {\n      buffer[i] = 0;\n    }\n\n    let maxVal = 1;\n    for (i = 0; i < this.trainingPoints.length; i++) {\n      const p = this.trainingPoints[i];\n      const idx = this.getTrainingIdx(granularity, input[p.y][p.x]);\n      buffer[idx] += 1;\n\n      maxVal = Math.max(maxVal, buffer[idx]);\n    }\n\n    // Invert and scale.\n    for (i = 0; i < granularity; i++) {\n      buffer[i] = 1 - buffer[i] / maxVal;\n    }\n\n    // Blur it, as suggested. Gets rid of static.\n    gaussianBlur(buffer, output);\n  }\n\n  addInStaticGrad(have, need) {\n    // Average gradient raw-weights to trained-weights map with standard weight\n    // map so that we don't end up with something to spiky\n    for (let i = 0; i < this.gradGran; i++) {\n      this.gradTraining[i] = Math.min(\n        this.gradTraining[i],\n        1 - i * (need - have) / (need * this.gradGran)\n      );\n    }\n  }\n\n  gradDirection(px, py, qx, qy) {\n    return gradDirection(this.gradX, this.gradY, px, py, qx, qy);\n  }\n\n  dist(px, py, qx, qy) {\n    // The grand culmunation of most of the code: the weighted distance function\n    let grad = this.gradient[qy][qx];\n\n    if (px === qx || py === qy) {\n      // The distance is Euclidean-ish; non-diagonal edges should be shorter\n      grad *= Math.SQRT1_2;\n    }\n\n    const lap = this.laplace[qy][qx];\n    const dir = this.gradDirection(px, py, qx, qy);\n\n    if (this.trained) {\n      // Apply training magic\n      const gradT = this.getTrainedGrad(grad);\n      const edgeT = this.getTrainedEdge(this.greyscale.data[py][px]);\n      const insideT = this.getTrainedInside(this.inside[py][px]);\n      const outsideT = this.getTrainedOutside(this.outside[py][px]);\n\n      return 0.3 * gradT + 0.3 * lap + 0.1 * (dir + edgeT + insideT + outsideT);\n    } else {\n      // Normal weights\n      return 0.43 * grad + 0.43 * lap + 0.11 * dir;\n    }\n  }\n\n  adj(p) {\n    const list = [];\n\n    const sx = Math.max(p.x - 1, 0);\n    const sy = Math.max(p.y - 1, 0);\n    const ex = Math.min(p.x + 1, this.greyscale.data[0].length - 1);\n    const ey = Math.min(p.y + 1, this.greyscale.data.length - 1);\n\n    let idx = 0;\n    for (let y = sy; y <= ey; y++) {\n      for (let x = sx; x <= ex; x++) {\n        if (x !== p.x || y !== p.y) {\n          list[idx++] = {x: x, y: y};\n        }\n      }\n    }\n\n    return list;\n  }\n\n  #costFunction = (p) => {\n    return Math.round(this.searchGran * this.cost[p.y][p.x]);\n  };\n\n  setPoint(sp) {\n    this.setWorking(true);\n\n    this.curPoint = sp;\n\n    let x = 0;\n    let y = 0;\n\n    this.visited = [];\n    for (y = 0; y < this.height; y++) {\n      this.visited[y] = [];\n      for (x = 0; x < this.width; x++) {\n        this.visited[y][x] = false;\n      }\n    }\n\n    this.parents = [];\n    for (y = 0; y < this.height; y++) {\n      this.parents[y] = [];\n    }\n\n    this.cost = [];\n    for (y = 0; y < this.height; y++) {\n      this.cost[y] = [];\n      for (x = 0; x < this.width; x++) {\n        this.cost[y][x] = Number.MAX_VALUE;\n      }\n    }\n    this.cost[sp.y][sp.x] = 0;\n\n    this.pq = new BucketQueue(this.searchGranBits, this.#costFunction);\n    this.pq.push(sp);\n  }\n\n  doWork() {\n    if (!this.working) {\n      return;\n    }\n\n    this.timeout = null;\n\n    let pointCount = 0;\n    const newPoints = [];\n    while (!this.pq.isEmpty() && pointCount < this.pointsPerPost) {\n      const p = this.pq.pop();\n      newPoints.push(p);\n      newPoints.push(this.parents[p.y][p.x]);\n\n      this.visited[p.y][p.x] = true;\n\n      const adjList = this.adj(p);\n      for (let i = 0; i < adjList.length; i++) {\n        const q = adjList[i];\n\n        const pqCost = this.cost[p.y][p.x] + this.dist(p.x, p.y, q.x, q.y);\n\n        if (pqCost < this.cost[q.y][q.x]) {\n          if (this.cost[q.y][q.x] !== Number.MAX_VALUE) {\n            // Already in PQ, must remove it so we can re-add it.\n            this.pq.remove(q);\n          }\n\n          this.cost[q.y][q.x] = pqCost;\n          this.parents[q.y][q.x] = p;\n          this.pq.push(q);\n        }\n      }\n\n      pointCount++;\n    }\n\n    return newPoints;\n  }\n\n} // Scissors class\n","// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D} from '../math/point';\nimport {Style} from '../gui/style';\nimport {Annotation} from '../image/annotation';\n/* eslint-enable no-unused-vars */\n\n/**\n * Label factory to create and update shape label.\n */\nexport class LabelFactory {\n\n  /**\n   * Default position getter.\n   *\n   * @type {Function}\n   */\n  #defaultPositionGetter;\n\n  /**\n   * @param {Function} positionGetter Default position getter.\n   */\n  constructor(positionGetter) {\n    this.#defaultPositionGetter = positionGetter;\n  }\n\n  /**\n   * Get the annotation label position.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @returns {Point2D} The position.\n   */\n  getPosition(annotation) {\n    let position = annotation.labelPosition;\n    if (typeof position === 'undefined') {\n      position = this.#defaultPositionGetter(annotation);\n    }\n    return position;\n  }\n\n  /**\n   * Creates the konva label.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Style} style The drawing style.\n   * @returns {Konva.Label} The Konva label.\n   */\n  create(annotation, style) {\n    // konva text\n    const ktext = new Konva.Text({\n      fontSize: style.getFontSize(),\n      fontFamily: style.getFontFamily(),\n      fill: annotation.colour,\n      padding: style.getTextPadding(),\n      shadowColor: style.getShadowLineColour(),\n      shadowOffset: style.getShadowOffset(),\n      name: 'text'\n    });\n    const labelText = annotation.getText();\n    ktext.setText(labelText);\n\n    // times 2 so that the font size 10 looks like a 10...\n    // (same logic as in the DrawController::updateLabelScale)\n    const zoomScale = style.applyZoomScale(1);\n    const labelScale = {\n      x: 2 * zoomScale.x,\n      y: 2 * zoomScale.y\n    };\n\n    // konva label\n    const labelPosition = this.getPosition(annotation);\n    const klabel = new Konva.Label({\n      x: labelPosition.getX(),\n      y: labelPosition.getY(),\n      scale: labelScale,\n      visible: labelText.length !== 0,\n      name: 'label'\n    });\n    klabel.add(ktext);\n    klabel.add(new Konva.Tag({\n      fill: annotation.colour,\n      opacity: style.getTagOpacity()\n    }));\n\n    return klabel;\n  }\n\n  /**\n   * Update the shape label position.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Group} group The shape group.\n   */\n  updatePosition(annotation, group) {\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    if (!(klabel instanceof Konva.Label)) {\n      return;\n    }\n    // update position\n    const labelPosition = this.getPosition(annotation);\n    klabel.position({\n      x: labelPosition.getX(),\n      y: labelPosition.getY()\n    });\n  }\n\n  /**\n   * Get the anchors positions for the label.\n   *\n   * @param {Konva.Label} label The label.\n   * @returns {Point2D[]} The connectors positions.\n   */\n  getLabelAnchorsPosition(label) {\n    const lx = label.x();\n    const ly = label.y();\n    const dx = label.width() * label.scale().x;\n    const dy = label.height() * label.scale().y;\n    return [\n      new Point2D(lx + dx / 2, ly),\n      new Point2D(lx, ly + dy / 2),\n      new Point2D(lx + dx / 2, ly + dy),\n      new Point2D(lx + dx, ly + dy / 2),\n    ];\n  }\n\n  /**\n   * Get the two closest points of two points lists.\n   *\n   * @param {Point2D[]} points1 The first point list.\n   * @param {Point2D[]} points2 The second point list.\n   * @returns {Point2D[]} The closests points.\n   */\n  getClosestPoints(points1, points2) {\n    let minDist = points1[0].getDistance(points2[0]);\n    let p1 = points1[0];\n    let p2 = points2[0];\n    for (const point1 of points1) {\n      for (const point2 of points2) {\n        const dist = point1.getDistance(point2);\n        if (dist < minDist) {\n          minDist = dist;\n          p1 = point1;\n          p2 = point2;\n        }\n      }\n    }\n    return [p1, p2];\n  }\n\n  /**\n   * Get the connector between this label and its shape.\n   *\n   * @param {Point2D[]} connectorsPos The shape connectors positions.\n   * @param {Konva.Label} label The label.\n   * @param {Style} style The drawing style.\n   * @returns {Konva.Line} The connector.\n   */\n  getConnector(connectorsPos, label, style) {\n    const labelAnchorsPos = this.getLabelAnchorsPosition(label);\n    const anchorPoints = this.getClosestPoints(\n      connectorsPos, labelAnchorsPos);\n    return new Konva.Line({\n      points: [\n        anchorPoints[0].getX(),\n        anchorPoints[0].getY(),\n        anchorPoints[1].getX(),\n        anchorPoints[1].getY()\n      ],\n      stroke: label.getText().fill(),\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      visible: label.visible(),\n      dash: [10, 7],\n      name: 'connector'\n    });\n  }\n\n  /**\n   * Update the connector between a label and its shape.\n   *\n   * @param {Konva.Group} group The associated shape group.\n   * @param {Point2D[]} connectorsPos The shape connectors positions.\n   */\n  updateConnector(group, connectorsPos) {\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    if (!(klabel instanceof Konva.Label)) {\n      return;\n    }\n\n    const labelAnchorsPos = this.getLabelAnchorsPosition(klabel);\n\n    const anchors = this.getClosestPoints(connectorsPos, labelAnchorsPos);\n\n    const kconnect = group.getChildren(function (node) {\n      return node.name() === 'connector';\n    })[0];\n    if (!(kconnect instanceof Konva.Line)) {\n      return;\n    }\n\n    kconnect.points([\n      anchors[0].getX(),\n      anchors[0].getY(),\n      anchors[1].getX(),\n      anchors[1].getY()\n    ]);\n  }\n\n  /**\n   * Update the shape label.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Group} group The shape group.\n   */\n  updateContent(annotation, group) {\n    // associated label\n    const klabel = group.getChildren(function (node) {\n      return node.name() === 'label';\n    })[0];\n    if (!(klabel instanceof Konva.Label)) {\n      return;\n    }\n    // update text\n    const text = annotation.getText();\n    const ktext = klabel.getText();\n    ktext.setText(text);\n    // hide if visible and empty\n    if (klabel.visible()) {\n      klabel.visible(text.length !== 0);\n    }\n  }\n\n} // LabelFactory","import {getStats} from './stats';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Index} from './index';\nimport {Point2D} from '../math/point';\nimport {ViewController} from '../app/viewController';\nimport {Scalar2D} from './scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * Mulitply the three inputs if the last two are not null.\n *\n * @param {number} a The first input.\n * @param {number} b The second input.\n * @param {number} c The third input.\n * @returns {number} The multiplication of the three inputs or\n *  null if one of the last two is null.\n */\nfunction mulABC(a, b, c) {\n  let res = null;\n  if (b !== null && c !== null) {\n    res = a * b * c;\n  }\n  return res;\n}\n\n/**\n * Circle shape.\n */\nexport class Circle {\n\n  /**\n   * Circle centre.\n   *\n   * @type {Point2D}\n   */\n  #centre;\n\n  /**\n   * Circle radius.\n   *\n   * @type {number}\n   */\n  #radius;\n\n  /**\n   * @param {Point2D} centre A Point2D representing the centre\n   *   of the circle.\n   * @param {number} radius The radius of the circle.\n   */\n  constructor(centre, radius) {\n    this.#centre = centre;\n    this.#radius = radius;\n  }\n\n  /**\n   * Get the centre (point) of the circle.\n   *\n   * @returns {Point2D} The center (point) of the circle.\n   */\n  getCenter() {\n    return this.#centre;\n  }\n\n  /**\n   * Get the centroid of the circle.\n   *\n   * @returns {Point2D} The centroid point.\n   */\n  getCentroid() {\n    return this.#centre;\n  }\n\n  /**\n   * Get the radius of the circle.\n   *\n   * @returns {number} The radius of the circle.\n   */\n  getRadius() {\n    return this.#radius;\n  }\n\n\n  /**\n   * Check for equality.\n   *\n   * @param {Circle} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getCenter().equals(rhs.getCenter()) &&\n      this.getRadius() === rhs.getRadius();\n  }\n\n  /**\n   * Get the surface of the circle.\n   *\n   * @returns {number} The surface of the circle.\n   */\n  getSurface() {\n    return Math.PI * this.getRadius() * this.getRadius();\n  }\n\n  /**\n   * Get the surface of the circle according to a spacing.\n   *\n   * @param {Scalar2D} spacing2D The 2D spacing.\n   * @returns {number} The surface of the circle multiplied by the given\n   *  spacing or null for null spacings.\n   */\n  getWorldSurface(spacing2D) {\n    return mulABC(this.getSurface(), spacing2D.x, spacing2D.y);\n  }\n\n  /**\n   * Get the rounded limits of the circle.\n   *\n   * See: {@link https://en.wikipedia.org/wiki/Circle#Equations}.\n   *\n   * Circle formula: `x*x + y*y = r*r`.\n   *\n   * Implies: `y = (+-) sqrt(r*r - x*x)`.\n   *\n   * @returns {number[][][]} The rounded limits:\n   *  list of [x, y] pairs (min, max).\n   */\n  getRound() {\n    const centerX = this.getCenter().getX();\n    const centerY = this.getCenter().getY();\n    const radius = this.getRadius();\n    const rSquare = Math.pow(radius, 2);\n    // Y bounds\n    const minY = centerY - radius;\n    const maxY = centerY + radius;\n    const regions = [];\n    // loop through lines and store limits\n    for (let y = minY; y < maxY; ++y) {\n      const diff = rSquare - Math.pow(y - centerY, 2);\n      // remove small values (possibly negative)\n      if (Math.abs(diff) < 1e-7) {\n        continue;\n      }\n      const transX = Math.sqrt(diff);\n      // remove small values\n      if (transX < 0.5) {\n        continue;\n      }\n      regions.push([\n        [Math.round(centerX - transX), Math.round(y)],\n        [Math.round(centerX + transX), Math.round(y)]\n      ]);\n    }\n    return regions;\n  }\n\n  /**\n   * Quantify an circle according to view information.\n   *\n   * @param {ViewController} viewController The associated view controller.\n   * @param {Index} index The index at which to get the\n   *   image values.\n   * @param {string[]} flags A list of stat values to calculate.\n   * @returns {object} A quantification object.\n   */\n  quantify(viewController, index, flags) {\n    const quant = {};\n    // shape quantification\n    const spacing2D = viewController.get2DSpacing();\n    quant.radius = {\n      value: this.getRadius() * spacing2D.x,\n      unit: 'unit.mm'\n    };\n    const surface = this.getWorldSurface(spacing2D);\n    if (surface !== null) {\n      quant.surface = {\n        value: surface / 100,\n        unit: 'unit.cm2'\n      };\n    }\n\n    // pixel values quantification\n    if (viewController.canQuantifyImage()) {\n      const regions = this.getRound();\n      if (regions.length !== 0) {\n        const values = viewController.getImageVariableRegionValues(\n          regions, index);\n        const unit = viewController.getPixelUnit();\n        const quantif = getStats(values, flags);\n        quant.min = {value: quantif.min, unit: unit};\n        quant.max = {value: quantif.max, unit: unit};\n        quant.mean = {value: quantif.mean, unit: unit};\n        quant.stdDev = {value: quantif.stdDev, unit: unit};\n        if (typeof quantif.median !== 'undefined') {\n          quant.median = {value: quantif.median, unit: unit};\n        }\n        if (typeof quantif.p25 !== 'undefined') {\n          quant.p25 = {value: quantif.p25, unit: unit};\n        }\n        if (typeof quantif.p75 !== 'undefined') {\n          quant.p75 = {value: quantif.p75, unit: unit};\n        }\n      }\n    }\n\n    // return\n    return quant;\n  }\n\n} // Circle class\n","import {Line, getAngle} from './line';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D} from '../math/point';\nimport {ViewController} from '../app/viewController';\n/* eslint-enable no-unused-vars */\n\n/**\n * Protractor shape: 3 points from which to calculate an angle.\n */\nexport class Protractor {\n\n  /**\n   * List of points.\n   *\n   * @type {Point2D[]}\n   */\n  #points;\n\n  /**\n   * @param {Point2D[]} points The list of Point2D that make\n   *   the protractor.\n   */\n  constructor(points) {\n    if (points.length > 3) {\n      throw new Error('Too many points for a protractor');\n    }\n    this.#points = points.slice(0, 3);\n  }\n\n  /**\n   * Get a point of the list.\n   *\n   * @param {number} index The index of the point\n   *   to get (beware, no size check).\n   * @returns {Point2D|undefined} The Point2D at the given index.\n   */\n  getPoint(index) {\n    return this.#points[index];\n  }\n\n  /**\n   * Get the length of the path (should be 3).\n   *\n   * @returns {number} The length of the path.\n   */\n  getLength() {\n    return this.#points.length;\n  }\n\n  /**\n   * Get the centroid of the protractor.\n   *\n   * @returns {Point2D} THe centroid point.\n   */\n  getCentroid() {\n    return this.#points[1];\n  }\n\n  /**\n   * Quantify a path according to view information.\n   *\n   * @param {ViewController} _viewController The associated view controller.\n   * @param {string[]} _flags A list of stat values to calculate.\n   * @returns {object} A quantification object.\n   */\n  quantify(_viewController, _flags) {\n    const quant = {};\n    if (this.#points.length === 3) {\n      const line0 = new Line(this.#points[0], this.#points[1]);\n      const line1 = new Line(this.#points[1], this.#points[2]);\n      let angle = getAngle(line0, line1);\n      if (angle > 180) {\n        angle = 360 - angle;\n      }\n      quant.angle = {\n        value: angle,\n        unit: 'unit.degree'\n      };\n    }\n    return quant;\n  }\n\n} // Protractor class\n","import {Point2D} from './point';\nimport {getStats} from './stats';\nimport {Index} from './index';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ViewController} from '../app/viewController';\nimport {Scalar2D} from './scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * Mulitply the three inputs if the last two are not null.\n *\n * @param {number} a The first input.\n * @param {number} b The second input.\n * @param {number} c The third input.\n * @returns {number} The multiplication of the three inputs or\n *  null if one of the last two is null.\n */\nfunction mulABC(a, b, c) {\n  let res = null;\n  if (b !== null && c !== null) {\n    res = a * b * c;\n  }\n  return res;\n}\n\n/**\n * Rectangle shape.\n */\nexport class Rectangle {\n\n  /**\n   * Rectangle begin point.\n   *\n   * @type {Point2D}\n   */\n  #begin;\n\n  /**\n   * Rectangle end point.\n   *\n   * @type {Point2D}\n   */\n  #end;\n\n  /**\n   * @param {Point2D} begin A Point2D representing the beginning\n   *   of the rectangle.\n   * @param {Point2D} end A Point2D representing the end\n   *   of the rectangle.\n   */\n  constructor(begin, end) {\n    this.#begin = new Point2D(\n      Math.min(begin.getX(), end.getX()),\n      Math.min(begin.getY(), end.getY())\n    );\n    this.#end = new Point2D(\n      Math.max(begin.getX(), end.getX()),\n      Math.max(begin.getY(), end.getY())\n    );\n  }\n\n  /**\n   * Get the begin point of the rectangle.\n   *\n   * @returns {Point2D} The begin point of the rectangle.\n   */\n  getBegin() {\n    return this.#begin;\n  }\n\n  /**\n   * Get the end point of the rectangle.\n   *\n   * @returns {Point2D} The end point of the rectangle.\n   */\n  getEnd() {\n    return this.#end;\n  }\n\n  /**\n   * Check for equality.\n   *\n   * @param {Rectangle} rhs The object to compare to.\n   * @returns {boolean} True if both objects are equal.\n   */\n  equals(rhs) {\n    return rhs !== null &&\n      this.getBegin().equals(rhs.getBegin()) &&\n      this.getEnd().equals(rhs.getEnd());\n  }\n\n  /**\n   * Get the surface of the rectangle.\n   *\n   * @returns {number} The surface of the rectangle.\n   */\n  getSurface() {\n    const begin = this.getBegin();\n    const end = this.getEnd();\n    return Math.abs(end.getX() - begin.getX()) *\n      Math.abs(end.getY() - begin.getY());\n  }\n\n  /**\n   * Get the surface of the rectangle according to a spacing.\n   *\n   * @param {Scalar2D} spacing2D The 2D spacing.\n   * @returns {number} The surface of the rectangle multiplied by the given\n   *  spacing or null for null spacings.\n   */\n  getWorldSurface(spacing2D) {\n    return mulABC(this.getSurface(), spacing2D.x, spacing2D.y);\n  }\n\n  /**\n   * Get the real width of the rectangle.\n   *\n   * @returns {number} The real width of the rectangle.\n   */\n  getRealWidth() {\n    return this.getEnd().getX() - this.getBegin().getX();\n  }\n\n  /**\n   * Get the real height of the rectangle.\n   *\n   * @returns {number} The real height of the rectangle.\n   */\n  getRealHeight() {\n    return this.getEnd().getY() - this.getBegin().getY();\n  }\n\n  /**\n   * Get the width of the rectangle.\n   *\n   * @returns {number} The width of the rectangle.\n   */\n  getWidth() {\n    return Math.abs(this.getRealWidth());\n  }\n\n  /**\n   * Get the height of the rectangle.\n   *\n   * @returns {number} The height of the rectangle.\n   */\n  getHeight() {\n    return Math.abs(this.getRealHeight());\n  }\n\n  /**\n   * Get the rounded limits of the rectangle.\n   *\n   * @returns {object} The rounded limits as {min, max} (Point2D).\n   */\n  getRound() {\n    const roundBegin = new Point2D(\n      Math.round(this.getBegin().getX()),\n      Math.round(this.getBegin().getY())\n    );\n    const roundEnd = new Point2D(\n      Math.round(this.getEnd().getX()),\n      Math.round(this.getEnd().getY())\n    );\n    return {\n      min: roundBegin,\n      max: roundEnd\n    };\n  }\n\n  /**\n   * Get the centroid of the rectangle.\n   *\n   * @returns {Point2D} The centroid point.\n   */\n  getCentroid() {\n    return new Point2D(\n      this.getBegin().getX() + this.getWidth() / 2,\n      this.getBegin().getY() + this.getHeight() / 2\n    );\n  }\n\n  /**\n   * Quantify a rectangle according to view information.\n   *\n   * @param {ViewController} viewController The associated view controller.\n   * @param {Index} index The index at which to get the\n   *   image values.\n   * @param {string[]} flags A list of stat values to calculate.\n   * @returns {object} A quantification object.\n   */\n  quantify(viewController, index, flags) {\n    const quant = {};\n    // shape quantification\n    const spacing2D = viewController.get2DSpacing();\n    quant.width = {\n      value: this.getWidth() * spacing2D.x,\n      unit: 'unit.mm'\n    };\n    quant.height = {\n      value: this.getHeight() * spacing2D.y,\n      unit: 'unit.mm'\n    };\n    const surface = this.getWorldSurface(spacing2D);\n    if (surface !== null) {\n      quant.surface = {\n        value: surface / 100,\n        unit: 'unit.cm2'\n      };\n    }\n\n    // pixel values quantification\n    if (viewController.canQuantifyImage()) {\n      const round = this.getRound();\n      const values = viewController.getImageRegionValues(\n        round.min, round.max, index);\n      const unit = viewController.getPixelUnit();\n      const quantif = getStats(values, flags);\n      quant.min = {value: quantif.min, unit: unit};\n      quant.max = {value: quantif.max, unit: unit};\n      quant.mean = {value: quantif.mean, unit: unit};\n      quant.stdDev = {value: quantif.stdDev, unit: unit};\n      if (typeof quantif.median !== 'undefined') {\n        quant.median = {value: quantif.median, unit: unit};\n      }\n      if (typeof quantif.p25 !== 'undefined') {\n        quant.p25 = {value: quantif.p25, unit: unit};\n      }\n      if (typeof quantif.p75 !== 'undefined') {\n        quant.p75 = {value: quantif.p75, unit: unit};\n      }\n    }\n\n    // return\n    return quant;\n  }\n\n} // Rectangle class\n\n/**\n * Get the indices that form a rectangle.\n *\n * @param {Index} center The rectangle center.\n * @param {number[]} size The 2 rectangle sizes.\n * @param {number[]} dir The 2 rectangle directions.\n * @returns {Index[]} The indices of the rectangle.\n */\nexport function getRectangleIndices(center, size, dir) {\n  const centerValues = center.getValues();\n  // keep all values for possible extra dimensions\n  const values = centerValues.slice();\n  const indices = [];\n  const sizeI = size[0];\n  const halfSizeI = Math.floor(sizeI / 2);\n  const sizeJ = size[1];\n  const halfSizeJ = Math.floor(sizeJ / 2);\n  const di = dir[0];\n  const dj = dir[1];\n  for (let j = 0; j < sizeJ; ++j) {\n    values[dj] = centerValues[dj] - halfSizeJ + j;\n    for (let i = 0; i < sizeI; ++i) {\n      values[di] = centerValues[di] - halfSizeI + i;\n      indices.push(new Index(values.slice()));\n    }\n  }\n  return indices;\n}\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\n/* eslint-enable no-unused-vars */\n\n/**\n * Threshold an image between an input minimum and maximum.\n */\nexport class ThresholdFilter {\n  /**\n   * Threshold minimum.\n   *\n   * @type {number}\n   */\n  #min = 0;\n\n  /**\n   * Threshold maximum.\n   *\n   * @type {number}\n   */\n  #max = 0;\n\n  /**\n   * Get the threshold minimum.\n   *\n   * @returns {number} The threshold minimum.\n   */\n  getMin() {\n    return this.#min;\n  }\n\n  /**\n   * Set the threshold minimum.\n   *\n   * @param {number} val The threshold minimum.\n   */\n  setMin(val) {\n    this.#min = val;\n  }\n\n  /**\n   * Get the threshold maximum.\n   *\n   * @returns {number} The threshold maximum.\n   */\n  getMax() {\n    return this.#max;\n  }\n\n  /**\n   * Set the threshold maximum.\n   *\n   * @param {number} val The threshold maximum.\n   */\n  setMax(val) {\n    this.#max = val;\n  }\n\n  /**\n   * Get the name of the filter.\n   *\n   * @returns {string} The name of the filter.\n   */\n  getName() {\n    return 'Threshold';\n  }\n\n  /**\n   * Original image.\n   *\n   * @type {Image}\n   */\n  #originalImage = null;\n\n  /**\n   * Set the original image.\n   *\n   * @param {Image} image The original image.\n   */\n  setOriginalImage(image) {\n    this.#originalImage = image;\n  }\n\n  /**\n   * Get the original image.\n   *\n   * @returns {Image} The original image.\n   */\n  getOriginalImage() {\n    return this.#originalImage;\n  }\n\n  /**\n   * Transform the main image using this filter.\n   *\n   * @returns {Image} The transformed image.\n   */\n  update() {\n    const image = this.getOriginalImage();\n    const imageMin = image.getDataRange().min;\n    const threshFunction = (value) => {\n      if (value < this.getMin() || value > this.getMax()) {\n        return imageMin;\n      } else {\n        return value;\n      }\n    };\n    return image.transform(threshFunction);\n  }\n\n} // class Threshold\n\n/**\n * Sharpen an image using a sharpen convolution matrix.\n */\nexport class SharpenFilter {\n  /**\n   * Get the name of the filter.\n   *\n   * @returns {string} The name of the filter.\n   */\n  getName() {\n    return 'Sharpen';\n  }\n\n  /**\n   * Original image.\n   *\n   * @type {Image}\n   */\n  #originalImage = null;\n\n  /**\n   * Set the original image.\n   *\n   * @param {Image} image The original image.\n   */\n  setOriginalImage(image) {\n    this.#originalImage = image;\n  }\n\n  /**\n   * Get the original image.\n   *\n   * @returns {Image} The original image.\n   */\n  getOriginalImage() {\n    return this.#originalImage;\n  }\n\n  /**\n   * Transform the main image using this filter.\n   *\n   * @returns {Image} The transformed image.\n   */\n  update() {\n    const image = this.getOriginalImage();\n    /* eslint-disable @stylistic/js/array-element-newline */\n    return image.convolute2D([\n      0, -1, 0,\n      -1, 5, -1,\n      0, -1, 0\n    ]);\n    /* eslint-enable @stylistic/js/array-element-newline */\n  }\n\n} // class Sharpen\n\n/**\n * Apply a Sobel filter to an image.\n */\nexport class SobelFilter {\n  /**\n   * Get the name of the filter.\n   *\n   * @returns {string} The name of the filter.\n   */\n  getName() {\n    return 'Sobel';\n  }\n\n  /**\n   * Original image.\n   *\n   * @type {Image}\n   */\n  #originalImage = null;\n\n  /**\n   * Set the original image.\n   *\n   * @param {Image} image The original image.\n   */\n  setOriginalImage(image) {\n    this.#originalImage = image;\n  }\n\n  /**\n   * Get the original image.\n   *\n   * @returns {Image} The original image.\n   */\n  getOriginalImage() {\n    return this.#originalImage;\n  }\n\n  /**\n   * Transform the main image using this filter.\n   *\n   * @returns {Image} The transformed image.\n   */\n  update() {\n    const image = this.getOriginalImage();\n    /* eslint-disable @stylistic/js/array-element-newline */\n    const gradX = image.convolute2D([\n      1, 0, -1,\n      2, 0, -2,\n      1, 0, -1\n    ]);\n    const gradY = image.convolute2D([\n      1, 2, 1,\n      0, 0, 0,\n      -1, -2, -1\n    ]);\n    /* eslint-enable @stylistic/js/array-element-newline */\n    return gradX.compose(gradY, function (x, y) {\n      return Math.sqrt(x * x + y * y);\n    });\n  }\n\n} // class Sobel\n","import {ListenerHandler} from '../utils/listen';\nimport {\n  ThresholdFilter,\n  SobelFilter,\n  SharpenFilter\n} from '../image/filter';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * Filter tool.\n */\nexport class Filter {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Filter list.\n   *\n   * @type {object}\n   */\n  #filterList = null;\n\n  /**\n   * Selected filter.\n   *\n   * @type {object}\n   */\n  #selectedFilter = 0;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} bool Flag to activate or not.\n   */\n  activate(bool) {\n    // setup event listening\n    for (const key in this.#filterList) {\n      if (bool) {\n        this.#filterList[key].addEventListener('filterrun', this.#fireEvent);\n        this.#filterList[key].addEventListener('filterundo', this.#fireEvent);\n      } else {\n        this.#filterList[key].removeEventListener(\n          'filterrun', this.#fireEvent);\n        this.#filterList[key].removeEventListener(\n          'filterundo', this.#fireEvent);\n      }\n    }\n  }\n\n  /**\n   * Set the tool options.\n   *\n   * @param {object} options The list of filter names amd classes.\n   */\n  setOptions(options) {\n    this.#filterList = {};\n    // try to instanciate filters from the options\n    for (const key in options) {\n      this.#filterList[key] = new options[key](this.#app);\n    }\n  }\n\n  /**\n   * Get the type of tool options: here 'instance' since the filter\n   * list contains instances of each possible filter.\n   *\n   * @returns {string} The type.\n   */\n  getOptionsType() {\n    return 'instance';\n  }\n\n  /**\n   * Initialise the filter. Called once the image is loaded.\n   */\n  init() {\n    // setup event listening\n    for (const key in this.#filterList) {\n      this.#filterList[key].init();\n    }\n  }\n\n  /**\n   * Handle keydown event.\n   *\n   * @param {object} event The keydown event.\n   */\n  keydown = (event) => {\n    event.context = 'Filter';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Get the list of event names that this tool can fire.\n   *\n   * @returns {string[]} The list of event names.\n   */\n  getEventNames() {\n    return ['filterrun', 'filterundo'];\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Get the selected filter.\n   *\n   * @returns {object} The selected filter.\n   */\n  getSelectedFilter() {\n    return this.#selectedFilter;\n  }\n\n  /**\n   * Set the tool live features: filter name.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.filterName !== 'undefined') {\n      // check if we have it\n      if (!this.hasFilter(features.filterName)) {\n        throw new Error('Unknown filter: \\'' + features.filterName + '\\'');\n      }\n      // de-activate last selected\n      if (this.#selectedFilter) {\n        this.#selectedFilter.activate(false);\n      }\n      // enable new one\n      this.#selectedFilter = this.#filterList[features.filterName];\n      // activate the selected filter\n      this.#selectedFilter.activate(true);\n    }\n    if (typeof features.run !== 'undefined' && features.run) {\n      let args = {};\n      if (typeof features.runArgs !== 'undefined') {\n        args = features.runArgs;\n      }\n      this.getSelectedFilter().run(args);\n    }\n  }\n\n  /**\n   * Get the list of filters.\n   *\n   * @returns {Array} The list of filter objects.\n   */\n  getFilterList() {\n    return this.#filterList;\n  }\n\n  /**\n   * Check if a filter is in the filter list.\n   *\n   * @param {string} name The name to check.\n   * @returns {string} The filter list element for the given name.\n   */\n  hasFilter(name) {\n    return this.#filterList[name];\n  }\n\n} // class Filter\n\n/**\n * Threshold filter tool.\n */\nexport class Threshold {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Associated filter.\n   *\n   * @type {object}\n   */\n  #filter = new ThresholdFilter();\n\n  /**\n   * Flag to know wether to reset the image or not.\n   *\n   * @type {boolean}\n   */\n  #resetImage = true;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Activate the filter.\n   *\n   * @param {boolean} bool Flag to activate or not.\n   */\n  activate(bool) {\n    // reset the image when the tool is activated\n    if (bool) {\n      this.#resetImage = true;\n    }\n  }\n\n  /**\n   * Initialise the filter. Called once the image is loaded.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Run the filter.\n   *\n   * @param {*} args The filter arguments.\n   */\n  run(args) {\n    if (typeof args.dataId === 'undefined') {\n      throw new Error('No dataId to run threshod filter on.');\n    }\n    this.#filter.setMin(args.min);\n    this.#filter.setMax(args.max);\n    // reset the image if asked\n    if (this.#resetImage) {\n      const image = this.#app.getData(args.dataId).image;\n      this.#filter.setOriginalImage(image);\n      this.#resetImage = false;\n    }\n    const command = new RunFilterCommand(this.#filter, args.dataId, this.#app);\n    command.onExecute = this.#fireEvent;\n    command.onUndo = this.#fireEvent;\n    command.execute();\n    // save command in undo stack\n    this.#app.addToUndoStack(command);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *  event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // class Threshold\n\n/**\n * Sharpen filter tool.\n */\nexport class Sharpen {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Activate the filter.\n   *\n   * @param {boolean} _bool Flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the filter. Called once the image is loaded.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Run the filter.\n   *\n   * @param {*} args The filter arguments.\n   */\n  run(args) {\n    if (typeof args.dataId === 'undefined') {\n      throw new Error('No dataId to run sharpen filter on.');\n    }\n    const filter = new SharpenFilter();\n    const image = this.#app.getData(args.dataId).image;\n    filter.setOriginalImage(image);\n    const command = new RunFilterCommand(filter, args.dataId, this.#app);\n    command.onExecute = this.#fireEvent;\n    command.onUndo = this.#fireEvent;\n    command.execute();\n    // save command in undo stack\n    this.#app.addToUndoStack(command);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *    event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // filter.Sharpen\n\n/**\n * Sobel filter tool.\n */\nexport class Sobel {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Activate the filter.\n   *\n   * @param {boolean} _bool Flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the filter. Called once the image is loaded.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Run the filter.\n   *\n   * @param {*} args The filter arguments.\n   */\n  run(args) {\n    if (typeof args.dataId === 'undefined') {\n      throw new Error('No dataId to run sobel filter on.');\n    }\n    const filter = new SobelFilter();\n    const image = this.#app.getData(args.dataId).image;\n    filter.setOriginalImage(image);\n    const command = new RunFilterCommand(filter, args.dataId, this.#app);\n    command.onExecute = this.#fireEvent;\n    command.onUndo = this.#fireEvent;\n    command.execute();\n    // save command in undo stack\n    this.#app.addToUndoStack(command);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *  event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // class filter.Sobel\n\n/**\n * Run filter command.\n */\nexport class RunFilterCommand {\n\n  /**\n   * The filter to run.\n   *\n   * @type {object}\n   */\n  #filter;\n\n  /**\n   * Data id.\n   *\n   * @type {string}\n   */\n  #dataId;\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {object} filter The filter to run.\n   * @param {string} dataId The data to filter.\n   * @param {App} app The associated application.\n   */\n  constructor(filter, dataId, app) {\n    this.#filter = filter;\n    this.#dataId = dataId;\n    this.#app = app;\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Filter-' + this.#filter.getName();\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires RunFilterCommand#filterrun\n   */\n  execute() {\n    // run filter and set app image\n    this.#app.setImage(this.#dataId, this.#filter.update());\n    // update display\n    this.#app.render(this.#dataId);\n    /**\n     * Filter run event.\n     *\n     * @event RunFilterCommand#filterrun\n     * @type {object}\n     * @property {string} type The event type: filterrun.\n     * @property {number} id The id of the run command.\n     */\n    const event = {\n      type: 'filterrun',\n      id: this.getName(),\n      dataId: this.#dataId\n    };\n    // callback\n    this.onExecute(event);\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires RunFilterCommand#filterundo\n   */\n  undo() {\n    // reset the image\n    this.#app.setImage(this.#dataId, this.#filter.getOriginalImage());\n    // update display\n    this.#app.render(this.#dataId);\n    /**\n     * Filter undo event.\n     *\n     * @event RunFilterCommand#filterundo\n     * @type {object}\n     * @property {string} type The event type: filterundo.\n     * @property {number} id The id of the undone run command.\n     */\n    const event = {\n      type: 'filterundo',\n      id: this.getName(),\n      dataid: this.#dataId\n    }; // callback\n    this.onUndo(event);\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // RunFilterCommand class\n","import {WindowLevel} from './windowLevel';\nimport {Scroll} from './scroll';\nimport {ZoomAndPan} from './zoomPan';\nimport {Opacity} from './opacity';\nimport {Draw} from './draw';\nimport {Brush} from './brush';\nimport {Floodfill} from './floodfill';\nimport {Livewire} from './livewire';\n\nimport {ArrowFactory} from './arrow';\nimport {CircleFactory} from './circle';\nimport {EllipseFactory} from './ellipse';\nimport {ProtractorFactory} from './protractor';\nimport {RectangleFactory} from './rectangle';\nimport {RoiFactory} from './roi';\nimport {RulerFactory} from './ruler';\n\nimport {Filter, Threshold, Sobel, Sharpen} from './filter';\n\n/**\n * List of client provided tools to be added to\n * the default ones.\n *\n * @example\n * // custom tool\n * class AlertTool {\n *   mousedown() {alert('AlertTool mousedown');}\n *   init() {}\n *   activate() {}\n * }\n * // pass it to dwv tool list\n * dwv.toolList['Alert'] = AlertTool;\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n * const viewConfigs = {'*': [viewConfig0]};\n * const options = new dwv.AppOptions(viewConfigs);\n * options.tools = {Alert: {}};\n * app.init(options);\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('Alert');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n *\n * @type {Object<string, any>}\n */\nexport const toolList = {};\n\n/**\n * List of client provided tool options to be added to\n * the default ones.\n *\n * @example\n * // custom factory\n * class LoveFactory {\n *   getName() {return 'love';}\n *   static supports(mathShape) {return mathShape instanceof ROI;}\n *   getNPoints() {return 1;}\n *   getTimeout() {return 0;}\n *   setAnnotationMathShape(annotation, points) {\n *     const px = points[0].getX();\n *     const py = points[0].getY();\n *     annotation.mathShape = new dwv.ROI([\n *       new dwv.Point2D(px+15,py), new dwv.Point2D(px+10,py-10),\n *       new dwv.Point2D(px,py), new dwv.Point2D(px-10,py-10),\n *       new dwv.Point2D(px-15,py), new dwv.Point2D(px,py+20)\n *     ]);\n *     annotation.getFactory = function () {return new LoveFactory();}\n *   }\n *   createShapeGroup(annotation, style) {\n *     const roi = annotation.mathShape;\n *     // konva line\n *     const arr = [];\n *     for (let i = 0; i < roi.getLength(); ++i) {\n *       arr.push(roi.getPoint(i).getX());\n *       arr.push(roi.getPoint(i).getY());\n *     }\n *     const shape = new Konva.Line({\n *       name: 'shape', points: arr,\n *       stroke: 'red', strokeWidth: 2,\n *       closed: true\n *     });\n *     // konva group\n *     const group = new Konva.Group();\n *     group.name('love-group');\n *     group.visible(true);\n *     group.id(annotation.id);\n *     group.add(shape);\n *     return group;\n *   }\n * }\n * // pass it to dwv option list\n * dwv.toolOptions['draw'] = {LoveFactory};\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n * const viewConfigs = {'*': [viewConfig0]};\n * const options = new dwv.AppOptions(viewConfigs);\n * options.tools = {Draw: {options: ['Love']}};\n * app.init(options);\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('Draw');\n *   app.setToolFeatures({shapeName: 'Love'});\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n *\n * @type {Object<string, Object<string, any>>}\n */\nexport const toolOptions = {};\n\n/**\n * Default tool list.\n *\n * @type {Object<string, any>}\n */\nexport const defaultToolList = {\n  WindowLevel,\n  Scroll,\n  ZoomAndPan,\n  Opacity,\n  Draw,\n  Brush,\n  Filter,\n  Floodfill,\n  Livewire\n};\n\n/**\n * Default tool options.\n *\n * @type {Object<string, Object<string, any>>}\n */\nexport const defaultToolOptions = {\n  draw: {\n    ArrowFactory,\n    CircleFactory,\n    EllipseFactory,\n    ProtractorFactory,\n    RectangleFactory,\n    RoiFactory,\n    RulerFactory\n  },\n  filter: {\n    Threshold,\n    Sobel,\n    Sharpen\n  }\n};","import {ScrollWheel} from './scrollWheel';\nimport {\n  getMousePoint,\n  getTouchPoints\n} from '../gui/generic';\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {\n  validateWindowWidth,\n  WindowLevel as WindowLevelValues\n} from '../image/windowLevel';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\nimport {Point2D} from '../math/point';\n/* eslint-enable no-unused-vars */\n\n/**\n * WindowLevel tool: handle window/level related events.\n *\n * @example\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n * const viewConfigs = {'*': [viewConfig0]};\n * const options = new dwv.AppOptions(viewConfigs);\n * options.tools = {WindowLevel: new dwv.ToolConfig()};\n * app.init(options);\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('WindowLevel');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n */\nexport class WindowLevel {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Start point.\n   *\n   * @type {Point2D}\n   */\n  #startPoint;\n\n  /**\n   * Scroll wheel handler.\n   *\n   * @type {ScrollWheel}\n   */\n  #scrollWhell;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n    this.#scrollWhell = new ScrollWheel(app);\n  }\n\n  /**\n   * Start tool interaction.\n   *\n   * @param {Point2D} point The start point.\n   * @param {string} divId The layer group divId.\n   */\n  #start(point, divId) {\n    // check if possible\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    if (typeof viewLayer === 'undefined') {\n      return;\n    }\n    const viewController = viewLayer.getViewController();\n    if (!viewController.isMonochrome()) {\n      return;\n    }\n\n    this.#started = true;\n    this.#startPoint = point;\n  }\n\n  /**\n   * Update tool interaction.\n   *\n   * @param {Point2D} point The update point.\n   * @param {string} divId The layer group divId.\n   */\n  #update(point, divId) {\n    // check start flag\n    if (!this.#started) {\n      return;\n    }\n\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    if (typeof viewLayer === 'undefined') {\n      return;\n    }\n    const viewController = viewLayer.getViewController();\n\n    // difference to last position\n    const diffX = point.getX() - this.#startPoint.getX();\n    const diffY = this.#startPoint.getY() - point.getY();\n    // data range\n    const range = viewController.getImageRescaledDataRange();\n    // 1/1000 seems to give reasonable results...\n    const pixelToIntensity = (range.max - range.min) * 0.01;\n\n    // calculate new window level\n    const center = viewController.getWindowLevel().center;\n    const width = viewController.getWindowLevel().width;\n    const windowCenter = center + Math.round(diffY * pixelToIntensity);\n    let windowWidth = width + Math.round(diffX * pixelToIntensity);\n    // bound window width\n    windowWidth = validateWindowWidth(windowWidth);\n    // set\n    const wl = new WindowLevelValues(windowCenter, windowWidth);\n    viewController.setWindowLevel(wl);\n\n    // store position\n    this.#startPoint = point;\n  }\n\n  /**\n   * Finish tool interaction.\n   */\n  #finish() {\n    if (this.#started) {\n      this.#started = false;\n    }\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#start(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#update(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    this.#finish();\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} _event The mouse out event.\n   */\n  mouseout = (_event) => {\n    this.#finish();\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#start(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#update(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} _event The touch end event.\n   */\n  touchend = (_event) => {\n    this.#finish();\n  };\n\n  /**\n   * Handle double click event.\n   *\n   * @param {object} event The double click event.\n   */\n  dblclick = (event) => {\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const mousePoint = getMousePoint(event);\n\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    if (typeof viewLayer === 'undefined') {\n      return;\n    }\n    const index = viewLayer.displayToPlaneIndex(mousePoint);\n    const viewController = viewLayer.getViewController();\n    // exit if not possible\n    if (!viewController.isMonochrome()) {\n      return;\n    }\n\n    // update view controller\n    const image = this.#app.getData(viewLayer.getDataId()).image;\n    const wl = new WindowLevelValues(\n      image.getRescaledValueAtIndex(\n        viewController.getCurrentIndex().getWithNew2D(\n          index.get(0),\n          index.get(1)\n        )\n      ),\n      viewController.getWindowLevel().width\n    );\n    viewController.setWindowLevel(wl);\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {WheelEvent} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    this.#scrollWhell.wheel(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'WindowLevel';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} _bool The flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Set the tool live features: does nothing.\n   *\n   * @param {object} _features The list of features.\n   */\n  setFeatures(_features) {\n    // does nothing\n  }\n\n} // WindowLevel class\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {\n  getMousePoint,\n  getTouchPoints\n} from '../gui/generic';\nimport {ScrollWheel} from './scrollWheel';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\nimport {Point2D} from '../math/point';\nimport {LayerGroup} from '../gui/layerGroup';\nimport {ViewLayer} from '../gui/viewLayer';\n/* eslint-enable no-unused-vars */\n\n/**\n * Scroll class.\n *\n * @example\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n * const viewConfigs = {'*': [viewConfig0]};\n * const options = new dwv.AppOptions(viewConfigs);\n * options.tools = {Scroll: new dwv.ToolConfig()};\n * app.init(options);\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('Scroll');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm',\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323707.dcm',\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323563.dcm'\n * ]);\n * @example <caption>Example with slider</caption>\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n * const viewConfigs = {'*': [viewConfig0]};\n * const options = new dwv.AppOptions(viewConfigs);\n * options.tools = {Scroll: new dwv.ToolConfig()};\n * app.init(options);\n * // create range\n * const range = document.createElement('input');\n * range.type = 'range';\n * range.min = 0;\n * range.id = 'sliceRange';\n * document.body.appendChild(range);\n * // update app on slider change\n * range.oninput = function () {\n *   const lg = app.getLayerGroupByDivId('layerGroup0');\n *   const vl = lg.getBaseViewLayer();\n *   const vc = vl.getViewController();\n *   const index = vc.getCurrentIndex();\n *   const values = index.getValues();\n *   values[2] = this.value;\n *   vc.setCurrentIndex(new dwv.Index(values));\n * }\n * // activate tool and update range max on load\n * app.addEventListener('load', function () {\n *   app.setTool('Scroll');\n *   const size = app.getData(0).image.getGeometry().getSize();\n *   range.max = size.get(2) - 1;\n * });\n * // update slider on slice change (for ex via mouse wheel)\n * app.addEventListener('positionchange', function () {\n *   const lg = app.getLayerGroupByDivId('layerGroup0');\n *   const vl = lg.getBaseViewLayer();\n *   const vc = vl.getViewController();\n *   range.value = vc.getCurrentIndex().get(2);\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm',\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323707.dcm',\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323563.dcm'\n * ]);\n */\nexport class Scroll {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Start point.\n   *\n   * @type {Point2D}\n   */\n  #startPoint;\n\n  /**\n   * Scroll wheel handler.\n   *\n   * @type {ScrollWheel}\n   */\n  #scrollWhell;\n\n  /**\n   * Touch timer ID (created by setTimeout).\n   *\n   * @type {number}\n   */\n  #touchTimerID;\n\n  /**\n   * Option to show or not a value tooltip on mousemove.\n   *\n   * @type {boolean}\n   */\n  #displayTooltip = false;\n\n  /**\n   * Current layer group div id.\n   *\n   * @type {string}\n   */\n  #currentDivId;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n    this.#scrollWhell = new ScrollWheel(app);\n  }\n\n  /**\n   * Get the associated view layer.\n   *\n   * @param {LayerGroup} layerGroup The layer group to search.\n   * @returns {ViewLayer|undefined} The view layer.\n   */\n  #getViewLayer(layerGroup) {\n    let viewLayer = layerGroup.getActiveViewLayer();\n    if (typeof viewLayer === 'undefined') {\n      const drawLayer = layerGroup.getActiveDrawLayer();\n      if (typeof drawLayer === 'undefined') {\n        logger.warn('No draw layer to do scroll');\n        return;\n      }\n      viewLayer = layerGroup.getViewLayerById(\n        drawLayer.getReferenceLayerId());\n    }\n    return viewLayer;\n  }\n\n  /**\n   * Start tool interaction.\n   *\n   * @param {Point2D} point The start point.\n   * @param {string} divId The layer group divId.\n   */\n  #start(point, divId) {\n    // optional tooltip\n    this.#removeTooltipDiv();\n\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    const viewLayer = this.#getViewLayer(layerGroup);\n    if (typeof viewLayer === 'undefined') {\n      logger.warn('No view layer to start scroll');\n      return;\n    }\n\n    const viewController = viewLayer.getViewController();\n\n    // stop auto scroll if playing\n    if (viewController.isPlaying()) {\n      viewController.stop();\n    }\n    // update base controller position\n    const planePos = viewLayer.displayToPlanePos(point);\n    const position = viewController.getPositionFromPlanePoint(planePos);\n    viewController.setCurrentPosition(position);\n\n    // start flag\n    this.#started = true;\n    this.#startPoint = point;\n\n  }\n\n  /**\n   * Update tool interaction.\n   *\n   * @param {Point2D} point The update point.\n   * @param {string} divId The layer group divId.\n   */\n  #update(point, divId) {\n    if (!this.#started) {\n      // optional tooltip\n      if (this.#displayTooltip) {\n        this.#showTooltip(point, divId);\n      }\n      return;\n    }\n\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    const positionHelper = layerGroup.getPositionHelper();\n\n    // difference to last Y position\n    const diffY = point.getY() - this.#startPoint.getY();\n    const yMove = (Math.abs(diffY) > 15);\n    // difference to last X position\n    const diffX = point.getX() - this.#startPoint.getX();\n    const xMove = (Math.abs(diffX) > 15);\n\n    // do not trigger for small moves\n    if (yMove && layerGroup.canScroll()) {\n      // update view controller\n      if (diffY > 0) {\n        positionHelper.decrementPositionAlongScroll();\n      } else {\n        positionHelper.incrementPositionAlongScroll();\n      }\n    } else if (xMove && layerGroup.moreThanOne(3)) {\n      // update view controller\n      if (diffX > 0) {\n        positionHelper.incrementPosition(3);\n      } else {\n        positionHelper.decrementPosition(3);\n      }\n    }\n\n    // reset origin point\n    if (xMove || yMove) {\n      this.#startPoint = point;\n    }\n  }\n\n  /**\n   * Finish tool interaction.\n   */\n  #finish() {\n    if (this.#started) {\n      this.#started = false;\n    }\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#start(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#update(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    this.#finish();\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} _event The mouse out event.\n   */\n  mouseout = (_event) => {\n    this.#finish();\n    // remove possible tooltip div\n    this.#removeTooltipDiv();\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    // long touch triggers the dblclick\n    // @ts-ignore\n    this.#touchTimerID = setTimeout(() => {\n      this.dblclick(event);\n    }, 500);\n    // call start\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#start(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    // abort timer if move\n    if (this.#touchTimerID !== null) {\n      clearTimeout(this.#touchTimerID);\n      this.#touchTimerID = null;\n    }\n    // call update\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#update(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} _event The touch end event.\n   */\n  touchend = (_event) => {\n    // abort timer\n    if (this.#touchTimerID !== null) {\n      clearTimeout(this.#touchTimerID);\n      this.#touchTimerID = null;\n    }\n    // call mouse equivalent\n    this.#finish();\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {WheelEvent} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    this.#scrollWhell.wheel(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'Scroll';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Handle double click.\n   *\n   * @param {object} event The key down event.\n   */\n  dblclick = (event) => {\n    const layerDetails = getLayerDetailsFromEvent(event);\n\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = layerGroup.getActiveViewLayer();\n    if (typeof viewLayer !== 'undefined') {\n      const viewController = viewLayer.getViewController();\n      viewController.play();\n    }\n  };\n\n  /**\n   * Display a tooltip at the given point.\n   *\n   * @param {Point2D} point The update point.\n   * @param {string} divId The layer group divId.\n   */\n  #showTooltip(point, divId) {\n    // get layer group\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    this.#currentDivId = divId;\n    // show new tooltip\n    layerGroup.showTooltip(point);\n  }\n\n  /**\n   * Remove the last tooltip html div.\n   */\n  #removeTooltipDiv() {\n    if (typeof this.#currentDivId !== 'undefined') {\n      const layerGroup = this.#app.getLayerGroupByDivId(this.#currentDivId);\n      layerGroup.removeTooltipDiv();\n      this.#currentDivId = undefined;\n    }\n  }\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} _bool The flag to activate or not.\n   */\n  activate(_bool) {\n    // remove tooltip html when deactivating\n    if (!_bool) {\n      this.#removeTooltipDiv();\n    }\n  }\n\n  /**\n   * Set the tool live features: disaply tooltip.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.displayTooltip !== 'undefined') {\n      this.#displayTooltip = features.displayTooltip;\n    }\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n} // Scroll class\n","import {Point2D} from '../math/point';\nimport {Line} from '../math/line';\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {\n  getMousePoint,\n  getTouchPoints\n} from '../gui/generic';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\nimport {LayerGroup} from '../gui/layerGroup';\nimport {ViewLayer} from '../gui/viewLayer';\n/* eslint-enable no-unused-vars */\n\n/**\n * ZoomAndPan class.\n *\n * @example\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n * const viewConfigs = {'*': [viewConfig0]};\n * const options = new dwv.AppOptions(viewConfigs);\n * options.tools = {ZoomAndPan: new dwv.ToolConfig()};\n * app.init(options);\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('ZoomAndPan');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n */\nexport class ZoomAndPan {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Start point.\n   *\n   * @type {Point2D}\n   */\n  #startPoint;\n\n  /**\n   * Move flag: true if mouse or touch move.\n   *\n   * @type {boolean}\n   */\n  #hasMoved;\n\n  /**\n   * Line between input points.\n   *\n   * @type {Line}\n   */\n  #pointsLine;\n\n  /**\n   * PointsLine midpoint.\n   *\n   * @type {Point2D}\n   */\n  #midPoint;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Get the associated view layer.\n   *\n   * @param {LayerGroup} layerGroup The layer group to search.\n   * @returns {ViewLayer|undefined} The view layer.\n   */\n  #getViewLayer(layerGroup) {\n    let viewLayer = layerGroup.getActiveViewLayer();\n    if (typeof viewLayer === 'undefined') {\n      const drawLayer = layerGroup.getActiveDrawLayer();\n      if (typeof drawLayer === 'undefined') {\n        logger.warn('No draw layer to do zoom/pan');\n        return;\n      }\n      viewLayer = layerGroup.getViewLayerById(\n        drawLayer.getReferenceLayerId());\n    }\n    return viewLayer;\n  }\n\n  /**\n   * Start tool interaction.\n   *\n   * @param {Point2D} point The start point.\n   */\n  #start(point) {\n    this.#started = true;\n    this.#startPoint = point;\n    this.#hasMoved = false;\n  }\n\n  /**\n   * Two touch start.\n   *\n   * @param {Point2D[]} points The start points.\n   */\n  #twoTouchStart = (points) => {\n    this.#started = true;\n    this.#startPoint = points[0];\n    this.#hasMoved = false;\n    // points line\n    this.#pointsLine = new Line(points[0], points[1]);\n    this.#midPoint = this.#pointsLine.getMidpoint();\n  };\n\n  /**\n   * Update tool interaction.\n   *\n   * @param {Point2D} point The update point.\n   * @param {string} divId The layer group divId.\n   */\n  #update(point, divId) {\n    if (!this.#started) {\n      return;\n    }\n    this.#hasMoved = true;\n\n    // calculate translation\n    const tx = point.getX() - this.#startPoint.getX();\n    const ty = point.getY() - this.#startPoint.getY();\n    // apply translation\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    const viewLayer = this.#getViewLayer(layerGroup);\n    if (typeof viewLayer === 'undefined') {\n      logger.warn('No view layer to update zoom/pan');\n      return;\n    }\n    const viewController = viewLayer.getViewController();\n    const planeOffset = viewLayer.displayToPlaneScale(\n      new Point2D(tx, ty)\n    );\n    const offset3D = viewController.getOffset3DFromPlaneOffset({\n      x: planeOffset.getX(),\n      y: planeOffset.getY()\n    });\n    layerGroup.addTranslation({\n      x: offset3D.getX(),\n      y: offset3D.getY(),\n      z: offset3D.getZ()\n    });\n    layerGroup.draw();\n    // reset origin point\n    this.#startPoint = point;\n  }\n\n  /**\n   * Two touch update.\n   *\n   * @param {Point2D[]} points The update points.\n   * @param {string} divId The layer group divId.\n   */\n  #twoTouchUpdate = (points, divId) => {\n    if (!this.#started) {\n      return;\n    }\n    this.#hasMoved = true;\n\n    const newLine = new Line(points[0], points[1]);\n    const lineRatio = newLine.getLength() / this.#pointsLine.getLength();\n\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    const positionHelper = layerGroup.getPositionHelper();\n\n    if (lineRatio === 1) {\n      // scroll mode\n      // difference  to last position\n      const diffY = points[0].getY() - this.#startPoint.getY();\n      // do not trigger for small moves\n      if (Math.abs(diffY) < 15) {\n        return;\n      }\n      // update view controller\n      if (layerGroup.canScroll()) {\n        if (diffY > 0) {\n          positionHelper.incrementPositionAlongScroll();\n        } else {\n          positionHelper.decrementPositionAlongScroll();\n        }\n      }\n    } else {\n      // zoom mode\n      const zoom = (lineRatio - 1) / 10;\n      if (Math.abs(zoom) % 0.1 <= 0.05 &&\n        typeof this.#midPoint !== 'undefined') {\n        const viewLayer = this.#getViewLayer(layerGroup);\n        if (typeof viewLayer === 'undefined') {\n          logger.warn('No view layer to do touch zoom/pan');\n          return;\n        }\n        const viewController = viewLayer.getViewController();\n        const planePos = viewLayer.displayToMainPlanePos(this.#midPoint);\n        const center = viewController.getPlanePositionFromPlanePoint(planePos);\n        layerGroup.addScale(zoom, center);\n        layerGroup.draw();\n      }\n    }\n  };\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point2D} point The update point.\n   * @param {string} divId The layer group divId.\n   */\n  #setCurrentPosition(point, divId) {\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    const viewLayer = this.#getViewLayer(layerGroup);\n    if (typeof viewLayer === 'undefined') {\n      logger.warn('No view layer to set current position');\n      return;\n    }\n    const viewController = viewLayer.getViewController();\n    const planePos = viewLayer.displayToPlanePos(point);\n    const position = viewController.getPositionFromPlanePoint(planePos);\n    viewController.setCurrentPosition(position);\n  }\n\n  /**\n   * Finish tool interaction.\n   */\n  #finish() {\n    if (this.#started) {\n      this.#started = false;\n    }\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    const mousePoint = getMousePoint(event);\n    this.#start(mousePoint);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#update(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} event The mouse up event.\n   */\n  mouseup = (event) => {\n    // update position if no move\n    if (!this.#hasMoved) {\n      const mousePoint = getMousePoint(event);\n      const layerDetails = getLayerDetailsFromEvent(event);\n      this.#setCurrentPosition(mousePoint, layerDetails.groupDivId);\n    }\n    this.#finish();\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} _event The mouse out event.\n   */\n  mouseout = (_event) => {\n    this.#finish();\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    const touchPoints = getTouchPoints(event);\n    if (touchPoints.length === 1) {\n      this.#start(touchPoints[0]);\n    } else if (touchPoints.length === 2) {\n      this.#twoTouchStart(touchPoints);\n    }\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    if (touchPoints.length === 1) {\n      this.#update(touchPoints[0], layerDetails.groupDivId);\n    } else if (touchPoints.length === 2) {\n      this.#twoTouchUpdate(touchPoints, layerDetails.groupDivId);\n    }\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    // update position if no move\n    if (!this.#hasMoved) {\n      const mousePoint = getMousePoint(event);\n      const layerDetails = getLayerDetailsFromEvent(event);\n      this.#setCurrentPosition(mousePoint, layerDetails.groupDivId);\n    }\n    this.#finish();\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {object} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    // prevent default page scroll\n    event.preventDefault();\n\n    const step = -event.deltaY / 500;\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const mousePoint = getMousePoint(event);\n\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = this.#getViewLayer(layerGroup);\n    if (typeof viewLayer === 'undefined') {\n      logger.warn('No view layer to do wheel zoom/pan');\n      return;\n    }\n    const viewController = viewLayer.getViewController();\n    const planePos = viewLayer.displayToMainPlanePos(mousePoint);\n    const center = viewController.getPlanePositionFromPlanePoint(planePos);\n    layerGroup.addScale(step, center);\n    layerGroup.draw();\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'ZoomAndPan';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} _bool The flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Set the tool live features: does nothing.\n   *\n   * @param {object} _features The list of features.\n   */\n  setFeatures(_features) {\n    // does nothing\n  }\n\n} // ZoomAndPan class\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {ScrollWheel} from './scrollWheel';\nimport {\n  getMousePoint,\n  getTouchPoints\n} from '../gui/generic';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\nimport {Point2D} from '../math/point';\n/* eslint-enable no-unused-vars */\n\n/**\n * Opacity class.\n *\n * @example\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n * const viewConfigs = {'*': [viewConfig0]};\n * const options = new dwv.AppOptions(viewConfigs);\n * options.tools = {Opacity: new dwv.ToolConfig()};\n * app.init(options);\n * // activate tool\n * app.addEventListener('load', function () {\n *   app.setTool('Opacity');\n * });\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n */\nexport class Opacity {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Start point.\n   *\n   * @type {Point2D}\n   */\n  #startPoint;\n\n  /**\n   * Scroll wheel handler.\n   *\n   * @type {ScrollWheel}\n   */\n  #scrollWhell;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n    this.#scrollWhell = new ScrollWheel(app);\n  }\n\n  /**\n   * Start tool interaction.\n   *\n   * @param {Point2D} point The start point.\n   */\n  #start(point) {\n    this.#started = true;\n    this.#startPoint = point;\n  }\n\n  /**\n   * Update tool interaction.\n   *\n   * @param {Point2D} point The update point.\n   * @param {string} divId The layer group divId.\n   */\n  #update(point, divId) {\n    if (!this.#started) {\n      return;\n    }\n\n    // difference to last X position\n    const diffX = point.getX() - this.#startPoint.getX();\n    const xMove = (Math.abs(diffX) > 15);\n    // do not trigger for small moves\n    if (xMove) {\n      const layerGroup = this.#app.getLayerGroupByDivId(divId);\n      const layer = layerGroup.getActiveLayer();\n      const op = layer.getOpacity();\n      layer.setOpacity(op + (diffX / 200));\n      layer.draw();\n\n      // reset origin point\n      this.#startPoint = point;\n    }\n  }\n\n  /**\n   * Finish tool interaction.\n   */\n  #finish() {\n    if (this.#started) {\n      this.#started = false;\n    }\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    const mousePoint = getMousePoint(event);\n    this.#start(mousePoint);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#update(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    this.#finish();\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} _event The mouse out event.\n   */\n  mouseout = (_event) => {\n    this.#finish();\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    const touchPoints = getTouchPoints(event);\n    this.#start(touchPoints[0]);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#update(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} _event The touch end event.\n   */\n  touchend = (_event) => {\n    this.#finish();\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {object} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    this.#scrollWhell.wheel(event);\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'Opacity';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} _bool The flag to activate or not.\n   */\n  activate(_bool) {\n    // does nothing\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Set the tool live features: does nothing.\n   *\n   * @param {object} _features The list of features.\n   */\n  setFeatures(_features) {\n    // does nothing\n  }\n\n} // Opacity class\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {\n  getMousePoint,\n  getTouchPoints\n} from '../gui/generic';\nimport {guid} from '../math/stats';\nimport {logger} from '../utils/logger';\nimport {\n  AddAnnotationCommand,\n  RemoveAnnotationCommand\n} from './drawCommands';\nimport {\n  isNodeNameShape,\n} from './drawBounds';\nimport {Annotation} from '../image/annotation';\nimport {ScrollWheel} from './scrollWheel';\n\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\nimport {Style} from '../gui/style';\nimport {LayerGroup} from '../gui/layerGroup';\nimport {Point2D} from '../math/point';\nimport {DrawLayer} from '../gui/drawLayer';\nimport {ViewLayer} from '../gui/viewLayer';\nimport {DrawShapeHandler} from './drawShapeHandler';\n/* eslint-enable no-unused-vars */\n\n/**\n * Drawing tool.\n *\n * This tool is responsible for the draw of layer group structure.\n *\n * ```\n * drawLayer\n * |_ positionGroup: {name=\"position-group\", id=\"#2-0#_#3-1\"}\n *    |_ shapeGroup: {name=\"{shape name}-group\", id=\"#\"}\n *       |_ shape: {name=\"shape\"},\n *       |_ label: {name=\"label\"},\n *       |_ extra: line tick, protractor arc...\n * ```\n *\n * Discussion:\n * - posGroup > shapeGroup:\n *   (pro) slice/frame display: 1 loop -\n *   (cons) multi-slice shape splitted in positionGroups.\n * - shapeGroup > posGroup:\n *   (pros) more logical -\n *   (cons) slice/frame display: 2 loops.\n */\nexport class Draw {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Scroll wheel handler.\n   *\n   * @type {ScrollWheel}\n   */\n  #scrollWhell;\n\n  /**\n   * Drawing style.\n   *\n   * @type {Style}\n   */\n  #style;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #isDrawing = false;\n\n  /**\n   * Shape factory list.\n   *\n   * @type {object}\n   */\n  #shapeFactoryList = null;\n\n  /**\n   * Current shape factory.\n   *\n   * @type {object}\n   */\n  #currentFactory = null;\n\n  /**\n   * Current shape group.\n   *\n   * @type {object}\n   */\n  #tmpShapeGroup = null;\n\n  /**\n   * Shape name.\n   *\n   * @type {string}\n   */\n  #shapeName;\n\n  /**\n   * List of points.\n   *\n   * @type {Point2D[]}\n   */\n  #points = [];\n\n  /**\n   * Last selected point.\n   *\n   * @type {Point2D}\n   */\n  #lastPoint = null;\n\n  /**\n   * With scroll flag.\n   *\n   * @type {boolean}\n   */\n  #withScroll = true;\n\n  /**\n   * Reference data validator: function that takes the reference\n   *   image meta data and returns a boolean.\n   *\n   * @type {Function}\n   */\n  #refMetaValidator;\n\n  /**\n   * Draw data validator: function that takes the annotation group\n   *   meta data and returns a boolean.\n   *\n   * @type {Function}\n   */\n  #drawMetaValidator;\n\n  /**\n   * Annotation group meta data to pass to newly created groups.\n   * Array of {concept: string, value: string}.\n   *\n   * @type {object[]}\n   */\n  #annotationGroupMeta;\n\n  /**\n   * Annotation meta data to pass to newly created annotations.\n   * Array of either {concept: DicomCode, value: DicomCode} or\n   *   {concept: DicomCode, value: string}.\n   *\n   * @type {object[]}\n   */\n  #annotationMeta;\n\n  /**\n   * Shape handler: activate listeners on existing shape.\n   *\n   * @type {DrawShapeHandler}\n   */\n  #shapeHandler;\n\n  /**\n   * Auto shape colour: will use defaults colours and\n   * vary them according to the layer.\n   *\n   * @type {boolean}\n   */\n  #autoShapeColour = false;\n\n  /**\n   * Event listeners.\n   */\n  #listeners = {};\n\n  /**\n   * Flag to know if the last added point was made by mouse move.\n   *\n   * @type {boolean}\n   */\n  #lastIsMouseMovePoint = false;\n\n  /**\n   * Callback store to allow attach/detach.\n   *\n   * @type {Array}\n   */\n  #callbackStore = [];\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n    this.#scrollWhell = new ScrollWheel(app);\n    this.#shapeHandler = new DrawShapeHandler(app, this.#fireEvent);\n\n    this.#style = app.getStyle();\n  }\n\n  /**\n   * Check if a draw lqyer can be created in the given layer group.\n   * Uses the validator provided as feature. Default returns true.\n   *\n   * @param {LayerGroup} layerGroup The layer group\n   *   where to create the draw layer.\n   * @returns {boolean} True if possible.\n   */\n  #canCreateDrawLayer(layerGroup) {\n    let res = true;\n\n    // validate reference meta data\n    if (typeof this.#refMetaValidator !== 'undefined') {\n      const referenceViewLayer = layerGroup.getActiveViewLayer();\n      const dataId = referenceViewLayer.getDataId();\n      const data = this.#app.getData(dataId);\n      const meta = data.image.getMeta();\n      res = this.#refMetaValidator(meta);\n    }\n\n    return res;\n  }\n\n  /**\n   * Check if a draw can be created in the given draw layer.\n   * Uses the validator provided as feature. Default returns true.\n   *\n   * @param {DrawLayer} drawLayer The layer where to create the draw.\n   * @returns {boolean} True if possible.\n   */\n  #canCreateDraw(drawLayer) {\n    let res = true;\n\n    // validate annotation group meta data\n    if (typeof this.#drawMetaValidator !== 'undefined') {\n      const dataId = drawLayer.getDataId();\n      const data = this.#app.getData(dataId);\n      const meta = data.annotationGroup.getMeta();\n      res = this.#drawMetaValidator(meta);\n    }\n\n    return res;\n  }\n\n  /**\n   * Create a draw layer in the given layer group.\n   *\n   * @param {LayerGroup} layerGroup The layer group where to create.\n   * @returns {DrawLayer} The created layer.\n   */\n  #createDrawLayer(layerGroup) {\n    const referenceViewLayer = layerGroup.getActiveViewLayer();\n    const refDataId = referenceViewLayer.getDataId();\n\n    // create new data\n    const data = this.#app.createAnnotationData(refDataId);\n    // add possible meta data\n    if (typeof this.#annotationGroupMeta !== 'undefined') {\n      for (const meta of this.#annotationGroupMeta) {\n        data.annotationGroup.setMetaValue(meta.concept, meta.value);\n      }\n    }\n    // render (will create draw layer)\n    this.#app.addAndRenderAnnotationData(\n      data, layerGroup.getDivId(), refDataId);\n    // get draw layer\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    // set the layer shape handler\n    drawLayer.setShapeHandler(this.#shapeHandler);\n    // set active to bind to toolboxController\n    layerGroup.setActiveLayerByDataId(drawLayer.getDataId());\n\n    return drawLayer;\n  }\n\n  /**\n   * Start tool interaction.\n   *\n   * @param {Point2D} point The start point.\n   * @param {string} divId The layer group divId.\n   */\n  #switchEditOrCreateShapeGroup(point, divId) {\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    let drawLayer = layerGroup.getActiveDrawLayer();\n\n    /**\n     * Draw warn event.\n     *\n     * @event Draw#warn\n     * @type {object}\n     * @property {string} type The event type.\n     * @property {string} message The warning message.\n     */\n\n    if (typeof drawLayer === 'undefined') {\n      // drawLayer creation check\n      if (!this.#canCreateDrawLayer(layerGroup)) {\n        // fire warn if not possible\n        this.#fireEvent({\n          type: 'warn',\n          message: 'Cannot create draw layer, reference meta is invalid'\n        });\n        return;\n      }\n      // create draw layer\n      drawLayer = this.#createDrawLayer(layerGroup);\n    } else {\n      // draw creation check\n      if (!this.#canCreateDraw(drawLayer)) {\n        // fire warn if not possible\n        this.#fireEvent({\n          type: 'warn',\n          message: 'Cannot create draw, data meta is invalid'\n        });\n        return;\n      }\n    }\n\n    // data should exist / be created\n    const data = drawLayer.getDrawController().getAnnotationGroup();\n\n    const stage = drawLayer.getKonvaStage();\n\n    // update scale\n    this.#style.setZoomScale(stage.scale());\n\n    if (data.isEditable()) {\n      // determine if the click happened on an existing shape or not\n      const kshape = stage.getIntersection({\n        x: point.getX(),\n        y: point.getY()\n      });\n      if (kshape) {\n        // select shape for edition\n        this.#selectShapeGroup(drawLayer, kshape);\n      } else {\n        // create new shape\n        this.#startShapeGroupCreation(layerGroup, point);\n      }\n    }\n  }\n\n  /**\n   * Get the associated view layer.\n   *\n   * @param {LayerGroup} layerGroup The layer group to search.\n   * @returns {ViewLayer|undefined} The view layer.\n   */\n  #getViewLayer(layerGroup) {\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    if (typeof drawLayer === 'undefined') {\n      logger.warn('No draw layer to do draw');\n      return;\n    }\n    return layerGroup.getViewLayerById(\n      drawLayer.getReferenceLayerId());\n  }\n\n  /**\n   * Initializes the new shape creation:\n   * - Updates the started variable,\n   * - Gets the factory,\n   * - Initializes the points array.\n   *\n   * @param {LayerGroup} layerGroup The layer group where the user clicks.\n   * @param {Point2D} point The start point where the user clicks.\n   */\n  #startShapeGroupCreation(layerGroup, point) {\n    // disable edition\n    this.#shapeHandler.disableAndResetEditor();\n    this.#setToDrawingState();\n    // store point\n    const viewLayer = this.#getViewLayer(layerGroup);\n    if (typeof viewLayer === 'undefined') {\n      logger.warn('No view layer to start shape');\n      return;\n    }\n    this.#lastPoint = viewLayer.displayToPlanePos(point);\n    this.#points.push(this.#lastPoint);\n  }\n\n  /**\n   * Sets the variables to drawing state:\n   * - Updates is drawing variable,\n   * - Initializes the current factory,\n   * - Resets points.\n   */\n  #setToDrawingState() {\n    // start storing points\n    this.#isDrawing = true;\n    // set factory\n    this.#currentFactory = new this.#shapeFactoryList[this.#shapeName]();\n    // clear array\n    this.#points = [];\n  }\n\n  /**\n   * Resets the variables to not drawing state:\n   * - Destroys tmp shape group,\n   * - Updates is drawing variable,\n   * - Resets points.\n   */\n  #setToNotDrawingState() {\n    this.#isDrawing = false;\n    this.#points = [];\n  }\n\n  /**\n   * Selects a shape group.\n   *\n   * @param {DrawLayer} drawLayer The draw layer where to draw.\n   * @param {Konva.Shape} kshape The shape that has been selected.\n   */\n  #selectShapeGroup(drawLayer, kshape) {\n    let group = kshape.getParent();\n    // kshape: Konva.Tag -> parent: Konva.Label -> parent: Konva.Group\n    if (kshape instanceof Konva.Tag) {\n      group = group.getParent();\n    }\n    const selectedShape = group.find('.shape')[0];\n    if (!(selectedShape instanceof Konva.Shape)) {\n      return;\n    }\n    /**\n     * Annotation select event.\n     *\n     * @event Draw#annotationselect\n     * @type {object}\n     * @property {string} type The event type.\n     * @property {string} annotationid The annotation id.\n     * @property {string} dataid The data id.\n     */\n    this.#fireEvent({\n      type: 'annotationselect',\n      annotationid: group.id(),\n      dataid: drawLayer.getDataId()\n    });\n    this.#shapeHandler.setEditorShape(selectedShape, drawLayer);\n  }\n\n  /**\n   * Update tool interaction.\n   *\n   * @param {Point2D} point The update point.\n   * @param {string} divId The layer group divId.\n   */\n  #updateShapeGroupCreation(point, divId) {\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    const viewLayer = this.#getViewLayer(layerGroup);\n    if (typeof viewLayer === 'undefined') {\n      logger.warn('No view layer to update shape');\n      return;\n    }\n    const pos = viewLayer.displayToPlanePos(point);\n\n    // draw line to current pos\n    if (Math.abs(pos.getX() - this.#lastPoint.getX()) > 0 ||\n      Math.abs(pos.getY() - this.#lastPoint.getY()) > 0) {\n      // clear last mouse move point\n      if (this.#lastIsMouseMovePoint) {\n        this.#points.pop();\n      }\n      // current point\n      this.#lastPoint = pos;\n      // mark it as temporary\n      this.#lastIsMouseMovePoint = true;\n      // add it to the list\n      this.#points.push(this.#lastPoint);\n      // update points\n      this.#onNewPoints(this.#points, layerGroup);\n    }\n  }\n\n  /**\n   * Finish tool interaction.\n   *\n   * @param {string} divId The layer group divId.\n   */\n  #finishShapeGroupCreation(divId) {\n    // exit if no points\n    if (this.#points.length === 0) {\n      logger.warn('Draw mouseup but no points...');\n      return;\n    }\n\n    // do we have all the needed points\n    if (this.#points.length === this.#currentFactory.getNPoints()) {\n      // store points\n      const layerGroup =\n        this.#app.getLayerGroupByDivId(divId);\n      this.#onFinalPoints(this.#points, layerGroup);\n      this.#setToNotDrawingState();\n    }\n\n    // reset mouse move point flag\n    this.#lastIsMouseMovePoint = false;\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    // exit if not started draw\n    if (this.#isDrawing) {\n      return;\n    }\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#switchEditOrCreateShapeGroup(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    // exit if not started draw\n    if (!this.#isDrawing) {\n      return;\n    }\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#updateShapeGroupCreation(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} event The mouse up event.\n   */\n  mouseup = (event) => {\n    // exit if not started draw\n    if (!this.#isDrawing) {\n      return;\n    }\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#finishShapeGroupCreation(layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle double click event: some tools use it to finish interaction.\n   *\n   * @param {object} event The double click event.\n   */\n  dblclick = (event) => {\n    // only end by double click undefined NPoints\n    if (this.#currentFactory &&\n      typeof this.#currentFactory.getNPoints() !== 'undefined') {\n      return;\n    }\n    // exit if not started draw\n    if (!this.#isDrawing) {\n      return;\n    }\n    // exit if no points\n    if (this.#points.length === 0) {\n      logger.warn('Draw dblclick but no points...');\n      return;\n    }\n\n    // store points\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    this.#onFinalPoints(this.#points, layerGroup);\n    this.#setToNotDrawingState();\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    // exit if not started draw\n    if (this.#isDrawing) {\n      return;\n    }\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#switchEditOrCreateShapeGroup(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    // exit if not started draw\n    if (!this.#isDrawing) {\n      return;\n    }\n\n    const layerDetails = getLayerDetailsFromEvent(event);\n    const touchPoints = getTouchPoints(event);\n\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    const viewLayer = this.#getViewLayer(layerGroup);\n    if (typeof viewLayer === 'undefined') {\n      logger.warn('No view layer to handle touch move');\n      return;\n    }\n    const pos = viewLayer.displayToPlanePos(touchPoints[0]);\n\n    if (Math.abs(pos.getX() - this.#lastPoint.getX()) > 0 ||\n      Math.abs(pos.getY() - this.#lastPoint.getY()) > 0) {\n      // clear last added point from the list (but not the first one)\n      if (this.#points.length !== 1) {\n        this.#points.pop();\n      }\n      // current point\n      this.#lastPoint = pos;\n      // add current one to the list\n      this.#points.push(this.#lastPoint);\n      // allow for anchor points\n      if (this.#points.length < this.#currentFactory.getNPoints()) {\n        clearTimeout(this.timer);\n        this.timer = setTimeout(() => {\n          this.#points.push(this.#lastPoint);\n        }, this.#currentFactory.getTimeout());\n      }\n      // update points\n      this.#onNewPoints(this.#points, layerGroup);\n    }\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} event The touch end event.\n   */\n  touchend = (event) => {\n    this.dblclick(event);\n  };\n\n  /**\n   * Handle mouse wheel event.\n   *\n   * @param {WheelEvent} event The mouse wheel event.\n   */\n  wheel = (event) => {\n    if (this.#withScroll) {\n      this.#scrollWhell.wheel(event);\n    }\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    // call app handler if we are not in the middle of a draw\n    if (!this.#isDrawing) {\n      event.context = 'Draw';\n      this.#app.onKeydown(event);\n    }\n\n    // press delete or backspace key\n    const annotation = this.#shapeHandler.getEditorAnnotation();\n    if ((event.key === 'Delete' ||\n      event.key === 'Backspace') &&\n      typeof annotation !== 'undefined') {\n      const layerGroup = this.#app.getActiveLayerGroup();\n      const drawLayer = layerGroup.getActiveDrawLayer();\n      if (typeof drawLayer === 'undefined') {\n        logger.warn('No draw layer to handle key down');\n        return;\n      }\n      const drawController = drawLayer.getDrawController();\n\n      // create remove annotation command\n      const command = new RemoveAnnotationCommand(annotation, drawController);\n      // add command to undo stack\n      this.#app.addToUndoStack(command);\n      // execute command: triggers draw remove\n      command.execute();\n\n      // reset cursor\n      this.#shapeHandler.onMouseOutShapeGroup();\n    }\n\n    // escape key: exit shape creation\n    if (event.key === 'Escape' && this.#tmpShapeGroup !== null) {\n      const konvaLayer = this.#tmpShapeGroup.getLayer();\n      // reset temporary shape group\n      this.#tmpShapeGroup.destroy();\n      this.#tmpShapeGroup = null;\n      // set state\n      this.#setToNotDrawingState();\n      // redraw\n      konvaLayer.draw();\n    }\n  };\n\n  /**\n   * Update the current draw with new points.\n   *\n   * @param {Point2D[]} tmpPoints The array of new points.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   */\n  #onNewPoints(tmpPoints, layerGroup) {\n    // remove temporary shape draw\n    if (this.#tmpShapeGroup) {\n      this.#tmpShapeGroup.destroy();\n      this.#tmpShapeGroup = null;\n    }\n\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    if (typeof drawLayer === 'undefined') {\n      logger.warn('No draw layer to handle new points');\n      return;\n    }\n    const drawController = drawLayer.getDrawController();\n    const konvaLayer = drawLayer.getKonvaLayer();\n    const viewLayer = layerGroup.getViewLayerById(\n      drawLayer.getReferenceLayerId());\n    if (typeof viewLayer === 'undefined') {\n      logger.warn('No view layer to handle new points');\n      return;\n    }\n    const viewController = viewLayer.getViewController();\n\n    // auto mode: vary shape colour with layer id\n    if (this.#autoShapeColour) {\n      const colours = [\n        '#ffff80', '#ff80ff', '#80ffff', '#80ff80', '8080ff', 'ff8080'\n      ];\n      // warning: depends on layer id nomenclature\n      const drawLayerId = drawLayer.getId();\n      const layerId = drawLayerId.substring(drawLayerId.length - 1);\n      const layerIndex = parseInt(layerId, 10) - 1;\n      const colour = colours[layerIndex];\n      if (typeof colour !== 'undefined') {\n        this.#style.setLineColour(colour);\n      }\n    }\n\n    // create tmp annotation\n    const annotation = new Annotation();\n    // use group colour if defined\n    const groupColour = drawController.getAnnotationGroup().getColour();\n    if (typeof groupColour !== 'undefined') {\n      annotation.colour = groupColour;\n    } else {\n      annotation.colour = this.#style.getLineColour();\n    }\n    annotation.init(viewController);\n    // set annotation shape\n    this.#currentFactory.setAnnotationMathShape(annotation, tmpPoints);\n    // create shape group\n    this.#tmpShapeGroup =\n      this.#currentFactory.createShapeGroup(annotation, this.#style);\n    // set the label visibility\n    drawLayer.setLabelVisibility(this.#tmpShapeGroup);\n\n    // do not listen during creation\n    const shape = this.#tmpShapeGroup.getChildren(isNodeNameShape)[0];\n    shape.listening(false);\n    konvaLayer.listening(false);\n    // draw shape\n    konvaLayer.add(this.#tmpShapeGroup);\n    konvaLayer.draw();\n  }\n\n  /**\n   * Create the final shape from a point list.\n   *\n   * @param {Point2D[]} finalPoints The array of points.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   */\n  #onFinalPoints(finalPoints, layerGroup) {\n    // remove temporary shape draw\n    // (has to be done before sending add event)\n    if (this.#tmpShapeGroup) {\n      this.#tmpShapeGroup.destroy();\n      this.#tmpShapeGroup = null;\n    }\n\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    if (typeof drawLayer === 'undefined') {\n      logger.warn('No draw layer to handle final points');\n      return;\n    }\n    const konvaLayer = drawLayer.getKonvaLayer();\n    const drawController = drawLayer.getDrawController();\n    const viewLayer = layerGroup.getViewLayerById(\n      drawLayer.getReferenceLayerId());\n    if (typeof viewLayer === 'undefined') {\n      logger.warn('No view layer to handle final points');\n      return;\n    }\n    const viewController = viewLayer.getViewController();\n\n    // create final annotation\n    const annotation = new Annotation();\n    // use group colour if defined\n    const groupColour = drawController.getAnnotationGroup().getColour();\n    if (typeof groupColour !== 'undefined') {\n      annotation.colour = groupColour;\n    } else {\n      annotation.colour = this.#style.getLineColour();\n    }\n    annotation.id = guid();\n    annotation.init(viewController);\n    // meta data\n    if (typeof this.#annotationMeta !== 'undefined') {\n      for (const meta of this.#annotationMeta) {\n        annotation.addMetaItem(meta.concept, meta.value);\n      }\n    }\n\n    // set annotation shape\n    this.#currentFactory.setAnnotationMathShape(annotation, finalPoints);\n\n    // create add annotation command\n    const command = new AddAnnotationCommand(annotation, drawController);\n    // add command to undo stack\n    this.#app.addToUndoStack(command);\n    // execute command: triggers draw creation\n    command.execute();\n\n    // re-activate layer\n    konvaLayer.listening(true);\n  }\n\n  /**\n   * Get a DrawLayer position callback.\n   *\n   * TODO: check need for store item removal.\n   *\n   * @param {DrawLayer} layer The layer to update.\n   * @returns {Function} The callback.\n   */\n  #getPositionCallback(layer) {\n    const layerId = layer.getId();\n    if (typeof this.#callbackStore[layerId] === 'undefined') {\n      this.#callbackStore[layerId] = () => {\n        layer.activateCurrentPositionShapes(true);\n      };\n    }\n    return this.#callbackStore[layerId];\n  }\n\n  /**\n   * Activate a draw layer.\n   *\n   * @param {DrawLayer} drawLayer The layer to update.\n   * @param {boolean} flag The flag to activate or not.\n   */\n  #activateLayer(drawLayer, flag) {\n    drawLayer.setShapeHandler(this.#shapeHandler);\n    drawLayer.activateCurrentPositionShapes(flag);\n    // update on position change\n    if (flag) {\n      this.#app.addEventListener('positionchange',\n        this.#getPositionCallback(drawLayer)\n      );\n    } else {\n      this.#app.removeEventListener('positionchange',\n        this.#getPositionCallback(drawLayer)\n      );\n    }\n  }\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} flag The flag to activate or not.\n   */\n  activate(flag) {\n    // force cursor if deactivate\n    if (!flag) {\n      this.#shapeHandler.onMouseOutShapeGroup();\n    }\n    // update draw layers\n    const drawLayers = this.#app.getDrawLayers();\n    for (const drawLayer of drawLayers) {\n      if (typeof drawLayer !== 'undefined') {\n        this.#activateLayer(drawLayer, flag);\n      }\n    }\n    // activate newly added layers\n    this.#app.addEventListener('drawlayeradd', (event) => {\n      const drawLayers = this.#app.getDrawLayers(function (item) {\n        return item.getId() === event.layerid;\n      });\n      // should be just one\n      if (drawLayers.length === 1) {\n        this.#activateLayer(drawLayers[0], flag);\n      }\n    });\n\n  }\n\n  /**\n   * Set the tool configuration options.\n   *\n   * @param {object} options The list of shape names amd classes.\n   */\n  setOptions(options) {\n    // save the options as the shape factory list\n    this.#shapeFactoryList = options;\n  }\n\n  /**\n   * Get the type of tool options: here 'factory' since the shape\n   * list contains factories to create each possible shape.\n   *\n   * @returns {string} The type.\n   */\n  getOptionsType() {\n    return 'factory';\n  }\n\n  /**\n   * Set the tool live features.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.autoShapeColour !== 'undefined') {\n      this.#autoShapeColour = features.autoShapeColour;\n    }\n    if (typeof features.shapeColour !== 'undefined') {\n      this.#style.setLineColour(features.shapeColour);\n      this.#autoShapeColour = false;\n    }\n    if (typeof features.shapeName !== 'undefined') {\n      // check if we have it\n      if (!this.hasShape(features.shapeName)) {\n        throw new Error('Unknown shape: \\'' + features.shapeName + '\\'');\n      }\n      this.#shapeName = features.shapeName;\n    }\n    if (typeof features.mouseOverCursor !== 'undefined') {\n      this.#shapeHandler.storeMouseOverCursor(features.mouseOverCursor);\n    }\n    if (typeof features.withScroll !== 'undefined') {\n      this.#withScroll = features.withScroll;\n    }\n    if (typeof features.refMetaValidator !== 'undefined') {\n      this.#refMetaValidator = features.refMetaValidator;\n    }\n    if (typeof features.drawMetaValidator !== 'undefined') {\n      this.#drawMetaValidator = features.drawMetaValidator;\n    }\n    if (typeof features.annotationGroupMeta !== 'undefined') {\n      this.#annotationGroupMeta = features.annotationGroupMeta;\n    }\n    if (typeof features.annotationMeta !== 'undefined') {\n      this.#annotationMeta = features.annotationMeta;\n    }\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Get the list of event names that this tool can fire.\n   *\n   * @returns {string[]} The list of event names.\n   */\n  getEventNames() {\n    return [\n      'annotationupdate', 'annotationselect', 'warn'\n    ];\n  }\n\n  /**\n   * Add an event listener on the app.\n   *\n   * @param {string} type The event type.\n   * @param {Function} listener The function associated with the provided\n   *   event type.\n   */\n  addEventListener(type, listener) {\n    if (typeof this.#listeners[type] === 'undefined') {\n      this.#listeners[type] = [];\n    }\n    this.#listeners[type].push(listener);\n  }\n\n  /**\n   * Remove an event listener from the app.\n   *\n   * @param {string} type The event type.\n   * @param {Function} listener The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, listener) {\n    if (typeof this.#listeners[type] === 'undefined') {\n      return;\n    }\n    for (let i = 0; i < this.#listeners[type].length; ++i) {\n      if (this.#listeners[type][i] === listener) {\n        this.#listeners[type].splice(i, 1);\n      }\n    }\n  }\n\n  // Private Methods -----------------------------------------------------------\n\n  /**\n   * Fire an event: call all associated listeners.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    if (typeof this.#listeners[event.type] === 'undefined') {\n      return;\n    }\n    for (let i = 0; i < this.#listeners[event.type].length; ++i) {\n      this.#listeners[event.type][i](event);\n    }\n  };\n\n  /**\n   * Check if the shape is in the shape list.\n   *\n   * @param {string} name The name of the shape.\n   * @returns {boolean} True if there is a factory for the shape.\n   */\n  hasShape(name) {\n    return typeof this.#shapeFactoryList[name] !== 'undefined';\n  }\n\n} // Draw class\n","import {Annotation} from '../image/annotation';\nimport {\n  AddAnnotationCommand,\n  UpdateAnnotationCommand\n} from '../tools/drawCommands';\n//import {RoiFactory} from '../tools/roi';\nimport {ROI} from '../math/roi';\nimport {guid} from '../math/stats';\nimport {Point2D} from '../math/point';\nimport {Style} from '../gui/style';\nimport {\n  getMousePoint,\n  getTouchPoints\n} from '../gui/generic';\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\nimport {LayerGroup} from '../gui/layerGroup';\nimport {ViewLayer} from '../gui/viewLayer';\nimport {Scalar2D} from '../math/scalar';\n/* eslint-enable no-unused-vars */\n\n/**\n * The magic wand namespace.\n *\n * Ref: {@link https://github.com/Tamersoul/magic-wand-js}.\n *\n * @external MagicWand\n */\nimport MagicWand from 'magic-wand-tool';\n\n/**\n * Floodfill painting tool.\n */\nexport class Floodfill {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Original variables from external library. Used as in the lib example.\n   *\n   * @type {number}\n   */\n  #blurRadius = 5;\n  /**\n   * Original variables from external library. Used as in the lib example.\n   *\n   * @type {number}\n   */\n  #simplifyTolerant = 0;\n\n  /**\n   * Original variables from external library. Used as in the lib example.\n   *\n   * @type {number}\n   */\n  #simplifyCount = 2000;\n\n  /**\n   * Canvas info.\n   *\n   * @type {object}\n   */\n  #imageInfo = null;\n\n  /**\n   * Object created by MagicWand lib containing border points.\n   *\n   * @type {object}\n   */\n  #mask = null;\n\n  /**\n   * Threshold default tolerance of the tool border.\n   *\n   * @type {number}\n   */\n  #initialthreshold = 10;\n\n  /**\n   * Threshold tolerance of the tool border.\n   *\n   * @type {number}\n   */\n  #currentthreshold = null;\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Current annotation.\n   *\n   * @type {Annotation}\n   */\n  #annotation;\n\n  /**\n   * Coordinates of the fist mousedown event.\n   *\n   * @type {object}\n   */\n  #initialpoint;\n\n  /**\n   * Floodfill border.\n   *\n   * @type {object}\n   */\n  #border = null;\n\n  /**\n   * List of parent points.\n   *\n   * @type {Point2D[]}\n   */\n  #parentPoints = [];\n\n  /**\n   * Assistant variable to paint border on all slices.\n   *\n   * @type {boolean}\n   */\n  #extender = false;\n\n  /**\n   * Drawing style.\n   *\n   * @type {Style}\n   */\n  #style = new Style();\n\n  /**\n   * Set extend option for painting border on all slices.\n   *\n   * @param {boolean} bool The option to set.\n   */\n  setExtend(bool) {\n    this.#extender = bool;\n  }\n\n  /**\n   * Get extend option for painting border on all slices.\n   *\n   * @returns {boolean} The actual value of of the variable to use Floodfill\n   *   on museup.\n   */\n  getExtend() {\n    return this.#extender;\n  }\n\n  /**\n   * Get the associated view layer.\n   *\n   * @param {LayerGroup} layerGroup The layer group to search.\n   * @returns {ViewLayer|undefined} The view layer.\n   */\n  #getViewLayer(layerGroup) {\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    if (typeof drawLayer === 'undefined') {\n      logger.warn('No draw layer to do floodfill');\n      return;\n    }\n    return layerGroup.getViewLayerById(\n      drawLayer.getReferenceLayerId());\n  }\n\n  /**\n   * Get (x, y) coordinates referenced to the canvas.\n   *\n   * @param {Point2D} point The start point.\n   * @param {string} divId The layer group divId.\n   * @returns {Scalar2D|undefined} The coordinates as a {x,y}.\n   */\n  #getIndex = (point, divId) => {\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    const viewLayer = this.#getViewLayer(layerGroup);\n    if (typeof viewLayer === 'undefined') {\n      logger.warn('No view layer to get index');\n      return;\n    }\n    const index = viewLayer.displayToPlaneIndex(point);\n    return {\n      x: index.get(0),\n      y: index.get(1)\n    };\n  };\n\n  /**\n   * Calculate border.\n   *\n   * @param {object} points The input points.\n   * @param {number} threshold The threshold of the floodfill.\n   * @param {boolean} simple Return first points or a list.\n   * @returns {Point2D[]} The parent points.\n   */\n  #calcBorder(points, threshold, simple) {\n\n    this.#parentPoints = [];\n    const image = {\n      data: this.#imageInfo.data,\n      width: this.#imageInfo.width,\n      height: this.#imageInfo.height,\n      bytes: 4\n    };\n\n    this.#mask = MagicWand.floodFill(image, points.x, points.y, threshold);\n    this.#mask = MagicWand.gaussBlurOnlyBorder(this.#mask, this.#blurRadius);\n\n    let cs = MagicWand.traceContours(this.#mask);\n    cs = MagicWand.simplifyContours(\n      cs, this.#simplifyTolerant, this.#simplifyCount);\n\n    if (cs.length > 0 && cs[0].points[0].x) {\n      if (simple) {\n        return cs[0].points;\n      }\n      for (let j = 0, icsl = cs[0].points.length; j < icsl; j++) {\n        this.#parentPoints.push(new Point2D(\n          cs[0].points[j].x,\n          cs[0].points[j].y\n        ));\n      }\n      return this.#parentPoints;\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Paint Floodfill.\n   *\n   * @param {object} point The start point.\n   * @param {number} threshold The border threshold.\n   * @param {LayerGroup} layerGroup The origin layer group.\n   * @returns {boolean} False if no border.\n   */\n  #paintBorder(point, threshold, layerGroup) {\n    // Calculate the border\n    this.#border = this.#calcBorder(point, threshold, false);\n    // Paint the border\n    if (this.#border.length !== 0) {\n      const drawLayer = layerGroup.getActiveDrawLayer();\n      if (typeof drawLayer === 'undefined') {\n        logger.warn('No draw layer to paint border');\n        return false;\n      }\n      const drawController = drawLayer.getDrawController();\n\n      const newMathShape = new ROI(this.#border);\n\n      let command;\n      if (typeof this.#annotation === 'undefined') {\n        // create annotation\n        this.#annotation = new Annotation();\n        this.#annotation.colour = this.#style.getLineColour();\n        this.#annotation.id = guid();\n\n        const viewLayer =\n          layerGroup.getViewLayerById(drawLayer.getReferenceLayerId());\n        if (typeof viewLayer === 'undefined') {\n          logger.warn('No view layer to paint border');\n          return false;\n        }\n        const viewController = viewLayer.getViewController();\n        this.#annotation.init(viewController);\n\n        this.#annotation.mathShape = newMathShape;\n        command = new AddAnnotationCommand(\n          this.#annotation,\n          drawController\n        );\n      } else {\n        // update annotation\n        const originalMathShape = this.#annotation.mathShape;\n        command = new UpdateAnnotationCommand(\n          this.#annotation,\n          {mathShape: originalMathShape},\n          {mathShape: newMathShape},\n          drawController\n        );\n      }\n\n      // add command to undo stack\n      this.#app.addToUndoStack(command);\n      // execute command: triggers draw creation\n      command.execute();\n    }\n\n    return this.#border.length !== 0;\n  }\n\n  /**\n   * Create Floodfill in all the prev and next slices while border is found.\n   *\n   * @param {number} ini The first slice to extend to.\n   * @param {number} end The last slice to extend to.\n   * @param {object} layerGroup The origin layer group.\n   */\n  extend(ini, end, layerGroup) {\n    //avoid errors\n    if (!this.#initialpoint) {\n      throw '\\'initialpoint\\' not found. User must click before use extend!';\n    }\n\n    const positionHelper = layerGroup.getPositionHelper();\n    const viewLayer = this.#getViewLayer(layerGroup);\n    if (typeof viewLayer === 'undefined') {\n      logger.warn('No view layer to extend floodfill');\n      return;\n    }\n    const viewController = viewLayer.getViewController();\n\n    const pos = viewController.getCurrentIndex();\n    const imageSize = viewController.getImageSize();\n    const threshold = this.#currentthreshold || this.#initialthreshold;\n\n    // Iterate over the next images and paint border on each slice.\n    for (let i = pos.get(2),\n      len = end\n        ? end : imageSize.get(2);\n      i < len; i++) {\n      if (!this.#paintBorder(this.#initialpoint, threshold, layerGroup)) {\n        break;\n      }\n      positionHelper.incrementPositionAlongScroll();\n    }\n    viewController.setCurrentIndex(pos);\n\n    // Iterate over the prev images and paint border on each slice.\n    for (let j = pos.get(2), jl = ini ? ini : 0; j > jl; j--) {\n      if (!this.#paintBorder(this.#initialpoint, threshold, layerGroup)) {\n        break;\n      }\n      positionHelper.decrementPositionAlongScroll();\n    }\n    viewController.setCurrentIndex(pos);\n  }\n\n  /**\n   * Event fired when threshold change.\n   *\n   * @param {number} _value Current threshold.\n   */\n  onThresholdChange(_value) {\n    // Defaults do nothing\n  }\n\n  /**\n   * Start tool interaction.\n   *\n   * @param {Point2D} point The start point.\n   * @param {string} divId The layer group divId.\n   */\n  #start(point, divId) {\n    this.#annotation = undefined;\n\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    let viewLayer;\n    let drawLayer = layerGroup.getActiveDrawLayer();\n\n    if (typeof drawLayer === 'undefined') {\n      viewLayer = layerGroup.getActiveViewLayer();\n      const refDataId = viewLayer.getDataId();\n      // create new data\n      const data = this.#app.createAnnotationData(refDataId);\n      // render (will create draw layer)\n      this.#app.addAndRenderAnnotationData(data, divId, refDataId);\n      // get draw layer\n      drawLayer = layerGroup.getActiveDrawLayer();\n      // set active to bind to toolboxController\n      layerGroup.setActiveLayerByDataId(drawLayer.getDataId());\n    } else {\n      viewLayer = layerGroup.getViewLayerById(\n        drawLayer.getReferenceLayerId());\n      if (typeof viewLayer === 'undefined') {\n        logger.warn('No view layer to start floodfill');\n        return;\n      }\n    }\n\n    this.#imageInfo = viewLayer.getImageData();\n    if (!this.#imageInfo) {\n      logger.error('No image found');\n      return;\n    }\n\n    // update zoom scale\n    this.#style.setZoomScale(\n      drawLayer.getKonvaLayer().getAbsoluteScale());\n\n    this.#started = true;\n    this.#initialpoint = this.#getIndex(point, divId);\n    this.#paintBorder(this.#initialpoint, this.#initialthreshold, layerGroup);\n    this.onThresholdChange(this.#initialthreshold);\n  }\n\n  /**\n   * Update tool interaction.\n   *\n   * @param {Point2D} point The update point.\n   * @param {string} divId The layer group divId.\n   */\n  #update(point, divId) {\n    if (!this.#started) {\n      return;\n    }\n\n    const movedpoint = this.#getIndex(point, divId);\n    this.#currentthreshold = Math.round(Math.sqrt(\n      Math.pow((this.#initialpoint.x - movedpoint.x), 2) +\n      Math.pow((this.#initialpoint.y - movedpoint.y), 2)) / 2);\n    this.#currentthreshold = this.#currentthreshold < this.#initialthreshold\n      ? this.#initialthreshold\n      : this.#currentthreshold - this.#initialthreshold;\n\n    this.#paintBorder(\n      this.#initialpoint,\n      this.#currentthreshold,\n      this.#app.getLayerGroupByDivId(divId)\n    );\n\n    this.onThresholdChange(this.#currentthreshold);\n  }\n\n  /**\n   * Finish tool interaction.\n   */\n  #finish() {\n    if (this.#started) {\n      this.#started = false;\n    }\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#start(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#update(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup = (_event) => {\n    this.#finish();\n    // TODO: re-activate\n    // if (this.#extender) {\n    //   const layerDetails = getLayerDetailsFromEvent(event);\n    //   const layerGroup =\n    //     this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\n    //   this.extend(layerGroup);\n    // }\n  };\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} _event The mouse out event.\n   */\n  mouseout = (_event) => {\n    this.#finish();\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#start(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#update(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} _event The touch end event.\n   */\n  touchend = (_event) => {\n    this.#finish();\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'Floodfill';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} bool The flag to activate or not.\n   */\n  activate(bool) {\n    if (bool) {\n      // init with the app window scale\n      this.#style.setBaseScale(this.#app.getBaseScale());\n      // set the default to the first in the list\n      this.setFeatures({shapeColour: this.#style.getLineColour()});\n    }\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n  /**\n   * Set the tool live features: shape colour.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.shapeColour !== 'undefined') {\n      this.#style.setLineColour(features.shapeColour);\n    }\n  }\n\n} // Floodfill class\n","import {Style} from '../gui/style';\nimport {\n  getMousePoint,\n  getTouchPoints\n} from '../gui/generic';\nimport {Point2D} from '../math/point';\nimport {Path} from '../math/path';\nimport {Scissors} from '../math/scissors';\nimport {guid} from '../math/stats';\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\nimport {logger} from '../utils/logger';\nimport {ROI} from '../math/roi';\nimport {Annotation} from '../image/annotation';\nimport {\n  AddAnnotationCommand,\n  UpdateAnnotationCommand\n} from '../tools/drawCommands';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * Livewire painting tool.\n */\nexport class Livewire {\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * @param {App} app The associated application.\n   */\n  constructor(app) {\n    this.#app = app;\n  }\n\n  /**\n   * Interaction start flag.\n   *\n   * @type {boolean}\n   */\n  #started = false;\n\n  /**\n   * Start point.\n   *\n   * @type {Point2D}\n   */\n  #startPoint;\n\n  /**\n   * Current annotation.\n   *\n   * @type {Annotation}\n   */\n  #annotation;\n\n  /**\n   * Drawing style.\n   *\n   * @type {Style}\n   */\n  #style = new Style();\n\n  /**\n   * Path storage. Paths are stored in reverse order.\n   *\n   * @type {Path}\n   */\n  #path = new Path();\n\n  /**\n   * Current path storage. Paths are stored in reverse order.\n   *\n   * @type {Path}\n   */\n  #currentPath = new Path();\n\n  /**\n   * List of parent points.\n   *\n   * @type {Array}\n   */\n  #parentPoints = [];\n\n  /**\n   * Tolerance.\n   *\n   * @type {number}\n   */\n  #tolerance = 5;\n\n  /**\n   * Clear the parent points list.\n   *\n   * @param {object} imageSize The image size.\n   */\n  #clearParentPoints(imageSize) {\n    const nrows = imageSize.get(1);\n    for (let i = 0; i < nrows; ++i) {\n      this.#parentPoints[i] = [];\n    }\n  }\n\n  /**\n   * Clear the stored paths.\n   */\n  #clearPaths() {\n    this.#path = new Path();\n    this.#currentPath = new Path();\n  }\n\n  /**\n   * Scissor representation.\n   *\n   * @type {Scissors}\n   */\n  #scissors = new Scissors();\n\n  /**\n   * Start tool interaction.\n   *\n   * @param {Point2D} point The start point.\n   * @param {string} divId The layer group divId.\n   */\n  #start(point, divId) {\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n\n    let viewLayer;\n    let drawLayer = layerGroup.getActiveDrawLayer();\n    if (typeof drawLayer === 'undefined') {\n      viewLayer = layerGroup.getActiveViewLayer();\n    } else {\n      viewLayer =\n        layerGroup.getViewLayerById(drawLayer.getReferenceLayerId());\n    }\n\n    const imageSize = viewLayer.getViewController().getImageSize();\n\n    this.#scissors.setDimensions(\n      imageSize.get(0),\n      imageSize.get(1));\n    this.#scissors.setData(viewLayer.getImageData().data);\n\n    const index = viewLayer.displayToPlaneIndex(point);\n\n    // first time\n    if (!this.#started) {\n      this.#annotation = undefined;\n      this.#started = true;\n      this.#startPoint = new Point2D(index.get(0), index.get(1));\n      // clear vars\n      this.#clearPaths();\n      this.#clearParentPoints(imageSize);\n      // get draw layer\n      if (typeof drawLayer === 'undefined') {\n        const refDataId = viewLayer.getDataId();\n        // create new data\n        const data = this.#app.createAnnotationData(refDataId);\n        // render (will create draw layer)\n        this.#app.addAndRenderAnnotationData(data, divId, refDataId);\n        // get draw layer\n        drawLayer = layerGroup.getActiveDrawLayer();\n        // set active to bind to toolboxController\n        layerGroup.setActiveLayerByDataId(drawLayer.getDataId());\n      }\n      // update zoom scale\n      this.#style.setZoomScale(\n        drawLayer.getKonvaLayer().getAbsoluteScale());\n      // do the training from the first point\n      const p = {x: index.get(0), y: index.get(1)};\n      this.#scissors.doTraining(p);\n      // add the initial point to the path\n      const p0 = new Point2D(index.get(0), index.get(1));\n      this.#path.addPoint(p0);\n      this.#path.addControlPoint(p0);\n    } else {\n      const diffX = Math.abs(index.get(0) - this.#startPoint.getX());\n      const diffY = Math.abs(index.get(1) - this.#startPoint.getY());\n      // final point: at 'tolerance' of the initial point\n      if (diffX < this.#tolerance &&\n        diffY < this.#tolerance) {\n        // finish\n        this.#finishShape();\n      } else {\n        // anchor point\n        this.#path = this.#currentPath;\n        this.#clearParentPoints(imageSize);\n        const pn = {x: index.get(0), y: index.get(1)};\n        this.#scissors.doTraining(pn);\n        this.#path.addControlPoint(this.#currentPath.getPoint(0));\n      }\n    }\n  }\n\n  /**\n   * Update tool interaction.\n   *\n   * @param {Point2D} point The update point.\n   * @param {string} divId The layer group divId.\n   */\n  #update(point, divId) {\n    if (!this.#started) {\n      return;\n    }\n    const layerGroup = this.#app.getLayerGroupByDivId(divId);\n    const drawLayer = layerGroup.getActiveDrawLayer();\n    if (typeof drawLayer === 'undefined') {\n      logger.warn('No draw layer to update livewire');\n      return;\n    }\n    const viewLayer = layerGroup.getViewLayerById(\n      drawLayer.getReferenceLayerId());\n    if (typeof viewLayer === 'undefined') {\n      logger.warn('No view layer to update livewire');\n      return;\n    }\n    const index = viewLayer.displayToPlaneIndex(point);\n\n    // set the point to find the path to\n    let p = {x: index.get(0), y: index.get(1)};\n    this.#scissors.setPoint(p);\n    // do the work\n    let results = [];\n    let stop = false;\n    while (!this.#parentPoints[p.y][p.x] && !stop) {\n      results = this.#scissors.doWork();\n\n      if (results.length === 0) {\n        stop = true;\n      } else {\n        // fill parents\n        for (let i = 0; i < results.length - 1; i += 2) {\n          const _p = results[i];\n          const _q = results[i + 1];\n          this.#parentPoints[_p.y][_p.x] = _q;\n        }\n      }\n    }\n\n    // get the path\n    this.#currentPath = new Path();\n    stop = false;\n    while (p && !stop) {\n      this.#currentPath.addPoint(new Point2D(p.x, p.y));\n      if (!this.#parentPoints[p.y]) {\n        stop = true;\n      } else {\n        if (!this.#parentPoints[p.y][p.x]) {\n          stop = true;\n        } else {\n          p = this.#parentPoints[p.y][p.x];\n        }\n      }\n    }\n    this.#currentPath.appenPath(this.#path);\n\n    const drawController = drawLayer.getDrawController();\n\n    const newMathShape = new ROI(this.#currentPath.pointArray);\n\n    let command;\n    if (typeof this.#annotation === 'undefined') {\n      // create annotation\n      this.#annotation = new Annotation();\n      this.#annotation.colour = this.#style.getLineColour();\n      this.#annotation.id = guid();\n\n      const viewController = viewLayer.getViewController();\n      this.#annotation.init(viewController);\n\n      this.#annotation.mathShape = newMathShape;\n      command = new AddAnnotationCommand(\n        this.#annotation,\n        drawController\n      );\n    } else {\n      // update annotation\n      const originalMathShape = this.#annotation.mathShape;\n      command = new UpdateAnnotationCommand(\n        this.#annotation,\n        {mathShape: originalMathShape},\n        {mathShape: newMathShape},\n        drawController\n      );\n    }\n\n    // add command to undo stack\n    this.#app.addToUndoStack(command);\n    // execute command: triggers draw creation\n    command.execute();\n  }\n\n  /**\n   * Finish a livewire (roi) shape.\n   */\n  #finishShape() {\n    // set flag\n    this.#started = false;\n  }\n\n  /**\n   * Handle mouse down event.\n   *\n   * @param {object} event The mouse down event.\n   */\n  mousedown = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#start(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse move event.\n   *\n   * @param {object} event The mouse move event.\n   */\n  mousemove = (event) => {\n    const mousePoint = getMousePoint(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#update(mousePoint, layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle mouse up event.\n   *\n   * @param {object} _event The mouse up event.\n   */\n  mouseup(_event) {\n    // nothing to do\n  }\n\n  /**\n   * Handle mouse out event.\n   *\n   * @param {object} _event The mouse out event.\n   */\n  mouseout = (_event) => {\n    // nothing to do\n  };\n\n  /**\n   * Handle double click event.\n   *\n   * @param {object} _event The double click event.\n   */\n  dblclick = (_event) => {\n    this.#finishShape();\n  };\n\n  /**\n   * Handle touch start event.\n   *\n   * @param {object} event The touch start event.\n   */\n  touchstart = (event) => {\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#start(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch move event.\n   *\n   * @param {object} event The touch move event.\n   */\n  touchmove = (event) => {\n    const touchPoints = getTouchPoints(event);\n    const layerDetails = getLayerDetailsFromEvent(event);\n    this.#update(touchPoints[0], layerDetails.groupDivId);\n  };\n\n  /**\n   * Handle touch end event.\n   *\n   * @param {object} _event The touch end event.\n   */\n  touchend = (_event) => {\n    // nothing to do\n  };\n\n  /**\n   * Handle key down event.\n   *\n   * @param {object} event The key down event.\n   */\n  keydown = (event) => {\n    event.context = 'Livewire';\n    this.#app.onKeydown(event);\n  };\n\n  /**\n   * Activate the tool.\n   *\n   * @param {boolean} bool The flag to activate or not.\n   */\n  activate(bool) {\n    // start scissors if displayed\n    if (bool) {\n      // init with the app window scale\n      this.#style.setBaseScale(this.#app.getBaseScale());\n      // set the default to the first in the list\n      this.setFeatures({shapeColour: this.#style.getLineColour()});\n    }\n  }\n\n  /**\n   * Initialise the tool.\n   */\n  init() {\n    // does nothing\n  }\n\n\n  /**\n   * Set the tool live features: shape colour.\n   *\n   * @param {object} features The list of features.\n   */\n  setFeatures(features) {\n    if (typeof features.shapeColour !== 'undefined') {\n      this.#style.setLineColour(features.shapeColour);\n    }\n  }\n\n} // Livewire class\n","import {\n  Line,\n  getPerpendicularLine,\n  getPerpendicularLineAtDistance\n} from '../math/line';\nimport {Point2D} from '../math/point';\nimport {custom} from '../app/custom';\nimport {logger} from '../utils/logger';\nimport {\n  defaultLabelTexts,\n  getLineShape,\n  DRAW_DEBUG,\n  getDefaultAnchor,\n  getAnchorShape\n} from './drawBounds';\nimport {LabelFactory} from './labelFactory';\n\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Style} from '../gui/style';\nimport {Annotation} from '../image/annotation';\n/* eslint-enable no-unused-vars */\n\n/**\n * Arrow factory.\n */\nexport class ArrowFactory {\n\n  /**\n   * The name of the factory.\n   *\n   * @type {string}\n   */\n  #name = 'arrow';\n\n  /**\n   * The associated label factory.\n   *\n   * @type {LabelFactory}\n   */\n  #labelFactory = new LabelFactory(this.#getDefaultLabelPosition);\n\n  /**\n   * Does this factory support the input math shape.\n   *\n   * @param {object} mathShape The mathematical shape.\n   * @returns {boolean} True if supported.\n   */\n  static supports(mathShape) {\n    return mathShape instanceof Point2D;\n  }\n\n  /**\n   * Get the name of the factory.\n   *\n   * @returns {string} The name.\n   */\n  getName() {\n    return this.#name;\n  }\n\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return this.#name + '-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Set an annotation math shape from input points.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {Point2D[]} points The points.\n   */\n  setAnnotationMathShape(annotation, points) {\n    annotation.mathShape = this.#calculateMathShape(points);\n    annotation.referencePoints = [points[1]];\n    annotation.setTextExpr(this.#getDefaultLabel());\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Create a line shape to be displayed.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Style} style The drawing style.\n   * @returns {Konva.Group} The Konva group.\n   */\n  createShapeGroup(annotation, style) {\n    // konva group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.visible(true);\n    group.id(annotation.id);\n    // konva shape\n    const shape = this.#createShape(annotation, style);\n    group.add(shape);\n    // extras\n    const extras = this.#createShapeExtras(annotation, style);\n    for (const extra of extras) {\n      group.add(extra);\n    }\n    // konva label\n    const label = this.#labelFactory.create(annotation, style);\n    group.add(label);\n    // label-shape connector\n    const connectorsPos = this.#getConnectorsPositions(shape);\n    group.add(this.#labelFactory.getConnector(connectorsPos, label, style));\n    // konva shadow (if debug)\n    if (DRAW_DEBUG) {\n      group.add(this.#getDebugShadow(annotation));\n    }\n    return group;\n  }\n\n  /**\n   * Get the connectors positions for the shape.\n   *\n   * @param {Konva.Line} shape The associated shape.\n   * @returns {Point2D[]} The connectors positions.\n   */\n  #getConnectorsPositions(shape) {\n    const points = shape.points();\n    const sx = shape.x();\n    const sy = shape.y();\n    const centerX = (points[0] + points[2]) / 2 + sx;\n    const centerY = (points[1] + points[3]) / 2 + sy;\n    return [new Point2D(centerX, centerY)];\n  }\n\n  /**\n   * Get the anchors positions for the shape.\n   *\n   * @param {Konva.Line} shape The associated shape.\n   * @returns {Point2D[]} The anchor positions.\n   */\n  #getAnchorsPositions(shape) {\n    const points = shape.points();\n    const sx = shape.x();\n    const sy = shape.y();\n    return [\n      new Point2D(points[0] + sx, points[1] + sy),\n      new Point2D(points[2] + sx, points[3] + sy)\n    ];\n  }\n\n  /**\n   * Get anchors to update a line shape.\n   *\n   * @param {Konva.Line} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Konva.Ellipse[]} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const positions = this.#getAnchorsPositions(shape);\n    const anchors = [];\n    for (let i = 0; i < positions.length; ++i) {\n      anchors.push(getDefaultAnchor(\n        positions[i].getX(),\n        positions[i].getY(),\n        'anchor' + i,\n        style\n      ));\n    }\n    return anchors;\n  }\n\n  /**\n   * Constrain anchor movement.\n   *\n   * @param {Konva.Ellipse} _anchor The active anchor.\n   */\n  constrainAnchorMove(_anchor) {\n    // no constraints\n  }\n\n  /**\n   * Update shape and label on anchor move taking the updated\n   *   annotation as input.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} style The application style.\n   */\n  updateShapeGroupOnAnchorMove(annotation, anchor, style) {\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n\n    // update shape and anchors\n    this.#updateShape(annotation, anchor, style);\n    // update label\n    this.updateLabelContent(annotation, group, style);\n    // label position\n    if (typeof annotation.labelPosition === 'undefined') {\n      // update label position if default position\n      this.#labelFactory.updatePosition(annotation, group);\n    } else {\n      // update connector if not default position\n      this.updateConnector(group);\n    }\n    // update shadow\n    if (DRAW_DEBUG) {\n      this.#updateDebugShadow(annotation, group);\n    }\n  }\n\n  /**\n   * Update an annotation on anchor move.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {Konva.Shape} anchor The anchor.\n   */\n  updateAnnotationOnAnchorMove(annotation, anchor) {\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n    // associated shape\n    const kline = this.#getShape(group);\n    // find anchors\n    const begin = getAnchorShape(group, 0);\n    const end = getAnchorShape(group, 1);\n\n    // math shape\n    // compensate for possible shape drag\n    const pointBegin = new Point2D(\n      begin.x() - kline.x(),\n      begin.y() - kline.y()\n    );\n    const pointEnd = new Point2D(\n      end.x() - kline.x(),\n      end.y() - kline.y()\n    );\n    annotation.mathShape = pointBegin;\n    annotation.referencePoints = [pointEnd];\n    // quantification\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Update an annotation on translation (shape move).\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {object} translation The translation.\n   */\n  updateAnnotationOnTranslation(annotation, translation) {\n    // math shape\n    const point = annotation.mathShape;\n    const endPoint = annotation.referencePoints[0];\n    const line = new Line(point, endPoint);\n\n    const begin = line.getBegin();\n    const newBegin = new Point2D(\n      begin.getX() + translation.x,\n      begin.getY() + translation.y\n    );\n    const end = line.getEnd();\n    const newEnd = new Point2D(\n      end.getX() + translation.x,\n      end.getY() + translation.y\n    );\n    annotation.mathShape = newBegin;\n    annotation.referencePoints = [newEnd];\n    // quantification\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Update the shape label.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Group} group The shape group.\n   * @param {Style} _style The application style.\n   */\n  updateLabelContent(annotation, group, _style) {\n    this.#labelFactory.updateContent(annotation, group);\n  }\n\n  /**\n   * Update the shape connector.\n   *\n   * @param {Konva.Group} group The shape group.\n   */\n  updateConnector(group) {\n    const kshape = this.#getShape(group);\n    const connectorsPos = this.#getConnectorsPositions(kshape);\n    this.#labelFactory.updateConnector(group, connectorsPos);\n  }\n\n  /**\n   * Calculate the mathematical shape from a list of points.\n   *\n   * @param {Point2D[]} points The points that define the shape.\n   * @returns {Point2D} The mathematical shape.\n   */\n  #calculateMathShape(points) {\n    return points[0];\n  }\n\n  /**\n   * Get the default labels.\n   *\n   * @returns {object} The label list.\n   */\n  #getDefaultLabel() {\n    if (typeof custom.labelTexts !== 'undefined' &&\n      typeof custom.labelTexts[this.#name] !== 'undefined'\n    ) {\n      return custom.labelTexts[this.#name];\n    } else {\n      return defaultLabelTexts[this.#name];\n    }\n  }\n\n  /**\n   * Creates the konva shape.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Style} style The drawing style.\n   * @returns {Konva.Line} The konva shape.\n   */\n  #createShape(annotation, style) {\n    const point = annotation.mathShape;\n    const endPoint = annotation.referencePoints[0];\n    const line = new Line(point, endPoint);\n\n    // konva line\n    const kshape = new Konva.Line({\n      points: [\n        point.getX(),\n        point.getY(),\n        endPoint.getX(),\n        endPoint.getY()\n      ],\n      stroke: annotation.colour,\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n\n    // larger hitfunc\n    const tickLen = 20;\n    const linePerp0 = getPerpendicularLine(\n      line, point, tickLen, style.getZoomScale());\n    const linePerp1 = getPerpendicularLine(\n      line, endPoint, tickLen, style.getZoomScale());\n    kshape.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\n      context.closePath();\n      context.fillStrokeShape(kshape);\n    });\n\n    return kshape;\n  }\n\n  /**\n   * Get the associated shape from a group.\n   *\n   * @param {Konva.Group} group The group to look into.\n   * @returns {Konva.Line|undefined} The shape.\n   */\n  #getShape(group) {\n    return getLineShape(group);\n  }\n\n  /**\n   * Creates the konva shape extras.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Style} style The drawing style.\n   * @returns {Array} The konva shape extras.\n   */\n  #createShapeExtras(annotation, style) {\n    const point = annotation.mathShape;\n    const endPoint = annotation.referencePoints[0];\n    const line = new Line(point, endPoint);\n\n    const tickLen = 20;\n    // perpendicular line at 2*tickLen\n    const perpLine = getPerpendicularLineAtDistance(\n      line, 2 * tickLen, tickLen, style.getZoomScale());\n\n    // triangle\n    const ktriangle = new Konva.Line({\n      points: [\n        line.getBegin().getX(),\n        line.getBegin().getY(),\n        perpLine.getBegin().getX(),\n        perpLine.getBegin().getY(),\n        perpLine.getEnd().getX(),\n        perpLine.getEnd().getY(),\n      ],\n      fill: annotation.colour,\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      closed: true,\n      name: 'shape-triangle'\n    });\n\n    return [ktriangle];\n  }\n\n  /**\n   * Get the default annotation label position.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @returns {Point2D} The position.\n   */\n  #getDefaultLabelPosition(annotation) {\n    const point = annotation.mathShape;\n    return point;\n  }\n\n  /**\n   * Update shape and label on anchor move taking the updated\n   *   annotation as input.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} style The application style.\n   */\n  #updateShape(annotation, anchor, style) {\n    const point = annotation.mathShape;\n    const endPoint = annotation.referencePoints[0];\n    const line = new Line(point, endPoint);\n\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n    // associated shape\n    const kline = this.#getShape(group);\n\n    // reset position after possible shape drag\n    kline.position({x: 0, y: 0});\n    // update shape\n    kline.points([\n      point.getX(),\n      point.getY(),\n      endPoint.getX(),\n      endPoint.getY(),\n    ]);\n\n    // associated triangle shape\n    const ktriangle = group.getChildren(function (node) {\n      return node.name() === 'shape-triangle';\n    })[0];\n    if (!(ktriangle instanceof Konva.Line)) {\n      return;\n    }\n    // find anchors\n    const begin = getAnchorShape(group, 0);\n    const end = getAnchorShape(group, 1);\n\n    // update 'self' (undo case)\n    switch (anchor.id()) {\n    case 'anchor0':\n      begin.x(anchor.x());\n      begin.y(anchor.y());\n      break;\n    case 'anchor1':\n      end.x(anchor.x());\n      end.y(anchor.y());\n      break;\n    default:\n      logger.error('Unhandled anchor id: ' + anchor.id());\n      break;\n    }\n\n    const tickLen = 20;\n\n    // triangle\n    const perpLine = getPerpendicularLineAtDistance(\n      line, 2 * tickLen, tickLen, style.getZoomScale());\n    ktriangle.position({x: 0, y: 0});\n    ktriangle.points([\n      line.getBegin().getX(),\n      line.getBegin().getY(),\n      perpLine.getBegin().getX(),\n      perpLine.getBegin().getY(),\n      perpLine.getEnd().getX(),\n      perpLine.getEnd().getY(),\n    ]);\n\n    // larger hitfunc\n    const linePerp0 = getPerpendicularLine(\n      line, point, tickLen, style.getZoomScale());\n    const linePerp1 = getPerpendicularLine(\n      line, endPoint, tickLen, style.getZoomScale());\n    kline.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\n      context.closePath();\n      context.fillStrokeShape(kline);\n    });\n  }\n\n  /**\n   * Get the debug shadow.\n   *\n   * @param {Annotation} _annotation The annotation to shadow.\n   * @param {Konva.Group} [_group] The associated group.\n   * @returns {Konva.Group|undefined} The shadow konva group.\n   */\n  #getDebugShadow(_annotation, _group) {\n    return;\n  }\n\n  /**\n   * Update the debug shadow.\n   *\n   * @param {Annotation} _annotation The annotation to shadow.\n   * @param {Konva.Group} _group The associated group.\n   */\n  #updateDebugShadow(_annotation, _group) {\n    // does nothing\n  }\n\n} // class ArrowFactory\n","import {Circle} from '../math/circle';\nimport {Point2D} from '../math/point';\nimport {logger} from '../utils/logger';\nimport {custom} from '../app/custom';\nimport {\n  defaultLabelTexts,\n  isNodeNameShape,\n  DRAW_DEBUG,\n  getDefaultAnchor,\n  getAnchorShape\n} from './drawBounds';\nimport {LabelFactory} from './labelFactory';\n\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Style} from '../gui/style';\nimport {Annotation} from '../image/annotation';\n/* eslint-enable no-unused-vars */\n\n/**\n * Circle factory.\n */\nexport class CircleFactory {\n\n  /**\n   * The name of the factory.\n   *\n   * @type {string}\n   */\n  #name = 'circle';\n\n  /**\n   * The associated label factory.\n   *\n   * @type {LabelFactory}\n   */\n  #labelFactory = new LabelFactory(this.#getDefaultLabelPosition);\n\n  /**\n   * Does this factory support the input math shape.\n   *\n   * @param {object} mathShape The mathematical shape.\n   * @returns {boolean} True if supported.\n   */\n  static supports(mathShape) {\n    return mathShape instanceof Circle;\n  }\n\n  /**\n   * Get the name of the factory.\n   *\n   * @returns {string} The name.\n   */\n  getName() {\n    return this.#name;\n  }\n\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return this.#name + '-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Set an annotation math shape from input points.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {Point2D[]} points The points.\n   */\n  setAnnotationMathShape(annotation, points) {\n    annotation.mathShape = this.#calculateMathShape(points);\n    annotation.setTextExpr(this.#getDefaultLabel());\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Create a circle shape to be displayed.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Style} style The drawing style.\n   * @returns {Konva.Group} The Konva group.\n   */\n  createShapeGroup(annotation, style) {\n    // konva group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.visible(true);\n    group.id(annotation.id);\n    // konva shape\n    const shape = this.#createShape(annotation, style);\n    group.add(this.#createShape(annotation, style));\n    // konva label\n    const label = this.#labelFactory.create(annotation, style);\n    group.add(this.#labelFactory.create(annotation, style));\n    // label-shape connector\n    const connectorsPos = this.#getConnectorsPositions(shape);\n    group.add(this.#labelFactory.getConnector(connectorsPos, label, style));\n    // konva shadow (if debug)\n    if (DRAW_DEBUG) {\n      const shadow = this.#getDebugShadow(annotation, group);\n      group.add(shadow);\n      // move to bottom to not bother main shape\n      shadow.moveToBottom();\n    }\n    return group;\n  }\n\n  /**\n   * Get the connectors positions for the shape.\n   *\n   * @param {Konva.Circle} shape The associated shape.\n   * @returns {Point2D[]} The connectors positions.\n   */\n  #getConnectorsPositions(shape) {\n    const centerX = shape.x();\n    const centerY = shape.y();\n    const radius = shape.radius() * Math.sqrt(2) / 2;\n    return [\n      new Point2D(centerX - radius, centerY - radius),\n      new Point2D(centerX + radius, centerY - radius),\n      new Point2D(centerX - radius, centerY + radius),\n      new Point2D(centerX + radius, centerY + radius),\n    ];\n  }\n\n  /**\n   * Get the anchors positions for the shape.\n   *\n   * @param {Konva.Circle} shape The associated shape.\n   * @returns {Point2D[]} The anchor positions.\n   */\n  #getAnchorsPositions(shape) {\n    const centerX = shape.x();\n    const centerY = shape.y();\n    const radius = shape.radius();\n    return [\n      new Point2D(centerX - radius, centerY),\n      new Point2D(centerX + radius, centerY),\n      new Point2D(centerX, centerY + radius),\n      new Point2D(centerX, centerY - radius),\n    ];\n  }\n\n  /**\n   * Get anchors to update a circle shape.\n   *\n   * @param {Konva.Circle} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Konva.Ellipse[]} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const positions = this.#getAnchorsPositions(shape);\n    const anchors = [];\n    for (let i = 0; i < positions.length; ++i) {\n      anchors.push(getDefaultAnchor(\n        positions[i].getX(),\n        positions[i].getY(),\n        'anchor' + i,\n        style\n      ));\n    }\n    return anchors;\n  }\n\n  /**\n   * Constrain anchor movement.\n   *\n   * @param {Konva.Ellipse} anchor The active anchor.\n   */\n  constrainAnchorMove(anchor) {\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n\n    // find special points\n    const left = getAnchorShape(group, 0);\n    const right = getAnchorShape(group, 1);\n    const bottom = getAnchorShape(group, 2);\n    const top = getAnchorShape(group, 3);\n\n    // update 'self' (undo case) and special points\n    switch (anchor.id()) {\n    case 'anchor0':\n      // block y\n      left.y(right.y());\n      break;\n    case 'anchor1':\n      // block y\n      right.y(left.y());\n      break;\n    case 'anchor2':\n      // block x\n      bottom.x(top.x());\n      break;\n    case 'anchor3':\n      // block x\n      top.x(bottom.x());\n      break;\n    default :\n      logger.error('Unhandled anchor id: ' + anchor.id());\n      break;\n    }\n  }\n\n  /**\n   * Update shape and label on anchor move taking the updated\n   *   annotation as input.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} style The application style.\n   */\n  updateShapeGroupOnAnchorMove(annotation, anchor, style) {\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n\n    // update shape and anchors\n    this.#updateShape(annotation, anchor, style);\n    // update label\n    this.updateLabelContent(annotation, group, style);\n    // label position\n    if (typeof annotation.labelPosition === 'undefined') {\n      // update label position if default position\n      this.#labelFactory.updatePosition(annotation, group);\n    } else {\n      // update connector if not default position\n      this.updateConnector(group);\n    }\n    // update shadow\n    if (DRAW_DEBUG) {\n      this.#updateDebugShadow(annotation, group);\n    }\n  }\n\n  /**\n   * Update an annotation on anchor move.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {Konva.Shape} anchor The anchor.\n   */\n  updateAnnotationOnAnchorMove(annotation, anchor) {\n    // math shape\n    const circle = annotation.mathShape;\n    const center = new Point2D(\n      circle.getCenter().getX(),\n      circle.getCenter().getY()\n    );\n    const anchorPoint = new Point2D(anchor.x(), anchor.y());\n    const newRadius = center.getDistance(anchorPoint);\n    annotation.mathShape = new Circle(center, newRadius);\n    // quantification\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Update an annotation on translation (shape move).\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {object} translation The translation.\n   */\n  updateAnnotationOnTranslation(annotation, translation) {\n    // math shape\n    const circle = annotation.mathShape;\n    const center = circle.getCenter();\n    const newCenter = new Point2D(\n      center.getX() + translation.x,\n      center.getY() + translation.y\n    );\n    annotation.mathShape = new Circle(newCenter, circle.getRadius());\n    // quantification\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Update the shape label.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Group} group The shape group.\n   * @param {Style} _style The application style.\n   */\n  updateLabelContent(annotation, group, _style) {\n    this.#labelFactory.updateContent(annotation, group);\n  }\n\n  /**\n   * Update the shape connector.\n   *\n   * @param {Konva.Group} group The shape group.\n   */\n  updateConnector(group) {\n    const kshape = this.#getShape(group);\n    const connectorsPos = this.#getConnectorsPositions(kshape);\n    this.#labelFactory.updateConnector(group, connectorsPos);\n  }\n\n\n  /**\n   * Calculate the mathematical shape from a list of points.\n   *\n   * @param {Point2D[]} points The points that define the shape.\n   * @returns {Circle} The mathematical shape.\n   */\n  #calculateMathShape(points) {\n    // calculate radius\n    const a = Math.abs(points[0].getX() - points[1].getX());\n    const b = Math.abs(points[0].getY() - points[1].getY());\n    const radius = Math.round(Math.sqrt(a * a + b * b));\n    // physical shape\n    return new Circle(points[0], radius);\n  }\n\n  /**\n   * Get the default labels.\n   *\n   * @returns {object} The label list.\n   */\n  #getDefaultLabel() {\n    if (typeof custom.labelTexts !== 'undefined' &&\n      typeof custom.labelTexts[this.#name] !== 'undefined'\n    ) {\n      return custom.labelTexts[this.#name];\n    } else {\n      return defaultLabelTexts[this.#name];\n    }\n  }\n\n  /**\n   * Creates the konva shape.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Style} style The drawing style.\n   * @returns {Konva.Circle} The konva shape.\n   */\n  #createShape(annotation, style) {\n    const circle = annotation.mathShape;\n    // konva circle\n    return new Konva.Circle({\n      x: circle.getCenter().getX(),\n      y: circle.getCenter().getY(),\n      radius: circle.getRadius(),\n      stroke: annotation.colour,\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n  }\n\n  /**\n   * Get the associated shape from a group.\n   *\n   * @param {Konva.Group} group The group to look into.\n   * @returns {Konva.Circle|undefined} The shape.\n   */\n  #getShape(group) {\n    const kshape = group.getChildren(isNodeNameShape)[0];\n    if (!(kshape instanceof Konva.Circle)) {\n      return;\n    }\n    return kshape;\n  }\n\n  /**\n   * Get the default annotation label position.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @returns {Point2D} The position.\n   */\n  #getDefaultLabelPosition(annotation) {\n    const circle = annotation.mathShape;\n    const center = circle.getCenter();\n    const radius = circle.getRadius();\n    return new Point2D(\n      center.getX() - radius,\n      center.getY() + radius,\n    );\n  }\n\n  /**\n   * Update shape and label on anchor move taking the updated\n   *   annotation as input.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} _style The application style.\n   */\n  #updateShape(annotation, anchor, _style) {\n    const circle = annotation.mathShape;\n    const center = circle.getCenter();\n    const radius = circle.getRadius();\n\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n    // associated shape\n    const kcircle = this.#getShape(group);\n    // update shape: just update the radius\n    kcircle.radius(radius);\n\n    // find anchors\n    const left = getAnchorShape(group, 0);\n    const right = getAnchorShape(group, 1);\n    const bottom = getAnchorShape(group, 2);\n    const top = getAnchorShape(group, 3);\n\n    const swapX = right.x() < left.x() ? -1 : 1;\n    const swapY = top.y() < bottom.y() ? 1 : -1;\n\n    // update 'self' (undo case) and other anchors\n    switch (anchor.id()) {\n    case 'anchor0':\n      // update self\n      left.x(anchor.x());\n      // update others\n      right.x(center.getX() + swapX * radius);\n      bottom.y(center.getY() + radius);\n      top.y(center.getY() - radius);\n      break;\n    case 'anchor1':\n      // update self\n      right.x(anchor.x());\n      // update others\n      left.x(center.getX() - swapX * radius);\n      bottom.y(center.getY() + radius);\n      top.y(center.getY() - radius);\n      break;\n    case 'anchor2':\n      // update self\n      bottom.y(anchor.y());\n      // update others\n      left.x(center.getX() - radius);\n      right.x(center.getX() + radius);\n      top.y(center.getY() - swapY * radius);\n      break;\n    case 'anchor3':\n      // update self\n      top.y(anchor.y());\n      // update others\n      left.x(center.getX() - radius);\n      right.x(center.getX() + radius);\n      bottom.y(center.getY() + swapY * radius);\n      break;\n    default :\n      logger.error('Unhandled anchor id: ' + anchor.id());\n      break;\n    }\n  }\n\n  /**\n   * Get the debug shadow.\n   *\n   * @param {Annotation} annotation The annotation to shadow.\n   * @param {Konva.Group} [group] The associated group.\n   * @returns {Konva.Group|undefined} The shadow konva group.\n   */\n  #getDebugShadow(annotation, group) {\n    const circle = annotation.mathShape;\n\n    // possible group offset\n    let offsetX = 0;\n    let offsetY = 0;\n    if (typeof group !== 'undefined') {\n      offsetX = group.x();\n      offsetY = group.y();\n    }\n    const kshadow = new Konva.Group();\n    kshadow.name('shadow');\n    const regions = circle.getRound();\n    for (let i = 0; i < regions.length; ++i) {\n      const region = regions[i];\n      const minX = region[0][0];\n      const minY = region[0][1];\n      const maxX = region[1][0];\n      const pixelLine = new Konva.Rect({\n        x: minX - offsetX,\n        y: minY - offsetY,\n        width: maxX - minX,\n        height: 1,\n        fill: annotation.colour,\n        strokeWidth: 0,\n        strokeScaleEnabled: false,\n        opacity: 0.3,\n        name: 'shadow-element'\n      });\n      kshadow.add(pixelLine);\n    }\n    return kshadow;\n  }\n\n  /**\n   * Update the debug shadow.\n   *\n   * @param {Annotation} annotation The annotation to shadow.\n   * @param {Konva.Group} group The associated group.\n   */\n  #updateDebugShadow(annotation, group) {\n    const kshadow = group.getChildren(function (node) {\n      return node.name() === 'shadow';\n    })[0];\n    if (typeof kshadow !== 'undefined') {\n      // remove previous\n      kshadow.destroy();\n      // add new\n      const shadow = this.#getDebugShadow(annotation, group);\n      group.add(shadow);\n      // move to bottom to not bother main shape\n      shadow.moveToBottom();\n    }\n  }\n\n} // class CircleFactory\n","import {Ellipse} from '../math/ellipse';\nimport {Point2D} from '../math/point';\nimport {logger} from '../utils/logger';\nimport {custom} from '../app/custom';\nimport {\n  defaultLabelTexts,\n  isNodeNameShape,\n  DRAW_DEBUG,\n  getDefaultAnchor,\n  getAnchorShape\n} from './drawBounds';\nimport {LabelFactory} from './labelFactory';\n\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Style} from '../gui/style';\nimport {Annotation} from '../image/annotation';\n/* eslint-enable no-unused-vars */\n\n/**\n * Ellipse factory.\n */\nexport class EllipseFactory {\n\n  /**\n   * The name of the factory.\n   *\n   * @type {string}\n   */\n  #name = 'ellipse';\n\n  /**\n   * The associated label factory.\n   *\n   * @type {LabelFactory}\n   */\n  #labelFactory = new LabelFactory(this.#getDefaultLabelPosition);\n\n  /**\n   * Does this factory support the input math shape.\n   *\n   * @param {object} mathShape The mathematical shape.\n   * @returns {boolean} True if supported.\n   */\n  static supports(mathShape) {\n    return mathShape instanceof Ellipse;\n  }\n\n  /**\n   * Get the name of the factory.\n   *\n   * @returns {string} The name.\n   */\n  getName() {\n    return this.#name;\n  }\n\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return this.#name + '-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Set an annotation math shape from input points.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {Point2D[]} points The points.\n   */\n  setAnnotationMathShape(annotation, points) {\n    annotation.mathShape = this.#calculateMathShape(points);\n    annotation.setTextExpr(this.#getDefaultLabel());\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Create an ellipse shape to be displayed.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Style} style The drawing style.\n   * @returns {Konva.Group} The Konva group.\n   */\n  createShapeGroup(annotation, style) {\n    // konva group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.visible(true);\n    group.id(annotation.id);\n    // konva shape\n    const shape = this.#createShape(annotation, style);\n    group.add(this.#createShape(annotation, style));\n    // konva label\n    const label = this.#labelFactory.create(annotation, style);\n    group.add(this.#labelFactory.create(annotation, style));\n    // label-shape connector\n    const connectorsPos = this.#getConnectorsPositions(shape);\n    group.add(this.#labelFactory.getConnector(connectorsPos, label, style));\n    // konva shadow (if debug)\n    if (DRAW_DEBUG) {\n      const shadow = this.#getDebugShadow(annotation, group);\n      group.add(shadow);\n      // move to bottom to not bother main shape\n      shadow.moveToBottom();\n    }\n    return group;\n  }\n\n  /**\n   * Get the connectors positions for the shape.\n   *\n   * @param {Konva.Ellipse} shape The associated shape.\n   * @returns {Point2D[]} The connectors positions.\n   */\n  #getConnectorsPositions(shape) {\n    const centerX = shape.x();\n    const centerY = shape.y();\n    const radiusX = shape.radiusX() * Math.sqrt(2) / 2;\n    const radiusY = shape.radiusY() * Math.sqrt(2) / 2;\n    return [\n      new Point2D(centerX - radiusX, centerY - radiusY),\n      new Point2D(centerX + radiusX, centerY - radiusY),\n      new Point2D(centerX - radiusX, centerY + radiusY),\n      new Point2D(centerX + radiusX, centerY + radiusY),\n    ];\n  }\n\n  /**\n   * Get the anchors positions for the shape.\n   *\n   * @param {Konva.Ellipse} shape The associated shape.\n   * @returns {Point2D[]} The anchor positions.\n   */\n  #getAnchorsPositions(shape) {\n    const centerX = shape.x();\n    const centerY = shape.y();\n    const radius = shape.radius();\n    return [\n      new Point2D(centerX - radius.x, centerY),\n      new Point2D(centerX + radius.x, centerY),\n      new Point2D(centerX, centerY + radius.y),\n      new Point2D(centerX, centerY - radius.y),\n    ];\n  }\n\n  /**\n   * Get anchors to update a ellipse shape.\n   *\n   * @param {Konva.Ellipse} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Konva.Ellipse[]} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const positions = this.#getAnchorsPositions(shape);\n    const anchors = [];\n    for (let i = 0; i < positions.length; ++i) {\n      anchors.push(getDefaultAnchor(\n        positions[i].getX(),\n        positions[i].getY(),\n        'anchor' + i,\n        style\n      ));\n    }\n    return anchors;\n  }\n\n  /**\n   * Constrain anchor movement.\n   *\n   * @param {Konva.Ellipse} anchor The active anchor.\n   */\n  constrainAnchorMove(anchor) {\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n\n    // find special points\n    const left = getAnchorShape(group, 0);\n    const right = getAnchorShape(group, 1);\n    const bottom = getAnchorShape(group, 2);\n    const top = getAnchorShape(group, 3);\n\n    // update 'self' (undo case) and special points\n    switch (anchor.id()) {\n    case 'anchor0':\n      // block y\n      left.y(right.y());\n      break;\n    case 'anchor1':\n      // block y\n      right.y(left.y());\n      break;\n    case 'anchor2':\n      // block x\n      bottom.x(top.x());\n      break;\n    case 'anchor3':\n      // block x\n      top.x(bottom.x());\n      break;\n    default :\n      logger.error('Unhandled anchor id: ' + anchor.id());\n      break;\n    }\n  }\n\n  /**\n   * Update shape and label on anchor move taking the updated\n   *   annotation as input.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} style The application style.\n   */\n  updateShapeGroupOnAnchorMove(annotation, anchor, style) {\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n\n    // update shape and anchors\n    this.#updateShape(annotation, anchor, style);\n    // update label\n    this.updateLabelContent(annotation, group, style);\n    // label position\n    if (typeof annotation.labelPosition === 'undefined') {\n      // update label position if default position\n      this.#labelFactory.updatePosition(annotation, group);\n    } else {\n      // update connector if not default position\n      this.updateConnector(group);\n    }\n    // update shadow\n    if (DRAW_DEBUG) {\n      this.#updateDebugShadow(annotation, group);\n    }\n  }\n\n  /**\n   * Update an annotation on anchor move.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {Konva.Shape} anchor The anchor.\n   */\n  updateAnnotationOnAnchorMove(annotation, anchor) {\n    // math shape\n    const ellipse = annotation.mathShape;\n    const center = ellipse.getCenter();\n    let radiusX = ellipse.getA();\n    let radiusY = ellipse.getB();\n\n    // update 'self' (undo case) and special points\n    switch (anchor.id()) {\n    case 'anchor0':\n      radiusX = center.getX() - anchor.x();\n      break;\n    case 'anchor1':\n      radiusX = anchor.x() - center.getX();\n      break;\n    case 'anchor2':\n      radiusY = anchor.y() - center.getY();\n      break;\n    case 'anchor3':\n      radiusY = center.getY() - anchor.y();\n      break;\n    default :\n      logger.error('Unhandled anchor id: ' + anchor.id());\n      break;\n    }\n\n    annotation.mathShape = new Ellipse(\n      center, Math.abs(radiusX), Math.abs(radiusY));\n    // quantification\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Update an annotation on translation (shape move).\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {object} translation The translation.\n   */\n  updateAnnotationOnTranslation(annotation, translation) {\n    // math shape\n    const ellipse = annotation.mathShape;\n    const center = ellipse.getCenter();\n    const newCenter = new Point2D(\n      center.getX() + translation.x,\n      center.getY() + translation.y\n    );\n    annotation.mathShape = new Ellipse(\n      newCenter, ellipse.getA(), ellipse.getB());\n    // quantification\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Update the shape label.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Group} group The shape group.\n   * @param {Style} _style The application style.\n   */\n  updateLabelContent(annotation, group, _style) {\n    this.#labelFactory.updateContent(annotation, group);\n  }\n\n  /**\n   * Update the shape connector.\n   *\n   * @param {Konva.Group} group The shape group.\n   */\n  updateConnector(group) {\n    const kshape = this.#getShape(group);\n    const connectorsPos = this.#getConnectorsPositions(kshape);\n    this.#labelFactory.updateConnector(group, connectorsPos);\n  }\n\n  /**\n   * Calculate the mathematical shape from a list of points.\n   *\n   * @param {Point2D[]} points The points that define the shape.\n   * @returns {Ellipse} The mathematical shape.\n   */\n  #calculateMathShape(points) {\n    // calculate radius\n    const a = Math.abs(points[0].getX() - points[1].getX());\n    const b = Math.abs(points[0].getY() - points[1].getY());\n    // physical shape\n    return new Ellipse(points[0], a, b);\n  }\n\n  /**\n   * Get the default labels.\n   *\n   * @returns {object} The label list.\n   */\n  #getDefaultLabel() {\n    if (typeof custom.labelTexts !== 'undefined' &&\n      typeof custom.labelTexts[this.#name] !== 'undefined'\n    ) {\n      return custom.labelTexts[this.#name];\n    } else {\n      return defaultLabelTexts[this.#name];\n    }\n  }\n\n  /**\n   * Creates the konva shape.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Style} style The drawing style.\n   * @returns {Konva.Ellipse} The konva shape.\n   */\n  #createShape(annotation, style) {\n    const ellipse = annotation.mathShape;\n    const center = ellipse.getCenter();\n    const radius = {\n      x: ellipse.getA(),\n      y: ellipse.getB()\n    };\n    // konva circle\n    return new Konva.Ellipse({\n      x: center.getX(),\n      y: center.getY(),\n      radius: radius,\n      radiusX: radius.x,\n      radiusY: radius.y,\n      stroke: annotation.colour,\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n  }\n\n  /**\n   * Get the associated shape from a group.\n   *\n   * @param {Konva.Group} group The group to look into.\n   * @returns {Konva.Ellipse|undefined} The shape.\n   */\n  #getShape(group) {\n    const kshape = group.getChildren(isNodeNameShape)[0];\n    if (!(kshape instanceof Konva.Ellipse)) {\n      return;\n    }\n    return kshape;\n  }\n\n  /**\n   * Get the default annotation label position.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @returns {Point2D} The position.\n   */\n  #getDefaultLabelPosition(annotation) {\n    const ellipse = annotation.mathShape;\n    const center = ellipse.getCenter();\n    return new Point2D(\n      center.getX() - ellipse.getA(),\n      center.getY() + ellipse.getB()\n    );\n  }\n\n  /**\n   * Update shape on anchor move.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} _style The application style.\n   */\n  #updateShape(annotation, anchor, _style) {\n    const ellipse = annotation.mathShape;\n    const center = ellipse.getCenter();\n    const radiusX = ellipse.getA();\n    const radiusY = ellipse.getB();\n\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n    // associated shape\n    const kellipse = this.#getShape(group);\n    // update shape: just update radius\n    kellipse.radius({\n      x: radiusX,\n      y: radiusY\n    });\n\n    // find anchors\n    const left = getAnchorShape(group, 0);\n    const right = getAnchorShape(group, 1);\n    const bottom = getAnchorShape(group, 2);\n    const top = getAnchorShape(group, 3);\n\n    const swapX = right.x() < left.x() ? -1 : 1;\n    const swapY = top.y() < bottom.y() ? 1 : -1;\n\n    // update 'self' (undo case) and other anchors\n    switch (anchor.id()) {\n    case 'anchor0':\n      // update self\n      left.x(anchor.x());\n      // update others\n      right.x(center.getX() + swapX * radiusX);\n      bottom.y(center.getY() + radiusY);\n      top.y(center.getY() - radiusY);\n      break;\n    case 'anchor1':\n      // update self\n      right.x(anchor.x());\n      // update others\n      left.x(center.getX() - swapX * radiusX);\n      bottom.y(center.getY() + radiusY);\n      top.y(center.getY() - radiusY);\n      break;\n    case 'anchor2':\n      // update self\n      bottom.y(anchor.y());\n      // update others\n      left.x(center.getX() - radiusX);\n      right.x(center.getX() + radiusX);\n      top.y(center.getY() - swapY * radiusY);\n      break;\n    case 'anchor3':\n      // update self\n      top.y(anchor.y());\n      // update others\n      left.x(center.getX() - radiusX);\n      right.x(center.getX() + radiusX);\n      bottom.y(center.getY() + swapY * radiusY);\n      break;\n    default :\n      logger.error('Unhandled anchor id: ' + anchor.id());\n      break;\n    }\n  }\n\n  /**\n   * Get the debug shadow.\n   *\n   * @param {Annotation} annotation The annotation to shadow.\n   * @param {Konva.Group} [group] The associated group.\n   * @returns {Konva.Group|undefined} The shadow konva group.\n   */\n  #getDebugShadow(annotation, group) {\n    const ellipse = annotation.mathShape;\n\n    // possible group offset\n    let offsetX = 0;\n    let offsetY = 0;\n    if (typeof group !== 'undefined') {\n      offsetX = group.x();\n      offsetY = group.y();\n    }\n    const kshadow = new Konva.Group();\n    kshadow.name('shadow');\n    const regions = ellipse.getRound();\n    for (let i = 0; i < regions.length; ++i) {\n      const region = regions[i];\n      const minX = region[0][0];\n      const minY = region[0][1];\n      const maxX = region[1][0];\n      const pixelLine = new Konva.Rect({\n        x: minX - offsetX,\n        y: minY - offsetY,\n        width: maxX - minX,\n        height: 1,\n        fill: annotation.colour,\n        strokeWidth: 0,\n        strokeScaleEnabled: false,\n        opacity: 0.3,\n        name: 'shadow-element'\n      });\n      kshadow.add(pixelLine);\n    }\n    return kshadow;\n  }\n\n  /**\n   * Update the debug shadow.\n   *\n   * @param {Annotation} annotation The annotation to shadow.\n   * @param {Konva.Group} group The associated group.\n   */\n  #updateDebugShadow(annotation, group) {\n    const kshadow = group.getChildren(function (node) {\n      return node.name() === 'shadow';\n    })[0];\n    if (typeof kshadow !== 'undefined') {\n      // remove previous\n      kshadow.destroy();\n      // add new\n      const shadow = this.#getDebugShadow(annotation, group);\n      group.add(shadow);\n      // move to bottom to not bother main shape\n      shadow.moveToBottom();\n    }\n  }\n\n} // class EllipseFactory\n","import {Line, getAngle} from '../math/line';\nimport {Protractor} from '../math/protractor';\nimport {Point2D} from '../math/point';\nimport {custom} from '../app/custom';\nimport {\n  defaultLabelTexts,\n  getLineShape,\n  DRAW_DEBUG,\n  getDefaultAnchor,\n  getAnchorShape\n} from './drawBounds';\nimport {LabelFactory} from './labelFactory';\n\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Style} from '../gui/style';\nimport {Annotation} from '../image/annotation';\n/* eslint-enable no-unused-vars */\n\n/**\n * Protractor factory.\n */\nexport class ProtractorFactory {\n\n  /**\n   * The name of the factory.\n   *\n   * @type {string}\n   */\n  #name = 'protractor';\n\n  /**\n   * The associated label factory.\n   *\n   * @type {LabelFactory}\n   */\n  #labelFactory = new LabelFactory(this.#getDefaultLabelPosition);\n\n  /**\n   * Does this factory support the input math shape.\n   *\n   * @param {object} mathShape The mathematical shape.\n   * @returns {boolean} True if supported.\n   */\n  static supports(mathShape) {\n    return mathShape instanceof Protractor;\n  }\n\n  /**\n   * Get the name of the factory.\n   *\n   * @returns {string} The name.\n   */\n  getName() {\n    return this.#name;\n  }\n\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return this.#name + '-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 3;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 500;\n  }\n\n  /**\n   * Set an annotation math shape from input points.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {Point2D[]} points The points.\n   */\n  setAnnotationMathShape(annotation, points) {\n    annotation.mathShape = this.#calculateMathShape(points);\n    annotation.setTextExpr(this.#getDefaultLabel());\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Create a line shape to be displayed.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Style} style The drawing style.\n   * @returns {Konva.Group} The Konva group.\n   */\n  createShapeGroup(annotation, style) {\n    const protractor = annotation.mathShape;\n\n    // konva group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.visible(true);\n    group.id(annotation.id);\n    // konva shape\n    const shape = this.#createShape(annotation, style);\n    group.add(this.#createShape(annotation, style));\n\n    if (protractor.getLength() === this.getNPoints()) {\n      // extras\n      const extras = this.#createShapeExtras(annotation, style);\n      for (const extra of extras) {\n        group.add(extra);\n      }\n      // konva label\n      const label = this.#labelFactory.create(annotation, style);\n      group.add(this.#labelFactory.create(annotation, style));\n      // label-shape connector\n      const connectorsPos = this.#getConnectorsPositions(shape);\n      group.add(this.#labelFactory.getConnector(connectorsPos, label, style));\n      // konva shadow (if debug)\n      if (DRAW_DEBUG) {\n        group.add(this.#getDebugShadow(annotation));\n      }\n    }\n    return group;\n  }\n\n\n  /**\n   * Get the connectors positions for the shape.\n   *\n   * @param {Konva.Line} shape The associated shape.\n   * @returns {Point2D[]} The connectors positions.\n   */\n  #getConnectorsPositions(shape) {\n    const points = shape.points();\n    const sx = shape.x();\n    const sy = shape.y();\n    return [\n      new Point2D(points[2] + sx, points[3] + sy)\n    ];\n  }\n\n  /**\n   * Get the anchors positions for the shape.\n   *\n   * @param {Konva.Line} shape The associated shape.\n   * @returns {Point2D[]} The anchor positions.\n   */\n  #getAnchorsPositions(shape) {\n    const points = shape.points();\n    const sx = shape.x();\n    const sy = shape.y();\n    return [\n      new Point2D(points[0] + sx, points[1] + sy),\n      new Point2D(points[2] + sx, points[3] + sy),\n      new Point2D(points[4] + sx, points[5] + sy)\n    ];\n  }\n\n  /**\n   * Get anchors to update a line shape.\n   *\n   * @param {Konva.Line} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Konva.Ellipse[]} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const positions = this.#getAnchorsPositions(shape);\n    const anchors = [];\n    for (let i = 0; i < positions.length; ++i) {\n      anchors.push(getDefaultAnchor(\n        positions[i].getX(),\n        positions[i].getY(),\n        'anchor' + i,\n        style\n      ));\n    }\n    return anchors;\n  }\n\n  /**\n   * Constrain anchor movement.\n   *\n   * @param {Konva.Ellipse} _anchor The active anchor.\n   */\n  constrainAnchorMove(_anchor) {\n    // no constraints\n  }\n\n  /**\n   * Update shape and label on anchor move taking the updated\n   *   annotation as input.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} style The application style.\n   */\n  updateShapeGroupOnAnchorMove(annotation, anchor, style) {\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n\n    // update shape and anchors\n    this.#updateShape(annotation, anchor, style);\n    // update label\n    this.updateLabelContent(annotation, group, style);\n    // label position\n    if (typeof annotation.labelPosition === 'undefined') {\n      // update label position if default position\n      this.#labelFactory.updatePosition(annotation, group);\n    } else {\n      // update connector if not default position\n      this.updateConnector(group);\n    }\n    // update shadow\n    if (DRAW_DEBUG) {\n      this.#updateDebugShadow(annotation, group);\n    }\n  }\n\n  /**\n   * Update an annotation on anchor move.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {Konva.Shape} anchor The anchor.\n   */\n  updateAnnotationOnAnchorMove(annotation, anchor) {\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n    // associated shape\n    const kline = this.#getShape(group);\n    // find special points\n    const begin = getAnchorShape(group, 0);\n    const mid = getAnchorShape(group, 1);\n    const end = getAnchorShape(group, 2);\n\n    // math shape\n    // compensate for possible shape drag\n    const pointBegin = new Point2D(\n      begin.x() - kline.x(),\n      begin.y() - kline.y()\n    );\n    const pointMid = new Point2D(\n      mid.x() - kline.x(),\n      mid.y() - kline.y()\n    );\n    const pointEnd = new Point2D(\n      end.x() - kline.x(),\n      end.y() - kline.y()\n    );\n    annotation.mathShape = new Protractor([pointBegin, pointMid, pointEnd]);\n    // quantification\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Update an annotation on translation (shape move).\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {object} translation The translation.\n   */\n  updateAnnotationOnTranslation(annotation, translation) {\n    // math shape\n    const protractor = annotation.mathShape;\n    const newPointList = [];\n    for (let i = 0; i < 3; ++i) {\n      newPointList.push(new Point2D(\n        protractor.getPoint(i).getX() + translation.x,\n        protractor.getPoint(i).getY() + translation.y\n      ));\n    }\n    annotation.mathShape = new Protractor(newPointList);\n    // quantification\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Update the shape label.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Group} group The shape group.\n   * @param {Style} _style The application style.\n   */\n  updateLabelContent(annotation, group, _style) {\n    this.#labelFactory.updateContent(annotation, group);\n  }\n\n  /**\n   * Update the shape connector.\n   *\n   * @param {Konva.Group} group The shape group.\n   */\n  updateConnector(group) {\n    const kshape = this.#getShape(group);\n    const connectorsPos = this.#getConnectorsPositions(kshape);\n    this.#labelFactory.updateConnector(group, connectorsPos);\n  }\n\n  /**\n   * Calculate the mathematical shape from a list of points.\n   *\n   * @param {Point2D[]} points The points that define the shape.\n   * @returns {Protractor} The mathematical shape.\n   */\n  #calculateMathShape(points) {\n    return new Protractor(points);\n  }\n\n  /**\n   * Get the default labels.\n   *\n   * @returns {object} The label list.\n   */\n  #getDefaultLabel() {\n    if (typeof custom.labelTexts !== 'undefined' &&\n      typeof custom.labelTexts[this.#name] !== 'undefined'\n    ) {\n      return custom.labelTexts[this.#name];\n    } else {\n      return defaultLabelTexts[this.#name];\n    }\n  }\n\n  /**\n   * Creates the konva shape.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Style} style The drawing style.\n   * @returns {Konva.Line} The konva shape.\n   */\n  #createShape(annotation, style) {\n    const protractor = annotation.mathShape;\n    const points = [];\n    for (let i = 0; i < protractor.getLength(); ++i) {\n      points.push(protractor.getPoint(i).getX());\n      points.push(protractor.getPoint(i).getY());\n    }\n\n    // konva line\n    const kshape = new Konva.Line({\n      points: points,\n      stroke: annotation.colour,\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n\n    if (protractor.getLength() === this.getNPoints()) {\n      // larger hitfunc\n      kshape.hitFunc(function (context) {\n        context.beginPath();\n        context.moveTo(\n          protractor.getPoint(0).getX(), protractor.getPoint(0).getY());\n        context.lineTo(\n          protractor.getPoint(1).getX(), protractor.getPoint(1).getY());\n        context.lineTo(\n          protractor.getPoint(2).getX(), protractor.getPoint(2).getY());\n        context.closePath();\n        context.fillStrokeShape(kshape);\n      });\n    }\n\n    return kshape;\n  }\n\n  /**\n   * Get the associated shape from a group.\n   *\n   * @param {Konva.Group} group The group to look into.\n   * @returns {Konva.Line|undefined} The shape.\n   */\n  #getShape(group) {\n    return getLineShape(group);\n  }\n\n  /**\n   * Creates the konva shape extras.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Style} style The drawing style.\n   * @returns {Array} The konva shape extras.\n   */\n  #createShapeExtras(annotation, style) {\n    const protractor = annotation.mathShape;\n    const line0 = new Line(\n      protractor.getPoint(0), protractor.getPoint(1));\n    const line1 = new Line(\n      protractor.getPoint(1), protractor.getPoint(2));\n\n    let angle = getAngle(line0, line1);\n    let inclination = line0.getInclination();\n    if (angle > 180) {\n      angle = 360 - angle;\n      inclination += angle;\n    }\n\n    const radius = Math.min(line0.getLength(), line1.getLength()) * 33 / 100;\n    const karc = new Konva.Arc({\n      innerRadius: radius,\n      outerRadius: radius,\n      stroke: annotation.colour,\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      angle: angle,\n      rotation: -inclination,\n      x: protractor.getPoint(1).getX(),\n      y: protractor.getPoint(1).getY(),\n      name: 'shape-arc'\n    });\n\n    return [karc];\n  }\n\n  /**\n   * Get the default annotation label position.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @returns {Point2D} The position.\n   */\n  #getDefaultLabelPosition(annotation) {\n    const protractor = annotation.mathShape;\n    const line0 = new Line(\n      protractor.getPoint(0), protractor.getPoint(1));\n    const line1 = new Line(\n      protractor.getPoint(1), protractor.getPoint(2));\n\n    const midX =\n      (line0.getMidpoint().getX() + line1.getMidpoint().getX()) / 2;\n    const midY =\n      (line0.getMidpoint().getY() + line1.getMidpoint().getY()) / 2;\n\n    return new Point2D(\n      midX,\n      midY\n    );\n  }\n\n  /**\n   * Update shape and label on anchor move taking the updated\n   *   annotation as input.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} _style The application style.\n   */\n  #updateShape(annotation, anchor, _style) {\n    const protractor = annotation.mathShape;\n    const line0 = new Line(\n      protractor.getPoint(0), protractor.getPoint(1));\n    const line1 = new Line(\n      protractor.getPoint(1), protractor.getPoint(2));\n\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n    // associated shape\n    const kline = this.#getShape(group);\n\n    // reset position after possible shape drag\n    kline.position({x: 0, y: 0});\n    // update shape\n    kline.points([\n      protractor.getPoint(0).getX(),\n      protractor.getPoint(0).getY(),\n      protractor.getPoint(1).getX(),\n      protractor.getPoint(1).getY(),\n      protractor.getPoint(2).getX(),\n      protractor.getPoint(2).getY()\n    ]);\n\n    // associated arc\n    const karc = group.getChildren(function (node) {\n      return node.name() === 'shape-arc';\n    })[0];\n    if (!(karc instanceof Konva.Arc)) {\n      return;\n    }\n\n    // find special points\n    const begin = getAnchorShape(group, 0);\n    const mid = getAnchorShape(group, 1);\n    const end = getAnchorShape(group, 2);\n\n    // update special points\n    switch (anchor.id()) {\n    case 'anchor0':\n      begin.x(anchor.x());\n      begin.y(anchor.y());\n      break;\n    case 'anchor1':\n      mid.x(anchor.x());\n      mid.y(anchor.y());\n      break;\n    case 'anchor2':\n      end.x(anchor.x());\n      end.y(anchor.y());\n      break;\n    }\n\n    // angle\n    let angle = getAngle(line0, line1);\n    let inclination = line0.getInclination();\n    if (angle > 180) {\n      angle = 360 - angle;\n      inclination += angle;\n    }\n\n    // arc\n    const radius = Math.min(line0.getLength(), line1.getLength()) * 33 / 100;\n    karc.innerRadius(radius);\n    karc.outerRadius(radius);\n    karc.angle(angle);\n    karc.rotation(-inclination);\n    const arcPos = {x: mid.x(), y: mid.y()};\n    karc.position(arcPos);\n\n    // larger hitfunc\n    kline.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(\n        protractor.getPoint(0).getX(), protractor.getPoint(0).getY());\n      context.lineTo(\n        protractor.getPoint(1).getX(), protractor.getPoint(1).getY());\n      context.lineTo(\n        protractor.getPoint(2).getX(), protractor.getPoint(2).getY());\n      context.closePath();\n      context.fillStrokeShape(kline);\n    });\n  }\n\n  /**\n   * Get the debug shadow.\n   *\n   * @param {Annotation} _annotation The annotation to shadow.\n   * @param {Konva.Group} [_group] The associated group.\n   * @returns {Konva.Group|undefined} The shadow konva group.\n   */\n  #getDebugShadow(_annotation, _group) {\n    return;\n  }\n\n  /**\n   * Update the debug shadow.\n   *\n   * @param {Annotation} _annotation The annotation to shadow.\n   * @param {Konva.Group} _group The associated group.\n   */\n  #updateDebugShadow(_annotation, _group) {\n    // does nothing\n  }\n\n} // class ProtractorFactory\n","import {Rectangle} from '../math/rectangle';\nimport {Point2D} from '../math/point';\nimport {logger} from '../utils/logger';\nimport {custom} from '../app/custom';\nimport {\n  defaultLabelTexts,\n  isNodeNameShape,\n  DRAW_DEBUG,\n  getDefaultAnchor,\n  getAnchorShape\n} from './drawBounds';\nimport {LabelFactory} from './labelFactory';\n\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Style} from '../gui/style';\nimport {Annotation} from '../image/annotation';\n/* eslint-enable no-unused-vars */\n\n/**\n * Rectangle factory.\n */\nexport class RectangleFactory {\n\n  /**\n   * The name of the factory.\n   *\n   * @type {string}\n   */\n  #name = 'rectangle';\n\n  /**\n   * The associated label factory.\n   *\n   * @type {LabelFactory}\n   */\n  #labelFactory = new LabelFactory(this.#getDefaultLabelPosition);\n\n  /**\n   * Does this factory support the input math shape.\n   *\n   * @param {object} mathShape The mathematical shape.\n   * @returns {boolean} True if supported.\n   */\n  static supports(mathShape) {\n    return mathShape instanceof Rectangle;\n  }\n\n  /**\n   * Get the name of the factory.\n   *\n   * @returns {string} The name.\n   */\n  getName() {\n    return this.#name;\n  }\n\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return this.#name + '-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Set an annotation math shape from input points.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {Point2D[]} points The points.\n   */\n  setAnnotationMathShape(annotation, points) {\n    annotation.mathShape = this.#calculateMathShape(points);\n    annotation.setTextExpr(this.#getDefaultLabel());\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Create a rectangle shape to be displayed.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Style} style The drawing style.\n   * @returns {Konva.Group} The Konva group.\n   */\n  createShapeGroup(annotation, style) {\n    // konva group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.visible(true);\n    group.id(annotation.id);\n    // konva shape\n    const shape = this.#createShape(annotation, style);\n    group.add(shape);\n    // konva label\n    const label = this.#labelFactory.create(annotation, style);\n    group.add(label);\n    // label-shape connector\n    const connectorsPos = this.#getConnectorsPositions(shape);\n    group.add(this.#labelFactory.getConnector(connectorsPos, label, style));\n    // konva shadow (if debug)\n    if (DRAW_DEBUG) {\n      const shadow = this.#getDebugShadow(annotation);\n      group.add(shadow);\n      // move to bottom to not bother main shape\n      shadow.moveToBottom();\n    }\n    return group;\n  }\n\n  /**\n   * Get the connectors positions for the shape.\n   *\n   * @param {Konva.Rect} shape The associated shape.\n   * @returns {Point2D[]} The connectors positions.\n   */\n  #getConnectorsPositions(shape) {\n    const sx = shape.x();\n    const sy = shape.y();\n    const width = shape.width();\n    const height = shape.height();\n    return [\n      new Point2D(sx + width / 2, sy),\n      new Point2D(sx, sy + height / 2),\n      new Point2D(sx + width / 2, sy + height),\n      new Point2D(sx + width, sy + height / 2),\n    ];\n  }\n\n  /**\n   * Get the anchors positions for the shape.\n   *\n   * @param {Konva.Rect} shape The associated shape.\n   * @returns {Point2D[]} The anchor positions.\n   */\n  #getAnchorsPositions(shape) {\n    const sx = shape.x();\n    const sy = shape.y();\n    const width = shape.width();\n    const height = shape.height();\n    return [\n      new Point2D(sx, sy),\n      new Point2D(sx + width, sy),\n      new Point2D(sx + width, sy + height),\n      new Point2D(sx, sy + height),\n    ];\n  }\n\n  /**\n   * Get anchors to update a rectangle shape.\n   *\n   * @param {Konva.Rect} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Konva.Ellipse[]} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const positions = this.#getAnchorsPositions(shape);\n    const anchors = [];\n    for (let i = 0; i < positions.length; ++i) {\n      anchors.push(getDefaultAnchor(\n        positions[i].getX(),\n        positions[i].getY(),\n        'anchor' + i,\n        style\n      ));\n    }\n    return anchors;\n  }\n\n  /**\n   * Constrain anchor movement.\n   *\n   * @param {Konva.Ellipse} _anchor The active anchor.\n   */\n  constrainAnchorMove(_anchor) {\n    // no constraints\n  }\n\n  /**\n   * Update shape and label on anchor move taking the updated\n   *   annotation as input.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} style The application style.\n   */\n  updateShapeGroupOnAnchorMove(annotation, anchor, style) {\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n\n    // update shape and anchors\n    this.#updateShape(annotation, anchor, style);\n    // update label\n    this.updateLabelContent(annotation, group, style);\n    // label position\n    if (typeof annotation.labelPosition === 'undefined') {\n      // update label position if default position\n      this.#labelFactory.updatePosition(annotation, group);\n    } else {\n      // update connector if not default position\n      this.updateConnector(group);\n    }\n    // update shadow\n    if (DRAW_DEBUG) {\n      this.#updateDebugShadow(annotation, group);\n    }\n  }\n\n  /**\n   * Update an annotation on anchor move.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {Konva.Shape} anchor The anchor.\n   */\n  updateAnnotationOnAnchorMove(annotation, anchor) {\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n    // find anchors\n    const topLeft = getAnchorShape(group, 0);\n    const bottomRight = getAnchorShape(group, 2);\n\n    const pointTopLeft = new Point2D(\n      topLeft.x(),\n      topLeft.y()\n    );\n    const pointBottomRight = new Point2D(\n      bottomRight.x(),\n      bottomRight.y()\n    );\n    // new rect\n    annotation.mathShape = new Rectangle(pointTopLeft, pointBottomRight);\n    // quantification\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Update an annotation on translation (shape move).\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {object} translation The translation.\n   */\n  updateAnnotationOnTranslation(annotation, translation) {\n    // math shape\n    const rectangle = annotation.mathShape;\n    const begin = rectangle.getBegin();\n    const newBegin = new Point2D(\n      begin.getX() + translation.x,\n      begin.getY() + translation.y\n    );\n    const end = rectangle.getEnd();\n    const newEnd = new Point2D(\n      end.getX() + translation.x,\n      end.getY() + translation.y\n    );\n    annotation.mathShape = new Rectangle(newBegin, newEnd);\n    // quantification\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Update the shape label content.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Group} group The shape group.\n   * @param {Style} _style The application style.\n   */\n  updateLabelContent(annotation, group, _style) {\n    this.#labelFactory.updateContent(annotation, group);\n  }\n\n  /**\n   * Update the shape connector.\n   *\n   * @param {Konva.Group} group The shape group.\n   */\n  updateConnector(group) {\n    const kshape = this.#getShape(group);\n    const connectorsPos = this.#getConnectorsPositions(kshape);\n    this.#labelFactory.updateConnector(group, connectorsPos);\n  }\n\n  /**\n   * Calculate the mathematical shape from a list of points.\n   *\n   * @param {Point2D[]} points The points that define the shape.\n   * @returns {Rectangle} The mathematical shape.\n   */\n  #calculateMathShape(points) {\n    return new Rectangle(points[0], points[1]);\n  }\n\n  /**\n   * Get the default labels.\n   *\n   * @returns {object} The label list.\n   */\n  #getDefaultLabel() {\n    if (typeof custom.labelTexts !== 'undefined' &&\n      typeof custom.labelTexts[this.#name] !== 'undefined'\n    ) {\n      return custom.labelTexts[this.#name];\n    } else {\n      return defaultLabelTexts[this.#name];\n    }\n  }\n\n  /**\n   * Creates the konva shape.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Style} style The drawing style.\n   * @returns {Konva.Rect} The konva shape.\n   */\n  #createShape(annotation, style) {\n    const rectangle = annotation.mathShape;\n    // konva rect\n    return new Konva.Rect({\n      x: rectangle.getBegin().getX(),\n      y: rectangle.getBegin().getY(),\n      width: rectangle.getWidth(),\n      height: rectangle.getHeight(),\n      stroke: annotation.colour,\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n  }\n\n  /**\n   * Get the associated shape from a group.\n   *\n   * @param {Konva.Group} group The group to look into.\n   * @returns {Konva.Rect|undefined} The shape.\n   */\n  #getShape(group) {\n    const kshape = group.getChildren(isNodeNameShape)[0];\n    if (!(kshape instanceof Konva.Rect)) {\n      return;\n    }\n    return kshape;\n  }\n\n  /**\n   * Get the default annotation label position.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @returns {Point2D} The position.\n   */\n  #getDefaultLabelPosition(annotation) {\n    const rectangle = annotation.mathShape;\n    return new Point2D(\n      rectangle.getBegin().getX(),\n      rectangle.getEnd().getY(),\n    );\n  }\n\n  /**\n   * Update shape on anchor move.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} _style The application style.\n   */\n  #updateShape(annotation, anchor, _style) {\n    const rectangle = annotation.mathShape;\n    const begin = rectangle.getBegin();\n\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n    // associated shape\n    const krect = this.#getShape(group);\n    // update shape\n    krect.position({\n      x: begin.getX(),\n      y: begin.getY()\n    });\n    krect.size({\n      width: rectangle.getWidth(),\n      height: rectangle.getHeight()\n    });\n\n    // find anchors\n    const topLeft = getAnchorShape(group, 0);\n    const topRight = getAnchorShape(group, 1);\n    const bottomRight = getAnchorShape(group, 2);\n    const bottomLeft = getAnchorShape(group, 3);\n\n    // update 'self' (undo case) and other anchors\n    switch (anchor.id()) {\n    case 'anchor0':\n      // update self\n      topLeft.x(anchor.x());\n      topLeft.y(anchor.y());\n      // update others\n      topRight.y(anchor.y());\n      bottomLeft.x(anchor.x());\n      break;\n    case 'anchor1':\n      // update self\n      topRight.x(anchor.x());\n      topRight.y(anchor.y());\n      // update others\n      topLeft.y(anchor.y());\n      bottomRight.x(anchor.x());\n      break;\n    case 'anchor2':\n      // update self\n      bottomRight.x(anchor.x());\n      bottomRight.y(anchor.y());\n      // update others\n      bottomLeft.y(anchor.y());\n      topRight.x(anchor.x());\n      break;\n    case 'anchor3':\n      // update self\n      bottomLeft.x(anchor.x());\n      bottomLeft.y(anchor.y());\n      // update others\n      bottomRight.y(anchor.y());\n      topLeft.x(anchor.x());\n      break;\n    default :\n      logger.error('Unhandled anchor id: ' + anchor.id());\n      break;\n    }\n  }\n\n  /**\n   * Get the debug shadow.\n   *\n   * @param {Annotation} annotation The anootation to shadow.\n   * @param {Konva.Group} [_group] The associated group.\n   * @returns {Konva.Rect} The shadow konva rect.\n   */\n  #getDebugShadow(annotation, _group) {\n    const rectangle = annotation.mathShape;\n    const round = rectangle.getRound();\n    const rWidth = round.max.getX() - round.min.getX();\n    const rHeight = round.max.getY() - round.min.getY();\n    return new Konva.Rect({\n      x: round.min.getX(),\n      y: round.min.getY(),\n      width: rWidth,\n      height: rHeight,\n      fill: annotation.colour,\n      strokeWidth: 0,\n      strokeScaleEnabled: false,\n      opacity: 0.3,\n      name: 'shadow'\n    });\n  }\n\n  /**\n   * Update the debug shadow.\n   *\n   * @param {Annotation} annotation The annotation to shadow.\n   * @param {Konva.Group} group The associated group.\n   */\n  #updateDebugShadow(annotation, group) {\n    const kshadow = group.getChildren(function (node) {\n      return node.name() === 'shadow';\n    })[0];\n    if (typeof kshadow !== 'undefined') {\n      // remove previous\n      kshadow.destroy();\n      // add new\n      const shadow = this.#getDebugShadow(annotation);\n      group.add(shadow);\n      // move to bottom to not bother main shape\n      shadow.moveToBottom();\n    }\n  }\n\n} // class RectangleFactory\n","import {ROI} from '../math/roi';\nimport {Point2D} from '../math/point';\nimport {custom} from '../app/custom';\nimport {\n  defaultLabelTexts,\n  getLineShape,\n  DRAW_DEBUG,\n  getDefaultAnchor,\n  getAnchorIndex\n} from './drawBounds';\nimport {LabelFactory} from './labelFactory';\n\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Style} from '../gui/style';\nimport {Annotation} from '../image/annotation';\n/* eslint-enable no-unused-vars */\n\n/**\n * ROI factory.\n */\nexport class RoiFactory {\n\n  /**\n   * The name of the factory.\n   *\n   * @type {string}\n   */\n  #name = 'roi';\n\n  /**\n   * The associated label factory.\n   *\n   * @type {LabelFactory}\n   */\n  #labelFactory = new LabelFactory(this.#getDefaultLabelPosition);\n\n  /**\n   * Does this factory support the input math shape.\n   *\n   * @param {object} mathShape The mathematical shape.\n   * @returns {boolean} True if supported.\n   */\n  static supports(mathShape) {\n    return mathShape instanceof ROI;\n  }\n\n  /**\n   * Get the name of the factory.\n   *\n   * @returns {string} The name.\n   */\n  getName() {\n    return this.#name;\n  }\n\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return this.#name + '-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number|undefined} The number of points.\n   */\n  getNPoints() {\n    // undefined to end with double click\n    return undefined;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 100;\n  }\n\n  /**\n   * Set an annotation math shape from input points.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {Point2D[]} points The points.\n   */\n  setAnnotationMathShape(annotation, points) {\n    annotation.mathShape = this.#calculateMathShape(points);\n    annotation.setTextExpr(this.#getDefaultLabel());\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Create a roi shape to be displayed.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Style} style The drawing style.\n   * @returns {Konva.Group} The Konva group.\n   */\n  createShapeGroup(annotation, style) {\n    // konva group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.visible(true);\n    group.id(annotation.id);\n    // konva shape\n    const shape = this.#createShape(annotation, style);\n    group.add(this.#createShape(annotation, style));\n    // konva label\n    const label = this.#labelFactory.create(annotation, style);\n    group.add(this.#labelFactory.create(annotation, style));\n    // label-shape connector\n    const connectorsPos = this.#getConnectorsPositions(shape);\n    group.add(this.#labelFactory.getConnector(connectorsPos, label, style));\n\n    // konva shadow (if debug)\n    if (DRAW_DEBUG) {\n      group.add(this.#getDebugShadow(annotation));\n    }\n    return group;\n  }\n\n  /**\n   * Get the anchors positions for the shape.\n   *\n   * @param {Konva.Line} shape The associated shape.\n   * @returns {Point2D[]} The anchor positions.\n   */\n  #getAnchorsPositions(shape) {\n    const points = shape.points();\n    const sx = shape.x();\n    const sy = shape.y();\n    const positions = [];\n    for (let i = 0; i < points.length; i = i + 2) {\n      positions.push(new Point2D(\n        points[i] + sx,\n        points[i + 1] + sy\n      ));\n    }\n    return positions;\n  }\n\n  /**\n   * Get the connectors positions for the shape.\n   *\n   * @param {Konva.Line} shape The associated shape.\n   * @returns {Point2D[]} The connectors positions.\n   */\n  #getConnectorsPositions(shape) {\n    const points = shape.points();\n    const sx = shape.x();\n    const sy = shape.y();\n    const positions = [];\n    for (let i = 0; i < points.length; i += 2) {\n      const nextIndex = (i + 2) % points.length;\n      const midX = (points[i] + points[nextIndex]) / 2 + sx;\n      const midY = (points[i + 1] + points[nextIndex + 1]) / 2 + sy;\n      positions.push(new Point2D(midX, midY));\n    }\n    return positions;\n  }\n\n  /**\n   * Get anchors to update a roi shape.\n   *\n   * @param {Konva.Line} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Konva.Ellipse[]} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const positions = this.#getAnchorsPositions(shape);\n    const anchors = [];\n    for (let i = 0; i < positions.length; ++i) {\n      anchors.push(getDefaultAnchor(\n        positions[i].getX(),\n        positions[i].getY(),\n        'anchor' + i,\n        style\n      ));\n    }\n    return anchors;\n  }\n\n  /**\n   * Constrain anchor movement.\n   *\n   * @param {Konva.Ellipse} _anchor The active anchor.\n   */\n  constrainAnchorMove(_anchor) {\n    // no constraints\n  }\n\n  /**\n   * Update shape and label on anchor move taking the updated\n   *   annotation as input.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} style The application style.\n   */\n  updateShapeGroupOnAnchorMove(annotation, anchor, style) {\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n\n    // update shape and anchors\n    this.#updateShape(annotation, anchor, style);\n    // update label\n    this.updateLabelContent(annotation, group, style);\n    // label position\n    if (typeof annotation.labelPosition === 'undefined') {\n      // update label position if default position\n      this.#labelFactory.updatePosition(annotation, group);\n    } else {\n      // update connector if not default position\n      this.updateConnector(group);\n    }\n    // update shadow\n    if (DRAW_DEBUG) {\n      this.#updateDebugShadow(annotation, group);\n    }\n  }\n\n  /**\n   * Update an annotation on anchor move.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {Konva.Shape} anchor The anchor.\n   */\n  updateAnnotationOnAnchorMove(annotation, anchor) {\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n    // associated shape\n    const kroi = this.#getShape(group);\n\n    // update the roi point and compensate for possible drag\n    // (the anchor id is the index of the point in the main list)\n    const roi = annotation.mathShape;\n    const points = roi.getPoints().slice();\n    const newPoint = new Point2D(\n      anchor.x() - kroi.x(),\n      anchor.y() - kroi.y()\n    );\n    const index = getAnchorIndex(anchor.id());\n    points[index] = newPoint;\n\n    // new math shape\n    annotation.mathShape = new ROI(points);\n    // quantification\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Update an annotation on translation (shape move).\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {object} translation The translation.\n   */\n  updateAnnotationOnTranslation(annotation, translation) {\n    // math shape\n    const roi = annotation.mathShape;\n    const newPoints = [];\n    for (let i = 0; i < roi.getLength(); ++i) {\n      newPoints.push(new Point2D(\n        roi.getPoint(i).getX() + translation.x,\n        roi.getPoint(i).getY() + translation.y\n      ));\n    }\n    annotation.mathShape = new ROI(newPoints);\n    // quantification\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Update the shape label.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Group} group The shape group.\n   * @param {Style} _style The application style.\n   */\n  updateLabelContent(annotation, group, _style) {\n    this.#labelFactory.updateContent(annotation, group);\n  }\n\n  /**\n   * Update the shape connector.\n   *\n   * @param {Konva.Group} group The shape group.\n   */\n  updateConnector(group) {\n    const kshape = this.#getShape(group);\n    const connectorsPos = this.#getConnectorsPositions(kshape);\n    this.#labelFactory.updateConnector(group, connectorsPos);\n  }\n\n  /**\n   * Calculate the mathematical shape from a list of points.\n   *\n   * @param {Point2D[]} points The points that define the shape.\n   * @returns {ROI} The mathematical shape.\n   */\n  #calculateMathShape(points) {\n    return new ROI(points);\n  }\n\n  /**\n   * Get the default labels.\n   *\n   * @returns {object} The label list.\n   */\n  #getDefaultLabel() {\n    if (typeof custom.labelTexts !== 'undefined' &&\n      typeof custom.labelTexts[this.#name] !== 'undefined'\n    ) {\n      return custom.labelTexts[this.#name];\n    } else {\n      return defaultLabelTexts[this.#name];\n    }\n  }\n\n  /**\n   * Creates the konva shape.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Style} style The drawing style.\n   * @returns {Konva.Line} The konva shape.\n   */\n  #createShape(annotation, style) {\n    const roi = annotation.mathShape;\n    // konva line\n    const arr = [];\n    for (let i = 0; i < roi.getLength(); ++i) {\n      arr.push(roi.getPoint(i).getX());\n      arr.push(roi.getPoint(i).getY());\n    }\n    return new Konva.Line({\n      points: arr,\n      stroke: annotation.colour,\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape',\n      closed: true\n    });\n  }\n\n  /**\n   * Get the associated shape from a group.\n   *\n   * @param {Konva.Group} group The group to look into.\n   * @returns {Konva.Line|undefined} The shape.\n   */\n  #getShape(group) {\n    return getLineShape(group);\n  }\n\n  /**\n   * Get the default annotation label position.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @returns {Point2D} The position.\n   */\n  #getDefaultLabelPosition(annotation) {\n    const roi = annotation.mathShape;\n    return new Point2D(\n      roi.getPoint(0).getX(),\n      roi.getPoint(0).getY()\n    );\n  }\n\n  /**\n   * Update shape on anchor move.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} _style The application style.\n   */\n  #updateShape(annotation, anchor, _style) {\n\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n    // associated shape\n    const kroi = this.#getShape(group);\n    // update the roi point and compensate for possible drag\n    // (the anchor id is the index of the point in the main list)\n    const points = kroi.points();\n    const index = getAnchorIndex(anchor.id()) * 2;\n    points[index] = anchor.x() - kroi.x();\n    points[index + 1] = anchor.y() - kroi.y();\n    kroi.points(points);\n\n    // update self\n    const point = group.getChildren(function (node) {\n      return node.id() === anchor.id();\n    })[0];\n\n    point.x(anchor.x());\n    point.y(anchor.y());\n  }\n\n  /**\n   * Get the debug shadow.\n   *\n   * @param {Annotation} _annotation The anootation to shadow.\n   * @param {Konva.Group} [_group] The associated group.\n   * @returns {Konva.Line} The shadow konva line.\n   */\n  #getDebugShadow(_annotation, _group) {\n    // does nothing\n    return undefined;\n  }\n\n  /**\n   * Update the debug shadow.\n   *\n   * @param {Annotation} _annotation The annotation to shadow.\n   * @param {Konva.Group} _group The associated group.\n   */\n  #updateDebugShadow(_annotation, _group) {\n    // does nothing\n  }\n\n} // class RoiFactory\n","import {Line, getPerpendicularLine} from '../math/line';\nimport {Point2D} from '../math/point';\nimport {logger} from '../utils/logger';\nimport {custom} from '../app/custom';\nimport {\n  defaultLabelTexts,\n  getLineShape,\n  DRAW_DEBUG,\n  getDefaultAnchor,\n  getAnchorShape\n} from './drawBounds';\nimport {LabelFactory} from './labelFactory';\n\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Style} from '../gui/style';\nimport {Annotation} from '../image/annotation';\n/* eslint-enable no-unused-vars */\n\n/**\n * Ruler factory.\n */\nexport class RulerFactory {\n\n  /**\n   * The name of the factory.\n   *\n   * @type {string}\n   */\n  #name = 'ruler';\n\n  /**\n   * The associated label factory.\n   *\n   * @type {LabelFactory}\n   */\n  #labelFactory = new LabelFactory(this.#getDefaultLabelPosition);\n\n  /**\n   * Does this factory support the input math shape.\n   *\n   * @param {object} mathShape The mathematical shape.\n   * @returns {boolean} True if supported.\n   */\n  static supports(mathShape) {\n    return mathShape instanceof Line;\n  }\n\n  /**\n   * Get the name of the factory.\n   *\n   * @returns {string} The name.\n   */\n  getName() {\n    return this.#name;\n  }\n\n  /**\n   * Get the name of the shape group.\n   *\n   * @returns {string} The name.\n   */\n  getGroupName() {\n    return this.#name + '-group';\n  }\n\n  /**\n   * Get the number of points needed to build the shape.\n   *\n   * @returns {number} The number of points.\n   */\n  getNPoints() {\n    return 2;\n  }\n\n  /**\n   * Get the timeout between point storage.\n   *\n   * @returns {number} The timeout in milliseconds.\n   */\n  getTimeout() {\n    return 0;\n  }\n\n  /**\n   * Set an annotation math shape from input points.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {Point2D[]} points The points.\n   */\n  setAnnotationMathShape(annotation, points) {\n    annotation.mathShape = this.#calculateMathShape(points);\n    annotation.setTextExpr(this.#getDefaultLabel());\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Create a line shape to be displayed.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Style} style The drawing style.\n   * @returns {Konva.Group} The Konva group.\n   */\n  createShapeGroup(annotation, style) {\n    // konva group\n    const group = new Konva.Group();\n    group.name(this.getGroupName());\n    group.visible(true);\n    group.id(annotation.id);\n    // konva shape\n    const shape = this.#createShape(annotation, style);\n    group.add(this.#createShape(annotation, style));\n    // extras\n    const extras = this.#createShapeExtras(annotation, style);\n    for (const extra of extras) {\n      group.add(extra);\n    }\n    // konva label\n    const label = this.#labelFactory.create(annotation, style);\n    group.add(this.#labelFactory.create(annotation, style));\n    // label-shape connector\n    const connectorsPos = this.#getConnectorsPositions(shape);\n    group.add(this.#labelFactory.getConnector(connectorsPos, label, style));\n    // konva shadow (if debug)\n    if (DRAW_DEBUG) {\n      group.add(this.#getDebugShadow(annotation));\n    }\n    return group;\n  }\n\n  /**\n   * Get the connectors positions for the shape.\n   *\n   * @param {Konva.Line} shape The associated shape.\n   * @returns {Point2D[]} The connectors positions.\n   */\n  #getConnectorsPositions(shape) {\n    const points = shape.points();\n    const sx = shape.x();\n    const sy = shape.y();\n    const centerX = (points[0] + points[2]) / 2 + sx;\n    const centerY = (points[1] + points[3]) / 2 + sy;\n    return [new Point2D(centerX, centerY)];\n  }\n\n  /**\n   * Get the anchors positions for the shape.\n   *\n   * @param {Konva.Line} shape The associated shape.\n   * @returns {Point2D[]} The anchor positions.\n   */\n  #getAnchorsPositions(shape) {\n    const points = shape.points();\n    const sx = shape.x();\n    const sy = shape.y();\n    return [\n      new Point2D(points[0] + sx, points[1] + sy),\n      new Point2D(points[2] + sx, points[3] + sy)\n    ];\n  }\n\n  /**\n   * Get anchors to update a line shape.\n   *\n   * @param {Konva.Line} shape The associated shape.\n   * @param {Style} style The application style.\n   * @returns {Konva.Ellipse[]} A list of anchors.\n   */\n  getAnchors(shape, style) {\n    const positions = this.#getAnchorsPositions(shape);\n    const anchors = [];\n    for (let i = 0; i < positions.length; ++i) {\n      anchors.push(getDefaultAnchor(\n        positions[i].getX(),\n        positions[i].getY(),\n        'anchor' + i,\n        style\n      ));\n    }\n    return anchors;\n  }\n\n  /**\n   * Constrain anchor movement.\n   *\n   * @param {Konva.Ellipse} _anchor The active anchor.\n   */\n  constrainAnchorMove(_anchor) {\n    // no constraints\n  }\n\n  /**\n   * Update shape and label on anchor move taking the updated\n   *   annotation as input.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} style The application style.\n   */\n  updateShapeGroupOnAnchorMove(annotation, anchor, style) {\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n\n    // update shape and anchors\n    this.#updateShape(annotation, anchor, style);\n    // update label\n    this.updateLabelContent(annotation, group, style);\n    // label position\n    if (typeof annotation.labelPosition === 'undefined') {\n      // update label position if default position\n      this.#labelFactory.updatePosition(annotation, group);\n    } else {\n      // update connector if not default position\n      this.updateConnector(group);\n    }\n    // update shadow\n    if (DRAW_DEBUG) {\n      this.#updateDebugShadow(annotation, group);\n    }\n  }\n\n  /**\n   * Update an annotation on anchor move.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {Konva.Shape} anchor The anchor.\n   */\n  updateAnnotationOnAnchorMove(annotation, anchor) {\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n    // associated shape\n    const kline = this.#getShape(group);\n    // find anchors\n    const begin = getAnchorShape(group, 0);\n    const end = getAnchorShape(group, 1);\n\n    // math shape\n    // compensate for possible shape drag\n    const pointBegin = new Point2D(\n      begin.x() - kline.x(),\n      begin.y() - kline.y()\n    );\n    const pointEnd = new Point2D(\n      end.x() - kline.x(),\n      end.y() - kline.y()\n    );\n    annotation.mathShape = new Line(pointBegin, pointEnd);\n    // quantification\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Update an annotation on translation (shape move).\n   *\n   * @param {Annotation} annotation The annotation.\n   * @param {object} translation The translation.\n   */\n  updateAnnotationOnTranslation(annotation, translation) {\n    // math shape\n    const line = annotation.mathShape;\n    const begin = line.getBegin();\n    const newBegin = new Point2D(\n      begin.getX() + translation.x,\n      begin.getY() + translation.y\n    );\n    const end = line.getEnd();\n    const newEnd = new Point2D(\n      end.getX() + translation.x,\n      end.getY() + translation.y\n    );\n    annotation.mathShape = new Line(newBegin, newEnd);\n    // quantification\n    annotation.updateQuantification();\n  }\n\n  /**\n   * Update the shape label.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Group} group The shape group.\n   * @param {Style} _style The application style.\n   */\n  updateLabelContent(annotation, group, _style) {\n    this.#labelFactory.updateContent(annotation, group);\n  }\n\n  /**\n   * Update the shape connector.\n   *\n   * @param {Konva.Group} group The shape group.\n   */\n  updateConnector(group) {\n    const kshape = this.#getShape(group);\n    const connectorsPos = this.#getConnectorsPositions(kshape);\n    this.#labelFactory.updateConnector(group, connectorsPos);\n  }\n\n  /**\n   * Calculate the mathematical shape from a list of points.\n   *\n   * @param {Point2D[]} points The points that define the shape.\n   * @returns {Line} The mathematical shape.\n   */\n  #calculateMathShape(points) {\n    return new Line(points[0], points[1]);\n  }\n\n  /**\n   * Get the default labels.\n   *\n   * @returns {object} The label list.\n   */\n  #getDefaultLabel() {\n    if (typeof custom.labelTexts !== 'undefined' &&\n      typeof custom.labelTexts[this.#name] !== 'undefined'\n    ) {\n      return custom.labelTexts[this.#name];\n    } else {\n      return defaultLabelTexts[this.#name];\n    }\n  }\n\n  /**\n   * Creates the konva shape.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Style} style The drawing style.\n   * @returns {Konva.Line} The konva shape.\n   */\n  #createShape(annotation, style) {\n    const line = annotation.mathShape;\n\n    // konva line\n    const kshape = new Konva.Line({\n      points: [\n        line.getBegin().getX(),\n        line.getBegin().getY(),\n        line.getEnd().getX(),\n        line.getEnd().getY()\n      ],\n      stroke: annotation.colour,\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape'\n    });\n\n    // larger hitfunc\n    const tickLen = 20;\n    const linePerp0 = getPerpendicularLine(\n      line, line.getBegin(), tickLen, style.getZoomScale());\n    const linePerp1 = getPerpendicularLine(\n      line, line.getEnd(), tickLen, style.getZoomScale());\n    kshape.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\n      context.closePath();\n      context.fillStrokeShape(kshape);\n    });\n\n    return kshape;\n  }\n\n  /**\n   * Get the associated shape from a group.\n   *\n   * @param {Konva.Group} group The group to look into.\n   * @returns {Konva.Line|undefined} The shape.\n   */\n  #getShape(group) {\n    return getLineShape(group);\n  }\n\n  /**\n   * Creates the konva shape extras.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Style} style The drawing style.\n   * @returns {Array} The konva shape extras.\n   */\n  #createShapeExtras(annotation, style) {\n    const line = annotation.mathShape;\n\n    const tickLen = 20;\n\n    // tick begin\n    const linePerp0 = getPerpendicularLine(\n      line, line.getBegin(), tickLen, style.getZoomScale());\n    const ktick0 = new Konva.Line({\n      points: [\n        linePerp0.getBegin().getX(),\n        linePerp0.getBegin().getY(),\n        linePerp0.getEnd().getX(),\n        linePerp0.getEnd().getY()\n      ],\n      stroke: annotation.colour,\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape-tick0'\n    });\n\n    // tick end\n    const linePerp1 = getPerpendicularLine(\n      line, line.getEnd(), tickLen, style.getZoomScale());\n    const ktick1 = new Konva.Line({\n      points: [\n        linePerp1.getBegin().getX(),\n        linePerp1.getBegin().getY(),\n        linePerp1.getEnd().getX(),\n        linePerp1.getEnd().getY()\n      ],\n      stroke: annotation.colour,\n      strokeWidth: style.getStrokeWidth(),\n      strokeScaleEnabled: false,\n      name: 'shape-tick1'\n    });\n\n    return [ktick0, ktick1];\n  }\n\n  /**\n   * Get the default annotation label position.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @returns {Point2D} The position.\n   */\n  #getDefaultLabelPosition(annotation) {\n    const line = annotation.mathShape;\n    const begin = line.getBegin();\n    const end = line.getEnd();\n    // lowest point\n    let res = begin;\n    if (begin.getY() < end.getY()) {\n      res = end;\n    }\n    return res;\n  }\n\n  /**\n   * Update shape and label on anchor move taking the updated\n   *   annotation as input.\n   *\n   * @param {Annotation} annotation The associated annotation.\n   * @param {Konva.Ellipse} anchor The active anchor.\n   * @param {Style} style The application style.\n   */\n  #updateShape(annotation, anchor, style) {\n    const line = annotation.mathShape;\n\n    // parent group\n    const group = anchor.getParent();\n    if (!(group instanceof Konva.Group)) {\n      return;\n    }\n    // associated shape\n    const kline = this.#getShape(group);\n\n    // reset position after possible shape drag\n    kline.position({x: 0, y: 0});\n    // update shape\n    kline.points([\n      line.getBegin().getX(),\n      line.getBegin().getY(),\n      line.getEnd().getX(),\n      line.getEnd().getY(),\n    ]);\n\n    // associated tick0\n    const ktick0 = group.getChildren(function (node) {\n      return node.name() === 'shape-tick0';\n    })[0];\n    if (!(ktick0 instanceof Konva.Line)) {\n      return;\n    }\n    // associated tick1\n    const ktick1 = group.getChildren(function (node) {\n      return node.name() === 'shape-tick1';\n    })[0];\n    if (!(ktick1 instanceof Konva.Line)) {\n      return;\n    }\n    // find anchors\n    const begin = getAnchorShape(group, 0);\n    const end = getAnchorShape(group, 1);\n\n    // update 'self' (undo case)\n    switch (anchor.id()) {\n    case 'anchor0':\n      begin.x(anchor.x());\n      begin.y(anchor.y());\n      break;\n    case 'anchor1':\n      end.x(anchor.x());\n      end.y(anchor.y());\n      break;\n    default:\n      logger.error('Unhandled anchor id: ' + anchor.id());\n      break;\n    }\n\n    // tick\n    const tickLen = 20;\n    const linePerp0 = getPerpendicularLine(\n      line, line.getBegin(), tickLen, style.getZoomScale());\n    ktick0.position({x: 0, y: 0});\n    ktick0.points([linePerp0.getBegin().getX(),\n      linePerp0.getBegin().getY(),\n      linePerp0.getEnd().getX(),\n      linePerp0.getEnd().getY()]);\n    const linePerp1 = getPerpendicularLine(\n      line, line.getEnd(), tickLen, style.getZoomScale());\n    ktick1.position({x: 0, y: 0});\n    ktick1.points([linePerp1.getBegin().getX(),\n      linePerp1.getBegin().getY(),\n      linePerp1.getEnd().getX(),\n      linePerp1.getEnd().getY()]);\n\n    // larger hitfunc\n    kline.hitFunc(function (context) {\n      context.beginPath();\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\n      context.closePath();\n      context.fillStrokeShape(kline);\n    });\n  }\n\n  /**\n   * Get the debug shadow.\n   *\n   * @param {Annotation} _annotation The annotation to shadow.\n   * @param {Konva.Group} [_group] The associated group.\n   * @returns {Konva.Group|undefined} The shadow konva group.\n   */\n  #getDebugShadow(_annotation, _group) {\n    return;\n  }\n\n  /**\n   * Update the debug shadow.\n   *\n   * @param {Annotation} _annotation The annotation to shadow.\n   * @param {Konva.Group} _group The associated group.\n   */\n  #updateDebugShadow(_annotation, _group) {\n    // does nothing\n  }\n\n} // class RulerFactory\n","import {logger} from '../utils/logger';\nimport {getFlags, replaceFlags} from '../utils/string';\nimport {Point} from '../math/point';\nimport {getOrientationName} from '../math/orientation';\nimport {defaultToolOptions, toolOptions} from '../tools/index';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D, Point3D} from '../math/point';\nimport {Index} from '../math/index';\nimport {ViewController} from '../app/viewController';\nimport {PlaneHelper} from './planeHelper';\nimport {DicomCode} from '../dicom/dicomCode';\n/* eslint-enable no-unused-vars */\n\n/**\n * Image annotation.\n */\nexport class Annotation {\n  /**\n   * The ID.\n   *\n   * @type {string}\n   */\n  id;\n\n  /**\n   * The reference image SOP UID.\n   *\n   * @type {string}\n   */\n  referenceSopUID;\n\n  /**\n   * The mathematical shape.\n   *\n   * @type {object}\n   */\n  mathShape;\n\n  /**\n   * Additional points used to define the annotation.\n   *\n   * @type {Point2D[]|undefined}\n   */\n  referencePoints;\n\n  /**\n   * The color: for example 'green', '#00ff00' or 'rgb(0,255,0)'.\n   *\n   * @type {string|undefined}\n   */\n  colour;\n\n  /**\n   * Annotation quantification.\n   *\n   * @type {object|undefined}\n   */\n  quantification;\n\n  /**\n   * Text expression. Can contain variables surrounded with '{}' that will\n   * be extracted from the quantification object.\n   *\n   * @type {string|undefined}\n   */\n  textExpr;\n\n  /**\n   * Label position. If undefined, the default shape\n   *   label position will be used.\n   *\n   * @type {Point2D|undefined}\n   */\n  labelPosition;\n\n  /**\n   * The plane origin, the 3D position of index [0, 0, k].\n   *\n   * @type {Point3D|undefined}\n   */\n  planeOrigin;\n\n  /**\n   * A couple of points that help define the annotation plane.\n   *\n   * @type {Point3D[]|undefined}\n   */\n  planePoints;\n\n  /**\n   * Associated view controller: needed for quantification and label.\n   *\n   * @type {ViewController|undefined}\n   */\n  #viewController;\n\n  /**\n   * Annotation meta data. Array of {concept:DicomCode, value:DicomCode}\n   *   or {concept:DicomCode, value:string}.\n   *\n   * @type {object}\n   */\n  #meta = {};\n\n  /**\n   * Get the concepts ids of the annotation meta data.\n   *\n   * @returns {string[]} The ids.\n   */\n  getMetaConceptIds() {\n    return Object.keys(this.#meta);\n  }\n\n  /**\n   * Get an annotation meta data.\n   *\n   * @param {string} conceptId The value of the concept dicom code.\n   * @returns {object|undefined} The corresponding meta data item\n   *   as {concept, value} or undefined.\n   */\n  getMetaItem(conceptId) {\n    return this.#meta[conceptId];\n  }\n\n  /**\n   * Add annotation meta data.\n   *\n   * @param {DicomCode} concept The concept code.\n   * @param {DicomCode} value The value code.\n   */\n  addMetaItem(concept, value) {\n    const conceptId = concept.value;\n    if (typeof this.#meta[conceptId] !== 'undefined') {\n      logger.warn('Overwriting annotation meta with id=' + conceptId);\n    }\n    this.#meta[concept.value] = {\n      concept: concept,\n      value: value\n    };\n  }\n\n  /**\n   * Remove an annotation meta data.\n   *\n   * @param {string} conceptId The value of the concept dicom code.\n   */\n  removeMetaItem(conceptId) {\n    if (typeof this.#meta[conceptId] !== 'undefined') {\n      delete this.#meta[conceptId];\n    }\n  }\n\n  /**\n   * Get the orientation name for this annotation.\n   *\n   * @returns {string|undefined} The orientation name,\n   *   undefined if same as reference data.\n   */\n  getOrientationName() {\n    let res;\n    if (typeof this.planePoints !== 'undefined') {\n      const cosines = this.planePoints[1].getValues().concat(\n        this.planePoints[2].getValues()\n      );\n      res = getOrientationName(cosines);\n    }\n    return res;\n  }\n\n  /**\n   * Initialise the annotation.\n   *\n   * @param {ViewController} viewController The associated view controller.\n   */\n  init(viewController) {\n    if (typeof this.referenceSopUID !== 'undefined') {\n      logger.debug('Cannot initialise annotation twice');\n      return;\n    }\n\n    this.#viewController = viewController;\n    // set UID\n    this.referenceSopUID = viewController.getCurrentImageUid();\n    // set plane origin (not saved with file)\n    this.planeOrigin =\n      viewController.getOriginForImageUid(this.referenceSopUID);\n    // set plane points if not aquisition orientation\n    // (planePoints are saved with file if present)\n    if (!viewController.isAquisitionOrientation()) {\n      this.planePoints = viewController.getPlanePoints(\n        viewController.getCurrentPosition()\n      );\n    }\n  }\n\n  /**\n   * Check if an input view is compatible with the annotation.\n   *\n   * @param {PlaneHelper} planeHelper The input view to check.\n   * @returns {boolean} True if compatible view.\n   */\n  isCompatibleView(planeHelper) {\n    let res = false;\n\n    // TODO: add check for referenceSopUID\n\n    if (typeof this.planePoints === 'undefined') {\n      // non oriented view\n      if (planeHelper.isAquisitionOrientation()) {\n        res = true;\n      }\n    } else {\n      // oriented view: compare cosines (independent of slice index)\n      const cosines = planeHelper.getCosines();\n      const cosine1 = new Point3D(cosines[0], cosines[1], cosines[2]);\n      const cosine2 = new Point3D(cosines[3], cosines[4], cosines[5]);\n\n      if (cosine1.equals(this.planePoints[1]) &&\n        cosine2.equals(this.planePoints[2])) {\n        res = true;\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Set the associated view controller if it is compatible.\n   *\n   * @param {ViewController} viewController The view controller.\n   */\n  setViewController(viewController) {\n    // check uid\n    if (!viewController.includesImageUid(this.referenceSopUID)) {\n      return;\n    }\n    // check if same view\n    if (!this.isCompatibleView(viewController.getPlaneHelper())) {\n      return;\n    }\n    this.#viewController = viewController;\n\n    // set plane origin (not saved with file)\n    this.planeOrigin =\n      viewController.getOriginForImageUid(this.referenceSopUID);\n  }\n\n  /**\n   * Get the index of the plane origin.\n   *\n   * @returns {Index|undefined} The index.\n   */\n  #getOriginIndex() {\n    let res;\n    if (typeof this.#viewController !== 'undefined') {\n      let origin = this.planeOrigin;\n      if (typeof this.planePoints !== 'undefined') {\n        origin = this.planePoints[0];\n      }\n      const originPoint =\n        new Point([origin.getX(), origin.getY(), origin.getZ()]);\n      res = this.#viewController.getIndexFromPosition(originPoint);\n    }\n    return res;\n  }\n\n  /**\n   * Get the centroid of the math shape.\n   *\n   * @returns {Point|undefined} The 3D centroid point.\n   */\n  getCentroid() {\n    let res;\n    if (typeof this.#viewController !== 'undefined' &&\n      typeof this.mathShape.getCentroid !== 'undefined' &&\n      typeof this.mathShape.getCentroid() !== 'undefined') {\n      // find the slice index of the annotation origin\n      const originIndex = this.#getOriginIndex();\n      const scrollDimIndex = this.#viewController.getScrollDimIndex();\n      const k = originIndex.getValues()[scrollDimIndex];\n      // shape center converted to 3D\n      const planePoint = this.mathShape.getCentroid();\n      res = this.#viewController.getPositionFromPlanePoint(planePoint, k);\n    }\n    return res;\n  }\n\n  /**\n   * Set the annotation text expression.\n   *\n   * @param {Object.<string, string>} labelText The list of label\n   *   texts indexed by modality.\n   */\n  setTextExpr(labelText) {\n    if (typeof this.#viewController !== 'undefined') {\n      const modality = this.#viewController.getModality();\n\n      if (typeof labelText[modality] !== 'undefined') {\n        this.textExpr = labelText[modality];\n      } else {\n        this.textExpr = labelText['*'];\n      }\n    } else {\n      logger.warn('Cannot set text expr without a view controller');\n    }\n  }\n\n  /**\n   * Get the annotation label text by applying the\n   *   text expression on the current quantification.\n   *\n   * @returns {string} The resulting text.\n   */\n  getText() {\n    return replaceFlags(this.textExpr, this.quantification);\n  }\n\n  /**\n   * Update the annotation quantification.\n   */\n  updateQuantification() {\n    if (typeof this.#viewController !== 'undefined' &&\n      typeof this.mathShape.quantify !== 'undefined') {\n      this.quantification = this.mathShape.quantify(\n        this.#viewController,\n        this.#getOriginIndex(),\n        getFlags(this.textExpr)\n      );\n    }\n  }\n\n  /**\n   * Get the math shape associated draw factory.\n   *\n   * @returns {object} The factory.\n   */\n  getFactory() {\n    let fac;\n    // check in user provided factories\n    if (typeof toolOptions.draw !== 'undefined') {\n      for (const factoryName in toolOptions.draw) {\n        const factory = toolOptions.draw[factoryName];\n        if (factory.supports(this.mathShape)) {\n          fac = new factory();\n          break;\n        }\n      }\n    }\n    // check in default factories\n    if (typeof fac === 'undefined') {\n      for (const factoryName in defaultToolOptions.draw) {\n        const factory = defaultToolOptions.draw[factoryName];\n        if (factory.supports(this.mathShape)) {\n          fac = new factory();\n          break;\n        }\n      }\n    }\n    if (typeof fac === 'undefined') {\n      logger.warn('No shape factory found for math shape');\n    }\n    return fac;\n  }\n}\n","import {logger} from '../utils/logger';\nimport {ListenerHandler} from '../utils/listen';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Annotation} from './annotation';\nimport {ViewController} from '../app/viewController';\n/* eslint-enable no-unused-vars */\n\n/**\n * Annotation group.\n */\nexport class AnnotationGroup {\n  /**\n   * @type {Annotation[]}\n   */\n  #list;\n\n  /**\n   * Annotation meta data.\n   *\n   * @type {Object<string, any>}\n   */\n  #meta = {};\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Editable flag.\n   *\n   * @type {boolean}\n   */\n  #editable;\n\n  /**\n   * Group colour as hex string. If defined, it will be used as\n   *   default colour for new annotations in draw tool.\n   *\n   * @type {string|undefined}\n   */\n  #colour;\n\n  /**\n   * @param {Annotation[]} [list] Optional list, will\n   *   create new if not provided.\n   */\n  constructor(list) {\n    if (typeof list !== 'undefined') {\n      this.#list = list;\n    } else {\n      this.#list = [];\n    }\n    this.#editable = true;\n  }\n\n  /**\n   * Get the annotation group as an array.\n   *\n   * @returns {Annotation[]} The array.\n   */\n  getList() {\n    return this.#list;\n  }\n\n  /**\n   * Get the number of annotations of this list.\n   *\n   * @returns {number} The number of annotations.\n   */\n  getLength() {\n    return this.#list.length;\n  }\n\n  /**\n   * Check if the annotation group is editable.\n   *\n   * @returns {boolean} True if editable.\n   */\n  isEditable() {\n    return this.#editable;\n  }\n\n  /**\n   * Set the annotation group editability.\n   *\n   * @param {boolean} flag True to make the annotation group editable.\n   */\n  setEditable(flag) {\n    this.#editable = flag;\n    /**\n     * Annotation group editable flag change event.\n     *\n     * @event AnnotationGroup#annotationgroupeditablechange\n     * @type {object}\n     * @property {string} type The event type.\n     * @property {boolean} data The value of the editable flag.\n     */\n    this.#fireEvent({\n      type: 'annotationgroupeditablechange',\n      data: flag\n    });\n  }\n\n  /**\n   * Get the group colour.\n   *\n   * @returns {string} The colour as hex string.\n   */\n  getColour() {\n    return this.#colour;\n  }\n\n  /**\n   * Set the group colour.\n   *\n   * @param {string} colour The colour as hex string.\n   */\n  setColour(colour) {\n    this.#colour = colour;\n  }\n\n  /**\n   * Add a new annotation.\n   *\n   * @param {Annotation} annotation The annotation to add.\n   */\n  add(annotation) {\n    this.#list.push(annotation);\n    /**\n     * Annotation add event.\n     *\n     * @event AnnotationGroup#annotationadd\n     * @type {object}\n     * @property {string} type The event type.\n     * @property {Annotation} data The added annnotation.\n     */\n    this.#fireEvent({\n      type: 'annotationadd',\n      data: annotation\n    });\n  }\n\n  /**\n   * Update an existing annotation.\n   *\n   * @param {Annotation} annotation The annotation to update.\n   * @param {string[]} [propKeys] Optional properties that got updated.\n   */\n  update(annotation, propKeys) {\n    const index = this.#list.findIndex((item) => item.id === annotation.id);\n    if (index !== -1) {\n      // update quantification if needed\n      if (propKeys.includes('mathShape') ||\n        propKeys.includes('textExpr')) {\n        annotation.updateQuantification();\n      }\n      // update list\n      this.#list[index] = annotation;\n      /**\n       * Annotation update event.\n       *\n       * @event AnnotationGroup#annotationupdate\n       * @type {object}\n       * @property {string} type The event type.\n       * @property {Annotation} data The added annnotation.\n       * @property {string[]} keys The properties that were updated.\n       */\n      this.#fireEvent({\n        type: 'annotationupdate',\n        data: annotation,\n        keys: propKeys\n      });\n    } else {\n      logger.warn('Cannot find annotation to update');\n    }\n  }\n\n  /**\n   * Remove an annotation.\n   *\n   * @param {string} id The id of the annotation to remove.\n   */\n  remove(id) {\n    const index = this.#list.findIndex((item) => item.id === id);\n    if (index !== -1) {\n      const annotation = this.#list.splice(index, 1)[0];\n      /**\n       * Annotation update event.\n       *\n       * @event AnnotationGroup#annotationremove\n       * @type {object}\n       * @property {string} type The event type.\n       * @property {Annotation} data The added annnotation.\n       * @property {string[]} keys The properties that were updated.\n       */\n      this.#fireEvent({\n        type: 'annotationremove',\n        data: annotation\n      });\n    } else {\n      logger.warn('Cannot find annotation to remove');\n    }\n  }\n\n  /**\n   * Set the associated view controller.\n   *\n   * @param {ViewController} viewController The associated view controller.\n   */\n  setViewController(viewController) {\n    for (const item of this.#list) {\n      item.setViewController(viewController);\n      item.updateQuantification();\n    }\n  }\n\n  /**\n   * Find an annotation.\n   *\n   * @param {string} id The id of the annotation to find.\n   * @returns {Annotation|undefined} The found annotation.\n   */\n  find(id) {\n    return this.#list.find((item) => item.id === id);\n  }\n\n  /**\n   * Get the meta data.\n   *\n   * @returns {Object<string, any>} The meta data.\n   */\n  getMeta() {\n    return this.#meta;\n  }\n\n  /**\n   * Check if this list contains a meta data value.\n   *\n   * @param {string} key The key to check.\n   * @returns {boolean} True if the meta data is present.\n   */\n  hasMeta(key) {\n    return typeof this.#meta[key] !== 'undefined';\n  }\n\n  /**\n   * Get a meta data value.\n   *\n   * @param {string} key The meta data key.\n   * @returns {string|object} The meta data value.\n   */\n  getMetaValue(key) {\n    return this.#meta[key];\n  }\n\n  /**\n   * Set a meta data.\n   *\n   * @param {string} key The meta data key.\n   * @param {string|object} value The value of the meta data.\n   */\n  setMetaValue(key, value) {\n    this.#meta[key] = value;\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n}\n","import {AnnotationGroup} from '../image/annotationGroup';\nimport {\n  RemoveAnnotationCommand,\n  UpdateAnnotationCommand\n} from '../tools/drawCommands';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Annotation} from '../image/annotation';\n/* eslint-enable no-unused-vars */\n\n/**\n * Draw controller.\n */\nexport class DrawController {\n\n  /**\n   * The annotation group.\n   *\n   * @type {AnnotationGroup}\n   */\n  #annotationGroup;\n\n  /**\n   * Get an annotation.\n   *\n   * @param {string} id The annotation id.\n   * @returns {Annotation|undefined} The annotation.\n   */\n  getAnnotation(id) {\n    return this.#annotationGroup.find(id);\n  }\n\n  /**\n   * Get the annotation group.\n   *\n   * @returns {AnnotationGroup} The list.\n   */\n  getAnnotationGroup() {\n    return this.#annotationGroup;\n  }\n\n  /**\n   * Check if the annotation group is editable.\n   *\n   * @returns {boolean} True if editable.\n   */\n  isAnnotationGroupEditable() {\n    return this.#annotationGroup.isEditable();\n  }\n\n  /**\n   * Set the annotation group editability.\n   *\n   * @param {boolean} flag True to make the annotation group editable.\n   */\n  setAnnotationGroupEditable(flag) {\n    this.#annotationGroup.setEditable(flag);\n  }\n\n  /**\n   * Add an annotation.\n   *\n   * @param {Annotation} annotation The annotation to add.\n   */\n  addAnnotation(annotation) {\n    this.#annotationGroup.add(annotation);\n  }\n\n  /**\n   * Update an anotation from the list.\n   *\n   * @param {Annotation} annotation The annotation to update.\n   * @param {string[]} [propKeys] Optional properties that got updated.\n   */\n  updateAnnotation(annotation, propKeys) {\n    this.#annotationGroup.update(annotation, propKeys);\n  }\n\n  /**\n   * Remove an anotation for the list.\n   *\n   * @param {string} id The id of the annotation to remove.\n   */\n  removeAnnotation(id) {\n    this.#annotationGroup.remove(id);\n  }\n\n  /**\n   * Remove an annotation via a remove command (triggers draw actions).\n   *\n   * @param {string} id The annotation id.\n   * @param {Function} exeCallback The undo stack callback.\n   */\n  removeAnnotationWithCommand(id, exeCallback) {\n    const annotation = this.getAnnotation(id);\n    if (typeof annotation === 'undefined') {\n      logger.warn(\n        'Cannot create remove command for undefined annotation: ' + id);\n      return;\n    }\n    // create remove annotation command\n    const command = new RemoveAnnotationCommand(annotation, this);\n    // add command to undo stack\n    exeCallback(command);\n    // execute command: triggers draw remove\n    command.execute();\n  }\n\n  /**\n   * Update an annotation via an update command (triggers draw actions).\n   *\n   * @param {string} id The annotation id.\n   * @param {object} originalProps The original annotation properties\n   *   that will be updated.\n   * @param {object} newProps The new annotation properties\n   *   that will replace the original ones.\n   * @param {Function} exeCallback The undo stack callback.\n   */\n  updateAnnotationWithCommand(id, originalProps, newProps, exeCallback) {\n    const annotation = this.getAnnotation(id);\n    if (typeof annotation === 'undefined') {\n      logger.warn(\n        'Cannot create update command for undefined annotation: ' + id);\n      return;\n    }\n    // create remove annotation command\n    const command = new UpdateAnnotationCommand(\n      annotation, originalProps, newProps, this);\n    // add command to undo stack\n    exeCallback(command);\n    // execute command: triggers draw remove\n    command.execute();\n  }\n\n  /**\n   * Remove all annotations via remove commands (triggers draw actions).\n   *\n   * @param {Function} exeCallback The undo stack callback.\n   */\n  removeAllAnnotationsWithCommand(exeCallback) {\n    for (const annotation of this.#annotationGroup.getList()) {\n      this.removeAnnotationWithCommand(annotation.id, exeCallback);\n    }\n  }\n\n  /**\n   * @param {AnnotationGroup} [group] Optional annotation group.\n   */\n  constructor(group) {\n    if (typeof group !== 'undefined') {\n      this.#annotationGroup = group;\n    } else {\n      this.#annotationGroup = new AnnotationGroup();\n    }\n  }\n\n  /**\n   * Check if the annotation group contains a meta data value.\n   *\n   * @param {string} key The key to check.\n   * @returns {boolean} True if the meta data is present.\n   */\n  hasAnnotationMeta(key) {\n    return this.#annotationGroup.hasMeta(key);\n  }\n\n  /**\n   * Set an annotation meta data.\n   *\n   * @param {string} key The meta data to set.\n   * @param {string} value The value of the meta data.\n   */\n  setAnnotationMeta(key, value) {\n    this.#annotationGroup.setMetaValue(key, value);\n  }\n\n} // class DrawController\n","import {ListenerHandler} from '../utils/listen';\nimport {DrawController} from '../app/drawController';\nimport {getScaledOffset} from './layerGroup';\nimport {InteractionEventNames} from './generic';\nimport {logger} from '../utils/logger';\nimport {toStringId} from '../utils/array';\nimport {precisionRound} from '../utils/string';\nimport {AddAnnotationCommand} from '../tools/drawCommands';\nimport {\n  isNodeWithId,\n  isPositionNode,\n  isNodeNameShape,\n  isNodeNameLabel\n} from '../tools/drawBounds';\nimport {Style} from '../gui/style';\nimport {Line} from '../math/line';\nimport {Rectangle} from '../math/rectangle';\nimport {ROI} from '../math/roi';\nimport {Protractor} from '../math/protractor';\nimport {Ellipse} from '../math/ellipse';\nimport {Circle} from '../math/circle';\nimport {Point2D} from '../math/point';\n\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point, Point3D} from '../math/point';\nimport {Index} from '../math/index';\nimport {Vector3D} from '../math/vector';\nimport {Scalar2D, Scalar3D} from '../math/scalar';\nimport {PlaneHelper} from '../image/planeHelper';\nimport {Annotation} from '../image/annotation';\nimport {AnnotationGroup} from '../image/annotationGroup';\nimport {DrawShapeHandler} from '../tools/drawShapeHandler';\n/* eslint-enable no-unused-vars */\n\n/**\n * Debug function to output the layer hierarchy as text.\n *\n * @param {object} layer The Konva layer.\n * @param {string} prefix A display prefix (used in recursion).\n * @returns {string} A text representation of the hierarchy.\n */\n// function getHierarchyLog(layer, prefix) {\n//   if (typeof prefix === 'undefined') {\n//     prefix = '';\n//   }\n//   const kids = layer.getChildren();\n//   let log = prefix + '|__ ' + layer.name() + ': ' + layer.id() + '\\n';\n//   for (let i = 0; i < kids.length; ++i) {\n//     log += getHierarchyLog(kids[i], prefix + '    ');\n//   }\n//   return log;\n// }\n\n/**\n * Draw layer.\n */\nexport class DrawLayer {\n\n  /**\n   * The container div.\n   *\n   * @type {HTMLDivElement}\n   */\n  #containerDiv;\n\n  /**\n   * Konva stage.\n   *\n   * @type {Konva.Stage}\n   */\n  #konvaStage = null;\n\n  /**\n   * The layer base size as {x,y}.\n   *\n   * @type {Scalar2D}\n   */\n  #baseSize;\n\n  /**\n   * The layer base spacing as {x,y}.\n   *\n   * @type {Scalar2D}\n   */\n  #baseSpacing;\n\n  /**\n   * The layer fit scale.\n   *\n   * @type {Scalar2D}\n   */\n  #fitScale = {x: 1, y: 1};\n\n  /**\n   * The layer flip scale.\n   *\n   * @type {Scalar3D}\n   */\n  #flipScale = {x: 1, y: 1, z: 1};\n\n  /**\n   * The base layer offset.\n   *\n   * @type {Scalar2D}\n   */\n  #baseOffset = {x: 0, y: 0};\n\n  /**\n   * The view offset.\n   *\n   * @type {Scalar2D}\n   */\n  #viewOffset = {x: 0, y: 0};\n\n  /**\n   * The zoom offset.\n   *\n   * @type {Scalar2D}\n   */\n  #zoomOffset = {x: 0, y: 0};\n\n  /**\n   * The pan offset.\n   *\n   * @type {Scalar2D}\n   */\n  #panOffset = {x: 0, y: 0};\n\n  /**\n   * The flip offset.\n   *\n   * @type {Scalar2D}\n   */\n  #flipOffset = {x: 0, y: 0};\n\n  /**\n   * The draw controller.\n   *\n   * @type {DrawController}\n   */\n  #drawController;\n\n  /**\n   * The plane helper.\n   *\n   * @type {PlaneHelper}\n   */\n  #planeHelper;\n\n  /**\n   * The associated data id.\n   *\n   * @type {string}\n   */\n  #dataId;\n\n  /**\n   * The reference layer id.\n   *\n   * @type {string}\n   */\n  #referenceLayerId;\n\n  /**\n   * Current position group id.\n   *\n   * @type {string|undefined}\n   */\n  #currentPosGroupId;\n\n  /**\n   * Draw shape handler.\n   *\n   * @type {DrawShapeHandler|undefined}\n   */\n  #shapeHandler;\n\n  /**\n   * Visible labels flag.\n   *\n   * @type {boolean}\n   */\n  #visibleLabels = true;\n\n  /**\n   * @param {HTMLDivElement} containerDiv The layer div, its id will be used\n   *   as this layer id.\n   */\n  constructor(containerDiv) {\n    this.#containerDiv = containerDiv;\n    // specific css class name\n    this.#containerDiv.className += ' drawLayer';\n  }\n\n  /**\n   * Set the draw shape handler.\n   *\n   * @param {DrawShapeHandler|undefined} handler The shape handler.\n   */\n  setShapeHandler(handler) {\n    this.#shapeHandler = handler;\n  }\n\n  /**\n   * Get the associated data id.\n   *\n   * @returns {string} The id.\n   */\n  getDataId() {\n    return this.#dataId;\n  }\n\n  /**\n   * Get the reference layer id.\n   *\n   * @returns {string} The id.\n   */\n  getReferenceLayerId() {\n    return this.#referenceLayerId;\n  }\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Get the Konva stage.\n   *\n   * @returns {Konva.Stage} The stage.\n   */\n  getKonvaStage() {\n    return this.#konvaStage;\n  }\n\n  /**\n   * Get the Konva layer.\n   *\n   * @returns {Konva.Layer} The layer.\n   */\n  getKonvaLayer() {\n    // there should only be one layer\n    return this.#konvaStage.getLayers()[0];\n  }\n\n  /**\n   * Get the draw controller.\n   *\n   * @returns {DrawController} The controller.\n   */\n  getDrawController() {\n    return this.#drawController;\n  }\n\n  /**\n   * Set the plane helper.\n   *\n   * @param {PlaneHelper} helper The helper.\n   */\n  setPlaneHelper(helper) {\n    this.#planeHelper = helper;\n  }\n\n  // common layer methods [start] ---------------\n\n  /**\n   * Get the id of the layer.\n   *\n   * @returns {string} The string id.\n   */\n  getId() {\n    return this.#containerDiv.id;\n  }\n\n  /**\n   * Remove the HTML element from the DOM.\n   */\n  removeFromDOM() {\n    this.#containerDiv.remove();\n  }\n\n  /**\n   * Get the layer base size (without scale).\n   *\n   * @returns {Scalar2D} The size as {x,y}.\n   */\n  getBaseSize() {\n    return this.#baseSize;\n  }\n\n  /**\n   * Get the layer opacity.\n   *\n   * @returns {number} The opacity ([0:1] range).\n   */\n  getOpacity() {\n    return this.#konvaStage.opacity();\n  }\n\n  /**\n   * Set the layer opacity.\n   *\n   * @param {number} alpha The opacity ([0:1] range).\n   */\n  setOpacity(alpha) {\n    this.#konvaStage.opacity(Math.min(Math.max(alpha, 0), 1));\n  }\n\n  /**\n   * Add a flip offset along the layer X axis.\n   */\n  addFlipOffsetX() {\n    // flip offset\n    const scale = this.#konvaStage.scale();\n    const size = this.#konvaStage.size();\n    this.#flipOffset.x += size.width / scale.x;\n    // apply\n    const offset = this.#konvaStage.offset();\n    offset.x += this.#flipOffset.x;\n    this.#konvaStage.offset(offset);\n  }\n\n  /**\n   * Add a flip offset along the layer Y axis.\n   */\n  addFlipOffsetY() {\n    // flip offset\n    const scale = this.#konvaStage.scale();\n    const size = this.#konvaStage.size();\n    this.#flipOffset.y += size.height / scale.y;\n    // apply\n    const offset = this.#konvaStage.offset();\n    offset.y += this.#flipOffset.y;\n    this.#konvaStage.offset(offset);\n  }\n\n  /**\n   * Flip the scale along the layer X axis.\n   */\n  flipScaleX() {\n    this.#flipScale.x *= -1;\n  }\n\n  /**\n   * Flip the scale along the layer Y axis.\n   */\n  flipScaleY() {\n    this.#flipScale.y *= -1;\n  }\n\n  /**\n   * Flip the scale along the layer Z axis.\n   */\n  flipScaleZ() {\n    this.#flipScale.z *= -1;\n  }\n\n  /**\n   * Set the layer scale.\n   *\n   * @param {Scalar3D} newScale The scale as {x,y,z}.\n   * @param {Point3D} [center] The scale center.\n   */\n  setScale(newScale, center) {\n    const orientedNewScale =\n      this.#planeHelper.getTargetOrientedPositiveXYZ({\n        x: newScale.x * this.#flipScale.x,\n        y: newScale.y * this.#flipScale.y,\n        z: newScale.z * this.#flipScale.z,\n      });\n    const finalNewScale = {\n      x: this.#fitScale.x * orientedNewScale.x,\n      y: this.#fitScale.y * orientedNewScale.y\n    };\n\n    const offset = this.#konvaStage.offset();\n\n    if (Math.abs(newScale.x) === 1 &&\n      Math.abs(newScale.y) === 1 &&\n      Math.abs(newScale.z) === 1) {\n      // reset zoom offset for scale=1\n      const resetOffset = {\n        x: offset.x - this.#zoomOffset.x,\n        y: offset.y - this.#zoomOffset.y\n      };\n      // store new offset\n      this.#zoomOffset = {x: 0, y: 0};\n      this.#konvaStage.offset(resetOffset);\n    } else {\n      if (typeof center !== 'undefined') {\n        let worldCenter = this.#planeHelper.getPlaneOffsetFromOffset3D({\n          x: center.getX(),\n          y: center.getY(),\n          z: center.getZ()\n        });\n        // center was obtained with viewLayer.displayToMainPlanePos\n        // compensated for baseOffset\n        // TODO: justify...\n        worldCenter = {\n          x: worldCenter.x + this.#baseOffset.x,\n          y: worldCenter.y + this.#baseOffset.y\n        };\n\n        const newOffset = getScaledOffset(\n          offset, this.#konvaStage.scale(), finalNewScale, worldCenter);\n\n        const newZoomOffset = {\n          x: this.#zoomOffset.x + newOffset.x - offset.x,\n          y: this.#zoomOffset.y + newOffset.y - offset.y\n        };\n        // store new offset\n        this.#zoomOffset = newZoomOffset;\n        this.#konvaStage.offset(newOffset);\n      }\n    }\n\n    this.#konvaStage.scale(finalNewScale);\n    // update labels\n    this.#updateLabelScale(finalNewScale);\n  }\n\n  /**\n   * Initialise the layer scale.\n   *\n   * @param {Scalar3D} newScale The scale as {x,y,z}.\n   * @param {Scalar2D} absoluteZoomOffset The zoom offset as {x,y}\n   *   without the fit scale (as provided by getAbsoluteZoomOffset).\n   */\n  initScale(newScale, absoluteZoomOffset) {\n    const orientedNewScale = this.#planeHelper.getTargetOrientedPositiveXYZ({\n      x: newScale.x * this.#flipScale.x,\n      y: newScale.y * this.#flipScale.y,\n      z: newScale.z * this.#flipScale.z,\n    });\n    const finalNewScale = {\n      x: this.#fitScale.x * orientedNewScale.x,\n      y: this.#fitScale.y * orientedNewScale.y\n    };\n    this.#konvaStage.scale(finalNewScale);\n\n    this.#zoomOffset = {\n      x: absoluteZoomOffset.x / this.#fitScale.x,\n      y: absoluteZoomOffset.y / this.#fitScale.y\n    };\n    const offset = this.#konvaStage.offset();\n    this.#konvaStage.offset({\n      x: offset.x + this.#zoomOffset.x,\n      y: offset.y + this.#zoomOffset.y\n    });\n  }\n\n  /**\n   * Set the layer offset.\n   *\n   * @param {Scalar3D} newOffset The offset as {x,y,z}.\n   */\n  setOffset(newOffset) {\n    const newPanOffset =\n      this.#planeHelper.getPlaneOffsetFromOffset3D(newOffset);\n    const offset = this.#konvaStage.offset();\n    this.#konvaStage.offset({\n      x: offset.x - this.#panOffset.x + newPanOffset.x,\n      y: offset.y - this.#panOffset.y + newPanOffset.y\n    });\n    this.#panOffset = newPanOffset;\n  }\n\n  /**\n   * Set the base layer offset. Updates the layer offset.\n   *\n   * @param {Vector3D} scrollOffset The scroll offset vector.\n   * @param {Vector3D} planeOffset The plane offset vector.\n   * @returns {boolean} True if the offset was updated.\n   */\n  setBaseOffset(scrollOffset, planeOffset) {\n    const scrollDimIndex = this.#planeHelper.getNativeScrollDimIndex();\n    const newOffset = this.#planeHelper.getPlaneOffsetFromOffset3D({\n      x: scrollDimIndex === 0 ? scrollOffset.getX() : planeOffset.getX(),\n      y: scrollDimIndex === 1 ? scrollOffset.getY() : planeOffset.getY(),\n      z: scrollDimIndex === 2 ? scrollOffset.getZ() : planeOffset.getZ(),\n    });\n    const needsUpdate = this.#baseOffset.x !== newOffset.x ||\n      this.#baseOffset.y !== newOffset.y;\n    // reset offset if needed\n    if (needsUpdate) {\n      const offset = this.#konvaStage.offset();\n      this.#konvaStage.offset({\n        x: offset.x - this.#baseOffset.x + newOffset.x,\n        y: offset.y - this.#baseOffset.y + newOffset.y\n      });\n      this.#baseOffset = newOffset;\n    }\n    return needsUpdate;\n  }\n\n  /**\n   * Display the layer.\n   *\n   * @param {boolean} flag Whether to display the layer or not.\n   */\n  display(flag) {\n    this.#containerDiv.style.display = flag ? '' : 'none';\n  }\n\n  /**\n   * Check if the layer is visible.\n   *\n   * @returns {boolean} True if the layer is visible.\n   */\n  isVisible() {\n    return this.#containerDiv.style.display === '';\n  }\n\n  /**\n   * Draw the content (imageData) of the layer.\n   * The imageData variable needs to be set.\n   */\n  draw() {\n    this.#konvaStage.draw();\n  }\n\n  /**\n   * Initialise the layer: set the canvas and context.\n   *\n   * @param {Scalar2D} size The image size as {x,y}.\n   * @param {Scalar2D} spacing The image spacing as {x,y}.\n   * @param {string} refLayerId The reference image dataId.\n   */\n  initialise(size, spacing, refLayerId) {\n    // set locals\n    this.#baseSize = size;\n    this.#baseSpacing = spacing;\n    this.#referenceLayerId = refLayerId;\n\n    // create stage\n    this.#konvaStage = new Konva.Stage({\n      container: this.#containerDiv,\n      width: this.#baseSize.x,\n      height: this.#baseSize.y,\n      listening: false\n    });\n    // reset style\n    // (avoids a not needed vertical scrollbar)\n    this.#konvaStage.getContent().setAttribute('style', '');\n\n    // create layer\n    const konvaLayer = new Konva.Layer({\n      listening: false,\n      visible: true\n    });\n    this.#konvaStage.add(konvaLayer);\n  }\n\n  /**\n   * Set the annotation group.\n   *\n   * @param {AnnotationGroup} annotationGroup The annotation group.\n   * @param {string} dataId The associated data id.\n   * @param {object} exeCallback The undo stack callback.\n   */\n  setAnnotationGroup(annotationGroup, dataId, exeCallback) {\n    this.#dataId = dataId;\n    // local listeners\n    annotationGroup.addEventListener('annotationadd', (event) => {\n      // draw annotation\n      this.#addAnnotationDraw(event.data, true);\n      this.getKonvaLayer().draw();\n    });\n    annotationGroup.addEventListener('annotationupdate', (event) => {\n      // update annotation draw\n      this.#updateAnnotationDraw(event.data);\n      this.getKonvaLayer().draw();\n    });\n    annotationGroup.addEventListener('annotationremove', (event) => {\n      // remove annotation draw\n      this.#removeAnnotationDraw(event.data);\n      this.getKonvaLayer().draw();\n    });\n    annotationGroup.addEventListener(\n      'annotationgroupeditablechange',\n      (event) => {\n        this.activateCurrentPositionShapes(event.data);\n      }\n    );\n\n    // create draw controller\n    this.#drawController = new DrawController(annotationGroup);\n\n    // annotations are allready in the annotation list,\n    // -> no need to add them, just draw and save command\n    if (annotationGroup.getLength() !== 0) {\n      for (const annotation of annotationGroup.getList()) {\n        // draw annotation\n        this.#addAnnotationDraw(annotation, false);\n        // create the draw command\n        const command = new AddAnnotationCommand(\n          annotation, this.getDrawController());\n        // add command to undo stack\n        exeCallback(command);\n      }\n    }\n  }\n\n  /**\n   * Activate shapes at current position.\n   *\n   * @param {boolean} flag The flag to activate or not.\n   */\n  activateCurrentPositionShapes(flag) {\n    const konvaLayer = this.getKonvaLayer();\n\n    // stop stage listening\n    this.#konvaStage.listening(false);\n\n    if (typeof this.#shapeHandler !== 'undefined') {\n      // reset shape editor (remove anchors)\n      this.#shapeHandler.disableAndResetEditor();\n      // remove listeners for all position groups\n      const allPosGroups = konvaLayer.getChildren();\n      for (const posGroup of allPosGroups) {\n        if (posGroup instanceof Konva.Group) {\n          posGroup.getChildren().forEach((group) => {\n            if (group instanceof Konva.Group) {\n              this.#shapeHandler.removeShapeListeners(group);\n            }\n          });\n        }\n      }\n    }\n\n    // activate shape listeners if possible\n    const drawController = this.getDrawController();\n    if (flag &&\n      drawController.getAnnotationGroup().isEditable()) {\n      // start stage listening\n      this.#konvaStage.listening(true);\n      // shape groups at the current position\n      const shapeGroups =\n        this.#getCurrentPosGroup().getChildren();\n      // listen if we have shapes\n      if (shapeGroups.length !== 0) {\n        konvaLayer.listening(true);\n      }\n      // add listeners for position group\n      if (typeof this.#shapeHandler !== 'undefined') {\n        shapeGroups.forEach((group) => {\n          if (group instanceof Konva.Group) {\n            const annotation = drawController.getAnnotation(group.id());\n            this.#shapeHandler.addShapeGroupListeners(group, annotation, this);\n          }\n        });\n      }\n    }\n\n    konvaLayer.draw();\n  }\n\n  /**\n   * Get the position group id for an annotation.\n   *\n   * @param {Annotation} annotation The target annotation.\n   * @returns {string|undefined} The group id.\n   */\n  #getAnnotationPosGroupId(annotation) {\n    let points;\n    // annotation planePoints are only present\n    // for non aquisition plane\n    if (typeof annotation.planePoints !== 'undefined') {\n      // use plane points\n      points = annotation.planePoints;\n    } else {\n      // just use plane origin\n      points = [annotation.planeOrigin];\n    }\n    return this.#getPositionId(points);\n  }\n\n  /**\n   * Get a string id from input plane points.\n   *\n   * @param {Point3D[]} points A list of points that defined a plane.\n   * @returns {string} The string id.\n   */\n  #getPositionId(points) {\n    let res = '';\n    for (const point of points) {\n      if (res.length !== 0) {\n        res += '-';\n      }\n      const posValues = [\n        precisionRound(point.getX(), 2),\n        precisionRound(point.getY(), 2),\n        precisionRound(point.getZ(), 2),\n      ];\n      res += toStringId(posValues);\n    }\n    return res;\n  }\n\n  /**\n   * Find the shape group associated to an annotation.\n   *\n   * @param {Annotation} annotation The annotation.\n   * @returns {Konva.Group|undefined} The shape group.\n   */\n  #findShapeGroup(annotation) {\n    let res;\n\n    const posGroupId = this.#getAnnotationPosGroupId(annotation);\n    const layerChildren = this.getKonvaLayer().getChildren(\n      isNodeWithId(posGroupId));\n    if (layerChildren.length !== 0) {\n      const posGroup = layerChildren[0];\n      if (!(posGroup instanceof Konva.Group)) {\n        return;\n      }\n      const posChildren = posGroup.getChildren(\n        isNodeWithId(annotation.id));\n      if (posChildren.length !== 0 &&\n        posChildren[0] instanceof Konva.Group) {\n        res = posChildren[0];\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Draw an annotation: create the shape group and add it to\n   *   the Konva layer.\n   *\n   * @param {Annotation} annotation The annotation to draw.\n   * @param {boolean} visible The position group visibility.\n   */\n  #addAnnotationDraw(annotation, visible) {\n    // check for compatible view\n    if (!annotation.isCompatibleView(this.#planeHelper)) {\n      return;\n    }\n    const posGroupId = this.#getAnnotationPosGroupId(annotation);\n    // Get or create position-group if it does not exist and\n    // append it to konvaLayer\n    let posGroup = this.getKonvaLayer().getChildren(\n      isNodeWithId(posGroupId))[0];\n    if (typeof posGroup === 'undefined') {\n      posGroup = new Konva.Group({\n        id: posGroupId,\n        name: 'position-group',\n        visible: visible\n      });\n      this.getKonvaLayer().add(posGroup);\n    }\n    if (!(posGroup instanceof Konva.Group)) {\n      return;\n    };\n\n    const style = new Style();\n    const stage = this.getKonvaStage();\n    style.setZoomScale(stage.scale());\n\n    // shape group (use first one since it will be removed from\n    // the group when we change it)\n    const factory = annotation.getFactory();\n    const shapeGroup = factory.createShapeGroup(annotation, style);\n    // add group to posGroup (switches its parent)\n    posGroup.add(shapeGroup);\n\n    // activate shape if possible\n    if (visible &&\n      typeof this.#shapeHandler !== 'undefined'\n    ) {\n      this.#shapeHandler.addShapeGroupListeners(shapeGroup, annotation, this);\n    }\n    // set label visibility\n    this.setLabelVisibility(shapeGroup);\n  }\n\n  /**\n   * Remove an annotation draw.\n   *\n   * @param {Annotation} annotation The annotation to remove.\n   * @returns {boolean} True if the shape group has been found and removed.\n   */\n  #removeAnnotationDraw(annotation) {\n    const shapeGroup = this.#findShapeGroup(annotation);\n    if (!(shapeGroup instanceof Konva.Group)) {\n      logger.debug('No shape group to remove');\n      return false;\n    };\n    shapeGroup.remove();\n    return true;\n  }\n\n  /**\n   * Update an annotation draw.\n   *\n   * @param {Annotation} annotation The annotation to update.\n   */\n  #updateAnnotationDraw(annotation) {\n    if (this.#removeAnnotationDraw(annotation)) {\n      this.#addAnnotationDraw(annotation, true);\n    }\n  }\n\n  /**\n   * Fit the layer to its parent container.\n   *\n   * @param {Scalar2D} containerSize The container size as {x,y}.\n   * @param {number} divToWorldSizeRatio The div to world size ratio.\n   * @param {Scalar2D} fitOffset The fit offset as {x,y}.\n   */\n  fitToContainer(containerSize, divToWorldSizeRatio, fitOffset) {\n    // fit scale\n    const newFitScale = {\n      x: divToWorldSizeRatio * this.#baseSpacing.x,\n      y: divToWorldSizeRatio * this.#baseSpacing.y\n    };\n    const fitRatio = {\n      x: newFitScale.x / this.#fitScale.x,\n      y: newFitScale.y / this.#fitScale.y\n    };\n\n    // size ratio (calculated before update)\n    const sizeRatio = {\n      x: containerSize.x / (this.#konvaStage.width() * fitRatio.x),\n      y: containerSize.y / (this.#konvaStage.height() * fitRatio.y)\n    };\n\n    // set canvas size if different from previous\n    if (this.#konvaStage.width() !== containerSize.x ||\n      this.#konvaStage.height() !== containerSize.y) {\n      this.#konvaStage.width(containerSize.x);\n      this.#konvaStage.height(containerSize.y);\n    }\n\n    // #scale = inputScale * fitScale * flipScale\n    // flipScale does not change here, we can omit it\n    // newScale = (#scale / fitScale) * newFitScale\n    const newScale = {\n      x: this.#konvaStage.scale().x * fitRatio.x,\n      y: this.#konvaStage.scale().y * fitRatio.y\n    };\n\n    // set scales if different from previous\n    if (this.#konvaStage.scale().x !== newScale.x ||\n      this.#konvaStage.scale().y !== newScale.y) {\n      this.#fitScale = newFitScale;\n      this.#konvaStage.scale(newScale);\n      this.#updateLabelScale(newScale);\n    }\n\n    // view offset\n    const newViewOffset = {\n      x: fitOffset.x / newFitScale.x,\n      y: fitOffset.y / newFitScale.y\n    };\n    // flip offset\n    const scaledImageSize = {\n      x: containerSize.x / newFitScale.x,\n      y: containerSize.y / newFitScale.y\n    };\n    const newFlipOffset = {\n      x: this.#flipOffset.x !== 0 ? scaledImageSize.x : 0,\n      y: this.#flipOffset.y !== 0 ? scaledImageSize.y : 0,\n    };\n\n    // set offsets if different from previous\n    if (this.#viewOffset.x !== newViewOffset.x ||\n      this.#viewOffset.y !== newViewOffset.y ||\n      this.#flipOffset.x !== newFlipOffset.x ||\n      this.#flipOffset.y !== newFlipOffset.y) {\n      const newZoomOffset = {\n        x: this.#zoomOffset.x * sizeRatio.x,\n        y: this.#zoomOffset.y * sizeRatio.y\n      };\n      // update global offset\n      this.#konvaStage.offset({\n        x: this.#konvaStage.offset().x +\n          newViewOffset.x - this.#viewOffset.x +\n          newFlipOffset.x - this.#flipOffset.x +\n          newZoomOffset.x - this.#zoomOffset.x,\n        y: this.#konvaStage.offset().y +\n          newViewOffset.y - this.#viewOffset.y +\n          newFlipOffset.y - this.#flipOffset.y +\n          newZoomOffset.y - this.#zoomOffset.y\n      });\n      // update private local offsets\n      this.#flipOffset = newFlipOffset;\n      this.#viewOffset = newViewOffset;\n      this.#zoomOffset = newZoomOffset;\n    }\n  }\n\n  /**\n   * Check the visibility of an annotation.\n   *\n   * @param {string} id The id of the annotation.\n   * @returns {boolean} True if the annotation is visible.\n   */\n  isAnnotationVisible(id) {\n    // get the group (annotation and group have same id)\n    const group = this.#getGroup(id);\n    if (typeof group === 'undefined') {\n      return false;\n    }\n    // get visibility\n    return group.isVisible();\n  }\n\n  /**\n   * Set the visibility of an annotation.\n   *\n   * @param {string} id The id of the annotation.\n   * @param {boolean} [visible] True to set to visible,\n   *   will toggle visibility if not defined.\n   * @returns {boolean} False if the annotation shape cannot be found.\n   */\n  setAnnotationVisibility(id, visible) {\n    // get the group (annotation and group have same id)\n    const group = this.#getGroup(id);\n    if (typeof group === 'undefined') {\n      return false;\n    }\n    // if not set, toggle visibility\n    if (typeof visible === 'undefined') {\n      visible = !group.isVisible();\n    }\n    group.visible(visible);\n\n    // udpate\n    this.draw();\n\n    return true;\n  }\n\n  /**\n   * Set the visibility of all labels.\n   *\n   * @param {boolean} [visible] True to set to visible,\n   *   will toggle visibility if not defined.\n   */\n  setLabelsVisibility(visible) {\n    this.#visibleLabels = visible;\n\n    const posGroups = this.getKonvaLayer().getChildren();\n    for (const posGroup of posGroups) {\n      if (posGroup instanceof Konva.Group) {\n        const shapeGroups = posGroup.getChildren();\n        for (const shapeGroup of shapeGroups) {\n          if (shapeGroup instanceof Konva.Group) {\n            this.#setLabelVisibility(shapeGroup, visible);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Set a shape group label visibility.\n   *\n   * @param {Konva.Group} shapeGroup The shape group.\n   * @param {boolean} [visible] True to set to visible,\n   *   will toggle visibility if not defined.\n   */\n  #setLabelVisibility(shapeGroup, visible) {\n    const label = shapeGroup.getChildren(isNodeNameLabel)[0];\n    if (!(label instanceof Konva.Label)) {\n      return;\n    }\n    // if not set, toggle visibility\n    if (typeof visible === 'undefined') {\n      visible = !label.isVisible();\n    }\n    // set visible only for non empty text\n    if (typeof label.getText() !== 'undefined' &&\n      label.getText().text().length !== 0) {\n      label.visible(visible);\n      const connector = shapeGroup.getChildren(node =>\n        (node.className === 'Line') && node.name() === 'connector')[0];\n      if (connector) {\n        connector.visible(visible);\n      }\n    }\n  }\n\n  /**\n   * Set a shape group label visibility according to\n   *  this layer setting.\n   *\n   * @param {Konva.Group} shapeGroup The shape group.\n   */\n  setLabelVisibility(shapeGroup) {\n    this.#setLabelVisibility(shapeGroup, this.#visibleLabels);\n  }\n\n  /**\n   * Delete a Draw from the stage.\n   *\n   * @deprecated Since v0.34, please switch to `annotationGroup.remove`.\n   * @param {string} _id The id of the group to delete.\n   * @param {Function} _exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   */\n  deleteDraw(_id, _exeCallback) {\n    // does nothing\n  }\n\n  /**\n   * Delete all Draws from the stage.\n   *\n   * @deprecated Since v0.34, please switch to `annotationGroup.remove`.\n   * @param {Function} _exeCallback The callback to call once the\n   *  DeleteCommand has been executed.\n   */\n  deleteDraws(_exeCallback) {\n    // does nothing\n  }\n\n  /**\n   * Get the total number of draws of this layer\n   * (at all positions).\n   *\n   * @returns {number|undefined} The total number of draws.\n   */\n  getNumberOfDraws() {\n    const posGroups = this.getKonvaLayer().getChildren();\n    let count = 0;\n    for (const posGroup of posGroups) {\n      if (posGroup instanceof Konva.Group) {\n        count += posGroup.getChildren().length;\n      }\n    }\n    return count;\n  }\n\n  /**\n   * Enable and listen to container interaction events.\n   */\n  bindInteraction() {\n    this.#konvaStage.listening(true);\n    // allow pointer events\n    this.#containerDiv.style.pointerEvents = 'auto';\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      this.#containerDiv.addEventListener(names[i], this.#fireEvent);\n    }\n  }\n\n  /**\n   * Disable and stop listening to container interaction events.\n   */\n  unbindInteraction() {\n    this.#konvaStage.listening(false);\n    // disable pointer events\n    this.#containerDiv.style.pointerEvents = 'none';\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      this.#containerDiv.removeEventListener(names[i], this.#fireEvent);\n    }\n  }\n\n  /**\n   * Set the current position.\n   *\n   * @param {Point} position The new position.\n   * @param {Index} [index] Optional coresponding index.\n   * @returns {boolean} True if the position was updated.\n   */\n  setCurrentPosition(position, index) {\n    if (typeof index === 'undefined') {\n      index = this.#planeHelper.worldToIndex(position);\n    }\n    const planePoints = this.#planeHelper.getPlanePoints(position);\n    let points;\n    if (this.#planeHelper.isAquisitionOrientation()) {\n      // just use plane origin\n      points = [planePoints[0]];\n    } else {\n      // use plane points\n      points = planePoints;\n    }\n    const posGroupId = this.#getPositionId(points);\n\n    this.#activateDrawLayer(posGroupId);\n    // TODO: add check\n    this.#fireEvent({\n      type: 'positionchange',\n      value: [\n        index.getValues(),\n        position.getValues(),\n      ],\n      valid: true\n    });\n\n    return true;\n  }\n\n  /**\n   * Activate the current draw layer.\n   *\n   * @param {string} posGroupId The position group ID.\n   */\n  #activateDrawLayer(posGroupId) {\n    this.#currentPosGroupId = posGroupId;\n\n    // get all position groups\n    const posGroups = this.getKonvaLayer().getChildren(isPositionNode);\n    // reset or set the visible property\n    let visible;\n    for (let i = 0, leni = posGroups.length; i < leni; ++i) {\n      visible = false;\n      if (typeof posGroupId !== 'undefined' &&\n        posGroups[i].id() === posGroupId) {\n        visible = true;\n      }\n      // group members inherit the visible property\n      posGroups[i].visible(visible);\n    }\n\n    // show current draw layer\n    this.getKonvaLayer().draw();\n  }\n\n  /**\n   * Get the current position group.\n   *\n   * @returns {Konva.Group|undefined} The Konva group.\n   */\n  #getCurrentPosGroup() {\n    if (typeof this.#currentPosGroupId === 'undefined') {\n      return;\n    }\n    // get position groups\n    const posGroups = this.getKonvaLayer().getChildren((node) => {\n      return node.id() === this.#currentPosGroupId;\n    });\n    // if one group, use it\n    // if no group, create one\n    let posGroup;\n    if (posGroups.length === 1) {\n      if (posGroups[0] instanceof Konva.Group) {\n        posGroup = posGroups[0];\n      }\n    } else if (posGroups.length === 0) {\n      posGroup = new Konva.Group();\n      posGroup.name('position-group');\n      posGroup.id(this.#currentPosGroupId);\n      posGroup.visible(true); // dont inherit\n      // add new group to layer\n      this.getKonvaLayer().add(posGroup);\n    } else {\n      logger.warn('Unexpected number of draw position groups');\n    }\n    // return\n    return posGroup;\n  }\n\n  /**\n   * Get a Konva group using its id.\n   *\n   * @param {string} id The group id.\n   * @returns {Konva.Group|undefined} The Konva group.\n   */\n  #getGroup(id) {\n    return this.getKonvaLayer().findOne('#' + id);\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    event.srclayerid = this.getId();\n    event.dataid = this.#dataId;\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  // common layer methods [end] ---------------\n\n  /**\n   * Update label scale: compensate for it so\n   *   that label size stays visually the same.\n   *\n   * @param {Scalar2D} scale The scale to compensate for as {x,y}.\n   */\n  #updateLabelScale(scale) {\n    // same formula as in labelFactory::create\n    // compensate for scale and times 2 so that font 10 looks like a 10\n    const ratioX = 2 / scale.x;\n    const ratioY = 2 / scale.y;\n    // compensate scale for labels\n    const labels = this.#konvaStage.find('Label');\n    for (let i = 0; i < labels.length; ++i) {\n      labels[i].scale({x: ratioX, y: ratioY});\n    }\n  }\n\n} // DrawLayer class\n\n// *************************\n// legacy code to allow to convert old state into annotation\n// *************************\n\n/**\n * Draw meta data.\n */\nexport class DrawMeta {\n  /**\n   * Draw quantification.\n   *\n   * @type {object}\n   */\n  quantification;\n\n  /**\n   * Draw text expression. Can contain variables surrounded with '{}' that will\n   * be extracted from the quantification object.\n   *\n   * @type {string}\n   */\n  textExpr;\n}\n\n/**\n * Draw details.\n */\nexport class DrawDetails {\n  /**\n   * The draw ID.\n   *\n   * @type {number}\n   */\n  id;\n\n  /**\n   * The draw position: an Index converted to string.\n   *\n   * @type {string}\n   */\n  position;\n\n  /**\n   * The draw type.\n   *\n   * @type {string}\n   */\n  type;\n\n  /**\n   * The draw color: for example 'green', '#00ff00' or 'rgb(0,255,0)'.\n   *\n   * @type {string}\n   */\n  color;\n\n  /**\n   * The draw meta.\n   *\n   * @type {DrawMeta}\n   */\n  meta;\n}\n\n/**\n * Convert a KonvaLayer object to a list of annotations.\n *\n * @param {Array} drawings An array of drawings stored\n *   with 'KonvaLayer().toObject()'.\n * @param {DrawDetails[]} drawingsDetails An array of drawings details.\n * @returns {Annotation[]} The associated list of annotations.\n */\nexport function konvaToAnnotation(drawings, drawingsDetails) {\n  const annotations = [];\n\n  // regular Konva deserialize\n  const stateLayer = Konva.Node.create(drawings);\n\n  // get all position groups\n  const statePosGroups = stateLayer.getChildren(isPositionNode);\n\n  for (let i = 0, leni = statePosGroups.length; i < leni; ++i) {\n    const statePosGroup = statePosGroups[i];\n    const statePosKids = statePosGroup.getChildren();\n    for (let j = 0, lenj = statePosKids.length; j < lenj; ++j) {\n      const annotation = new Annotation();\n\n      // shape group (use first one since it will be removed from\n      // the group when we change it)\n      const stateGroup = statePosKids[0];\n      // annotation id\n      annotation.id = stateGroup.id();\n\n      // shape\n      const shape = stateGroup.getChildren(isNodeNameShape)[0];\n      // annotation colour\n      annotation.colour = shape.stroke();\n\n      if (stateGroup.name() === 'line-group') {\n        const points = shape.points();\n        annotation.mathShape = new Point2D(points[0], points[1]);\n        annotation.referencePoints = [\n          new Point2D(points[2], points[3])\n        ];\n      } else if (stateGroup.name() === 'ruler-group') {\n        const points = shape.points();\n        annotation.mathShape = new Line(\n          new Point2D(points[0], points[1]),\n          new Point2D(points[2], points[3])\n        );\n      } else if (stateGroup.name() === 'rectangle-group') {\n        annotation.mathShape = new Rectangle(\n          new Point2D(shape.x(), shape.y()),\n          new Point2D(shape.x() + shape.width(), shape.y() + shape.height())\n        );\n      } else if (stateGroup.name() === 'roi-group') {\n        const points = shape.points();\n        const pointsArray = [];\n        for (let i = 0; i < points.length; i = i + 2) {\n          pointsArray.push(new Point2D(points[i], points[i + 1]));\n        }\n        annotation.mathShape = new ROI(pointsArray);\n      } else if (stateGroup.name() === 'freeHand-group') {\n        logger.warn('Converting freehand into ROI shape');\n        const points = shape.points();\n        const pointsArray = [];\n        for (let i = 0; i < points.length; i = i + 2) {\n          pointsArray.push(new Point2D(points[i], points[i + 1]));\n        }\n        annotation.mathShape = new ROI(pointsArray);\n      } else if (stateGroup.name() === 'protractor-group') {\n        const points = shape.points();\n        annotation.mathShape = new Protractor([\n          new Point2D(points[0], points[1]),\n          new Point2D(points[2], points[3]),\n          new Point2D(points[4], points[5])\n        ]);\n      } else if (stateGroup.name() === 'ellipse-group') {\n        const absPosition = shape.absolutePosition();\n        annotation.mathShape = new Ellipse(\n          new Point2D(absPosition.x, absPosition.y),\n          shape.radiusX(),\n          shape.radiusY()\n        );\n      } else if (stateGroup.name() === 'circle-group') {\n        const absPosition = shape.absolutePosition();\n        annotation.mathShape = new Circle(\n          new Point2D(absPosition.x, absPosition.y),\n          shape.radius()\n        );\n      }\n\n      // details\n      if (drawingsDetails) {\n        const details = drawingsDetails[stateGroup.id()];\n        annotation.textExpr = details.meta.textExpr;\n        annotation.quantification = details.meta.quantification;\n      }\n\n      annotations.push(annotation);\n    }\n  }\n\n  return annotations;\n}\n","import {Index} from '../math/index';\nimport {Point} from '../math/point';\nimport {Vector3D} from '../math/vector';\nimport {viewEventNames} from '../image/view';\nimport {ListenerHandler} from '../utils/listen';\nimport {logger} from '../utils/logger';\nimport {precisionRound} from '../utils/string';\nimport {ViewLayer} from './viewLayer';\nimport {DrawLayer} from './drawLayer';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Point2D, Point3D} from '../math/point';\nimport {Scalar2D, Scalar3D} from '../math/scalar';\nimport {PositionHelper} from '../image/positionHelper';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get the layer div id.\n *\n * @param {string} groupDivId The layer group div id.\n * @param {number} layerIndex The layer index.\n * @returns {string} A string id.\n */\nexport function getLayerDivId(groupDivId, layerIndex) {\n  return groupDivId + '-layer-' + layerIndex;\n}\n\n/**\n * Get the layer details from a div id.\n *\n * @param {string} idString The layer div id.\n * @returns {object} The layer details as {groupDivId, layerIndex, layerId}.\n */\nexport function getLayerDetailsFromLayerDivId(idString) {\n  const split = idString.split('-layer-');\n  if (split.length !== 2) {\n    logger.warn('Not the expected layer div id format...');\n  }\n  return {\n    groupDivId: split[0],\n    layerIndex: split[1],\n    layerId: idString,\n  };\n}\n\n/**\n * Get the layer details from a mouse event.\n *\n * @param {object} event The event to get the layer div id from. Expecting\n * an event origininating from a canvas inside a layer HTML div\n * with the 'layer' class and id generated with `getLayerDivId`.\n * @returns {object} The layer details as {groupDivId, layerIndex, layerId}.\n */\nexport function getLayerDetailsFromEvent(event) {\n  let res = null;\n  // get the closest element from the event target and with the 'layer' class\n  const layerDiv = event.target.closest('.layer');\n  if (layerDiv && typeof layerDiv.id !== 'undefined') {\n    res = getLayerDetailsFromLayerDivId(layerDiv.id);\n  }\n  return res;\n}\n\n/**\n * Get a scaled offset to adapt to new scale and such as the input center\n * stays at the same position.\n *\n * @param {Scalar2D} offset The previous offset as {x,y}.\n * @param {Scalar2D} scale The previous scale as {x,y}.\n * @param {Scalar2D} newScale The new scale as {x,y}.\n * @param {Scalar2D} center The scale center as {x,y}.\n * @returns {Scalar2D} The scaled offset as {x,y}.\n */\nexport function getScaledOffset(offset, scale, newScale, center) {\n  // worldPoint = indexPoint / scale + offset\n  //=> indexPoint = (worldPoint - offset ) * scale\n\n  // plane center should stay the same:\n  // indexCenter / newScale + newOffset =\n  //   indexCenter / oldScale + oldOffset\n  //=> newOffset = indexCenter / oldScale + oldOffset -\n  //     indexCenter / newScale\n  //=> newOffset = worldCenter - indexCenter / newScale\n  const indexCenter = {\n    x: (center.x - offset.x) * scale.x,\n    y: (center.y - offset.y) * scale.y\n  };\n  return {\n    x: center.x - (indexCenter.x / newScale.x),\n    y: center.y - (indexCenter.y / newScale.y)\n  };\n}\n\n/**\n * Layer group.\n *\n * - Display position: {x,y},\n * - Plane position: Index (access: get(i)),\n * - (world) Position: Point3D (access: getX, getY, getZ).\n *\n * Display -> World:\n * - planePos = viewLayer.displayToPlanePos(displayPos)\n *   -> compensate for layer scale and offset,\n * - pos = viewController.getPositionFromPlanePoint(planePos).\n *\n * World -> Display:\n * - planePos = viewController.getOffset3DFromPlaneOffset(pos)\n *   no need yet for a planePos to displayPos...\n */\nexport class LayerGroup {\n\n  /**\n   * The container div.\n   *\n   * @type {HTMLElement}\n   */\n  #containerDiv;\n\n  // jsdoc does not like\n  // @type {(ViewLayer|DrawLayer)[]}\n\n  /**\n   * List of layers.\n   *\n   * @type {Array<ViewLayer|DrawLayer>}\n   */\n  #layers = [];\n\n  /**\n   * The layer scale as {x,y,z}.\n   *\n   * @type {Scalar3D}\n   */\n  #scale = {x: 1, y: 1, z: 1};\n\n  /**\n   * The base scale as {x,y,z}: all posterior scale will be on top of this one.\n   *\n   * @type {Scalar3D}\n   */\n  #baseScale = {x: 1, y: 1, z: 1};\n\n  /**\n   * The layer offset as {x,y,z}.\n   *\n   * @type {Scalar3D}\n   */\n  #offset = {x: 0, y: 0, z: 0};\n\n  /**\n   * Active layer index.\n   *\n   * @type {number}\n   */\n  #activeLayerIndex = undefined;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Flag to activate crosshair or not.\n   *\n   * @type {boolean}\n   */\n  #showCrosshair = false;\n\n  /**\n   * Crosshair HTML elements.\n   *\n   * @type {HTMLElement[]}\n   */\n  #crosshairHtmlElements = [];\n\n  /**\n   * Tooltip HTML element.\n   *\n   * @type {HTMLElement}\n   */\n  #tooltipHtmlElement;\n\n  /**\n   * The current position used for the crosshair.\n   *\n   * @type {Point}\n   */\n  #currentPosition;\n\n  /**\n   * Image smoothing flag.\n   *\n   * @type {boolean}\n   */\n  #imageSmoothing = false;\n\n  /**\n   * Position helper.\n   *\n   * @type {PositionHelper}\n   */\n  #positionHelper;\n\n  /**\n   * Get the position helper.\n   *\n   * @returns {PositionHelper} The position helper.\n   */\n  getPositionHelper() {\n    if (typeof this.#positionHelper === 'undefined') {\n      for (const layer of this.#layers) {\n        if (layer instanceof ViewLayer) {\n          const controller = layer.getViewController();\n          const helper = controller.getPositionHelperClone();\n          if (typeof this.#positionHelper === 'undefined') {\n            this.#positionHelper = helper;\n          } else {\n            this.#positionHelper.merge(helper);\n          }\n        }\n      }\n    }\n    return this.#positionHelper;\n  }\n\n  /**\n   * @param {HTMLElement} containerDiv The associated HTML div.\n   */\n  constructor(containerDiv) {\n    this.#containerDiv = containerDiv;\n  }\n\n  /**\n   * Get the showCrosshair flag.\n   *\n   * @returns {boolean} True to display the crosshair.\n   */\n  getShowCrosshair() {\n    return this.#showCrosshair;\n  }\n\n  /**\n   * Set the showCrosshair flag.\n   *\n   * @param {boolean} flag True to display the crosshair.\n   */\n  setShowCrosshair(flag) {\n    this.#showCrosshair = flag;\n    if (flag) {\n      // listen to offset and zoom change\n      this.addEventListener('offsetchange', this.#updateCrosshairOnChange);\n      this.addEventListener('zoomchange', this.#updateCrosshairOnChange);\n      // show crosshair div\n      this.#showCrosshairDiv();\n    } else {\n      // listen to offset and zoom change\n      this.removeEventListener('offsetchange', this.#updateCrosshairOnChange);\n      this.removeEventListener('zoomchange', this.#updateCrosshairOnChange);\n      // remove crosshair div\n      this.#removeCrosshairDiv();\n    }\n  }\n\n  /**\n   * Set the imageSmoothing flag value.\n   *\n   * @param {boolean} flag True to enable smoothing.\n   */\n  setImageSmoothing(flag) {\n    this.#imageSmoothing = flag;\n    // set for existing layers\n    for (const layer of this.#layers) {\n      if (layer instanceof ViewLayer) {\n        layer.setImageSmoothing(flag);\n      }\n    }\n  }\n\n  /**\n   * Update crosshair on offset or zoom change.\n   *\n   * @param {object} _event The change event.\n   */\n  #updateCrosshairOnChange = (_event) => {\n    this.#showCrosshairDiv();\n  };\n\n  /**\n   * Get the Id of the container div.\n   *\n   * @returns {string|undefined} The id of the div.\n   */\n  getDivId() {\n    let divId;\n    // could be null if html changed\n    if (this.#containerDiv !== null) {\n      divId = this.#containerDiv.id;\n    }\n    return divId;\n  }\n\n  /**\n   * Get the layer scale.\n   *\n   * @returns {Scalar3D} The scale as {x,y,z}.\n   */\n  getScale() {\n    return this.#scale;\n  }\n\n  /**\n   * Get the base scale.\n   *\n   * @returns {Scalar3D} The scale as {x,y,z}.\n   */\n  getBaseScale() {\n    return this.#baseScale;\n  }\n\n\n  /**\n   * Get the added scale: the scale added to the base scale.\n   *\n   * @returns {Scalar3D} The scale as {x,y,z}.\n   */\n  getAddedScale() {\n    return {\n      x: this.#scale.x / this.#baseScale.x,\n      y: this.#scale.y / this.#baseScale.y,\n      z: this.#scale.z / this.#baseScale.z\n    };\n  }\n\n  /**\n   * Get the layer offset.\n   *\n   * @returns {Scalar3D} The offset as {x,y,z}.\n   */\n  getOffset() {\n    return this.#offset;\n  }\n\n  /**\n   * Get the number of layers handled by this class.\n   *\n   * @returns {number} The number of layers.\n   */\n  getNumberOfLayers() {\n    let count = 0;\n    this.#layers.forEach(item => {\n      if (typeof item !== 'undefined') {\n        count++;\n      }\n    });\n    return count;\n  }\n\n  /**\n   * Check if this layerGroup contains a layer with the input id.\n   *\n   * @param {string} id The layer id to look for.\n   * @returns {boolean} True if this group contains\n   *   a layer with the input id.\n   */\n  includes(id) {\n    if (typeof id === 'undefined') {\n      return false;\n    }\n    for (const layer of this.#layers) {\n      if (typeof layer !== 'undefined' &&\n        layer.getId() === id) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get a list of view layers according to an input callback function.\n   *\n   * @param {Function} [callbackFn] A function that takes\n   *   a ViewLayer as input and returns a boolean. If undefined,\n   *   returns all view layers.\n   * @returns {ViewLayer[]} The layers that\n   *   satisfy the callbackFn.\n   */\n  getViewLayers(callbackFn) {\n    if (typeof callbackFn === 'undefined') {\n      callbackFn = function () {\n        return true;\n      };\n    }\n    const res = [];\n    for (const layer of this.#layers) {\n      if (layer instanceof ViewLayer &&\n        callbackFn(layer)) {\n        res.push(layer);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Test if one of the view layers satisfies an input callbackFn.\n   *\n   * @param {Function} callbackFn A function that takes\n   *   a ViewLayer as input and returns a boolean.\n   * @returns {boolean} True if one of the ViewLayers\n   *   satisfies the callbackFn.\n   */\n  someViewLayer(callbackFn) {\n    let hasOne = false;\n    for (const layer of this.#layers) {\n      if (layer instanceof ViewLayer &&\n        callbackFn(layer)) {\n        hasOne = true;\n        break;\n      }\n    }\n    return hasOne;\n  }\n\n  /**\n   * Get a list of draw layers according to an input callback function.\n   *\n   * @param {Function} [callbackFn] A function that takes\n   *   a DrawLayer as input and returns a boolean. If undefined,\n   *   returns all draw layers.\n   * @returns {DrawLayer[]} The layers that\n   *   satisfy the callbackFn.\n   */\n  getDrawLayers(callbackFn) {\n    if (typeof callbackFn === 'undefined') {\n      callbackFn = function () {\n        return true;\n      };\n    }\n    const res = [];\n    for (const layer of this.#layers) {\n      if (layer instanceof DrawLayer &&\n        callbackFn(layer)) {\n        res.push(layer);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Get the number of view layers handled by this class.\n   *\n   * @returns {number} The number of layers.\n   */\n  getNumberOfViewLayers() {\n    let count = 0;\n    this.#layers.forEach(item => {\n      if (typeof item !== 'undefined' &&\n        item instanceof ViewLayer) {\n        count++;\n      }\n    });\n    return count;\n  }\n\n  /**\n   * Get the active image layer.\n   *\n   * @returns {ViewLayer|DrawLayer|undefined} The layer.\n   */\n  getActiveLayer() {\n    let layer;\n    if (typeof this.#activeLayerIndex !== 'undefined') {\n      layer = this.#layers[this.#activeLayerIndex];\n    }\n    return layer;\n  }\n\n  /**\n   * Get the active image layer.\n   *\n   * @returns {ViewLayer|undefined} The layer.\n   */\n  getActiveViewLayer() {\n    let layer;\n    const activeLayer = this.getActiveLayer();\n    if (typeof activeLayer !== 'undefined' &&\n      activeLayer instanceof ViewLayer) {\n      layer = activeLayer;\n    }\n    return layer;\n  }\n\n  /**\n   * Get the base view layer.\n   *\n   * @returns {ViewLayer|undefined} The layer.\n   */\n  getBaseViewLayer() {\n    // use first layer as base for calculating position and\n    // line sizes\n    let baseLayer;\n    for (const layer of this.#layers) {\n      if (layer instanceof ViewLayer) {\n        baseLayer = layer;\n        break;\n      }\n    }\n    if (typeof baseLayer === 'undefined') {\n      logger.warn('No layer found');\n      return;\n    }\n    return baseLayer;\n  }\n\n  /**\n   * Get a view layer associated to a data id.\n   *\n   * @param {string} id The layer id.\n   * @returns {ViewLayer|undefined} The layer.\n   */\n  getViewLayerById(id) {\n    const callbackFn = function (layer) {\n      return layer.getId() === id;\n    };\n    const layers = this.getViewLayers(callbackFn);\n    let layer;\n    if (layers.length === 1) {\n      layer = layers[0];\n    }\n    return layer;\n  }\n\n  /**\n   * Get the view layers associated to a data id.\n   *\n   * @param {string} dataId The data id.\n   * @returns {ViewLayer[]} The layers.\n   */\n  getViewLayersByDataId(dataId) {\n    const callbackFn = function (layer) {\n      return layer.getDataId() === dataId;\n    };\n    return this.getViewLayers(callbackFn);\n  }\n\n  /**\n   * Search view layers for equal imae meta data.\n   *\n   * @param {object} meta The meta data to find.\n   * @returns {ViewLayer[]} The list of view layers that contain matched data.\n   */\n  searchViewLayers(meta) {\n    const res = [];\n    for (const layer of this.#layers) {\n      if (layer instanceof ViewLayer) {\n        if (layer.getViewController().equalImageMeta(meta)) {\n          res.push(layer);\n        }\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Get the view layers data indices.\n   *\n   * @returns {string[]} The list of indices.\n   */\n  getViewDataIndices() {\n    const res = [];\n    for (const layer of this.#layers) {\n      if (layer instanceof ViewLayer) {\n        res.push(layer.getDataId());\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Get the active draw layer.\n   *\n   * @returns {DrawLayer|undefined} The layer.\n   */\n  getActiveDrawLayer() {\n    let layer;\n    const activeLayer = this.getActiveLayer();\n    if (typeof activeLayer !== 'undefined' &&\n      activeLayer instanceof DrawLayer) {\n      layer = activeLayer;\n    }\n    return layer;\n  }\n\n  /**\n   * Get a draw layer associated to a data id.\n   *\n   * @param {string} id The layer id.\n   * @returns {DrawLayer|undefined} The layer.\n   */\n  getDrawLayerById(id) {\n    const callbackFn = function (layer) {\n      return layer.getId() === id;\n    };\n    const layers = this.getDrawLayers(callbackFn);\n    let layer;\n    if (layers.length === 1) {\n      layer = layers[0];\n    }\n    return layer;\n  }\n\n  /**\n   * Get the draw layers associated to a data id.\n   *\n   * @param {string} dataId The data id.\n   * @returns {DrawLayer[]} The layers.\n   */\n  getDrawLayersByDataId(dataId) {\n    const callbackFn = function (layer) {\n      return layer.getDataId() === dataId;\n    };\n    return this.getDrawLayers(callbackFn);\n  }\n\n  /**\n   * Set the active layer.\n   *\n   * @param {number} index The index of the layer to set as active.\n   */\n  setActiveLayer(index) {\n    this.#activeLayerIndex = index;\n    /**\n     * Active layer change event.\n     *\n     * @event LayerGroup#activelayerchange\n     * @type {object}\n     * @property {string} type The event type.\n     * @property {Array} value The changed value.\n     */\n    this.#fireEvent({\n      type: 'activelayerchange',\n      value: [this.#layers[index]]\n    });\n  }\n\n  /**\n   * Set the active layer with a data id.\n   *\n   * @param {string} dataId The data id.\n   */\n  setActiveLayerByDataId(dataId) {\n    let index;\n    for (let i = 0; i < this.#layers.length; ++i) {\n      if (typeof this.#layers[i] !== 'undefined' &&\n        this.#layers[i].getDataId() === dataId) {\n        // stop at first one\n        index = i;\n        break;\n      }\n    }\n    if (typeof index !== 'undefined') {\n      this.setActiveLayer(index);\n    } else {\n      logger.warn('No layer to set as active with dataId: ' +\n        dataId);\n    }\n  }\n\n  /**\n   * Add a view layer.\n   *\n   * The new layer will be marked as the active view layer.\n   *\n   * @returns {ViewLayer} The created layer.\n   */\n  addViewLayer() {\n    // layer index\n    const viewLayerIndex = this.#layers.length;\n    // create div\n    const div = this.#getNextLayerDiv();\n    // prepend to container\n    this.#containerDiv.append(div);\n    // view layer\n    const layer = new ViewLayer(div);\n    layer.setImageSmoothing(this.#imageSmoothing);\n    // add layer\n    this.#layers.push(layer);\n    // mark it as active\n    this.setActiveLayer(viewLayerIndex);\n    // bind view layer events\n    this.#bindViewLayer(layer);\n\n    // force helper update\n    this.#positionHelper = undefined;\n\n    // return\n    return layer;\n  }\n\n  /**\n   * Add a draw layer.\n   *\n   * The new layer will be marked as the active draw layer.\n   *\n   * @returns {DrawLayer} The created layer.\n   */\n  addDrawLayer() {\n    // store active index\n    this.#activeLayerIndex = this.#layers.length;\n    // create div\n    const div = this.#getNextLayerDiv();\n    // prepend to container\n    this.#containerDiv.append(div);\n    // draw layer\n    const layer = new DrawLayer(div);\n    // add layer\n    this.#layers.push(layer);\n    // bind draw layer events\n    this.#bindDrawLayer(layer);\n    // return\n    return layer;\n  }\n\n  /**\n   * Bind view layer events to this.\n   *\n   * @param {ViewLayer} viewLayer The view layer to bind.\n   */\n  #bindViewLayer(viewLayer) {\n    // listen to position change to update other group layers\n    viewLayer.addEventListener(\n      'positionchange', this.updateLayersToPositionChange);\n    // propagate view viewLayer-layer events\n    for (const eventName of viewEventNames) {\n      viewLayer.addEventListener(eventName, this.#fireEvent);\n    }\n    // propagate viewLayer events\n    viewLayer.addEventListener('renderstart', this.#fireEvent);\n    viewLayer.addEventListener('renderend', this.#fireEvent);\n  }\n\n  /**\n   * Un-bind a view layer events to this.\n   *\n   * @param {ViewLayer} viewLayer The view layer to unbind.\n   */\n  #unbindViewLayer(viewLayer) {\n    // stop listening to position change to update other group layers\n    viewLayer.removeEventListener(\n      'positionchange', this.updateLayersToPositionChange);\n    // stop propagating view viewLayer-layer events\n    for (const eventName of viewEventNames) {\n      viewLayer.removeEventListener(eventName, this.#fireEvent);\n    }\n    // stop propagating viewLayer events\n    viewLayer.removeEventListener('renderstart', this.#fireEvent);\n    viewLayer.removeEventListener('renderend', this.#fireEvent);\n\n    // stop view layer - image binding\n    // (binding is done in layer.setView)\n    viewLayer.unbindImage();\n  }\n\n  /**\n   * Bind draw layer events to this.\n   *\n   * @param {DrawLayer} drawLayer The draw layer to bind.\n   */\n  #bindDrawLayer(drawLayer) {\n    // listen to position change to update other group layers\n    drawLayer.addEventListener(\n      'positionchange', this.updateLayersToPositionChange);\n    drawLayer.addEventListener(\n      'positionchange', this.#fireEvent);\n  }\n\n  /**\n   * Un-bind a draw layer events to this.\n   *\n   * @param {DrawLayer} drawLayer The draw layer to unbind.\n   */\n  #unbindDrawLayer(drawLayer) {\n    // stop listening to position change to update other group layers\n    drawLayer.removeEventListener(\n      'positionchange', this.updateLayersToPositionChange);\n    drawLayer.removeEventListener(\n      'positionchange', this.#fireEvent);\n  }\n\n  /**\n   * Get the next layer DOM div.\n   *\n   * @returns {HTMLDivElement} A DOM div.\n   */\n  #getNextLayerDiv() {\n    const div = document.createElement('div');\n    div.id = getLayerDivId(this.getDivId(), this.#layers.length);\n    div.className = 'layer';\n    div.style.pointerEvents = 'none';\n    return div;\n  }\n\n  /**\n   * Empty the layer list.\n   */\n  empty() {\n    for (const layer of this.#layers) {\n      if (typeof layer !== 'undefined') {\n        this.removeLayer(layer);\n      }\n    }\n    this.#layers = [];\n    // remove possible crosshair\n    this.#removeCrosshairDiv();\n  }\n\n  /**\n   * Remove all layers for a specific data.\n   *\n   * @param {string} dataId The data to remove its layers.\n   */\n  removeLayersByDataId(dataId) {\n    for (const layer of this.#layers) {\n      if (typeof layer !== 'undefined' &&\n        layer.getDataId() === dataId) {\n        this.removeLayer(layer);\n      }\n    }\n  }\n\n  /**\n   * Remove a layer from this layer group.\n   * Warning: if current active layer, the index will\n   *   be set to `undefined`. Call one of the setActive\n   *   methods to define the active index.\n   *\n   * @param {ViewLayer | DrawLayer} layer The layer to remove.\n   * @fires LayerGroup#removelayer\n   */\n  removeLayer(layer) {\n    // find layer\n    const index = this.#layers.findIndex((item) => item === layer);\n    if (index === -1) {\n      throw new Error('Cannot find layer to remove');\n    }\n    // update active index\n    if (this.#activeLayerIndex === index) {\n      this.#activeLayerIndex = undefined;\n    }\n    // unbind and update active index\n    if (layer instanceof ViewLayer) {\n      this.#unbindViewLayer(layer);\n    } else {\n      this.#unbindDrawLayer(layer);\n    }\n    // reset in storage\n    this.#layers[index] = undefined;\n    // force helper update\n    this.#positionHelper = undefined;\n    // update html\n    layer.removeFromDOM();\n\n    /**\n     * Remove layer event.\n     *\n     * @event LayerGroup#removelayer\n     * @type {object}\n     * @property {string} type The event type.\n     * @property {string} layerid The layer id.\n     * @property {string} layergroupid The layer group id.\n     */\n    this.#fireEvent({\n      type: 'layerremove',\n      layerid: layer.getId(),\n      layergroupid: this.getDivId()\n    });\n  }\n\n  /**\n   * Show a crosshair at a given position.\n   *\n   * @param {Point} [position] The position where to show the crosshair,\n   *   defaults to current position.\n   */\n  #showCrosshairDiv(position) {\n    if (typeof position === 'undefined') {\n      position = this.#currentPosition;\n    }\n\n    // remove previous\n    this.#removeCrosshairDiv();\n\n    // use first layer as base for calculating position and\n    // line sizes\n    let baseLayer;\n    for (const layer of this.#layers) {\n      if (layer instanceof ViewLayer) {\n        baseLayer = layer;\n        break;\n      }\n    }\n    if (typeof baseLayer === 'undefined') {\n      logger.warn('No layer to show crosshair');\n      return;\n    }\n\n    const vc = baseLayer.getViewController();\n    const planePos = vc.getPlanePositionFromPosition(position);\n    const displayPos = baseLayer.planePosToDisplay(planePos);\n\n    // horizontal line\n    if (typeof displayPos.getY() !== 'undefined') {\n      const lineH = document.createElement('hr');\n      lineH.id = this.getDivId() + '-scroll-crosshair-horizontal';\n      lineH.className = 'horizontal';\n      lineH.style.width = this.#containerDiv.offsetWidth + 'px';\n      lineH.style.left = '0px';\n      lineH.style.top = displayPos.getY() + 'px';\n      // add to local array\n      this.#crosshairHtmlElements.push(lineH);\n      // add to html\n      this.#containerDiv.appendChild(lineH);\n    }\n\n    // vertical line\n    if (typeof displayPos.getX() !== 'undefined') {\n      const lineV = document.createElement('hr');\n      lineV.id = this.getDivId() + '-scroll-crosshair-vertical';\n      lineV.className = 'vertical';\n      lineV.style.width = this.#containerDiv.offsetHeight + 'px';\n      lineV.style.left = (displayPos.getX()) + 'px';\n      lineV.style.top = '0px';\n      // add to local array\n      this.#crosshairHtmlElements.push(lineV);\n      // add to html\n      this.#containerDiv.appendChild(lineV);\n    }\n  }\n\n  /**\n   * Remove crosshair divs.\n   */\n  #removeCrosshairDiv() {\n    for (const element of this.#crosshairHtmlElements) {\n      element.remove();\n    }\n    this.#crosshairHtmlElements = [];\n  }\n\n  /**\n   * Displays a tooltip in a temporary `span`.\n   * Works with css to hide/show the span only on mouse hover.\n   *\n   * @param {Point2D} point The update point.\n   */\n  showTooltip(point) {\n    // remove previous div\n    this.removeTooltipDiv();\n\n    const viewLayer = this.getBaseViewLayer();\n    const viewController = viewLayer.getViewController();\n    const planePos = viewLayer.displayToPlanePos(point);\n    const position = viewController.getPositionFromPlanePoint(planePos);\n    const value = viewController.getRescaledImageValue(position);\n\n    // create\n    if (typeof value !== 'undefined') {\n      const span = document.createElement('span');\n      span.id = 'scroll-tooltip';\n      // tooltip position\n      span.style.left = (point.getX() + 10) + 'px';\n      span.style.top = (point.getY() + 10) + 'px';\n      let text = precisionRound(value, 3).toString();\n      if (typeof viewController.getPixelUnit() !== 'undefined') {\n        text += ' ' + viewController.getPixelUnit();\n      }\n      span.appendChild(document.createTextNode(text));\n      // add to local var\n      this.#tooltipHtmlElement = span;\n      // add to html\n      this.#containerDiv.appendChild(span);\n    }\n  }\n\n  /**\n   * Remove the tooltip html div.\n   */\n  removeTooltipDiv() {\n    if (typeof this.#tooltipHtmlElement !== 'undefined') {\n      this.#tooltipHtmlElement.remove();\n      this.#tooltipHtmlElement = undefined;\n    }\n  }\n\n  /**\n   * Can the input position be set on one of the view layers.\n   *\n   * @param {Point} position The input position.\n   * @returns {boolean} True if one view layer accepts the input position.\n   */\n  isPositionInBounds(position) {\n    return this.someViewLayer(function (layer) {\n      return layer.getViewController().isPositionInBounds(position);\n    });\n  }\n\n  /**\n   * Can one of the view layers be scrolled.\n   *\n   * @returns {boolean} True if one view layer can be scrolled.\n   */\n  canScroll() {\n    return this.someViewLayer(function (layer) {\n      return layer.getViewController().canScroll();\n    });\n  }\n\n  /**\n   * Does one of the view layer have more than one slice in the\n   *   given dimension.\n   *\n   * @param {number} dim The input dimension.\n   * @returns {boolean} True if one view layer has more than one slice.\n   */\n  moreThanOne(dim) {\n    return this.someViewLayer(function (layer) {\n      return layer.getViewController().moreThanOne(dim);\n    });\n  }\n\n  /**\n   * Update layers (but not the event source layer) to a position change.\n   *\n   * @param {object} event The position change event.\n   * @function\n   */\n  updateLayersToPositionChange = (event) => {\n    // pause positionchange listeners\n    for (const layer of this.#layers) {\n      if (typeof layer !== 'undefined') {\n        layer.removeEventListener(\n          'positionchange', this.updateLayersToPositionChange);\n        layer.removeEventListener('positionchange', this.#fireEvent);\n      }\n    }\n\n    const index = new Index(event.value[0]);\n    const position = new Point(event.value[1]);\n\n    // store current position\n    this.#currentPosition = position;\n\n    if (this.#showCrosshair) {\n      this.#showCrosshairDiv(position);\n    }\n\n    // origin of the first view layer\n    const viewLayerOffsets = {};\n    let baseViewLayerOrigin0;\n    let baseViewLayerOrigin;\n    // update position for all layers except the source one\n    for (const layer of this.#layers) {\n      if (typeof layer === 'undefined') {\n        continue;\n      }\n      let hasSetOffset = false;\n\n      // view layer case: define and set offsets\n      if (layer instanceof ViewLayer) {\n        const vc = layer.getViewController();\n        // origin0 should always be there\n        const origin0 = vc.getOrigin();\n        // depending on position, origin could be undefined\n        const origin = vc.getOrigin(position);\n\n        let scrollOffset;\n        let planeOffset;\n\n        if (typeof baseViewLayerOrigin === 'undefined') {\n          // first view layer, store origins\n          baseViewLayerOrigin0 = origin0;\n          baseViewLayerOrigin = origin;\n          // no offset\n          scrollOffset = new Vector3D(0, 0, 0);\n          planeOffset = new Vector3D(0, 0, 0);\n        } else {\n          if (vc.isPositionInBounds(position) &&\n            typeof origin !== 'undefined') {\n            // TODO: compensate for possible different orientation between views\n            const scrollDiff = baseViewLayerOrigin0.minus(origin0);\n            scrollOffset = new Vector3D(\n              scrollDiff.getX(), scrollDiff.getY(), scrollDiff.getZ());\n            const planeDiff = baseViewLayerOrigin.minus(origin);\n            planeOffset = new Vector3D(\n              planeDiff.getX(), planeDiff.getY(), planeDiff.getZ());\n          }\n        }\n\n        // set and store offsets\n        if (typeof scrollOffset !== 'undefined' &&\n          typeof planeOffset !== 'undefined') {\n          hasSetOffset =\n            layer.setBaseOffset(\n              scrollOffset, planeOffset,\n              baseViewLayerOrigin, baseViewLayerOrigin0\n            );\n          // store\n          viewLayerOffsets[layer.getId()] = {\n            scroll: scrollOffset,\n            plane: planeOffset\n          };\n        }\n      }\n\n      // draw layer case: use associated view layer offsets\n      if (layer instanceof DrawLayer) {\n        const refOffsets = viewLayerOffsets[layer.getReferenceLayerId()];\n        if (typeof refOffsets !== 'undefined') {\n          hasSetOffset =\n            layer.setBaseOffset(refOffsets.scroll, refOffsets.plane);\n        }\n      }\n\n      // update position (triggers redraw)\n      let hasSetPos = false;\n      if (layer.getId() !== event.srclayerid) {\n        hasSetPos = layer.setCurrentPosition(position, index);\n      }\n\n      // force redraw if needed\n      if (!hasSetPos && hasSetOffset) {\n        layer.draw();\n      }\n    }\n\n    // re-start positionchange listeners\n    for (const layer of this.#layers) {\n      if (typeof layer !== 'undefined') {\n        layer.addEventListener(\n          'positionchange', this.updateLayersToPositionChange);\n        layer.addEventListener('positionchange', this.#fireEvent);\n      }\n    }\n  };\n\n  /**\n   * Calculate the div to world size ratio needed to fit\n   *   the largest data.\n   *\n   * @returns {number|undefined} The ratio.\n   */\n  getDivToWorldSizeRatio() {\n    // check container\n    if (this.#containerDiv.offsetWidth === 0 &&\n      this.#containerDiv.offsetHeight === 0) {\n      throw new Error('Cannot fit to zero sized container with id \\'' +\n        this.#containerDiv.id + '\\'.'\n      );\n    }\n    // get max world size\n    const maxWorldSize = this.getMaxWorldSize();\n    if (typeof maxWorldSize === 'undefined') {\n      return undefined;\n    }\n    // if the container has a width but no height,\n    // resize it to follow the same ratio to completely\n    // fill the div with the image\n    if (this.#containerDiv.offsetHeight === 0) {\n      const ratioX = this.#containerDiv.offsetWidth / maxWorldSize.x;\n      const height = maxWorldSize.y * ratioX;\n      this.#containerDiv.style.height = height + 'px';\n    }\n    // return best fit\n    return Math.min(\n      this.#containerDiv.offsetWidth / maxWorldSize.x,\n      this.#containerDiv.offsetHeight / maxWorldSize.y\n    );\n  }\n\n  /**\n   * Fit to container: set the layers div to world size ratio.\n   *\n   * @param {number} divToWorldSizeRatio The ratio.\n   */\n  fitToContainer(divToWorldSizeRatio) {\n    // get maximum world size\n    const maxWorldSize = this.getMaxWorldSize();\n    // exit if none\n    if (typeof maxWorldSize === 'undefined') {\n      return;\n    }\n\n    const containerSize = {\n      x: this.#containerDiv.offsetWidth,\n      y: this.#containerDiv.offsetHeight\n    };\n    // offset to keep data centered\n    const fitOffset = {\n      x: -0.5 *\n        (containerSize.x - Math.floor(maxWorldSize.x * divToWorldSizeRatio)),\n      y: -0.5 *\n        (containerSize.y - Math.floor(maxWorldSize.y * divToWorldSizeRatio))\n    };\n\n    // apply to layers\n    for (const layer of this.#layers) {\n      if (typeof layer !== 'undefined') {\n        layer.fitToContainer(containerSize, divToWorldSizeRatio, fitOffset);\n      }\n    }\n\n    // update crosshair\n    if (this.#showCrosshair) {\n      this.#showCrosshairDiv();\n    }\n  }\n\n  /**\n   * Get the largest data world (mm) size.\n   *\n   * @returns {Scalar2D|undefined} The largest size as {x,y}.\n   */\n  getMaxWorldSize() {\n    let maxSize = {x: 0, y: 0};\n    for (const layer of this.#layers) {\n      if (layer instanceof ViewLayer) {\n        const size = layer.getImageWorldSize();\n        if (size.x > maxSize.x) {\n          maxSize.x = size.x;\n        }\n        if (size.y > maxSize.y) {\n          maxSize.y = size.y;\n        }\n      }\n    }\n    if (maxSize.x === 0 && maxSize.y === 0) {\n      maxSize = undefined;\n    }\n    return maxSize;\n  }\n\n  /**\n   * Flip all layers along the Z axis without offset compensation.\n   */\n  flipScaleZ() {\n    this.#baseScale.z *= -1;\n    this.setScale(this.#baseScale);\n  }\n\n  /**\n   * Add scale to the layers. Scale cannot go lower than 0.1.\n   *\n   * @param {number} scaleStep The scale to add.\n   * @param {Point3D} center The scale center Point3D.\n   */\n  addScale(scaleStep, center) {\n    const newScale = {\n      x: this.#scale.x * (1 + scaleStep),\n      y: this.#scale.y * (1 + scaleStep),\n      z: this.#scale.z * (1 + scaleStep)\n    };\n    this.setScale(newScale, center);\n  }\n\n  /**\n   * Set the layers' scale.\n   *\n   * @param {Scalar3D} newScale The scale to apply as {x,y,z}.\n   * @param {Point3D} [center] The scale center Point3D.\n   * @fires LayerGroup#zoomchange\n   */\n  setScale(newScale, center) {\n    this.#scale = newScale;\n    // apply to layers\n    for (const layer of this.#layers) {\n      if (typeof layer !== 'undefined') {\n        layer.setScale(this.#scale, center);\n      }\n    }\n\n    // event value\n    const value = [\n      newScale.x,\n      newScale.y,\n      newScale.z\n    ];\n    if (typeof center !== 'undefined') {\n      value.push(center.getX());\n      value.push(center.getY());\n      value.push(center.getZ());\n    }\n\n    /**\n     * Zoom change event.\n     *\n     * @event LayerGroup#zoomchange\n     * @type {object}\n     * @property {string} type The event type.\n     * @property {Array} value The changed value.\n     */\n    this.#fireEvent({\n      type: 'zoomchange',\n      value: value\n    });\n  }\n\n  /**\n   * Add translation to the layers.\n   *\n   * @param {Scalar3D} translation The translation as {x,y,z}.\n   */\n  addTranslation(translation) {\n    this.setOffset({\n      x: this.#offset.x - translation.x,\n      y: this.#offset.y - translation.y,\n      z: this.#offset.z - translation.z\n    });\n  }\n\n  /**\n   * Set the layers' offset.\n   *\n   * @param {Scalar3D} newOffset The offset as {x,y,z}.\n   * @fires LayerGroup#offsetchange\n   */\n  setOffset(newOffset) {\n    // store\n    this.#offset = newOffset;\n    // apply to layers\n    for (const layer of this.#layers) {\n      if (typeof layer !== 'undefined') {\n        layer.setOffset(this.#offset);\n      }\n    }\n\n    /**\n     * Offset change event.\n     *\n     * @event LayerGroup#offsetchange\n     * @type {object}\n     * @property {string} type The event type.\n     * @property {Array} value The changed value.\n     */\n    this.#fireEvent({\n      type: 'offsetchange',\n      value: [\n        this.#offset.x,\n        this.#offset.y,\n        this.#offset.z\n      ]\n    });\n  }\n\n  /**\n   * Reset the stage to its initial scale and no offset.\n   */\n  reset() {\n    this.setScale(this.#baseScale);\n    this.setOffset({x: 0, y: 0, z: 0});\n  }\n\n  /**\n   * Draw the layer.\n   */\n  draw() {\n    for (const layer of this.#layers) {\n      if (typeof layer !== 'undefined') {\n        layer.draw();\n      }\n    }\n  }\n\n  /**\n   * Display the layer.\n   *\n   * @param {boolean} flag Whether to display the layer or not.\n   */\n  display(flag) {\n    for (const layer of this.#layers) {\n      if (typeof layer !== 'undefined') {\n        layer.display(flag);\n      }\n    }\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n} // LayerGroup class\n","import {Point, Point3D} from '../math/point';\nimport {WindowLevel} from '../image/windowLevel';\nimport {LayerGroup} from './layerGroup';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {ViewLayer} from '../gui/viewLayer';\nimport {DrawLayer} from '../gui/drawLayer';\n/* eslint-enable no-unused-vars */\n\n/**\n * Window/level binder.\n */\nexport class WindowLevelBinder {\n  getEventType = function () {\n    return 'wlchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      const viewLayers = layerGroup.getViewLayersByDataId(event.dataid);\n      if (viewLayers.length !== 0) {\n        const vc = viewLayers[0].getViewController();\n        if (event.value.length === 2) {\n          const wl = new WindowLevel(event.value[0], event.value[1]);\n          vc.setWindowLevel(wl);\n        }\n        if (event.value.length === 3) {\n          vc.setWindowLevelPreset(event.value[2]);\n        }\n      }\n    };\n  };\n}\n\n/**\n * Colour map binder.\n */\nexport class ColourMapBinder {\n  getEventType = function () {\n    return 'colourmapchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      const viewLayers = layerGroup.getViewLayersByDataId(event.dataid);\n      if (viewLayers.length !== 0) {\n        const vc = viewLayers[0].getViewController();\n        vc.setColourMap(event.value[0]);\n      }\n    };\n  };\n}\n\n/**\n * Position binder.\n */\nexport class PositionBinder {\n  getEventType = function () {\n    return 'positionchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      const pointValues = event.value[1];\n      const vl = layerGroup.getBaseViewLayer();\n      const vc = vl.getViewController();\n      // handle different number of dimensions\n      const currentPos = vc.getCurrentPosition();\n      const currentDims = currentPos.length();\n      const inputDims = pointValues.length;\n      if (inputDims !== currentDims) {\n        if (inputDims === currentDims - 1) {\n          // add missing dim, for ex: input 3D -> current 4D\n          pointValues.push(currentPos.get(currentDims - 1));\n        } else if (inputDims === currentDims + 1) {\n          // remove extra dim, for ex: input 4D -> current 3D\n          pointValues.pop();\n        }\n      }\n      vc.setCurrentPosition(new Point(pointValues));\n    };\n  };\n}\n\n/**\n * Zoom binder.\n */\nexport class ZoomBinder {\n  getEventType = function () {\n    return 'zoomchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      const scale = {\n        x: event.value[0],\n        y: event.value[1],\n        z: event.value[2]\n      };\n      let center;\n      if (event.value.length === 6) {\n        center = new Point3D(\n          event.value[3],\n          event.value[4],\n          event.value[5]\n        );\n      }\n      layerGroup.setScale(scale, center);\n      layerGroup.draw();\n    };\n  };\n}\n\n/**\n * Offset binder.\n */\nexport class OffsetBinder {\n  getEventType = function () {\n    return 'offsetchange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      layerGroup.setOffset({\n        x: event.value[0],\n        y: event.value[1],\n        z: event.value[2]\n      });\n      layerGroup.draw();\n    };\n  };\n}\n\n/**\n * Opacity binder. Only propagates to view layers of the same data.\n */\nexport class OpacityBinder {\n  getEventType = function () {\n    return 'opacitychange';\n  };\n  getCallback = function (layerGroup) {\n    return function (event) {\n      // exit if no data id\n      if (typeof event.dataid === 'undefined') {\n        return;\n      }\n      // propagate to first view layer if it is not base layer\n      const viewLayers = layerGroup.getViewLayersByDataId(event.dataid);\n      const baseLayer = layerGroup.getBaseViewLayer();\n      if (viewLayers.length !== 0 && baseLayer !== viewLayers[0]) {\n        viewLayers[0].setOpacity(event.value);\n        viewLayers[0].draw();\n      }\n    };\n  };\n}\n\n/**\n * List of binders.\n */\nexport const binderList = {\n  WindowLevelBinder,\n  PositionBinder,\n  ZoomBinder,\n  OffsetBinder,\n  OpacityBinder,\n  ColourMapBinder\n};\n\n/**\n * Stage: controls a list of layer groups and their\n * synchronisation.\n */\nexport class Stage {\n\n  /**\n   * Associated layer groups.\n   *\n   * @type {LayerGroup[]}\n   */\n  #layerGroups = [];\n\n  /**\n   * Active layer group index.\n   *\n   * @type {number|undefined}\n   */\n  #activeLayerGroupIndex;\n\n  /**\n   * Image smoothing flag.\n   *\n   * @type {boolean}\n   */\n  #imageSmoothing = false;\n\n  // layer group binders\n  #binders = [];\n  // binder callbacks\n  #callbackStore = null;\n\n  /**\n   * Get the layer group at the given index.\n   *\n   * @param {number} index The index.\n   * @returns {LayerGroup|undefined} The layer group.\n   */\n  getLayerGroup(index) {\n    return this.#layerGroups[index];\n  }\n\n  /**\n   * Get the number of layer groups that form the stage.\n   *\n   * @returns {number} The number of layer groups.\n   */\n  getNumberOfLayerGroups() {\n    return this.#layerGroups.length;\n  }\n\n  /**\n   * Get the active layer group.\n   *\n   * @returns {LayerGroup|undefined} The layer group.\n   */\n  getActiveLayerGroup() {\n    return this.getLayerGroup(this.#activeLayerGroupIndex);\n  }\n\n  /**\n   * Set the active layer group.\n   *\n   * @param {number} index The layer group index.\n   */\n  setActiveLayerGroup(index) {\n    if (typeof this.getLayerGroup(index) !== 'undefined') {\n      this.#activeLayerGroupIndex = index;\n    } else {\n      logger.warn('No layer group to set as active with index: ' +\n        index);\n    }\n  }\n\n  /**\n   * Get the view layers associated to a data id.\n   *\n   * @param {string} dataId The data id.\n   * @returns {ViewLayer[]} The layers.\n   */\n  getViewLayersByDataId(dataId) {\n    let res = [];\n    for (const layerGroup of this.#layerGroups) {\n      res = res.concat(layerGroup.getViewLayersByDataId(dataId));\n    }\n    return res;\n  }\n\n  /**\n   * Get a list of view layers according to an input callback function.\n   *\n   * @param {Function} [callbackFn] A function that takes\n   *   a ViewLayer as input and returns a boolean. If undefined,\n   *   returns all view layers.\n   * @returns {ViewLayer[]} The layers that\n   *   satisfy the callbackFn.\n   */\n  getViewLayers(callbackFn) {\n    let res = [];\n    for (const layerGroup of this.#layerGroups) {\n      res = res.concat(layerGroup.getViewLayers(callbackFn));\n    }\n    return res;\n  }\n\n  /**\n   * Get the draw layers associated to a data id.\n   *\n   * @param {string} dataId The data id.\n   * @returns {DrawLayer[]} The layers.\n   */\n  getDrawLayersByDataId(dataId) {\n    let res = [];\n    for (const layerGroup of this.#layerGroups) {\n      res = res.concat(layerGroup.getDrawLayersByDataId(dataId));\n    }\n    return res;\n  }\n\n  /**\n   * Get a list of draw layers according to an input callback function.\n   *\n   * @param {Function} [callbackFn] A function that takes\n   *   a DrawLayer as input and returns a boolean. If undefined,\n   *   returns all draw layers.\n   * @returns {DrawLayer[]} The layers that\n   *   satisfy the callbackFn.\n   */\n  getDrawLayers(callbackFn) {\n    let res = [];\n    for (const layerGroup of this.#layerGroups) {\n      res = res.concat(layerGroup.getDrawLayers(callbackFn));\n    }\n    return res;\n  }\n\n  /**\n   * Add a layer group to the list.\n   *\n   * The new layer group will be marked as the active layer group.\n   *\n   * @param {object} htmlElement The HTML element of the layer group.\n   * @returns {LayerGroup} The newly created layer group.\n   */\n  addLayerGroup(htmlElement) {\n    this.#activeLayerGroupIndex = this.#layerGroups.length;\n    const layerGroup = new LayerGroup(htmlElement);\n    layerGroup.setImageSmoothing(this.#imageSmoothing);\n    // add to storage\n    const isBound = this.#callbackStore && this.#callbackStore.length !== 0;\n    if (isBound) {\n      this.unbindLayerGroups();\n    }\n    this.#layerGroups.push(layerGroup);\n    if (isBound) {\n      this.bindLayerGroups();\n    }\n    // return created group\n    return layerGroup;\n  }\n\n  /**\n   * Get a layer group from an HTML element id.\n   *\n   * @param {string} id The element id to find.\n   * @returns {LayerGroup|undefined} The layer group.\n   */\n  getLayerGroupByDivId(id) {\n    return this.#layerGroups.find(function (item) {\n      return item.getDivId() === id;\n    });\n  }\n\n  /**\n   * Set the layer groups binders.\n   *\n   * @param {Array} list The list of binder objects.\n   */\n  setBinders(list) {\n    if (typeof list === 'undefined' || list === null) {\n      throw new Error('Cannot set null or undefined binders');\n    }\n    if (this.#binders.length !== 0) {\n      this.unbindLayerGroups();\n    }\n    this.#binders = list.slice();\n    this.bindLayerGroups();\n  }\n\n  /**\n   * Empty the layer group list.\n   */\n  empty() {\n    this.unbindLayerGroups();\n    for (const layerGroup of this.#layerGroups) {\n      layerGroup.empty();\n    }\n    this.#layerGroups = [];\n    this.#activeLayerGroupIndex = undefined;\n  }\n\n  /**\n   * Remove all layers for a specific data.\n   *\n   * @param {string} dataId The data to remove its layers.\n   */\n  removeLayersByDataId(dataId) {\n    for (const layerGroup of this.#layerGroups) {\n      layerGroup.removeLayersByDataId(dataId);\n    }\n  }\n\n  /**\n   * Remove a layer group from this stage.\n   *\n   * @param {LayerGroup} layerGroup The layer group to remove.\n   */\n  removeLayerGroup(layerGroup) {\n    // find layer\n    const index = this.#layerGroups.findIndex((item) => item === layerGroup);\n    if (index === -1) {\n      throw new Error('Cannot find layerGroup to remove');\n    }\n    // unbind\n    this.unbindLayerGroups();\n    // empty layer group\n    layerGroup.empty();\n    // remove from storage\n    this.#layerGroups.splice(index, 1);\n    // update active index\n    if (this.#activeLayerGroupIndex === index) {\n      this.#activeLayerGroupIndex = undefined;\n    }\n    // bind\n    this.bindLayerGroups();\n  }\n\n  /**\n   * Reset the stage: calls reset on all layer groups.\n   */\n  reset() {\n    for (const layerGroup of this.#layerGroups) {\n      layerGroup.reset();\n    }\n  }\n\n  /**\n   * Draw the stage: calls draw on all layer groups.\n   */\n  draw() {\n    for (const layerGroup of this.#layerGroups) {\n      layerGroup.draw();\n    }\n  }\n\n  /**\n   * Fit to container: synchronise the div to world size ratio\n   *   of the group layers.\n   */\n  fitToContainer() {\n    // find the minimum ratio\n    let minRatio;\n    const hasRatio = [];\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      const ratio = this.#layerGroups[i].getDivToWorldSizeRatio();\n      if (typeof ratio !== 'undefined') {\n        hasRatio.push(i);\n        if (typeof minRatio === 'undefined' || ratio < minRatio) {\n          minRatio = ratio;\n        }\n      }\n    }\n    // exit if no ratio\n    if (typeof minRatio === 'undefined') {\n      return;\n    }\n    // apply min ratio to layers\n    for (let j = 0; j < this.#layerGroups.length; ++j) {\n      if (hasRatio.includes(j)) {\n        this.#layerGroups[j].fitToContainer(minRatio);\n      }\n    }\n  }\n\n  /**\n   * Bind the layer groups of the stage.\n   */\n  bindLayerGroups() {\n    if (this.#layerGroups.length === 0 ||\n      this.#layerGroups.length === 1 ||\n      this.#binders.length === 0) {\n      return;\n    }\n    // create callback store\n    this.#callbackStore = new Array(this.#layerGroups.length);\n    // add listeners\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      for (let j = 0; j < this.#binders.length; ++j) {\n        this.#addEventListeners(i, this.#binders[j]);\n      }\n    }\n  }\n\n  /**\n   * Unbind the layer groups of the stage.\n   */\n  unbindLayerGroups() {\n    if (this.#layerGroups.length === 0 ||\n      this.#layerGroups.length === 1 ||\n      this.#binders.length === 0 ||\n      !this.#callbackStore) {\n      return;\n    }\n    // remove listeners\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      for (let j = 0; j < this.#binders.length; ++j) {\n        this.#removeEventListeners(i, this.#binders[j]);\n      }\n    }\n    // clear callback store\n    this.#callbackStore = null;\n  }\n\n  /**\n   * Set the imageSmoothing flag value.\n   *\n   * @param {boolean} flag True to enable smoothing.\n   */\n  setImageSmoothing(flag) {\n    this.#imageSmoothing = flag;\n    // set for existing layer groups\n    for (const layerGroup of this.#layerGroups) {\n      layerGroup.setImageSmoothing(flag);\n    }\n  }\n\n  /**\n   * Get the binder callback function for a given layer group index.\n   * The function is created if not yet stored.\n   *\n   * @param {object} binder The layer binder.\n   * @param {number} index The index of the associated layer group.\n   * @returns {Function} The binder function.\n   */\n  #getBinderCallback(binder, index) {\n    if (typeof this.#callbackStore[index] === 'undefined') {\n      this.#callbackStore[index] = [];\n    }\n    const store = this.#callbackStore[index];\n    let binderObj = store.find(function (elem) {\n      return elem.binder === binder;\n    });\n    if (typeof binderObj === 'undefined') {\n      // create new callback object\n      binderObj = {\n        binder: binder,\n        callback: (event) => {\n          // stop listeners\n          this.#removeEventListeners(index, binder);\n          // apply binder\n          binder.getCallback(this.#layerGroups[index])(event);\n          // re-start listeners\n          this.#addEventListeners(index, binder);\n        }\n      };\n      this.#callbackStore[index].push(binderObj);\n    }\n    return binderObj.callback;\n  }\n\n  /**\n   * Add event listeners for a given layer group index and binder.\n   *\n   * @param {number} index The index of the associated layer group.\n   * @param {object} binder The layer binder.\n   */\n  #addEventListeners(index, binder) {\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      if (i !== index) {\n        this.#layerGroups[index].addEventListener(\n          binder.getEventType(),\n          this.#getBinderCallback(binder, i)\n        );\n      }\n    }\n  }\n\n  /**\n   * Remove event listeners for a given layer group index and binder.\n   *\n   * @param {number} index The index of the associated layer group.\n   * @param {object} binder The layer binder.\n   */\n  #removeEventListeners(index, binder) {\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\n      if (i !== index) {\n        this.#layerGroups[index].removeEventListener(\n          binder.getEventType(),\n          this.#getBinderCallback(binder, i)\n        );\n      }\n    }\n  }\n\n} // class Stage\n","import {Index} from '../math/index';\nimport {colourNameToHex} from '../utils/colour';\nimport {WindowLevel} from '../image/windowLevel';\n\n// external\nimport Konva from 'konva';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * State class.\n * Saves: data url/path, display info.\n *\n * History:\n * - v0.5 (dwv 0.30.0, 12/2021):\n *   - store position as array,\n *   - new draw position group key.\n * - v0.4 (dwv 0.29.0, 06/2021):\n *   - move drawing details into meta property,\n *   - remove scale center and translation, add offset.\n * - v0.3 (dwv v0.23.0, 03/2018):\n *   - new drawing structure, drawings are now the full layer object and\n *     using toObject to avoid saving a string representation,\n *   - new details structure: simple array of objects referenced by draw ids.\n * - v0.2 (dwv v0.17.0, 12/2016):\n *   - adds draw details: array [nslices][nframes] of detail objects.\n * - v0.1 (dwv v0.15.0, 07/2016):\n *   - adds version,\n *   - drawings: array [nslices][nframes] with all groups.\n * - initial release (dwv v0.10.0, 05/2015), no version number:\n *   - content: window-center, window-width, position, scale,\n *       scaleCenter, translation, drawings,\n *   - drawings: array [nslices] with all groups.\n */\nexport class State {\n  /**\n   * The state data id.\n   *\n   * @type {string}\n   */\n  #dataId;\n\n  /**\n   * @param {string} dataId The associated data id.\n   */\n  constructor(dataId) {\n    this.#dataId = dataId;\n  }\n\n  /**\n   * Load an application state from JSON.\n   *\n   * @param {string} json The state as a JSON string.\n   * @returns {object} The state object.\n   */\n  fromJSON(json) {\n    const data = JSON.parse(json);\n    let res = null;\n    if (data.version === '0.1') {\n      res = this.#readV01(data);\n    } else if (data.version === '0.2') {\n      res = this.#readV02(data);\n    } else if (data.version === '0.3') {\n      res = this.#readV03(data);\n    } else if (data.version === '0.4') {\n      res = this.#readV04(data);\n    } else if (data.version === '0.5') {\n      res = this.#readV05(data);\n    } else {\n      throw new Error('Unknown state file format version: \\'' +\n        data.version + '\\'.');\n    }\n    return res;\n  }\n\n  /**\n   * Load an application state from JSON.\n   *\n   * @param {App} app The app to apply the state to.\n   * @param {object} data The state data.\n   */\n  apply(app, data) {\n    const layerGroup = app.getActiveLayerGroup();\n    const viewLayer = layerGroup.getBaseViewLayer();\n    const viewController = viewLayer.getViewController();\n    // display\n    const wl = new WindowLevel(data['window-center'], data['window-width']);\n    viewController.setWindowLevel(wl);\n    // position is index...\n    viewController.setCurrentIndex(new Index(data.position));\n    // apply saved scale on top of current base one\n    const baseScale = app.getActiveLayerGroup().getBaseScale();\n    let scale = null;\n    let offset = null;\n    if (typeof data.scaleCenter !== 'undefined') {\n      scale = {\n        x: data.scale * baseScale.x,\n        y: data.scale * baseScale.y,\n        z: 1\n      };\n      // ---- transform translation (now) ----\n      // Tx = -offset.x * scale.x\n      // => offset.x = -Tx / scale.x\n      // ---- transform translation (before) ----\n      // origin.x = centerX - (centerX - origin.x) * (newZoomX / zoom.x);\n      // (zoom.x -> initial zoom = base scale, origin.x = 0)\n      // Tx = origin.x + (trans.x * zoom.x)\n      const originX = data.scaleCenter.x - data.scaleCenter.x * data.scale;\n      const originY = data.scaleCenter.y - data.scaleCenter.y * data.scale;\n      const oldTx = originX + data.translation.x * scale.x;\n      const oldTy = originY + data.translation.y * scale.y;\n      offset = {\n        x: -oldTx / scale.x,\n        y: -oldTy / scale.y,\n        z: 0\n      };\n    } else {\n      scale = {\n        x: data.scale.x * baseScale.x,\n        y: data.scale.y * baseScale.y,\n        z: baseScale.z\n      };\n      offset = {\n        x: data.offset.x,\n        y: data.offset.y,\n        z: 0\n      };\n    }\n    app.getActiveLayerGroup().setScale(scale);\n    app.getActiveLayerGroup().setOffset(offset);\n    // drawings (will draw the draw layer)\n    app.setDrawings(data.drawings, data.drawingsDetails, this.#dataId);\n  }\n\n  /**\n   * Read an application state from an Object in v0.1 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  #readV01(data) {\n    // v0.1 -> v0.2\n    const v02DAndD = v01Tov02DrawingsAndDetails(data.drawings);\n    // v0.2 -> v0.3, v0.4\n    data.drawings = v02Tov03Drawings(v02DAndD.drawings).toObject();\n    data.drawingsDetails = v03Tov04DrawingsDetails(\n      v02DAndD.drawingsDetails);\n    // v0.4 -> v0.5\n    data = v04Tov05Data(data);\n    data.drawings = v04Tov05Drawings(data.drawings);\n    return data;\n  }\n\n  /**\n   * Read an application state from an Object in v0.2 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  #readV02(data) {\n    // v0.2 -> v0.3, v0.4\n    data.drawings = v02Tov03Drawings(data.drawings).toObject();\n    data.drawingsDetails = v03Tov04DrawingsDetails(\n      v02Tov03DrawingsDetails(data.drawingsDetails));\n    // v0.4 -> v0.5\n    data = v04Tov05Data(data);\n    data.drawings = v04Tov05Drawings(data.drawings);\n    return data;\n  }\n\n  /**\n   * Read an application state from an Object in v0.3 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  #readV03(data) {\n    // v0.3 -> v0.4\n    data.drawingsDetails = v03Tov04DrawingsDetails(data.drawingsDetails);\n    // v0.4 -> v0.5\n    data = v04Tov05Data(data);\n    data.drawings = v04Tov05Drawings(data.drawings);\n    return data;\n  }\n\n  /**\n   * Read an application state from an Object in v0.4 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  #readV04(data) {\n    // v0.4 -> v0.5\n    data = v04Tov05Data(data);\n    data.drawings = v04Tov05Drawings(data.drawings);\n    return data;\n  }\n  /**\n   * Read an application state from an Object in v0.5 format.\n   *\n   * @param {object} data The Object representation of the state.\n   * @returns {object} The state object.\n   */\n  #readV05(data) {\n    return data;\n  }\n\n} // State class\n\n/**\n * Convert drawings from v0.2 to v0.3:\n * - v0.2: one layer per slice/frame,\n * - v0.3: one layer, one group per slice. `setDrawing` expects the full stage.\n *\n * @param {Array} drawings An array of drawings.\n * @returns {object} The layer with the converted drawings.\n */\nfunction v02Tov03Drawings(drawings) {\n  // Auxiliar variables\n  let group, groupShapes, parentGroup;\n  // Avoid errors when dropping multiple states\n  //drawLayer.getChildren().each(function(node){\n  //    node.visible(false);\n  //});\n\n  /**\n   * Get the draw group id for a given position.\n   *\n   * @param {Index} currentPosition The current position.\n   * @returns {string} The group id.\n   */\n  function getDrawPositionGroupId(currentPosition) {\n    const sliceNumber = currentPosition.get(2);\n    const frameNumber = currentPosition.length() === 4\n      ? currentPosition.get(3) : 0;\n    return 'slice-' + sliceNumber + '_frame-' + frameNumber;\n  }\n\n  const drawLayer = new Konva.Layer({\n    listening: false,\n    visible: true\n  });\n\n  // Get the positions-groups data\n  const groupDrawings = typeof drawings === 'string'\n    ? JSON.parse(drawings) : drawings;\n  // Iterate over each position-groups\n  for (let k = 0, lenk = groupDrawings.length; k < lenk; ++k) {\n    // Iterate over each frame\n    for (let f = 0, lenf = groupDrawings[k].length; f < lenf; ++f) {\n      groupShapes = groupDrawings[k][f];\n      if (groupShapes.length !== 0) {\n        // Create position-group set as visible and append it to drawLayer\n        parentGroup = new Konva.Group({\n          id: getDrawPositionGroupId(new Index([1, 1, k, f])),\n          name: 'position-group',\n          visible: false\n        });\n\n        // Iterate over shapes-group\n        for (let g = 0, leng = groupShapes.length; g < leng; ++g) {\n          // create the konva group\n          group = Konva.Node.create(groupShapes[g]);\n          // enforce draggable: only the shape was draggable in v0.2,\n          // now the whole group is.\n          group.draggable(true);\n          group.getChildren().forEach(function (gnode) {\n            gnode.draggable(false);\n          });\n          // add to position group\n          parentGroup.add(group);\n        }\n        // add to layer\n        drawLayer.add(parentGroup);\n      }\n    }\n  }\n\n  return drawLayer;\n}\n\n/**\n * Convert drawings from v0.1 to v0.2:\n * - v0.1: text on its own,\n * - v0.2: text as part of label.\n *\n * @param {Array} inputDrawings An array of drawings.\n * @returns {object} The converted drawings.\n */\nfunction v01Tov02DrawingsAndDetails(inputDrawings) {\n  const newDrawings = [];\n  const drawingsDetails = {};\n\n  let drawGroups;\n  let drawGroup;\n  // loop over each slice\n  for (let k = 0, lenk = inputDrawings.length; k < lenk; ++k) {\n    // loop over each frame\n    newDrawings[k] = [];\n    for (let f = 0, lenf = inputDrawings[k].length; f < lenf; ++f) {\n      // draw group\n      drawGroups = inputDrawings[k][f];\n      const newFrameDrawings = [];\n      // Iterate over shapes-group\n      for (let g = 0, leng = drawGroups.length; g < leng; ++g) {\n        // create konva group from input\n        drawGroup = Konva.Node.create(drawGroups[g]);\n        // force visible (not set in state)\n        drawGroup.visible(true);\n        // label position\n        let pos = {x: 0, y: 0};\n        // update shape colour\n        const kshape = drawGroup.getChildren(function (node) {\n          return node.name() === 'shape';\n        })[0];\n        kshape.stroke(colourNameToHex(kshape.stroke()));\n        // special line case\n        if (drawGroup.name() === 'line-group') {\n          // update name\n          drawGroup.name('ruler-group');\n          // add ticks\n          const ktick0 = new Konva.Line({\n            points: [kshape.points()[0],\n              kshape.points()[1],\n              kshape.points()[0],\n              kshape.points()[1]],\n            name: 'shape-tick0'\n          });\n          drawGroup.add(ktick0);\n          const ktick1 = new Konva.Line({\n            points: [kshape.points()[2],\n              kshape.points()[3],\n              kshape.points()[2],\n              kshape.points()[3]],\n            name: 'shape-tick1'\n          });\n          drawGroup.add(ktick1);\n        }\n        // special protractor case: update arc name\n        const karcs = drawGroup.getChildren(function (node) {\n          return node.name() === 'arc';\n        });\n        if (karcs.length === 1) {\n          karcs[0].name('shape-arc');\n        }\n        // get its text\n        const ktexts = drawGroup.getChildren(function (node) {\n          return node.name() === 'text';\n        });\n        // update text: move it into a label\n        let ktext = new Konva.Text({\n          name: 'text',\n          text: ''\n        });\n        if (ktexts.length === 1) {\n          pos.x = ktexts[0].x();\n          pos.y = ktexts[0].y();\n          // remove it from the group\n          ktexts[0].remove();\n          // use it\n          ktext = ktexts[0];\n        } else {\n          // use shape position if no text\n          if (kshape.points().length !== 0) {\n            pos = {x: kshape.points()[0],\n              y: kshape.points()[1]};\n          }\n        }\n        // create new label with text and tag\n        const klabel = new Konva.Label({\n          x: pos.x,\n          y: pos.y,\n          name: 'label'\n        });\n        klabel.add(ktext);\n        klabel.add(new Konva.Tag());\n        // add label to group\n        drawGroup.add(klabel);\n        // add group to list\n        newFrameDrawings.push(JSON.stringify(drawGroup.toObject()));\n\n        // create details (v0.3 format)\n        let textExpr = ktext.text();\n        const txtLen = textExpr.length;\n        let quant = null;\n        // adapt to text with flag\n        if (drawGroup.name() === 'ruler-group') {\n          quant = {\n            length: {\n              value: parseFloat(textExpr.substring(0, txtLen - 2)),\n              unit: textExpr.substring(-2)\n            }\n          };\n          textExpr = '{length}';\n        } else if (drawGroup.name() === 'ellipse-group' ||\n                    drawGroup.name() === 'rectangle-group') {\n          quant = {\n            surface: {\n              value: parseFloat(textExpr.substring(0, txtLen - 3)),\n              unit: textExpr.substring(-3)\n            }\n          };\n          textExpr = '{surface}';\n        } else if (drawGroup.name() === 'protractor-group' ||\n                    drawGroup.name() === 'rectangle-group') {\n          quant = {\n            angle: {\n              value: parseFloat(textExpr.substring(0, txtLen - 1)),\n              unit: textExpr.substring(-1)\n            }\n          };\n          textExpr = '{angle}';\n        }\n        // set details\n        drawingsDetails[drawGroup.id()] = {\n          textExpr: textExpr,\n          longText: '',\n          quant: quant\n        };\n\n      }\n      newDrawings[k].push(newFrameDrawings);\n    }\n  }\n\n  return {drawings: newDrawings, drawingsDetails: drawingsDetails};\n}\n\n/**\n * Convert drawing details from v0.2 to v0.3:\n * - v0.2: array [nslices][nframes] with all,\n * - v0.3: simple array of objects referenced by draw ids.\n *\n * @param {Array} details An array of drawing details.\n * @returns {object} The converted drawings.\n */\nfunction v02Tov03DrawingsDetails(details) {\n  const res = {};\n  // Get the positions-groups data\n  const groupDetails = typeof details === 'string'\n    ? JSON.parse(details) : details;\n  // Iterate over each position-groups\n  for (let k = 0, lenk = groupDetails.length; k < lenk; ++k) {\n    // Iterate over each frame\n    for (let f = 0, lenf = groupDetails[k].length; f < lenf; ++f) {\n      // Iterate over shapes-group\n      for (let g = 0, leng = groupDetails[k][f].length; g < leng; ++g) {\n        const group = groupDetails[k][f][g];\n        res[group.id] = {\n          textExpr: group.textExpr,\n          longText: group.longText,\n          quant: group.quant\n        };\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Convert drawing details from v0.3 to v0.4:\n * - v0.3: properties at group root,\n * - v0.4: properties in group meta object.\n *\n * @param {Array} details An array of drawing details.\n * @returns {object} The converted drawings.\n */\nfunction v03Tov04DrawingsDetails(details) {\n  const res = {};\n  const keys = Object.keys(details);\n  // Iterate over each position-groups\n  for (let k = 0, lenk = keys.length; k < lenk; ++k) {\n    const detail = details[keys[k]];\n    res[keys[k]] = {\n      meta: {\n        textExpr: detail.textExpr,\n        longText: detail.longText,\n        quantification: detail.quant\n      }\n    };\n  }\n  return res;\n}\n\n/**\n * Convert drawing from v0.4 to v0.5:\n * - v0.4: position as object,\n * - v0.5: position as array.\n *\n * @param {object} data An array of drawing.\n * @returns {object} The converted drawings.\n */\nfunction v04Tov05Data(data) {\n  const pos = data.position;\n  data.position = [pos.i, pos.j, pos.k];\n  return data;\n}\n\n/**\n * Convert drawing from v0.4 to v0.5:\n * - v0.4: draw id as 'slice-0_frame-1',\n * - v0.5: draw id as '#2-0_#3-1'.\n *\n * @param {object} inputDrawings An array of drawing.\n * @returns {object} The converted drawings.\n */\nfunction v04Tov05Drawings(inputDrawings) {\n  // Iterate over each position-groups\n  const posGroups = inputDrawings.children;\n  for (let k = 0, lenk = posGroups.length; k < lenk; ++k) {\n    const posGroup = posGroups[k];\n    const id = posGroup.attrs.id;\n    const ids = id.split('_');\n    const sliceNumber = parseInt(ids[0].substring(6), 10); // 'slice-0'\n    const frameNumber = parseInt(ids[1].substring(6), 10); // 'frame-0'\n    let newId = '#2-';\n    if (sliceNumber === 0 && frameNumber !== 0) {\n      newId += frameNumber;\n    } else {\n      newId += sliceNumber;\n    }\n    posGroup.attrs.id = newId;\n  }\n  return inputDrawings;\n}\n","import {logger} from './logger';\nimport {splitKeyValueString} from './string';\n\n/**\n * Get an full object URL from a string uri.\n *\n * @param {string} uri A string representing the url.\n * @returns {URL} A URL object.\n */\nexport function getUrlFromUri(uri) {\n  // add base to allow for relative urls\n  // (base is not used for absolute urls)\n  let base;\n  if (window.location.origin !== 'null') {\n    base = window.location.origin;\n  }\n  return new URL(uri, base);\n}\n\n/**\n * Split an input URI:\n * 'root?key0=val00&key0=val01&key1=val10' returns\n * { base : root, query : [ key0 : [val00, val01], key1 : val1 ] }\n * Returns an empty object if the input string is not correct (null, empty...)\n * or if it is not a query string (no question mark).\n *\n * @param {string} uri The string to split.\n * @returns {object} The split string.\n */\nexport function splitUri(uri) {\n  // result\n  const result = {};\n  // check if query string\n  let sepIndex = null;\n  if (uri && (sepIndex = uri.indexOf('?')) !== -1) {\n    // base: before the '?'\n    result.base = uri.substring(0, sepIndex);\n    // query : after the '?' and until possible '#'\n    let hashIndex = uri.indexOf('#');\n    if (hashIndex === -1) {\n      hashIndex = uri.length;\n    }\n    const query = uri.substring(sepIndex + 1, hashIndex);\n    // split key/value pairs of the query\n    result.query = splitKeyValueString(query);\n  }\n  // return\n  return result;\n}\n\n/**\n * Get the query part, split into an array, of an input URI.\n * The URI scheme is: `base?query#fragment`.\n *\n * @param {string} uri The input URI.\n * @returns {object} The query part, split into an array, of the input URI.\n */\nexport function getUriQuery(uri) {\n  // split\n  const parts = splitUri(uri);\n  // check not empty\n  if (Object.keys(parts).length === 0) {\n    return null;\n  }\n  // return query\n  return parts.query;\n}\n\n/**\n * Generic URI query decoder.\n * Supports manifest:\n *   `[dwv root]?input=encodeURIComponent('[manifest file]')&type=manifest`.\n * Or encoded URI with base and key value/pairs:\n *   `[dwv root]?input=encodeURIComponent([root]?key0=value0&key1=value1)`.\n *\n * @param {object} query The query part to the input URI.\n * @param {Function} callback The function to call with the decoded file urls.\n * @param {object} options Optional url request options.\n */\nexport function decodeQuery(query, callback, options) {\n  // manifest\n  if (query.type && query.type === 'manifest') {\n    decodeManifestQuery(query, callback);\n  } else {\n    // default case: encoded URI with base and key/value pairs\n    callback(\n      decodeKeyValueUri(query.input, query.dwvReplaceMode),\n      options);\n  }\n}\n\n/**\n * Decode a Key/Value pair URI. If a key is repeated, the result\n *   be an array of base + each key.\n *\n * @param {string} uri The URI to decode.\n * @param {string} replaceMode The key replace mode. Can be:\n * - key (default): keep the key\n * - other than key: do not use the key\n *   'file' is a special case where the '?' of the query is not kept.\n * @returns {string[]} The list of input file urls.\n */\nexport function decodeKeyValueUri(uri, replaceMode) {\n  const result = [];\n\n  // repeat key replace mode (default to keep key)\n  let repeatKeyReplaceMode = 'key';\n  if (replaceMode) {\n    repeatKeyReplaceMode = replaceMode;\n  }\n\n  // decode input URI\n  const queryUri = decodeURIComponent(uri);\n  // get key/value pairs from input URI\n  const inputQueryPairs = splitUri(queryUri);\n  if (Object.keys(inputQueryPairs).length === 0) {\n    result.push(queryUri);\n  } else {\n    const keys = Object.keys(inputQueryPairs.query);\n    // find repeat key\n    let repeatKey = null;\n    for (let i = 0; i < keys.length; ++i) {\n      if (inputQueryPairs.query[keys[i]] instanceof Array) {\n        repeatKey = keys[i];\n        break;\n      }\n    }\n\n    if (!repeatKey) {\n      result.push(queryUri);\n    } else {\n      const repeatList = inputQueryPairs.query[repeatKey];\n      // build base uri\n      let baseUrl = inputQueryPairs.base;\n      // add '?' when:\n      // - base is not empty\n      // - the repeatKey is not 'file'\n      // root/path/to/?file=0.jpg&file=1.jpg\n      if (baseUrl !== '' && repeatKey !== 'file') {\n        baseUrl += '?';\n      }\n      let gotOneArg = false;\n      for (let j = 0; j < keys.length; ++j) {\n        if (keys[j] !== repeatKey) {\n          if (gotOneArg) {\n            baseUrl += '&';\n          }\n          baseUrl += keys[j] + '=' + inputQueryPairs.query[keys[j]];\n          gotOneArg = true;\n        }\n      }\n      // append built urls to result\n      let url;\n      for (let k = 0; k < repeatList.length; ++k) {\n        url = baseUrl;\n        if (gotOneArg) {\n          url += '&';\n        }\n        if (repeatKeyReplaceMode === 'key') {\n          url += repeatKey + '=';\n        }\n        // other than 'key' mode: do nothing\n        url += repeatList[k];\n        result.push(url);\n      }\n    }\n  }\n  // return\n  return result;\n}\n\n/**\n * Decode a manifest query.\n *\n * @external XMLHttpRequest\n * @param {object} query The manifest query: {input, nslices},\n * with input the input URI and nslices the number of slices.\n * @param {Function} callback The function to call with the decoded urls.\n */\nfunction decodeManifestQuery(query, callback) {\n  let uri = '';\n  if (query.input[0] === '/') {\n    uri = window.location.protocol + '//' + window.location.host;\n  }\n  // TODO: needs to be decoded (decodeURIComponent?\n  uri += query.input;\n\n  /**\n   * Handle error.\n   *\n   * @param {object} event The error event.\n   */\n  function onError(event) {\n    logger.warn('RequestError while receiving manifest: ' +\n      event.target.status);\n  }\n\n  /**\n   * Handle load.\n   *\n   * @param {object} event The load event.\n   */\n  function onLoad(event) {\n    callback(decodeManifest(event.target.responseXML, query.nslices));\n  }\n\n  const request = new XMLHttpRequest();\n  request.open('GET', decodeURIComponent(uri), true);\n  request.responseType = 'document';\n  request.onload = onLoad;\n  request.onerror = onError;\n  request.send(null);\n}\n\n/**\n * Decode an XML manifest.\n *\n * @param {object} manifest The manifest to decode.\n * @param {number} nslices The number of slices to load.\n * @returns {string[]} The decoded manifest.\n */\nexport function decodeManifest(manifest, nslices) {\n  const result = [];\n  // wado url\n  const wadoElement = manifest.getElementsByTagName('wado_query');\n  const wadoURL = wadoElement[0].getAttribute('wadoURL');\n  const rootURL = wadoURL + '?requestType=WADO&contentType=application/dicom&';\n  // patient list\n  const patientList = manifest.getElementsByTagName('Patient');\n  if (patientList.length > 1) {\n    logger.warn('More than one patient, loading first one.');\n  }\n  // study list\n  const studyList = patientList[0].getElementsByTagName('Study');\n  if (studyList.length > 1) {\n    logger.warn('More than one study, loading first one.');\n  }\n  const studyUID = studyList[0].getAttribute('StudyInstanceUID');\n  // series list\n  const seriesList = studyList[0].getElementsByTagName('Series');\n  if (seriesList.length > 1) {\n    logger.warn('More than one series, loading first one.');\n  }\n  const seriesUID = seriesList[0].getAttribute('SeriesInstanceUID');\n  // instance list\n  const instanceList = seriesList[0].getElementsByTagName('Instance');\n  // loop on instances and push links\n  let max = instanceList.length;\n  if (nslices < max) {\n    max = nslices;\n  }\n  for (let i = 0; i < max; ++i) {\n    const sopInstanceUID = instanceList[i].getAttribute('SOPInstanceUID');\n    const link = rootURL +\n        '&studyUID=' + studyUID +\n        '&seriesUID=' + seriesUID +\n        '&objectUID=' + sopInstanceUID;\n    result.push(link);\n  }\n  // return\n  return result;\n}\n","/**\n * UndoStack class.\n */\nexport class UndoStack extends EventTarget {\n  /**\n   * Array of commands.\n   *\n   * @type {Array}\n   */\n  #stack = [];\n\n  /**\n   * Current command index.\n   * Warning: 1 based.\n   *\n   * @type {number}\n   */\n  #curCmdIndex = 0;\n\n  /**\n   * Get the stack size.\n   *\n   * @returns {number} The size of the stack.\n   */\n  getStackSize() {\n    return this.#stack.length;\n  }\n\n  /**\n   * Get the current stack index.\n   * Warning: 1 based.\n   *\n   * @returns {number} The stack index.\n   */\n  getCurrentStackIndex() {\n    return this.#curCmdIndex;\n  }\n\n  /**\n   * Get the current command.\n   *\n   * @returns {object} The command.\n   */\n  getCurrentCommand() {\n    return this.#stack[this.#curCmdIndex - 1];\n  }\n\n  /**\n   * Add a command to the stack.\n   *\n   * @param {object} cmd The command to add.\n   * @fires UndoStack#undoadd\n   */\n  add(cmd) {\n    // clear commands after current index\n    this.#stack = this.#stack.slice(0, this.#curCmdIndex);\n    // store command\n    this.#stack.push(cmd);\n    // increment index\n    ++this.#curCmdIndex;\n    /**\n     * Add command to undo stack event.\n     * `event.target.getCurrentCommand()` will return the added command.\n     *\n     * @event UndoStack#undoadd\n     * @type {Event}\n     */\n    this.dispatchEvent(new Event('undoadd'));\n  }\n\n  /**\n   * Remove a command from the stack.\n   *\n   * @param {string} name The name of the command to remove.\n   * @returns {boolean} True if the command was found and removed.\n   * @fires UndoStack#undoremove\n   */\n  remove(name) {\n    let res = false;\n    const hasInputName = function (element) {\n      return element.getName() === name;\n    };\n    const index = this.#stack.findIndex(hasInputName);\n    if (index !== -1) {\n      // result\n      res = true;\n      /**\n       * Remove command from undo stack event.\n       * Get the removed command name from the `event.detail`.\n       *\n       * @event UndoStack#undoremove\n       * @type {CustomEvent}\n       */\n      this.dispatchEvent(new CustomEvent('undoremove', {\n        detail: {commandName: name}\n      }));\n      // remove command\n      this.#stack.splice(index, 1);\n      // decrement index\n      --this.#curCmdIndex;\n    }\n    return res;\n  }\n\n  /**\n   * Undo the last command.\n   *\n   * @fires UndoStack#undo\n   */\n  undo() {\n    if (this.#curCmdIndex > 0) {\n      /**\n       * Command undo event.\n       * `event.target.getCurrentCommand()` will return the undone command.\n       *\n       * @event UndoStack#undo\n       * @type {Event}\n       */\n      this.dispatchEvent(new Event('undo'));\n      // decrement command index\n      --this.#curCmdIndex;\n      // undo last command\n      this.#stack[this.#curCmdIndex].undo();\n    }\n  }\n\n  /**\n   * Redo the last command.\n   *\n   * @fires UndoStack#redo\n   */\n  redo() {\n    if (this.#curCmdIndex < this.#stack.length) {\n      // run last command\n      this.#stack[this.#curCmdIndex].execute();\n      // increment command index\n      ++this.#curCmdIndex;\n      /**\n       * Command redo event.\n       * `event.target.getCurrentCommand()` will return the re-done command.\n       *\n       * @event UndoStack#redo\n       * @type {Event}\n       */\n      this.dispatchEvent(new Event('redo'));\n    }\n  }\n\n} // UndoStack class\n","import {InteractionEventNames} from '../gui/generic';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {LayerGroup} from '../gui/layerGroup';\nimport {ViewLayer} from '../gui/viewLayer';\nimport {DrawLayer} from '../gui/drawLayer';\n/* eslint-enable no-unused-vars */\n\n/**\n * Toolbox controller.\n */\nexport class ToolboxController {\n\n  /**\n   * List of tools to control.\n   *\n   * @type {object}\n   */\n  #toolList;\n\n  /**\n   * Selected tool.\n   *\n   * @type {object}\n   */\n  #selectedTool = null;\n\n  /**\n   * Callback store to allow attach/detach.\n   *\n   * @type {Array}\n   */\n  #callbackStore = [];\n\n  /**\n   * Current layers bound to tool.\n   *\n   * @type {object}\n   */\n  #boundLayers = {};\n\n  /**\n   * @param {object} toolList The list of tool objects.\n   */\n  constructor(toolList) {\n    this.#toolList = toolList;\n  }\n\n  /**\n   * Initialise.\n   */\n  init() {\n    for (const key in this.#toolList) {\n      this.#toolList[key].init();\n    }\n    // enable shortcuts\n    this.enableShortcuts(true);\n  }\n\n  /**\n   * Enable or disable shortcuts. The 'init' methods enables shortcuts\n   *  by default. Call this method after init to disable shortcuts.\n   *\n   * @param {boolean} flag True to enable shortcuts.\n   */\n  enableShortcuts(flag) {\n    if (flag) {\n      window.addEventListener('keydown',\n        this.#getCallback('window', 'keydown'), true);\n    } else {\n      window.removeEventListener('keydown',\n        this.#getCallback('window', 'keydown'), true);\n    }\n  }\n\n  /**\n   * Get the tool list.\n   *\n   * @returns {Array} The list of tool objects.\n   */\n  getToolList() {\n    return this.#toolList;\n  }\n\n  /**\n   * Check if a tool is in the tool list.\n   *\n   * @param {string} name The name to check.\n   * @returns {boolean} The tool list element for the given name.\n   */\n  hasTool(name) {\n    return typeof this.getToolList()[name] !== 'undefined';\n  }\n\n  /**\n   * Get the selected tool.\n   *\n   * @returns {object} The selected tool.\n   */\n  getSelectedTool() {\n    return this.#selectedTool;\n  }\n\n  /**\n   * Get the selected tool event handler.\n   *\n   * @param {string} eventType The event type, for example\n   *   mousedown, touchstart...\n   * @returns {Function} The event handler.\n   */\n  getSelectedToolEventHandler(eventType) {\n    return this.getSelectedTool()[eventType];\n  }\n\n  /**\n   * Set the selected tool.\n   *\n   * @param {string} name The name of the tool.\n   */\n  setSelectedTool(name) {\n    // check if we have it\n    if (!this.hasTool(name)) {\n      throw new Error('Unknown tool: \\'' + name + '\\'');\n    }\n    // de-activate previous\n    if (this.#selectedTool) {\n      this.#selectedTool.activate(false);\n    }\n    // set internal var\n    this.#selectedTool = this.#toolList[name];\n    // activate new tool\n    this.#selectedTool.activate(true);\n  }\n\n  /**\n   * Set the selected tool live features.\n   *\n   * @param {object} list The list of features.\n   */\n  setToolFeatures(list) {\n    if (this.getSelectedTool()) {\n      this.getSelectedTool().setFeatures(list);\n    }\n  }\n\n  /**\n   * Listen to layer interaction events.\n   *\n   * @param {LayerGroup} layerGroup The associated layer group.\n   * @param {ViewLayer|DrawLayer} layer The layer to listen to.\n   */\n  bindLayerGroup(layerGroup, layer) {\n    const divId = layerGroup.getDivId();\n    // listen to active layer changes\n    layerGroup.addEventListener(\n      'activelayerchange', this.#getActiveLayerChangeHandler(divId));\n    // bind the layer\n    this.#internalBindLayerGroup(divId, layer);\n  }\n\n  /**\n   * Bind a layer group to this controller.\n   *\n   * @param {string} layerGroupDivId The layer group div id.\n   * @param {ViewLayer|DrawLayer} layer The layer.\n   */\n  #internalBindLayerGroup(layerGroupDivId, layer) {\n    // remove from local list if preset\n    if (typeof this.#boundLayers[layerGroupDivId] !== 'undefined') {\n      this.#unbindLayer(this.#boundLayers[layerGroupDivId]);\n    }\n    // replace layer in local list\n    this.#boundLayers[layerGroupDivId] = layer;\n    // bind layer\n    this.#bindLayer(layer);\n  }\n\n  /**\n   * Get an active layer change handler.\n   *\n   * @param {string} divId The associated layer group div id.\n   * @returns {Function} The event handler.\n   */\n  #getActiveLayerChangeHandler(divId) {\n    return (event) => {\n      const layer = event.value[0];\n      if (typeof layer !== 'undefined') {\n        this.#internalBindLayerGroup(divId, layer);\n      }\n    };\n  }\n\n  /**\n   * Add canvas mouse and touch listeners to a layer.\n   *\n   * @param {ViewLayer|DrawLayer} layer The layer to start listening to.\n   */\n  #bindLayer(layer) {\n    layer.bindInteraction();\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      layer.addEventListener(names[i],\n        this.#getCallback(layer.getId(), names[i]));\n    }\n  }\n\n  /**\n   * Remove canvas mouse and touch listeners to a layer.\n   *\n   * @param {ViewLayer|DrawLayer} layer The layer to stop listening to.\n   */\n  #unbindLayer(layer) {\n    layer.unbindInteraction();\n    // interaction events\n    const names = InteractionEventNames;\n    for (let i = 0; i < names.length; ++i) {\n      layer.removeEventListener(names[i],\n        this.#getCallback(layer.getId(), names[i]));\n    }\n  }\n\n  /**\n   * Mou(se) and (T)ouch event handler. This function just determines\n   * the mouse/touch position relative to the canvas element.\n   * It then passes it to the current tool.\n   *\n   * @param {string} layerId The layer id.\n   * @param {string} eventType The event type.\n   * @returns {object} A callback for the provided layer and event.\n   */\n  #getCallback(layerId, eventType) {\n    if (typeof this.#callbackStore[layerId] === 'undefined') {\n      this.#callbackStore[layerId] = [];\n    }\n\n    if (typeof this.#callbackStore[layerId][eventType] === 'undefined') {\n      const applySelectedTool = (event) => {\n        // make sure we have a tool\n        if (this.#selectedTool) {\n          const func = this.#selectedTool[event.type];\n          if (func) {\n            func(event);\n          }\n        }\n      };\n      // store callback\n      this.#callbackStore[layerId][eventType] = applySelectedTool;\n    }\n\n    return this.#callbackStore[layerId][eventType];\n  }\n\n} // class ToolboxController\n","/**\n * Multiple progresses handler.\n * Stores a multi dimensional list of progresses to allow to\n * calculate a global progress.\n *\n */\nexport class MultiProgressHandler {\n\n  /**\n   * List of progresses.\n   * First dimension is a list of item for which the progress is recorded,\n   *   for example file names.\n   * Second dimension is a list of possible progresses, for example\n   *   the progress of the download and the progress of the decoding.\n   *\n   * @type {Array}\n   */\n  #progresses = [];\n\n  /**\n   * Number of dimensions.\n   *\n   * @type {number}\n   */\n  #numberOfDimensions = 2;\n\n  /**\n   * Progress callback.\n   *\n   * @type {Function}\n   */\n  #callback;\n\n  /**\n   * @param {Function} callback The function to pass the global progress to.\n   */\n  constructor(callback) {\n    this.#callback = callback;\n  }\n\n  /**\n   * Set the number of dimensions.\n   *\n   * @param {number} num The number.\n   */\n  setNumberOfDimensions(num) {\n    this.#numberOfDimensions = num;\n  }\n\n  /**\n   * Set the number of data to load.\n   *\n   * @param {number} n The number of data to load.\n   */\n  setNToLoad(n) {\n    for (let i = 0; i < n; ++i) {\n      this.#progresses[i] = [];\n      for (let j = 0; j < this.#numberOfDimensions; ++j) {\n        this.#progresses[i][j] = 0;\n      }\n    }\n  }\n\n  /**\n   * Handle a load progress.\n   * Call the member callback with a global event.\n   *\n   * @param {object} event The progress event.\n   */\n  onprogress = (event) => {\n    // check event\n    if (!event.lengthComputable) {\n      return;\n    }\n    if (typeof event.subindex === 'undefined') {\n      return;\n    }\n    if (typeof event.index === 'undefined') {\n      return;\n    }\n    // calculate percent\n    const percent = (event.loaded * 100) / event.total;\n    // set percent for index\n    this.#progresses[event.index][event.subindex] = percent;\n\n    // item progress\n    let item = null;\n    if (typeof event.item !== 'undefined') {\n      item = event.item;\n    } else {\n      item = {\n        loaded: this.#getItemProgress(event.index),\n        total: 100,\n        source: event.source\n      };\n    }\n\n    // call callback with a global event\n    this.#callback({\n      lengthComputable: true,\n      loaded: this.#getGlobalPercent(),\n      total: 100,\n      item: item\n    });\n  };\n\n  /**\n   * Get the item load percent.\n   *\n   * @param {number} index The index of the item.\n   * @returns {number} The load percentage.\n   */\n  #getItemProgress(index) {\n    let sum = 0;\n    for (let j = 0; j < this.#numberOfDimensions; ++j) {\n      sum += this.#progresses[index][j];\n    }\n    return sum / this.#numberOfDimensions;\n  }\n\n  /**\n   * Get the global load percent including the provided one.\n   *\n   * @returns {number} The accumulated percentage.\n   */\n  #getGlobalPercent() {\n    let sum = 0;\n    const lenprog = this.#progresses.length;\n    for (let i = 0; i < lenprog; ++i) {\n      sum += this.#getItemProgress(i);\n    }\n    return Math.round(sum / lenprog);\n  }\n\n\n  /**\n   * @callback eventFn\n   * @param {object} event The event.\n   */\n\n  /**\n   * Create a mono progress event handler.\n   *\n   * @param {number} index The index of the data.\n   * @param {number} subindex The sub-index of the data.\n   * @returns {eventFn} A progress handler function.\n   */\n  getMonoProgressHandler(index, subindex) {\n    return (event) => {\n      event.index = index;\n      event.subindex = subindex;\n      this.onprogress(event);\n    };\n  }\n\n  /**\n   * Create a mono progress event handler with an undefined index.\n   * Warning: The caller handles the progress index.\n   *\n   * @param {number} subindex The sub-index of the data.\n   * @returns {eventFn} A progress handler function.\n   */\n  getUndefinedMonoProgressHandler(subindex) {\n    return (event) => {\n      event.subindex = subindex;\n      this.onprogress(event);\n    };\n  }\n}\n","import {DicomParser} from './dicomParser';\nimport {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from './dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * Related DICOM tag keys.\n */\nconst TagKeys = {\n  DirectoryRecordSequence: '00041220',\n  DirectoryRecordType: '00041430',\n  ReferencedFileID: '00041500'\n};\n\n/**\n * DICOM record types.\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/current/output/chtml/part03/sect_F.3.2.2.html#table_F.3-3}.\n */\nconst DirectoryRecordTypes = {\n  study: 'STUDY',\n  series: 'SERIES',\n  image: 'IMAGE'\n};\n\n/**\n * Get the file list from a DICOMDIR.\n *\n * @param {object} data The buffer data of the DICOMDIR.\n * @returns {Array|undefined} The file list as an array ordered by\n *   STUDY > SERIES > IMAGES.\n */\nexport function getFileListFromDicomDir(data) {\n  // parse file\n  const parser = new DicomParser();\n  parser.parse(data);\n  return getDicomDirFileList(parser.getDicomElements());\n}\n\n/**\n * Get a DICOMDIR file list.\n *\n * @param {Object<string, DataElement>} dicomElements The dicom elements.\n * @returns {Array|undefined} The file list as an array ordered by\n *   STUDY > SERIES > IMAGES.\n */\nfunction getDicomDirFileList(dicomElements) {\n  // Directory Record Sequence\n  const dirRecSqElement = dicomElements[TagKeys.DirectoryRecordSequence];\n  if (typeof dirRecSqElement === 'undefined' ||\n    typeof dirRecSqElement.value === 'undefined') {\n    logger.warn('No Directory Record Sequence found in DICOMDIR.');\n    return undefined;\n  }\n  const dirSeq = dirRecSqElement.value;\n\n  if (dirSeq.length === 0) {\n    logger.warn('The Directory Record Sequence of the DICOMDIR is empty.');\n    return undefined;\n  }\n\n  const records = [];\n  let series = null;\n  let study = null;\n  for (let i = 0; i < dirSeq.length; ++i) {\n    // Directory Record Type\n    const dirRecTypeElement = dirSeq[i][TagKeys.DirectoryRecordType];\n    if (typeof dirRecTypeElement === 'undefined' ||\n      typeof dirRecTypeElement.value === 'undefined') {\n      continue;\n    }\n    const recType = dirRecTypeElement.value[0];\n\n    // supposed to come in order...\n    if (recType === DirectoryRecordTypes.study) {\n      study = [];\n      records.push(study);\n    } else if (recType === DirectoryRecordTypes.series) {\n      series = [];\n      study.push(series);\n    } else if (recType === DirectoryRecordTypes.image) {\n      // Referenced File ID\n      const refFileIdElement = dirSeq[i][TagKeys.ReferencedFileID];\n      if (typeof refFileIdElement === 'undefined' ||\n        typeof refFileIdElement.value === 'undefined') {\n        continue;\n      }\n      const refFileIds = refFileIdElement.value;\n      // join ids\n      series.push(refFileIds.join('/'));\n    }\n  }\n  return records;\n}\n","import {endsWith, getRootPath} from '../utils/string';\nimport {MultiProgressHandler} from '../utils/progress';\nimport {getFileListFromDicomDir} from '../dicom/dicomDir';\nimport {loaderList} from './loaderList';\n\n// url content types\nexport const urlContentTypes = {\n  Text: 0,\n  ArrayBuffer: 1\n};\n\n/**\n * Urls loader.\n */\nexport class UrlsLoader {\n\n  /**\n   * Input data.\n   *\n   * @type {string[]}\n   */\n  #inputData = null;\n\n  /**\n   * Array of launched requests.\n   *\n   * @type {XMLHttpRequest[]}\n   */\n  #requests = [];\n\n  /**\n   * Data loader.\n   *\n   * @type {object}\n   */\n  #runningLoader = null;\n\n  /**\n   * Number of loaded data.\n   *\n   * @type {number}\n   */\n  #nLoad = 0;\n\n  /**\n   * Number of load end events.\n   *\n   * @type {number}\n   */\n  #nLoadend = 0;\n\n  /**\n   * Flag to know if the load is aborting.\n   *\n   * @type {boolean}\n   */\n  #aborting;\n\n  /**\n   * The default character set (optional).\n   *\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * Get the default character set.\n   *\n   * @returns {string} The default character set.\n   */\n  getDefaultCharacterSet() {\n    return this.#defaultCharacterSet;\n  }\n\n  /**\n   * Set the default character set.\n   *\n   * @param {string} characterSet The character set.\n   */\n  setDefaultCharacterSet(characterSet) {\n    this.#defaultCharacterSet = characterSet;\n  }\n\n  /**\n   * Store the current input.\n   *\n   * @param {string[]} data The input data.\n   */\n  #storeInputData(data) {\n    this.#inputData = data;\n    // reset counters\n    this.#nLoad = 0;\n    this.#nLoadend = 0;\n    // reset flag\n    this.#aborting = false;\n    // clear storage\n    this.#clearStoredRequests();\n    this.#clearStoredLoader();\n  }\n\n  /**\n   * Store a launched request.\n   *\n   * @param {XMLHttpRequest} request The launched request.\n   */\n  #storeRequest(request) {\n    this.#requests.push(request);\n  }\n\n  /**\n   * Clear the stored requests.\n   *\n   */\n  #clearStoredRequests() {\n    this.#requests = [];\n  }\n\n  /**\n   * Store the launched loader.\n   *\n   * @param {object} loader The launched loader.\n   */\n  #storeLoader(loader) {\n    this.#runningLoader = loader;\n  }\n\n  /**\n   * Clear the stored loader.\n   *\n   */\n  #clearStoredLoader() {\n    this.#runningLoader = null;\n  }\n\n  /**\n   * Increment the number of loaded data\n   *   and call onload if loaded all data.\n   *\n   * @param {object} _event The load data event.\n   */\n  #addLoad = (_event) => {\n    this.#nLoad++;\n    // call onload when all is loaded\n    // (not using the input event since it is\n    //   an individual load)\n    if (this.#nLoad === this.#inputData.length) {\n      this.onload({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * Increment the counter of load end events\n   *   and run callbacks when all done, erroneus or not.\n   *\n   * @param {object} _event The load end event.\n   */\n  #addLoadend = (_event) => {\n    this.#nLoadend++;\n    // call onloadend when all is run\n    // (not using the input event since it is\n    //   an individual load end)\n    if (this.#nLoadend === this.#inputData.length) {\n      this.onloadend({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * @callback eventFn\n   * @param {object} event The event.\n   */\n\n  /**\n   * Augment a callback event with a srouce.\n   *\n   * @param {object} callback The callback to augment its event.\n   * @param {object} source The source to add to the event.\n   * @returns {eventFn} The augmented callback.\n   */\n  #augmentCallbackEvent(callback, source) {\n    return (event) => {\n      event.source = source;\n      callback(event);\n    };\n  }\n\n  /**\n   * Load a list of URLs or a DICOMDIR.\n   *\n   * @param {string[]} data The list of urls to load.\n   * @param {object} [options] Load options.\n   */\n  load(data, options) {\n    // send start event\n    this.onloadstart({\n      source: data\n    });\n\n    // check if DICOMDIR case\n    if (data.length === 1 &&\n      (endsWith(data[0], 'DICOMDIR') ||\n      endsWith(data[0], '.dcmdir'))) {\n      this.#loadDicomDir(data[0], options);\n    } else {\n      this.#loadUrls(data, options);\n    }\n  }\n\n  /**\n   * Get a load handler for a data element.\n   *\n   * @param {object} loader The associated loader.\n   * @param {string} dataElement The data element.\n   * @param {number} i The index of the element.\n   * @returns {eventFn} A load handler.\n   */\n  #getLoadHandler(loader, dataElement, i) {\n    return (event) => {\n      // check response status\n      // https://developer.mozilla.org/en-US/docs/Web/HTTP/Response_codes\n      // status 200: \"OK\"; status 0: \"debug\"\n      const status = event.target.status;\n      if (status !== 200 && status !== 0) {\n        this.onerror({\n          source: dataElement,\n          error: 'GET ' + event.target.responseURL +\n            ' ' + event.target.status +\n            ' (' + event.target.statusText + ')',\n          target: event.target\n        });\n        this.#addLoadend();\n      } else {\n        loader.load(event.target.response, dataElement, i);\n      }\n    };\n  }\n\n  /**\n   * Load a list of urls.\n   *\n   * @param {string[]} data The list of urls to load.\n   * @param {object} [options] The options object, can contain:\n   * - requestHeaders: an array of {name, value} to use as request headers,\n   * - withCredentials: boolean xhr.withCredentials flag to pass\n   *   to the request,\n   * - batchSize: the size of the request url batch.\n   */\n  #loadUrls(data, options) {\n    // check input\n    if (typeof data === 'undefined' || data.length === 0) {\n      return;\n    }\n    this.#storeInputData(data);\n\n    // create prgress handler\n    const mproghandler = new MultiProgressHandler(this.onprogress);\n    mproghandler.setNToLoad(data.length);\n\n    // create loaders\n    const loaders = [];\n    for (let m = 0; m < loaderList.length; ++m) {\n      loaders.push(new loaderList[m]());\n    }\n\n    // find an appropriate loader\n    let dataElement = data[0];\n    let loader = null;\n    let foundLoader = false;\n    for (let l = 0; l < loaders.length; ++l) {\n      loader = loaders[l];\n      if (loader.canLoadUrl(dataElement, options)) {\n        foundLoader = true;\n        // load options\n        loader.setOptions({\n          numberOfFiles: data.length,\n          defaultCharacterSet: this.getDefaultCharacterSet()\n        });\n        // set loader callbacks\n        // loader.onloadstart: nothing to do\n        loader.onprogress = mproghandler.getUndefinedMonoProgressHandler(1);\n        loader.onloaditem = this.onloaditem;\n        loader.onload = this.#addLoad;\n        loader.onloadend = this.#addLoadend;\n        loader.onerror = this.onerror;\n        loader.onabort = this.onabort;\n\n        // store loader\n        this.#storeLoader(loader);\n        // exit\n        break;\n      }\n    }\n    if (!foundLoader) {\n      throw new Error('No loader found for url: ' + dataElement);\n    }\n\n    // store last run request index\n    let lastRunRequestIndex = 0;\n    const requestOnLoadEnd = () => {\n      // launch next in queue\n      if (lastRunRequestIndex < this.#requests.length - 1 && !this.#aborting) {\n        ++lastRunRequestIndex;\n        this.#requests[lastRunRequestIndex].send(null);\n      }\n    };\n\n    // loop on I/O elements\n    for (let i = 0; i < data.length; ++i) {\n      dataElement = data[i];\n\n      // check loader\n      if (!loader.canLoadUrl(dataElement, options)) {\n        throw new Error('Input url of different type: ' + dataElement);\n      }\n      /**\n       * The http request.\n       *\n       * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest}.\n       *\n       * @external XMLHttpRequest\n       */\n      const request = new XMLHttpRequest();\n      request.open('GET', dataElement, true);\n\n      // request options\n      if (typeof options !== 'undefined') {\n        // optional request headers\n        if (typeof options.requestHeaders !== 'undefined') {\n          const requestHeaders = options.requestHeaders;\n          for (let j = 0; j < requestHeaders.length; ++j) {\n            if (typeof requestHeaders[j].name !== 'undefined' &&\n              typeof requestHeaders[j].value !== 'undefined') {\n              request.setRequestHeader(\n                requestHeaders[j].name, requestHeaders[j].value);\n            }\n          }\n        }\n        // optional withCredentials\n        // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials\n        if (typeof options.withCredentials !== 'undefined') {\n          request.withCredentials = options.withCredentials;\n        }\n      }\n\n      // set request callbacks\n      // request.onloadstart: nothing to do\n      request.onprogress = this.#augmentCallbackEvent(\n        mproghandler.getMonoProgressHandler(i, 0), dataElement);\n      request.onload = this.#getLoadHandler(loader, dataElement, i);\n      request.onloadend = requestOnLoadEnd;\n      const errorCallback =\n        this.#augmentCallbackEvent(this.onerror, dataElement);\n      request.onerror = (event) => {\n        this.#addLoadend();\n        errorCallback(event);\n      };\n      const timeoutCallback =\n        this.#augmentCallbackEvent(this.ontimeout, dataElement);\n      request.ontimeout = (event) => {\n        this.#addLoadend();\n        timeoutCallback(event);\n      };\n      const abortCallback =\n        this.#augmentCallbackEvent(this.onabort, dataElement);\n      request.onabort = (event) => {\n        this.#addLoadend();\n        abortCallback(event);\n      };\n      // response type (default is 'text')\n      if (loader.loadUrlAs() === urlContentTypes.ArrayBuffer) {\n        request.responseType = 'arraybuffer';\n      }\n\n      // store request\n      this.#storeRequest(request);\n    }\n\n    // launch requests in batch\n    let batchSize = this.#requests.length;\n    if (typeof options !== 'undefined') {\n      // optional request batch size\n      if (typeof options.batchSize !== 'undefined' && batchSize !== 0) {\n        batchSize = Math.min(options.batchSize, this.#requests.length);\n      }\n    }\n    for (let r = 0; r < batchSize; ++r) {\n      if (!this.#aborting) {\n        lastRunRequestIndex = r;\n        this.#requests[lastRunRequestIndex].send(null);\n      }\n    }\n  }\n\n  /**\n   * Load a DICOMDIR.\n   *\n   * @param {string} dicomDirUrl The DICOMDIR url.\n   * @param {object} [options] Load options.\n   */\n  #loadDicomDir(dicomDirUrl, options) {\n    // read DICOMDIR\n    const request = new XMLHttpRequest();\n    request.open('GET', dicomDirUrl, true);\n    request.responseType = 'arraybuffer';\n    // request.onloadstart: nothing to do\n    /**\n     * @param {object} event The load event.\n     */\n    request.onload = (event) => {\n      // check status\n      const status = event.target.status;\n      if (status !== 200 && status !== 0) {\n        this.onerror({\n          source: dicomDirUrl,\n          error: 'GET ' + event.target.responseURL +\n            ' ' + event.target.status +\n            ' (' + event.target.statusText + ')',\n          target: event.target\n        });\n        this.onloadend({});\n      } else {\n        // get the file list\n        const list = getFileListFromDicomDir(event.target.response);\n        // use the first list\n        const urls = list[0][0];\n        // append root url\n        const rootUrl = getRootPath(dicomDirUrl);\n        const fullUrls = [];\n        for (let i = 0; i < urls.length; ++i) {\n          fullUrls.push(rootUrl + '/' + urls[i]);\n        }\n        // load urls\n        this.#loadUrls(fullUrls, options);\n      }\n    };\n    request.onerror = (event) => {\n      this.#augmentCallbackEvent(this.onerror, dicomDirUrl)(event);\n      this.onloadend({});\n    };\n    request.onabort = (event) => {\n      this.#augmentCallbackEvent(this.onabort, dicomDirUrl)(event);\n      this.onloadend({});\n    };\n    // request.onloadend: nothing to do\n    // send request\n    request.send(null);\n  }\n\n  /**\n   * Abort a load.\n   */\n  abort() {\n    this.#aborting = true;\n    // abort non finished requests\n    for (let i = 0; i < this.#requests.length; ++i) {\n      // 0: UNSENT, 1: OPENED, 2: HEADERS_RECEIVED (send()), 3: LOADING, 4: DONE\n      if (this.#requests[i].readyState !== 4) {\n        this.#requests[i].abort();\n      }\n    }\n    // abort loader\n    if (this.#runningLoader && this.#runningLoader.isLoading()) {\n      this.#runningLoader.abort();\n    }\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle a timeout event.\n   * Default does nothing.\n   *\n   * @param {object} _event The timeout event.\n   */\n  ontimeout(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class UrlsLoader\n","/**\n * Thread Pool.\n *\n * Highly inspired from {@link http://www.smartjava.org/content/html5-easily-parallelize-jobs-using-web-workers-and-threadpool}.\n */\nexport class ThreadPool {\n\n  /**\n   * @param {number} poolSize The size of the pool.\n   */\n  constructor(poolSize) {\n    this.poolSize = poolSize;\n    // task queue\n    this.taskQueue = [];\n    // lsit of available threads\n    this.freeThreads = [];\n    // create 'poolSize' number of worker threads\n    for (let i = 0; i < poolSize; ++i) {\n      this.freeThreads.push(new WorkerThread(this));\n    }\n    // list of running threads (unsed in abort)\n    this.runningThreads = [];\n  }\n\n  /**\n   * Add a worker task to the queue.\n   * Will be run when a thread is made available.\n   *\n   * @param {object} workerTask The task to add to the queue.\n   */\n  addWorkerTask(workerTask) {\n    // send work start if first task\n    if (this.freeThreads.length === this.poolSize) {\n      this.onworkstart({type: 'work-start'});\n    }\n    // launch task or queue\n    if (this.freeThreads.length > 0) {\n      // get the first free worker thread\n      const workerThread = this.freeThreads.shift();\n      // add the thread to the runnning list\n      this.runningThreads.push(workerThread);\n      // run the input task\n      workerThread.run(workerTask);\n    } else {\n      // no free thread, add task to queue\n      this.taskQueue.push(workerTask);\n    }\n  }\n\n  /**\n   * Abort all threads.\n   */\n  abort() {\n    // stop all threads\n    this.#stop();\n    // callback\n    this.onabort({type: 'work-abort'});\n    this.onworkend({type: 'work-end'});\n  }\n\n  /**\n   * Handle a task end.\n   *\n   * @param {object} workerThread The thread to free.\n   */\n  onTaskEnd(workerThread) {\n    // launch next task in queue or finish\n    if (this.taskQueue.length > 0) {\n      // get waiting task\n      const workerTask = this.taskQueue.shift();\n      // use input thread to run the waiting task\n      workerThread.run(workerTask);\n    } else {\n      // stop the worker\n      workerThread.stop();\n      // no task to run, add to free list\n      this.freeThreads.push(workerThread);\n      // remove from running list\n      for (let i = 0; i < this.runningThreads.length; ++i) {\n        if (this.runningThreads[i].getId() === workerThread.getId()) {\n          this.runningThreads.splice(i, 1);\n        }\n      }\n      // the work is done when the queue is back to its initial size\n      if (this.freeThreads.length === this.poolSize) {\n        this.onwork({type: 'work'});\n        this.onworkend({type: 'work-end'});\n      }\n    }\n  }\n\n  /**\n   * Handle an error message from a worker.\n   *\n   * @param {object} event The error event.\n   */\n  handleWorkerError = (event) => {\n    // stop all threads\n    this.#stop();\n    // callback\n    this.onerror({error: event});\n    this.onworkend({type: 'work-end'});\n  };\n\n  // private ----------------------------------------------------------------\n\n  /**\n   * Stop the pool: stop all running threads.\n   *\n   */\n  #stop() {\n    // clear tasks\n    this.taskQueue = [];\n    // cancel running workers\n    for (let i = 0; i < this.runningThreads.length; ++i) {\n      this.runningThreads[i].stop();\n    }\n    this.runningThreads = [];\n  }\n\n\n  /**\n   * Handle a work start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The work start event.\n   */\n  onworkstart(_event) {}\n\n  /**\n   * Handle a work item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The work item event fired\n   *   when a work item ended successfully.\n   */\n  onworkitem(_event) {}\n\n  /**\n   * Handle a work event.\n   * Default does nothing.\n   *\n   * @param {object} _event The work event fired\n   *   when a work ended successfully.\n   */\n  onwork(_event) {}\n\n  /**\n   * Handle a work end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The work end event fired\n   *  when a work has completed, successfully or not.\n   */\n  onworkend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // ThreadPool\n\n/**\n * Worker background task.\n *\n * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/API/Worker}.\n *\n * @external Worker\n */\n\n/**\n * Worker thread.\n */\nclass WorkerThread {\n\n  /**\n   * @param {object} parentPool The parent pool.\n   */\n  constructor(parentPool) {\n    this.parentPool = parentPool;\n    // thread ID\n    this.id = Math.random().toString(36).substring(2, 15);\n    // running task\n    this.runningTask = null;\n    // worker used to run task\n    this.worker;\n  }\n\n  /**\n   * Get the thread ID.\n   *\n   * @returns {string} The thread ID (alphanumeric).\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Run a worker task.\n   *\n   * @param {object} workerTask The task to run.\n   */\n  run(workerTask) {\n    // store task\n    this.runningTask = workerTask;\n    // create a new web worker if not done yet\n    if (typeof this.worker === 'undefined') {\n      this.worker = new Worker(this.runningTask.script);\n      // set callbacks\n      this.worker.onmessage = this.onmessage;\n      this.worker.onerror = this.onerror;\n    }\n    // launch the worker\n    this.worker.postMessage(this.runningTask.startMessage);\n  }\n\n  /**\n   * Finish a task and tell the parent.\n   */\n  stop() {\n    // stop the worker\n    if (typeof this.worker !== 'undefined') {\n      this.worker.terminate();\n      // force create at next run\n      this.worker = undefined;\n    }\n  }\n\n  /**\n   * Message event handler.\n   * For now assume we only get a single callback from a worker\n   * which also indicates the end of this worker.\n   *\n   * @param {object} event The message event.\n   */\n  onmessage = (event) => {\n    // augment event\n    event.itemNumber = this.runningTask.info.itemNumber;\n    event.numberOfItems = this.runningTask.info.numberOfItems;\n    event.index = this.runningTask.info.index;\n    // send event\n    this.parentPool.onworkitem(event);\n    // tell the parent pool the task is done\n    this.parentPool.onTaskEnd(this);\n  };\n\n  /**\n   * Error event handler.\n   *\n   * @param {object} event The error event.\n   */\n  onerror = (event) => {\n    // augment event\n    event.itemNumber = this.runningTask.info.itemNumber;\n    event.numberOfItems = this.runningTask.info.numberOfItems;\n    event.index = this.runningTask.info.index;\n    // pass to parent\n    this.parentPool.handleWorkerError(event);\n    // stop the worker and free the thread\n    this.stop();\n  };\n} // class WorkerThread\n\n/**\n * Worker task.\n */\nexport class WorkerTask {\n  /**\n   * @param {string} script The worker script.\n   * @param {object} message The data to pass to the worker.\n   * @param {object} info Information object about the input data.\n   */\n  constructor(script, message, info) {\n    // worker script\n    this.script = script;\n    // worker start message\n    this.startMessage = message;\n    // information about the work data\n    this.info = info;\n  }\n}\n","import {ThreadPool, WorkerTask} from '../utils/thread';\n\n/**\n * The JPEG baseline decoder.\n *\n * Ref: {@link https://github.com/mozilla/pdf.js/blob/master/src/core/jpg.js}.\n *\n * @external JpegImage\n */\n/* global JpegImage */\n// @ts-ignore\nconst hasJpegBaselineDecoder = (typeof JpegImage !== 'undefined');\n\n/**\n * The JPEG decoder namespace.\n *\n * Ref: {@link https://github.com/rii-mango/JPEGLosslessDecoderJS}.\n *\n * @external jpeg\n */\n/* global jpeg */\nconst hasJpegLosslessDecoder =\n  // @ts-ignore\n  (typeof jpeg !== 'undefined') && (typeof jpeg.lossless !== 'undefined');\n\n/**\n * The JPEG 2000 decoder.\n *\n * Ref: {@link https://github.com/jpambrun/jpx-medical/blob/master/jpx.js}.\n *\n * @external JpxImage\n */\n/* global JpxImage */\n// @ts-ignore\nconst hasJpeg2000Decoder = (typeof JpxImage !== 'undefined');\n\n/* global dwvdecoder */\n\n/**\n * Decoder scripts to be passed to web workers for image decoding.\n */\nexport const decoderScripts = {\n  jpeg2000: '',\n  'jpeg-lossless': '',\n  'jpeg-baseline': '',\n  rle: ''\n};\n\n/**\n * Asynchronous pixel buffer decoder.\n */\nclass AsynchPixelBufferDecoder {\n\n  /**\n   * The associated worker script.\n   *\n   * @type {string}\n   */\n  #script;\n\n  /**\n   * Associated thread pool.\n   *\n   * @type {ThreadPool}\n   */\n  #pool = new ThreadPool(10);\n\n  /**\n   * Flag to know if callbacks are set.\n   *\n   * @type {boolean}\n   */\n  #areCallbacksSet = false;\n\n  /**\n   * @param {string} script The path to the decoder script to be used\n   *   by the web worker.\n   * @param {number} _numberOfData The anticipated number of data to decode.\n   */\n  constructor(script, _numberOfData) {\n    this.#script = script;\n  }\n\n  /**\n   * Decode a pixel buffer.\n   *\n   * @param {Array} pixelBuffer The pixel buffer.\n   * @param {object} pixelMeta The input meta data.\n   * @param {object} info Information object about the input data.\n   */\n  decode(pixelBuffer, pixelMeta, info) {\n    if (!this.#areCallbacksSet) {\n      this.#areCallbacksSet = true;\n      // set event handlers\n      this.#pool.onworkstart = this.ondecodestart;\n      this.#pool.onworkitem = this.ondecodeditem;\n      this.#pool.onwork = this.ondecoded;\n      this.#pool.onworkend = this.ondecodeend;\n      this.#pool.onerror = this.onerror;\n      this.#pool.onabort = this.onabort;\n    }\n    // create worker task\n    const workerTask = new WorkerTask(\n      this.#script,\n      {\n        buffer: pixelBuffer,\n        meta: pixelMeta\n      },\n      info\n    );\n    // add it the queue and run it\n    this.#pool.addWorkerTask(workerTask);\n  }\n\n  /**\n   * Abort decoding.\n   */\n  abort() {\n    // abort the thread pool, will trigger pool.onabort\n    this.#pool.abort();\n  }\n\n  /**\n   * Handle a decode start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode start event.\n   */\n  ondecodestart(_event) {}\n\n  /**\n   * Handle a decode item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode item event fired\n   *   when a decode item ended successfully.\n   */\n  ondecodeditem(_event) {}\n\n  /**\n   * Handle a decode event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode event fired\n   *   when a file has been decoded successfully.\n   */\n  ondecoded(_event) {}\n\n  /**\n   * Handle a decode end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode end event fired\n   *  when a file decoding has completed, successfully or not.\n   */\n  ondecodeend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class AsynchPixelBufferDecoder\n\n/**\n * Synchronous pixel buffer decoder.\n */\nclass SynchPixelBufferDecoder {\n\n  /**\n   * Name of the compression algorithm.\n   *\n   * @type {string}\n   */\n  #algoName;\n\n  /**\n   * Number of data.\n   *\n   * @type {number}\n   */\n  #numberOfData;\n\n  /**\n   * @param {string} algoName The decompression algorithm name.\n   * @param {number} numberOfData The anticipated number of data to decode.\n   */\n  constructor(algoName, numberOfData) {\n    this.#algoName = algoName;\n    this.#numberOfData = numberOfData;\n  }\n\n  // decode count\n  #decodeCount = 0;\n\n  /**\n   * Decode a pixel buffer.\n   *\n   * @param {Array} pixelBuffer The pixel buffer.\n   * @param {object} pixelMeta The input meta data.\n   * @param {object} info Information object about the input data.\n   * @external jpeg\n   * @external JpegImage\n   * @external JpxImage\n   */\n  decode(pixelBuffer, pixelMeta, info) {\n    ++this.#decodeCount;\n\n    let decoder = null;\n    let decodedBuffer = null;\n    if (this.#algoName === 'jpeg-lossless') {\n      if (!hasJpegLosslessDecoder) {\n        throw new Error('No JPEG Lossless decoder provided');\n      }\n      // bytes per element\n      const bpe = pixelMeta.bitsAllocated / 8;\n      const buf = new Uint8Array(pixelBuffer);\n      // @ts-ignore\n      decoder = new jpeg.lossless.Decoder();\n      const decoded = decoder.decode(buf.buffer, 0, buf.buffer.byteLength, bpe);\n      if (pixelMeta.bitsAllocated === 8) {\n        if (pixelMeta.isSigned) {\n          decodedBuffer = new Int8Array(decoded.buffer);\n        } else {\n          decodedBuffer = new Uint8Array(decoded.buffer);\n        }\n      } else if (pixelMeta.bitsAllocated === 16) {\n        if (pixelMeta.isSigned) {\n          decodedBuffer = new Int16Array(decoded.buffer);\n        } else {\n          decodedBuffer = new Uint16Array(decoded.buffer);\n        }\n      }\n    } else if (this.#algoName === 'jpeg-baseline') {\n      if (!hasJpegBaselineDecoder) {\n        throw new Error('No JPEG Baseline decoder provided');\n      }\n      // @ts-ignore\n      decoder = new JpegImage();\n      decoder.parse(pixelBuffer);\n      decodedBuffer = decoder.getData(decoder.width, decoder.height);\n    } else if (this.#algoName === 'jpeg2000') {\n      if (!hasJpeg2000Decoder) {\n        throw new Error('No JPEG 2000 decoder provided');\n      }\n      // decompress pixel buffer into Int16 image\n      // @ts-ignore\n      decoder = new JpxImage();\n      decoder.parse(pixelBuffer);\n      // set the pixel buffer\n      decodedBuffer = decoder.tiles[0].items;\n    } else if (this.#algoName === 'rle') {\n      // decode DICOM buffer\n      // @ts-ignore\n      decoder = new dwvdecoder.RleDecoder();\n      // set the pixel buffer\n      decodedBuffer = decoder.decode(\n        pixelBuffer,\n        pixelMeta.bitsAllocated,\n        pixelMeta.isSigned,\n        pixelMeta.sliceSize,\n        pixelMeta.samplesPerPixel,\n        pixelMeta.planarConfiguration);\n    }\n    // send decode events\n    this.ondecodeditem({\n      data: [decodedBuffer],\n      index: info.index,\n      numberOfItems: info.numberOfItems,\n      itemNumber: info.itemNumber\n    });\n    // decode end?\n    if (this.#decodeCount === this.#numberOfData) {\n      this.ondecoded({});\n      this.ondecodeend({});\n    }\n  }\n\n  /**\n   * Abort decoding.\n   */\n  abort() {\n    // nothing to do in the synchronous case.\n    // callback\n    this.onabort({});\n    this.ondecodeend({});\n  }\n\n  /**\n   * Handle a decode start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode start event.\n   */\n  ondecodestart(_event) {}\n\n  /**\n   * Handle a decode item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode item event fired\n   *   when a decode item ended successfully.\n   */\n  ondecodeditem(_event) {}\n\n  /**\n   * Handle a decode event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode event fired\n   *   when a file has been decoded successfully.\n   */\n  ondecoded(_event) {}\n\n  /**\n   * Handle a decode end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode end event fired\n   *  when a file decoding has completed, successfully or not.\n   */\n  ondecodeend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class SynchPixelBufferDecoder\n\n/**\n * Decode a pixel buffer.\n *\n * If the 'decoderScripts' variable does not contain the desired,\n * algorythm the decoder will switch to the synchronous mode.\n */\nexport class PixelBufferDecoder {\n\n  /**\n   * Flag to know if callbacks are set.\n   *\n   * @type {boolean}\n   */\n  #areCallbacksSet = false;\n\n  /**\n   * Pixel decoder.\n   * Defined only once.\n   *\n   * @type {object}\n   */\n  #pixelDecoder = null;\n\n  /**\n   * @param {string} algoName The decompression algorithm name.\n   * @param {number} numberOfData The anticipated number of data to decode.\n   */\n  constructor(algoName, numberOfData) {\n    // initialise the asynch decoder (if possible)\n    if (typeof decoderScripts !== 'undefined' &&\n      typeof decoderScripts[algoName] !== 'undefined') {\n      this.#pixelDecoder = new AsynchPixelBufferDecoder(\n        decoderScripts[algoName], numberOfData);\n    } else {\n      this.#pixelDecoder = new SynchPixelBufferDecoder(\n        algoName, numberOfData);\n    }\n  }\n\n  /**\n   * Get data from an input buffer using a DICOM parser.\n   *\n   * @param {Array} pixelBuffer The input data buffer.\n   * @param {object} pixelMeta The input meta data.\n   * @param {object} info Information object about the input data.\n   */\n  decode(pixelBuffer, pixelMeta, info) {\n    if (!this.#areCallbacksSet) {\n      this.#areCallbacksSet = true;\n      // set callbacks\n      this.#pixelDecoder.ondecodestart = this.ondecodestart;\n      this.#pixelDecoder.ondecodeditem = this.ondecodeditem;\n      this.#pixelDecoder.ondecoded = this.ondecoded;\n      this.#pixelDecoder.ondecodeend = this.ondecodeend;\n      this.#pixelDecoder.onerror = this.onerror;\n      this.#pixelDecoder.onabort = this.onabort;\n    }\n    // decode and call the callback\n    this.#pixelDecoder.decode(pixelBuffer, pixelMeta, info);\n  }\n\n  /**\n   * Abort decoding.\n   */\n  abort() {\n    // decoder classes should define an abort\n    this.#pixelDecoder.abort();\n  }\n\n  /**\n   * Handle a decode start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode start event.\n   */\n  ondecodestart(_event) {}\n\n  /**\n   * Handle a decode item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode item event fired\n   *   when a decode item ended successfully.\n   */\n  ondecodeditem(_event) {}\n\n  /**\n   * Handle a decode event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode event fired\n   *   when a file has been decoded successfully.\n   */\n  ondecoded(_event) {}\n\n  /**\n   * Handle a decode end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The decode end event fired\n   *  when a file decoding has completed, successfully or not.\n   */\n  ondecodeend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class PixelBufferDecoder\n","import {\n  getCode,\n  getDicomCodeItem\n} from './dicomCode';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from './dataElement';\nimport {DicomCode} from './dicomCode';\n/* eslint-enable no-unused-vars */\n\n/**\n * Related DICOM tag keys.\n */\nconst TagKeys = {\n  NumericValue: '0040A30A',\n  FloatingPointValue: '0040A161',\n  RationalNumeratorValue: '0040A162',\n  RationalDenominatorValue: '0040A163',\n  MeasurementUnitsCodeSequence: '004008EA'\n};\n\n/**\n * DICOM measured value: property of a numeric measurement.\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.18.html#table_C.18.1-1}.\n */\nexport class MeasuredValue {\n  /**\n   * @type {number}\n   */\n  numericValue;\n\n  /**\n   * @type {number}\n   */\n  floatingPointValue;\n\n  /**\n   * @type {number}\n   */\n  rationalNumeratorValue;\n\n  /**\n   * @type {number}\n   */\n  rationalDenominatorValue;\n\n  /**\n   * @type {DicomCode}\n   */\n  measurementUnitsCode;\n\n  /**\n   * Get a string representation of this object.\n   *\n   * @returns {string} The object as string.\n   */\n  toString() {\n    return this.numericValue + ' ' +\n      this.measurementUnitsCode.toString();\n  };\n\n};\n\n/**\n * Get a measured value object from a dicom element.\n *\n * @param {Object<string, DataElement>} dataElements The dicom element.\n * @returns {MeasuredValue} A measured value object.\n */\nexport function getMeasuredValue(dataElements) {\n  const value = new MeasuredValue();\n\n  if (typeof dataElements[TagKeys.NumericValue] !== 'undefined') {\n    value.numericValue = dataElements[TagKeys.NumericValue].value[0];\n  }\n  if (typeof dataElements[TagKeys.FloatingPointValue] !== 'undefined') {\n    value.floatingPointValue =\n      dataElements[TagKeys.FloatingPointValue].value[0];\n  }\n  if (typeof dataElements[TagKeys.RationalNumeratorValue] !== 'undefined') {\n    value.rationalNumeratorValue =\n      dataElements[TagKeys.RationalNumeratorValue].value[0];\n  }\n  if (typeof dataElements[TagKeys.RationalDenominatorValue] !== 'undefined') {\n    value.rationalDenominatorValue =\n      dataElements[TagKeys.RationalDenominatorValue].value[0];\n  }\n  if (typeof dataElements[TagKeys.MeasurementUnitsCodeSequence] !==\n    'undefined') {\n    value.measurementUnitsCode = getCode(\n      dataElements[TagKeys.MeasurementUnitsCodeSequence].value[0]);\n  }\n\n  return value;\n};\n\n/**\n * Get a simple dicom element item from a measured value object.\n *\n * @param {MeasuredValue} value The measured value object.\n * @returns {Object<string, any>} The item as a list of (key, value) pairs.\n */\nexport function getDicomMeasuredValueItem(value) {\n  // dicom item (tags are in group/element order)\n  const item = {};\n\n  if (typeof value.measurementUnitsCode !== 'undefined') {\n    item.MeasurementUnitsCodeSequence = {\n      value: [getDicomCodeItem(value.measurementUnitsCode)]\n    };\n  }\n  if (typeof value.floatingPointValue !== 'undefined') {\n    item.FloatingPointValue = value.floatingPointValue;\n  }\n  if (typeof value.rationalNumeratorValue !== 'undefined') {\n    item.RationalNumeratorValue = value.rationalNumeratorValue;\n  }\n  if (typeof value.rationalDenominatorValue !== 'undefined') {\n    item.RationalDenominatorValue = value.rationalDenominatorValue;\n  }\n  if (typeof value.numericValue !== 'undefined') {\n    item.NumericValue = value.numericValue;\n  }\n\n  // return\n  return item;\n}\n","import {\n  getCode,\n  getDicomCodeItem\n} from './dicomCode';\nimport {\n  getMeasuredValue,\n  getDicomMeasuredValueItem\n} from './dicomMeasuredValue';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from './dataElement';\nimport {MeasuredValue} from './dicomMeasuredValue';\nimport {DicomCode} from './dicomCode';\n/* eslint-enable no-unused-vars */\n\n/**\n * Related DICOM tag keys.\n */\nconst TagKeys = {\n  MeasuredValueSequence: '0040A300',\n  NumericValueQualifierCodeSequence: '0040A301'\n};\n\n/**\n * DICOM numeric measurement: item of a SR content sequence.\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.18.html#table_C.18.1-1}.\n */\nexport class NumericMeasurement {\n  /**\n   * @type {MeasuredValue}\n   */\n  measuredValue;\n\n  /**\n   * @type {DicomCode}\n   */\n  numericValueQualifierCode;\n\n  /**\n   * Get a string representation of this object.\n   *\n   * @returns {string} The object as string.\n   */\n  toString() {\n    let res = this.measuredValue.toString();\n    if (typeof this.numericValueQualifierCode !== 'undefined') {\n      res += ' ' + this.numericValueQualifierCode.toString();\n    }\n    return res;\n  }\n};\n\n/**\n * Get a measurement object from a dicom element.\n *\n * @param {Object<string, DataElement>} dataElements The dicom element.\n * @returns {NumericMeasurement} A measurement object.\n */\nexport function getNumericMeasurement(dataElements) {\n  const measurement = new NumericMeasurement();\n\n  if (typeof dataElements[TagKeys.MeasuredValueSequence] !== 'undefined') {\n    measurement.measuredValue = getMeasuredValue(\n      dataElements[TagKeys.MeasuredValueSequence].value[0]);\n  }\n  if (typeof dataElements[TagKeys.NumericValueQualifierCodeSequence] !==\n    'undefined') {\n    measurement.numericValueQualifierCode = getCode(\n      dataElements[TagKeys.NumericValueQualifierCodeSequence].value[0]);\n  }\n\n  return measurement;\n};\n\n/**\n * Get a simple dicom element item from a measurement object.\n *\n * @param {NumericMeasurement} measurement The measurement object.\n * @returns {Object<string, any>} The item as a list of (key, value) pairs.\n */\nexport function getDicomNumericMeasurementItem(measurement) {\n  // dicom item (tags are in group/element order)\n  const item = {};\n\n  if (typeof measurement.measuredValue !== 'undefined') {\n    item.MeasuredValueSequence = {\n      value: [getDicomMeasuredValueItem(measurement.measuredValue)]\n    };\n  }\n  if (typeof measurement.numericValueQualifierCode !== 'undefined') {\n    item.NumericValueQualifierCodeSequence = {\n      value: [getDicomCodeItem(measurement.numericValueQualifierCode)]\n    };\n  }\n\n  // return\n  return item;\n}\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from './dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * Related DICOM tag keys.\n */\nconst TagKeys = {\n  ReferencedSOPClassUID: '00081150',\n  ReferencedSOPInstanceUID: '00081155'\n};\n\n/**\n * DICOM sop instance reference.\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_10.8.html#table_10-11}.\n */\nexport class SopInstanceReference {\n  /**\n   * @type {string}\n   */\n  referencedSOPClassUID;\n\n  /**\n   * @type {string}\n   */\n  referencedSOPInstanceUID;\n\n  /**\n   * Get a string representation of this object.\n   *\n   * @returns {string} The object as string.\n   */\n  toString() {\n    return this.referencedSOPInstanceUID + ' (class: ' +\n      this.referencedSOPClassUID + ')';\n  };\n};\n\n/**\n * Get a SOP reference object from a dicom element.\n *\n * @param {Object<string, DataElement>} dataElements The dicom element.\n * @returns {SopInstanceReference} A SOP reference object.\n */\nexport function getSopInstanceReference(dataElements) {\n  const ref = new SopInstanceReference();\n\n  if (typeof dataElements[TagKeys.ReferencedSOPClassUID] !== 'undefined') {\n    ref.referencedSOPClassUID =\n      dataElements[TagKeys.ReferencedSOPClassUID].value[0];\n  }\n  if (typeof dataElements[TagKeys.ReferencedSOPInstanceUID] !== 'undefined') {\n    ref.referencedSOPInstanceUID =\n      dataElements[TagKeys.ReferencedSOPInstanceUID].value[0];\n  }\n\n  return ref;\n};\n\n/**\n * Get a simple dicom element item from a SOP reference object.\n *\n * @param {SopInstanceReference} ref The SOP reference object.\n * @returns {Object<string, any>} The item as a list of (key, value) pairs.\n */\nexport function getDicomSopInstanceReferenceItem(ref) {\n  // dicom item (tags are in group/element order)\n  const item = {};\n\n  if (typeof ref.referencedSOPClassUID !== 'undefined') {\n    item.ReferencedSOPClassUID = ref.referencedSOPClassUID;\n  }\n  if (typeof ref.referencedSOPInstanceUID !== 'undefined') {\n    item.ReferencedSOPInstanceUID = ref.referencedSOPInstanceUID;\n  }\n\n  // return\n  return item;\n}\n","import {\n  getSopInstanceReference,\n  getDicomSopInstanceReferenceItem\n} from './dicomSopInstanceReference';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from './dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * Related DICOM tag keys.\n */\nconst TagKeys = {\n  ReferencedFrameNumber: '00081160',\n  ReferencedSOPSequence: '00081199',\n  ReferencedSegmentNumber: '0062000B'\n};\n\n/**\n * DICOM image reference: item of a SR content sequence.\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.18.4.html#table_C.18.4-1}.\n */\nexport class ImageReference {\n  /**\n   * @type {object}\n   */\n  referencedSOPSequence;\n\n  /**\n   * @type {object}\n   */\n  referencedFrameNumber;\n\n  /**\n   * @type {string}\n   */\n  referencedSegmentNumber;\n\n  /**\n   * Get a string representation of this object.\n   *\n   * @returns {string} The object as string.\n   */\n  toString() {\n    return this.referencedSOPSequence.toString();\n  };\n};\n\n/**\n * Get a reference object from a dicom element.\n *\n * @param {Object<string, DataElement>} dataElements The dicom element.\n * @returns {ImageReference} A reference object.\n */\nexport function getImageReference(dataElements) {\n  const ref = new ImageReference();\n\n  if (typeof dataElements[TagKeys.ReferencedFrameNumber] !== 'undefined') {\n    ref.referencedFrameNumber =\n      dataElements[TagKeys.ReferencedFrameNumber].value[0];\n  }\n  if (typeof dataElements[TagKeys.ReferencedSOPSequence] !== 'undefined') {\n    ref.referencedSOPSequence = getSopInstanceReference(\n      dataElements[TagKeys.ReferencedSOPSequence].value[0]);\n  }\n  if (typeof dataElements[TagKeys.ReferencedSegmentNumber] !== 'undefined') {\n    ref.referencedSegmentNumber =\n      dataElements[TagKeys.ReferencedSegmentNumber].value[0];\n  }\n\n  return ref;\n};\n\n/**\n * Get a simple dicom element item from a reference object.\n *\n * @param {ImageReference} ref The reference object.\n * @returns {Object<string, any>} The item as a list of (key, value) pairs.\n */\nexport function getDicomImageReferenceItem(ref) {\n  // dicom item (tags are in group/element order)\n  const item = {};\n\n  if (typeof ref.referencedFrameNumber !== 'undefined') {\n    item.ReferencedFrameNumber = ref.referencedFrameNumber;\n  }\n  if (typeof ref.referencedSOPSequence !== 'undefined') {\n    item.ReferencedSOPSequence = {\n      value: [getDicomSopInstanceReferenceItem(ref.referencedSOPSequence)]\n    };\n  }\n  if (typeof ref.referencedSegmentNumber !== 'undefined') {\n    item.ReferencedSegmentNumber =\n      ref.referencedSegmentNumber;\n  }\n\n  // return\n  return item;\n}\n","import {Point2D} from '../math/point';\nimport {Line, areOrthogonal} from '../math/line';\nimport {Protractor} from '../math/protractor';\nimport {ROI} from '../math/roi';\nimport {Circle} from '../math/circle';\nimport {Ellipse} from '../math/ellipse';\nimport {Rectangle} from '../math/rectangle';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from './dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * Related DICOM tag keys.\n */\nconst TagKeys = {\n  PixelOriginInterpretation: '00480301',\n  GraphicData: '00700022',\n  GraphicType: '00700023',\n  FiducialUID: '0070031A'\n};\n\n/**\n * DICOM graphic types.\n */\nexport const GraphicTypes = {\n  point: 'POINT',\n  multipoint: 'MULTIPOINT',\n  polyline: 'POLYLINE',\n  circle: 'CIRCLE',\n  ellipse: 'ELLIPSE'\n};\n\n/**\n * DICOM spatial coordinate (SCOORD): item of a SR content sequence.\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.18.6.html#table_C.18.6-1}.\n */\nexport class SpatialCoordinate {\n  /**\n   * @type {string[]}\n   */\n  graphicData;\n\n  /**\n   * @type {string}\n   */\n  graphicType;\n\n  /**\n   * @type {string}\n   */\n  pixelOriginInterpretation;\n\n  /**\n   * @type {string}\n   */\n  fiducialUID;\n\n  /**\n   * Get a string representation of this object.\n   *\n   * @returns {string} The object as string.\n   */\n  toString() {\n    return this.graphicType +\n      ' {' + this.graphicData + '}';\n  };\n};\n\n/**\n * Get a scoord object from a dicom element.\n *\n * @param {Object<string, DataElement>} dataElements The dicom element.\n * @returns {SpatialCoordinate} A scoord object.\n */\nexport function getSpatialCoordinate(dataElements) {\n  const scoord = new SpatialCoordinate();\n\n  if (typeof dataElements[TagKeys.GraphicData] !== 'undefined') {\n    scoord.graphicData = dataElements[TagKeys.GraphicData].value;\n  }\n  if (typeof dataElements[TagKeys.GraphicType] !== 'undefined') {\n    scoord.graphicType = dataElements[TagKeys.GraphicType].value[0];\n  }\n  if (typeof dataElements[TagKeys.PixelOriginInterpretation] !== 'undefined') {\n    scoord.pixelOriginInterpretation =\n      dataElements[TagKeys.PixelOriginInterpretation].value[0];\n  }\n  if (typeof dataElements[TagKeys.FiducialUID] !== 'undefined') {\n    scoord.fiducialUID = dataElements[TagKeys.FiducialUID].value[0];\n  }\n  return scoord;\n};\n\n/**\n * Get a simple dicom element item from a scoord object.\n *\n * @param {SpatialCoordinate} scoord The scoord object.\n * @returns {Object<string, any>} The item as a list of (key, value) pairs.\n */\nexport function getDicomSpatialCoordinateItem(scoord) {\n  // dicom item (tags are in group/element order)\n  const item = {};\n\n  if (typeof scoord.pixelOriginInterpretation !== 'undefined') {\n    item.PixelOriginInterpretation = scoord.pixelOriginInterpretation;\n  }\n  if (typeof scoord.graphicData !== 'undefined') {\n    item.GraphicData = scoord.graphicData;\n  }\n  if (typeof scoord.graphicType !== 'undefined') {\n    item.GraphicType = scoord.graphicType;\n  }\n  if (typeof scoord.fiducialUID !== 'undefined') {\n    item.FiducialUID = scoord.fiducialUID;\n  }\n\n  // return\n  return item;\n}\n\n/**\n * Get a DICOM spatial coordinate (SCOORD) from a mathematical shape.\n *\n * @param {Point2D|Line|Protractor|ROI|Circle|Ellipse|Rectangle} shape\n *   The math shape.\n * @returns {SpatialCoordinate} The DICOM scoord.\n */\nexport function getScoordFromShape(shape) {\n  const scoord = new SpatialCoordinate();\n\n  if (shape instanceof Point2D) {\n    scoord.graphicData = [\n      shape.getX().toString(),\n      shape.getY().toString(),\n    ];\n    scoord.graphicType = GraphicTypes.point;\n  } else if (shape instanceof Line) {\n    scoord.graphicData = [\n      shape.getBegin().getX().toString(),\n      shape.getBegin().getY().toString(),\n      shape.getEnd().getX().toString(),\n      shape.getEnd().getY().toString(),\n    ];\n    scoord.graphicType = GraphicTypes.polyline;\n  } else if (shape instanceof Protractor) {\n    scoord.graphicData = [];\n    for (let i = 0; i < 3; ++i) {\n      scoord.graphicData.push(shape.getPoint(i).getX().toString());\n      scoord.graphicData.push(shape.getPoint(i).getY().toString());\n    }\n    scoord.graphicType = GraphicTypes.polyline;\n  } else if (shape instanceof ROI) {\n    scoord.graphicData = [];\n    for (let i = 0; i < shape.getLength(); ++i) {\n      scoord.graphicData.push(shape.getPoint(i).getX().toString());\n      scoord.graphicData.push(shape.getPoint(i).getY().toString());\n    }\n    // repeat first point to close shape\n    const firstPoint = shape.getPoint(0);\n    scoord.graphicData.push(firstPoint.getX().toString());\n    scoord.graphicData.push(firstPoint.getY().toString());\n\n    scoord.graphicType = GraphicTypes.polyline;\n  } else if (shape instanceof Circle) {\n    const center = shape.getCenter();\n    const pointPerimeter = new Point2D(\n      center.getX() + shape.getRadius(), center.getY()\n    );\n    scoord.graphicData = [\n      center.getX().toString(),\n      center.getY().toString(),\n      pointPerimeter.getX().toString(),\n      pointPerimeter.getY().toString(),\n    ];\n    scoord.graphicType = GraphicTypes.circle;\n  } else if (shape instanceof Ellipse) {\n    const center = shape.getCenter();\n    const radiusX = shape.getA();\n    const radiusY = shape.getB();\n    scoord.graphicData = [\n      (center.getX() - radiusX).toString(),\n      center.getY().toString(),\n      (center.getX() + radiusX).toString(),\n      center.getY().toString(),\n      center.getX().toString(),\n      (center.getY() - radiusY).toString(),\n      center.getX().toString(),\n      (center.getY() + radiusY).toString()\n    ];\n    scoord.graphicType = GraphicTypes.ellipse;\n  } else if (shape instanceof Rectangle) {\n    const begin = shape.getBegin();\n    const end = shape.getEnd();\n    // begin as first and last point to close shape\n    scoord.graphicData = [\n      begin.getX().toString(),\n      begin.getY().toString(),\n      begin.getX().toString(),\n      end.getY().toString(),\n      end.getX().toString(),\n      end.getY().toString(),\n      end.getX().toString(),\n      begin.getY().toString(),\n      begin.getX().toString(),\n      begin.getY().toString()\n    ];\n    scoord.graphicType = GraphicTypes.polyline;\n  }\n\n  return scoord;\n};\n\n/**\n * Get a mathematical shape from a DICOM spatial coordinate (SCOORD).\n *\n * @param {SpatialCoordinate} scoord The DICOM scoord.\n * @returns {Point2D|Line|Protractor|ROI|Circle|Ellipse|Rectangle}\n *   The math shape.\n */\nexport function getShapeFromScoord(scoord) {\n  // extract points\n  const dataLength = scoord.graphicData.length;\n  if (dataLength % 2 !== 0) {\n    throw new Error('Expecting even number of coordinates in scroord data');\n  }\n  const points = [];\n  for (let i = 0; i < dataLength; i += 2) {\n    points.push(new Point2D(\n      parseFloat(scoord.graphicData[i]),\n      parseFloat(scoord.graphicData[i + 1])\n    ));\n  }\n  let isClosed = false;\n  const numberOfPoints = points.length;\n  if (numberOfPoints > 2) {\n    const firstPoint = points[0];\n    const lastPoint = points[numberOfPoints - 1];\n    isClosed = firstPoint.equals(lastPoint);\n  }\n\n  // create math shape\n  let shape;\n  if (scoord.graphicType === GraphicTypes.point) {\n    if (points.length !== 1) {\n      throw new Error('Expecting 1 point for point');\n    }\n    shape = points[0];\n  } else if (scoord.graphicType === GraphicTypes.circle) {\n    if (points.length !== 2) {\n      throw new Error('Expecting 2 points for circles');\n    }\n    const center = points[0];\n    const pointPerimeter = points[1];\n    const radius = pointPerimeter.getDistance(center);\n    shape = new Circle(center, radius);\n  } else if (scoord.graphicType === GraphicTypes.ellipse) {\n    if (points.length !== 4) {\n      throw new Error('Expecting 4 points for ellipses');\n    }\n    // TODO: make more generic\n    const radiusX = points[0].getDistance(points[1]) / 2;\n    const radiusY = points[2].getDistance(points[3]) / 2;\n    const center = new Point2D(\n      points[0].getX() + radiusX,\n      points[0].getY()\n    );\n    shape = new Ellipse(center, radiusX, radiusY);\n  } else if (scoord.graphicType === GraphicTypes.polyline) {\n    if (!isClosed) {\n      if (points.length === 2) {\n        shape = new Line(points[0], points[1]);\n      } else if (points.length === 3) {\n        shape = new Protractor([points[0], points[1], points[2]]);\n      }\n    } else {\n      if (points.length === 5) {\n        const line0 = new Line(points[0], points[1]);\n        const line1 = new Line(points[1], points[2]);\n        const line2 = new Line(points[2], points[3]);\n        const line3 = new Line(points[3], points[4]);\n        if (areOrthogonal(line0, line1) &&\n          areOrthogonal(line1, line2) &&\n          areOrthogonal(line2, line3)) {\n          shape = new Rectangle(points[0], points[2]);\n        } else {\n          // remove last=first point for closed shape\n          shape = new ROI(points.slice(0, -1));\n        }\n      } else {\n        // remove last=first point for closed shape\n        shape = new ROI(points.slice(0, -1));\n      }\n    }\n  }\n\n  return shape;\n};","// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from './dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * Related DICOM tag keys.\n */\nconst TagKeys = {\n  GraphicData: '00700022',\n  GraphicType: '00700023',\n  ReferencedFrameofReferenceUID: '30060024',\n  FiducialUID: '0070031A'\n};\n\n/**\n * DICOM spatial coordinate 3D (SCOORD3D): item of a SR content sequence.\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.18.9.html#table_C.18.9-1}.\n */\nexport class SpatialCoordinate3D {\n  /**\n   * @type {string[]}\n   */\n  graphicData;\n\n  /**\n   * @type {string}\n   */\n  graphicType;\n\n  /**\n   * @type {string}\n   */\n  referencedFrameofReferenceUID;\n\n  /**\n   * @type {string}\n   */\n  fiducialUID;\n\n  /**\n   * Get a string representation of this object.\n   *\n   * @returns {string} The object as string.\n   */\n  toString() {\n    return this.graphicType +\n      ' {' + this.graphicData + '}';\n  };\n};\n\n/**\n * Get a scoord3d object from a dicom element.\n *\n * @param {Object<string, DataElement>} dataElements The dicom element.\n * @returns {SpatialCoordinate3D} A scoord3d object.\n */\nexport function getSpatialCoordinate3D(dataElements) {\n  const scoord = new SpatialCoordinate3D();\n\n  if (typeof dataElements[TagKeys.GraphicData] !== 'undefined') {\n    scoord.graphicData = dataElements[TagKeys.GraphicData].value;\n  }\n  if (typeof dataElements[TagKeys.GraphicType] !== 'undefined') {\n    scoord.graphicType = dataElements[TagKeys.GraphicType].value[0];\n  }\n  if (typeof dataElements[TagKeys.ReferencedFrameofReferenceUID] !==\n    'undefined') {\n    scoord.referencedFrameofReferenceUID =\n      dataElements[TagKeys.ReferencedFrameofReferenceUID].value[0];\n  }\n  if (typeof dataElements[TagKeys.FiducialUID] !== 'undefined') {\n    scoord.fiducialUID = dataElements[TagKeys.FiducialUID].value[0];\n  }\n  return scoord;\n};\n\n/**\n * Get a simple dicom element item from a scoord3d object.\n *\n * @param {SpatialCoordinate3D} scoord The scoord3d object.\n * @returns {Object<string, any>} The item as a list of (key, value) pairs.\n */\nexport function getDicomSpatialCoordinate3DItem(scoord) {\n  // dicom item (tags are in group/element order)\n  const item = {};\n\n  if (typeof scoord.graphicData !== 'undefined') {\n    item.GraphicData = scoord.graphicData;\n  }\n  if (typeof scoord.graphicType !== 'undefined') {\n    item.GraphicType = scoord.graphicType;\n  }\n  if (typeof scoord.referencedFrameofReferenceUID !== 'undefined') {\n    item.ReferencedFrameofReferenceUID =\n      scoord.referencedFrameofReferenceUID;\n  }\n  if (typeof scoord.fiducialUID !== 'undefined') {\n    item.FiducialUID = scoord.fiducialUID;\n  }\n\n  // return\n  return item;\n}","import {\n  NumericMeasurement,\n  getNumericMeasurement,\n  getDicomNumericMeasurementItem\n} from './dicomNumericMeasurement';\nimport {\n  getCode,\n  getDicomCodeItem,\n  getConceptNameCode,\n  getMeasurementUnitsCode\n} from './dicomCode';\nimport {\n  getImageReference,\n  getDicomImageReferenceItem\n} from './dicomImageReference';\nimport {\n  getSopInstanceReference,\n  getDicomSopInstanceReferenceItem\n} from './dicomSopInstanceReference';\nimport {\n  getSpatialCoordinate,\n  getDicomSpatialCoordinateItem\n} from './dicomSpatialCoordinate';\nimport {\n  getSpatialCoordinate3D,\n  getDicomSpatialCoordinate3DItem\n} from './dicomSpatialCoordinate3D';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {\n  safeGet,\n  safeGetAll,\n  DataElement\n} from './dataElement';\nimport {DicomCode} from './dicomCode';\nimport {MeasuredValue} from './dicomMeasuredValue';\n/* eslint-enable no-unused-vars */\n\n/**\n * Related DICOM tag keys.\n */\nconst TagKeys = {\n  ReferencedSOPSequence: '00081199',\n  RelationshipType: '0040A010',\n  ValueType: '0040A040',\n  ConceptNameCodeSequence: '0040A043',\n  ConceptCodeSequence: '0040A168',\n  ContentSequence: '0040A730',\n  DateTime: '0040A120',\n  Date: '0040A121',\n  Time: '0040A122',\n  UID: '0040A124',\n  PersonName: '0040A123',\n  TextValue: '0040A160',\n  ContinuityOfContent: '0040A050',\n  ContentTemplateSequence: '0040A504',\n  MappingResource: '00080105',\n  TemplateIdentifier: '0040DB00'\n};\n\n/**\n * DICOM relationship types.\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.17.3.2.4.html#sect_C.17.3.2.4}.\n */\nexport const RelationshipTypes = {\n  contains: 'CONTAINS',\n  hasProperties: 'HAS PROPERTIES',\n  hasObsContext: 'HAS OBS CONTEXT',\n  hasAcqContext: 'HAS ACQ CONTEXT',\n  inferredFrom: 'INFERRED FROM',\n  selectedFrom: 'SELECTED FROM',\n  hasConceptMod: 'HAS CONCEPT MOD'\n};\n\n/**\n * DICOM value types.\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.17.3.2.html#sect_C.17.3.2.1}.\n */\nexport const ValueTypes = {\n  text: 'TEXT',\n  num: 'NUM',\n  code: 'CODE',\n  date: 'DATE',\n  time: 'TIME',\n  datetime: 'DATETIME',\n  uidref: 'UIDREF',\n  pname: 'PNAME',\n  composite: 'COMPOSITE',\n  image: 'IMAGE',\n  waveform: 'WAVEFORM',\n  scoord: 'SCOORD',\n  scoord3d: 'SCOORD3D',\n  tcoord: 'TCOORD',\n  container: 'CONTAINER',\n  table: 'TABLE',\n};\n\n/**\n * DICOM value type to associated tag name.\n */\nexport const ValueTypeValueTagName = {\n  TEXT: 'TextValue',\n  DATE: 'Date',\n  TIME: 'Time',\n  DATETIME: 'DateTime',\n  UIDREF: 'UID',\n  PNAME: 'PersonName',\n  CONTAINER: 'ContinuityOfContent',\n};\n\n/**\n * Get the content template value.\n *\n * @param {Object<string, DataElement>} dataElements The dicom elements.\n * @returns {string|undefined} The template as\n *   'MappingResource'-'TemplateIdentifier'.\n */\nexport function getContentTemplate(dataElements) {\n  let template;\n  // should only be one item\n  const templateItem =\n    safeGet(dataElements, TagKeys.ContentTemplateSequence);\n  if (typeof templateItem !== 'undefined') {\n    const mappingResource = safeGet(templateItem, TagKeys.MappingResource);\n    const templateId = safeGet(templateItem, TagKeys.TemplateIdentifier);\n    if (typeof mappingResource !== 'undefined' &&\n      typeof templateId !== 'undefined') {\n      template = mappingResource + '-' + templateId;\n    }\n  }\n  return template;\n}\n\n/**\n * DICOM SR content: item of a SR content sequence.\n *\n * Ref: {@link https://dicom.nema.org/medical/dicom/2022a/output/chtml/part03/sect_C.17.3.html}.\n */\nexport class DicomSRContent {\n  /**\n   * Value type.\n   *\n   * @type {string}\n   */\n  valueType;\n  /**\n   * Concept name code.\n   *\n   * @type {DicomCode|undefined}\n   */\n  conceptNameCode;\n  /**\n   * Relationship Type.\n   *\n   * @type {string}\n   */\n  relationshipType;\n\n  /**\n   * Content sequence (0040,A730).\n   *\n   * @type {DicomSRContent[]|undefined}\n   */\n  contentSequence;\n\n  /**\n   * Value.\n   *\n   * @type {object}\n   */\n  value;\n\n  /**\n   * @param {string} valueType The content item value type.\n   */\n  constructor(valueType) {\n    this.valueType = valueType;\n  }\n\n  /**\n   * Get a string representation of this object.\n   *\n   * @param {string} [prefix] An optional prefix for recursive content.\n   * @returns {string} The object as string.\n   */\n  toString(prefix) {\n    if (typeof prefix === 'undefined') {\n      prefix = '';\n    }\n\n    let res = '';\n\n    if (typeof this.relationshipType !== 'undefined') {\n      res += '(' + this.relationshipType + ') ';\n    }\n\n    res += this.valueType + ': ';\n\n    if (typeof this.conceptNameCode !== 'undefined') {\n      res += this.conceptNameCode.toString();\n    }\n\n    res += ' = ' + this.value.toString();\n\n    if (typeof this.contentSequence !== 'undefined') {\n      for (const item of this.contentSequence) {\n        res += '\\n' + prefix + '- ' + item.toString(prefix + '  ');\n      }\n    }\n\n    return res;\n  }\n}\n\n/**\n * Check if two content item objects are equal.\n *\n * @param {DicomCode} item1 The first content item.\n * @param {DicomCode} item2 The second content item.\n * @returns {boolean} True if both content items are equal.\n */\nexport function isEqualContentItem(item1, item2) {\n  return Object.keys(item1).length === Object.keys(item2).length &&\n  Object.keys(item1).every(key =>\n    Object.prototype.hasOwnProperty.call(item2, key) &&\n    item1[key] === item2[key]\n  );\n}\n\n/**\n * Get a content item object from a dicom element.\n *\n * @param {Object<string, DataElement>} dataElements The dicom element.\n * @returns {DicomSRContent} A content item object.\n */\nexport function getSRContent(dataElements) {\n  // valueType -> ValueType (type1)\n  let valueType = safeGet(dataElements, TagKeys.ValueType);\n  if (typeof valueType === 'undefined') {\n    valueType = '';\n  }\n\n  const content = new DicomSRContent(valueType);\n\n  // relationshipType -> RelationType (type1)\n  content.relationshipType =\n    safeGet(dataElements, TagKeys.RelationshipType);\n\n  const conceptNameCode =\n    safeGet(dataElements, TagKeys.ConceptNameCodeSequence);\n  if (typeof conceptNameCode !== 'undefined') {\n    content.conceptNameCode = getCode(conceptNameCode);\n  }\n\n  // set value acording to valueType\n  // (date and time are stored as string)\n  if (valueType === ValueTypes.code) {\n    content.value = getCode(\n      safeGet(dataElements, TagKeys.ConceptCodeSequence)\n    );\n  } else if (valueType === ValueTypes.num) {\n    content.value = getNumericMeasurement(dataElements);\n  } else if (valueType === ValueTypes.image) {\n    content.value = getImageReference(dataElements);\n  } else if (valueType === ValueTypes.composite) {\n    content.value = getSopInstanceReference(\n      safeGet(dataElements, TagKeys.ReferencedSOPSequence)\n    );\n  } else if (valueType === ValueTypes.scoord) {\n    content.value = getSpatialCoordinate(dataElements);\n  } else if (valueType === ValueTypes.scoord3d) {\n    content.value = getSpatialCoordinate3D(dataElements);\n  } else {\n    const valueTagName = ValueTypeValueTagName[valueType];\n    if (typeof valueTagName !== 'undefined') {\n      content.value =\n        safeGet(dataElements, TagKeys[valueTagName]);\n    } else {\n      console.warn('Unsupported input ValueType: ' + valueType);\n    }\n  }\n\n  const contentSq = safeGetAll(dataElements, TagKeys.ContentSequence);\n  if (typeof contentSq !== 'undefined') {\n    content.contentSequence = [];\n    for (const item of contentSq) {\n      content.contentSequence.push(getSRContent(item));\n    }\n  }\n\n  return content;\n}\n\n/**\n * Get a simple dicom element item from a content item object.\n *\n * @param {DicomSRContent} content The content item object.\n * @returns {Object<string, any>} The item as a list of (key, value) pairs.\n */\nexport function getDicomSRContentItem(content) {\n  // dicom item (tags are in ~group/element order)\n  let contentItem = {};\n\n  if (typeof content.relationshipType !== 'undefined') {\n    contentItem.RelationshipType = content.relationshipType;\n  }\n  if (typeof content.valueType !== 'undefined') {\n    contentItem.ValueType = content.valueType;\n  }\n  if (typeof content.conceptNameCode !== 'undefined') {\n    contentItem.ConceptNameCodeSequence = {\n      value: [getDicomCodeItem(content.conceptNameCode)]\n    };\n  }\n\n  // set appropriate value tag (data and time are stored as string)\n  if (content.valueType === 'CODE') {\n    contentItem.ConceptCodeSequence = {\n      value: [getDicomCodeItem(content.value)]\n    };\n  } else if (content.valueType === ValueTypes.num) {\n    contentItem = {\n      ...contentItem,\n      ...getDicomNumericMeasurementItem(content.value)\n    };\n  } else if (content.valueType === ValueTypes.image) {\n    contentItem = {\n      ...contentItem,\n      ...getDicomImageReferenceItem(content.value)\n    };\n  } else if (content.valueType === ValueTypes.composite) {\n    contentItem = {\n      ...contentItem,\n      ...getDicomSopInstanceReferenceItem(content.value)\n    };\n  } else if (content.valueType === ValueTypes.scoord) {\n    contentItem = {\n      ...contentItem,\n      ...getDicomSpatialCoordinateItem(content.value)\n    };\n  } else if (content.valueType === ValueTypes.scoord3d) {\n    contentItem = {\n      ...contentItem,\n      ...getDicomSpatialCoordinate3DItem(content.value)\n    };\n  } else {\n    const valueTagName = ValueTypeValueTagName[content.valueType];\n    if (typeof valueTagName !== 'undefined') {\n      contentItem[valueTagName] = content.value;\n    } else {\n      console.warn('Unsupported output ValueType: ' + content.valueType);\n    }\n  }\n\n  if (typeof content.contentSequence !== 'undefined') {\n    contentItem.ContentSequence = {\n      value: []\n    };\n    for (const item of content.contentSequence) {\n      contentItem.ContentSequence.value.push(getDicomSRContentItem(item));\n    }\n  }\n\n  return contentItem;\n}\n\n/**\n * Get a DicomSRContent from a value.\n *\n * @param {string} name The value name.\n * @param {object} value The value.\n * @param {string} unit The values' unit.\n * @returns {DicomSRContent|undefined} The SR content.\n */\nexport function getSRContentFromValue(name, value, unit) {\n  const conceptNameCode = getConceptNameCode(name);\n\n  if (typeof conceptNameCode === 'undefined') {\n    return undefined;\n  }\n\n  const content = new DicomSRContent(ValueTypes.num);\n  content.relationshipType = RelationshipTypes.contains;\n  content.conceptNameCode = conceptNameCode;\n\n  const measure = new MeasuredValue();\n  measure.numericValue = value;\n  measure.measurementUnitsCode = getMeasurementUnitsCode(unit);\n  const numMeasure = new NumericMeasurement();\n  numMeasure.measuredValue = measure;\n\n  content.value = numMeasure;\n\n  return content;\n}","import {\n  dateToDateObj,\n  getDicomDate,\n  dateToTimeObj,\n  getDicomTime,\n} from '../dicom/dicomDate';\nimport {\n  safeGet,\n  safeGetAll\n} from '../dicom/dataElement';\nimport {\n  ValueTypes,\n  RelationshipTypes,\n  getSRContent,\n  getDicomSRContentItem,\n  getContentTemplate,\n  DicomSRContent,\n  getSRContentFromValue\n} from '../dicom/dicomSRContent';\nimport {\n  isEqualCode,\n  getPathCode,\n  getMeasurementGroupCode,\n  getImageRegionCode,\n  getReferenceGeometryCode,\n  getSourceImageCode,\n  getTrackingIdentifierCode,\n  getShortLabelCode,\n  getReferencePointsCode,\n  getColourCode,\n  getQuantificationName,\n  getQuantificationUnit,\n  DicomCode\n} from '../dicom/dicomCode';\nimport {\n  isVersionInBounds,\n  getDwvVersionFromImplementationClassUID\n} from '../dicom/dicomParser';\nimport {getElementsFromJSONTags} from '../dicom/dicomWriter';\nimport {ImageReference} from '../dicom/dicomImageReference';\nimport {SopInstanceReference} from '../dicom/dicomSopInstanceReference';\nimport {\n  GraphicTypes,\n  getScoordFromShape,\n  getShapeFromScoord,\n  SpatialCoordinate\n} from '../dicom/dicomSpatialCoordinate';\nimport {SpatialCoordinate3D} from '../dicom/dicomSpatialCoordinate3D';\nimport {guid} from '../math/stats';\nimport {logger} from '../utils/logger';\nimport {Annotation} from './annotation';\nimport {AnnotationGroup} from './annotationGroup';\nimport {Line} from '../math/line';\nimport {Point2D, Point3D} from '../math/point';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from '../dicom/dataElement';\n/* eslint-enable no-unused-vars */\n\n/**\n * Related DICOM tag keys.\n */\nconst TagKeys = {\n  ImplementationClassUID: '00020012',\n  StudyInstanceUID: '0020000D',\n  SeriesInstanceUID: '0020000E',\n  Modality: '00080060',\n  PatientName: '00100010',\n  PatientID: '00100020',\n  PatientBirthDate: '00100030',\n  PatientSex: '00100040',\n  ReferencedSeriesSequence: '00081115',\n};\n\n/**\n * Merge two tag lists.\n *\n * @param {object} tags1 Base list, will be modified.\n * @param {object} tags2 List to merge.\n */\nfunction mergeTags(tags1, tags2) {\n  const keys2 = Object.keys(tags2);\n  for (const tagName2 of keys2) {\n    if (tags1[tagName2] !== undefined) {\n      logger.trace('Overwritting tag: ' + tagName2);\n    }\n    tags1[tagName2] = tags2[tagName2];\n  }\n}\n\n/**\n * {@link AnnotationGroup} factory.\n */\nexport class AnnotationGroupFactory {\n\n  /**\n   * Possible warning created by checkElements.\n   *\n   * @type {string|undefined}\n   */\n  #warning;\n\n  /**\n   * Get a warning string if elements are not as expected.\n   * Created by checkElements.\n   *\n   * @returns {string|undefined} The warning.\n   */\n  getWarning() {\n    return this.#warning;\n  }\n\n  /**\n   * Check dicom elements.\n   *\n   * @param {Object<string, DataElement>} dataElements The DICOM data elements.\n   * @returns {string|undefined} A possible warning.\n   * @throws Error for missing or wrong data.\n   */\n  checkElements(dataElements) {\n    // reset\n    this.#warning = undefined;\n\n    // content template\n    const contentTemplate = getContentTemplate(dataElements);\n    // version\n    const classUID =\n      safeGet(dataElements, TagKeys.ImplementationClassUID);\n    const dwvVersion = getDwvVersionFromImplementationClassUID(classUID);\n    const isDwv034 = typeof dwvVersion !== 'undefined' &&\n      isVersionInBounds(dwvVersion, '0.34.0', '0.35.0-beta.20');\n    // dwv 0.34 annotations do not have template\n    const isDwv034Annotation = isDwv034 &&\n      typeof contentTemplate === 'undefined';\n\n    // root SR concept\n    let rootConcept;\n    const srContent = getSRContent(dataElements);\n    if (typeof srContent.conceptNameCode !== 'undefined') {\n      rootConcept = srContent.conceptNameCode.value;\n    }\n\n    if (isDwv034Annotation) {\n      if (typeof rootConcept === 'undefined' ||\n        rootConcept !== getMeasurementGroupCode().value) {\n        this.#warning =\n          'Not a valid root concept name code for dwv 0.34 annotation';\n      }\n    } else {\n      this.#warning = 'Not a dwv 0.34 annotation';\n    }\n\n    return this.#warning;\n  }\n\n  /**\n   * Convert a DICOM SR content of type SCOORD into an annotation.\n   *\n   * @param {DicomSRContent} item The input SCOORD.\n   * @returns {Annotation} The annotation.\n   */\n  #scoordToAnnotation(item) {\n    const annotation = new Annotation();\n    annotation.mathShape = getShapeFromScoord(item.value);\n    // default\n    annotation.id = guid();\n    annotation.textExpr = '';\n\n    for (const subItem of item.contentSequence) {\n      // reference image UID\n      if (subItem.valueType === ValueTypes.image &&\n        subItem.relationshipType === RelationshipTypes.selectedFrom &&\n        isEqualCode(subItem.conceptNameCode, getSourceImageCode())) {\n        annotation.referenceSopUID =\n          subItem.value.referencedSOPSequence.referencedSOPInstanceUID;\n      }\n      // annotation id\n      if (subItem.valueType === ValueTypes.uidref &&\n        subItem.relationshipType === RelationshipTypes.hasProperties &&\n        isEqualCode(subItem.conceptNameCode, getTrackingIdentifierCode())) {\n        annotation.id = subItem.value;\n      }\n      // text expr\n      if (subItem.valueType === ValueTypes.text &&\n        subItem.relationshipType === RelationshipTypes.hasProperties &&\n        isEqualCode(subItem.conceptNameCode, getShortLabelCode())) {\n        annotation.textExpr = subItem.value;\n        if (typeof subItem.contentSequence !== 'undefined') {\n          for (const subsubItem of subItem.contentSequence) {\n            if (subsubItem.valueType === ValueTypes.scoord &&\n              subsubItem.relationshipType === RelationshipTypes.hasProperties &&\n              isEqualCode(\n                subsubItem.conceptNameCode, getReferencePointsCode())) {\n              annotation.labelPosition = new Point2D(\n                subsubItem.value.graphicData[0],\n                subsubItem.value.graphicData[1]\n              );\n            }\n          }\n        }\n      }\n      // color\n      if (subItem.valueType === ValueTypes.text &&\n        subItem.relationshipType === RelationshipTypes.hasProperties &&\n        isEqualCode(subItem.conceptNameCode, getColourCode())) {\n        annotation.colour = subItem.value;\n      }\n      // reference points\n      if (subItem.valueType === ValueTypes.scoord &&\n        subItem.relationshipType === RelationshipTypes.hasProperties &&\n        isEqualCode(subItem.conceptNameCode, getReferencePointsCode()) &&\n        subItem.value.graphicType === GraphicTypes.multipoint) {\n        const points = [];\n        for (let i = 0; i < subItem.value.graphicData.length; i += 2) {\n          points.push(new Point2D(\n            subItem.value.graphicData[i],\n            subItem.value.graphicData[i + 1]\n          ));\n        }\n        annotation.referencePoints = points;\n      }\n      // plane points\n      if (subItem.valueType === ValueTypes.scoord3d &&\n        subItem.relationshipType === RelationshipTypes.hasProperties &&\n        isEqualCode(\n          subItem.conceptNameCode, getReferenceGeometryCode()) &&\n        subItem.value.graphicType === GraphicTypes.multipoint) {\n        const data = subItem.value.graphicData;\n        const points = [];\n        const nPoints = Math.floor(data.length / 3);\n        for (let i = 0; i < nPoints; ++i) {\n          const j = i * 3;\n          points.push(new Point3D(data[j], data[j + 1], data[j + 2]));\n        }\n        annotation.planePoints = points;\n      }\n      // quantification\n      if (subItem.valueType === ValueTypes.num &&\n        subItem.relationshipType === RelationshipTypes.contains) {\n        const quantifName =\n          getQuantificationName(subItem.conceptNameCode);\n        if (typeof quantifName === 'undefined') {\n          continue;\n        }\n        const measuredValue = subItem.value.measuredValue;\n        const quantifUnit = getQuantificationUnit(\n          measuredValue.measurementUnitsCode);\n        if (typeof annotation.quantification === 'undefined') {\n          annotation.quantification = {};\n        }\n        annotation.quantification[quantifName] = {\n          value: measuredValue.numericValue,\n          unit: quantifUnit\n        };\n      }\n      // meta\n      if ((subItem.valueType === ValueTypes.code ||\n        subItem.valueType === ValueTypes.text) &&\n        subItem.relationshipType === RelationshipTypes.contains) {\n        annotation.addMetaItem(\n          subItem.conceptNameCode,\n          subItem.value\n        );\n      }\n    }\n    return annotation;\n  }\n\n  /**\n   * Get an {@link Annotation} object from the read DICOM file.\n   *\n   * @param {Object<string, DataElement>} dataElements The DICOM tags.\n   * @returns {AnnotationGroup} A new annotation group.\n   * @throws Error for missing or wrong data.\n   */\n  create(dataElements) {\n    const annotations = [];\n    const srContent = getSRContent(dataElements);\n    for (const item of srContent.contentSequence) {\n      if (item.valueType === ValueTypes.scoord) {\n        annotations.push(this.#scoordToAnnotation(item));\n      }\n    }\n    const annotationGroup = new AnnotationGroup(annotations);\n\n    const safeGetLocal = function (key) {\n      return safeGet(dataElements, key);\n    };\n\n    // StudyInstanceUID\n    annotationGroup.setMetaValue('StudyInstanceUID',\n      safeGetLocal(TagKeys.StudyInstanceUID));\n    // Modality\n    annotationGroup.setMetaValue('Modality',\n      safeGetLocal(TagKeys.Modality));\n    // patient info\n    annotationGroup.setMetaValue('PatientName',\n      safeGetLocal(TagKeys.PatientName));\n    annotationGroup.setMetaValue('PatientID',\n      safeGetLocal(TagKeys.PatientID));\n    annotationGroup.setMetaValue('PatientBirthDate',\n      safeGetLocal(TagKeys.PatientBirthDate));\n    annotationGroup.setMetaValue('PatientSex',\n      safeGetLocal(TagKeys.PatientSex));\n\n    // ReferencedSeriesSequence\n    const refSeriesSq = safeGetLocal(TagKeys.ReferencedSeriesSequence);\n    if (typeof refSeriesSq !== 'undefined') {\n      const seriesUIDs = safeGetAll(refSeriesSq, TagKeys.SeriesInstanceUID);\n      if (typeof seriesUIDs !== 'undefined') {\n        const uids = [];\n        for (const uid of seriesUIDs) {\n          uids.push({SeriesInstanceUID: uid});\n        }\n        annotationGroup.setMetaValue(\n          'ReferencedSeriesSequence', {value: uids}\n        );\n      }\n    }\n\n    return annotationGroup;\n  }\n\n  /**\n   * Convert an annotation into a DICOM SCOORD.\n   *\n   * @param {Annotation} annotation The input annotation.\n   * @returns {DicomSRContent} An SR content of type SCOORD.\n   */\n  #annotationToScoord(annotation) {\n    const srScoord = new DicomSRContent(ValueTypes.scoord);\n    srScoord.relationshipType = RelationshipTypes.contains;\n    if (annotation.mathShape instanceof Line) {\n      srScoord.conceptNameCode = getPathCode();\n    } else {\n      srScoord.conceptNameCode = getImageRegionCode();\n    }\n    srScoord.value = getScoordFromShape(annotation.mathShape);\n\n    const itemContentSequence = [];\n\n    // reference image UID\n    const srImage = new DicomSRContent(ValueTypes.image);\n    srImage.relationshipType = RelationshipTypes.selectedFrom;\n    srImage.conceptNameCode = getSourceImageCode();\n    const sopRef = new SopInstanceReference();\n    sopRef.referencedSOPClassUID = '';\n    sopRef.referencedSOPInstanceUID = annotation.referenceSopUID;\n    const imageRef = new ImageReference();\n    imageRef.referencedSOPSequence = sopRef;\n    srImage.value = imageRef;\n    itemContentSequence.push(srImage);\n\n    // annotation id\n    const srUid = new DicomSRContent(ValueTypes.uidref);\n    srUid.relationshipType = RelationshipTypes.hasProperties;\n    srUid.conceptNameCode = getTrackingIdentifierCode();\n    srUid.value = annotation.id;\n    itemContentSequence.push(srUid);\n\n    // text expr\n    const shortLabel = new DicomSRContent(ValueTypes.text);\n    shortLabel.relationshipType = RelationshipTypes.hasProperties;\n    shortLabel.conceptNameCode = getShortLabelCode();\n    shortLabel.value = annotation.textExpr;\n    // label position\n    if (typeof annotation.labelPosition !== 'undefined') {\n      const labelPosition = new DicomSRContent(ValueTypes.scoord);\n      labelPosition.relationshipType = RelationshipTypes.hasProperties;\n      labelPosition.conceptNameCode = getReferencePointsCode();\n      const labelPosScoord = new SpatialCoordinate();\n      labelPosScoord.graphicType = GraphicTypes.point;\n      const graphicData = [\n        annotation.labelPosition.getX().toString(),\n        annotation.labelPosition.getY().toString()\n      ];\n      labelPosScoord.graphicData = graphicData;\n      labelPosition.value = labelPosScoord;\n\n      // add position to label sequence\n      shortLabel.contentSequence = [labelPosition];\n    }\n    itemContentSequence.push(shortLabel);\n\n    // colour\n    const colour = new DicomSRContent(ValueTypes.text);\n    colour.relationshipType = RelationshipTypes.hasProperties;\n    colour.conceptNameCode = getColourCode();\n    colour.value = annotation.colour;\n    itemContentSequence.push(colour);\n\n    // reference points\n    if (typeof annotation.referencePoints !== 'undefined') {\n      const referencePoints = new DicomSRContent(ValueTypes.scoord);\n      referencePoints.relationshipType = RelationshipTypes.hasProperties;\n      referencePoints.conceptNameCode = getReferencePointsCode();\n      const refPointsScoord = new SpatialCoordinate();\n      refPointsScoord.graphicType = GraphicTypes.multipoint;\n      const graphicData = [];\n      for (const point of annotation.referencePoints) {\n        graphicData.push(point.getX().toString());\n        graphicData.push(point.getY().toString());\n      }\n      refPointsScoord.graphicData = graphicData;\n\n      referencePoints.value = refPointsScoord;\n      itemContentSequence.push(referencePoints);\n    }\n\n    // plane points\n    if (typeof annotation.planePoints !== 'undefined') {\n      const planePoints = new DicomSRContent(ValueTypes.scoord3d);\n      planePoints.relationshipType = RelationshipTypes.hasProperties;\n      planePoints.conceptNameCode = getReferenceGeometryCode();\n      const pointsScoord = new SpatialCoordinate3D();\n      pointsScoord.graphicType = GraphicTypes.multipoint;\n      const graphicData = [];\n      for (const planePoint of annotation.planePoints) {\n        graphicData.push(planePoint.getX().toString());\n        graphicData.push(planePoint.getY().toString());\n        graphicData.push(planePoint.getZ().toString());\n      }\n      pointsScoord.graphicData = graphicData;\n\n      planePoints.value = pointsScoord;\n      itemContentSequence.push(planePoints);\n    }\n\n    // quantification\n    if (typeof annotation.quantification !== 'undefined') {\n      for (const key in annotation.quantification) {\n        const quatifContent = getSRContentFromValue(\n          key,\n          annotation.quantification[key].value,\n          annotation.quantification[key].unit\n        );\n        if (typeof quatifContent !== 'undefined') {\n          itemContentSequence.push(quatifContent);\n        }\n      }\n    }\n\n    // meta\n    const conceptIds = annotation.getMetaConceptIds();\n    for (const conceptId of conceptIds) {\n      const item = annotation.getMetaItem(conceptId);\n      let valueType = ValueTypes.text;\n      if (item.value instanceof DicomCode) {\n        valueType = ValueTypes.code;\n      }\n      const meta = new DicomSRContent(valueType);\n      meta.relationshipType = RelationshipTypes.contains;\n      meta.conceptNameCode = item.concept;\n      meta.value = item.value;\n      itemContentSequence.push(meta);\n    }\n\n    srScoord.contentSequence = itemContentSequence;\n    return srScoord;\n  }\n\n  /**\n   * Convert an annotation group into a DICOM SR object.\n   *\n   * @param {AnnotationGroup} annotationGroup The annotation group.\n   * @param {Object<string, any>} [extraTags] Optional list of extra tags.\n   * @returns {Object<string, DataElement>} A list of dicom elements.\n   */\n  toDicom(annotationGroup, extraTags) {\n    let tags = annotationGroup.getMeta();\n\n    // transfer syntax: ExplicitVRLittleEndian\n    tags.TransferSyntaxUID = '1.2.840.10008.1.2.1';\n    // class: Basic Text SR Storage\n    tags.SOPClassUID = '1.2.840.10008.5.1.4.1.1.88.11';\n    tags.MediaStorageSOPClassUID = '1.2.840.10008.5.1.4.1.1.88.11';\n    tags.CompletionFlag = 'PARTIAL';\n    tags.VerificationFlag = 'UNVERIFIED';\n\n    const now = new Date();\n    tags.ContentDate = getDicomDate(dateToDateObj(now));\n    tags.ContentTime = getDicomTime(dateToTimeObj(now));\n\n    const contentSequence = [];\n    for (const annotation of annotationGroup.getList()) {\n      contentSequence.push(this.#annotationToScoord(annotation));\n    }\n\n    // main\n    if (contentSequence.length !== 0) {\n      const srContent = new DicomSRContent(ValueTypes.container);\n      srContent.conceptNameCode = getMeasurementGroupCode();\n      srContent.contentSequence = contentSequence;\n\n      tags = {\n        ...tags,\n        ...getDicomSRContentItem(srContent)\n      };\n    }\n\n    // merge extra tags if provided\n    if (typeof extraTags !== 'undefined') {\n      mergeTags(tags, extraTags);\n    }\n\n    return getElementsFromJSONTags(tags);\n  }\n\n}","import {logger} from '../utils/logger';\nimport {\n  DicomParser,\n  getSyntaxDecompressionName\n} from '../dicom/dicomParser';\nimport {ImageFactory} from './imageFactory';\nimport {MaskFactory} from './maskFactory';\nimport {PixelBufferDecoder} from './decoder';\nimport {AnnotationGroupFactory} from './annotationGroupFactory';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {DataElement} from '../dicom/dataElement';\nimport {DicomData} from '../app/dataController';\n/* eslint-enable no-unused-vars */\n\n/**\n * Create a View from a DICOM buffer.\n */\nexport class DicomBufferToView {\n\n  /**\n   * Converter options.\n   *\n   * @type {object}\n   */\n  #options;\n\n  /**\n   * Set the converter options.\n   *\n   * @param {object} opt The input options.\n   */\n  setOptions(opt) {\n    this.#options = opt;\n  }\n\n  /**\n   * Pixel buffer decoder.\n   * Define only once to allow optional asynchronous mode.\n   *\n   * @type {object}\n   */\n  #pixelDecoder = null;\n\n  // local tmp storage\n  #dicomParserStore = [];\n  #finalBufferStore = [];\n  #decompressedSizes = [];\n  #factories = [];\n\n  /**\n   * Get the factory associated to input DICOM elements.\n   *\n   * @param {Object<string, DataElement>} elements The DICOM elements.\n   * @returns {ImageFactory|MaskFactory|AnnotationGroupFactory|undefined}\n   *   The associated factory.\n   */\n  #getFactory(elements) {\n    let factory;\n    const modalityElement = elements['00080060'];\n    if (typeof modalityElement !== 'undefined') {\n      const modality = modalityElement.value[0];\n      if (modality === 'SEG') {\n        // mask factory for DICOM SEG\n        factory = new MaskFactory();\n      } else if (modality === 'SR') {\n        // annotation factory for DICOM SR\n        factory = new AnnotationGroupFactory();\n      }\n    }\n    // image factory for pixel data\n    if (typeof factory === 'undefined') {\n      const pixelElement = elements['7FE00010'];\n      if (typeof pixelElement !== 'undefined') {\n        factory = new ImageFactory();\n      }\n    }\n    return factory;\n  }\n\n  /**\n   * Generate the data object.\n   *\n   * @param {number} index The data index.\n   * @param {string} origin The data origin.\n   * @returns {boolean} True if the generation went ok.\n   */\n  #generateData(index, origin) {\n    const dataElements = this.#dicomParserStore[index].getDicomElements();\n    const factory = this.#factories[index];\n    // exit if no factory\n    if (typeof factory === 'undefined') {\n      return false;\n    }\n    // create data\n    try {\n      const data = new DicomData(dataElements);\n      if (factory instanceof AnnotationGroupFactory) {\n        if (typeof factory.checkElements(dataElements) === 'undefined') {\n          data.annotationGroup = factory.create(dataElements);\n        }\n      } else {\n        data.image = factory.create(\n          dataElements,\n          this.#finalBufferStore[index],\n          this.#options.numberOfFiles);\n      }\n      // call onloaditem\n      this.onloaditem({\n        data: data,\n        source: origin,\n        warn: factory.getWarning()\n      });\n    } catch (error) {\n      this.onerror({\n        error: error,\n        source: origin\n      });\n      this.onloadend({\n        source: origin\n      });\n      // false for error\n      return false;\n    }\n\n    // all good\n    return true;\n  }\n\n  /**\n   * Generate a single data object.\n   *\n   * @param {number} index The data index.\n   * @param {string} origin The data origin.\n   */\n  #generateSingleData(index, origin) {\n    // generate image\n    if (this.#generateData(index, origin)) {\n      // send load event\n      this.onload({\n        source: origin\n      });\n    }\n    // allways send loadend\n    this.onloadend({\n      source: origin\n    });\n  }\n\n  /**\n   * Generate the image object from an uncompressed buffer.\n   *\n   * @param {number} index The data index.\n   * @param {string} origin The data origin.\n   */\n  #generateImageUncompressed(index, origin) {\n    // send 100% progress\n    this.onprogress({\n      lengthComputable: true,\n      loaded: 100,\n      total: 100,\n      index: index,\n      source: origin\n    });\n    // generate single data\n    this.#generateSingleData(index, origin);\n  }\n\n  /**\n   * Generate the image object from an compressed buffer.\n   *\n   * @param {number} index The data index.\n   * @param {Array} pixelBuffer The dicom parser.\n   * @param {string} algoName The compression algorithm name.\n   */\n  #generateImageCompressed(index, pixelBuffer, algoName) {\n    const dicomParser = this.#dicomParserStore[index];\n\n    // gather pixel buffer meta data\n    const bitsAllocated =\n      dicomParser.getDicomElements()['00280100'].value[0];\n    const pixelRepresentation =\n      dicomParser.getDicomElements()['00280103'].value[0];\n    const pixelMeta = {\n      bitsAllocated: bitsAllocated,\n      isSigned: (pixelRepresentation === 1)\n    };\n    const columnsElement = dicomParser.getDicomElements()['00280011'];\n    const rowsElement = dicomParser.getDicomElements()['00280010'];\n    if (typeof columnsElement !== 'undefined' &&\n      typeof rowsElement !== 'undefined') {\n      pixelMeta.sliceSize = columnsElement.value[0] * rowsElement.value[0];\n    }\n    const samplesPerPixelElement =\n      dicomParser.getDicomElements()['00280002'];\n    if (typeof samplesPerPixelElement !== 'undefined') {\n      pixelMeta.samplesPerPixel = samplesPerPixelElement.value[0];\n    }\n    const planarConfigurationElement =\n      dicomParser.getDicomElements()['00280006'];\n    if (typeof planarConfigurationElement !== 'undefined') {\n      pixelMeta.planarConfiguration = planarConfigurationElement.value[0];\n    }\n\n    const numberOfItems = pixelBuffer.length;\n\n    // setup the decoder (one decoder per all converts)\n    if (this.#pixelDecoder === null) {\n      this.#pixelDecoder = new PixelBufferDecoder(\n        algoName, numberOfItems);\n      // callbacks\n      // pixelDecoder.ondecodestart: nothing to do\n      this.#pixelDecoder.ondecodeditem = (event) => {\n        this.#onDecodedItem(event);\n        // send onload and onloadend when all items have been decoded\n        if (event.itemNumber + 1 === event.numberOfItems) {\n          this.onload(event);\n          this.onloadend(event);\n        }\n      };\n      // pixelDecoder.ondecoded: nothing to do\n      // pixelDecoder.ondecodeend: nothing to do\n      this.#pixelDecoder.onerror = this.onerror;\n      this.#pixelDecoder.onabort = this.onabort;\n    }\n\n    // launch decode\n    for (let i = 0; i < numberOfItems; ++i) {\n      this.#pixelDecoder.decode(pixelBuffer[i], pixelMeta,\n        {\n          itemNumber: i,\n          numberOfItems: numberOfItems,\n          index: index\n        }\n      );\n    }\n  }\n\n  /**\n   * Handle a decoded item event.\n   *\n   * @param {object} event The decoded item event.\n   */\n  #onDecodedItem(event) {\n    // send progress\n    this.onprogress({\n      lengthComputable: true,\n      loaded: event.itemNumber + 1,\n      total: event.numberOfItems,\n      index: event.index,\n      source: origin\n    });\n\n    const dataIndex = event.index;\n\n    // store decoded data\n    const decodedData = event.data[0];\n    if (event.numberOfItems !== 1) {\n      // allocate buffer if not done yet\n      if (typeof this.#decompressedSizes[dataIndex] === 'undefined') {\n        this.#decompressedSizes[dataIndex] = decodedData.length;\n        const fullSize = event.numberOfItems *\n          this.#decompressedSizes[dataIndex];\n        try {\n          this.#finalBufferStore[dataIndex] =\n            new decodedData.constructor(fullSize);\n        } catch (error) {\n          if (error instanceof RangeError) {\n            const powerOf2 = Math.floor(Math.log(fullSize) / Math.log(2));\n            logger.error('Cannot allocate ' +\n              decodedData.constructor.name +\n              ' of size: ' +\n              fullSize + ' (>2^' + powerOf2 + ') for decompressed data.');\n          }\n          // abort\n          this.#pixelDecoder.abort();\n          // send events\n          this.onerror({\n            error: error,\n            source: origin\n          });\n          this.onloadend({\n            source: origin\n          });\n          // exit\n          return;\n        }\n      }\n      // hoping for all items to have the same size...\n      if (decodedData.length !== this.#decompressedSizes[dataIndex]) {\n        logger.warn('Unsupported varying decompressed data size: ' +\n          decodedData.length + ' != ' + this.#decompressedSizes[dataIndex]);\n      }\n      // set buffer item data\n      this.#finalBufferStore[dataIndex].set(\n        decodedData, this.#decompressedSizes[dataIndex] * event.itemNumber);\n    } else {\n      this.#finalBufferStore[dataIndex] = decodedData;\n    }\n\n    // create image for the first item\n    if (event.itemNumber === 0) {\n      this.#generateData(dataIndex, origin);\n    }\n  }\n\n  /**\n   * Handle non image data.\n   *\n   * @param {number} index The data index.\n   * @param {string} origin The data origin.\n   */\n  #handleNonImageData(index, origin) {\n    // generate single data\n    this.#generateSingleData(index, origin);\n  }\n\n  /**\n   * Handle image data.\n   *\n   * @param {number} index The data index.\n   * @param {string} origin The data origin.\n   */\n  #handleImageData(index, origin) {\n    const dicomParser = this.#dicomParserStore[index];\n\n    const pixelBuffer = dicomParser.getDicomElements()['7FE00010'].value;\n    // help GC: discard pixel buffer from elements\n    dicomParser.getDicomElements()['7FE00010'].value = [];\n    this.#finalBufferStore[index] = pixelBuffer[0];\n\n    // transfer syntax (always there)\n    const syntax = dicomParser.getDicomElements()['00020010'].value[0];\n    const algoName = getSyntaxDecompressionName(syntax);\n    const needDecompression = typeof algoName !== 'undefined';\n\n    if (needDecompression) {\n      // generate image\n      this.#generateImageCompressed(\n        index,\n        pixelBuffer,\n        algoName);\n    } else {\n      this.#generateImageUncompressed(index, origin);\n    }\n  }\n\n  /**\n   * Get data from an input buffer using a DICOM parser.\n   *\n   * @param {ArrayBuffer} buffer The input data buffer.\n   * @param {string} origin The data origin.\n   * @param {number} dataIndex The data index.\n   */\n  convert(buffer, origin, dataIndex) {\n    // start event\n    this.onloadstart({\n      source: origin,\n      index: dataIndex\n    });\n\n    // DICOM parser\n    const dicomParser = new DicomParser();\n\n    if (typeof this.#options.defaultCharacterSet !== 'undefined') {\n      dicomParser.setDefaultCharacterSet(this.#options.defaultCharacterSet);\n    }\n    // parse the buffer\n    let factory;\n    try {\n      dicomParser.parse(buffer);\n      // check elements\n      factory = this.#getFactory(dicomParser.getDicomElements());\n      if (typeof factory !== 'undefined') {\n        factory.checkElements(dicomParser.getDicomElements());\n      }\n    } catch (error) {\n      this.onerror({\n        error: error,\n        source: origin\n      });\n      this.onloadend({\n        source: origin\n      });\n      return;\n    }\n\n    // store\n    this.#dicomParserStore[dataIndex] = dicomParser;\n    this.#factories[dataIndex] = factory;\n\n    // handle parsed data\n    if (factory instanceof AnnotationGroupFactory) {\n      this.#handleNonImageData(dataIndex, origin);\n    } else {\n      this.#handleImageData(dataIndex, origin);\n    }\n  }\n\n  /**\n   * Abort a conversion.\n   */\n  abort() {\n    // abort decoding, will trigger pixelDecoder.onabort\n    if (this.#pixelDecoder) {\n      this.#pixelDecoder.abort();\n    }\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class DicomBufferToView\n","import {MultiProgressHandler} from '../utils/progress';\nimport {loaderList} from './loaderList';\n\n/**\n * Memory loader.\n */\nexport class MemoryLoader {\n\n  /**\n   * Input data.\n   *\n   * @type {Array}\n   */\n  #inputData = null;\n\n  /**\n   * Data loader.\n   *\n   * @type {object}\n   */\n  #runningLoader = null;\n\n  /**\n   * Number of loaded data.\n   *\n   * @type {number}\n   */\n  #nLoad = 0;\n\n  /**\n   * Number of load end events.\n   *\n   * @type {number}\n   */\n  #nLoadend = 0;\n\n  /**\n   * The default character set (optional).\n   *\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * Get the default character set.\n   *\n   * @returns {string} The default character set.\n   */\n  getDefaultCharacterSet() {\n    return this.#defaultCharacterSet;\n  }\n\n  /**\n   * Set the default character set.\n   *\n   * @param {string} characterSet The character set.\n   */\n  setDefaultCharacterSet(characterSet) {\n    this.#defaultCharacterSet = characterSet;\n  }\n\n  /**\n   * Store the current input.\n   *\n   * @param {object} data The input data.\n   */\n  #storeInputData(data) {\n    this.#inputData = data;\n    // reset counters\n    this.#nLoad = 0;\n    this.#nLoadend = 0;\n    // clear storage\n    this.#clearStoredLoader();\n  }\n\n  /**\n   * Store the launched loader.\n   *\n   * @param {object} loader The launched loader.\n   */\n  #storeLoader(loader) {\n    this.#runningLoader = loader;\n  }\n\n  /**\n   * Clear the stored loader.\n   *\n   */\n  #clearStoredLoader() {\n    this.#runningLoader = null;\n  }\n\n  /**\n   * Increment the number of loaded data\n   *   and call onload if loaded all data.\n   *\n   * @param {object} _event The load data event.\n   */\n  #addLoad = (_event) => {\n    this.#nLoad++;\n    // call onload when all is loaded\n    // (not using the input event since it is not the\n    //   general load)\n    if (this.#nLoad === this.#inputData.length) {\n      this.onload({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * Increment the counter of load end events\n   *   and run callbacks when all done, erroneus or not.\n   *\n   * @param {object} _event The load end event.\n   */\n  #addLoadend = (_event) => {\n    this.#nLoadend++;\n    // call onloadend when all is run\n    // (not using the input event since it is not the\n    //   general load end)\n    if (this.#nLoadend === this.#inputData.length) {\n      this.onloadend({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * Load a list of buffers.\n   *\n   * @param {Array} data The list of buffers to load.\n   */\n  load(data) {\n    // check input\n    if (typeof data === 'undefined' || data.length === 0) {\n      return;\n    }\n    this.#storeInputData(data);\n\n    // send start event\n    this.onloadstart({\n      source: data\n    });\n\n    // create prgress handler\n    const mproghandler = new MultiProgressHandler(this.onprogress);\n    mproghandler.setNToLoad(data.length);\n    mproghandler.setNumberOfDimensions(1);\n\n    // create loaders\n    const loaders = [];\n    for (let m = 0; m < loaderList.length; ++m) {\n      loaders.push(new loaderList[m]());\n    }\n\n    // find an appropriate loader\n    let dataElement = data[0];\n    let loader = null;\n    let foundLoader = false;\n    for (let l = 0; l < loaders.length; ++l) {\n      loader = loaders[l];\n      if (loader.canLoadMemory(dataElement)) {\n        foundLoader = true;\n        // load options\n        loader.setOptions({\n          numberOfFiles: data.length,\n          defaultCharacterSet: this.getDefaultCharacterSet()\n        });\n        // set loader callbacks\n        // loader.onloadstart: nothing to do\n        loader.onprogress = mproghandler.getUndefinedMonoProgressHandler(0);\n        loader.onloaditem = this.onloaditem;\n        loader.onload = this.#addLoad;\n        loader.onloadend = this.#addLoadend;\n        loader.onerror = this.onerror;\n        loader.onabort = this.onabort;\n\n        // store loader\n        this.#storeLoader(loader);\n        // exit\n        break;\n      }\n    }\n    if (!foundLoader) {\n      throw new Error('No loader found for data: ' + dataElement.filename);\n    }\n\n    // loop on I/O elements\n    for (let i = 0; i < data.length; ++i) {\n      dataElement = data[i];\n      // check loader\n      if (!loader.canLoadMemory(dataElement)) {\n        throw new Error('Input data of different type: ' +\n          dataElement.filename);\n      }\n      // read\n      loader.load(dataElement.data, dataElement.filename, i);\n    }\n  }\n\n  /**\n   * Abort a load.\n   */\n  abort() {\n    // abort loader\n    if (this.#runningLoader && this.#runningLoader.isLoading()) {\n      this.#runningLoader.abort();\n    }\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class MemoryLoader\n","import {Size} from '../image/size';\nimport {Spacing} from '../image/spacing';\nimport {Geometry} from '../image/geometry';\nimport {Image} from '../image/image';\nimport {Point3D} from '../math/point';\n\n/**\n * Convert a string into an UID.\n *\n * @param {string} str The input string.\n * @returns {string} The input string converted to numbers\n *   using parseInt with a 36 radix\n *   (10 digits from 0 to 9 + 26 digits from a to z).\n */\nfunction toUID(str) {\n  return parseInt(str, 36).toString();\n}\n\n/**\n * Create a simple array buffer from an ImageData buffer.\n *\n * @param {object} imageData The ImageData taken from a context.\n * @returns {Uint8Array} The image buffer.\n */\nfunction imageDataToBuffer(imageData) {\n  // remove alpha\n  // TODO support passing the full image data\n  const dataLen = imageData.data.length;\n  const buffer = new Uint8Array((dataLen / 4) * 3);\n  let j = 0;\n  for (let i = 0; i < dataLen; i += 4) {\n    buffer[j] = imageData.data[i];\n    buffer[j + 1] = imageData.data[i + 1];\n    buffer[j + 2] = imageData.data[i + 2];\n    j += 3;\n  }\n  return buffer;\n}\n\n/**\n * Get an image from an input context imageData.\n *\n * @param {number} width The width of the coresponding image.\n * @param {number} height The height of the coresponding image.\n * @param {number} sliceIndex The slice index of the imageData.\n * @param {object} imageBuffer The image buffer.\n * @param {number} numberOfFrames The final number of frames.\n * @param {string} imageUid The image UID.\n * @returns {object} The corresponding view.\n */\nfunction getDefaultImage(\n  width, height, sliceIndex,\n  imageBuffer, numberOfFrames,\n  imageUid) {\n  // image size\n  const imageSize = new Size([width, height, 1]);\n  // default spacing\n  // TODO: misleading...\n  const imageSpacing = new Spacing([1, 1, 1]);\n  // default origin\n  const origin = new Point3D(0, 0, sliceIndex);\n  // create image\n  const geometry = new Geometry([origin], imageSize, imageSpacing);\n  const image = new Image(geometry, imageBuffer, [imageUid]);\n  image.setPhotometricInterpretation('RGB');\n  // meta information\n  const meta = {};\n  meta.BitsStored = 8;\n  if (typeof numberOfFrames !== 'undefined') {\n    meta.numberOfFiles = numberOfFrames;\n  }\n  image.setMeta(meta);\n  // return\n  return image;\n}\n\n/**\n * Get data from an input image using a canvas.\n *\n * @param {HTMLImageElement} domImage The DOM Image,\n *   an HTMLImageElement with extra info.\n * @param {string|File} origin The data origin.\n * @param {number} index The data index.\n * @returns {object} A load data event.\n */\nexport function getViewFromDOMImage(domImage, origin, index) {\n  // image size\n  const width = domImage.width;\n  const height = domImage.height;\n\n  // draw the image in the canvas in order to get its data\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  const ctx = canvas.getContext('2d');\n  ctx.drawImage(domImage, 0, 0);\n  // get the image data\n  const imageData = ctx.getImageData(0, 0, width, height);\n\n  // image properties\n  const info = {};\n  let seriesUID;\n  if (typeof origin === 'string') {\n    info['origin'] = {value: origin};\n    seriesUID = toUID(origin);\n  } else {\n    info['fileName'] = {value: origin.name};\n    seriesUID = toUID(origin.name);\n    info['fileType'] = {value: origin.type};\n    info['fileLastModifiedDate'] = {value: origin.lastModified};\n  }\n  info['imageWidth'] = {value: width};\n  info['imageHeight'] = {value: height};\n\n  // image identifier (~UID like)\n  const sliceIndex = index ? index : 0;\n  info['imageUid'] = {value: sliceIndex};\n  // series identifier (~UID like)\n  info['seriesUid'] = {value: seriesUID};\n\n  // create view\n  const imageBuffer = imageDataToBuffer(imageData);\n  const image = getDefaultImage(\n    width, height, sliceIndex, imageBuffer, 1, sliceIndex.toString());\n\n  // add seriesUID to meta\n  const meta = image.getMeta();\n  meta.SeriesInstanceUID = seriesUID;\n  image.setMeta(meta);\n\n  // return\n  return {\n    data: {\n      image: image,\n      meta: info\n    },\n    source: origin\n  };\n}\n\n/**\n * Get data from an input image using a canvas.\n *\n * @param {object} video The DOM Video, an HTMLVideoElement with extra info.\n * @param {Function} onloaditem On load callback.\n * @param {object} onload The function to call once the data is loaded.\n * @param {object} onprogress The function to call to report progress.\n * @param {object} onloadend The function to call to report load end.\n * @param {string|File} origin The data origin.\n * @param {number} dataIndex The data index.\n */\nexport function getViewFromDOMVideo(\n  video, onloaditem, onload, onprogress, onloadend,\n  origin, dataIndex) {\n  // video size\n  const width = video.videoWidth;\n  const height = video.videoHeight;\n\n  // default frame rate...\n  const frameRate = 30;\n  // number of frames\n  const numberOfFrames = Math.ceil(video.duration * frameRate);\n\n  // video properties\n  const info = {};\n  let seriesUID;\n  if (typeof origin === 'string') {\n    info['origin'] = {value: origin};\n    seriesUID = toUID(origin);\n  } else {\n    info['fileName'] = {value: origin.name};\n    seriesUID = toUID(origin.name);\n    info['fileType'] = {value: origin.type};\n    info['fileLastModifiedDate'] = {value: origin.lastModified};\n  }\n  info['imageWidth'] = {value: width};\n  info['imageHeight'] = {value: height};\n  info['numberOfFrames'] = {value: numberOfFrames};\n\n  // image identifier (~UID like)\n  info['imageUid'] = {value: 0};\n  // series identifier (~UID like)\n  info['seriesUid'] = {value: seriesUID};\n\n  // draw the image in the canvas in order to get its data\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  const ctx = canvas.getContext('2d');\n\n  // using seeked to loop through all video frames\n  video.addEventListener('seeked', onseeked, false);\n\n  // current frame index\n  let frameIndex = 0;\n  // video image\n  let image = null;\n\n  /**\n   * Draw the context and store it as a frame.\n   */\n  function storeFrame() {\n    // send progress\n    onprogress({\n      lengthComputable: true,\n      loaded: frameIndex,\n      total: numberOfFrames,\n      index: dataIndex,\n      source: origin\n    });\n    // draw image\n    ctx.drawImage(video, 0, 0);\n    // context to image buffer\n    const imgBuffer = imageDataToBuffer(\n      ctx.getImageData(0, 0, width, height));\n    if (frameIndex === 0) {\n      // create view\n      image = getDefaultImage(\n        width, height, 1, imgBuffer, numberOfFrames, dataIndex.toString());\n      // add seriesUID to meta\n      const meta = image.getMeta();\n      meta.SeriesInstanceUID = seriesUID;\n      image.setMeta(meta);\n      // call callback\n      onloaditem({\n        data: {\n          image: image,\n          meta: info\n        },\n        source: origin\n      });\n    } else {\n      image.appendFrameBuffer(imgBuffer, frameIndex);\n    }\n    // increment index\n    ++frameIndex;\n  }\n\n  let nextTime = 0;\n\n  /**\n   * Handle seeked event.\n   *\n   * @param {object} event The seeked event.\n   */\n  function onseeked(event) {\n    // store\n    storeFrame();\n    // set the next time\n    // (not using currentTime, it seems to get offseted)\n    nextTime += 1 / frameRate;\n    if (nextTime <= event.target.duration) {\n      this.currentTime = nextTime;\n    } else {\n      onload({\n        source: origin\n      });\n      onloadend({\n        source: origin\n      });\n      // stop listening\n      video.removeEventListener('seeked', onseeked);\n    }\n  }\n\n  // trigger the first seek\n  video.currentTime = nextTime;\n}\n","import {DicomDataLoader} from './dicomDataLoader';\nimport {JSONTextLoader} from './jsonTextLoader';\nimport {MultipartLoader} from './multipartLoader';\nimport {RawImageLoader} from './rawImageLoader';\nimport {RawVideoLoader} from './rawVideoLoader';\nimport {ZipLoader} from './zipLoader';\n\nexport const loaderList = [\n  DicomDataLoader,\n  JSONTextLoader,\n  MultipartLoader,\n  RawImageLoader,\n  RawVideoLoader,\n  ZipLoader\n];\n","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\nimport {DicomBufferToView} from '../image/dicomBufferToView';\n\n/**\n * DICOM data loader.\n */\nexport class DicomDataLoader {\n\n  /**\n   * Loader options.\n   *\n   * @type {object}\n   */\n  #options = {};\n\n  /**\n   * Loading flag.\n   *\n   * @type {boolean}\n   */\n  #isLoading = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} opt The input options.\n   */\n  setOptions(opt) {\n    this.#options = opt;\n  }\n\n  /**\n   * Is the load ongoing?\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return this.#isLoading;\n  }\n\n  /**\n   * DICOM buffer to View (asynchronous).\n   *\n   */\n  #db2v = new DicomBufferToView();\n\n  /**\n   * Load data.\n   *\n   * @param {object} buffer The DICOM buffer.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    // setup db2v ony once\n    if (!this.#isLoading) {\n      // pass options\n      this.#db2v.setOptions(this.#options);\n      // connect handlers\n      this.#db2v.onloadstart = this.onloadstart;\n      this.#db2v.onprogress = this.onprogress;\n      this.#db2v.onloaditem = this.onloaditem;\n      this.#db2v.onload = this.onload;\n      this.#db2v.onloadend = (event) => {\n        // reset loading flag\n        this.#isLoading = false;\n        // call listeners\n        this.onloadend(event);\n      };\n      this.#db2v.onerror = (event) => {\n        event.source = origin;\n        this.onerror(event);\n      };\n      this.#db2v.onabort = this.onabort;\n    }\n\n    // set loading flag\n    this.#isLoading = true;\n    // convert\n    this.#db2v.convert(buffer, origin, index);\n  }\n\n  /**\n   * Abort load.\n   */\n  abort() {\n    // reset loading flag\n    this.#isLoading = false;\n    // abort conversion, will trigger db2v.onabort\n    this.#db2v.abort();\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   * True if one of the folowing conditions is true:\n   * - the file has a 'dcm' extension,\n   * - the file has no extension.\n   *\n   * @param {File} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    const ext = getFileExtension(file.name);\n    const hasNoExt = (ext === null);\n    const hasDcmExt = (ext === 'dcm');\n    return hasNoExt || hasDcmExt;\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   * True if one of the folowing conditions is true:\n   * - the `options.forceLoader` is 'dicom',\n   * - the `options.requestHeaders` contains a 'Accept: application/dicom',\n   * - the url has a 'contentType' and it is 'application/dicom'\n   *   (as in wado urls),\n   * - the url has no 'contentType' and no extension or the extension is 'dcm'.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // check options\n    if (typeof options !== 'undefined') {\n      // check options.forceLoader\n      if (typeof options.forceLoader !== 'undefined' &&\n        options.forceLoader === 'dicom') {\n        return true;\n      }\n      // check options.requestHeaders for 'Accept'\n      if (typeof options.requestHeaders !== 'undefined') {\n        const isNameAccept = function (element) {\n          return element.name === 'Accept';\n        };\n        const acceptHeader = options.requestHeaders.find(isNameAccept);\n        if (typeof acceptHeader !== 'undefined') {\n          // starts with 'application/dicom' and no '+'\n          const acceptValue = 'application/dicom';\n          return startsWith(acceptHeader.value, acceptValue) &&\n            acceptHeader.value[acceptValue.length] !== '+';\n        }\n      }\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    // extension\n    const ext = getFileExtension(urlObjext.pathname);\n    const hasNoExt = (ext === null);\n    const hasDcmExt = (ext === 'dcm');\n    // content type (for wado url)\n    const contentType = urlObjext.searchParams.get('contentType');\n    const hasContentType = contentType !== null &&\n      typeof contentType !== 'undefined';\n    const hasDicomContentType = (contentType === 'application/dicom');\n\n    return hasContentType ? hasDicomContentType : (hasNoExt || hasDcmExt);\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    const contentType = mem['Content-Type'];\n    if (typeof contentType !== 'undefined' &&\n      contentType.startsWith('application/dicom')) {\n      return true;\n    }\n    if (typeof mem.filename !== 'undefined') {\n      const tmpFile = new File(['from memory'], mem.filename);\n      return this.canLoadFile(tmpFile);\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class DicomDataLoader\n","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\n\n/**\n * JSON text loader.\n */\nexport class JSONTextLoader {\n\n  /**\n   * Loading flag.\n   *\n   * @type {boolean}\n   */\n  #isLoading = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing?\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return this.#isLoading;\n  }\n\n  /**\n   * Load data.\n   *\n   * @param {object} text The input text.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(text, origin, index) {\n    // set loading flag\n    this.#isLoading = true;\n    this.onloadstart({\n      source: origin\n    });\n\n    try {\n      this.onprogress({\n        lengthComputable: true,\n        loaded: 100,\n        total: 100,\n        index: index,\n        source: origin\n      });\n      const data = {\n        data: text,\n        source: origin\n      };\n      // only expecting one item\n      this.onloaditem(data);\n      this.onload(data);\n    } catch (error) {\n      this.onerror({\n        error: error,\n        source: origin\n      });\n    } finally {\n      // reset loading flag\n      this.#isLoading = false;\n      this.onloadend({\n        source: origin\n      });\n    }\n  }\n\n  /**\n   * Abort load: pass to listeners.\n   */\n  abort() {\n    // reset loading flag\n    this.#isLoading = false;\n    // call listeners\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   * True if the file has a 'json' extension.\n   *\n   * @param {File} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    const ext = getFileExtension(file.name);\n    return (ext === 'json');\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   * True if one of the folowing conditions is true:\n   * - the `options.forceLoader` is 'json',\n   * - the `options.requestHeaders` contains a 'Accept: application/json' or\n   *   'Accept: application/dicom+json',\n   * - the url has a 'json' extension.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // check options\n    if (typeof options !== 'undefined') {\n      // check options.forceLoader\n      if (typeof options.forceLoader !== 'undefined' &&\n        options.forceLoader === 'json') {\n        return true;\n      }\n      // check options.requestHeaders for 'Accept'\n      if (typeof options.requestHeaders !== 'undefined') {\n        const isNameAccept = function (element) {\n          return element.name === 'Accept';\n        };\n        const acceptHeader = options.requestHeaders.find(isNameAccept);\n        if (typeof acceptHeader !== 'undefined') {\n          // starts with 'application/json' or 'application/dicom+json\n          return startsWith(acceptHeader.value, 'application/json') ||\n            startsWith(acceptHeader.value, 'application/dicom+json');\n        }\n      }\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    const ext = getFileExtension(urlObjext.pathname);\n    return (ext === 'json');\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    const contentType = mem['Content-Type'];\n    if (typeof contentType !== 'undefined' &&\n      contentType.startsWith('application/json')) {\n      return true;\n    }\n    if (typeof mem.filename !== 'undefined') {\n      const tmpFile = new File(['from memory'], mem.filename);\n      return this.canLoadFile(tmpFile);\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.Text;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.Text;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class JSONTextLoader\n","import {startsWith} from '../utils/string';\nimport {parseMultipart} from '../utils/array';\nimport {MemoryLoader} from './memoryLoader';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\n\n/**\n * Multipart data loader.\n */\nexport class MultipartLoader {\n\n  /**\n   * Loading flag.\n   *\n   * @type {boolean}\n   */\n  #isLoading = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing?\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return this.#isLoading;\n  }\n\n  /**\n   * Load data.\n   *\n   * @param {object} buffer The DICOM buffer.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    // send start event\n    this.onloadstart({\n      source: origin\n    });\n    // set loading flag\n    this.#isLoading = true;\n\n    const memoryIO = new MemoryLoader();\n    // memoryIO.onloadstart: nothing to do\n    memoryIO.onprogress = (progress) => {\n      // add 50% to take into account the un-Multipartping\n      progress.loaded = 50 + progress.loaded / 2;\n      // set data index\n      progress.index = index;\n      this.onprogress(progress);\n    };\n    memoryIO.onloaditem = this.onloaditem;\n    memoryIO.onload = this.onload;\n    memoryIO.onloadend = (event) => {\n      // reset loading flag\n      this.#isLoading = false;\n      // call listeners\n      this.onloadend(event);\n    };\n    memoryIO.onerror = this.onerror;\n    memoryIO.onabort = this.onabort;\n    // launch\n    memoryIO.load(parseMultipart(buffer));\n  }\n\n  /**\n   * Abort load: pass to listeners.\n   */\n  abort() {\n    // reset loading flag\n    this.#isLoading = false;\n    // call listeners\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   * Always returns false.\n   *\n   * @param {File} _file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(_file) {\n    return false;\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   * True if one of the folowing conditions is true:\n   * - the `options.forceLoader` is 'multipart',\n   * - the `options.requestHeaders` contains a 'Accept: multipart/related'.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // check options\n    if (typeof options !== 'undefined') {\n      // check options.forceLoader\n      if (typeof options.forceLoader !== 'undefined' &&\n        options.forceLoader === 'multipart') {\n        return true;\n      }\n      // check options.requestHeaders for 'Accept'\n      if (typeof options.requestHeaders !== 'undefined') {\n        const isNameAccept = function (element) {\n          return element.name === 'Accept';\n        };\n        const acceptHeader = options.requestHeaders.find(isNameAccept);\n        if (typeof acceptHeader !== 'undefined') {\n          // starts with 'multipart/related'\n          return startsWith(acceptHeader.value, 'multipart/related');\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} _mem The memory object.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadMemory(_mem) {\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class MultipartLoader\n","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {getViewFromDOMImage} from '../image/domReader';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\n\n/**\n * Raw image loader.\n */\nexport class RawImageLoader {\n\n  /**\n   * If abort is triggered, all image.onload callbacks have to be cancelled.\n   *\n   * @type {boolean}\n   */\n  #aborted = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing? TODO...\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return true;\n  }\n\n  /**\n   * Create a Data URI from an HTTP request response.\n   *\n   * @param {ArrayBuffer} response The HTTP request response.\n   * @param {string} dataType The data type.\n   * @returns {string} The data URI.\n   */\n  #createDataUri(response, dataType) {\n    // image type\n    let imageType = dataType;\n    if (!imageType || imageType === 'jpg') {\n      imageType = 'jpeg';\n    }\n    // create uri\n    const file = new Blob([response], {type: 'image/' + imageType});\n    return window.URL.createObjectURL(file);\n  }\n\n  /**\n   * Load data.\n   *\n   * @param {ArrayBuffer|string} buffer The read data.\n   * @param {string|File} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    this.#aborted = false;\n    // create a DOM image\n    const image = new Image();\n    // triggered by ctx.drawImage\n    image.onload = (/*event*/) => {\n      try {\n        if (!this.#aborted) {\n          this.onprogress({\n            lengthComputable: true,\n            loaded: 100,\n            total: 100,\n            index: index,\n            source: origin\n          });\n          const data = getViewFromDOMImage(image, origin, index);\n          // only expecting one item\n          this.onloaditem(data);\n          this.onload(data);\n        }\n      } catch (error) {\n        this.onerror({\n          error: error,\n          source: origin\n        });\n      } finally {\n        this.onloadend({\n          source: origin\n        });\n      }\n    };\n    // storing values to pass them on\n    if (typeof buffer === 'string') {\n      // file case\n      image.src = buffer;\n    } else if (typeof origin === 'string') {\n      // url case\n      const ext = origin.split('.').pop().toLowerCase();\n      image.src = this.#createDataUri(buffer, ext);\n    }\n  }\n\n  /**\n   * Abort load.\n   */\n  abort() {\n    this.#aborted = true;\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   * True for files with type 'image.*'.\n   *\n   * @param {File} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    return (typeof file.type !== 'undefined' &&\n      file.type.match('image.*') !== null);\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   * True if one of the folowing conditions is true:\n   * - the `options.forceLoader` is 'rawimage',\n   * - the `options.requestHeaders` contains an item\n   *   starting with 'Accept: image/'.\n   * - the url has a 'contentType' and it is 'image/jpeg', 'image/png'\n   *   or 'image/gif' (as in wado urls),\n   * - the url has no 'contentType' and the extension is 'jpeg', 'jpg',\n   *   'png' or 'gif'.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // check options\n    if (typeof options !== 'undefined') {\n      // check options.forceLoader\n      if (typeof options.forceLoader !== 'undefined' &&\n        options.forceLoader === 'rawimage') {\n        return true;\n      }\n      // check options.requestHeaders for 'Accept'\n      if (typeof options.requestHeaders !== 'undefined') {\n        const isNameAccept = function (element) {\n          return element.name === 'Accept';\n        };\n        const acceptHeader = options.requestHeaders.find(isNameAccept);\n        if (typeof acceptHeader !== 'undefined') {\n          // starts with 'image/'\n          return startsWith(acceptHeader.value, 'image/');\n        }\n      }\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    // extension\n    const ext = getFileExtension(urlObjext.pathname);\n    const hasImageExt = (ext === 'jpeg') || (ext === 'jpg') ||\n      (ext === 'png') || (ext === 'gif');\n    // content type (for wado url)\n    const contentType = urlObjext.searchParams.get('contentType');\n    const hasContentType = contentType !== null &&\n      typeof contentType !== 'undefined';\n    const hasImageContentType = (contentType === 'image/jpeg') ||\n      (contentType === 'image/png') ||\n      (contentType === 'image/gif');\n\n    return hasContentType ? hasImageContentType : hasImageExt;\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    if (typeof mem.filename !== 'undefined') {\n      const tmpFile = new File(['from memory'], mem.filename);\n      return this.canLoadFile(tmpFile);\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.DataURL;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class RawImageLoader","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {getViewFromDOMVideo} from '../image/domReader';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\n\n/**\n * Raw video loader.\n *\n * Url example (cors enabled):\n *   {@link https://raw.githubusercontent.com/clappr/clappr/master/test/fixtures/SampleVideo_360x240_1mb.mp4}.\n */\nexport class RawVideoLoader {\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing? TODO...\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return true;\n  }\n\n  /**\n   * Create a Data URI from an HTTP request response.\n   *\n   * @param {object} response The HTTP request response.\n   * @param {string} dataType The data type.\n   * @returns {string} The data URI.\n   */\n  #createDataUri(response, dataType) {\n    // image data as string\n    const bytes = new Uint8Array(response);\n    let videoDataStr = '';\n    for (let i = 0; i < bytes.byteLength; ++i) {\n      videoDataStr += String.fromCharCode(bytes[i]);\n    }\n    // create uri\n    const uri = 'data:video/' + dataType +\n      ';base64,' + window.btoa(videoDataStr);\n    return uri;\n  }\n\n  /**\n   * Internal Data URI load.\n   *\n   * @param {object} buffer The read data.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    // create a DOM video\n    const video = document.createElement('video');\n    if (typeof origin === 'string') {\n      // url case\n      const ext = origin.split('.').pop().toLowerCase();\n      video.src = this.#createDataUri(buffer, ext);\n    } else {\n      video.src = buffer;\n    }\n    // onload handler\n    video.onloadedmetadata = (event) => {\n      try {\n        getViewFromDOMVideo(event.target,\n          this.onloaditem, this.onload,\n          this.onprogress, this.onloadend,\n          origin, index);\n      } catch (error) {\n        this.onerror({\n          error: error,\n          source: origin\n        });\n        this.onloadend({\n          source: origin\n        });\n      }\n    };\n  }\n\n  /**\n   * Abort load.\n   */\n  abort() {\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   * True for files with type 'video.*'.\n   *\n   * @param {File} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    return (typeof file.type !== 'undefined' &&\n      file.type.match('video.*') !== null);\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   * True if one of the folowing conditions is true:\n   * - the `options.forceLoader` is 'rawvideo',\n   * - the `options.requestHeaders` contains an item\n   *   starting with 'Accept: video/'.\n   * - the url has a 'mp4', 'ogg' or 'webm' extension.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // check options\n    if (typeof options !== 'undefined') {\n      // check options.forceLoader\n      if (typeof options.forceLoader !== 'undefined' &&\n        options.forceLoader === 'rawvideo') {\n        return true;\n      }\n      // check options.requestHeaders for 'Accept'\n      if (typeof options.requestHeaders !== 'undefined') {\n        const isNameAccept = function (element) {\n          return element.name === 'Accept';\n        };\n        const acceptHeader = options.requestHeaders.find(isNameAccept);\n        if (typeof acceptHeader !== 'undefined') {\n          // starts with 'video/'\n          return startsWith(acceptHeader.value, 'video/');\n        }\n      }\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    const ext = getFileExtension(urlObjext.pathname);\n    return (ext === 'mp4') ||\n      (ext === 'ogg') ||\n      (ext === 'webm');\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    if (typeof mem.filename !== 'undefined') {\n      const tmpFile = new File(['from memory'], mem.filename);\n      return this.canLoadFile(tmpFile);\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.DataURL;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   * when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   * when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class RawVideoLoader\n","import {startsWith, getFileExtension} from '../utils/string';\nimport {getUrlFromUri} from '../utils/uri';\nimport {fileContentTypes} from './filesLoader';\nimport {urlContentTypes} from './urlsLoader';\nimport {MemoryLoader} from './memoryLoader';\n\n/**\n * The zip library.\n *\n * Ref: {@link https://github.com/Stuk/jszip}.\n *\n * @external JSZip\n */\nimport JSZip from 'jszip';\n\n/**\n * ZIP data loader.\n */\nexport class ZipLoader {\n\n  /**\n   * Loading flag.\n   *\n   * @type {boolean}\n   */\n  #isLoading = false;\n\n  /**\n   * Set the loader options.\n   *\n   * @param {object} _opt The input options.\n   */\n  setOptions(_opt) {\n    // does nothing\n  }\n\n  /**\n   * Is the load ongoing?\n   *\n   * @returns {boolean} True if loading.\n   */\n  isLoading() {\n    return this.#isLoading;\n  }\n\n  #filename = '';\n  #files = [];\n  #zobjs = null;\n\n  /**\n   * JSZip.async callback.\n   *\n   * @param {ArrayBuffer} content Unzipped file image.\n   * @param {object} origin The origin of the file.\n   * @param {number} index The data index.\n   */\n  #zipAsyncCallback(content, origin, index) {\n    this.#files.push({filename: this.#filename, data: content});\n\n    // sent un-ziped progress with the data index\n    // (max 50% to take into account the memory loading)\n    const unzipPercent = this.#files.length * 100 / this.#zobjs.length;\n    this.onprogress({\n      lengthComputable: true,\n      loaded: (unzipPercent / 2),\n      total: 100,\n      index: index,\n      item: {\n        loaded: unzipPercent,\n        total: 100,\n        source: origin\n      }\n    });\n\n    // recursively call until we have all the files\n    if (this.#files.length < this.#zobjs.length) {\n      const num = this.#files.length;\n      this.#filename = this.#zobjs[num].name;\n      this.#zobjs[num].async('arrayBuffer').then((content) => {\n        this.#zipAsyncCallback(content, origin, index);\n      });\n    } else {\n      const memoryIO = new MemoryLoader();\n      // memoryIO.onloadstart: nothing to do\n      memoryIO.onprogress = (progress) => {\n        // add 50% to take into account the un-zipping\n        progress.loaded = 50 + progress.loaded / 2;\n        // set data index\n        progress.index = index;\n        this.onprogress(progress);\n      };\n      memoryIO.onloaditem = this.onloaditem;\n      memoryIO.onload = this.onload;\n      memoryIO.onloadend = (event) => {\n        // reset loading flag\n        this.#isLoading = false;\n        // call listeners\n        this.onloadend(event);\n      };\n      memoryIO.onerror = this.onerror;\n      memoryIO.onabort = this.onabort;\n      // launch\n      memoryIO.load(this.#files);\n    }\n  }\n\n  /**\n   * Load data.\n   *\n   * @param {object} buffer The DICOM buffer.\n   * @param {string} origin The data origin.\n   * @param {number} index The data index.\n   */\n  load(buffer, origin, index) {\n    // send start event\n    this.onloadstart({\n      source: origin\n    });\n    // set loading flag\n    this.#isLoading = true;\n\n    JSZip.loadAsync(buffer).then((zip) => {\n      this.#files = [];\n      this.#zobjs = zip.file(/.*\\.dcm/);\n      // recursively load zip files into the files array\n      const num = this.#files.length;\n      this.#filename = this.#zobjs[num].name;\n      this.#zobjs[num].async('arrayBuffer').then((content) => {\n        this.#zipAsyncCallback(content, origin, index);\n      });\n    });\n  }\n\n  /**\n   * Abort load: pass to listeners.\n   */\n  abort() {\n    // reset loading flag\n    this.#isLoading = false;\n    // call listeners\n    this.onabort({});\n    this.onloadend({});\n  }\n\n  /**\n   * Check if the loader can load the provided file.\n   * True if the file has a 'zip' extension.\n   *\n   * @param {File} file The file to check.\n   * @returns {boolean} True if the file can be loaded.\n   */\n  canLoadFile(file) {\n    const ext = getFileExtension(file.name);\n    return (ext === 'zip');\n  }\n\n  /**\n   * Check if the loader can load the provided url.\n   * True if one of the folowing conditions is true:\n   * - the `options.forceLoader` is 'zip',\n   * - the `options.requestHeaders` contains an item\n   *   starting with 'Accept: application/zip'.\n   * - the url has a 'zip' extension.\n   *\n   * @param {string} url The url to check.\n   * @param {object} [options] Optional url request options.\n   * @returns {boolean} True if the url can be loaded.\n   */\n  canLoadUrl(url, options) {\n    // check options\n    if (typeof options !== 'undefined') {\n      // check options.forceLoader\n      if (typeof options.forceLoader !== 'undefined' &&\n        options.forceLoader === 'zip') {\n        return true;\n      }\n      // check options.requestHeaders for 'Accept'\n      if (typeof options.requestHeaders !== 'undefined') {\n        const isNameAccept = function (element) {\n          return element.name === 'Accept';\n        };\n        const acceptHeader = options.requestHeaders.find(isNameAccept);\n        if (typeof acceptHeader !== 'undefined') {\n          // starts with 'application/zip'\n          return startsWith(acceptHeader.value, 'application/zip');\n        }\n      }\n    }\n\n    const urlObjext = getUrlFromUri(url);\n    const ext = getFileExtension(urlObjext.pathname);\n    return (ext === 'zip');\n  }\n\n  /**\n   * Check if the loader can load the provided memory object.\n   *\n   * @param {object} mem The memory object.\n   * @returns {boolean} True if the object can be loaded.\n   */\n  canLoadMemory(mem) {\n    const contentType = mem['Content-Type'];\n    if (typeof contentType !== 'undefined' &&\n      contentType.startsWith('application/zip')) {\n      return true;\n    }\n    if (typeof mem.filename !== 'undefined') {\n      const tmpFile = new File(['from memory'], mem.filename);\n      return this.canLoadFile(tmpFile);\n    }\n    return false;\n  }\n\n  /**\n   * Get the file content type needed by the loader.\n   *\n   * @returns {number} One of the 'fileContentTypes'.\n   */\n  loadFileAs() {\n    return fileContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Get the url content type needed by the loader.\n   *\n   * @returns {number} One of the 'urlContentTypes'.\n   */\n  loadUrlAs() {\n    return urlContentTypes.ArrayBuffer;\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle an load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class ZipLoader\n","import {MultiProgressHandler} from '../utils/progress';\nimport {loaderList} from './loaderList';\n\n// file content types\nexport const fileContentTypes = {\n  Text: 0,\n  ArrayBuffer: 1,\n  DataURL: 2\n};\n\n/**\n * Files loader.\n */\nexport class FilesLoader {\n\n  /**\n   * Input data.\n   *\n   * @type {File[]}\n   */\n  #inputData = null;\n\n  /**\n   * Array of launched file readers.\n   *\n   * @type {FileReader[]}\n   */\n  #readers = [];\n\n  /**\n   * Data loader.\n   *\n   * @type {object}\n   */\n  #runningLoader = null;\n\n  /**\n   * Number of loaded data.\n   *\n   * @type {number}\n   */\n  #nLoad = 0;\n\n  /**\n   * Number of load end events.\n   *\n   * @type {number}\n   */\n  #nLoadend = 0;\n\n  /**\n   * The default character set (optional).\n   *\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * Get the default character set.\n   *\n   * @returns {string} The default character set.\n   */\n  getDefaultCharacterSet() {\n    return this.#defaultCharacterSet;\n  }\n\n  /**\n   * Set the default character set.\n   *\n   * @param {string} characterSet The character set.\n   */\n  setDefaultCharacterSet(characterSet) {\n    this.#defaultCharacterSet = characterSet;\n  }\n\n  /**\n   * Store the current input.\n   *\n   * @param {File[]} data The input data.\n   */\n  #storeInputData(data) {\n    this.#inputData = data;\n    // reset counters\n    this.#nLoad = 0;\n    this.#nLoadend = 0;\n    // clear storage\n    this.#clearStoredReaders();\n    this.#clearStoredLoader();\n  }\n\n  /**\n   * Store a launched reader.\n   *\n   * @param {FileReader} reader The launched reader.\n   */\n  #storeReader(reader) {\n    this.#readers.push(reader);\n  }\n\n  /**\n   * Clear the stored readers.\n   *\n   */\n  #clearStoredReaders() {\n    this.#readers = [];\n  }\n\n  /**\n   * Store the launched loader.\n   *\n   * @param {object} loader The launched loader.\n   */\n  #storeLoader(loader) {\n    this.#runningLoader = loader;\n  }\n\n  /**\n   * Clear the stored loader.\n   *\n   */\n  #clearStoredLoader() {\n    this.#runningLoader = null;\n  }\n\n  /**\n   * Increment the number of loaded data\n   *   and call onload if loaded all data.\n   *\n   * @param {object} _event The load data event.\n   */\n  #addLoad = (_event) => {\n    this.#nLoad++;\n    // call onload when all is loaded\n    // (not using the input event since it is\n    //   an individual load)\n    if (this.#nLoad === this.#inputData.length) {\n      this.onload({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * Increment the counter of load end events\n   *   and run callbacks when all done, erroneus or not.\n   *\n   * @param {object} _event The load end event.\n   */\n  #addLoadend = (_event) => {\n    this.#nLoadend++;\n    // call onloadend when all is run\n    // (not using the input event since it is\n    //   an individual load end)\n    if (this.#nLoadend === this.#inputData.length) {\n      this.onloadend({\n        source: this.#inputData\n      });\n    }\n  };\n\n  /**\n   * @callback eventFn\n   * @param {object} event The event.\n   */\n\n  /**\n   * Augment a callback event with a srouce.\n   *\n   * @param {object} callback The callback to augment its event.\n   * @param {object} source The source to add to the event.\n   * @returns {eventFn} The augmented callback.\n   */\n  #augmentCallbackEvent(callback, source) {\n    return (event) => {\n      event.source = source;\n      callback(event);\n    };\n  }\n\n  /**\n   * Get a load handler for a data element.\n   *\n   * @param {object} loader The associated loader.\n   * @param {File} dataElement The data element.\n   * @param {number} i The index of the element.\n   * @returns {eventFn} A load handler.\n   */\n  #getLoadHandler(loader, dataElement, i) {\n    return (event) => {\n      loader.load(event.target.result, dataElement, i);\n    };\n  }\n\n\n  /**\n   * Load a list of files.\n   *\n   * @param {File[]} data The list of files to load.\n   */\n  load(data) {\n    // check input\n    if (typeof data === 'undefined' || data.length === 0) {\n      return;\n    }\n    this.#storeInputData(data);\n\n    // send start event\n    this.onloadstart({\n      source: data\n    });\n\n    // create prgress handler\n    const mproghandler = new MultiProgressHandler(this.onprogress);\n    mproghandler.setNToLoad(data.length);\n\n    // create loaders\n    const loaders = [];\n    for (let m = 0; m < loaderList.length; ++m) {\n      loaders.push(new loaderList[m]());\n    }\n\n    // find an appropriate loader\n    let dataElement = data[0];\n    let loader = null;\n    let foundLoader = false;\n    for (let l = 0; l < loaders.length; ++l) {\n      loader = loaders[l];\n      if (loader.canLoadFile(dataElement)) {\n        foundLoader = true;\n        // load options\n        loader.setOptions({\n          numberOfFiles: data.length,\n          defaultCharacterSet: this.getDefaultCharacterSet()\n        });\n        // set loader callbacks\n        // loader.onloadstart: nothing to do\n        loader.onprogress = mproghandler.getUndefinedMonoProgressHandler(1);\n        loader.onloaditem = this.onloaditem;\n        loader.onload = this.#addLoad;\n        loader.onloadend = this.#addLoadend;\n        loader.onerror = this.onerror;\n        loader.onabort = this.onabort;\n\n        // store loader\n        this.#storeLoader(loader);\n        // exit\n        break;\n      }\n    }\n    if (!foundLoader) {\n      throw new Error('No loader found for file: ' + dataElement.name);\n    }\n\n    // loop on I/O elements\n    for (let i = 0; i < data.length; ++i) {\n      dataElement = data[i];\n\n      // check loader\n      if (!loader.canLoadFile(dataElement)) {\n        throw new Error('Input file of different type: ' + dataElement);\n      }\n\n      /**\n       * The file reader.\n       *\n       * Ref: {@link https://developer.mozilla.org/en-US/docs/Web/API/FileReader}.\n       *\n       * @external FileReader\n       */\n      const reader = new FileReader();\n      // store reader\n      this.#storeReader(reader);\n\n      // set reader callbacks\n      // reader.onloadstart: nothing to do\n      reader.onprogress = this.#augmentCallbackEvent(\n        mproghandler.getMonoProgressHandler(i, 0), dataElement);\n      reader.onload = this.#getLoadHandler(loader, dataElement, i);\n      // reader.onloadend: nothing to do\n      const errorCallback =\n        this.#augmentCallbackEvent(this.onerror, dataElement);\n      reader.onerror = (event) => {\n        this.#addLoadend();\n        errorCallback(event);\n      };\n      const abortCallback =\n        this.#augmentCallbackEvent(this.onabort, dataElement);\n      reader.onabort = (event) => {\n        this.#addLoadend();\n        abortCallback(event);\n      };\n      // read\n      if (loader.loadFileAs() === fileContentTypes.Text) {\n        reader.readAsText(dataElement);\n      } else if (loader.loadFileAs() === fileContentTypes.DataURL) {\n        reader.readAsDataURL(dataElement);\n      } else if (loader.loadFileAs() === fileContentTypes.ArrayBuffer) {\n        reader.readAsArrayBuffer(dataElement);\n      }\n    }\n  }\n\n  /**\n   * Abort a load.\n   */\n  abort() {\n    // abort readers\n    for (let i = 0; i < this.#readers.length; ++i) {\n      // 0: EMPTY, 1: LOADING, 2: DONE\n      if (this.#readers[i].readyState === 1) {\n        this.#readers[i].abort();\n      }\n    }\n    // abort loader\n    if (this.#runningLoader && this.#runningLoader.isLoading()) {\n      this.#runningLoader.abort();\n    }\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load item event fired\n   *   when a file item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class FilesLoader\n","import {FilesLoader} from '../io/filesLoader';\nimport {MemoryLoader} from '../io/memoryLoader';\nimport {UrlsLoader} from '../io/urlsLoader';\n\n/**\n * Load controller.\n */\nexport class LoadController {\n\n  /**\n   * The default character set.\n   *\n   * @type {string}\n   */\n  #defaultCharacterSet;\n\n  /**\n   * List of current loaders.\n   *\n   * @type {object}\n   */\n  #currentLoaders = {};\n\n  /**\n   * @param {string} defaultCharacterSet The default character set.\n   */\n  constructor(defaultCharacterSet) {\n    this.#defaultCharacterSet = defaultCharacterSet;\n  }\n\n  /**\n   * Load a list of files. Can be image files or a state file.\n   *\n   * @param {File[]} files The list of files to load.\n   * @param {string} dataId The data Id.\n   */\n  loadFiles(files, dataId) {\n    // has been checked for emptiness.\n    const ext = files[0].name.split('.').pop().toLowerCase();\n    if (ext === 'json') {\n      this.#loadStateFile(files[0], dataId);\n    } else {\n      this.#loadImageFiles(files, dataId);\n    }\n  }\n\n  /**\n   * Load a list of URLs. Can be image files or a state file.\n   *\n   * @param {string[]} urls The list of urls to load.\n   * @param {string} dataId The data Id.\n   * @param {object} [options] The load options:\n   * - requestHeaders: an array of {name, value} to use as request headers.\n   * - withCredentials: credentials flag to pass to the request.\n   */\n\n  loadURLs(urls, dataId, options) {\n    // has been checked for emptiness.\n    const ext = urls[0].split('.').pop().toLowerCase();\n    if (ext === 'json') {\n      this.#loadStateUrl(urls[0], dataId, options);\n    } else {\n      this.#loadImageUrls(urls, dataId, options);\n    }\n  }\n\n  /**\n   * Load a list of ArrayBuffers.\n   *\n   * @param {Array} data The list of ArrayBuffers to load\n   *   in the form of [{name: '', filename: '', data: data}].\n   * @param {string} dataId The data Id.\n   */\n  loadImageObject(data, dataId) {\n    // create IO\n    const memoryIO = new MemoryLoader();\n    // load data\n    this.#loadData(data, memoryIO, 'image', dataId);\n  }\n\n  /**\n   * Get the currently loaded data ids.\n   *\n   * @returns {string[]} The data ids.\n   */\n  getLoadingDataIds() {\n    return Object.keys(this.#currentLoaders);\n  }\n\n  /**\n   * Abort an individual current loader.\n   *\n   * @param {string} dataId The data to stop loading.\n   */\n  abort(dataId) {\n    if (typeof this.#currentLoaders[dataId] !== 'undefined') {\n      this.#currentLoaders[dataId].loader.abort();\n      delete this.#currentLoaders[dataId];\n    }\n  }\n\n  // private ----------------------------------------------------------------\n\n  /**\n   * Load a list of image files.\n   *\n   * @param {File[]} files The list of image files to load.\n   * @param {string} dataId The data Id.\n   */\n  #loadImageFiles(files, dataId) {\n    // create IO\n    const fileIO = new FilesLoader();\n    fileIO.setDefaultCharacterSet(this.#defaultCharacterSet);\n    // load data\n    this.#loadData(files, fileIO, 'image', dataId);\n  }\n\n  /**\n   * Load a list of image URLs.\n   *\n   * @param {string[]} urls The list of urls to load.\n   * @param {string} [dataId] The data Id.\n   * @param {object} [options] The load options:\n   * - requestHeaders: an array of {name, value} to use as request headers.\n   * - withCredentials: credentials flag to pass to the request.\n   */\n  #loadImageUrls(urls, dataId, options) {\n    // create IO\n    const urlIO = new UrlsLoader();\n    urlIO.setDefaultCharacterSet(this.#defaultCharacterSet);\n    // load data\n    this.#loadData(urls, urlIO, 'image', dataId, options);\n  }\n\n  /**\n   * Load a State file.\n   *\n   * @param {File} file The state file to load.\n   * @param {string} dataId The data Id.\n   */\n  #loadStateFile(file, dataId) {\n    // create IO\n    const fileIO = new FilesLoader();\n    // load data\n    this.#loadData([file], fileIO, 'state', dataId);\n  }\n\n\n  /**\n   * Load a State url.\n   *\n   * @param {string} url The state url to load.\n   * @param {string} [dataId] The data Id.\n   * @param {object} [options] The load options:\n   * - requestHeaders: an array of {name, value} to use as request headers.\n   * - withCredentials: credentials flag to pass to the request.\n   */\n  #loadStateUrl(url, dataId, options) {\n    // create IO\n    const urlIO = new UrlsLoader();\n    // load data\n    this.#loadData([url], urlIO, 'state', dataId, options);\n  }\n\n  /**\n   * Load a list of data.\n   *\n   * @param {string[]|File[]|Array} data Array of data to load.\n   * @param {object} loader The data loader.\n   * @param {string} loadType The data load type: 'image' or 'state'.\n   * @param {string} dataId The data id.\n   * @param {object} [options] Options passed to the final loader.\n   */\n  #loadData(data, loader, loadType, dataId, options) {\n    const eventInfo = {\n      loadtype: loadType,\n      dataid: dataId\n    };\n\n    // set callbacks\n    loader.onloadstart = (event) => {\n      // store loader to allow abort\n      this.#currentLoaders[dataId] = {\n        loader: loader,\n        isFirstItem: true\n      };\n      // callback\n      this.#augmentCallbackEvent(this.onloadstart, eventInfo)(event);\n    };\n    loader.onprogress = this.#augmentCallbackEvent(this.onprogress, eventInfo);\n    loader.onloaditem = (event) => {\n      const eventInfoItem = {\n        loadtype: loadType,\n        dataid: dataId\n      };\n      if (typeof this.#currentLoaders[dataId] !== 'undefined') {\n        eventInfoItem.isfirstitem = this.#currentLoaders[dataId].isFirstItem;\n      }\n      // callback\n      this.#augmentCallbackEvent(this.onloaditem, eventInfoItem)(event);\n      // update loader\n      if (typeof this.#currentLoaders[dataId] !== 'undefined' &&\n        this.#currentLoaders[dataId].isFirstItem) {\n        this.#currentLoaders[dataId].isFirstItem = false;\n      }\n    };\n    loader.onload = this.#augmentCallbackEvent(this.onload, eventInfo);\n    loader.onloadend = (event) => {\n      // reset current loader\n      delete this.#currentLoaders[dataId];\n      // callback\n      this.#augmentCallbackEvent(this.onloadend, eventInfo)(event);\n    };\n    loader.onerror = this.#augmentCallbackEvent(this.onerror, eventInfo);\n    loader.onabort = this.#augmentCallbackEvent(this.onabort, eventInfo);\n    if (typeof loader.ontimeout !== 'undefined') {\n      loader.ontimeout = this.#augmentCallbackEvent(this.ontimeout, eventInfo);\n    }\n    // launch load\n    try {\n      loader.load(data, options);\n    } catch (error) {\n      this.onerror({\n        error: error,\n        dataid: dataId\n      });\n      this.onloadend({\n        dataid: dataId\n      });\n      return;\n    }\n  }\n\n  /**\n   * Augment a callback event: adds loadtype to the event\n   *  passed to a callback.\n   *\n   * @param {object} callback The callback to update.\n   * @param {object} info Info object to append to the event.\n   * @returns {object} A function representing the modified callback.\n   */\n  #augmentCallbackEvent(callback, info) {\n    return function (event) {\n      const keys = Object.keys(info);\n      for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        event[key] = info[key];\n      }\n      callback(event);\n    };\n  }\n\n  /**\n   * Handle a load start event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load start event.\n   */\n  onloadstart(_event) {}\n\n  /**\n   * Handle a load progress event.\n   * Default does nothing.\n   *\n   * @param {object} _event The progress event.\n   */\n  onprogress(_event) {}\n\n  /**\n   * Handle a load event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when a file has been loaded successfully.\n   */\n  onload(_event) {}\n\n  /**\n   * Handle a load item event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load event fired\n   *   when an item has been loaded successfully.\n   */\n  onloaditem(_event) {}\n\n  /**\n   * Handle a load end event.\n   * Default does nothing.\n   *\n   * @param {object} _event The load end event fired\n   *  when a file load has completed, successfully or not.\n   */\n  onloadend(_event) {}\n\n  /**\n   * Handle an error event.\n   * Default does nothing.\n   *\n   * @param {object} _event The error event.\n   */\n  onerror(_event) {}\n\n  /**\n   * Handle a timeout event.\n   * Default does nothing.\n   *\n   * @param {object} _event The timeout event.\n   */\n  ontimeout(_event) {}\n\n  /**\n   * Handle an abort event.\n   * Default does nothing.\n   *\n   * @param {object} _event The abort event.\n   */\n  onabort(_event) {}\n\n} // class LoadController\n","import {ListenerHandler} from '../utils/listen';\nimport {getReverseOrientation} from '../dicom/dicomParser';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {App} from '../app/application';\n/* eslint-enable no-unused-vars */\n\n/**\n * Get a number toprecision function with the provided precision.\n *\n * @param {number} precision The precision to achieve.\n * @returns {Function} The to precision function.\n */\nfunction getNumberToPrecision(precision) {\n  return function (num) {\n    return Number(num).toPrecision(precision);\n  };\n}\n\n/**\n * Create a default replace format from a given length.\n * For example: '{v0}, {v1}'.\n *\n * @param {number} length The length of the format.\n * @returns {string} A replace format.\n */\nfunction createDefaultReplaceFormat(length) {\n  let res = '';\n  for (let i = 0; i < length; ++i) {\n    if (i !== 0) {\n      res += ', ';\n    }\n    res += '{v' + i + '}';\n  }\n  return res;\n}\n\n/**\n * Replace flags in a input string. Flags are keywords surrounded with curly\n * braces in the form: '{v0}, {v1}'.\n *\n * @param {string} inputStr The input string.\n * @param {string[]} values An array of strings.\n * @example\n *    var values = [\"a\", \"b\"];\n *    var str = \"The length is: {v0}. The size is: {v1}\";\n *    var res = replaceFlags(str, values);\n *    // \"The length is: a. The size is: b\"\n * @returns {string} The result string.\n */\nfunction replaceFlags(inputStr, values) {\n  let res = inputStr;\n  for (let i = 0; i < values.length; ++i) {\n    res = res.replace('{v' + i + '}', values[i]);\n  }\n  return res;\n}\n\n/**\n * DICOM Header overlay info.\n */\nexport class OverlayData {\n\n  /**\n   * Associated app.\n   *\n   * @type {App}\n   */\n  #app;\n\n  /**\n   * Associated data id.\n   *\n   * @type {string}\n   */\n  #dataId;\n\n  /**\n   * Overlay config.\n   *\n   * @type {object}\n   */\n  #configs;\n\n  /**\n   * List of event used by the config.\n   *\n   * @type {string[]}\n   */\n  #eventNames = [];\n\n  /**\n   * Flag to know if listening to app.\n   *\n   * @type {boolean}\n   */\n  #isListening;\n\n  /**\n   * Overlay data.\n   *\n   * @type {Array}\n   */\n  #data = [];\n\n  /**\n   * Current data uid: set on pos change.\n   *\n   * @type {number}\n   */\n  #currentDataUid;\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * @param {App} app The associated application.\n   * @param {string} dataId The associated data id.\n   * @param {object} configs The overlay config.\n   */\n  constructor(app, dataId, configs) {\n    this.#app = app;\n    this.#dataId = dataId;\n    this.#configs = configs;\n\n    // parse overlays to get the list of events to listen to\n    const keys = Object.keys(this.#configs);\n    for (let i = 0; i < keys.length; ++i) {\n      const config = this.#configs[keys[i]];\n      for (let j = 0; j < config.length; ++j) {\n        const eventType = config[j].event;\n        if (typeof eventType !== 'undefined') {\n          if (!this.#eventNames.includes(eventType)) {\n            this.#eventNames.push(eventType);\n          }\n        }\n      }\n    }\n    // add app listeners\n    this.addAppListeners();\n  }\n\n  /**\n   * Reset the data.\n   */\n  reset() {\n    this.#data = [];\n    this.#currentDataUid = undefined;\n  }\n\n  /**\n   * Handle a new loaded item event.\n   *\n   * @param {object} data The item meta data.\n   */\n  addItemMeta(data) {\n    // create and store overlay data\n    let dataUid;\n    // check if dicom data (00020010: transfer syntax)\n    if (typeof data['00020010'] !== 'undefined') {\n      if (typeof data['00080018'] !== 'undefined') {\n        // SOP instance UID\n        dataUid = data['00080018'].value[0];\n      } else {\n        dataUid = data.length;\n      }\n      this.#data[dataUid] = createOverlayData(data, this.#configs);\n    } else {\n      // image file case\n      const keys = Object.keys(data);\n      for (let d = 0; d < keys.length; ++d) {\n        const obj = data[keys[d]];\n        if (keys[d] === 'imageUid') {\n          dataUid = obj.value;\n          break;\n        }\n      }\n      this.#data[dataUid] = createOverlayDataForDom(data, this.#configs);\n    }\n    // store uid\n    this.#currentDataUid = dataUid;\n  }\n\n  /**\n   * Handle a changed slice event.\n   *\n   * @param {object} event The slicechange event.\n   */\n  #onSliceChange = (event) => {\n    if (event.dataid !== this.#dataId) {\n      return;\n    }\n    if (typeof event.data !== 'undefined' &&\n      typeof event.data.imageUid !== 'undefined' &&\n      this.#currentDataUid !== event.data.imageUid) {\n      this.#currentDataUid = event.data.imageUid;\n      this.#updateData(event);\n    }\n  };\n\n  /**\n   * Update the overlay data.\n   *\n   * @param {object} event An event defined by the overlay map and\n   *   registered in toggleListeners.\n   */\n  #updateData = (event) => {\n    if (event.dataid !== this.#dataId) {\n      return;\n    }\n\n    const sliceOverlayData = this.#data[this.#currentDataUid];\n    if (typeof sliceOverlayData === 'undefined') {\n      console.warn('No slice overlay data for: ' + this.#currentDataUid);\n      return;\n    }\n\n    for (let n = 0; n < sliceOverlayData.length; ++n) {\n      let text = undefined;\n      if (typeof sliceOverlayData[n].tags !== 'undefined') {\n        // update tags only on slice change\n        if (event.type === 'positionchange') {\n          text = sliceOverlayData[n].value;\n        }\n      } else {\n        // update text if the value is an event type\n        if (typeof sliceOverlayData[n].event !== 'undefined' &&\n          sliceOverlayData[n].event === event.type) {\n          const format = sliceOverlayData[n].format;\n          let values = event.value;\n          // optional number precision\n          if (typeof sliceOverlayData[n].precision !== 'undefined') {\n            let mapFunc = null;\n            if (sliceOverlayData[n].precision === 'round') {\n              mapFunc = Math.round;\n            } else {\n              mapFunc = getNumberToPrecision(sliceOverlayData[n].precision);\n            }\n            values = values.map(mapFunc);\n          }\n          text = replaceFlags(format, values);\n        }\n      }\n      if (typeof text !== 'undefined') {\n        sliceOverlayData[n].value = text;\n      }\n    }\n\n    /**\n     * Value change event.\n     *\n     * @event OverlayData#valuechange\n     * @type {object}\n     * @property {string} type The event type.\n     * @property {Array} data The value of the overlay data.\n     */\n    this.#fireEvent({\n      type: 'valuechange',\n      data: sliceOverlayData\n    });\n  };\n\n  /**\n   * Is this class listening to app events.\n   *\n   * @returns {boolean} True is listening to app events.\n   */\n  isListening() {\n    return this.#isListening;\n  }\n\n  /**\n   * Toggle info listeners.\n   */\n  addAppListeners() {\n    // listen to update tags data\n    this.#app.addEventListener('positionchange', this.#onSliceChange);\n    // add event listeners\n    for (let i = 0; i < this.#eventNames.length; ++i) {\n      this.#app.addEventListener(this.#eventNames[i], this.#updateData);\n    }\n    // update flag\n    this.#isListening = true;\n  }\n\n  /**\n   * Toggle info listeners.\n   */\n  removeAppListeners() {\n    // stop listening to update tags data\n    this.#app.removeEventListener('positionchange', this.#onSliceChange);\n    // remove event listeners\n    for (let i = 0; i < this.#eventNames.length; ++i) {\n      this.#app.removeEventListener(this.#eventNames[i], this.#updateData);\n    }\n    // update flag\n    this.#isListening = false;\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {object} callback The method associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent(event) {\n    this.#listenerHandler.fireEvent(event);\n  }\n\n} // class OverlayData\n\n/**\n * Create overlay data array for a DICOM image.\n *\n * @param {object} dicomElements DICOM elements of the image.\n * @param {object} configs The overlay data configs.\n * @returns {Array} Overlay data array.\n */\nfunction createOverlayData(dicomElements, configs) {\n  const overlays = [];\n  let modality;\n  const modElement = dicomElements['00080060'];\n  if (typeof modElement !== 'undefined') {\n    modality = modElement.value[0];\n  } else {\n    return overlays;\n  }\n  const config = configs[modality] || configs['*'];\n  if (!config) {\n    return overlays;\n  }\n\n  for (let n = 0; n < config.length; ++n) {\n    // deep copy\n    const overlay = JSON.parse(JSON.stringify(config[n]));\n\n    // add tag values\n    const tags = overlay.tags;\n    if (typeof tags !== 'undefined' && tags.length !== 0) {\n      // get values\n      const values = [];\n      for (let i = 0; i < tags.length; ++i) {\n        const elem = dicomElements[tags[i]];\n        if (typeof elem !== 'undefined') {\n          values.push(dicomElements[tags[i]].value);\n        } else {\n          values.push('');\n        }\n      }\n      // format\n      if (typeof overlay.format === 'undefined' || overlay.format === null) {\n        overlay.format = createDefaultReplaceFormat(values.length);\n      }\n      overlay.value = replaceFlags(overlay.format, values).trim();\n    }\n\n    // store\n    overlays.push(overlay);\n  }\n\n  // (0020,0020) Patient Orientation\n  const poElement = dicomElements['00200020'];\n  if (typeof poElement !== 'undefined' &&\n    poElement.value.length === 2\n  ) {\n    const po0 = poElement.value[0];\n    const po1 = poElement.value[1];\n    overlays.push({\n      pos: 'cr', value: po0, format: '{v0}'\n    });\n    overlays.push({\n      pos: 'cl', value: getReverseOrientation(po0), format: '{v0}'\n    });\n    overlays.push({\n      pos: 'bc', value: po1, format: '{v0}'\n    });\n    overlays.push({\n      pos: 'tc', value: getReverseOrientation(po1), format: '{v0}'\n    });\n  }\n\n  return overlays;\n}\n\n/**\n * Create overlay data array for a DOM image.\n *\n * @param {object} info Meta data.\n * @param {object} configs The overlay data configs.\n * @returns {Array} Overlay data array.\n */\nfunction createOverlayDataForDom(info, configs) {\n  const overlays = [];\n  const config = configs.DOM;\n  if (!config) {\n    return overlays;\n  }\n\n  const infoKeys = Object.keys(info);\n\n  for (let n = 0; n < config.length; ++n) {\n    // deep copy\n    const overlay = JSON.parse(JSON.stringify(config[n]));\n\n    // add tag values\n    const tags = overlay.tags;\n    if (typeof tags !== 'undefined' && tags.length !== 0) {\n      // get values\n      const values = [];\n      for (let i = 0; i < tags.length; ++i) {\n        for (let j = 0; j < infoKeys.length; ++j) {\n          if (tags[i] === infoKeys[j]) {\n            values.push(info[infoKeys[j]].value);\n          }\n        }\n      }\n      // format\n      if (typeof overlay.format === 'undefined' || overlay.format === null) {\n        overlay.format = createDefaultReplaceFormat(values.length);\n      }\n      overlay.value = replaceFlags(overlay.format, values).trim();\n    }\n\n    // store\n    overlays.push(overlay);\n  }\n\n  return overlays;\n}\n","import {viewEventNames} from '../image/view';\nimport {ViewFactory} from '../image/viewFactory';\nimport {\n  getMatrixFromName,\n  getOrientationStringLPS,\n  Orientation,\n  getViewOrientation\n} from '../math/orientation';\nimport {Point3D} from '../math/point';\nimport {Stage} from '../gui/stage';\nimport {Style} from '../gui/style';\nimport {getLayerDetailsFromLayerDivId} from '../gui/layerGroup';\nimport {ListenerHandler} from '../utils/listen';\nimport {State} from '../io/state';\nimport {logger} from '../utils/logger';\nimport {getUriQuery, decodeQuery} from '../utils/uri';\nimport {UndoStack} from '../utils/undoStack';\nimport {ToolboxController} from './toolboxController';\nimport {LoadController} from './loadController';\nimport {DataController} from './dataController';\nimport {OverlayData} from '../gui/overlayData';\nimport {\n  toolList,\n  defaultToolList,\n  toolOptions,\n  defaultToolOptions\n} from '../tools';\nimport {binderList} from '../gui/stage';\nimport {WindowLevel} from '../image/windowLevel';\nimport {PlaneHelper} from '../image/planeHelper';\nimport {AnnotationGroup} from '../image/annotationGroup';\nimport {konvaToAnnotation} from '../gui/drawLayer';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {LayerGroup} from '../gui/layerGroup';\nimport {ViewLayer} from '../gui/viewLayer';\nimport {DrawLayer} from '../gui/drawLayer';\nimport {Image} from '../image/image';\nimport {Matrix33} from '../math/matrix';\nimport {DataElement} from '../dicom/dataElement';\nimport {Scalar3D} from '../math/scalar';\nimport {DicomData} from './dataController';\n/* eslint-enable no-unused-vars */\n\n/**\n * View configuration: mainly defines the ´divId´\n * of the associated HTML div.\n */\nexport class ViewConfig {\n  /**\n   * Associated HTML div id.\n   *\n   * @type {string}\n   */\n  divId;\n  /**\n   * Optional orientation of the data; 'axial', 'coronal' or 'sagittal'.\n   * If undefined, will use the data aquisition plane.\n   *\n   * @type {string|undefined}\n   */\n  orientation;\n  /**\n   * Optional view colour map name.\n   *\n   * @type {string|undefined}\n   */\n  colourMap;\n  /**\n   * Optional layer opacity; in [0, 1] range.\n   *\n   * @type {number|undefined}\n   */\n  opacity;\n  /**\n   * Optional layer window level preset name.\n   * If present, the preset name will be used and\n   * the window centre and width ignored.\n   *\n   * @type {string|undefined}\n   */\n  wlPresetName;\n  /**\n   * Optional layer window center.\n   *\n   * @type {number|undefined}\n   */\n  windowCenter;\n  /**\n   * Optional layer window width.\n   *\n   * @type {number|undefined}\n   */\n  windowWidth;\n\n  /**\n   * @param {string} divId The associated HTML div id.\n   */\n  constructor(divId) {\n    this.divId = divId;\n  }\n}\n\n/**\n * Tool configuration.\n */\nexport class ToolConfig {\n  /**\n   * Optional tool options.\n   * For Draw: list of shape names.\n   * For Filter: list of filter names.\n   *\n   * @type {string[]|undefined}\n   */\n  options;\n\n  /**\n   * @param {string[]} [options] Optional tool options.\n   */\n  constructor(options) {\n    this.options = options;\n  }\n}\n\n/**\n * Application options.\n */\nexport class AppOptions {\n  /**\n   * DataId indexed object containing the data view configurations.\n   *\n   * @type {Object<string, ViewConfig[]>|undefined}\n   */\n  dataViewConfigs;\n  /**\n   * Tool name indexed object containing individual tool configurations.\n   *\n   * @type {Object<string, ToolConfig>|undefined}\n   */\n  tools;\n  /**\n   * Optional array of layerGroup binder names.\n   *\n   * @type {string[]|undefined}\n   */\n  binders;\n  /**\n   * Optional boolean flag to trigger the first data render\n   *   after the first loaded data or not. Defaults to true.\n   *\n   * @type {boolean|undefined}\n   */\n  viewOnFirstLoadItem;\n  /**\n   * Optional default chraracterset string used for DICOM parsing if\n   *   not passed in DICOM file.\n   *\n   * Valid values: {@link https://developer.mozilla.org/en-US/docs/Web/API/Encoding_API/Encodings}.\n   *\n   * @type {string|undefined}\n   */\n  defaultCharacterSet;\n  /**\n   * Optional overlay config.\n   *\n   * @type {object|undefined}\n   */\n  overlayConfig;\n  /**\n   * DOM root document.\n   *\n   * @type {DocumentFragment}\n   */\n  rootDocument;\n\n  /**\n   * @param {Object<string, ViewConfig[]>} [dataViewConfigs] Optional dataId\n   *   indexed object containing the data view configurations.\n   */\n  constructor(dataViewConfigs) {\n    this.dataViewConfigs = dataViewConfigs;\n  }\n}\n\n/**\n * List of ViewConfigs indexed by dataIds.\n *\n * @typedef {Object<string, ViewConfig[]>} DataViewConfigs\n */\n\n/**\n * Main application class.\n *\n * @example\n * // create the dwv app\n * const app = new dwv.App();\n * // initialise\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n * const viewConfigs = {'*': [viewConfig0]};\n * const options = new dwv.AppOptions(viewConfigs);\n * app.init(options);\n * // load dicom data\n * app.loadURLs([\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n * ]);\n */\nexport class App {\n\n  /**\n   * App options.\n   *\n   * @type {AppOptions}\n   */\n  #options = null;\n\n  /**\n   * Data controller.\n   *\n   * @type {DataController}\n   */\n  #dataController = null;\n\n  /**\n   * Toolbox controller.\n   *\n   * @type {ToolboxController}\n   */\n  #toolboxController = null;\n\n  /**\n   * Load controller.\n   *\n   * @type {LoadController}\n   */\n  #loadController = null;\n\n  /**\n   * Stage.\n   *\n   * @type {Stage}\n   */\n  #stage = null;\n\n  /**\n   * Undo stack.\n   *\n   * @type {UndoStack}\n   */\n  #undoStack = null;\n\n  /**\n   * Style.\n   *\n   * @type {Style}\n   */\n  #style = new Style();\n\n  // overlay datas\n  #overlayDatas = {};\n\n  /**\n   * Listener handler.\n   *\n   * @type {ListenerHandler}\n   */\n  #listenerHandler = new ListenerHandler();\n\n  /**\n   * Get a DicomData.\n   *\n   * @param {string} dataId The data id.\n   * @returns {DicomData|undefined} The data.\n   */\n  getData(dataId) {\n    return this.#dataController.get(dataId);\n  }\n\n  /**\n   * Get the image.\n   *\n   * @param {string} dataId The data id.\n   * @returns {Image|undefined} The associated image.\n   * @deprecated Since v0.34, please use the getData method.\n   */\n  getImage(dataId) {\n    let res;\n    if (typeof this.getData(dataId) !== 'undefined') {\n      res = this.getData(dataId).image;\n    }\n    return res;\n  }\n\n  /**\n   * Set the image at the given id.\n   *\n   * @param {string} dataId The data id.\n   * @param {Image} img The associated image.\n   */\n  setImage(dataId, img) {\n    this.#dataController.setImage(dataId, img);\n  }\n\n  /**\n   * Add a new DicomData.\n   *\n   * @param {DicomData} data The new data.\n   * @returns {string} The data id.\n   */\n  addData(data) {\n    // get a new dataId\n    const dataId = this.#dataController.getNextDataId();\n    // add image to data controller\n    this.#dataController.add(\n      dataId,\n      data\n    );\n    // optional render\n    // if (this.#options.viewOnFirstLoadItem) {\n    //   this.render(dataId);\n    // }\n    // return\n    return dataId;\n  }\n\n  /**\n   * Get the meta data.\n   *\n   * @param {string} dataId The data id.\n   * @returns {Object<string, DataElement>|undefined} The list of meta data.\n   */\n  getMetaData(dataId) {\n    let res;\n    if (typeof this.#dataController.get(dataId) !== 'undefined') {\n      res = this.#dataController.get(dataId).meta;\n    }\n    return res;\n  }\n\n  /**\n   * Get the list of ids in the data storage.\n   *\n   * @returns {string[]} The list of data ids.\n   */\n  getDataIds() {\n    return this.#dataController.getDataIds();\n  }\n\n  /**\n   * Get the list of dataIds that contain the input UIDs.\n   *\n   * @param {string[]} uids A list of UIDs.\n   * @returns {string[]} The list of dataIds that contain the UIDs.\n   */\n  getDataIdsFromSopUids(uids) {\n    return this.#dataController.getDataIdsFromSopUids(uids);\n  }\n\n  /**\n   * Can the data (of the active view of the active layer) be scrolled?\n   *\n   * @returns {boolean} True if the data has a third dimension greater than one.\n   * @deprecated Since v0.33, please use the ViewController\n   *   equivalent directly instead.\n   */\n  canScroll() {\n    const viewLayer = this.#stage.getActiveLayerGroup().getActiveViewLayer();\n    const controller = viewLayer.getViewController();\n    return controller.canScroll();\n  }\n\n  /**\n   * Can window and level be applied to the data\n   * (of the active view of the active layer)?\n   *\n   * @returns {boolean} True if the data is monochrome.\n   * @deprecated Since v0.33, please use the ViewController\n   *   equivalent directly instead.\n   */\n  canWindowLevel() {\n    const viewLayer = this.#stage.getActiveLayerGroup().getActiveViewLayer();\n    const controller = viewLayer.getViewController();\n    return controller.canWindowLevel();\n  }\n\n  /**\n   * Get the active layer group scale on top of the base scale.\n   *\n   * @returns {Scalar3D} The scale as {x,y,z}.\n   */\n  getAddedScale() {\n    return this.#stage.getActiveLayerGroup().getAddedScale();\n  }\n\n  /**\n   * Get the base scale of the active layer group.\n   *\n   * @returns {Scalar3D} The scale as {x,y,z}.\n   */\n  getBaseScale() {\n    return this.#stage.getActiveLayerGroup().getBaseScale();\n  }\n\n  /**\n   * Get the layer offset of the active layer group.\n   *\n   * @returns {Scalar3D} The offset as {x,y,z}.\n   */\n  getOffset() {\n    return this.#stage.getActiveLayerGroup().getOffset();\n  }\n\n  /**\n   * Get the toolbox controller.\n   *\n   * @returns {ToolboxController} The controller.\n   */\n  getToolboxController() {\n    return this.#toolboxController;\n  }\n\n  /**\n   * Get the active layer group.\n   * The layer is available after the first loaded item.\n   *\n   * @returns {LayerGroup|undefined} The layer group.\n   */\n  getActiveLayerGroup() {\n    return this.#stage.getActiveLayerGroup();\n  }\n\n  /**\n   * Set the active layer group.\n   *\n   * @param {number} index The layer group index.\n   */\n  setActiveLayerGroup(index) {\n    this.#stage.setActiveLayerGroup(index);\n  }\n\n  /**\n   * Get the view layers associated to a data id.\n   * The layer are available after the first loaded item.\n   *\n   * @param {string} dataId The data id.\n   * @returns {ViewLayer[]} The layers.\n   */\n  getViewLayersByDataId(dataId) {\n    return this.#stage.getViewLayersByDataId(dataId);\n  }\n\n  /**\n   * Get a list of view layers according to an input callback function.\n   *\n   * @param {Function} [callbackFn] A function that takes\n   *   a ViewLayer as input and returns a boolean. If undefined,\n   *   returns all view layers.\n   * @returns {ViewLayer[]} The layers that\n   *   satisfy the callbackFn.\n   */\n  getViewLayers(callbackFn) {\n    return this.#stage.getViewLayers(callbackFn);\n  }\n\n  /**\n   * Get the draw layers associated to a data id.\n   * The layer are available after the first loaded item.\n   *\n   * @param {string} dataId The data id.\n   * @returns {DrawLayer[]} The layers.\n   */\n  getDrawLayersByDataId(dataId) {\n    return this.#stage.getDrawLayersByDataId(dataId);\n  }\n\n  /**\n   * Get a list of draw layers according to an input callback function.\n   *\n   * @param {Function} [callbackFn] A function that takes\n   *   a DrawLayer as input and returns a boolean. If undefined,\n   *   returns all draw layers.\n   * @returns {DrawLayer[]} The layers that\n   *   satisfy the callbackFn.\n   */\n  getDrawLayers(callbackFn) {\n    return this.#stage.getDrawLayers(callbackFn);\n  }\n\n  /**\n   * Get a layer group by div id.\n   * The layer is available after the first loaded item.\n   *\n   * @param {string} divId The div id.\n   * @returns {LayerGroup|undefined} The layer group.\n   */\n  getLayerGroupByDivId(divId) {\n    return this.#stage.getLayerGroupByDivId(divId);\n  }\n\n  /**\n   * Get the number of layer groups.\n   *\n   * @returns {number} The number of groups.\n   */\n  getNumberOfLayerGroups() {\n    return this.#stage.getNumberOfLayerGroups();\n  }\n\n  /**\n   * Get the app style.\n   *\n   * @returns {object} The app style.\n   */\n  getStyle() {\n    return this.#style;\n  }\n\n  /**\n   * Add a command to the undo stack.\n   *\n   * @param {object} cmd The command to add.\n   * @fires UndoStack#undoadd\n   * @function\n   */\n  addToUndoStack = (cmd) => {\n    if (this.#undoStack !== null) {\n      this.#undoStack.add(cmd);\n    }\n  };\n\n  /**\n   * Remove a command from the undo stack.\n   *\n   * @param {string} name The name of the command to remove.\n   * @returns {boolean} True if the command was found and removed.\n   * @fires UndoStack#undoremove\n   * @function\n   */\n  removeFromUndoStack = (name) => {\n    let res = false;\n    if (this.#undoStack !== null) {\n      res = this.#undoStack.remove(name);\n    }\n    return res;\n  };\n\n  /**\n   * Initialise the application.\n   *\n   * @param {AppOptions} opt The application options.\n   * @example\n   * // create the dwv app\n   * const app = new dwv.App();\n   * // initialise\n   * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\n   * const viewConfigs = {'*': [viewConfig0]};\n   * const options = new dwv.AppOptions(viewConfigs);\n   * options.viewOnFirstLoadItem = false;\n   * app.init(options);\n   * // render button\n   * const button = document.createElement('button');\n   * button.id = 'render';\n   * button.disabled = true;\n   * button.appendChild(document.createTextNode('render'));\n   * document.body.appendChild(button);\n   * app.addEventListener('load', function () {\n   *   const button = document.getElementById('render');\n   *   button.disabled = false;\n   *   button.onclick = function () {\n   *     // render data #0\n   *     app.render(0);\n   *   };\n   * });\n   * // load dicom data\n   * app.loadURLs([\n   *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\n   * ]);\n   */\n  init(opt) {\n    // store\n    this.#options = opt;\n    // defaults\n    if (typeof this.#options.viewOnFirstLoadItem === 'undefined') {\n      this.#options.viewOnFirstLoadItem = true;\n    }\n    if (typeof this.#options.dataViewConfigs === 'undefined') {\n      this.#options.dataViewConfigs = {};\n    }\n    if (typeof this.#options.rootDocument === 'undefined') {\n      this.#options.rootDocument = document;\n    }\n\n    // undo stack\n    this.#undoStack = new UndoStack();\n    this.#undoStack.addEventListener('undoadd', this.#fireEvent);\n    this.#undoStack.addEventListener('undo', this.#fireEvent);\n    this.#undoStack.addEventListener('redo', this.#fireEvent);\n\n    // tools\n    if (typeof this.#options.tools !== 'undefined') {\n      // setup the tool list\n      const appToolList = {};\n      const keys = Object.keys(this.#options.tools);\n      for (let t = 0; t < keys.length; ++t) {\n        const toolName = keys[t];\n        // find the tool in the default tool list\n        let toolClass = defaultToolList[toolName];\n        // or use external one\n        if (typeof toolClass === 'undefined') {\n          toolClass = toolList[toolName];\n        }\n        if (typeof toolClass !== 'undefined') {\n          // create tool instance\n          appToolList[toolName] = new toolClass(this);\n          // register listeners\n          if (typeof appToolList[toolName].addEventListener !== 'undefined') {\n            const names = appToolList[toolName].getEventNames();\n            for (let j = 0; j < names.length; ++j) {\n              appToolList[toolName].addEventListener(names[j], this.#fireEvent);\n            }\n          }\n          // tool options\n          const toolParams = this.#options.tools[toolName];\n          if (typeof toolParams.options !== 'undefined' &&\n            toolParams.options.length !== 0) {\n            let type = 'raw';\n            if (typeof appToolList[toolName].getOptionsType !== 'undefined') {\n              type = appToolList[toolName].getOptionsType();\n            }\n            let appToolOptions;\n            if (type === 'instance' || type === 'factory') {\n              appToolOptions = {};\n              for (let i = 0; i < toolParams.options.length; ++i) {\n                const optionName = toolParams.options[i];\n                let optionClassName = optionName;\n                if (type === 'factory') {\n                  optionClassName += 'Factory';\n                }\n                const toolNamespace = toolName.charAt(0).toLowerCase() +\n                  toolName.slice(1);\n                // find the option in the external tool list\n                let tOptions = toolOptions[toolNamespace];\n                let optionClass;\n                if (typeof tOptions !== 'undefined') {\n                  optionClass = tOptions[optionClassName];\n                }\n                // or use the default one\n                if (typeof optionClass === 'undefined') {\n                  tOptions = defaultToolOptions[toolNamespace];\n                  if (typeof tOptions !== 'undefined') {\n                    optionClass = tOptions[optionClassName];\n                  }\n                }\n                if (typeof optionClass !== 'undefined') {\n                  appToolOptions[optionName] = optionClass;\n                } else {\n                  logger.warn('Could not find option class for: ' +\n                    optionName);\n                }\n              }\n            } else {\n              appToolOptions = toolParams.options;\n            }\n            appToolList[toolName].setOptions(appToolOptions);\n          }\n        } else {\n          logger.warn('Could not initialise unknown tool: ' + toolName);\n        }\n      }\n      // add tools to the controller\n      this.#toolboxController = new ToolboxController(appToolList);\n    }\n\n    // create load controller\n    this.#loadController =\n      new LoadController(this.#options.defaultCharacterSet);\n    this.#loadController.onloadstart = this.#onloadstart;\n    this.#loadController.onprogress = this.#onloadprogress;\n    this.#loadController.onloaditem = this.#onloaditem;\n    this.#loadController.onload = this.#onload;\n    this.#loadController.onloadend = this.#onloadend;\n    this.#loadController.onerror = this.#onloaderror;\n    this.#loadController.ontimeout = this.#onloadtimeout;\n    this.#loadController.onabort = this.#onloadabort;\n\n    // create data controller\n    this.#dataController = new DataController();\n    // propagate data events\n    this.#dataController.addEventListener('dataadd', this.#fireEvent);\n    this.#dataController.addEventListener('dataremove', this.#fireEvent);\n    this.#dataController.addEventListener('dataimageset', this.#fireEvent);\n    this.#dataController.addEventListener('dataupdate', this.#fireEvent);\n    // propage individual data events\n    this.#dataController.addEventListener(\n      'imagecontentchange', this.#fireEvent);\n    this.#dataController.addEventListener(\n      'imagegeometrychange', this.#fireEvent);\n    this.#dataController.addEventListener('annotationadd', this.#fireEvent);\n    this.#dataController.addEventListener('annotationupdate', this.#fireEvent);\n    this.#dataController.addEventListener('annotationremove', this.#fireEvent);\n    this.#dataController.addEventListener(\n      'annotationgroupeditablechange', this.#fireEvent);\n    // create stage\n    this.#stage = new Stage();\n    if (typeof this.#options.binders !== 'undefined') {\n      this.#stage.setBinders(this.#options.binders);\n    }\n  }\n\n  /**\n   * Reset the application.\n   */\n  reset() {\n    // clear objects\n    this.#stage.empty();\n    this.#overlayDatas = {};\n    // reset undo/redo\n    if (this.#undoStack) {\n      this.#undoStack = new UndoStack();\n      this.#undoStack.addEventListener('undoadd', this.#fireEvent);\n      this.#undoStack.addEventListener('undo', this.#fireEvent);\n      this.#undoStack.addEventListener('redo', this.#fireEvent);\n    }\n  }\n\n  /**\n   * Reset the layout of the application.\n   */\n  resetLayout() {\n    this.#stage.reset();\n    this.#stage.draw();\n  }\n\n  /**\n   * Add an event listener to this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type, will be called with the fired event.\n   */\n  addEventListener(type, callback) {\n    this.#listenerHandler.add(type, callback);\n  }\n\n  /**\n   * Remove an event listener from this class.\n   *\n   * @param {string} type The event type.\n   * @param {Function} callback The function associated with the provided\n   *   event type.\n   */\n  removeEventListener(type, callback) {\n    this.#listenerHandler.remove(type, callback);\n  }\n\n  // load API [begin] -------------------------------------------------------\n\n  /**\n   * Load a list of files. Can be image files or a state file.\n   *\n   * @param {File[]} files The list of files to load.\n   * @returns {string} The data ID, '-1' if problem.\n   * @fires App#loadstart\n   * @fires App#loadprogress\n   * @fires App#loaditem\n   * @fires App#loadend\n   * @fires App#error\n   * @fires App#abort\n   * @function\n   */\n  loadFiles = (files) => {\n    if (files.length === 0) {\n      logger.warn('Ignoring empty input file list.');\n      return '-1';\n    }\n    const dataId = this.#dataController.getNextDataId();\n    this.#loadController.loadFiles(files, dataId);\n    return dataId;\n  };\n\n  /**\n   * Load a list of URLs. Can be image files or a state file.\n   *\n   * @param {string[]} urls The list of urls to load.\n   * @param {object} [options] The options object, can contain:\n   * - requestHeaders: an array of {name, value} to use as request headers,\n   * - withCredentials: boolean xhr.withCredentials flag to pass to the request,\n   * - batchSize: the size of the request url batch.\n   * @returns {string} The data ID, '-1' if problem.\n   * @fires App#loadstart\n   * @fires App#loadprogress\n   * @fires App#loaditem\n   * @fires App#loadend\n   * @fires App#error\n   * @fires App#abort\n   * @function\n   */\n  loadURLs = (urls, options) => {\n    if (urls.length === 0) {\n      logger.warn('Ignoring empty input url list.');\n      return '-1';\n    }\n    const dataId = this.#dataController.getNextDataId();\n    this.#loadController.loadURLs(urls, dataId, options);\n    return dataId;\n  };\n\n  /**\n   * Load from an input uri.\n   *\n   * @param {string} uri The input uri, for example: 'window.location.href'.\n   * @param {object} [options] Optional url request options.\n   * @function\n   */\n  loadFromUri = (uri, options) => {\n    const query = getUriQuery(uri);\n\n    // load end callback: loads the state.\n    const onLoadEnd = (/*event*/) => {\n      this.removeEventListener('loadend', onLoadEnd);\n      this.loadURLs([query.state]);\n    };\n\n    // check query\n    if (query && typeof query.input !== 'undefined') {\n      // optional display state\n      if (typeof query.state !== 'undefined') {\n        // queue after main data load\n        this.addEventListener('loadend', onLoadEnd);\n      }\n      // load base image\n      decodeQuery(query, this.loadURLs, options);\n    }\n    // no else to allow for empty uris\n  };\n\n  /**\n   * Load a list of ArrayBuffers.\n   *\n   * @param {Array} data The list of ArrayBuffers to load\n   *   in the form of [{name: \"\", filename: \"\", data: data}].\n   * @returns {string} The data ID.\n   * @fires App#loadstart\n   * @fires App#loadprogress\n   * @fires App#loaditem\n   * @fires App#loadend\n   * @fires App#error\n   * @fires App#abort\n   * @function\n   */\n  loadImageObject = (data) => {\n    const dataId = this.#dataController.getNextDataId();\n    this.#loadController.loadImageObject(data, dataId);\n    return dataId;\n  };\n\n  /**\n   * Abort all the current loads.\n   */\n  abortAllLoads() {\n    const ids = this.#loadController.getLoadingDataIds();\n    for (const id of ids) {\n      this.abortLoad(id);\n    }\n  }\n\n  /**\n   * Abort an individual data load.\n   *\n   * @param {string} dataId The data to stop loading.\n   */\n  abortLoad(dataId) {\n    // abort load\n    this.#loadController.abort(dataId);\n    // remove data\n    this.#dataController.remove(dataId);\n    // clean up stage\n    this.#stage.removeLayersByDataId(dataId);\n  }\n\n  // load API [end] ---------------------------------------------------------\n\n  /**\n   * Fit the display to the data of each layer group.\n   * To be called once the image is loaded.\n   */\n  fitToContainer() {\n    this.#stage.fitToContainer();\n  }\n\n  /**\n   * Init the Window/Level display\n   * (of the active layer of the active layer group).\n   *\n   * @deprecated Since v0.33, please set the opacity\n   *   of the desired view layer directly.\n   */\n  initWLDisplay() {\n    const viewLayer = this.#stage.getActiveLayerGroup().getActiveViewLayer();\n    const controller = viewLayer.getViewController();\n    controller.initialise();\n  }\n\n  /**\n   * Set the imageSmoothing flag value. Default is false.\n   *\n   * @param {boolean} flag True to enable smoothing.\n   */\n  setImageSmoothing(flag) {\n    this.#stage.setImageSmoothing(flag);\n    this.#stage.draw();\n  }\n\n  /**\n   * Get the layer group configuration from a data id.\n   *\n   * @param {string} dataId The data id.\n   * @param {boolean} [excludeStarConfig] Exclude the star config\n   *  (default to false).\n   * @returns {ViewConfig[]} The list of associated configs.\n   */\n  getViewConfigs(dataId, excludeStarConfig) {\n    if (typeof excludeStarConfig === 'undefined') {\n      excludeStarConfig = false;\n    }\n    // check options\n    if (this.#options.dataViewConfigs === null ||\n      typeof this.#options.dataViewConfigs === 'undefined') {\n      throw new Error('No available data view configuration');\n    }\n    let configs = [];\n    if (typeof this.#options.dataViewConfigs[dataId] !== 'undefined') {\n      configs = this.#options.dataViewConfigs[dataId];\n    } else if (!excludeStarConfig &&\n      typeof this.#options.dataViewConfigs['*'] !== 'undefined') {\n      configs = this.#options.dataViewConfigs['*'];\n    }\n    return configs;\n  }\n\n  /**\n   * Get the layer group configuration for a data id and group\n   * div id.\n   *\n   * @param {string} dataId The data id.\n   * @param {string} groupDivId The layer group div id.\n   * @param {boolean} [excludeStarConfig] Exclude the star config\n   *  (default to false).\n   * @returns {ViewConfig|undefined} The associated config.\n   */\n  getViewConfig(dataId, groupDivId, excludeStarConfig) {\n    const configs = this.getViewConfigs(dataId, excludeStarConfig);\n    return configs.find(function (item) {\n      return item.divId === groupDivId;\n    });\n  }\n\n  /**\n   * Get the data view config.\n   * Carefull, returns a reference, do not modify without resetting.\n   *\n   * @returns {Object<string, ViewConfig[]>} The configuration list.\n   */\n  getDataViewConfigs() {\n    return this.#options.dataViewConfigs;\n  }\n\n  /**\n   * Set the data view configuration.\n   * Resets the stage and recreates all the views.\n   *\n   * @param {Object<string, ViewConfig[]>} configs The configuration list.\n   */\n  setDataViewConfigs(configs) {\n    // clean up\n    this.#stage.empty();\n    // set new\n    this.#options.dataViewConfigs = configs;\n    // create layer groups\n    this.#createLayerGroups(configs);\n  }\n\n  /**\n   * Add a data view config.\n   *\n   * @param {string} dataId The data id.\n   * @param {ViewConfig} config The view configuration.\n   */\n  addDataViewConfig(dataId, config) {\n    // add to list\n    const configs = this.#options.dataViewConfigs;\n    if (typeof configs[dataId] === 'undefined') {\n      configs[dataId] = [];\n    }\n    const equalDivId = function (item) {\n      return item.divId === config.divId;\n    };\n    const itemIndex = configs[dataId].findIndex(equalDivId);\n    if (itemIndex === -1) {\n      this.#options.dataViewConfigs[dataId].push(config);\n    } else {\n      throw new Error('Duplicate view config for data ' + dataId +\n        ' and div ' + config.divId);\n    }\n\n    // add layer group if not done\n    if (typeof this.#stage.getLayerGroupByDivId(config.divId) === 'undefined') {\n      this.#createLayerGroup(config);\n    }\n\n    // render (will create layers)\n    if (typeof this.#dataController.get(dataId) !== 'undefined') {\n      this.render(dataId, [config]);\n    }\n  }\n\n  /**\n   * Remove a data view config.\n   * Removes the associated layer if found, removes\n   *   the layer group if empty.\n   *\n   * @param {string} dataId The data id.\n   * @param {string} divId The div id.\n   */\n  removeDataViewConfig(dataId, divId) {\n    // input checks\n    const configs = this.#options.dataViewConfigs;\n    if (typeof configs[dataId] === 'undefined') {\n      // no config for dataId\n      return;\n    }\n    const equalDivId = function (item) {\n      return item.divId === divId;\n    };\n    const itemIndex = configs[dataId].findIndex(equalDivId);\n    if (itemIndex === -1) {\n      // no config for divId\n      return;\n    }\n\n    // remove from config list\n    configs[dataId].splice(itemIndex, 1);\n    if (configs[dataId].length === 0) {\n      delete configs[dataId];\n    }\n\n    // update layer group\n    const layerGroup = this.#stage.getLayerGroupByDivId(divId);\n    if (typeof layerGroup !== 'undefined') {\n      // remove layer if possible\n      const vls = layerGroup.getViewLayersByDataId(dataId);\n      if (vls.length === 1) {\n        layerGroup.removeLayer(vls[0]);\n      }\n      const dls = layerGroup.getDrawLayersByDataId(dataId);\n      if (dls.length === 1) {\n        layerGroup.removeLayer(dls[0]);\n      }\n      // remove layer group if empty\n      if (layerGroup.getNumberOfLayers() === 0) {\n        this.#stage.removeLayerGroup(layerGroup);\n      }\n    }\n  }\n\n  /**\n   * Update an existing data view config.\n   * Removes and re-creates the layer if found.\n   *\n   * @param {string} dataId The data id.\n   * @param {string} divId The div id.\n   * @param {ViewConfig} config The view configuration.\n   */\n  updateDataViewConfig(dataId, divId, config) {\n    // input checks\n    const configs = this.#options.dataViewConfigs;\n    // check data id\n    if (typeof configs[dataId] === 'undefined') {\n      throw new Error('No config for dataId: ' + dataId);\n    }\n    // check div id\n    const equalDivId = function (item) {\n      return item.divId === divId;\n    };\n    const itemIndex = configs[dataId].findIndex(equalDivId);\n    if (itemIndex === -1) {\n      throw new Error('No config for dataId: ' +\n        dataId + ' and divId: ' + divId);\n    }\n\n    // update config\n    const configToUpdate = configs[dataId][itemIndex];\n    for (const prop in config) {\n      configToUpdate[prop] = config[prop];\n    }\n\n    // update layer group\n    const layerGroup = this.#stage.getLayerGroupByDivId(configToUpdate.divId);\n    if (typeof layerGroup !== 'undefined') {\n      // remove layer if possible\n      const vls = layerGroup.getViewLayersByDataId(dataId);\n      if (vls.length === 1) {\n        layerGroup.removeLayer(vls[0]);\n      }\n      const dls = layerGroup.getDrawLayersByDataId(dataId);\n      if (dls.length === 1) {\n        layerGroup.removeLayer(dls[0]);\n      }\n    }\n\n    // render (will create layer)\n    if (typeof this.#dataController.get(dataId) !== 'undefined') {\n      this.render(dataId, [configToUpdate]);\n    }\n  }\n\n  /**\n   * Create layer groups according to a data view config:\n   * adds them to stage and binds them.\n   *\n   * @param {DataViewConfigs} dataViewConfigs The data view config.\n   */\n  #createLayerGroups(dataViewConfigs) {\n    const dataKeys = Object.keys(dataViewConfigs);\n    const divIds = [];\n    for (let i = 0; i < dataKeys.length; ++i) {\n      const viewConfigs = dataViewConfigs[dataKeys[i]];\n      for (let j = 0; j < viewConfigs.length; ++j) {\n        const viewConfig = viewConfigs[j];\n        // view configs can contain the same divIds, avoid duplicating\n        if (!divIds.includes(viewConfig.divId)) {\n          this.#createLayerGroup(viewConfig);\n          divIds.push(viewConfig.divId);\n        }\n      }\n    }\n  }\n\n  /**\n   * Create a layer group according to a view config:\n   * adds it to stage and binds it.\n   *\n   * @param {ViewConfig} viewConfig The view config.\n   */\n  #createLayerGroup(viewConfig) {\n    // create new layer group\n    const element = this.#options.rootDocument.getElementById(viewConfig.divId);\n    const layerGroup = this.#stage.addLayerGroup(element);\n    // bind events\n    this.#bindLayerGroupToApp(layerGroup);\n  }\n\n  /**\n   * Set the layer groups binders.\n   *\n   * @param {string[]} list The list of binder names.\n   */\n  setLayerGroupsBinders(list) {\n    // create instances\n    const instances = [];\n    for (let i = 0; i < list.length; ++i) {\n      if (typeof binderList[list[i]] !== 'undefined') {\n        instances.push(new binderList[list[i]]);\n      }\n    }\n    // pass to stage\n    this.#stage.setBinders(instances);\n  }\n\n  /**\n   * Render the current data.\n   *\n   * @param {string} dataId The data id to render.\n   * @param {ViewConfig[]} [viewConfigs] The list of configs to render.\n   */\n  render(dataId, viewConfigs) {\n    if (typeof dataId === 'undefined' || dataId === null) {\n      throw new Error('Cannot render without data id');\n    }\n    // guess data type\n    const isImage =\n      typeof this.getData(dataId).image !== 'undefined';\n    const isMeasurement =\n      typeof this.getData(dataId).annotationGroup !== 'undefined';\n\n    // create layer groups if not done yet\n    // (create all to allow for ratio sync)\n    if (this.#stage.getNumberOfLayerGroups() === 0) {\n      this.#createLayerGroups(this.#options.dataViewConfigs);\n    }\n\n    // use options list if non provided\n    if (typeof viewConfigs === 'undefined') {\n      viewConfigs = this.getViewConfigs(dataId);\n    }\n\n    // nothing to do if no view config\n    if (viewConfigs.length === 0) {\n      logger.info('Not rendering data: ' + dataId +\n        ' (no data view config)');\n      return;\n    }\n\n    // loop on configs\n    for (let i = 0; i < viewConfigs.length; ++i) {\n      const config = viewConfigs[i];\n      const layerGroup =\n        this.#stage.getLayerGroupByDivId(config.divId);\n      // layer group must exist\n      if (!layerGroup) {\n        throw new Error('No layer group for ' + config.divId);\n      }\n      // create layer if needed\n      // warn: needs a loaded DOM\n      if (typeof this.#dataController.get(dataId) !== 'undefined') {\n        if (isImage &&\n          layerGroup.getViewLayersByDataId(dataId).length === 0\n        ) {\n          this.#addViewLayer(dataId, config);\n        } else if (isMeasurement &&\n          layerGroup.getDrawLayersByDataId(dataId).length === 0\n        ) {\n          this.addDrawLayer(dataId, config);\n        }\n      }\n      // draw\n      layerGroup.draw();\n    }\n  }\n\n  /**\n   * Zoom the layers of the active layer group.\n   *\n   * @param {number} step The step to add to the current zoom.\n   * @param {number} cx The zoom center X coordinate.\n   * @param {number} cy The zoom center Y coordinate.\n   */\n  zoom(step, cx, cy) {\n    const layerGroup = this.#stage.getActiveLayerGroup();\n    const viewController = layerGroup.getBaseViewLayer().getViewController();\n    const k = viewController.getCurrentScrollPosition();\n    const center = new Point3D(cx, cy, k);\n    layerGroup.addScale(step, center);\n    layerGroup.draw();\n  }\n\n  /**\n   * Apply a translation to the layers of the active layer group.\n   *\n   * @param {number} tx The translation along X.\n   * @param {number} ty The translation along Y.\n   */\n  translate(tx, ty) {\n    const layerGroup = this.#stage.getActiveLayerGroup();\n    layerGroup.addTranslation({x: tx, y: ty, z: 0});\n    layerGroup.draw();\n  }\n\n  /**\n   * Set the active view layer (of the active layer group) opacity.\n   *\n   * @param {number} alpha The opacity ([0:1] range).\n   * @deprecated Since v0.33, pplease set the opacity\n   *   of the desired view layer directly.\n   */\n  setOpacity(alpha) {\n    const viewLayer = this.#stage.getActiveLayerGroup().getActiveViewLayer();\n    viewLayer.setOpacity(alpha);\n    viewLayer.draw();\n  }\n\n  /**\n   * Set the drawings of the active layer group.\n   *\n   * @deprecated Since v0.34, please switch to DICOM SR annotations.\n   * @param {Array} drawings An array of drawings.\n   * @param {Array} drawingsDetails An array of drawings details.\n   * @param {string} dataId The converted data id.\n   */\n  setDrawings(drawings, drawingsDetails, dataId) {\n    const layerGroup = this.#stage.getActiveLayerGroup();\n    const viewLayer = layerGroup.getBaseViewLayer();\n    const refDataId = viewLayer.getDataId();\n    const viewController = viewLayer.getViewController();\n\n    // convert konva to annotation\n    const annotations = konvaToAnnotation(drawings, drawingsDetails);\n    // create data\n    const data = this.createAnnotationData(refDataId);\n    // add annotations to data\n    for (const annotation of annotations) {\n      annotation.setViewController(viewController);\n      data.annotationGroup.add(annotation);\n    }\n    // add to data controller\n    this.#dataController.add(dataId, data);\n    // render\n    this.render(dataId);\n  }\n\n  /**\n   * Apply a JSON state to this app.\n   *\n   * @deprecated Since v0.34, please switch to DICOM SR\n   *   for annotations.\n   * @param {string} jsonState The state of the app as a JSON string.\n   * @param {string} dataId The state data id.\n   */\n  applyJsonState(jsonState, dataId) {\n    const state = new State(dataId);\n    state.apply(this, state.fromJSON(jsonState));\n  }\n\n  // Handler Methods -----------------------------------------------------------\n\n  /**\n   * Handle resize: fit the display to the window.\n   * To be called once the image is loaded.\n   * Can be connected to a window 'resize' event.\n   *\n   * @function\n   */\n  onResize = () => {\n    this.fitToContainer();\n  };\n\n  /**\n   * Key down callback. Meant to be used in tools.\n   *\n   * @param {KeyboardEvent} event The key down event.\n   * @fires App#keydown\n   * @function\n   */\n  onKeydown = (event) => {\n    /**\n     * Key down event.\n     *\n     * @event App#keydown\n     * @type {KeyboardEvent}\n     * @property {string} type The event type: keydown.\n     * @property {string} context The tool where the event originated.\n     */\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Key down event handler example.\n   * - CRTL-Z: undo,\n   * - CRTL-Y: redo,\n   * - CRTL-ARROW_LEFT: next element on fourth dim,\n   * - CRTL-ARROW_UP: next element on third dim,\n   * - CRTL-ARROW_RIGHT: previous element on fourth dim,\n   * - CRTL-ARROW_DOWN: previous element on third dim.\n   *\n   * Applies to the active view of the active layer group.\n   *\n   * @param {KeyboardEvent} event The key down event.\n   * @fires UndoStack#undo\n   * @fires UndoStack#redo\n   * @function\n   */\n  defaultOnKeydown = (event) => {\n    if (event.ctrlKey) {\n      if (event.shiftKey) {\n        const layerGroup = this.#stage.getActiveLayerGroup();\n        const positionHelper = layerGroup.getPositionHelper();\n        if (event.key === 'ArrowLeft') { // crtl-shift-arrow-left\n          if (layerGroup.moreThanOne(3)) {\n            positionHelper.decrementPosition(3);\n          }\n        } else if (event.key === 'ArrowUp') { // crtl-shift-arrow-up\n          if (layerGroup.canScroll()) {\n            positionHelper.incrementPositionAlongScroll();\n          }\n        } else if (event.key === 'ArrowRight') { // crtl-shift-arrow-right\n          if (layerGroup.moreThanOne(3)) {\n            positionHelper.incrementPosition(3);\n          }\n        } else if (event.key === 'ArrowDown') { // crtl-shift-arrow-down\n          if (layerGroup.canScroll()) {\n            positionHelper.decrementPositionAlongScroll();\n          }\n        }\n      } else if (event.key === 'y') { // crtl-y\n        this.#undoStack.redo();\n      } else if (event.key === 'z') { // crtl-z\n        this.#undoStack.undo();\n      } else if (event.key === ' ') { // crtl-space\n        for (let i = 0; i < this.#stage.getNumberOfLayerGroups(); ++i) {\n          this.#stage.getLayerGroup(i).setShowCrosshair(\n            !this.#stage.getLayerGroup(i).getShowCrosshair()\n          );\n        }\n      }\n    }\n  };\n\n  // Internal members shortcuts-----------------------------------------------\n\n  /**\n   * Reset the display.\n   */\n  resetDisplay() {\n    this.resetLayout();\n    this.initWLDisplay();\n  }\n\n  /**\n   * Reset the app zoom.\n   */\n  resetZoom() {\n    this.resetLayout();\n  }\n\n  /**\n   * Set the colour map of the active view of the active layer group.\n   *\n   * @param {string} name The colour map name.\n   * @deprecated Since v0.33, please use the ViewController\n   *   equivalent directly instead.\n   */\n  setColourMap(name) {\n    const viewController =\n      this.#stage.getActiveLayerGroup()\n        .getActiveViewLayer().getViewController();\n    viewController.setColourMap(name);\n  }\n\n  /**\n   * Set the window/level preset of the active view of the active layer group.\n   *\n   * @param {string} preset The window/level preset.\n   * @deprecated Since v0.33, please use the ViewController\n   *   equivalent directly instead.\n   */\n  setWindowLevelPreset(preset) {\n    const viewController =\n      this.#stage.getActiveLayerGroup()\n        .getActiveViewLayer().getViewController();\n    viewController.setWindowLevelPreset(preset);\n  }\n\n  /**\n   * Set the tool.\n   *\n   * @param {string} tool The tool.\n   */\n  setTool(tool) {\n    // bind tool to active layer\n    for (let i = 0; i < this.#stage.getNumberOfLayerGroups(); ++i) {\n      const layerGroup = this.#stage.getLayerGroup(i);\n      const layer = layerGroup.getActiveLayer();\n      if (typeof layer !== 'undefined') {\n        this.#toolboxController.bindLayerGroup(layerGroup, layer);\n      }\n    }\n    // set toolbox tool\n    this.#toolboxController.setSelectedTool(tool);\n  }\n\n  /**\n   * Set the tool live features.\n   *\n   * @param {object} list The list of features.\n   */\n  setToolFeatures(list) {\n    this.#toolboxController.setToolFeatures(list);\n  }\n\n  /**\n   * Undo the last action.\n   *\n   * @fires UndoStack#undo\n   */\n  undo() {\n    this.#undoStack.undo();\n  }\n\n  /**\n   * Redo the last action.\n   *\n   * @fires UndoStack#redo\n   */\n  redo() {\n    this.#undoStack.redo();\n  }\n\n  /**\n   * Get the undo stack size.\n   *\n   * @returns {number} The size of the stack.\n   */\n  getStackSize() {\n    return this.#undoStack.getStackSize();\n  }\n\n  /**\n   * Get the current undo stack index.\n   *\n   * @returns {number} The stack index.\n   */\n  getCurrentStackIndex() {\n    return this.#undoStack.getCurrentStackIndex();\n  }\n\n  /**\n   * Get the overlay data for a data id.\n   *\n   * @param {string} dataId The data id.\n   * @returns {OverlayData|undefined} The overlay data.\n   */\n  getOverlayData(dataId) {\n    let data;\n    if (typeof this.#overlayDatas !== 'undefined') {\n      data = this.#overlayDatas[dataId];\n    }\n    return data;\n  }\n\n  /**\n   * Toggle overlay listeners.\n   *\n   * @param {string} dataId The data id.\n   */\n  toggleOverlayListeners(dataId) {\n    const data = this.getOverlayData(dataId);\n    if (typeof data !== 'undefined') {\n      if (data.isListening()) {\n        data.removeAppListeners();\n      } else {\n        data.addAppListeners();\n      }\n    }\n  }\n\n  /**\n   * Create new annotation data based on the data of\n   *   the active view layer.\n   *\n   * @param {string} refDataId The reference data id.\n   * @returns {DicomData} The new data.\n   */\n  createAnnotationData(refDataId) {\n    const refData = this.getData(refDataId);\n    const refMeta = refData.image.getMeta();\n\n    const data = new DicomData({});\n    data.annotationGroup = new AnnotationGroup();\n    data.annotationGroup.setMetaValue('Modality', 'SR');\n    data.annotationGroup.setMetaValue(\n      'PatientID', refMeta.PatientID);\n    data.annotationGroup.setMetaValue(\n      'StudyInstanceUID', refMeta.StudyInstanceUID);\n    data.annotationGroup.setMetaValue(\n      'ReferencedSeriesSequence', {\n        value: [{\n          SeriesInstanceUID: refMeta.SeriesInstanceUID\n        }]\n      });\n    return data;\n  }\n\n  /**\n   * Add new data and render it with a simple new data view config.\n   *\n   * @param {DicomData} data The data to add.\n   * @param {string} divId The div where to draw.\n   * @param {string} refDataId The reference data id.\n   */\n  addAndRenderAnnotationData(data, divId, refDataId) {\n    // add new data\n    const dataId = this.addData(data);\n    // add data view config based on reference data\n    const refDataViewConfigs = this.getViewConfigs(refDataId);\n    const refDataViewConfig = refDataViewConfigs.find(\n      element => element.divId === divId);\n    if (typeof refDataViewConfig === 'undefined') {\n      throw new Error('No reference data view config for draw');\n    }\n    const drawDataViewConfig = new ViewConfig(divId);\n    drawDataViewConfig.orientation = refDataViewConfig.orientation;\n    this.addDataViewConfig(dataId, drawDataViewConfig);\n    // render (will create draw layer)\n    this.render(dataId);\n  }\n\n  // Private Methods -----------------------------------------------------------\n\n  /**\n   * Fire an event: call all associated listeners with the input event object.\n   *\n   * @param {object} event The event to fire.\n   */\n  #fireEvent = (event) => {\n    this.#listenerHandler.fireEvent(event);\n  };\n\n  /**\n   * Data load start callback.\n   *\n   * @param {object} event The load start event.\n   */\n  #onloadstart = (event) => {\n    // create overlay data\n    if (typeof this.#options.overlayConfig !== 'undefined') {\n      this.#overlayDatas[event.dataid] = new OverlayData(\n        this, event.dataid, this.#options.overlayConfig);\n    }\n    /**\n     * Load start event.\n     *\n     * @event App#loadstart\n     * @type {object}\n     * @property {string} type The event type: loadstart.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     */\n    event.type = 'loadstart';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load progress callback.\n   *\n   * @param {object} event The progress event.\n   */\n  #onloadprogress = (event) => {\n    /**\n     * Load progress event.\n     *\n     * @event App#loadprogress\n     * @type {object}\n     * @property {string} type The event type: loadprogress.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     * @property {number} loaded The loaded percentage.\n     * @property {number} total The total percentage.\n     */\n    event.type = 'loadprogress';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load callback.\n   *\n   * @param {object} event The load event.\n   */\n  #onloaditem = (event) => {\n    // check event\n    if (typeof event.data === 'undefined') {\n      logger.error('Missing loaditem event data.');\n    }\n    if (typeof event.loadtype === 'undefined') {\n      logger.error('Missing loaditem event load type.');\n    }\n\n    let eventMetaData;\n    if (event.loadtype === 'image') {\n      eventMetaData = event.data.meta;\n    } else if (event.loadtype === 'state') {\n      eventMetaData = 'state';\n    }\n\n    /**\n     * Load item event: fired when an item has been successfully loaded.\n     *\n     * @event App#loaditem\n     * @type {object}\n     * @property {string} type The event type.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     * @property {object} data The loaded meta data.\n     */\n    this.#fireEvent({\n      type: 'loaditem',\n      data: eventMetaData,\n      source: event.source,\n      loadtype: event.loadtype,\n      dataid: event.dataid,\n      isfirstitem: event.isfirstitem,\n      warn: event.warn\n    });\n\n    const isFirstLoadItem = event.isfirstitem;\n\n    if (event.loadtype === 'image') {\n      if (isFirstLoadItem) {\n        this.#dataController.add(event.dataid, event.data);\n      } else {\n        this.#dataController.update(event.dataid, event.data);\n      }\n    } else if (event.loadtype === 'state') {\n      this.applyJsonState(event.data, event.dataid);\n    }\n\n    // update overlay data if present\n    if (typeof this.#overlayDatas !== 'undefined' &&\n      typeof this.#overlayDatas[event.dataid] !== 'undefined') {\n      this.#overlayDatas[event.dataid].addItemMeta(eventMetaData);\n    }\n\n    // render if first and flag allows\n    if (event.loadtype === 'image' &&\n      this.getViewConfigs(event.dataid).length !== 0 &&\n      isFirstLoadItem && this.#options.viewOnFirstLoadItem) {\n      this.render(event.dataid);\n    }\n  };\n\n  /**\n   * Data load callback.\n   *\n   * @param {object} event The load event.\n   */\n  #onload = (event) => {\n    /**\n     * Load event: fired when a load finishes successfully.\n     *\n     * @event App#load\n     * @type {object}\n     * @property {string} type The event type: load.\n     * @property {string} loadType The load type: image or state.\n     */\n    event.type = 'load';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load end callback.\n   *\n   * @param {object} event The load end event.\n   */\n  #onloadend = (event) => {\n    /**\n     * Main load end event: fired when the load finishes,\n     *   successfully or not.\n     *\n     * @event App#loadend\n     * @type {object}\n     * @property {string} type The event type: loadend.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     */\n    event.type = 'loadend';\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load error callback.\n   *\n   * @param {object} event The error event.\n   */\n  #onloaderror = (event) => {\n    /**\n     * Load error event.\n     *\n     * @event App#error\n     * @type {object}\n     * @property {string} type The event type: error.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     * @property {object} error The error.\n     * @property {object} target The event target.\n     */\n    if (typeof event.type === 'undefined') {\n      event.type = 'error';\n    }\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load timeout callback.\n   *\n   * @param {object} event The timeout event.\n   */\n  #onloadtimeout = (event) => {\n    /**\n     * Load timeout event.\n     *\n     * @event App#timeout\n     * @type {object}\n     * @property {string} type The event type: timeout.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: an url as a string.\n     * @property {object} target The event target.\n     */\n    if (typeof event.type === 'undefined') {\n      event.type = 'timeout';\n    }\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Data load abort callback.\n   *\n   * @param {object} event The abort event.\n   */\n  #onloadabort = (event) => {\n    /**\n     * Load abort event.\n     *\n     * @event App#abort\n     * @type {object}\n     * @property {string} type The event type: abort.\n     * @property {string} loadType The load type: image or state.\n     * @property {*} source The load source: string for an url,\n     *   File for a file.\n     */\n    if (typeof event.type === 'undefined') {\n      event.type = 'abort';\n    }\n    this.#fireEvent(event);\n  };\n\n  /**\n   * Bind layer group events to app.\n   *\n   * @param {LayerGroup} group The layer group.\n   */\n  #bindLayerGroupToApp(group) {\n    // propagate layer group events\n    group.addEventListener('zoomchange', this.#fireEvent);\n    group.addEventListener('offsetchange', this.#fireEvent);\n    group.addEventListener('layerremove', this.#fireEvent);\n    // propagate viewLayer events\n    group.addEventListener('renderstart', this.#fireEvent);\n    group.addEventListener('renderend', this.#fireEvent);\n    // propagate view events\n    for (let j = 0; j < viewEventNames.length; ++j) {\n      group.addEventListener(viewEventNames[j], this.#fireEvent);\n    }\n    // updata data view config\n    group.addEventListener('wlchange', (event) => {\n      const layerDetails = getLayerDetailsFromLayerDivId(event.srclayerid);\n      const groupId = layerDetails.groupDivId;\n      const config = this.getViewConfig(event.dataid, groupId, true);\n      if (typeof config !== 'undefined') {\n        // reset previous values\n        config.windowCenter = undefined;\n        config.windowWidth = undefined;\n        config.wlPresetName = undefined;\n        // window width, center and name\n        if (event.value.length === 3) {\n          config.windowCenter = event.value[0];\n          config.windowWidth = event.value[1];\n          config.wlPresetName = event.value[2];\n        }\n      }\n    });\n    group.addEventListener('opacitychange', (event) => {\n      const layerDetails = getLayerDetailsFromLayerDivId(event.srclayerid);\n      const groupId = layerDetails.groupDivId;\n      const config = this.getViewConfig(event.dataid, groupId, true);\n      if (typeof config !== 'undefined') {\n        config.opacity = event.value[0];\n      }\n    });\n    group.addEventListener('colourmapchange', (event) => {\n      const layerDetails = getLayerDetailsFromLayerDivId(event.srclayerid);\n      const groupId = layerDetails.groupDivId;\n      const config = this.getViewConfig(event.dataid, groupId, true);\n      if (typeof config !== 'undefined') {\n        config.colourMap = event.value[0];\n      }\n    });\n  }\n\n  /**\n   * Add a view layer.\n   *\n   * @param {string} dataId The data id.\n   * @param {ViewConfig} viewConfig The data view config.\n   */\n  #addViewLayer(dataId, viewConfig) {\n    const data = this.#dataController.get(dataId);\n    if (!data) {\n      throw new Error('Cannot initialise layer with missing data, id: ' +\n        dataId);\n    }\n    const layerGroup = this.#stage.getLayerGroupByDivId(viewConfig.divId);\n    if (!layerGroup) {\n      throw new Error('Cannot initialise layer with missing group, id: ' +\n        viewConfig.divId);\n    }\n    const imageGeometry = data.image.getGeometry();\n\n    // un-bind\n    this.#stage.unbindLayerGroups();\n\n    // create and setup view\n    const viewFactory = new ViewFactory();\n    const view = viewFactory.create(data.meta, data.image);\n    const viewOrientation = getViewOrientation(\n      imageGeometry.getOrientation(),\n      getMatrixFromName(viewConfig.orientation)\n    );\n    view.setOrientation(viewOrientation);\n\n    // make pixel of value 0 transparent for segmentation\n    // (assuming RGB data)\n    if (data.image.getMeta().Modality === 'SEG') {\n      view.setAlphaFunction(function (value /*, index*/) {\n        if (value === 0) {\n          return 0;\n        } else {\n          return 0xff;\n        }\n      });\n    }\n\n    // do we have more than one layer\n    // (the layer has not been added to the layer group yet)\n    const isBaseLayer = layerGroup.getNumberOfViewLayers() === 0;\n\n    // opacity\n    let opacity = 1;\n    if (typeof viewConfig.opacity !== 'undefined') {\n      opacity = viewConfig.opacity;\n    } else {\n      if (!isBaseLayer) {\n        opacity = 0.5;\n      }\n    }\n\n    // view layer\n    const viewLayer = layerGroup.addViewLayer();\n    viewLayer.setView(view, dataId);\n    const size2D = imageGeometry.getSize(viewOrientation).get2D();\n    const spacing2D = imageGeometry.getSpacing(viewOrientation).get2D();\n    viewLayer.initialise(size2D, spacing2D, opacity);\n\n    // view controller\n    const viewController = viewLayer.getViewController();\n    // window/level\n    if (typeof viewConfig.wlPresetName !== 'undefined') {\n      viewController.setWindowLevelPreset(viewConfig.wlPresetName);\n    } else if (typeof viewConfig.windowCenter !== 'undefined' &&\n      typeof viewConfig.windowWidth !== 'undefined') {\n      const wl = new WindowLevel(\n        viewConfig.windowCenter, viewConfig.windowWidth);\n      viewController.setWindowLevel(wl);\n    }\n    // colour map\n    if (typeof viewConfig.colourMap !== 'undefined') {\n      viewController.setColourMap(viewConfig.colourMap);\n    } else {\n      if (!isBaseLayer) {\n        if (data.image.getMeta().Modality === 'PT') {\n          viewController.setColourMap('hot');\n        } else {\n          viewController.setColourMap('rainbow');\n        }\n      }\n    }\n\n    // listen to image set\n    this.#dataController.addEventListener(\n      'dataimageset', viewLayer.onimageset);\n\n    // sync layers position\n    const value = [\n      viewController.getCurrentIndex().getValues(),\n      viewController.getCurrentPosition().getValues()\n    ];\n    layerGroup.updateLayersToPositionChange({\n      value: value,\n      srclayerid: viewLayer.getId()\n    });\n\n    // sync layer groups\n    this.#stage.fitToContainer();\n\n    // layer offset (done before scale)\n    viewLayer.setOffset(layerGroup.getOffset());\n\n    // get and apply flip flags\n    const flipFlags = this.#getViewFlipFlags(\n      imageGeometry.getOrientation(),\n      viewConfig.orientation);\n    this.#applyFlipFlags(flipFlags, viewLayer);\n\n    // layer scale (done after possible flip)\n    if (!isBaseLayer) {\n      // use zoom offset of base layer\n      const baseViewLayer = layerGroup.getBaseViewLayer();\n      viewLayer.initScale(\n        layerGroup.getScale(),\n        baseViewLayer.getAbsoluteZoomOffset()\n      );\n    } else {\n      viewLayer.setScale(layerGroup.getScale());\n    }\n\n    // bind\n    this.#stage.bindLayerGroups();\n    if (this.#toolboxController) {\n      this.#toolboxController.bindLayerGroup(layerGroup, viewLayer);\n    }\n\n    /**\n     * Add view layer event.\n     *\n     * @event App#viewlayeradd\n     * @type {object}\n     * @property {string} type The event type.\n     * @property {string} layerid The layer id.\n     * @property {string} layergroupid The layer group id.\n     * @property {string} dataid The data id.\n     */\n    this.#fireEvent({\n      type: 'viewlayeradd',\n      layerid: viewLayer.getId(),\n      layergroupid: layerGroup.getDivId(),\n      dataid: dataId\n    });\n\n    // initialise the toolbox for base\n    if (isBaseLayer) {\n      if (this.#toolboxController) {\n        this.#toolboxController.init();\n      }\n    }\n  }\n\n  /**\n   * Add a draw layer.\n   *\n   * @param {string} dataId The data id.\n   * @param {ViewConfig} viewConfig The data view config.\n   */\n  addDrawLayer(dataId, viewConfig) {\n    const layerGroup = this.#stage.getLayerGroupByDivId(viewConfig.divId);\n    if (!layerGroup) {\n      throw new Error('Cannot initialise layer with missing group, id: ' +\n        viewConfig.divId);\n    }\n\n    // reference is the data of the view layer with the\n    //   same StudyInstanceUID\n    const data = this.#dataController.get(dataId);\n    if (!data) {\n      throw new Error('Cannot initialise layer with missing data, id: ' +\n        dataId);\n    }\n    const refSeriesSeq =\n      data.annotationGroup.getMetaValue('ReferencedSeriesSequence');\n    const refSeriesInstanceUID = refSeriesSeq.value[0].SeriesInstanceUID;\n    const viewLayers = layerGroup.searchViewLayers({\n      SeriesInstanceUID: refSeriesInstanceUID\n    });\n    if (viewLayers.length === 0) {\n      console.warn(\n        'No loaded data that matches the measurement reference series UID');\n      return;\n    }\n    const refViewLayer = viewLayers[0];\n    const refDataId = refViewLayer.getDataId();\n\n    // un-bind\n    this.#stage.unbindLayerGroups();\n\n    // set annotation view controller (allows quantification)\n    const refViewController = refViewLayer.getViewController();\n    data.annotationGroup.setViewController(refViewController);\n\n    // reference data to use as base for layer properties\n    const refData = this.#dataController.get(refDataId);\n    if (!refData) {\n      throw new Error(\n        'Cannot initialise layer without reference data, id: ' +\n        refDataId);\n    }\n    const imageGeometry = refData.image.getGeometry();\n\n    const viewOrientation = getViewOrientation(\n      imageGeometry.getOrientation(),\n      getMatrixFromName(viewConfig.orientation)\n    );\n    const size2D = imageGeometry.getSize(viewOrientation).get2D();\n    const spacing2D = imageGeometry.getSpacing(viewOrientation).get2D();\n\n    const drawLayer = layerGroup.addDrawLayer();\n    drawLayer.initialise(size2D, spacing2D, refViewLayer.getId());\n\n    const planeHelper = new PlaneHelper(\n      imageGeometry,\n      viewOrientation\n    );\n    drawLayer.setPlaneHelper(planeHelper);\n\n    // sync layers position\n    const value = [\n      refViewController.getCurrentIndex().getValues(),\n      refViewController.getCurrentPosition().getValues()\n    ];\n    layerGroup.updateLayersToPositionChange({\n      value: value,\n      srclayerid: drawLayer.getId()\n    });\n\n    // sync layer groups\n    this.#stage.fitToContainer();\n\n    // layer offset (done before scale)\n    drawLayer.setOffset(layerGroup.getOffset());\n\n    // get and apply flip flags\n    const flipFlags = this.#getViewFlipFlags(\n      imageGeometry.getOrientation(),\n      viewConfig.orientation);\n    this.#applyFlipFlags(flipFlags, drawLayer);\n\n    // layer scale (done after possible flip)\n    // use zoom offset of ref layer\n    drawLayer.initScale(\n      layerGroup.getScale(),\n      refViewLayer.getAbsoluteZoomOffset()\n    );\n\n    // add possible existing data\n    drawLayer.setAnnotationGroup(\n      data.annotationGroup,\n      dataId,\n      this.addToUndoStack);\n\n    drawLayer.setCurrentPosition(\n      refViewController.getCurrentPosition(),\n      refViewController.getCurrentIndex()\n    );\n\n    // bind\n    this.#stage.bindLayerGroups();\n    if (this.#toolboxController) {\n      this.#toolboxController.bindLayerGroup(layerGroup, drawLayer);\n    }\n\n    /**\n     * Add draw layer event.\n     *\n     * @event App#drawlayeradd\n     * @type {object}\n     * @property {string} type The event type.\n     * @property {string} layerid The layer id.\n     * @property {string} layergroupid The layer group id.\n     * @property {string} dataid The data id.\n     */\n    this.#fireEvent({\n      type: 'drawlayeradd',\n      layerid: drawLayer.getId(),\n      layergroupid: layerGroup.getDivId(),\n      dataid: dataId\n    });\n  }\n\n  /**\n   * Get the view flip flags: offset (x, y) and scale (x, y, z) flags.\n   *\n   * @param {Matrix33} imageOrientation The image orientation.\n   * @param {string} viewConfigOrientation The view config orientation.\n   * @returns {object} Offset and scale flip flags.\n   */\n  #getViewFlipFlags(imageOrientation, viewConfigOrientation) {\n    // 'simple' orientation code (does not take into account angles)\n    const orientationCode =\n      getOrientationStringLPS(imageOrientation.asOneAndZeros());\n    if (typeof orientationCode === 'undefined') {\n      throw new Error('Unsupported undefined orientation code');\n    }\n\n    // view orientation flags\n    const isViewUndefined = typeof viewConfigOrientation === 'undefined';\n    const isViewAxial = !isViewUndefined &&\n      viewConfigOrientation === Orientation.Axial;\n    const isViewCoronal = !isViewUndefined &&\n      viewConfigOrientation === Orientation.Coronal;\n    const isViewSagittal = !isViewUndefined &&\n      viewConfigOrientation === Orientation.Sagittal;\n\n    // default flags\n    const flipOffset = {\n      x: false,\n      y: false\n    };\n    const flipScale = {\n      x: false,\n      y: false,\n      z: false\n    };\n\n    if (orientationCode === 'LPS') {\n      // axial\n      if (isViewCoronal || isViewSagittal) {\n        flipScale.z = true;\n        flipOffset.y = true;\n      }\n    } else if (orientationCode === 'LAI') {\n      // axial\n      if (isViewUndefined || isViewAxial) {\n        flipOffset.y = true;\n      } else if (isViewCoronal) {\n        flipScale.z = true;\n      } else if (isViewSagittal) {\n        flipScale.z = true;\n        flipOffset.x = true;\n      }\n    } else if (orientationCode === 'RPI') {\n      // axial\n      if (isViewUndefined || isViewAxial) {\n        flipOffset.x = true;\n      } else if (isViewCoronal) {\n        flipScale.z = true;\n        flipOffset.x = true;\n      } else if (isViewSagittal) {\n        flipScale.z = true;\n      }\n    } else if (orientationCode === 'RAS') {\n      // axial\n      flipOffset.x = true;\n      flipOffset.y = true;\n      if (isViewCoronal || isViewSagittal) {\n        flipScale.z = true;\n      }\n    } else if (orientationCode === 'LSA') {\n      // coronal\n      flipOffset.y = true;\n      if (isViewUndefined || isViewCoronal) {\n        flipScale.z = true;\n      } else if (isViewAxial) {\n        flipScale.y = true;\n      } else if (isViewSagittal) {\n        flipOffset.x = true;\n        flipScale.y = true;\n        flipScale.z = true;\n      }\n    // } else if (orientationCode === 'LIP') { // nothing to do\n    } else if (orientationCode === 'RSP') {\n      // coronal\n      if (isViewUndefined || isViewCoronal) {\n        flipOffset.x = true;\n        flipOffset.y = true;\n        flipScale.x = true;\n        flipScale.z = true;\n      } else if (isViewAxial) {\n        flipOffset.x = true;\n        flipScale.x = true;\n      } else if (isViewSagittal) {\n        flipOffset.y = true;\n        flipScale.z = true;\n      }\n    } else if (orientationCode === 'RIA') {\n      // coronal\n      flipOffset.x = true;\n      if (isViewUndefined || isViewCoronal) {\n        flipScale.x = true;\n      } else if (isViewAxial) {\n        flipOffset.y = true;\n        flipScale.x = true;\n        flipScale.y = true;\n      } else if (isViewSagittal) {\n        flipScale.y = true;\n      }\n    } else if (orientationCode === 'PSL') {\n      // sagittal\n      flipScale.z = true;\n      if (isViewUndefined || isViewSagittal) {\n        flipOffset.y = true;\n      } else if (isViewCoronal) {\n        flipOffset.y = true;\n      }\n    } else if (orientationCode === 'PIR') {\n      // sagittal\n      flipScale.z = true;\n      if (isViewAxial || isViewCoronal) {\n        flipOffset.x = true;\n      }\n    } else if (orientationCode === 'ASR') {\n      // sagittal\n      flipOffset.x = true;\n      flipOffset.y = true;\n      if (isViewUndefined || isViewSagittal) {\n        flipScale.z = true;\n      } else if (isViewCoronal) {\n        flipScale.z = true;\n      }\n    } else if (orientationCode === 'AIL') {\n      // sagittal\n      if (isViewUndefined || isViewSagittal) {\n        flipOffset.x = true;\n        flipScale.z = true;\n      } else if (isViewAxial) {\n        flipOffset.y = true;\n      } else if (isViewCoronal) {\n        flipScale.z = true;\n      }\n    } else {\n      // LIP uses default scale and offset\n      if (orientationCode !== 'LIP') {\n        logger.warn('Unsupported orientation code: ' +\n          orientationCode + ', display could be incorrect');\n      }\n    }\n\n    return {\n      scale: flipScale,\n      offset: flipOffset\n    };\n  }\n\n  #applyFlipFlags(flipFlags, layer) {\n    if (flipFlags.offset.x) {\n      layer.addFlipOffsetX();\n    }\n    if (flipFlags.offset.y) {\n      layer.addFlipOffsetY();\n    }\n    if (flipFlags.scale.x) {\n      layer.flipScaleX();\n    }\n    if (flipFlags.scale.y) {\n      layer.flipScaleY();\n    }\n    if (flipFlags.scale.z) {\n      layer.flipScaleZ();\n    }\n  }\n\n} // class App\n","import {logger} from '../utils/logger';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\nimport {MaskSegment} from '../dicom/dicomSegment';\n/* eslint-enable no-unused-vars */\n\n/**\n * Mask segment helper: helps handling the segments list,\n *   but does *NOT* update the associated mask (use special commands\n *   for that such as DeleteSegmentCommand, ChangeSegmentColourCommand...).\n */\nexport class MaskSegmentHelper {\n\n  /**\n   * The associated mask.\n   *\n   * @type {Image}\n   */\n  #mask;\n\n  /**\n   * The segments: array of segment description.\n   *\n   * @type {MaskSegment[]}\n   */\n  #segments;\n\n  /**\n   * @param {Image} mask The associated mask image.\n   */\n  constructor(mask) {\n    this.#mask = mask;\n    // check segments in meta\n    const meta = mask.getMeta();\n    if (typeof meta.custom === 'undefined') {\n      meta.custom = {};\n    }\n    if (typeof meta.custom.segments === 'undefined') {\n      meta.custom.segments = [];\n    }\n    this.#segments = meta.custom.segments;\n  }\n\n  /**\n   * Find the index of a segment in the segments list.\n   *\n   * @param {number} segmentNumber The number to find.\n   * @returns {number} The index in the segments list, -1 if not found.\n   */\n  #findSegmentIndex(segmentNumber) {\n    return this.#segments.findIndex(function (item) {\n      return item.number === segmentNumber;\n    });\n  }\n\n  /**\n   * Check if a segment is part of the segments list.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @returns {boolean} True if the segment is included.\n   */\n  hasSegment(segmentNumber) {\n    return this.#findSegmentIndex(segmentNumber) !== -1;\n  }\n\n  /**\n   * Get the number of segments of the segmentation.\n   *\n   * @returns {number} The number of segments.\n   */\n  getNumberOfSegments() {\n    return this.#segments.length;\n  }\n\n  /**\n   * Check if a segment is present in a mask image.\n   *\n   * @param {number[]} numbers Array of segment numbers.\n   * @returns {boolean[]} Array of boolean set to true\n   *   if the segment is present in the mask.\n   */\n  maskHasSegments(numbers) {\n    // create values using displayValue\n    const values = [];\n    const unknowns = [];\n    for (let i = 0; i < numbers.length; ++i) {\n      const segment = this.getSegment(numbers[i]);\n      if (typeof segment !== 'undefined') {\n        if (typeof segment.displayValue !== 'undefined') {\n          values.push(segment.displayValue);\n        } else {\n          values.push(segment.number);\n        }\n      } else {\n        logger.warn('Unknown segment in maskHasSegments: ' + numbers[i]);\n        unknowns.push(i);\n      }\n    }\n    const res = this.#mask.hasValues(values);\n    // insert unknowns as false in result\n    for (let j = 0; j < unknowns.length; ++j) {\n      res.splice(unknowns[j], 0, false);\n    }\n    return res;\n  }\n\n  /**\n   * Get a segment from the inner segment list.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @returns {MaskSegment|undefined} The segment or undefined if not found.\n   */\n  getSegment(segmentNumber) {\n    let segment;\n    const index = this.#findSegmentIndex(segmentNumber);\n    if (index !== -1) {\n      segment = this.#segments[index];\n    }\n    return segment;\n  }\n\n  /**\n   * Add a segment to the segments list.\n   *\n   * @param {MaskSegment} segment The segment to add.\n   */\n  addSegment(segment) {\n    const index = this.#findSegmentIndex(segment.number);\n    if (index === -1) {\n      this.#segments.push(segment);\n      // update palette colour map\n      if (typeof segment.displayRGBValue !== 'undefined') {\n        this.#mask.updatePaletteColourMap(\n          segment.number, segment.displayRGBValue);\n      }\n    } else {\n      logger.warn(\n        'Not adding segment, it is allready in the segments list: ' +\n          segment.number);\n    }\n  }\n\n  /**\n   * Remove a segment from the segments list.\n   *\n   * @param {number} segmentNumber The segment number.\n   */\n  removeSegment(segmentNumber) {\n    const index = this.#findSegmentIndex(segmentNumber);\n    if (index !== -1) {\n      this.#segments.splice(index, 1);\n    } else {\n      logger.warn(\n        'Cannot remove segment, it is not in the segments list: ' +\n          segmentNumber);\n    }\n  }\n\n  /**\n   * Update a segment of the segments list.\n   *\n   * @param {MaskSegment} segment The segment to update.\n   */\n  updateSegment(segment) {\n    const index = this.#findSegmentIndex(segment.number);\n    if (index !== -1) {\n      this.#segments[index] = segment;\n    } else {\n      logger.warn(\n        'Cannot update segment, it is not in the segments list: ' +\n          segment.number);\n    }\n  }\n\n} // class MaskSegmentHelper\n","import {MaskSegmentHelper} from './maskSegmentHelper';\n\n// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\nimport {MaskSegment} from '../dicom/dicomSegment';\n/* eslint-enable no-unused-vars */\n\n/**\n * Delete segment command.\n */\nexport class DeleteSegmentCommand {\n\n  /**\n   * The associated mask.\n   *\n   * @type {Image}\n   */\n  #mask;\n\n  /**\n   * The segment to remove.\n   *\n   * @type {MaskSegment}\n   */\n  #segment;\n\n  /**\n   * Flag to send creation events.\n   *\n   * @type {boolean}\n   */\n  #isSilent;\n\n  /**\n   * List of offsets.\n   *\n   * @type {number[]}\n   */\n  #offsets;\n\n  /**\n   * @param {Image} mask The mask image.\n   * @param {MaskSegment} segment The segment to remove.\n   * @param {boolean} [silent] Whether to send a creation event or not.\n   */\n  constructor(mask, segment, silent) {\n    this.#mask = mask;\n    this.#segment = segment;\n    this.#isSilent = (typeof silent === 'undefined') ? false : silent;\n    // list of offsets with the colour to delete\n    if (typeof segment.displayRGBValue !== 'undefined') {\n      this.#offsets = mask.getOffsets(segment.number);\n    } else {\n      this.#offsets = mask.getOffsets(segment.displayValue);\n    }\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Delete-segment';\n  }\n\n  /**\n   * Check if a command is valid and can be executed.\n   *\n   * @returns {boolean} True if the command is valid.\n   */\n  isValid() {\n    // check that input segment is still there\n    const segments = this.#mask.getMeta().custom.segments;\n    return segments.some(segmentItem =>\n      segmentItem.number === this.#segment.number\n    );\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires DeleteSegmentCommand#masksegmentdelete\n   */\n  execute() {\n    if (this.#offsets.length !== 0) {\n      // remove from image\n      this.#mask.setAtOffsets(this.#offsets, 0);\n    }\n\n    // remove from segments\n    const segHelper = new MaskSegmentHelper(this.#mask);\n    segHelper.removeSegment(this.#segment.number);\n\n    // callback\n    if (!this.#isSilent) {\n      /**\n       * Segment delete event.\n       *\n       * @event DeleteSegmentCommand#masksegmentdelete\n       * @type {object}\n       * @property {number} segmentnumber The segment number.\n       */\n      this.onExecute({\n        type: 'masksegmentdelete',\n        segmentnumber: this.#segment.number\n      });\n    }\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires DeleteSegmentCommand#masksegmentredraw\n   */\n  undo() {\n    if (this.#offsets.length !== 0) {\n      // re-draw in image\n      if (typeof this.#segment.displayRGBValue !== 'undefined') {\n        this.#mask.setAtOffsets(this.#offsets, this.#segment.number);\n      } else {\n        this.#mask.setAtOffsets(this.#offsets, this.#segment.displayValue);\n      }\n    }\n    // add back to segments\n    const segHelper = new MaskSegmentHelper(this.#mask);\n    segHelper.addSegment(this.#segment);\n\n    // callback\n    /**\n     * Segment redraw event.\n     *\n     * @event DeleteSegmentCommand#masksegmentredraw\n     * @type {object}\n     * @property {number} segmentnumber The segment number.\n     */\n    this.onUndo({\n      type: 'masksegmentredraw',\n      segmentnumber: this.#segment.number\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // DeleteSegmentCommand class\n","// doc imports\n/* eslint-disable no-unused-vars */\nimport {Image} from './image';\nimport {MaskSegment} from '../dicom/dicomSegment';\nimport {RGB} from '../utils/colour';\n/* eslint-enable no-unused-vars */\n\n/**\n * Change segment colour command.\n */\nexport class ChangeSegmentColourCommand {\n\n  /**\n   * The associated mask.\n   *\n   * @type {Image}\n   */\n  #mask;\n\n  /**\n   * The segment to modify.\n   *\n   * @type {MaskSegment}\n   */\n  #segment;\n\n  /**\n   * The new segment colour.\n   *\n   * @type {RGB|number}\n   */\n  #newColour;\n\n  /**\n   * The previous segment colour.\n   *\n   * @type {RGB|number}\n   */\n  #previousColour;\n\n  /**\n   * Flag to send creation events.\n   *\n   * @type {boolean}\n   */\n  #isSilent;\n\n  /**\n   * List of offsets.\n   *\n   * @type {number[]}\n   */\n  #offsets;\n\n  /**\n   * @param {Image} mask The mask image.\n   * @param {MaskSegment} segment The segment to modify.\n   * @param {RGB|number} newColour The new segment colour.\n   * @param {boolean} [silent] Whether to send a creation event or not.\n   */\n  constructor(mask, segment, newColour, silent) {\n    this.#mask = mask;\n    this.#segment = segment;\n    this.#newColour = newColour;\n\n    this.#isSilent = (typeof silent === 'undefined') ? false : silent;\n    // list of offsets with the colour to delete\n    if (typeof segment.displayRGBValue !== 'undefined') {\n      this.#previousColour = segment.displayRGBValue;\n    } else {\n      this.#previousColour = segment.displayValue;\n      this.#offsets = mask.getOffsets(this.#previousColour);\n    }\n  }\n\n  /**\n   * Get the command name.\n   *\n   * @returns {string} The command name.\n   */\n  getName() {\n    return 'Change-segment-colour';\n  }\n\n  /**\n   * Check if a command is valid and can be executed.\n   *\n   * @returns {boolean} True if the command is valid.\n   */\n  isValid() {\n    let valid = true;\n    if (typeof this.#offsets !== 'undefined') {\n      valid = this.#offsets.length !== 0;\n    }\n    return valid;\n  }\n\n  /**\n   * Execute the command.\n   *\n   * @fires ChangeSegmentColourCommand#changemasksegmentcolour\n   */\n  execute() {\n    // update segment property\n    if (typeof this.#newColour === 'number') {\n      // remove\n      this.#mask.setAtOffsets(this.#offsets, this.#newColour);\n      // update segment\n      this.#segment.displayValue = this.#newColour;\n    } else {\n      // update palette colour map (sends update event)\n      this.#mask.updatePaletteColourMap(\n        this.#segment.number,\n        this.#newColour\n      );\n      // update segment\n      this.#segment.displayRGBValue = this.#newColour;\n    }\n\n    // callback\n    if (!this.#isSilent) {\n      /**\n       * Segment delete event.\n       *\n       * @event ChangeSegmentColourCommand#changemasksegmentcolour\n       * @type {object}\n       * @property {number} segmentnumber The segment number.\n       */\n      this.onExecute({\n        type: 'changemasksegmentcolour',\n        segmentnumber: this.#segment.number,\n        value: [this.#newColour]\n      });\n    }\n  }\n\n  /**\n   * Undo the command.\n   *\n   * @fires ChangeSegmentColourCommand#changemasksegmentcolour\n   */\n  undo() {\n    // update segment property\n    if (typeof this.#previousColour === 'number') {\n      // update values\n      this.#mask.setAtOffsets(this.#offsets, this.#previousColour);\n      // update segment\n      this.#segment.displayValue = this.#previousColour;\n    } else {\n      // update palette colour map (sends update event)\n      this.#mask.updatePaletteColourMap(\n        this.#segment.number,\n        this.#previousColour\n      );\n      // udpate segment\n      this.#segment.displayRGBValue = this.#previousColour;\n    }\n\n    // callback\n    /**\n     * Segment redraw event.\n     *\n     * @event ChangeSegmentColourCommand#changemasksegmentcolour\n     * @type {object}\n     * @property {number} segmentnumber The segment number.\n     */\n    this.onUndo({\n      type: 'changemasksegmentcolour',\n      segmentnumber: this.#segment.number,\n      value: [this.#previousColour]\n    });\n  }\n\n  /**\n   * Handle an execute event.\n   *\n   * @param {object} _event The execute event with type and id.\n   */\n  onExecute(_event) {\n    // default does nothing.\n  }\n\n  /**\n   * Handle an undo event.\n   *\n   * @param {object} _event The undo event with type and id.\n   */\n  onUndo(_event) {\n    // default does nothing.\n  }\n\n} // ChangeSegmentColourCommand class\n","import {logger} from '../utils/logger';\n\n/**\n * Mask segment view helper: handles hidden segments.\n */\nexport class MaskSegmentViewHelper {\n\n  /**\n   * List of hidden segment numbers.\n   *\n   * @type {number[]}\n   */\n  #hiddenNumbers = [];\n\n  /**\n   * Get the index of a segment in the hidden list.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @returns {number} The index in the array, -1 if not found.\n   */\n  #findHiddenIndex(segmentNumber) {\n    return this.#hiddenNumbers.indexOf(segmentNumber);\n  }\n\n  /**\n   * Check if a segment is in the hidden list.\n   *\n   * @param {number} segmentNumber The segment number.\n   * @returns {boolean} True if the segment is in the list.\n   */\n  isHidden(segmentNumber) {\n    return this.#findHiddenIndex(segmentNumber) !== -1;\n  }\n\n  /**\n   * Add a segment to the hidden list.\n   *\n   * @param {number} segmentNumber The segment number.\n   */\n  addToHidden(segmentNumber) {\n    if (!this.isHidden(segmentNumber)) {\n      this.#hiddenNumbers.push(segmentNumber);\n    } else {\n      logger.warn(\n        'Not hidding segment, it is allready in the hidden list: ' +\n          segmentNumber);\n    }\n  }\n\n  /**\n   * Remove a segment from the hidden list.\n   *\n   * @param {number} segmentNumber The segment number.\n   */\n  removeFromHidden(segmentNumber) {\n    const index = this.#findHiddenIndex(segmentNumber);\n    if (index !== -1) {\n      this.#hiddenNumbers.splice(index, 1);\n    } else {\n      logger.warn(\n        'Cannot remove segment, it is not in the hidden list: ' +\n          segmentNumber);\n    }\n  }\n\n  /**\n   * @callback alphaFn\n   * @param {number|number[]} value The pixel value.\n   * @param {number} index The values' index.\n   * @returns {number} The opacity of the input value.\n   */\n\n  /**\n   * Get the alpha function to apply hidden colors.\n   *\n   * @returns {alphaFn} The corresponding alpha function.\n   */\n  getAlphaFunc() {\n    // create alpha function\n    // (zero is hidden by default)\n    return (value/*, index*/) => {\n      if (!Array.isArray(value) && (\n        value === 0 ||\n        this.#hiddenNumbers.includes(value))) {\n        return 0;\n      }\n      // default\n      return 255;\n    };\n  }\n}","/**\n * Mutable 2D scalar ({x,y}).\n */\nexport class Scalar2D {\n  /**\n   * X value.\n   *\n   * @type {number}\n   */\n  x;\n\n  /**\n   * Y value.\n   *\n   * @type {number}\n   */\n  y;\n}\n\n/**\n * Mutable 3D scalar ({x,y,z}).\n */\nexport class Scalar3D {\n  /**\n   * X value.\n   *\n   * @type {number}\n   */\n  x;\n\n  /**\n   * Y value.\n   *\n   * @type {number}\n   */\n  y;\n\n  /**\n   * Z value.\n   *\n   * @type {number}\n   */\n  z;\n}"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__944__","__WEBPACK_EXTERNAL_MODULE__324__","__WEBPACK_EXTERNAL_MODULE__654__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","Index","constructor","values","Error","length","every","val","isNaN","i","toString","getValues","slice","canCompare","rhs","equals","leni","compare","diffDims","push","add","dim","console","warn","next","previous","getWithNew2D","j","l","lenl","ModalityLut","rsi","bitsStored","isID","Math","pow","Float32Array","apply","getRSI","getLength","getValue","offset","logger","levels","TRACE","DEBUG","INFO","WARN","ERROR","level","trace","msg","debug","info","error","WindowLevel","center","width","VoiLut","wl","getWindowLevel","c","setSignedOffset","WindowLut","modalityLut","isSigned","isDiscrete","size","getVoiLut","getModalityLut","setVoiLut","lut","getSlope","Uint8ClampedArray","floor","buildLut","func","id","invId","lut_range_max","ColourMap","red","green","blue","luts","plain","invPlain","rainbow","hot","third","hot_iron","pet","hot_metal_blue","pet_20step","RGB","g","b","isEqualRgb","c1","c2","hexToRgb","hexStr","parseInt","substring","rgbToHex","rgb","labToUintLab","triplet","d65","x","y","z","srgbToCielab","labFunc","res","illuminant","fy","ciexyzToCielab","invGammaFunc","rl","gl","bl","srgbToCiexyz","colourNameToHex","name","dict","Yellow","Red","White","Green","Blue","Lime","Fuchsia","Black","custom","wlPresets","labelTexts","openRoiDialog","getTagTime","getTagPixelUnit","Vector3D","getX","getY","getZ","norm","sqrt","crossProduct","vector3D","dotProduct","isCodirectional","Number","EPSILON","REAL_WORLD_EPSILON","isSimilar","tol","abs","Matrix33","row","col","getInverse","m","m00","m01","m02","m10","m11","m12","m20","m21","m22","a1212","a2012","a0112","det","getMatrixInverse","str","multiply","tmp","k","getAbs","multiplyArray3D","array3D","multiplyVector3D","multiplyPoint3D","point3D","Point3D","multiplyIndex3D","index3D","getRowAbsMax","absMax","max","index","indexOf","getColAbsMax","asOneAndZeros","sign","getThirdColMajorDirection","getIdentityMat33","isIdentityMat33","mat33","Point2D","getCentroid","getDistance","point2D","dx","dy","dz","getClosest","pointList","minIndex","minDist","dist","minus","Point","get3D","values0","values1","mergeWith3D","i18n","t","props","split","mm","cm2","degree","startsWith","search","rawPos","pos","endsWith","getFlags","inputStr","flags","regex","match","exec","getFileExtension","filePath","ext","pathSplit","toLowerCase","pop","test","includes","stringToUint8Array","arr","Uint8Array","charCodeAt","precisionRound","number","precision","factor","delta","round","toStringId","dims","arraySortEquals","arr0","arr1","arrayEquals","sort","element","uint8ArrayToString","String","fromCharCode","findInArraySubset","callbackFn","start","end","getFindArrayInArrayCallback","buildMultipart","parts","boundary","lineBreak","partsSize","headers","headerStr","partKeys","keys","header","byteLength","data","trailer","buffer","set","dictionary","addTagsToDictionary","group","tags","tagGroups","vr32bitVL","OB","OD","OF","OL","OV","OW","SQ","SV","UC","UN","UR","UT","UV","ox","is32bitVLVR","vr","vrCharSetString","SH","LO","ST","LT","PN","isCharSetStringVR","vrTypes","AE","AS","AT","CS","DA","DS","DT","FL","FD","IS","SL","SS","TM","UI","UL","US","transferSyntaxes","transferSyntaxKeywords","ImplicitVRLittleEndian","ExplicitVRLittleEndian","EncapsulatedUncompressedExplicitVRLittleEndian","DeflatedExplicitVRLittleEndian","ExplicitVRBigEndian","JPEGBaseline8Bit","JPEGExtended12Bit","JPEGExtended35","JPEGSpectralSelectionNonHierarchical68","JPEGSpectralSelectionNonHierarchical79","JPEGFullProgressionNonHierarchical1012","JPEGFullProgressionNonHierarchical1113","JPEGLossless","JPEGLosslessNonHierarchical15","JPEGExtendedHierarchical1618","JPEGExtendedHierarchical1719","JPEGSpectralSelectionHierarchical2022","JPEGSpectralSelectionHierarchical2123","JPEGFullProgressionHierarchical2426","JPEGFullProgressionHierarchical2527","JPEGLosslessHierarchical28","JPEGLosslessHierarchical29","JPEGLosslessSV1","JPEGLSLossless","JPEGLSNearLossless","JPEG2000Lossless","JPEG2000","JPEG2000MCLossless","JPEG2000MC","JPIPReferenced","JPIPReferencedDeflate","MPEG2MPML","MPEG2MPHL","MPEG4HP41","MPEG4HP41BD","MPEG4HP422D","MPEG4HP423D","MPEG4HP42STEREO","HEVCMP51","HEVCM10P51","RLELossless","RFC2557MIMEEncapsulation","XMLEncoding","SMPTEST211020UncompressedProgressiveActiveVideo","SMPTEST211020UncompressedInterlacedActiveVideo","SMPTEST211030PCMDigitalAudio","Papyrus3ImplicitVRLittleEndian","Tag","getGroup","getElement","getKey","getNameFromDictionary","getGroupName","isWithVR","isPrivate","getVrFromDictionary","getMultiplicityFromDictionary","multiplicity","tagCompareFunction","getTagFromKey","getItemTag","isItemTag","tag","isItemDelimitationItemTag","isSequenceDelimitationItemTag","getPixelDataTag","isPixelDataTag","getTagFromDictionary","tagName","keys0","keys1","foundTag","k0","lenK0","k1","lenK1","DataElement","vl","undefinedLength","startOffset","endOffset","items","hasValue","safeGet","dataElements","safeGetAll","checkDataElement","warning","flipArrayEndianness","array","blen","u8","byteOffset","bpe","BYTES_PER_ELEMENT","DataReader","Int8Array","Int16Array","isNativeLittleEndian","isLittleEndian","DataView","readUint16","getUint16","readInt16","getInt16","readUint32","getUint32","readBigUint64","getBigUint64","readInt32","getInt32","readBigInt64","getBigInt64","readFloat32","getFloat32","readFloat64","getFloat64","readBinaryArray","bitArray","byteArrayLength","bitNumber","bitIndex","readUint8Array","readInt8Array","readUint16Array","Uint16Array","arraySize","readInt16Array","readUint32Array","Uint32Array","readUint64Array","BigUint64Array","readInt32Array","Int32Array","readInt64Array","BigInt64Array","readFloat32Array","readFloat64Array","Float64Array","readHex","toUpperCase","getDwvVersion","splitVersion","version","versions","s","concat","compareVersions","splitA","splitB","betaIndex","betaA","betaB","hasDicomPrefix","reduce","current","ZWS","DefaultTextDecoder","decode","result","getReverseOrientation","ori","rlabels","L","R","A","P","H","F","rori","isImplicitTransferSyntax","syntax","isBigEndianTransferSyntax","isJpegBaselineTransferSyntax","isJpegLosslessTransferSyntax","isJpeg2000TransferSyntax","isRleTransferSyntax","getTypedArray","bitsAllocated","pixelRepresentation","RangeError","powerOf2","log","getDataElementPrefixByteSize","isImplicit","TagKeys","DicomParser","getDefaultCharacterSet","setDefaultCharacterSet","characterSet","setDecoderCharacterSet","TextDecoder","getDicomElements","reader","implicit","itemData","item","isSeqDelim","isItemDelim","offsetTableVl","untilTag","readTagRes","is32bitVL","isKnownVR","pixItemData","sqEndOffset","vrType","Array","from","stream","lastIndex","trim","cleanString","raw","stri","stri1","sqBitsAllocated","sqPixelRepresentation","dataElement","subElement","elements","parse","metaReader","dataReader","magicword","metaEnd","tsElement","firstDataElement","oEightGroupLittleEndian","vr0","vr1","guessTransferSyntax","isReadSupportedTransferSyntax","getTransferSyntaxName","reachedUntilTag","charSetTerm","label","getUtfLabel","numberOfFrames","pixItems","nItemPerFrame","newPixItems","f","newBuffer","fragOffset","ListenerHandler","type","callback","remove","nFound","splice","fireEvent","event","stack","range","dataAccessor","maxIter","increment","blockMaxIter","blockIncrement","reverse1","reverse2","nextIndex","finalBlockIncrement","mainCount","blockCount","done","getIteratorValues","iterator","ival","getSliceIterator","image","isRescaled","viewOrientation","getGeometry","getSize","dirMax2Index","posValues","posStart","map","indexToOffset","getRescaledValueAtOffset","getValueAtOffset","ncols","nrows","nslices","sliceSize","getDimSize","ncomp","getNumberOfComponents","isPlanar","getPlanarConfiguration","getRange","iters","r0","r1","r2","range3d","rangeObj","dirMax0","dirMax2","simpleRange","componentIncrement","nextIndex1","nextIndex2","simpleRange3d","valueRange","nextValueIndex","RescaleSlopeAndIntercept","slope","intercept","getIntercept","Size","moreThanOne","dimension","canScroll3D","canScroll","getTotalSize","isInBounds","dirs","dimMax","dimIndex","offsetToIndex","off","dimSize","get2D","Statistics","min","mean","stdDev","median","p25","p75","getStats","includesFullStatsFlags","stats","getBasicStats","getPercentile","getFullStats","sum","sumSqr","variance","ratio","i0","v0","guid","random","NumberRange","Spacing","Geometry","origins","spacing","orientation","time","getInitialTime","getCurrentTotalNumberOfSlices","count","hasSlicesAtTime","getCurrentNumberOfSlicesBeforeTime","getOrigin","getOrigins","includesOrigin","getOrientedArray3D","geoSliceSpacing","spacings","origin1","origin2","sliceSpacing","getSliceGeometrySpacing","getSpacing","orientedValues","getRealSpacing","getOrientation","getSliceIndex","point","localOrigins","closestOriginIndex","closestOrigin","pointDir","appendOrigin","origin","equalToOrigin","find","appendFrame","sizeValues","spacingValues","isIndexInBounds","worldToIndex","nDims","minValues","fill","maxIndex","indexToWorld","orientedPoint3D","pointToWorld","worldToPoint","getDeOrientedArray3D","getCoronalMat33","Orientation","Axial","Coronal","Sagittal","getMatrixFromName","matrix","getOrientationStringLPS","v1","v2","getVectorStringLPS","vector","orientationX","orientationY","orientationZ","threshold","getOrientationName","cosines","orientMatrix","getOrientationFromCosines","code","orientStr","getLPSGroup","orientationMatrix","rowCosines","colCosines","normal","getViewOrientation","imageOrientation","targetOrientation","TransferSyntax","SOPClassUID","Modality","Rows","Columns","PixelSpacing","ImagerPixelSpacing","NominalScannedPixelSpacing","PixelAspectRatio","SpacingBetweenSlices","RescaleType","Units","ImageOrientationPatient","PhotometricInterpretation","SamplesPerPixel","getImage2DSize","rows","columns","getSpacingFromMeasure","pixelSpacing","parseFloat","sbs","getPhotometricInterpretation","photometricInterpretation","transferSyntax","photo","isMonochrome","samplesPerPixel","padZeroTwoDigit","getDate","daValue","monthBeginIndex","dayBeginIndex","year","monthIndex","day","getTime","tmValue","tmHours","tmMinutes","tmSeconds","tmFracSecondsStr","hours","minutes","seconds","milliseconds","dateToDateObj","date","getFullYear","getMonth","dateToTimeObj","getHours","getMinutes","getSeconds","getDicomDate","dateObj","getDicomTime","MetaTagKeys","PatientName","PatientID","PatientBirthDate","PatientSex","StudyDate","StudyTime","StudyInstanceUID","StudyID","ReferringPhysicianName","SeriesDate","SeriesTime","SeriesInstanceUID","SeriesNumber","FrameOfReferenceUID","Manufacturer","ManufacturerModelName","DeviceSerialNumber","SoftwareVersions","LossyImageCompression","ImageFactory","getWarning","checkElements","modality","suvFactor","patWeight","patWeightEl","weight","decayedDose","seriesDateObj","totalDose","halfLife","radioStart","radioInfoSq","totalDoseStr","totalDoseEl","dose","halfLifeStr","halfLifeEl","hl","radioStartDateTimeEl","radioStartDateObj","radioStartTimeObj","radioStartDateTime","dtValue","dateDataElement","dtDate","timeDataElement","getDateTime","Date","seriesTimeObj","scanStart","acqDateEl","acqTimeEl","acqDateObj","acqTimeObj","acqDate","frameRefTime","frameRefTimeElStr","frameRefTimeEl","actualFrameDuration","actualFrameDurationElStr","actualFrameDurationEl","decayConstant","decayDuringFrame","offsetSeconds","exp","decayTime","getDecayedDose","getSuvFactor","create","pixelBuffer","numberOfFiles","safeGetLocal","safeGetAllLocal","size2D","rowSpacing","columnSpacing","getPixelSpacing","imagePositionPatient","slicePosition","imageOrientationPatient","getOrientationMatrix","geometry","sopInstanceUid","bufferSize","Image","setPhotometricInterpretation","planarConfiguration","setPlanarConfiguration","rescaleSlope","rescaleIntercept","isPetWithSuv","intensityFactor","setRescaleSlopeAndIntercept","colourMap","descriptor","redLut","greenLut","blueLut","redLutElement","greenLutElement","blueLutElement","doScale","descSize","vlSize","scaleTo8","clone","getPaletteColourMap","setPaletteColourMap","meta","TransferSyntaxUID","MediaStorageSOPClassUID","ImageType","PixelRepresentation","BitsAllocated","BitsStored","HighBit","metaKeys","pixelUnit","unit","defaultGetTagPixelUnit","presets","windowPresets","windowCenter","windowWidth","windowCWExplanation","getWindowPresets","setMeta","DataWriter","writeUint8","setUint8","writeInt8","setInt8","writeUint16","setUint16","writeInt16","setInt16","writeUint32","setUint32","writeUint64","setBigUint64","writeInt32","setInt32","writeInt64","setBigInt64","writeFloat32","setFloat32","writeFloat64","setFloat64","writeHex","writeBinaryArray","byte","len","writeUint8Array","writeInt8Array","writeUint16Array","writeInt16Array","writeUint32Array","writeUint64Array","writeInt32Array","writeInt64Array","writeFloat32Array","writeFloat64Array","_uidCount","WriterRule","action","writerActions","copy","clear","replace","getUID","datePart","toISOString","countPart","uid","getDwvUIDPrefix","nonTagLength","prefix","tagNumber","isEven","isStringVr","uint8ArrayPush","newArr","DefaultTextEncoder","encode","DicomWriter","default","setUseUnVrForPrivateSq","flag","setFixUnknownVR","setRules","rules","addMissingTags","rule","tagKey","isKey","useSpecialTextEncoder","TextEncoder","getElementToWrite","groupName","writer","isItemTagWithNoVR","itemTag","subItem","itemElement","itemDelimElement","hexString","hexString1","hexString2","atValue","diff","message","finalValue","initialArray","initialArrayLength","arrayLength","flattenendArrayLength","flattenedArray","indexFlattenedArray","flattenArrayOfTypedArrays","isTagWithVR","undefinedLengthSequence","undefinedLengthItem","seqDelimElement","getBuffer","isBigEndian","oldscs","totalSize","localSize","metaElements","rawElements","metaLength","fmiglTag","fmivTag","icUIDTag","ivnTag","missingTags","originalElement","checkAndFixUnknownVR","fmiv","getDataElement","fmivSize","icUID","icUIDSize","icUIDValue","ivn","ivnSize","elemSortFunc","fmigl","fmiglSize","ArrayBuffer","metaWriter","dataWriter","lenj","metaOffset","lenk","newItems","oldItemElements","newItemElements","subSize","itemKeys","itemKey","padStr","pad","getVrPad","join","padOBValue","isTypedArrayVr","isArray","itemPrefixSize","getBpeForVrType","dictVr","getUint8ToVrValue","getElementsFromJSONTags","simpleTags","simpleTag","CodeValue","CodingSchemeDesignator","CodeMeaning","LongCodeValue","URNCodeValue","DicomCode","meaning","longValue","urnValue","schemeDesignator","isEqualCode","code1","code2","getCode","getDicomCodeItem","DcmCodes","SctCodes","UcumCodes","deg","getDicomCode","scheme","getMeasurementGroupCode","getReferenceGeometryCode","getSourceImageCode","getTrackingIdentifierCode","getSegmentationCode","getShortLabelCode","getReferencePointsCode","getColourCode","QuantificationName2DictItem","angle","surface","height","radius","stddev","getQuantificationName","propKey","QuantificationUnit2UcumKey","HU","MGML","ED","PCT","CNTS","NONE","CM2","CM2ML","PCNT","CPS","BQML","MGMINML","UMOLMINML","MLMING","MLG","UMOLML","PROPCNTS","PROPCPS","MLMINML","MLML","GML","SUV","getQuantificationUnit","ucumKey","MaskSegment","algorithmType","algorithmName","displayValue","displayRGBValue","propertyTypeCode","propertyCategoryCode","trackingUid","trackingId","getSegment","segment","cielabElement","gammaFunc","ciexyzToSrgb","invLabFunc","l0","cielabToCiexyz","cielabToSrgb","segmentNumber","colours","colour","getDefaultColour","getDicomSegmentItem","algoType","segmentItem","SegmentNumber","SegmentLabel","SegmentAlgorithmType","SegmentAlgorithmName","cieLab","RecommendedDisplayCIELabValue","RecommendedDisplayGrayscaleValue","SegmentedPropertyCategoryCodeSequence","SegmentedPropertyTypeCodeSequence","TrackingID","TrackingUID","DicomSegmentFrameInfo","imagePosPat","derivationImages","refSegmentNumber","getSegmentFrameInfo","derivationImageSq","sourceImages","sourceImageSq","sourceImage","referencedSOPClassUID","referencedSOPInstanceUID","segmentIdSq","p","frameInfo","framePlaneOrientationSeq","frameImageOrientation","framePixelMeasuresSeq","frameSpacing","getDicomSegmentFrameInfoItem","FrameContentSequence","DimensionIndexValues","PlanePositionSequence","ImagePositionPatient","SegmentIdentificationSequence","ReferencedSegmentNumber","sourceImgPurposeOfReferenceCode","segDerivationCode","derivationImageItems","derivationImage","PurposeOfReferenceCodeSequence","ReferencedSOPClassUID","ReferencedSOPInstanceUID","DerivationCodeSequence","SourceImageSequence","DerivationImageSequence","equalPosPat","pos1","pos2","JSON","stringify","checkTag","tagDefinition","tagValue","enum","createRoiSliceBuffers","segments","sliceOffset","buffers","inputOffset","pixelValue","segmentIndex","RequiredDicomTags","getDefaultDicomSegJson","MaskFactory","_dicomElements","orgSq","orgUID","indices","indexSqElem","indexSq","indexPointer","indexOrg","DimensionOrganizationUID","DimensionIndexPointer","DimensionDescriptionLabel","organizations","getDimensionOrganization","segSequence","paletteColourMap","hasDisplayRGBValue","sharedFunctionalGroupsSeq","funcGroup0","planeOrientationSeq","pixelMeasuresSeq","includesPosPat","some","arrVal","findIndexPosPat","findIndex","perFrameFuncGroupSequence","frameInfos","framePosPats","ii","invOrientation","p1","p2","getComparePosPat","point3DFromArray","frameOrigins","framePosPat","tmpGeometry","isAboveEpsilon","posPats","sliceIndex","frameOrigin","distPrevious","numberOfSlices","uids","getFindSegmentFunc","frameOffset","frameSegment","DimensionOrganizationSequence","DimensionIndexSequence","SOPInstanceUID","toDicom","extraTags","getMeta","now","ContentDate","ContentTime","segmentItems","SegmentSequence","SharedFunctionalGroupsSequence","PlaneOrientationSequence","PixelMeasuresSequence","roiBuffers","key0","createRoiBuffers","finalBuffers","referencedSOPs","number40","number4","key1","posPat","posPatArray","sourceIndex","getImageUid","NumberOfFrames","frameInfosTag","PerFrameFunctionalGroupsSequence","refSeriesTag","ReferencedInstanceSequence","ReferencedSeriesSequence","tags1","tags2","keys2","tagName2","mergeTags","dicomElements","pixVl","de","createImage","createMaskImage","imageUids","getSecondaryOffset","getOriginForImageUid","uidIndex","includesImageUid","containsImageUids","itemArr1","arrayContains","canQuantify","canWindowLevel","nFiles","getRescaleSlopeAndIntercept","isConstantRSI","inRsi","isIdentityRSI","interp","updatePaletteColourMap","config","getOffsets","bufferValue","offsets","equal","hasValues","finalValues","equalFunc","getEqualCallback","valuesToFind","indicesToRemove","v","clonedBuffer","tmpBuffer","appendSlice","rhsSize","rhsRange","getDataRange","rhsResRange","getRescaledDataRange","resRange","timeId","isNewFrame","volumeGeometry","sliceGeometry","fullBufferSize","fullSliceIndex","indexOffset","maxOffset","subarray","numberOfImages","rhsPresets","pkey","rhsPreset","windowPreset","perslice","appendFrameBuffer","frameBuffer","frameIndex","frameSize","calculateDataRange","calculateRescaledDataRange","getHistogram","calculateHistogram","dataRange","rescaledDataRange","histogram","addEventListener","removeEventListener","setAtOffsets","setAtOffsetsAndGetOriginals","offsetsLists","originalValuesLists","previousValue","originalValues","currentValue","setAtOffsetsWithIterator","isValueArray","getValueAtIndex","getRescaledValue","getRescaledValueAtIndex","resmin","resmax","rmin","rmax","rvalue","histo","convolute2D","weights","newImage","imgSize","dimOffset","convoluteBuffer","componentOffset","wOff","wOff00","wOff0x","wOff0n","wOffx0","wOffxn","wOffn0","wOffnx","wOffnn","pixelOffset","newValue","wOffFinal","wi","transform","operator","compose","defaultWlPresets","CT","mediastinum","lung","bone","brain","head","ViewFactory","view","View","setColourMap","minmax","preset","setWindowPresets","init","viewEventNames","createView","getCurrentIndex","setCurrentIndex","getImage","setImage","inImage","setOrientation","setInitialIndex","getPlaybackMilliseconds","recommendedDisplayFrameRate","_value","_index","getAlphaFunction","setAlphaFunction","currentIndex","sliceWl","setWindowLevel","setWindowLevelPresetById","voiLut","voiLutWl","getWindowPresetsNames","addWindowPresets","getCurrentWindowPresetName","getColourMap","getCurrentPosition","position","getCurrentImageUid","isPositionInBounds","getScrollDimIndex","originIndex","silent","setCurrentPosition","valid","minLen","maxLen","posEvent","imageUid","pixValue","isNewWl","isNewName","manual","wc","ww","skipGenerate","setWindowLevelPreset","getWindowLevelMinMax","setWindowLevelMinMax","generateImageData","photoInterpretation","alphaFunc","windowLut","pxValue","generateImageDataMonochrome","is16BitsStored","to8","generateImageDataPaletteColor","generateImageDataRgb","cb","cr","generateImageDataYbrFull","isAquisitionOrientation","PlaneHelper","imageGeometry","getTargetOrientation","getOffset3DFromPlaneOffset","offset2D","planeOffset","getTargetDeOrientedVector3D","getPlaneOffsetFromOffset3D","offset3D","getTargetOrientedVector3D","planeVector","getTargetDeOrientedPoint3D","planePoint","getImageOrientedVector3D","getImageOrientedPoint3D","getImageDeOrientedVector3D","getImageDeOrientedPoint3D","getPositionFromPlanePoint","getPlanePointFromPosition","getCosines","getPlanePoints","snapPosition","planeOrigin","imageOrigin","pValues","iValues","scrollDimIndex","getNativeScrollDimIndex","getTargetOrientedPositiveXYZ","ViewPositionAccessor","PositionHelper","getMaximumDimValue","getMaximumScrollValue","getCurrentPositionDimValue","getCurrentPositionScrollValue","getCurrentPositionAtDimValue","getCurrentPositionAtScrollValue","setCurrentPositionSafe","merge","geometry1","geometry2","minByIndex","array1","array2","newSpacing","deorient","range1","range2","minRangeValues","maxRangeValues","newSize","newOrigins","mergeGeometries","getIncrementPosition","getDecrementPosition","previousIndex","incrementPosition","decrementPosition","incrementPositionAlongScroll","decrementPositionAlongScroll","ViewController","getPlaneHelper","isMask","initialise","getModality","getWindowLevelPresetsNames","addWindowLevelPresets","isPlaying","getPositionHelper","getPositionHelperClone","getCurrentOrientedIndex","getCurrentIndexScrollValue","getCurrentScrollPosition","img","get2DSpacing","getRescaledImageValue","getPixelUnit","sliceValues","sliceOrigin","getImageRegionValues","imageIndex","rescaled","iter","rangeNumberOfColumns","regionSize","regionOffset","regionElementCount","rangeRegion","getRegionSliceIterator","getImageVariableRegionValues","regions","offsetRegions","region","regionIndex","regionCount","rangeRegions","getVariableRegionSliceIterator","canQuantifyImage","getImageSize","getImageWorldSize","getImageRescaledDataRange","equalImageMeta","imageMeta","metaKey","getPlanePositionFromPosition","getIndexFromPosition","getPlanePositionFromPlanePoint","play","RecommendedDisplayFrameRate","window","setInterval","canDoMore","stop","clearInterval","setViewAlphaFunction","bindImageAndLayer","viewLayer","onimagecontentchange","onimagegeometrychange","unbindImageAndLayer","InteractionEventNames","getTouchesPositions","touches","offsetLeft","offsetTop","target","offsetParent","positions","pageX","pageY","getTouchPoints","targetTouches","changedTouches","getMousePoint","offsetX","offsetY","canCreateCanvas","testCvs","document","createElement","cropCvs","testCtx","getContext","cropCtx","fillRect","drawImage","getImageData","ViewLayer","containerDiv","className","getDataId","getScale","getAbsoluteZoomOffset","setImageSmoothing","setView","dataId","bindImage","getViewController","onimageset","dataid","unbindImage","draw","vcSize","origin0","scrollOffset","setBaseOffset","getId","removeFromDOM","getBaseSize","getOpacity","setOpacity","alpha","addFlipOffsetX","addFlipOffsetY","flipScaleX","flipScaleY","flipScaleZ","setScale","newScale","helper","orientedNewScale","finalNewScale","resetOffset","worldCenter","newOffset","getScaledOffset","newZoomOffset","initScale","absoluteZoomOffset","layerGroupOrigin","layerGroupOrigin0","needsUpdate","setOffset","newPanOffset","displayToPlaneIndex","planePos","displayToPlanePos","displayToPlaneScale","deScaled","planePosToDisplay","posX","posY","displayToMainPlanePos","display","style","isVisible","layerid","globalAlpha","setTransform","imageSmoothingEnabled","appendChild","alert","clearRect","createImageData","fitToContainer","containerSize","divToWorldSizeRatio","fitOffset","needsDraw","newFitScale","fitRatio","sizeRatio","newViewOffset","scaledImageSize","newFlipOffset","bindInteraction","pointerEvents","names","eventName","passive","unbindInteraction","srclayerid","putImageData","dims3D","indexScrollDimIndex","filter","save","restore","ScrollSum","getSum","wheelDeltaY","deltaY","getSpinY","isTick","ScrollWheel","app","wheel","up","preventDefault","layerDetails","getLayerDetailsFromEvent","layerGroup","getLayerGroupByDivId","groupDivId","positionHelper","Line","begin","getBegin","getEnd","getDeltaX","getDeltaY","getWorldLength","spacing2D","wlen","dxs","dys","getMidpoint","getInclination","atan2","PI","quantify","viewController","quant","getAngle","line0","line1","dx0","dy0","dx1","dy1","dot","areOrthogonal","getPerpendicularLine","line","perpSlope","getLineFromEquation","getPerpendicularLineAtDistance","distance","lineFromEq","startPoint","minX","maxX","minY","maxY","isPointInLineRange","beginX","beginY","endX","endY","sx2","sy2","AddAnnotationCommand","annotation","drawController","getName","execute","addAnnotation","undo","removeAnnotation","RemoveAnnotationCommand","UpdateAnnotationCommand","originaProps","newProps","updateAnnotation","Style","getFontFamily","getFontSize","getStrokeWidth","getTextColour","getLineColour","setLineColour","setBaseScale","scale","setZoomScale","getBaseScale","getZoomScale","applyZoomScale","applyZoomRatio","getShadowOffset","getTagOpacity","getTextPadding","getFontStr","getLineHeight","getScaledFontSize","getScaledStrokeWidth","getShadowLineColour","hexColour","isDarkColour","defaultLabelTexts","arrow","circle","ellipse","protractor","rectangle","roi","ruler","isNodeNameLabel","node","isNodeNameShape","isPositionNode","getLineShape","kshape","getChildren","Konva","getAnchorShape","isNodeWithId","getDefaultAnchor","absRadius","stroke","strokeWidth","strokeScaleEnabled","radiusX","radiusY","dragOnTop","draggable","visible","getAnchorIndex","DrawShapeEditor","eventCallback","setShape","inshape","drawLayer","getFactory","getShape","getAnnotation","isActive","enable","getLayer","disable","reset","resetAnchors","getParent","forEach","anchor","setAnchorsActive","anchors","getAnchors","getStyle","originalProps","on","cancelBubble","mathShape","referencePoints","stageSize","changed","boundNodePosition","validateAnchorPosition","constrainAnchorMove","updateAnnotationOnAnchorMove","updateShapeGroupOnAnchorMove","command","getDrawController","addToUndoStack","moveToTop","DrawTrash","createTrashIcon","trashLine1","points","trashLine2","activate","stage","getKonvaStage","konvaLayer","getKonvaLayer","invscale","changeChildrenColourOnTrashHover","eventPosition","shapeGroup","originalShapeColour","isOverTrash","changeGroupChildrenColour","tshape","trashHalfWidth","scaleX","trashHalfHeight","scaleY","DrawShapeHandler","setEditorShape","shape","isAnnotationGroupEditable","getEditorShapeGroup","getEditorAnnotation","disableAndResetEditor","storeMouseOverCursor","cursor","body","opacity","onMouseOutShapeGroup","addShapeGroupListeners","originalTextExpr","textExpr","onSaveCallback","newTextExpr","prompt","defaultOpenRoiDialog","dragStartPos","previousPos","getShapePositionRange","boundRect","getClientRect","relativeTo","isShapeInRange","children","labelWithDefaultPosition","labelPosition","child","move","updateAnnotationOnTranslation","updateLabelContent","updateConnector","mousePoint","evt","eventPos","translation","originalLabelPosition","newLabelPosition","removeShapeListeners","Ellipse","centre","getCenter","getA","getB","getSurface","getWorldSurface","mulABC","getRound","centerX","centerY","radiusRatio","rySquare","transX","quantif","getEllipseIndices","dir","centerValues","radiusI","radiusJ","radiusJ2","di","dj","jmax","jmin","imax","imin","DicomData","annotationGroup","DataController","getNextDataId","getDataIds","getDataIdsFromSopUids","update","dataToUpdate","idKey","obj1","obj2","valueKey","mergedObj1","merged","id1","id2","value1","subValue1","value2","subValue2","mergeObjects","ERROR_MESSAGES","formatString","template","_match","_BrushMode","getCircleIndices","radiuses","DrawBrushCommandProperties","mask","mode","isSilent","DrawBrushCommand","properties","getOriginalValuesLists","getExecuteEvent","segNumber","CustomEvent","detail","segmentnumber","onExecute","undoEvent","onUndo","_event","Brush","EventTarget","super","maskSize","maskGeometry","maskSlice","sourceGeometry","circleDims","sliceMeta","newOrigIndexRange","sorted","va","vb","z0","index0","z1","at","index1","indexStart","originStart","d0","indexEnd","originEnd","d1","getOriginIndexRangeFromMaskIndices","sourceOrigins","maskOrigins","maskOrigIndexStart","maskOrigIndexEnd","indicesToAdd","originsToAdd","maskData","getData","imgK","firstSliceMeta","organizationUID","FunctionalGroupPointer","referenceSeriesTag","addData","divId","dataConfigs","getDataViewConfigs","orient","viewConfig","ViewConfig","addDataViewConfig","render","dataUid","sourceDataUID","ids","sourceDataId","maskViewLayers","getViewLayersByDataId","maskDataId","getBaseViewLayer","maskVl","maskVc","sourcePosition","sourceData","sourceVl","sourceViewController","getDivId","scrollIndex","maskPlanePos","imageSize","getOffsetsFromIndices","getActiveDrawLayer","referenceDataId","getActiveViewLayer","seriesInstanceUID","mousedown","button","activateErasingEvent","dispatchEvent","deactivateErasingEvent","mousemove","diffX","diffY","mouseup","reverse","mouseout","touchstart","touchmove","touchend","maskLayers","keydown","context","onKeydown","ctrlOrAlt","ctrlKey","altKey","bool","allDivIds","dataViewConfigs","viewConfigs","divIds","Set","getUniqueDataViewConfigsDivIds","querySelector","stopPropagation","setFeatures","features","brushSizeRange","brushSize","brushMode","createMask","selectedSegmentNumber","blacklist","getEventNames","getHelpKeys","title","brief","mouse","mouse_click","touch","touch_click","ROI","getPoint","getPoints","addPoint","addPoints","cx","cy","pi","pi1","ai","a1","Path","inputPointArray","inputControlPointIndexArray","pointArray","controlPointIndexArray","isControlPoint","addControlPoint","newPointArray","appenPath","other","oldSize","indexArray","BucketQueue","bits","cost_functor","bucketCount","loc","cost","buckets","buildArray","bucket","getBucket","ret","isEmpty","__twothirdpi","gradUnitVector","gradX","gradY","px","py","out","oy","gvm","Scissors","curPoint","searchGranBits","searchGran","pointsPerPost","greyscale","laplace","gradient","parents","working","trained","trainingPoints","edgeWidth","trainingLength","edgeGran","edgeTraining","gradPointsNeeded","gradGran","gradTraining","insideGran","insideTraining","outsideGran","outsideTraining","getTrainingIdx","granularity","getTrainedEdge","edge","getTrainedGrad","grad","getTrainedInside","inside","getTrainedOutside","outside","setWorking","setDimensions","setData","gradMagnitude","lap","computeGreyscale","computeLaplace","computeGradient","computeGradX","computeGradY","sides","guv","ix","iy","computeSides","findTrainingPoints","resetTraining","doTraining","calculateTraining","addInStaticGrad","input","output","maxVal","idx","gaussianBlur","have","need","gradDirection","qx","qy","__dgpuv","__gdquv","dp","dq","SQRT1_2","acos","adj","list","sx","sy","ex","ey","setPoint","sp","visited","MAX_VALUE","pq","doWork","timeout","pointCount","newPoints","adjList","q","pqCost","LabelFactory","positionGetter","getPosition","ktext","fontSize","fontFamily","padding","shadowColor","shadowOffset","labelText","getText","setText","zoomScale","labelScale","klabel","updatePosition","getLabelAnchorsPosition","lx","ly","getClosestPoints","points1","points2","point1","point2","getConnector","connectorsPos","labelAnchorsPos","anchorPoints","dash","kconnect","updateContent","text","Circle","getRadius","rSquare","Protractor","_viewController","_flags","Rectangle","getRealWidth","getRealHeight","getWidth","getHeight","getRectangleIndices","sizeI","halfSizeI","sizeJ","halfSizeJ","ThresholdFilter","getMin","setMin","getMax","setMax","setOriginalImage","getOriginalImage","imageMin","SharpenFilter","SobelFilter","RunFilterCommand","toolList","toolOptions","defaultToolList","pixelToIntensity","WindowLevelValues","touchPoints","dblclick","_bool","_features","Scroll","getViewLayerById","getReferenceLayerId","yMove","xMove","setTimeout","clearTimeout","showTooltip","removeTooltipDiv","displayTooltip","ZoomAndPan","tx","ty","addTranslation","#twoTouchUpdate","lineRatio","zoom","addScale","step","Opacity","layer","getActiveLayer","op","Draw","refDataId","createAnnotationData","setMetaValue","concept","addAndRenderAnnotationData","setShapeHandler","setActiveLayerByDataId","getAnnotationGroup","isEditable","getIntersection","selectedShape","annotationid","getNPoints","timer","getTimeout","getActiveLayerGroup","destroy","tmpPoints","drawLayerId","layerId","Annotation","groupColour","getColour","setAnnotationMathShape","createShapeGroup","setLabelVisibility","listening","finalPoints","addMetaItem","activateCurrentPositionShapes","drawLayers","getDrawLayers","setOptions","options","getOptionsType","autoShapeColour","shapeColour","shapeName","hasShape","mouseOverCursor","withScroll","refMetaValidator","drawMetaValidator","annotationGroupMeta","annotationMeta","listener","Filter","getSelectedFilter","filterName","hasFilter","run","args","runArgs","getFilterList","Floodfill","setExtend","getExtend","#getIndex","simple","bytes","MagicWand","cs","icsl","newMathShape","originalMathShape","extend","ini","jl","onThresholdChange","getAbsoluteScale","movedpoint","Livewire","pn","p0","results","_p","_q","defaultToolOptions","ArrowFactory","supports","setTextExpr","updateQuantification","extras","extra","_anchor","kline","pointBegin","pointEnd","endPoint","newBegin","newEnd","_style","linePerp0","linePerp1","hitFunc","beginPath","moveTo","lineTo","closePath","fillStrokeShape","perpLine","closed","ktriangle","_annotation","_group","CircleFactory","left","right","bottom","top","anchorPoint","newRadius","newCenter","swapX","swapY","kshadow","pixelLine","shadow","moveToBottom","EllipseFactory","ProtractorFactory","mid","pointMid","newPointList","inclination","innerRadius","outerRadius","rotation","midX","midY","karc","arcPos","RectangleFactory","topLeft","bottomRight","pointTopLeft","pointBottomRight","krect","topRight","bottomLeft","rWidth","rHeight","RoiFactory","kroi","newPoint","RulerFactory","ktick0","ktick1","Threshold","Sobel","Sharpen","referenceSopUID","quantification","planePoints","getMetaConceptIds","getMetaItem","conceptId","removeMetaItem","isCompatibleView","planeHelper","cosine1","cosine2","setViewController","originPoint","valueObj","valueStr","toPrecision","replaceFlags","fac","factoryName","AnnotationGroup","getList","setEditable","setColour","propKeys","hasMeta","getMetaValue","DrawController","setAnnotationGroupEditable","removeAnnotationWithCommand","exeCallback","updateAnnotationWithCommand","removeAllAnnotationsWithCommand","hasAnnotationMeta","setAnnotationMeta","DrawLayer","handler","getLayers","setPlaneHelper","refLayerId","container","getContent","setAttribute","setAnnotationGroup","allPosGroups","posGroup","shapeGroups","posGroupId","layerChildren","posChildren","isAnnotationVisible","setAnnotationVisibility","setLabelsVisibility","posGroups","connector","deleteDraw","_id","_exeCallback","deleteDraws","getNumberOfDraws","findOne","ratioX","ratioY","labels","getLayerDetailsFromLayerDivId","idString","layerIndex","layerDiv","closest","indexCenter","LayerGroup","getShowCrosshair","setShowCrosshair","getAddedScale","getOffset","getNumberOfLayers","getViewLayers","someViewLayer","hasOne","getNumberOfViewLayers","activeLayer","baseLayer","layers","searchViewLayers","getViewDataIndices","getDrawLayerById","getDrawLayersByDataId","setActiveLayer","addViewLayer","viewLayerIndex","div","append","addDrawLayer","updateLayersToPositionChange","empty","removeLayer","removeLayersByDataId","layergroupid","displayPos","lineH","offsetWidth","lineV","offsetHeight","span","createTextNode","viewLayerOffsets","baseViewLayerOrigin0","baseViewLayerOrigin","hasSetOffset","vc","scrollDiff","planeDiff","scroll","plane","refOffsets","hasSetPos","getDivToWorldSizeRatio","maxWorldSize","getMaxWorldSize","maxSize","scaleStep","binderList","WindowLevelBinder","getEventType","getCallback","viewLayers","PositionBinder","pointValues","currentPos","currentDims","inputDims","ZoomBinder","OffsetBinder","OpacityBinder","ColourMapBinder","Stage","getLayerGroup","getNumberOfLayerGroups","setActiveLayerGroup","addLayerGroup","htmlElement","isBound","unbindLayerGroups","bindLayerGroups","setBinders","removeLayerGroup","minRatio","hasRatio","binder","binderObj","elem","State","fromJSON","json","baseScale","scaleCenter","originX","originY","oldTx","oldTy","setDrawings","drawings","drawingsDetails","v02DAndD","inputDrawings","newDrawings","drawGroups","drawGroup","lenf","newFrameDrawings","leng","karcs","ktexts","toObject","txtLen","longText","v01Tov02DrawingsAndDetails","v02Tov03Drawings","v03Tov04DrawingsDetails","v04Tov05Data","v04Tov05Drawings","details","groupDetails","v02Tov03DrawingsDetails","groupShapes","parentGroup","groupDrawings","currentPosition","gnode","attrs","sliceNumber","frameNumber","newId","getUrlFromUri","uri","base","location","URL","splitUri","sepIndex","hashIndex","query","pairs","pair","splitKeyValueString","UndoStack","getStackSize","getCurrentStackIndex","getCurrentCommand","cmd","Event","commandName","redo","ToolboxController","enableShortcuts","getToolList","hasTool","getSelectedTool","getSelectedToolEventHandler","eventType","setSelectedTool","setToolFeatures","bindLayerGroup","layerGroupDivId","applySelectedTool","MultiProgressHandler","setNumberOfDimensions","num","setNToLoad","onprogress","lengthComputable","subindex","percent","loaded","total","source","lenprog","getMonoProgressHandler","getUndefinedMonoProgressHandler","DirectoryRecordTypes","UrlsLoader","request","loader","onload","onloadend","load","onloadstart","status","onerror","responseURL","statusText","response","mproghandler","loaders","loaderList","foundLoader","canLoadUrl","defaultCharacterSet","onloaditem","onabort","lastRunRequestIndex","requestOnLoadEnd","send","XMLHttpRequest","open","requestHeaders","setRequestHeader","withCredentials","errorCallback","timeoutCallback","ontimeout","abortCallback","loadUrlAs","responseType","batchSize","dicomDirUrl","urls","parser","dirRecSqElement","dirSeq","records","series","study","dirRecTypeElement","recType","refFileIdElement","refFileIds","getDicomDirFileList","getFileListFromDicomDir","rootUrl","fullUrls","abort","readyState","isLoading","ThreadPool","poolSize","taskQueue","freeThreads","WorkerThread","runningThreads","addWorkerTask","workerTask","onworkstart","workerThread","shift","onworkend","onTaskEnd","onwork","handleWorkerError","onworkitem","parentPool","runningTask","worker","Worker","script","onmessage","postMessage","startMessage","terminate","itemNumber","numberOfItems","WorkerTask","hasJpegBaselineDecoder","JpegImage","hasJpegLosslessDecoder","jpeg","lossless","hasJpeg2000Decoder","JpxImage","decoderScripts","jpeg2000","rle","AsynchPixelBufferDecoder","_numberOfData","pixelMeta","ondecodestart","ondecodeditem","ondecoded","ondecodeend","SynchPixelBufferDecoder","algoName","numberOfData","decoder","decodedBuffer","buf","Decoder","decoded","tiles","dwvdecoder","RleDecoder","PixelBufferDecoder","NumericValue","FloatingPointValue","RationalNumeratorValue","RationalDenominatorValue","MeasurementUnitsCodeSequence","MeasuredValue","numericValue","floatingPointValue","rationalNumeratorValue","rationalDenominatorValue","measurementUnitsCode","getDicomMeasuredValueItem","MeasuredValueSequence","NumericValueQualifierCodeSequence","NumericMeasurement","measuredValue","numericValueQualifierCode","getDicomNumericMeasurementItem","measurement","SopInstanceReference","getSopInstanceReference","ref","getDicomSopInstanceReferenceItem","ReferencedFrameNumber","ReferencedSOPSequence","ImageReference","referencedSOPSequence","referencedFrameNumber","referencedSegmentNumber","getDicomImageReferenceItem","PixelOriginInterpretation","GraphicData","GraphicType","FiducialUID","GraphicTypes","SpatialCoordinate","graphicData","graphicType","pixelOriginInterpretation","fiducialUID","getDicomSpatialCoordinateItem","scoord","ReferencedFrameofReferenceUID","SpatialCoordinate3D","referencedFrameofReferenceUID","getDicomSpatialCoordinate3DItem","RelationshipType","ValueType","ConceptNameCodeSequence","ConceptCodeSequence","ContentSequence","DateTime","Time","UID","PersonName","TextValue","ContinuityOfContent","ContentTemplateSequence","MappingResource","TemplateIdentifier","RelationshipTypes","ValueTypes","datetime","uidref","pname","composite","waveform","scoord3d","tcoord","table","ValueTypeValueTagName","TEXT","DATE","TIME","DATETIME","UIDREF","PNAME","CONTAINER","DicomSRContent","valueType","conceptNameCode","relationshipType","contentSequence","getSRContent","content","getMeasuredValue","getNumericMeasurement","getImageReference","getSpatialCoordinate","getSpatialCoordinate3D","valueTagName","contentSq","getDicomSRContentItem","contentItem","getSRContentFromValue","getConceptNameCode","measure","getMeasurementUnitsCode","numMeasure","AnnotationGroupFactory","contentTemplate","templateItem","mappingResource","templateId","getContentTemplate","dwvVersion","dwvPrefix","getDwvVersionFromImplementationClassUID","isDwv034Annotation","compareMin","compareMax","isVersionInBounds","rootConcept","srContent","dataLength","isClosed","numberOfPoints","firstPoint","lastPoint","line2","line3","getShapeFromScoord","subsubItem","nPoints","quantifName","quantifUnit","annotations","refSeriesSq","seriesUIDs","srScoord","pointPerimeter","getScoordFromShape","itemContentSequence","srImage","sopRef","imageRef","srUid","shortLabel","labelPosScoord","refPointsScoord","pointsScoord","quatifContent","conceptIds","CompletionFlag","VerificationFlag","DicomBufferToView","opt","modalityElement","dicomParser","columnsElement","rowsElement","samplesPerPixelElement","planarConfigurationElement","dataIndex","decodedData","fullSize","algo","getSyntaxDecompressionName","convert","MemoryLoader","canLoadMemory","filename","toUID","imageDataToBuffer","imageData","dataLen","getDefaultImage","imageBuffer","imageSpacing","canLoadFile","file","url","forceLoader","isNameAccept","acceptHeader","acceptValue","urlObjext","pathname","hasNoExt","hasDcmExt","contentType","searchParams","mem","tmpFile","File","loadFileAs","fileContentTypes","_opt","Text","memoryIO","progress","u8Array","partHeaderEndCb","partHeaderEndIndex","lines","boundaryStr","boundaryCb","boundaryLen","nextBoundaryIndex","part","partHeaderLines","semiColonIndex","dataBeginIndex","dataEndIndex","parseMultipart","_file","_mem","dataType","imageType","Blob","createObjectURL","domImage","canvas","ctx","seriesUID","lastModified","getViewFromDOMImage","src","hasImageExt","DataURL","videoDataStr","btoa","video","onloadedmetadata","videoWidth","videoHeight","ceil","duration","onseeked","imgBuffer","storeFrame","nextTime","currentTime","getViewFromDOMVideo","unzipPercent","async","then","JSZip","zip","FilesLoader","FileReader","readAsText","readAsDataURL","readAsArrayBuffer","LoadController","loadFiles","files","loadURLs","loadImageObject","getLoadingDataIds","fileIO","urlIO","loadType","eventInfo","loadtype","isFirstItem","eventInfoItem","isfirstitem","getNumberToPrecision","createDefaultReplaceFormat","OverlayData","configs","addAppListeners","addItemMeta","overlays","modElement","overlay","format","poElement","po0","po1","createOverlayData","DOM","infoKeys","createOverlayDataForDom","sliceOverlayData","mapFunc","isListening","removeAppListeners","wlPresetName","ToolConfig","AppOptions","tools","binders","viewOnFirstLoadItem","overlayConfig","rootDocument","App","getMetaData","getToolboxController","removeFromUndoStack","appToolList","toolName","toolClass","toolParams","appToolOptions","optionName","optionClassName","toolNamespace","charAt","optionClass","tOptions","resetLayout","loadFromUri","getUriQuery","onLoadEnd","state","protocol","host","decodeURIComponent","manifest","rootURL","getElementsByTagName","getAttribute","patientList","studyList","studyUID","seriesList","instanceList","link","decodeManifest","responseXML","decodeManifestQuery","replaceMode","repeatKeyReplaceMode","queryUri","inputQueryPairs","repeatKey","repeatList","baseUrl","gotOneArg","decodeKeyValueUri","dwvReplaceMode","decodeQuery","abortAllLoads","abortLoad","initWLDisplay","getViewConfigs","excludeStarConfig","getViewConfig","setDataViewConfigs","removeDataViewConfig","itemIndex","vls","dls","updateDataViewConfig","configToUpdate","dataKeys","getElementById","setLayerGroupsBinders","instances","isImage","isMeasurement","translate","statePosGroups","statePosKids","stateGroup","pointsArray","absPosition","absolutePosition","konvaToAnnotation","applyJsonState","jsonState","onResize","defaultOnKeydown","shiftKey","resetDisplay","resetZoom","setTool","tool","getOverlayData","toggleOverlayListeners","refMeta","refDataViewConfig","drawDataViewConfig","eventMetaData","isFirstLoadItem","groupId","isBaseLayer","flipFlags","baseViewLayer","refSeriesInstanceUID","refViewLayer","refViewController","refData","viewConfigOrientation","orientationCode","isViewUndefined","isViewAxial","isViewCoronal","isViewSagittal","flipOffset","flipScale","MaskSegmentHelper","hasSegment","getNumberOfSegments","maskHasSegments","numbers","unknowns","addSegment","removeSegment","updateSegment","DeleteSegmentCommand","isValid","ChangeSegmentColourCommand","newColour","MaskSegmentViewHelper","isHidden","addToHidden","removeFromHidden","getAlphaFunc","Scalar2D","Scalar3D"],"sourceRoot":""}