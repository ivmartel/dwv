!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("konva"),require("magic-wand-tool"),require("jszip")):"function"==typeof define&&define.amd?define(["konva","konmagic-wand-tool","jszip"],t):"object"==typeof exports?exports.dwv=t(require("konva"),require("magic-wand-tool"),require("jszip")):e.dwv=t(e.Konva,e.MagicWand,e.JSZip)}(this,(function(e,t,n){return function(){"use strict";var i={324:function(e){e.exports=t},654:function(e){e.exports=n},944:function(t){t.exports=e},976:function(e,t,n){e.exports=n.p+"984787daabc9f4ca39b3.js"}},r={};function o(e){var t=r[e];if(void 0!==t)return t.exports;var n=r[e]={exports:{}};return i[e](n,n.exports,o),n.exports}o.m=i,o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,{a:t}),t},o.d=function(e,t){for(var n in t)o.o(t,n)&&!o.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},o.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},function(){var e;o.g.importScripts&&(e=o.g.location+"");var t=o.g.document;if(!e&&t&&(t.currentScript&&"SCRIPT"===t.currentScript.tagName.toUpperCase()&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");if(n.length)for(var i=n.length-1;i>-1&&(!e||!/^http(s?):/.test(e));)e=n[i--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/^blob:/,"").replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),o.p=e}(),o.b=document.baseURI||self.location.href;var a={};o.r(a),o.d(a,{Annotation:function(){return Gr},AnnotationGroup:function(){return kr},AnnotationGroupFactory:function(){return na},App:function(){return Ca},AppOptions:function(){return va},ChangeSegmentColourCommand:function(){return Pa},Circle:function(){return Ar},ColourMap:function(){return p},DataElement:function(){return le},DeleteSegmentCommand:function(){return Ta},DicomCode:function(){return Kt},DicomData:function(){return Hi},DicomParser:function(){return Ye},DicomSRContent:function(){return Jo},DicomWriter:function(){return Yt},DrawController:function(){return Hr},DrawLayer:function(){return zr},DrawShapeHandler:function(){return Bi},Ellipse:function(){return Gi},Geometry:function(){return at},Image:function(){return $n},Index:function(){return s},LayerGroup:function(){return jr},MaskFactory:function(){return Wn},MaskSegment:function(){return wn},MaskSegmentHelper:function(){return Ia},MaskSegmentViewHelper:function(){return La},Matrix33:function(){return x},NumberRange:function(){return rt},Orientation:function(){return ut},OverlayData:function(){return fa},PlaneHelper:function(){return oi},Point:function(){return U},Point2D:function(){return F},Point3D:function(){return q},PositionHelper:function(){return si},Protractor:function(){return xr},RGB:function(){return D},ROI:function(){return vr},Rectangle:function(){return Rr},RescaleSlopeAndIntercept:function(){return Je},Scalar2D:function(){return wa},Scalar3D:function(){return Oa},ScrollWheel:function(){return pi},Size:function(){return $e},Spacing:function(){return ot},Tag:function(){return ge},ToolConfig:function(){return ya},ToolboxController:function(){return oo},Vector3D:function(){return O},View:function(){return ri},ViewConfig:function(){return Da},ViewController:function(){return li},ViewLayer:function(){return Si},WindowLevel:function(){return u},WriterRule:function(){return Qt},addTagsToDictionary:function(){return K},buildMultipart:function(){return Z},createImage:function(){return Kn},createMaskImage:function(){return Jn},createView:function(){return ii},custom:function(){return w},decoderScripts:function(){return ho},getAsSimpleElements:function(){return Pe},getDefaultDicomSegJson:function(){return zn},getDicomSRContentItem:function(){return ea},getDwvVersion:function(){return Oe},getElementsFromJSONTags:function(){return Zt},getEllipseIndices:function(){return ki},getLayerDetailsFromEvent:function(){return Yr},getMousePoint:function(){return hi},getOrientationName:function(){return St},getPixelDataTag:function(){return ve},getRectangleIndices:function(){return Er},getReverseOrientation:function(){return Fe},getSRContent:function(){return $o},getSegmentationCode:function(){return gn},getTagFromKey:function(){return me},getTouchPoints:function(){return di},getTypedArray:function(){return Be},getUID:function(){return Nt},hasDicomPrefix:function(){return xe},hexToRgb:function(){return v},i18n:function(){return M},isEqualRgb:function(){return y},labToUintLab:function(){return I},logger:function(){return c},luts:function(){return f},precisionRound:function(){return k},rgbToHex:function(){return C},srgbToCielab:function(){return P},toolList:function(){return Qr},toolOptions:function(){return Vr}});class s{#e;constructor(e){if(!e||void 0===e)throw new Error("Cannot create index with no values.");if(0===e.length)throw new Error("Cannot create index with empty values.");if(!e.every((function(e){return!isNaN(e)})))throw new Error("Cannot create index with non number values.");this.#e=e}get(e){return this.#e[e]}length(){return this.#e.length}toString(){return"("+this.#e.toString()+")"}getValues(){return this.#e.slice()}canCompare(e){return!!e&&this.length()===e.length()}equals(e){if(!this.canCompare(e))return!1;for(let t=0,n=this.length();t<n;++t)if(this.get(t)!==e.get(t))return!1;return!0}compare(e){if(!this.canCompare(e))return null;const t=[];for(let n=0,i=this.length();n<i;++n)this.get(n)!==e.get(n)&&t.push(n);return t}add(e){if(!this.canCompare(e))return null;const t=[];for(let n=0,i=this.length();n<i;++n)t.push(this.get(n)+e.get(n));return new s(t)}#t(e,t){const n=this.#e.slice();return e<n.length?n[e]+=t:console.warn("Cannot add to given dimension: ",e,n.length),new s(n)}next(e){return this.#t(e,1)}previous(e){return this.#t(e,-1)}getWithNew2D(e,t){const n=[e,t];for(let e=2,t=this.length();e<t;++e)n.push(this.get(e));return new s(n)}}class l{#n;#i;#r;#o;constructor(e,t){if(this.#n=e,this.#i=e.isID(),this.#r=Math.pow(2,t),!this.#i){this.#o=new Float32Array(this.#r);for(let e=0;e<this.#r;++e)this.#o[e]=this.#n.apply(e)}}getRSI(){return this.#n}getLength(){return this.#r}getValue(e){return this.#i?e:this.#o[e]}}const c={levels:{TRACE:0,DEBUG:1,INFO:2,WARN:3,ERROR:4},level:3,trace:function(e){this.level<=this.levels.TRACE&&console.trace(e)},debug:function(e){this.level<=this.levels.DEBUG&&console.debug(e)},info:function(e){this.level<=this.levels.INFO&&console.info(e)},warn:function(e){this.level<=this.levels.WARN&&console.warn(e)},error:function(e){this.level<=this.levels.ERROR&&console.error(e)}};class u{center;width;constructor(e,t){t<1&&(c.warn("Using minimum window width since input is not valid: "+t),t=1),this.center=e,this.width=t}equals(e){return null!=e&&this.center===e.center&&this.width===e.width}}class d{#a;#s=0;#l=0;#c=255;#u=null;#d=null;#h=null;#g=null;constructor(e){this.#a=e,this.#S()}getWindowLevel(){return this.#a}#S(){const e=this.#a.center,t=this.#a.width,n=e+this.#s;this.#u=n-.5-(t-1)/2,this.#d=n-.5+(t-1)/2,this.#h=(this.#c-this.#l)/(t-1),this.#g=(-(n-.5)/(t-1)+.5)*(this.#c-this.#l)+this.#l}setSignedOffset(e){this.#s=e,this.#S()}apply(e){return e<=this.#u?this.#l:e>this.#d?this.#c:e*this.#h+this.#g}}class h{#m;#p;#o;#f=0;#D=!0;constructor(e,t,n){if(this.#m=e,t){const e=this.#m.getLength();this.#f=e/2}else this.#f=0;this.#D=n}getVoiLut(){return this.#p}getModalityLut(){return this.#m}setVoiLut(e){if(this.#p=e,this.#p.setSignedOffset(this.#m.getRSI().getSlope()*this.#f),this.#D){const e=this.#m.getLength();this.#o=new Uint8ClampedArray(e);for(let t=0;t<e;++t)this.#o[t]=this.#p.apply(this.#m.getValue(t))}}getValue(e){return this.#D?this.#o[e+this.#f]:Math.floor(this.#p.apply(e+this.#f))}}function g(e){const t=[];for(let n=0;n<256;++n)t.push(e(n));return t}function S(e){return e}function m(e){return 255-e}class p{red;green;blue;constructor(e,t,n){this.red=e,this.green=t,this.blue=n}}const f={plain:{red:g(S),green:g(S),blue:g(S)},invPlain:{red:g(m),green:g(m),blue:g(m)},rainbow:{blue:[0,4,8,12,16,20,24,28,32,36,40,44,48,52,56,60,64,68,72,76,80,84,88,92,96,100,104,108,112,116,120,124,128,132,136,140,144,148,152,156,160,164,168,172,176,180,184,188,192,196,200,204,208,212,216,220,224,228,232,236,240,244,248,252,255,247,239,231,223,215,207,199,191,183,175,167,159,151,143,135,127,119,111,103,95,87,79,71,63,55,47,39,31,23,15,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],green:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,16,24,32,40,48,56,64,72,80,88,96,104,112,120,128,136,144,152,160,168,176,184,192,200,208,216,224,232,240,248,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,251,249,247,245,243,241,239,237,235,233,231,229,227,225,223,221,219,217,215,213,211,209,207,205,203,201,199,197,195,193,192,189,186,183,180,177,174,171,168,165,162,159,156,153,150,147,144,141,138,135,132,129,126,123,120,117,114,111,108,105,102,99,96,93,90,87,84,81,78,75,72,69,66,63,60,57,54,51,48,45,42,39,36,33,30,27,24,21,18,15,12,9,6,3],red:[0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,62,60,58,56,54,52,50,48,46,44,42,40,38,36,34,32,30,28,26,24,22,20,18,16,14,12,10,8,6,4,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,8,12,16,20,24,28,32,36,40,44,48,52,56,60,64,68,72,76,80,84,88,92,96,100,104,108,112,116,120,124,128,132,136,140,144,148,152,156,160,164,168,172,176,180,184,188,192,196,200,204,208,212,216,220,224,228,232,236,240,244,248,252,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255]},hot:{red:g((function(e){const t=3*e;return t>255?255:t})),green:g((function(e){const t=256/3;let n=0;return e>=t&&(n=3*(e-t),n>255)?255:n})),blue:g((function(e){const t=256/3;let n=0;return e>=2*t&&(n=3*(e-2*t),n>255)?255:n}))},hot_iron:{red:[0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,162,164,166,168,170,172,174,176,178,180,182,184,186,188,190,192,194,196,198,200,202,204,206,208,210,212,214,216,218,220,222,224,226,228,230,232,234,236,238,240,242,244,246,248,250,252,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255],green:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,162,164,166,168,170,172,174,176,178,180,182,184,186,188,190,192,194,196,198,200,202,204,206,208,210,212,214,216,218,220,222,224,226,228,230,232,234,236,238,240,242,244,246,248,250,252,255],blue:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,8,12,16,20,24,28,32,36,40,44,48,52,56,60,64,68,72,76,80,84,88,92,96,100,104,108,112,116,120,124,128,132,136,140,144,148,152,156,160,164,168,172,176,180,184,188,192,196,200,204,208,212,216,220,224,228,232,236,240,244,248,252,255]},pet:{red:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,49,51,53,55,57,59,61,63,65,67,69,71,73,75,77,79,81,83,85,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,162,164,166,168,170,171,173,175,177,179,181,183,185,187,189,191,193,195,197,199,201,203,205,207,209,211,213,215,217,219,221,223,225,227,229,231,233,235,237,239,241,243,245,247,249,251,253,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255],green:[0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,65,67,69,71,73,75,77,79,81,83,85,87,89,91,93,95,97,99,101,103,105,107,109,111,113,115,117,119,121,123,125,128,126,124,122,120,118,116,114,112,110,108,106,104,102,100,98,96,94,92,90,88,86,84,82,80,78,76,74,72,70,68,66,64,63,61,59,57,55,53,51,49,47,45,43,41,39,37,35,33,31,29,27,25,23,21,19,17,15,13,11,9,7,5,3,1,0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,162,164,166,168,170,172,174,176,178,180,182,184,186,188,190,192,194,196,198,200,202,204,206,208,210,212,214,216,218,220,222,224,226,228,230,232,234,236,238,240,242,244,246,248,250,252,255],blue:[0,1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,49,51,53,55,57,59,61,63,65,67,69,71,73,75,77,79,81,83,85,87,89,91,93,95,97,99,101,103,105,107,109,111,113,115,117,119,121,123,125,127,129,131,133,135,137,139,141,143,145,147,149,151,153,155,157,159,161,163,165,167,169,171,173,175,177,179,181,183,185,187,189,191,193,195,197,199,201,203,205,207,209,211,213,215,217,219,221,223,225,227,229,231,233,235,237,239,241,243,245,247,249,251,253,255,252,248,244,240,236,232,228,224,220,216,212,208,204,200,196,192,188,184,180,176,172,168,164,160,156,152,148,144,140,136,132,128,124,120,116,112,108,104,100,96,92,88,84,80,76,72,68,64,60,56,52,48,44,40,36,32,28,24,20,16,12,8,4,0,4,8,12,16,20,24,28,32,36,40,44,48,52,56,60,64,68,72,76,80,85,89,93,97,101,105,109,113,117,121,125,129,133,137,141,145,149,153,157,161,165,170,174,178,182,186,190,194,198,202,206,210,214,218,222,226,230,234,238,242,246,250,255]},hot_metal_blue:{red:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,6,9,12,15,18,21,24,26,29,32,35,38,41,44,47,50,52,55,57,59,62,64,66,69,71,74,76,78,81,83,85,88,90,93,96,99,102,105,108,111,114,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,166,169,172,175,178,181,184,187,190,194,198,201,205,209,213,217,221,224,228,232,236,240,244,247,251,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255],green:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,9,11,13,15,17,19,21,23,24,26,28,30,32,34,36,38,40,41,43,45,47,49,51,53,55,56,58,60,62,64,66,68,70,72,73,75,77,79,81,83,85,87,88,90,92,94,96,98,100,102,104,105,107,109,111,113,115,117,119,120,122,124,126,128,130,132,134,136,137,139,141,143,145,147,149,151,152,154,156,158,160,162,164,166,168,169,171,173,175,177,179,181,183,184,186,188,190,192,194,196,198,200,201,203,205,207,209,211,213,215,216,218,220,222,224,226,228,229,231,233,235,237,239,240,242,244,246,248,250,251,253,255],blue:[0,2,4,6,8,10,12,14,16,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,49,51,53,55,57,59,61,63,65,67,69,71,73,75,77,79,81,83,84,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,117,119,121,123,125,127,129,131,133,135,137,139,141,143,145,147,149,151,153,155,157,159,161,163,165,167,169,171,173,175,177,179,181,183,184,186,188,190,192,194,196,198,200,197,194,191,188,185,182,179,176,174,171,168,165,162,159,156,153,150,144,138,132,126,121,115,109,103,97,91,85,79,74,68,62,56,50,47,44,41,38,35,32,29,26,24,21,18,15,12,9,6,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,6,9,12,15,18,21,24,26,29,32,35,38,41,44,47,50,53,56,59,62,65,68,71,74,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,176,179,182,185,188,191,194,197,200,203,206,210,213,216,219,223,226,229,232,236,239,242,245,249,252,255]},pet_20step:{red:[0,0,0,0,0,0,0,0,0,0,0,0,0,96,96,96,96,96,96,96,96,96,96,96,96,96,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,80,80,80,80,80,80,80,80,80,80,80,80,80,96,96,96,96,96,96,96,96,96,96,96,96,96,112,112,112,112,112,112,112,112,112,112,112,112,112,128,128,128,128,128,128,128,128,128,128,128,128,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,80,80,80,80,80,80,80,80,80,80,80,80,80,64,64,64,64,64,64,64,64,64,64,64,64,224,224,224,224,224,224,224,224,224,224,224,224,224,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,192,192,192,192,192,192,192,192,192,192,192,192,192,176,176,176,176,176,176,176,176,176,176,176,176,176,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255],green:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,80,80,80,80,80,80,80,80,80,80,80,80,80,96,96,96,96,96,96,96,96,96,96,96,96,96,112,112,112,112,112,112,112,112,112,112,112,112,112,128,128,128,128,128,128,128,128,128,128,128,128,96,96,96,96,96,96,96,96,96,96,96,96,96,144,144,144,144,144,144,144,144,144,144,144,144,144,192,192,192,192,192,192,192,192,192,192,192,192,192,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,208,208,208,208,208,208,208,208,208,208,208,208,208,176,176,176,176,176,176,176,176,176,176,176,176,176,144,144,144,144,144,144,144,144,144,144,144,144,96,96,96,96,96,96,96,96,96,96,96,96,96,48,48,48,48,48,48,48,48,48,48,48,48,48,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255],blue:[0,0,0,0,0,0,0,0,0,0,0,0,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,112,112,112,112,112,112,112,112,112,112,112,112,128,128,128,128,128,128,128,128,128,128,128,128,128,176,176,176,176,176,176,176,176,176,176,176,176,176,192,192,192,192,192,192,192,192,192,192,192,192,192,224,224,224,224,224,224,224,224,224,224,224,224,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,80,80,80,80,80,80,80,80,80,80,80,80,80,64,64,64,64,64,64,64,64,64,64,64,64,80,80,80,80,80,80,80,80,80,80,80,80,80,96,96,96,96,96,96,96,96,96,96,96,96,96,64,64,64,64,64,64,64,64,64,64,64,64,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255]}};class D{r;g;b;constructor(e,t,n){this.r=e,this.g=t,this.b=n}}function y(e,t){return null!==e&&null!==t&&void 0!==e&&void 0!==t&&e.r===t.r&&e.g===t.g&&e.b===t.b}function v(e){return{r:parseInt(e.substring(1,3),16),g:parseInt(e.substring(3,5),16),b:parseInt(e.substring(5,7),16)}}function C(e){return"#"+((1<<24)+(e.r<<16)+(e.g<<8)+e.b).toString(16).slice(1)}function I(e){return{l:655.35*e.l,a:257*e.a+32896,b:257*e.b+32896}}const T={x:95.0489,y:100,z:108.884};function P(e){return function(e){function t(e){let t=null;return t=e>.008856452?Math.pow(e,.333333333):7.787037037*e+.137931034,t}const n=T,i=t(e.y/n.y);return{l:116*i-16,a:500*(t(e.x/n.x)-i),b:200*(i-t(e.z/n.z))}}(function(e){function t(e){let t=null;return t=e<=.04045?e/12.92:Math.pow((e+.055)/1.055,2.4),t}const n=t(e.r/255),i=t(e.g/255),r=t(e.b/255);return{x:100*(.4124*n+.3576*i+.1805*r),y:100*(.2126*n+.7152*i+.0722*r),z:100*(.0193*n+.1192*i+.9505*r)}}(e))}function L(e){const t={Yellow:"#ffff00",Red:"#ff0000",White:"#ffffff",Green:"#008000",Blue:"#0000ff",Lime:"#00ff00",Fuchsia:"#ff00ff",Black:"#000000"};let n="#ffff00";return void 0!==t[e]&&(n=t[e]),n}const w={wlPresets:void 0,labelTexts:void 0,openRoiDialog:void 0,getTagTime:void 0,getTagPixelUnit:void 0};class O{#y;#v;#C;constructor(e,t,n){this.#y=e,this.#v=t,this.#C=n}getX(){return this.#y}getY(){return this.#v}getZ(){return this.#C}equals(e){return null!==e&&this.#y===e.getX()&&this.#v===e.getY()&&this.#C===e.getZ()}toString(){return"("+this.#y+", "+this.#v+", "+this.#C+")"}norm(){return Math.sqrt(this.#y*this.#y+this.#v*this.#v+this.#C*this.#C)}crossProduct(e){return new O(this.#v*e.getZ()-e.getY()*this.#C,this.#C*e.getX()-e.getZ()*this.#y,this.#y*e.getY()-e.getX()*this.#v)}dotProduct(e){return this.#y*e.getX()+this.#v*e.getY()+this.#C*e.getZ()}isCodirectional(e){return this.dotProduct(e)>0}}Number.EPSILON;const b=1e-4;function A(e,t,n){return void 0===n&&(n=Number.EPSILON),Math.abs(e-t)<n}class x{#e;#I;constructor(e){this.#e=e}get(e,t){return this.#e[3*e+t]}getInverse(){return void 0===this.#I&&(this.#I=function(e){const t=e.get(0,0),n=e.get(0,1),i=e.get(0,2),r=e.get(1,0),o=e.get(1,1),a=e.get(1,2),s=e.get(2,0),l=e.get(2,1),u=e.get(2,2),d=o*u-a*l,h=a*s-r*u,g=r*l-o*s;let S=t*d+n*h+i*g;if(0!==S)return S=1/S,new x([S*d,S*(i*l-n*u),S*(n*a-i*o),S*h,S*(t*u-i*s),S*(i*r-t*a),S*g,S*(n*s-t*l),S*(t*o-n*r)]);c.warn("Cannot invert 3*3 matrix with zero determinant.")}(this)),this.#I}equals(e){for(let t=0;t<3;++t)for(let n=0;n<3;++n)if(this.get(t,n)!==e.get(t,n))return!1;return!0}isSimilar(e,t){for(let n=0;n<3;++n)for(let i=0;i<3;++i)if(!A(this.get(n,i),e.get(n,i),t))return!1;return!0}toString(){let e="[";for(let t=0;t<3;++t){0!==t&&(e+=", \n ");for(let n=0;n<3;++n)0!==n&&(e+=", "),e+=this.get(t,n)}return e+="]",e}multiply(e){const t=[];for(let n=0;n<3;++n)for(let i=0;i<3;++i){let r=0;for(let t=0;t<3;++t)r+=this.get(n,t)*e.get(t,i);t.push(r)}return new x(t)}getAbs(){const e=[];for(let t=0;t<3;++t)for(let n=0;n<3;++n)e.push(Math.abs(this.get(t,n)));return new x(e)}multiplyArray3D(e){if(3!==e.length)throw new Error("Cannot multiply 3x3 matrix with non 3D array: "+e.length);const t=[];for(let n=0;n<3;++n){let i=0;for(let t=0;t<3;++t)i+=this.get(n,t)*e[t];t.push(i)}return t}multiplyVector3D(e){const t=this.multiplyArray3D([e.getX(),e.getY(),e.getZ()]);return new O(t[0],t[1],t[2])}multiplyPoint3D(e){const t=this.multiplyArray3D([e.getX(),e.getY(),e.getZ()]);return new q(t[0],t[1],t[2])}multiplyIndex3D(e){const t=this.multiplyArray3D(e.getValues());return new s(t)}getRowAbsMax(e){const t=[Math.abs(this.get(e,0)),Math.abs(this.get(e,1)),Math.abs(this.get(e,2))],n=Math.max.apply(null,t),i=t.indexOf(n);return{value:this.get(e,i),index:i}}getColAbsMax(e){const t=[Math.abs(this.get(0,e)),Math.abs(this.get(1,e)),Math.abs(this.get(2,e))],n=Math.max.apply(null,t),i=t.indexOf(n);return{value:this.get(i,e),index:i}}asOneAndZeros(){const e=[];for(let t=0;t<3;++t){const n=this.getRowAbsMax(t),i=n.value>0?1:-1;for(let t=0;t<3;++t)t===n.index?e.push(1*i):e.push(0)}return new x(e)}getThirdColMajorDirection(){return this.getColAbsMax(2).index}}function R(){return new x([1,0,0,0,1,0,0,0,1])}function E(e){return e.equals(R())}class F{#y;#v;constructor(e,t){this.#y=e,this.#v=t}getX(){return this.#y}getY(){return this.#v}getValues(){return[this.#y,this.#v]}getCentroid(){return this}equals(e){return null!=e&&this.#y===e.getX()&&this.#v===e.getY()}toString(){return"("+this.#y+", "+this.#v+")"}getDistance(e){const t=this.#y-e.getX(),n=this.#v-e.getY();return Math.sqrt(t*t+n*n)}}class q{#y;#v;#C;constructor(e,t,n){this.#y=e,this.#v=t,this.#C=n}getX(){return this.#y}getY(){return this.#v}getZ(){return this.#C}getValues(){return[this.#y,this.#v,this.#C]}equals(e){return null!==e&&this.#y===e.getX()&&this.#v===e.getY()&&this.#C===e.getZ()}isSimilar(e,t){return null!==e&&A(this.#y,e.getX(),t)&&A(this.#v,e.getY(),t)&&A(this.#C,e.getZ(),t)}toString(){return"("+this.#y+", "+this.#v+", "+this.#C+")"}getDistance(e){return Math.sqrt(this.#T(e))}#T(e){const t=this.#y-e.getX(),n=this.#v-e.getY(),i=this.#C-e.getZ();return t*t+n*n+i*i}getClosest(e){let t=0,n=this.#T(e[t]);for(let i=0;i<e.length;++i){const r=this.#T(e[i]);r<n&&(t=i,n=r)}return t}minus(e){return new O(this.#y-e.getX(),this.#v-e.getY(),this.#C-e.getZ())}}class U{#e;constructor(e){if(!e||void 0===e)throw new Error("Cannot create point with no values.");if(0===e.length)throw new Error("Cannot create point with empty values.");if(!e.every((function(e){return!isNaN(e)})))throw new Error("Cannot create point with non number values.");this.#e=e}get(e){return this.#e[e]}length(){return this.#e.length}toString(){return"("+this.#e.toString()+")"}getValues(){return this.#e.slice()}canCompare(e){return!!e&&this.length()===e.length()}equals(e){if(!this.canCompare(e))return!1;for(let t=0,n=this.length();t<n;++t)if(this.get(t)!==e.get(t))return!1;return!0}compare(e){if(!this.canCompare(e))return null;const t=[];for(let n=0,i=this.length();n<i;++n)this.get(n)!==e.get(n)&&t.push(n);return t}get3D(){return new q(this.get(0),this.get(1),this.get(2))}add(e){if(!this.canCompare(e))return null;const t=[],n=this.getValues(),i=e.getValues();for(let e=0;e<n.length;++e)t.push(n[e]+i[e]);return new U(t)}mergeWith3D(e){const t=this.getValues();return t[0]=e.getX(),t[1]=e.getY(),t[2]=e.getZ(),new U(t)}}const M={t(e){let t=e;const n=e.split(".");return 2===n.length&&"unit"===n[0]&&(t={mm:"mm",cm2:"cm²",degree:"°"}[n[1]]),t}};function Q(e,t,n){if(null==e||null==t)return!1;const i=n>0?0|n:0;return e.substring(i,i+t.length)===t}function V(e,t){return null!=e&&null!=t&&e.substring(e.length-t.length)===t}function N(e){const t=[];if(null==e)return t;const n=/{(\w+)}/g;let i=n.exec(e);for(;i;)t.push(i[1]),i=n.exec(e);return t}function B(e){let t=null;if(null!=e&&"."!==e[0]){const n=e.toLowerCase().split(".");1!==n.length&&(t=n.pop(),/[a-z]/.test(t)&&!t.includes("/")||(t=null))}return t}function G(e){const t=new Uint8Array(e.length);for(let n=0,i=e.length;n<i;n++)t[n]=e.charCodeAt(n);return t}function k(e,t){const n=Math.pow(10,t),i=.01/n;return Math.round(e*n+i)/n}function H(e,t){if(void 0===t){t=[];for(let n=0;n<e.length;++n)t.push(n)}for(let n=0;n<t.length;++n)if(t[n]>=e.length)throw new Error("Non valid dimension for toStringId");let n="";for(let i=0;i<t.length;++i)0!==i&&(n+="_"),n+="#"+t[i]+"-"+e[t[i]];return n}function z(e,t){return null!==e&&null!==t&&void 0!==e&&void 0!==t&&W(e.slice().sort(),t.slice().sort())}function W(e,t){return null!==e&&null!==t&&void 0!==e&&void 0!==t&&e.length===t.length&&e.every((function(e,n){return e===t[n]}))}function Y(e){return String.fromCharCode.apply(String,e)}function X(e,t,n,i){(void 0===n||n<0||n>=e.length)&&(n=0),(void 0===i||i<=n||i>e.length)&&(i=e.length);for(let r=n;r<i;++r)if(t(e[r],r,e))return r}function j(e){return function(t,n,i){for(let t=0;t<e.length;++t)if(i[n+t]!==e[t])return!1;return!0}}function Z(e,t){const n="\r\n";let i=0;const r=[];for(let o=0;o<e.length;++o){let a="";0!==o&&(a+=n),a+="--"+t+n;const s=Object.keys(e[o]);for(let t=0;t<s.length;++t){const i=s[t];"data"!==i&&(a+=i+": "+e[o][i]+n)}a+=n;const l=G(a);r.push(l),i+=l.byteLength+e[o].data.byteLength}const o=G("\r\n--"+t+"--"+n),a=new Uint8Array(i+o.byteLength);let s=0;for(let t=0;t<e.length;++t)a.set(r[t],s),s+=r[t].byteLength,a.set(new Uint8Array(e[t].data),s),s+=e[t].data.byteLength;return a.set(o,s),a}const _={"0000":{"0000":["UL","1","CommandGroupLength"],"0001":["UL","1","CommandLengthToEnd"],"0002":["UI","1","AffectedSOPClassUID"],"0003":["UI","1","RequestedSOPClassUID"],"0010":["SH","1","CommandRecognitionCode"],"0100":["US","1","CommandField"],"0110":["US","1","MessageID"],"0120":["US","1","MessageIDBeingRespondedTo"],"0200":["AE","1","Initiator"],"0300":["AE","1","Receiver"],"0400":["AE","1","FindLocation"],"0600":["AE","1","MoveDestination"],"0700":["US","1","Priority"],"0800":["US","1","CommandDataSetType"],"0850":["US","1","NumberOfMatches"],"0860":["US","1","ResponseSequenceNumber"],"0900":["US","1","Status"],"0901":["AT","1-n","OffendingElement"],"0902":["LO","1","ErrorComment"],"0903":["US","1","ErrorID"],1e3:["UI","1","AffectedSOPInstanceUID"],1001:["UI","1","RequestedSOPInstanceUID"],1002:["US","1","EventTypeID"],1005:["AT","1-n","AttributeIdentifierList"],1008:["US","1","ActionTypeID"],1020:["US","1","NumberOfRemainingSuboperations"],1021:["US","1","NumberOfCompletedSuboperations"],1022:["US","1","NumberOfFailedSuboperations"],1023:["US","1","NumberOfWarningSuboperations"],1030:["AE","1","MoveOriginatorApplicationEntityTitle"],1031:["US","1","MoveOriginatorMessageID"],4e3:["LT","1","DialogReceiver"],4010:["LT","1","TerminalType"],5010:["SH","1","MessageSetID"],5020:["SH","1","EndMessageID"],5110:["LT","1","DisplayFormat"],5120:["LT","1","PagePositionID"],5130:["CS","1","TextFormatID"],5140:["CS","1","NormalReverse"],5150:["CS","1","AddGrayScale"],5160:["CS","1","Borders"],5170:["IS","1","Copies"],5180:["CS","1","CommandMagnificationType"],5190:["CS","1","Erase"],"51A0":["CS","1","Print"],"51B0":["US","1-n","Overlays"]},"0002":{"0000":["UL","1","FileMetaInformationGroupLength"],"0001":["OB","1","FileMetaInformationVersion"],"0002":["UI","1","MediaStorageSOPClassUID"],"0003":["UI","1","MediaStorageSOPInstanceUID"],"0010":["UI","1","TransferSyntaxUID"],"0012":["UI","1","ImplementationClassUID"],"0013":["SH","1","ImplementationVersionName"],"0016":["AE","1","SourceApplicationEntityTitle"],"0017":["AE","1","SendingApplicationEntityTitle"],"0018":["AE","1","ReceivingApplicationEntityTitle"],"0026":["UR","1","SourcePresentationAddress"],"0027":["UR","1","SendingPresentationAddress"],"0028":["UR","1","ReceivingPresentationAddress"],"0031":["OB","1","RTVMetaInformationVersion"],"0032":["UI","1","RTVCommunicationSOPClassUID"],"0033":["UI","1","RTVCommunicationSOPInstanceUID"],"0035":["OB","1","RTVSourceIdentifier"],"0036":["OB","1","RTVFlowIdentifier"],"0037":["UL","1","RTVFlowRTPSamplingRate"],"0038":["FD","1","RTVFlowActualFrameDuration"],"0100":["UI","1","PrivateInformationCreatorUID"],"0102":["OB","1","PrivateInformation"]},"0004":{"0000":["UL","1","GenericGroupLength"],1130:["CS","1","FileSetID"],1141:["CS","1-8","FileSetDescriptorFileID"],1142:["CS","1","SpecificCharacterSetOfFileSetDescriptorFile"],1200:["UL","1","OffsetOfTheFirstDirectoryRecordOfTheRootDirectoryEntity"],1202:["UL","1","OffsetOfTheLastDirectoryRecordOfTheRootDirectoryEntity"],1212:["US","1","FileSetConsistencyFlag"],1220:["SQ","1","DirectoryRecordSequence"],1400:["UL","1","OffsetOfTheNextDirectoryRecord"],1410:["US","1","RecordInUseFlag"],1420:["UL","1","OffsetOfReferencedLowerLevelDirectoryEntity"],1430:["CS","1","DirectoryRecordType"],1432:["UI","1","PrivateRecordUID"],1500:["CS","1-8","ReferencedFileID"],1504:["UL","1","MRDRDirectoryRecordOffset"],1510:["UI","1","ReferencedSOPClassUIDInFile"],1511:["UI","1","ReferencedSOPInstanceUIDInFile"],1512:["UI","1","ReferencedTransferSyntaxUIDInFile"],"151A":["UI","1-n","ReferencedRelatedGeneralSOPClassUIDInFile"],1600:["UL","1","NumberOfReferences"]},"0008":{"0000":["UL","1","GenericGroupLength"],"0001":["UL","1","LengthToEnd"],"0005":["CS","1-n","SpecificCharacterSet"],"0006":["SQ","1","LanguageCodeSequence"],"0008":["CS","2-n","ImageType"],"0010":["SH","1","RecognitionCode"],"0012":["DA","1","InstanceCreationDate"],"0013":["TM","1","InstanceCreationTime"],"0014":["UI","1","InstanceCreatorUID"],"0015":["DT","1","InstanceCoercionDateTime"],"0016":["UI","1","SOPClassUID"],"0018":["UI","1","SOPInstanceUID"],"001A":["UI","1-n","RelatedGeneralSOPClassUID"],"001B":["UI","1","OriginalSpecializedSOPClassUID"],"0020":["DA","1","StudyDate"],"0021":["DA","1","SeriesDate"],"0022":["DA","1","AcquisitionDate"],"0023":["DA","1","ContentDate"],"0024":["DA","1","OverlayDate"],"0025":["DA","1","CurveDate"],"002A":["DT","1","AcquisitionDateTime"],"0030":["TM","1","StudyTime"],"0031":["TM","1","SeriesTime"],"0032":["TM","1","AcquisitionTime"],"0033":["TM","1","ContentTime"],"0034":["TM","1","OverlayTime"],"0035":["TM","1","CurveTime"],"0040":["US","1","DataSetType"],"0041":["LO","1","DataSetSubtype"],"0042":["CS","1","NuclearMedicineSeriesType"],"0050":["SH","1","AccessionNumber"],"0051":["SQ","1","IssuerOfAccessionNumberSequence"],"0052":["CS","1","QueryRetrieveLevel"],"0053":["CS","1","QueryRetrieveView"],"0054":["AE","1-n","RetrieveAETitle"],"0055":["AE","1","StationAETitle"],"0056":["CS","1","InstanceAvailability"],"0058":["UI","1-n","FailedSOPInstanceUIDList"],"0060":["CS","1","Modality"],"0061":["CS","1-n","ModalitiesInStudy"],"0062":["UI","1-n","SOPClassesInStudy"],"0063":["SQ","1","AnatomicRegionsInStudyCodeSequence"],"0064":["CS","1","ConversionType"],"0068":["CS","1","PresentationIntentType"],"0070":["LO","1","Manufacturer"],"0080":["LO","1","InstitutionName"],"0081":["ST","1","InstitutionAddress"],"0082":["SQ","1","InstitutionCodeSequence"],"0090":["PN","1","ReferringPhysicianName"],"0092":["ST","1","ReferringPhysicianAddress"],"0094":["SH","1-n","ReferringPhysicianTelephoneNumbers"],"0096":["SQ","1","ReferringPhysicianIdentificationSequence"],"009C":["PN","1-n","ConsultingPhysicianName"],"009D":["SQ","1","ConsultingPhysicianIdentificationSequence"],"0100":["SH","1","CodeValue"],"0101":["LO","1","ExtendedCodeValue"],"0102":["SH","1","CodingSchemeDesignator"],"0103":["SH","1","CodingSchemeVersion"],"0104":["LO","1","CodeMeaning"],"0105":["CS","1","MappingResource"],"0106":["DT","1","ContextGroupVersion"],"0107":["DT","1","ContextGroupLocalVersion"],"0108":["LT","1","ExtendedCodeMeaning"],"0109":["SQ","1","CodingSchemeResourcesSequence"],"010A":["CS","1","CodingSchemeURLType"],"010B":["CS","1","ContextGroupExtensionFlag"],"010C":["UI","1","CodingSchemeUID"],"010D":["UI","1","ContextGroupExtensionCreatorUID"],"010E":["UR","1","CodingSchemeURL"],"010F":["CS","1","ContextIdentifier"],"0110":["SQ","1","CodingSchemeIdentificationSequence"],"0112":["LO","1","CodingSchemeRegistry"],"0114":["ST","1","CodingSchemeExternalID"],"0115":["ST","1","CodingSchemeName"],"0116":["ST","1","CodingSchemeResponsibleOrganization"],"0117":["UI","1","ContextUID"],"0118":["UI","1","MappingResourceUID"],"0119":["UC","1","LongCodeValue"],"0120":["UR","1","URNCodeValue"],"0121":["SQ","1","EquivalentCodeSequence"],"0122":["LO","1","MappingResourceName"],"0123":["SQ","1","ContextGroupIdentificationSequence"],"0124":["SQ","1","MappingResourceIdentificationSequence"],"0201":["SH","1","TimezoneOffsetFromUTC"],"0202":["","",""],"0220":["SQ","1","ResponsibleGroupCodeSequence"],"0221":["CS","1","EquipmentModality"],"0222":["LO","1","ManufacturerRelatedModelGroup"],"0300":["SQ","1","PrivateDataElementCharacteristicsSequence"],"0301":["US","1","PrivateGroupReference"],"0302":["LO","1","PrivateCreatorReference"],"0303":["CS","1","BlockIdentifyingInformationStatus"],"0304":["US","1-n","NonidentifyingPrivateElements"],"0305":["SQ","1","DeidentificationActionSequence"],"0306":["US","1-n","IdentifyingPrivateElements"],"0307":["CS","1","DeidentificationAction"],"0308":["US","1","PrivateDataElement"],"0309":["UL","1-3","PrivateDataElementValueMultiplicity"],"030A":["CS","1","PrivateDataElementValueRepresentation"],"030B":["UL","1-2","PrivateDataElementNumberOfItems"],"030C":["UC","1","PrivateDataElementName"],"030D":["UC","1","PrivateDataElementKeyword"],"030E":["UT","1","PrivateDataElementDescription"],"030F":["UT","1","PrivateDataElementEncoding"],"0310":["SQ","1","PrivateDataElementDefinitionSequence"],1e3:["AE","1","NetworkID"],1010:["SH","1","StationName"],1030:["LO","1","StudyDescription"],1032:["SQ","1","ProcedureCodeSequence"],"103E":["LO","1","SeriesDescription"],"103F":["SQ","1","SeriesDescriptionCodeSequence"],1040:["LO","1","InstitutionalDepartmentName"],1041:["SQ","1","InstitutionalDepartmentTypeCodeSequence"],1048:["PN","1-n","PhysiciansOfRecord"],1049:["SQ","1","PhysiciansOfRecordIdentificationSequence"],1050:["PN","1-n","PerformingPhysicianName"],1052:["SQ","1","PerformingPhysicianIdentificationSequence"],1060:["PN","1-n","NameOfPhysiciansReadingStudy"],1062:["SQ","1","PhysiciansReadingStudyIdentificationSequence"],1070:["PN","1-n","OperatorsName"],1072:["SQ","1","OperatorIdentificationSequence"],1080:["LO","1-n","AdmittingDiagnosesDescription"],1084:["SQ","1","AdmittingDiagnosesCodeSequence"],1090:["LO","1","ManufacturerModelName"],1100:["SQ","1","ReferencedResultsSequence"],1110:["SQ","1","ReferencedStudySequence"],1111:["SQ","1","ReferencedPerformedProcedureStepSequence"],1115:["SQ","1","ReferencedSeriesSequence"],1120:["SQ","1","ReferencedPatientSequence"],1125:["SQ","1","ReferencedVisitSequence"],1130:["SQ","1","ReferencedOverlaySequence"],1134:["SQ","1","ReferencedStereometricInstanceSequence"],"113A":["SQ","1","ReferencedWaveformSequence"],1140:["SQ","1","ReferencedImageSequence"],1145:["SQ","1","ReferencedCurveSequence"],"114A":["SQ","1","ReferencedInstanceSequence"],"114B":["SQ","1","ReferencedRealWorldValueMappingInstanceSequence"],1150:["UI","1","ReferencedSOPClassUID"],1155:["UI","1","ReferencedSOPInstanceUID"],1156:["SQ","1","DefinitionSourceSequence"],"115A":["UI","1-n","SOPClassesSupported"],1160:["IS","1-n","ReferencedFrameNumber"],1161:["UL","1-n","SimpleFrameList"],1162:["UL","3-3n","CalculatedFrameList"],1163:["FD","2","TimeRange"],1164:["SQ","1","FrameExtractionSequence"],1167:["UI","1","MultiFrameSourceSOPInstanceUID"],1190:["UR","1","RetrieveURL"],1195:["UI","1","TransactionUID"],1196:["US","1","WarningReason"],1197:["US","1","FailureReason"],1198:["SQ","1","FailedSOPSequence"],1199:["SQ","1","ReferencedSOPSequence"],"119A":["SQ","1","OtherFailuresSequence"],1200:["SQ","1","StudiesContainingOtherReferencedInstancesSequence"],1250:["SQ","1","RelatedSeriesSequence"],2110:["CS","1","LossyImageCompressionRetired"],2111:["ST","1","DerivationDescription"],2112:["SQ","1","SourceImageSequence"],2120:["SH","1","StageName"],2122:["IS","1","StageNumber"],2124:["IS","1","NumberOfStages"],2127:["SH","1","ViewName"],2128:["IS","1","ViewNumber"],2129:["IS","1","NumberOfEventTimers"],"212A":["IS","1","NumberOfViewsInStage"],2130:["DS","1-n","EventElapsedTimes"],2132:["LO","1-n","EventTimerNames"],2133:["SQ","1","EventTimerSequence"],2134:["FD","1","EventTimeOffset"],2135:["SQ","1","EventCodeSequence"],2142:["IS","1","StartTrim"],2143:["IS","1","StopTrim"],2144:["IS","1","RecommendedDisplayFrameRate"],2200:["CS","1","TransducerPosition"],2204:["CS","1","TransducerOrientation"],2208:["CS","1","AnatomicStructure"],2218:["SQ","1","AnatomicRegionSequence"],2220:["SQ","1","AnatomicRegionModifierSequence"],2228:["SQ","1","PrimaryAnatomicStructureSequence"],2229:["SQ","1","AnatomicStructureSpaceOrRegionSequence"],2230:["SQ","1","PrimaryAnatomicStructureModifierSequence"],2240:["SQ","1","TransducerPositionSequence"],2242:["SQ","1","TransducerPositionModifierSequence"],2244:["SQ","1","TransducerOrientationSequence"],2246:["SQ","1","TransducerOrientationModifierSequence"],2251:["SQ","1","AnatomicStructureSpaceOrRegionCodeSequenceTrial"],2253:["SQ","1","AnatomicPortalOfEntranceCodeSequenceTrial"],2255:["SQ","1","AnatomicApproachDirectionCodeSequenceTrial"],2256:["ST","1","AnatomicPerspectiveDescriptionTrial"],2257:["SQ","1","AnatomicPerspectiveCodeSequenceTrial"],2258:["ST","1","AnatomicLocationOfExaminingInstrumentDescriptionTrial"],2259:["SQ","1","AnatomicLocationOfExaminingInstrumentCodeSequenceTrial"],"225A":["SQ","1","AnatomicStructureSpaceOrRegionModifierCodeSequenceTrial"],"225C":["SQ","1","OnAxisBackgroundAnatomicStructureCodeSequenceTrial"],3001:["SQ","1","AlternateRepresentationSequence"],3002:["UI","1-n","AvailableTransferSyntaxUID"],3010:["UI","1-n","IrradiationEventUID"],3011:["SQ","1","SourceIrradiationEventSequence"],3012:["UI","1","RadiopharmaceuticalAdministrationEventUID"],4e3:["LT","1","IdentifyingComments"],9007:["CS","4","FrameType"],9092:["SQ","1","ReferencedImageEvidenceSequence"],9121:["SQ","1","ReferencedRawDataSequence"],9123:["UI","1","CreatorVersionUID"],9124:["SQ","1","DerivationImageSequence"],9154:["SQ","1","SourceImageEvidenceSequence"],9205:["CS","1","PixelPresentation"],9206:["CS","1","VolumetricProperties"],9207:["CS","1","VolumeBasedCalculationTechnique"],9208:["CS","1","ComplexImageComponent"],9209:["CS","1","AcquisitionContrast"],9215:["SQ","1","DerivationCodeSequence"],9237:["SQ","1","ReferencedPresentationStateSequence"],9410:["SQ","1","ReferencedOtherPlaneSequence"],9458:["SQ","1","FrameDisplaySequence"],9459:["FL","1","RecommendedDisplayFrameRateInFloat"],9460:["CS","1","SkipFrameRangeFlag"]},"0010":{"0000":["UL","1","GenericGroupLength"],"0010":["PN","1","PatientName"],"0020":["LO","1","PatientID"],"0021":["LO","1","IssuerOfPatientID"],"0022":["CS","1","TypeOfPatientID"],"0024":["SQ","1","IssuerOfPatientIDQualifiersSequence"],"0026":["SQ","1","SourcePatientGroupIdentificationSequence"],"0027":["SQ","1","GroupOfPatientsIdentificationSequence"],"0028":["US","3","SubjectRelativePositionInImage"],"0030":["DA","1","PatientBirthDate"],"0032":["TM","1","PatientBirthTime"],"0033":["LO","1","PatientBirthDateInAlternativeCalendar"],"0034":["LO","1","PatientDeathDateInAlternativeCalendar"],"0035":["CS","1","PatientAlternativeCalendar"],"0040":["CS","1","PatientSex"],"0050":["SQ","1","PatientInsurancePlanCodeSequence"],"0101":["SQ","1","PatientPrimaryLanguageCodeSequence"],"0102":["SQ","1","PatientPrimaryLanguageModifierCodeSequence"],"0200":["CS","1","QualityControlSubject"],"0201":["SQ","1","QualityControlSubjectTypeCodeSequence"],"0212":["UC","1","StrainDescription"],"0213":["LO","1","StrainNomenclature"],"0214":["LO","1","StrainStockNumber"],"0215":["SQ","1","StrainSourceRegistryCodeSequence"],"0216":["SQ","1","StrainStockSequence"],"0217":["LO","1","StrainSource"],"0218":["UT","1","StrainAdditionalInformation"],"0219":["SQ","1","StrainCodeSequence"],"0221":["SQ","1","GeneticModificationsSequence"],"0222":["UC","1","GeneticModificationsDescription"],"0223":["LO","1","GeneticModificationsNomenclature"],"0229":["SQ","1","GeneticModificationsCodeSequence"],1e3:["LO","1-n","OtherPatientIDs"],1001:["PN","1-n","OtherPatientNames"],1002:["SQ","1","OtherPatientIDsSequence"],1005:["PN","1","PatientBirthName"],1010:["AS","1","PatientAge"],1020:["DS","1","PatientSize"],1021:["SQ","1","PatientSizeCodeSequence"],1022:["DS","1","PatientBodyMassIndex"],1023:["DS","1","MeasuredAPDimension"],1024:["DS","1","MeasuredLateralDimension"],1030:["DS","1","PatientWeight"],1040:["LO","1","PatientAddress"],1050:["LO","1-n","InsurancePlanIdentification"],1060:["PN","1","PatientMotherBirthName"],1080:["LO","1","MilitaryRank"],1081:["LO","1","BranchOfService"],1090:["LO","1","MedicalRecordLocator"],1100:["SQ","1","ReferencedPatientPhotoSequence"],2e3:["LO","1-n","MedicalAlerts"],2110:["LO","1-n","Allergies"],2150:["LO","1","CountryOfResidence"],2152:["LO","1","RegionOfResidence"],2154:["SH","1-n","PatientTelephoneNumbers"],2155:["LT","1","PatientTelecomInformation"],2160:["SH","1","EthnicGroup"],2180:["SH","1","Occupation"],"21A0":["CS","1","SmokingStatus"],"21B0":["LT","1","AdditionalPatientHistory"],"21C0":["US","1","PregnancyStatus"],"21D0":["DA","1","LastMenstrualDate"],"21F0":["LO","1","PatientReligiousPreference"],2201:["LO","1","PatientSpeciesDescription"],2202:["SQ","1","PatientSpeciesCodeSequence"],2203:["CS","1","PatientSexNeutered"],2210:["CS","1","AnatomicalOrientationType"],2292:["LO","1","PatientBreedDescription"],2293:["SQ","1","PatientBreedCodeSequence"],2294:["SQ","1","BreedRegistrationSequence"],2295:["LO","1","BreedRegistrationNumber"],2296:["SQ","1","BreedRegistryCodeSequence"],2297:["PN","1","ResponsiblePerson"],2298:["CS","1","ResponsiblePersonRole"],2299:["LO","1","ResponsibleOrganization"],4e3:["LT","1","PatientComments"],9431:["FL","1","ExaminedBodyThickness"]},"0012":{"0000":["UL","1","GenericGroupLength"],"0010":["LO","1","ClinicalTrialSponsorName"],"0020":["LO","1","ClinicalTrialProtocolID"],"0021":["LO","1","ClinicalTrialProtocolName"],"0030":["LO","1","ClinicalTrialSiteID"],"0031":["LO","1","ClinicalTrialSiteName"],"0040":["LO","1","ClinicalTrialSubjectID"],"0042":["LO","1","ClinicalTrialSubjectReadingID"],"0050":["LO","1","ClinicalTrialTimePointID"],"0051":["ST","1","ClinicalTrialTimePointDescription"],"0052":["FD","1","LongitudinalTemporalOffsetFromEvent"],"0053":["CS","1","LongitudinalTemporalEventType"],"0060":["LO","1","ClinicalTrialCoordinatingCenterName"],"0062":["CS","1","PatientIdentityRemoved"],"0063":["LO","1-n","DeidentificationMethod"],"0064":["SQ","1","DeidentificationMethodCodeSequence"],"0071":["LO","1","ClinicalTrialSeriesID"],"0072":["LO","1","ClinicalTrialSeriesDescription"],"0081":["LO","1","ClinicalTrialProtocolEthicsCommitteeName"],"0082":["LO","1","ClinicalTrialProtocolEthicsCommitteeApprovalNumber"],"0083":["SQ","1","ConsentForClinicalTrialUseSequence"],"0084":["CS","1","DistributionType"],"0085":["CS","1","ConsentForDistributionFlag"],"0086":["DA","1","EthicsCommitteeApprovalEffectivenessStartDate"],"0087":["DA","1","EthicsCommitteeApprovalEffectivenessEndDate"]},"0014":{"0000":["UL","1","GenericGroupLength"],"0023":["ST","1","CADFileFormat"],"0024":["ST","1","ComponentReferenceSystem"],"0025":["ST","1","ComponentManufacturingProcedure"],"0028":["ST","1","ComponentManufacturer"],"0030":["DS","1-n","MaterialThickness"],"0032":["DS","1-n","MaterialPipeDiameter"],"0034":["DS","1-n","MaterialIsolationDiameter"],"0042":["ST","1","MaterialGrade"],"0044":["ST","1","MaterialPropertiesDescription"],"0045":["ST","1","MaterialPropertiesFileFormatRetired"],"0046":["LT","1","MaterialNotes"],"0050":["CS","1","ComponentShape"],"0052":["CS","1","CurvatureType"],"0054":["DS","1","OuterDiameter"],"0056":["DS","1","InnerDiameter"],"0100":["LO","1-n","ComponentWelderIDs"],"0101":["CS","1","SecondaryApprovalStatus"],"0102":["DA","1","SecondaryReviewDate"],"0103":["TM","1","SecondaryReviewTime"],"0104":["PN","1","SecondaryReviewerName"],"0105":["ST","1","RepairID"],"0106":["SQ","1","MultipleComponentApprovalSequence"],"0107":["CS","1-n","OtherApprovalStatus"],"0108":["CS","1-n","OtherSecondaryApprovalStatus"],1010:["ST","1","ActualEnvironmentalConditions"],1020:["DA","1","ExpiryDate"],1040:["ST","1","EnvironmentalConditions"],2002:["SQ","1","EvaluatorSequence"],2004:["IS","1","EvaluatorNumber"],2006:["PN","1","EvaluatorName"],2008:["IS","1","EvaluationAttempt"],2012:["SQ","1","IndicationSequence"],2014:["IS","1","IndicationNumber"],2016:["SH","1","IndicationLabel"],2018:["ST","1","IndicationDescription"],"201A":["CS","1-n","IndicationType"],"201C":["CS","1","IndicationDisposition"],"201E":["SQ","1","IndicationROISequence"],2030:["SQ","1","IndicationPhysicalPropertySequence"],2032:["SH","1","PropertyLabel"],2202:["IS","1","CoordinateSystemNumberOfAxes"],2204:["SQ","1","CoordinateSystemAxesSequence"],2206:["ST","1","CoordinateSystemAxisDescription"],2208:["CS","1","CoordinateSystemDataSetMapping"],"220A":["IS","1","CoordinateSystemAxisNumber"],"220C":["CS","1","CoordinateSystemAxisType"],"220E":["CS","1","CoordinateSystemAxisUnits"],2210:["OB","1","CoordinateSystemAxisValues"],2220:["SQ","1","CoordinateSystemTransformSequence"],2222:["ST","1","TransformDescription"],2224:["IS","1","TransformNumberOfAxes"],2226:["IS","1-n","TransformOrderOfAxes"],2228:["CS","1","TransformedAxisUnits"],"222A":["DS","1-n","CoordinateSystemTransformRotationAndScaleMatrix"],"222C":["DS","1-n","CoordinateSystemTransformTranslationMatrix"],3011:["DS","1","InternalDetectorFrameTime"],3012:["DS","1","NumberOfFramesIntegrated"],3020:["SQ","1","DetectorTemperatureSequence"],3022:["ST","1","SensorName"],3024:["DS","1","HorizontalOffsetOfSensor"],3026:["DS","1","VerticalOffsetOfSensor"],3028:["DS","1","SensorTemperature"],3040:["SQ","1","DarkCurrentSequence"],3050:["ox","1","DarkCurrentCounts"],3060:["SQ","1","GainCorrectionReferenceSequence"],3070:["ox","1","AirCounts"],3071:["DS","1","KVUsedInGainCalibration"],3072:["DS","1","MAUsedInGainCalibration"],3073:["DS","1","NumberOfFramesUsedForIntegration"],3074:["LO","1","FilterMaterialUsedInGainCalibration"],3075:["DS","1","FilterThicknessUsedInGainCalibration"],3076:["DA","1","DateOfGainCalibration"],3077:["TM","1","TimeOfGainCalibration"],3080:["OB","1","BadPixelImage"],3099:["LT","1","CalibrationNotes"],3100:["LT","1","LinearityCorrectionTechnique"],3101:["LT","1","BeamHardeningCorrectionTechnique"],4002:["SQ","1","PulserEquipmentSequence"],4004:["CS","1","PulserType"],4006:["LT","1","PulserNotes"],4008:["SQ","1","ReceiverEquipmentSequence"],"400A":["CS","1","AmplifierType"],"400C":["LT","1","ReceiverNotes"],"400E":["SQ","1","PreAmplifierEquipmentSequence"],"400F":["LT","1","PreAmplifierNotes"],4010:["SQ","1","TransmitTransducerSequence"],4011:["SQ","1","ReceiveTransducerSequence"],4012:["US","1","NumberOfElements"],4013:["CS","1","ElementShape"],4014:["DS","1","ElementDimensionA"],4015:["DS","1","ElementDimensionB"],4016:["DS","1","ElementPitchA"],4017:["DS","1","MeasuredBeamDimensionA"],4018:["DS","1","MeasuredBeamDimensionB"],4019:["DS","1","LocationOfMeasuredBeamDiameter"],"401A":["DS","1","NominalFrequency"],"401B":["DS","1","MeasuredCenterFrequency"],"401C":["DS","1","MeasuredBandwidth"],"401D":["DS","1","ElementPitchB"],4020:["SQ","1","PulserSettingsSequence"],4022:["DS","1","PulseWidth"],4024:["DS","1","ExcitationFrequency"],4026:["CS","1","ModulationType"],4028:["DS","1","Damping"],4030:["SQ","1","ReceiverSettingsSequence"],4031:["DS","1","AcquiredSoundpathLength"],4032:["CS","1","AcquisitionCompressionType"],4033:["IS","1","AcquisitionSampleSize"],4034:["DS","1","RectifierSmoothing"],4035:["SQ","1","DACSequence"],4036:["CS","1","DACType"],4038:["DS","1-n","DACGainPoints"],"403A":["DS","1-n","DACTimePoints"],"403C":["DS","1-n","DACAmplitude"],4040:["SQ","1","PreAmplifierSettingsSequence"],4050:["SQ","1","TransmitTransducerSettingsSequence"],4051:["SQ","1","ReceiveTransducerSettingsSequence"],4052:["DS","1","IncidentAngle"],4054:["ST","1","CouplingTechnique"],4056:["ST","1","CouplingMedium"],4057:["DS","1","CouplingVelocity"],4058:["DS","1","ProbeCenterLocationX"],4059:["DS","1","ProbeCenterLocationZ"],"405A":["DS","1","SoundPathLength"],"405C":["ST","1","DelayLawIdentifier"],4060:["SQ","1","GateSettingsSequence"],4062:["DS","1","GateThreshold"],4064:["DS","1","VelocityOfSound"],4070:["SQ","1","CalibrationSettingsSequence"],4072:["ST","1","CalibrationProcedure"],4074:["SH","1","ProcedureVersion"],4076:["DA","1","ProcedureCreationDate"],4078:["DA","1","ProcedureExpirationDate"],"407A":["DA","1","ProcedureLastModifiedDate"],"407C":["TM","1-n","CalibrationTime"],"407E":["DA","1-n","CalibrationDate"],4080:["SQ","1","ProbeDriveEquipmentSequence"],4081:["CS","1","DriveType"],4082:["LT","1","ProbeDriveNotes"],4083:["SQ","1","DriveProbeSequence"],4084:["DS","1","ProbeInductance"],4085:["DS","1","ProbeResistance"],4086:["SQ","1","ReceiveProbeSequence"],4087:["SQ","1","ProbeDriveSettingsSequence"],4088:["DS","1","BridgeResistors"],4089:["DS","1","ProbeOrientationAngle"],"408B":["DS","1","UserSelectedGainY"],"408C":["DS","1","UserSelectedPhase"],"408D":["DS","1","UserSelectedOffsetX"],"408E":["DS","1","UserSelectedOffsetY"],4091:["SQ","1","ChannelSettingsSequence"],4092:["DS","1","ChannelThreshold"],"409A":["SQ","1","ScannerSettingsSequence"],"409B":["ST","1","ScanProcedure"],"409C":["DS","1","TranslationRateX"],"409D":["DS","1","TranslationRateY"],"409F":["DS","1","ChannelOverlap"],"40A0":["LO","1-n","ImageQualityIndicatorType"],"40A1":["LO","1-n","ImageQualityIndicatorMaterial"],"40A2":["LO","1-n","ImageQualityIndicatorSize"],5002:["IS","1","LINACEnergy"],5004:["IS","1","LINACOutput"],5100:["US","1","ActiveAperture"],5101:["DS","1","TotalAperture"],5102:["DS","1","ApertureElevation"],5103:["DS","1","MainLobeAngle"],5104:["DS","1","MainRoofAngle"],5105:["CS","1","ConnectorType"],5106:["SH","1","WedgeModelNumber"],5107:["DS","1","WedgeAngleFloat"],5108:["DS","1","WedgeRoofAngle"],5109:["CS","1","WedgeElement1Position"],"510A":["DS","1","WedgeMaterialVelocity"],"510B":["SH","1","WedgeMaterial"],"510C":["DS","1","WedgeOffsetZ"],"510D":["DS","1","WedgeOriginOffsetX"],"510E":["DS","1","WedgeTimeDelay"],"510F":["SH","1","WedgeName"],5110:["SH","1","WedgeManufacturerName"],5111:["LO","1","WedgeDescription"],5112:["DS","1","NominalBeamAngle"],5113:["DS","1","WedgeOffsetX"],5114:["DS","1","WedgeOffsetY"],5115:["DS","1","WedgeTotalLength"],5116:["DS","1","WedgeInContactLength"],5117:["DS","1","WedgeFrontGap"],5118:["DS","1","WedgeTotalHeight"],5119:["DS","1","WedgeFrontHeight"],"511A":["DS","1","WedgeRearHeight"],"511B":["DS","1","WedgeTotalWidth"],"511C":["DS","1","WedgeInContactWidth"],"511D":["DS","1","WedgeChamferHeight"],"511E":["CS","1","WedgeCurve"],"511F":["DS","1","RadiusAlongWedge"]},"0016":{"0000":["UL","1","GenericGroupLength"],"0001":["DS","1","WhitePoint"],"0002":["DS","3","PrimaryChromaticities"],"0003":["UT","1","BatteryLevel"],"0004":["DS","1","ExposureTimeInSeconds"],"0005":["DS","1","FNumber"],"0006":["IS","1","OECFRows"],"0007":["IS","1","OECFColumns"],"0008":["UC","1-n","OECFColumnNames"],"0009":["DS","1-n","OECFValues"],"000A":["IS","1","SpatialFrequencyResponseRows"],"000B":["IS","1","SpatialFrequencyResponseColumns"],"000C":["UC","1-n","SpatialFrequencyResponseColumnNames"],"000D":["DS","1-n","SpatialFrequencyResponseValues"],"000E":["IS","1","ColorFilterArrayPatternRows"],"000F":["IS","1","ColorFilterArrayPatternColumns"],"0010":["DS","1-n","ColorFilterArrayPatternValues"],"0011":["US","1","FlashFiringStatus"],"0012":["US","1","FlashReturnStatus"],"0013":["US","1","FlashMode"],"0014":["US","1","FlashFunctionPresent"],"0015":["US","1","FlashRedEyeMode"],"0016":["US","1","ExposureProgram"],"0017":["UT","1","SpectralSensitivity"],"0018":["IS","1","PhotographicSensitivity"],"0019":["IS","1","SelfTimerMode"],"001A":["US","1","SensitivityType"],"001B":["IS","1","StandardOutputSensitivity"],"001C":["IS","1","RecommendedExposureIndex"],"001D":["IS","1","ISOSpeed"],"001E":["IS","1","ISOSpeedLatitudeyyy"],"001F":["IS","1","ISOSpeedLatitudezzz"],"0020":["UT","1","EXIFVersion"],"0021":["DS","1","ShutterSpeedValue"],"0022":["DS","1","ApertureValue"],"0023":["DS","1","BrightnessValue"],"0024":["DS","1","ExposureBiasValue"],"0025":["DS","1","MaxApertureValue"],"0026":["DS","1","SubjectDistance"],"0027":["US","1","MeteringMode"],"0028":["US","1","LightSource"],"0029":["DS","1","FocalLength"],"002A":["IS","2-4","SubjectArea"],"002B":["OB","1","MakerNote"],"0030":["DS","1","Temperature"],"0031":["DS","1","Humidity"],"0032":["DS","1","Pressure"],"0033":["DS","1","WaterDepth"],"0034":["DS","1","Acceleration"],"0035":["DS","1","CameraElevationAngle"],"0036":["DS","1-2","FlashEnergy"],"0037":["IS","2","SubjectLocation"],"0038":["DS","1","PhotographicExposureIndex"],"0039":["US","1","SensingMethod"],"003A":["US","1","FileSource"],"003B":["US","1","SceneType"],"0041":["US","1","CustomRendered"],"0042":["US","1","ExposureMode"],"0043":["US","1","WhiteBalance"],"0044":["DS","1","DigitalZoomRatio"],"0045":["IS","1","FocalLengthIn35mmFilm"],"0046":["US","1","SceneCaptureType"],"0047":["US","1","GainControl"],"0048":["US","1","Contrast"],"0049":["US","1","Saturation"],"004A":["US","1","Sharpness"],"004B":["OB","1","DeviceSettingDescription"],"004C":["US","1","SubjectDistanceRange"],"004D":["UT","1","CameraOwnerName"],"004E":["DS","4","LensSpecification"],"004F":["UT","1","LensMake"],"0050":["UT","1","LensModel"],"0051":["UT","1","LensSerialNumber"],"0061":["CS","1","InteroperabilityIndex"],"0062":["OB","1","InteroperabilityVersion"],"0070":["OB","1","GPSVersionID"],"0071":["CS","1","GPSLatitudeRef"],"0072":["DS","3","GPSLatitude"],"0073":["CS","1","GPSLongitudeRef"],"0074":["DS","3","GPSLongitude"],"0075":["US","1","GPSAltitudeRef"],"0076":["DS","1","GPSAltitude"],"0077":["DT","1","GPSTimeStamp"],"0078":["UT","1","GPSSatellites"],"0079":["CS","1","GPSStatus"],"007A":["CS","1","GPSMeasureMode"],"007B":["DS","1","GPSDOP"],"007C":["CS","1","GPSSpeedRef"],"007D":["DS","1","GPSSpeed"],"007E":["CS","1","GPSTrackRef"],"007F":["DS","1","GPSTrack"],"0080":["CS","1","GPSImgDirectionRef"],"0081":["DS","1","GPSImgDirection"],"0082":["UT","1","GPSMapDatum"],"0083":["CS","1","GPSDestLatitudeRef"],"0084":["DS","3","GPSDestLatitude"],"0085":["CS","1","GPSDestLongitudeRef"],"0086":["DS","3","GPSDestLongitude"],"0087":["CS","1","GPSDestBearingRef"],"0088":["DS","1","GPSDestBearing"],"0089":["CS","1","GPSDestDistanceRef"],"008A":["DS","1","GPSDestDistance"],"008B":["OB","1","GPSProcessingMethod"],"008C":["OB","1","GPSAreaInformation"],"008D":["DT","1","GPSDateStamp"],"008E":["IS","1","GPSDifferential"],1001:["CS","1","LightSourcePolarization"],1002:["DS","1","EmitterColorTemperature"],1003:["CS","1","ContactMethod"],1004:["CS","1-n","ImmersionMedia"],1005:["DS","1","OpticalMagnificationFactor"]},"0018":{"0000":["UL","1","GenericGroupLength"],"0010":["LO","1","ContrastBolusAgent"],"0012":["SQ","1","ContrastBolusAgentSequence"],"0013":["FL","1","ContrastBolusT1Relaxivity"],"0014":["SQ","1","ContrastBolusAdministrationRouteSequence"],"0015":["CS","1","BodyPartExamined"],"0020":["CS","1-n","ScanningSequence"],"0021":["CS","1-n","SequenceVariant"],"0022":["CS","1-n","ScanOptions"],"0023":["CS","1","MRAcquisitionType"],"0024":["SH","1","SequenceName"],"0025":["CS","1","AngioFlag"],"0026":["SQ","1","InterventionDrugInformationSequence"],"0027":["TM","1","InterventionDrugStopTime"],"0028":["DS","1","InterventionDrugDose"],"0029":["SQ","1","InterventionDrugCodeSequence"],"002A":["SQ","1","AdditionalDrugSequence"],"0030":["LO","1-n","Radionuclide"],"0031":["LO","1","Radiopharmaceutical"],"0032":["DS","1","EnergyWindowCenterline"],"0033":["DS","1-n","EnergyWindowTotalWidth"],"0034":["LO","1","InterventionDrugName"],"0035":["TM","1","InterventionDrugStartTime"],"0036":["SQ","1","InterventionSequence"],"0037":["CS","1","TherapyType"],"0038":["CS","1","InterventionStatus"],"0039":["CS","1","TherapyDescription"],"003A":["ST","1","InterventionDescription"],"0040":["IS","1","CineRate"],"0042":["CS","1","InitialCineRunState"],"0050":["DS","1","SliceThickness"],"0060":["DS","1","KVP"],"0061":["DS","1",""],"0070":["IS","1","CountsAccumulated"],"0071":["CS","1","AcquisitionTerminationCondition"],"0072":["DS","1","EffectiveDuration"],"0073":["CS","1","AcquisitionStartCondition"],"0074":["IS","1","AcquisitionStartConditionData"],"0075":["IS","1","AcquisitionTerminationConditionData"],"0080":["DS","1","RepetitionTime"],"0081":["DS","1","EchoTime"],"0082":["DS","1","InversionTime"],"0083":["DS","1","NumberOfAverages"],"0084":["DS","1","ImagingFrequency"],"0085":["SH","1","ImagedNucleus"],"0086":["IS","1-n","EchoNumbers"],"0087":["DS","1","MagneticFieldStrength"],"0088":["DS","1","SpacingBetweenSlices"],"0089":["IS","1","NumberOfPhaseEncodingSteps"],"0090":["DS","1","DataCollectionDiameter"],"0091":["IS","1","EchoTrainLength"],"0093":["DS","1","PercentSampling"],"0094":["DS","1","PercentPhaseFieldOfView"],"0095":["DS","1","PixelBandwidth"],1e3:["LO","1","DeviceSerialNumber"],1002:["UI","1","DeviceUID"],1003:["LO","1","DeviceID"],1004:["LO","1","PlateID"],1005:["LO","1","GeneratorID"],1006:["LO","1","GridID"],1007:["LO","1","CassetteID"],1008:["LO","1","GantryID"],1009:["UT","1","UniqueDeviceIdentifier"],"100A":["SQ","1","UDISequence"],"100B":["UI","1-n","ManufacturerDeviceClassUID"],1010:["LO","1","SecondaryCaptureDeviceID"],1011:["LO","1","HardcopyCreationDeviceID"],1012:["DA","1","DateOfSecondaryCapture"],1014:["TM","1","TimeOfSecondaryCapture"],1016:["LO","1","SecondaryCaptureDeviceManufacturer"],1017:["LO","1","HardcopyDeviceManufacturer"],1018:["LO","1","SecondaryCaptureDeviceManufacturerModelName"],1019:["LO","1-n","SecondaryCaptureDeviceSoftwareVersions"],"101A":["LO","1-n","HardcopyDeviceSoftwareVersion"],"101B":["LO","1","HardcopyDeviceManufacturerModelName"],1020:["LO","1-n","SoftwareVersions"],1022:["SH","1","VideoImageFormatAcquired"],1023:["LO","1","DigitalImageFormatAcquired"],1030:["LO","1","ProtocolName"],1040:["LO","1","ContrastBolusRoute"],1041:["DS","1","ContrastBolusVolume"],1042:["TM","1","ContrastBolusStartTime"],1043:["TM","1","ContrastBolusStopTime"],1044:["DS","1","ContrastBolusTotalDose"],1045:["IS","1","SyringeCounts"],1046:["DS","1-n","ContrastFlowRate"],1047:["DS","1-n","ContrastFlowDuration"],1048:["CS","1","ContrastBolusIngredient"],1049:["DS","1","ContrastBolusIngredientConcentration"],1050:["DS","1","SpatialResolution"],1060:["DS","1","TriggerTime"],1061:["LO","1","TriggerSourceOrType"],1062:["IS","1","NominalInterval"],1063:["DS","1","FrameTime"],1064:["LO","1","CardiacFramingType"],1065:["DS","1-n","FrameTimeVector"],1066:["DS","1","FrameDelay"],1067:["DS","1","ImageTriggerDelay"],1068:["DS","1","MultiplexGroupTimeOffset"],1069:["DS","1","TriggerTimeOffset"],"106A":["CS","1","SynchronizationTrigger"],"106C":["US","2","SynchronizationChannel"],"106E":["UL","1","TriggerSamplePosition"],1070:["LO","1","RadiopharmaceuticalRoute"],1071:["DS","1","RadiopharmaceuticalVolume"],1072:["TM","1","RadiopharmaceuticalStartTime"],1073:["TM","1","RadiopharmaceuticalStopTime"],1074:["DS","1","RadionuclideTotalDose"],1075:["DS","1","RadionuclideHalfLife"],1076:["DS","1","RadionuclidePositronFraction"],1077:["DS","1","RadiopharmaceuticalSpecificActivity"],1078:["DT","1","RadiopharmaceuticalStartDateTime"],1079:["DT","1","RadiopharmaceuticalStopDateTime"],1080:["CS","1","BeatRejectionFlag"],1081:["IS","1","LowRRValue"],1082:["IS","1","HighRRValue"],1083:["IS","1","IntervalsAcquired"],1084:["IS","1","IntervalsRejected"],1085:["LO","1","PVCRejection"],1086:["IS","1","SkipBeats"],1088:["IS","1","HeartRate"],1090:["IS","1","CardiacNumberOfImages"],1094:["IS","1","TriggerWindow"],1100:["DS","1","ReconstructionDiameter"],1110:["DS","1","DistanceSourceToDetector"],1111:["DS","1","DistanceSourceToPatient"],1114:["DS","1","EstimatedRadiographicMagnificationFactor"],1120:["DS","1","GantryDetectorTilt"],1121:["DS","1","GantryDetectorSlew"],1130:["DS","1","TableHeight"],1131:["DS","1","TableTraverse"],1134:["CS","1","TableMotion"],1135:["DS","1-n","TableVerticalIncrement"],1136:["DS","1-n","TableLateralIncrement"],1137:["DS","1-n","TableLongitudinalIncrement"],1138:["DS","1","TableAngle"],"113A":["CS","1","TableType"],1140:["CS","1","RotationDirection"],1141:["DS","1","AngularPosition"],1142:["DS","1-n","RadialPosition"],1143:["DS","1","ScanArc"],1144:["DS","1","AngularStep"],1145:["DS","1","CenterOfRotationOffset"],1146:["DS","1-n","RotationOffset"],1147:["CS","1","FieldOfViewShape"],1149:["IS","1-2","FieldOfViewDimensions"],1150:["IS","1","ExposureTime"],1151:["IS","1","XRayTubeCurrent"],1152:["IS","1","Exposure"],1153:["IS","1","ExposureInuAs"],1154:["DS","1","AveragePulseWidth"],1155:["CS","1","RadiationSetting"],1156:["CS","1","RectificationType"],"115A":["CS","1","RadiationMode"],"115E":["DS","1","ImageAndFluoroscopyAreaDoseProduct"],1160:["SH","1","FilterType"],1161:["LO","1-n","TypeOfFilters"],1162:["DS","1","IntensifierSize"],1164:["DS","2","ImagerPixelSpacing"],1166:["CS","1-n","Grid"],1170:["IS","1","GeneratorPower"],1180:["SH","1","CollimatorGridName"],1181:["CS","1","CollimatorType"],1182:["IS","1-2","FocalDistance"],1183:["DS","1-2","XFocusCenter"],1184:["DS","1-2","YFocusCenter"],1190:["DS","1-n","FocalSpots"],1191:["CS","1","AnodeTargetMaterial"],"11A0":["DS","1","BodyPartThickness"],"11A2":["DS","1","CompressionForce"],"11A3":["DS","1","CompressionPressure"],"11A4":["LO","1","PaddleDescription"],"11A5":["DS","1","CompressionContactArea"],"11B0":["LO","1","AcquisitionMode"],"11B1":["LO","1","DoseModeName"],"11B2":["CS","1","AcquiredSubtractionMaskFlag"],"11B3":["CS","1","FluoroscopyPersistenceFlag"],"11B4":["CS","1","FluoroscopyLastImageHoldPersistenceFlag"],"11B5":["IS","1","UpperLimitNumberOfPersistentFluoroscopyFrames"],"11B6":["CS","1","ContrastBolusAutoInjectionTriggerFlag"],"11B7":["FD","1","ContrastBolusInjectionDelay"],"11B8":["SQ","1","XAAcquisitionPhaseDetailsSequence"],"11B9":["FD","1","XAAcquisitionFrameRate"],"11BA":["SQ","1","XAPlaneDetailsSequence"],"11BB":["LO","1","AcquisitionFieldOfViewLabel"],"11BC":["SQ","1","XRayFilterDetailsSequence"],"11BD":["FD","1","XAAcquisitionDuration"],"11BE":["CS","1","ReconstructionPipelineType"],"11BF":["SQ","1","ImageFilterDetailsSequence"],"11C0":["CS","1","AppliedMaskSubtractionFlag"],"11C1":["SQ","1","RequestedSeriesDescriptionCodeSequence"],1200:["DA","1-n","DateOfLastCalibration"],1201:["TM","1-n","TimeOfLastCalibration"],1202:["DT","1","DateTimeOfLastCalibration"],1203:["DT","1","CalibrationDateTime"],1210:["SH","1-n","ConvolutionKernel"],1240:["IS","1-n","UpperLowerPixelValues"],1242:["IS","1","ActualFrameDuration"],1243:["IS","1","CountRate"],1244:["US","1","PreferredPlaybackSequencing"],1250:["SH","1","ReceiveCoilName"],1251:["SH","1","TransmitCoilName"],1260:["SH","1","PlateType"],1261:["LO","1","PhosphorType"],1271:["FD","1","WaterEquivalentDiameter"],1272:["SQ","1","WaterEquivalentDiameterCalculationMethodCodeSequence"],1300:["DS","1","ScanVelocity"],1301:["CS","1-n","WholeBodyTechnique"],1302:["IS","1","ScanLength"],1310:["US","4","AcquisitionMatrix"],1312:["CS","1","InPlanePhaseEncodingDirection"],1314:["DS","1","FlipAngle"],1315:["CS","1","VariableFlipAngleFlag"],1316:["DS","1","SAR"],1318:["DS","1","dBdt"],1320:["FL","1","B1rms"],1400:["LO","1","AcquisitionDeviceProcessingDescription"],1401:["LO","1","AcquisitionDeviceProcessingCode"],1402:["CS","1","CassetteOrientation"],1403:["CS","1","CassetteSize"],1404:["US","1","ExposuresOnPlate"],1405:["IS","1","RelativeXRayExposure"],1411:["DS","1","ExposureIndex"],1412:["DS","1","TargetExposureIndex"],1413:["DS","1","DeviationIndex"],1450:["DS","1","ColumnAngulation"],1460:["DS","1","TomoLayerHeight"],1470:["DS","1","TomoAngle"],1480:["DS","1","TomoTime"],1490:["CS","1","TomoType"],1491:["CS","1","TomoClass"],1495:["IS","1","NumberOfTomosynthesisSourceImages"],1500:["CS","1","PositionerMotion"],1508:["CS","1","PositionerType"],1510:["DS","1","PositionerPrimaryAngle"],1511:["DS","1","PositionerSecondaryAngle"],1520:["DS","1-n","PositionerPrimaryAngleIncrement"],1521:["DS","1-n","PositionerSecondaryAngleIncrement"],1530:["DS","1","DetectorPrimaryAngle"],1531:["DS","1","DetectorSecondaryAngle"],1600:["CS","1-3","ShutterShape"],1602:["IS","1","ShutterLeftVerticalEdge"],1604:["IS","1","ShutterRightVerticalEdge"],1606:["IS","1","ShutterUpperHorizontalEdge"],1608:["IS","1","ShutterLowerHorizontalEdge"],1610:["IS","2","CenterOfCircularShutter"],1612:["IS","1","RadiusOfCircularShutter"],1620:["IS","2-2n","VerticesOfThePolygonalShutter"],1622:["US","1","ShutterPresentationValue"],1623:["US","1","ShutterOverlayGroup"],1624:["US","3","ShutterPresentationColorCIELabValue"],1630:["CS","1","OutlineShapeType"],1631:["FD","1","OutlineLeftVerticalEdge"],1632:["FD","1","OutlineRightVerticalEdge"],1633:["FD","1","OutlineUpperHorizontalEdge"],1634:["FD","1","OutlineLowerHorizontalEdge"],1635:["FD","2","CenterOfCircularOutline"],1636:["FD","1","DiameterOfCircularOutline"],1637:["UL","1","NumberOfPolygonalVertices"],1638:["OF","1","VerticesOfThePolygonalOutline"],1700:["CS","1-3","CollimatorShape"],1702:["IS","1","CollimatorLeftVerticalEdge"],1704:["IS","1","CollimatorRightVerticalEdge"],1706:["IS","1","CollimatorUpperHorizontalEdge"],1708:["IS","1","CollimatorLowerHorizontalEdge"],1710:["IS","2","CenterOfCircularCollimator"],1712:["IS","1","RadiusOfCircularCollimator"],1720:["IS","2-2n","VerticesOfThePolygonalCollimator"],1800:["CS","1","AcquisitionTimeSynchronized"],1801:["SH","1","TimeSource"],1802:["CS","1","TimeDistributionProtocol"],1803:["LO","1","NTPSourceAddress"],2001:["IS","1-n","PageNumberVector"],2002:["SH","1-n","FrameLabelVector"],2003:["DS","1-n","FramePrimaryAngleVector"],2004:["DS","1-n","FrameSecondaryAngleVector"],2005:["DS","1-n","SliceLocationVector"],2006:["SH","1-n","DisplayWindowLabelVector"],2010:["DS","2","NominalScannedPixelSpacing"],2020:["CS","1","DigitizingDeviceTransportDirection"],2030:["DS","1","RotationOfScannedFilm"],2041:["SQ","1","BiopsyTargetSequence"],2042:["UI","1","TargetUID"],2043:["FL","2","LocalizingCursorPosition"],2044:["FL","3","CalculatedTargetPosition"],2045:["SH","1","TargetLabel"],2046:["FL","1","DisplayedZValue"],3100:["CS","1","IVUSAcquisition"],3101:["DS","1","IVUSPullbackRate"],3102:["DS","1","IVUSGatedRate"],3103:["IS","1","IVUSPullbackStartFrameNumber"],3104:["IS","1","IVUSPullbackStopFrameNumber"],3105:["IS","1-n","LesionNumber"],4e3:["LT","1","AcquisitionComments"],5e3:["SH","1-n","OutputPower"],5010:["LO","1-n","TransducerData"],5011:["SQ","1","TransducerIdentificationSequence"],5012:["DS","1","FocusDepth"],5020:["LO","1","ProcessingFunction"],5021:["LO","1","PostprocessingFunction"],5022:["DS","1","MechanicalIndex"],5024:["DS","1","BoneThermalIndex"],5026:["DS","1","CranialThermalIndex"],5027:["DS","1","SoftTissueThermalIndex"],5028:["DS","1","SoftTissueFocusThermalIndex"],5029:["DS","1","SoftTissueSurfaceThermalIndex"],5030:["DS","1","DynamicRange"],5040:["DS","1","TotalGain"],5050:["IS","1","DepthOfScanField"],5100:["CS","1","PatientPosition"],5101:["CS","1","ViewPosition"],5104:["SQ","1","ProjectionEponymousNameCodeSequence"],5210:["DS","6","ImageTransformationMatrix"],5212:["DS","3","ImageTranslationVector"],6e3:["DS","1","Sensitivity"],6011:["SQ","1","SequenceOfUltrasoundRegions"],6012:["US","1","RegionSpatialFormat"],6014:["US","1","RegionDataType"],6016:["UL","1","RegionFlags"],6018:["UL","1","RegionLocationMinX0"],"601A":["UL","1","RegionLocationMinY0"],"601C":["UL","1","RegionLocationMaxX1"],"601E":["UL","1","RegionLocationMaxY1"],6020:["SL","1","ReferencePixelX0"],6022:["SL","1","ReferencePixelY0"],6024:["US","1","PhysicalUnitsXDirection"],6026:["US","1","PhysicalUnitsYDirection"],6028:["FD","1","ReferencePixelPhysicalValueX"],"602A":["FD","1","ReferencePixelPhysicalValueY"],"602C":["FD","1","PhysicalDeltaX"],"602E":["FD","1","PhysicalDeltaY"],6030:["UL","1","TransducerFrequency"],6031:["CS","1","TransducerType"],6032:["UL","1","PulseRepetitionFrequency"],6034:["FD","1","DopplerCorrectionAngle"],6036:["FD","1","SteeringAngle"],6038:["UL","1","DopplerSampleVolumeXPositionRetired"],6039:["SL","1","DopplerSampleVolumeXPosition"],"603A":["UL","1","DopplerSampleVolumeYPositionRetired"],"603B":["SL","1","DopplerSampleVolumeYPosition"],"603C":["UL","1","TMLinePositionX0Retired"],"603D":["SL","1","TMLinePositionX0"],"603E":["UL","1","TMLinePositionY0Retired"],"603F":["SL","1","TMLinePositionY0"],6040:["UL","1","TMLinePositionX1Retired"],6041:["SL","1","TMLinePositionX1"],6042:["UL","1","TMLinePositionY1Retired"],6043:["SL","1","TMLinePositionY1"],6044:["US","1","PixelComponentOrganization"],6046:["UL","1","PixelComponentMask"],6048:["UL","1","PixelComponentRangeStart"],"604A":["UL","1","PixelComponentRangeStop"],"604C":["US","1","PixelComponentPhysicalUnits"],"604E":["US","1","PixelComponentDataType"],6050:["UL","1","NumberOfTableBreakPoints"],6052:["UL","1-n","TableOfXBreakPoints"],6054:["FD","1-n","TableOfYBreakPoints"],6056:["UL","1","NumberOfTableEntries"],6058:["UL","1-n","TableOfPixelValues"],"605A":["FL","1-n","TableOfParameterValues"],6060:["FL","1-n","RWaveTimeVector"],6070:["US","1","ActiveImageAreaOverlayGroup"],7e3:["CS","1","DetectorConditionsNominalFlag"],7001:["DS","1","DetectorTemperature"],7004:["CS","1","DetectorType"],7005:["CS","1","DetectorConfiguration"],7006:["LT","1","DetectorDescription"],7008:["LT","1","DetectorMode"],"700A":["SH","1","DetectorID"],"700C":["DA","1","DateOfLastDetectorCalibration"],"700E":["TM","1","TimeOfLastDetectorCalibration"],7010:["IS","1","ExposuresOnDetectorSinceLastCalibration"],7011:["IS","1","ExposuresOnDetectorSinceManufactured"],7012:["DS","1","DetectorTimeSinceLastExposure"],7014:["DS","1","DetectorActiveTime"],7016:["DS","1","DetectorActivationOffsetFromExposure"],"701A":["DS","2","DetectorBinning"],7020:["DS","2","DetectorElementPhysicalSize"],7022:["DS","2","DetectorElementSpacing"],7024:["CS","1","DetectorActiveShape"],7026:["DS","1-2","DetectorActiveDimensions"],7028:["DS","2","DetectorActiveOrigin"],"702A":["LO","1","DetectorManufacturerName"],"702B":["LO","1","DetectorManufacturerModelName"],7030:["DS","2","FieldOfViewOrigin"],7032:["DS","1","FieldOfViewRotation"],7034:["CS","1","FieldOfViewHorizontalFlip"],7036:["FL","2","PixelDataAreaOriginRelativeToFOV"],7038:["FL","1","PixelDataAreaRotationAngleRelativeToFOV"],7040:["LT","1","GridAbsorbingMaterial"],7041:["LT","1","GridSpacingMaterial"],7042:["DS","1","GridThickness"],7044:["DS","1","GridPitch"],7046:["IS","2","GridAspectRatio"],7048:["DS","1","GridPeriod"],"704C":["DS","1","GridFocalDistance"],7050:["CS","1-n","FilterMaterial"],7052:["DS","1-n","FilterThicknessMinimum"],7054:["DS","1-n","FilterThicknessMaximum"],7056:["FL","1-n","FilterBeamPathLengthMinimum"],7058:["FL","1-n","FilterBeamPathLengthMaximum"],7060:["CS","1","ExposureControlMode"],7062:["LT","1","ExposureControlModeDescription"],7064:["CS","1","ExposureStatus"],7065:["DS","1","PhototimerSetting"],8150:["DS","1","ExposureTimeInuS"],8151:["DS","1","XRayTubeCurrentInuA"],9004:["CS","1","ContentQualification"],9005:["SH","1","PulseSequenceName"],9006:["SQ","1","MRImagingModifierSequence"],9008:["CS","1","EchoPulseSequence"],9009:["CS","1","InversionRecovery"],9010:["CS","1","FlowCompensation"],9011:["CS","1","MultipleSpinEcho"],9012:["CS","1","MultiPlanarExcitation"],9014:["CS","1","PhaseContrast"],9015:["CS","1","TimeOfFlightContrast"],9016:["CS","1","Spoiling"],9017:["CS","1","SteadyStatePulseSequence"],9018:["CS","1","EchoPlanarPulseSequence"],9019:["FD","1","TagAngleFirstAxis"],9020:["CS","1","MagnetizationTransfer"],9021:["CS","1","T2Preparation"],9022:["CS","1","BloodSignalNulling"],9024:["CS","1","SaturationRecovery"],9025:["CS","1","SpectrallySelectedSuppression"],9026:["CS","1","SpectrallySelectedExcitation"],9027:["CS","1","SpatialPresaturation"],9028:["CS","1","Tagging"],9029:["CS","1","OversamplingPhase"],9030:["FD","1","TagSpacingFirstDimension"],9032:["CS","1","GeometryOfKSpaceTraversal"],9033:["CS","1","SegmentedKSpaceTraversal"],9034:["CS","1","RectilinearPhaseEncodeReordering"],9035:["FD","1","TagThickness"],9036:["CS","1","PartialFourierDirection"],9037:["CS","1","CardiacSynchronizationTechnique"],9041:["LO","1","ReceiveCoilManufacturerName"],9042:["SQ","1","MRReceiveCoilSequence"],9043:["CS","1","ReceiveCoilType"],9044:["CS","1","QuadratureReceiveCoil"],9045:["SQ","1","MultiCoilDefinitionSequence"],9046:["LO","1","MultiCoilConfiguration"],9047:["SH","1","MultiCoilElementName"],9048:["CS","1","MultiCoilElementUsed"],9049:["SQ","1","MRTransmitCoilSequence"],9050:["LO","1","TransmitCoilManufacturerName"],9051:["CS","1","TransmitCoilType"],9052:["FD","1-2","SpectralWidth"],9053:["FD","1-2","ChemicalShiftReference"],9054:["CS","1","VolumeLocalizationTechnique"],9058:["US","1","MRAcquisitionFrequencyEncodingSteps"],9059:["CS","1","Decoupling"],9060:["CS","1-2","DecoupledNucleus"],9061:["FD","1-2","DecouplingFrequency"],9062:["CS","1","DecouplingMethod"],9063:["FD","1-2","DecouplingChemicalShiftReference"],9064:["CS","1","KSpaceFiltering"],9065:["CS","1-2","TimeDomainFiltering"],9066:["US","1-2","NumberOfZeroFills"],9067:["CS","1","BaselineCorrection"],9069:["FD","1","ParallelReductionFactorInPlane"],9070:["FD","1","CardiacRRIntervalSpecified"],9073:["FD","1","AcquisitionDuration"],9074:["DT","1","FrameAcquisitionDateTime"],9075:["CS","1","DiffusionDirectionality"],9076:["SQ","1","DiffusionGradientDirectionSequence"],9077:["CS","1","ParallelAcquisition"],9078:["CS","1","ParallelAcquisitionTechnique"],9079:["FD","1-n","InversionTimes"],9080:["ST","1","MetaboliteMapDescription"],9081:["CS","1","PartialFourier"],9082:["FD","1","EffectiveEchoTime"],9083:["SQ","1","MetaboliteMapCodeSequence"],9084:["SQ","1","ChemicalShiftSequence"],9085:["CS","1","CardiacSignalSource"],9087:["FD","1","DiffusionBValue"],9089:["FD","3","DiffusionGradientOrientation"],9090:["FD","3","VelocityEncodingDirection"],9091:["FD","1","VelocityEncodingMinimumValue"],9092:["SQ","1","VelocityEncodingAcquisitionSequence"],9093:["US","1","NumberOfKSpaceTrajectories"],9094:["CS","1","CoverageOfKSpace"],9095:["UL","1","SpectroscopyAcquisitionPhaseRows"],9096:["FD","1","ParallelReductionFactorInPlaneRetired"],9098:["FD","1-2","TransmitterFrequency"],9100:["CS","1-2","ResonantNucleus"],9101:["CS","1","FrequencyCorrection"],9103:["SQ","1","MRSpectroscopyFOVGeometrySequence"],9104:["FD","1","SlabThickness"],9105:["FD","3","SlabOrientation"],9106:["FD","3","MidSlabPosition"],9107:["SQ","1","MRSpatialSaturationSequence"],9112:["SQ","1","MRTimingAndRelatedParametersSequence"],9114:["SQ","1","MREchoSequence"],9115:["SQ","1","MRModifierSequence"],9117:["SQ","1","MRDiffusionSequence"],9118:["SQ","1","CardiacSynchronizationSequence"],9119:["SQ","1","MRAveragesSequence"],9125:["SQ","1","MRFOVGeometrySequence"],9126:["SQ","1","VolumeLocalizationSequence"],9127:["UL","1","SpectroscopyAcquisitionDataColumns"],9147:["CS","1","DiffusionAnisotropyType"],9151:["DT","1","FrameReferenceDateTime"],9152:["SQ","1","MRMetaboliteMapSequence"],9155:["FD","1","ParallelReductionFactorOutOfPlane"],9159:["UL","1","SpectroscopyAcquisitionOutOfPlanePhaseSteps"],9166:["CS","1","BulkMotionStatus"],9168:["FD","1","ParallelReductionFactorSecondInPlane"],9169:["CS","1","CardiacBeatRejectionTechnique"],9170:["CS","1","RespiratoryMotionCompensationTechnique"],9171:["CS","1","RespiratorySignalSource"],9172:["CS","1","BulkMotionCompensationTechnique"],9173:["CS","1","BulkMotionSignalSource"],9174:["CS","1","ApplicableSafetyStandardAgency"],9175:["LO","1","ApplicableSafetyStandardDescription"],9176:["SQ","1","OperatingModeSequence"],9177:["CS","1","OperatingModeType"],9178:["CS","1","OperatingMode"],9179:["CS","1","SpecificAbsorptionRateDefinition"],9180:["CS","1","GradientOutputType"],9181:["FD","1","SpecificAbsorptionRateValue"],9182:["FD","1","GradientOutput"],9183:["CS","1","FlowCompensationDirection"],9184:["FD","1","TaggingDelay"],9185:["ST","1","RespiratoryMotionCompensationTechniqueDescription"],9186:["SH","1","RespiratorySignalSourceID"],9195:["FD","1","ChemicalShiftMinimumIntegrationLimitInHz"],9196:["FD","1","ChemicalShiftMaximumIntegrationLimitInHz"],9197:["SQ","1","MRVelocityEncodingSequence"],9198:["CS","1","FirstOrderPhaseCorrection"],9199:["CS","1","WaterReferencedPhaseCorrection"],9200:["CS","1","MRSpectroscopyAcquisitionType"],9214:["CS","1","RespiratoryCyclePosition"],9217:["FD","1","VelocityEncodingMaximumValue"],9218:["FD","1","TagSpacingSecondDimension"],9219:["SS","1","TagAngleSecondAxis"],9220:["FD","1","FrameAcquisitionDuration"],9226:["SQ","1","MRImageFrameTypeSequence"],9227:["SQ","1","MRSpectroscopyFrameTypeSequence"],9231:["US","1","MRAcquisitionPhaseEncodingStepsInPlane"],9232:["US","1","MRAcquisitionPhaseEncodingStepsOutOfPlane"],9234:["UL","1","SpectroscopyAcquisitionPhaseColumns"],9236:["CS","1","CardiacCyclePosition"],9239:["SQ","1","SpecificAbsorptionRateSequence"],9240:["US","1","RFEchoTrainLength"],9241:["US","1","GradientEchoTrainLength"],9250:["CS","1","ArterialSpinLabelingContrast"],9251:["SQ","1","MRArterialSpinLabelingSequence"],9252:["LO","1","ASLTechniqueDescription"],9253:["US","1","ASLSlabNumber"],9254:["FD","1","ASLSlabThickness"],9255:["FD","3","ASLSlabOrientation"],9256:["FD","3","ASLMidSlabPosition"],9257:["CS","1","ASLContext"],9258:["UL","1","ASLPulseTrainDuration"],9259:["CS","1","ASLCrusherFlag"],"925A":["FD","1","ASLCrusherFlowLimit"],"925B":["LO","1","ASLCrusherDescription"],"925C":["CS","1","ASLBolusCutoffFlag"],"925D":["SQ","1","ASLBolusCutoffTimingSequence"],"925E":["LO","1","ASLBolusCutoffTechnique"],"925F":["UL","1","ASLBolusCutoffDelayTime"],9260:["SQ","1","ASLSlabSequence"],9295:["FD","1","ChemicalShiftMinimumIntegrationLimitInppm"],9296:["FD","1","ChemicalShiftMaximumIntegrationLimitInppm"],9297:["CS","1","WaterReferenceAcquisition"],9298:["IS","1","EchoPeakPosition"],9301:["SQ","1","CTAcquisitionTypeSequence"],9302:["CS","1","AcquisitionType"],9303:["FD","1","TubeAngle"],9304:["SQ","1","CTAcquisitionDetailsSequence"],9305:["FD","1","RevolutionTime"],9306:["FD","1","SingleCollimationWidth"],9307:["FD","1","TotalCollimationWidth"],9308:["SQ","1","CTTableDynamicsSequence"],9309:["FD","1","TableSpeed"],9310:["FD","1","TableFeedPerRotation"],9311:["FD","1","SpiralPitchFactor"],9312:["SQ","1","CTGeometrySequence"],9313:["FD","3","DataCollectionCenterPatient"],9314:["SQ","1","CTReconstructionSequence"],9315:["CS","1","ReconstructionAlgorithm"],9316:["CS","1","ConvolutionKernelGroup"],9317:["FD","2","ReconstructionFieldOfView"],9318:["FD","3","ReconstructionTargetCenterPatient"],9319:["FD","1","ReconstructionAngle"],9320:["SH","1","ImageFilter"],9321:["SQ","1","CTExposureSequence"],9322:["FD","2","ReconstructionPixelSpacing"],9323:["CS","1-n","ExposureModulationType"],9324:["FD","1","EstimatedDoseSaving"],9325:["SQ","1","CTXRayDetailsSequence"],9326:["SQ","1","CTPositionSequence"],9327:["FD","1","TablePosition"],9328:["FD","1","ExposureTimeInms"],9329:["SQ","1","CTImageFrameTypeSequence"],9330:["FD","1","XRayTubeCurrentInmA"],9332:["FD","1","ExposureInmAs"],9333:["CS","1","ConstantVolumeFlag"],9334:["CS","1","FluoroscopyFlag"],9335:["FD","1","DistanceSourceToDataCollectionCenter"],9337:["US","1","ContrastBolusAgentNumber"],9338:["SQ","1","ContrastBolusIngredientCodeSequence"],9340:["SQ","1","ContrastAdministrationProfileSequence"],9341:["SQ","1","ContrastBolusUsageSequence"],9342:["CS","1","ContrastBolusAgentAdministered"],9343:["CS","1","ContrastBolusAgentDetected"],9344:["CS","1","ContrastBolusAgentPhase"],9345:["FD","1","CTDIvol"],9346:["SQ","1","CTDIPhantomTypeCodeSequence"],9351:["FL","1","CalciumScoringMassFactorPatient"],9352:["FL","3","CalciumScoringMassFactorDevice"],9353:["FL","1","EnergyWeightingFactor"],9360:["SQ","1","CTAdditionalXRaySourceSequence"],9361:["CS","1","MultienergyCTAcquisition"],9362:["SQ","1","MultienergyCTAcquisitionSequence"],9363:["SQ","1","MultienergyCTProcessingSequence"],9364:["SQ","1","MultienergyCTCharacteristicsSequence"],9365:["SQ","1","MultienergyCTXRaySourceSequence"],9366:["US","1","XRaySourceIndex"],9367:["UC","1","XRaySourceID"],9368:["CS","1","MultienergySourceTechnique"],9369:["DT","1","SourceStartDateTime"],"936A":["DT","1","SourceEndDateTime"],"936B":["US","1","SwitchingPhaseNumber"],"936C":["DS","1","SwitchingPhaseNominalDuration"],"936D":["DS","1","SwitchingPhaseTransitionDuration"],"936E":["DS","1","EffectiveBinEnergy"],"936F":["SQ","1","MultienergyCTXRayDetectorSequence"],9370:["US","1","XRayDetectorIndex"],9371:["UC","1","XRayDetectorID"],9372:["CS","1","MultienergyDetectorType"],9373:["ST","1","XRayDetectorLabel"],9374:["DS","1","NominalMaxEnergy"],9375:["DS","1","NominalMinEnergy"],9376:["US","1-n","ReferencedXRayDetectorIndex"],9377:["US","1-n","ReferencedXRaySourceIndex"],9378:["US","1-n","ReferencedPathIndex"],9379:["SQ","1","MultienergyCTPathSequence"],"937A":["US","1","MultienergyCTPathIndex"],"937B":["UT","1","MultienergyAcquisitionDescription"],"937C":["FD","1","MonoenergeticEnergyEquivalent"],"937D":["SQ","1","MaterialCodeSequence"],"937E":["CS","1","DecompositionMethod"],"937F":["UT","1","DecompositionDescription"],9380:["SQ","1","DecompositionAlgorithmIdentificationSequence"],9381:["SQ","1","DecompositionMaterialSequence"],9382:["SQ","1","MaterialAttenuationSequence"],9383:["DS","1","PhotonEnergy"],9384:["DS","1","XRayMassAttenuationCoefficient"],9401:["SQ","1","ProjectionPixelCalibrationSequence"],9402:["FL","1","DistanceSourceToIsocenter"],9403:["FL","1","DistanceObjectToTableTop"],9404:["FL","2","ObjectPixelSpacingInCenterOfBeam"],9405:["SQ","1","PositionerPositionSequence"],9406:["SQ","1","TablePositionSequence"],9407:["SQ","1","CollimatorShapeSequence"],9410:["CS","1","PlanesInAcquisition"],9412:["SQ","1","XAXRFFrameCharacteristicsSequence"],9417:["SQ","1","FrameAcquisitionSequence"],9420:["CS","1","XRayReceptorType"],9423:["LO","1","AcquisitionProtocolName"],9424:["LT","1","AcquisitionProtocolDescription"],9425:["CS","1","ContrastBolusIngredientOpaque"],9426:["FL","1","DistanceReceptorPlaneToDetectorHousing"],9427:["CS","1","IntensifierActiveShape"],9428:["FL","1-2","IntensifierActiveDimensions"],9429:["FL","2","PhysicalDetectorSize"],9430:["FL","2","PositionOfIsocenterProjection"],9432:["SQ","1","FieldOfViewSequence"],9433:["LO","1","FieldOfViewDescription"],9434:["SQ","1","ExposureControlSensingRegionsSequence"],9435:["CS","1","ExposureControlSensingRegionShape"],9436:["SS","1","ExposureControlSensingRegionLeftVerticalEdge"],9437:["SS","1","ExposureControlSensingRegionRightVerticalEdge"],9438:["SS","1","ExposureControlSensingRegionUpperHorizontalEdge"],9439:["SS","1","ExposureControlSensingRegionLowerHorizontalEdge"],9440:["SS","2","CenterOfCircularExposureControlSensingRegion"],9441:["US","1","RadiusOfCircularExposureControlSensingRegion"],9442:["SS","2-n","VerticesOfThePolygonalExposureControlSensingRegion"],9445:["","",""],9447:["FL","1","ColumnAngulationPatient"],9449:["FL","1","BeamAngle"],9451:["SQ","1","FrameDetectorParametersSequence"],9452:["FL","1","CalculatedAnatomyThickness"],9455:["SQ","1","CalibrationSequence"],9456:["SQ","1","ObjectThicknessSequence"],9457:["CS","1","PlaneIdentification"],9461:["FL","1-2","FieldOfViewDimensionsInFloat"],9462:["SQ","1","IsocenterReferenceSystemSequence"],9463:["FL","1","PositionerIsocenterPrimaryAngle"],9464:["FL","1","PositionerIsocenterSecondaryAngle"],9465:["FL","1","PositionerIsocenterDetectorRotationAngle"],9466:["FL","1","TableXPositionToIsocenter"],9467:["FL","1","TableYPositionToIsocenter"],9468:["FL","1","TableZPositionToIsocenter"],9469:["FL","1","TableHorizontalRotationAngle"],9470:["FL","1","TableHeadTiltAngle"],9471:["FL","1","TableCradleTiltAngle"],9472:["SQ","1","FrameDisplayShutterSequence"],9473:["FL","1","AcquiredImageAreaDoseProduct"],9474:["CS","1","CArmPositionerTabletopRelationship"],9476:["SQ","1","XRayGeometrySequence"],9477:["SQ","1","IrradiationEventIdentificationSequence"],9504:["SQ","1","XRay3DFrameTypeSequence"],9506:["SQ","1","ContributingSourcesSequence"],9507:["SQ","1","XRay3DAcquisitionSequence"],9508:["FL","1","PrimaryPositionerScanArc"],9509:["FL","1","SecondaryPositionerScanArc"],9510:["FL","1","PrimaryPositionerScanStartAngle"],9511:["FL","1","SecondaryPositionerScanStartAngle"],9514:["FL","1","PrimaryPositionerIncrement"],9515:["FL","1","SecondaryPositionerIncrement"],9516:["DT","1","StartAcquisitionDateTime"],9517:["DT","1","EndAcquisitionDateTime"],9518:["SS","1","PrimaryPositionerIncrementSign"],9519:["SS","1","SecondaryPositionerIncrementSign"],9524:["LO","1","ApplicationName"],9525:["LO","1","ApplicationVersion"],9526:["LO","1","ApplicationManufacturer"],9527:["CS","1","AlgorithmType"],9528:["LO","1","AlgorithmDescription"],9530:["SQ","1","XRay3DReconstructionSequence"],9531:["LO","1","ReconstructionDescription"],9538:["SQ","1","PerProjectionAcquisitionSequence"],9541:["SQ","1","DetectorPositionSequence"],9542:["SQ","1","XRayAcquisitionDoseSequence"],9543:["FD","1","XRaySourceIsocenterPrimaryAngle"],9544:["FD","1","XRaySourceIsocenterSecondaryAngle"],9545:["FD","1","BreastSupportIsocenterPrimaryAngle"],9546:["FD","1","BreastSupportIsocenterSecondaryAngle"],9547:["FD","1","BreastSupportXPositionToIsocenter"],9548:["FD","1","BreastSupportYPositionToIsocenter"],9549:["FD","1","BreastSupportZPositionToIsocenter"],9550:["FD","1","DetectorIsocenterPrimaryAngle"],9551:["FD","1","DetectorIsocenterSecondaryAngle"],9552:["FD","1","DetectorXPositionToIsocenter"],9553:["FD","1","DetectorYPositionToIsocenter"],9554:["FD","1","DetectorZPositionToIsocenter"],9555:["SQ","1","XRayGridSequence"],9556:["SQ","1","XRayFilterSequence"],9557:["FD","3","DetectorActiveAreaTLHCPosition"],9558:["FD","6","DetectorActiveAreaOrientation"],9559:["CS","1","PositionerPrimaryAngleDirection"],9601:["SQ","1","DiffusionBMatrixSequence"],9602:["FD","1","DiffusionBValueXX"],9603:["FD","1","DiffusionBValueXY"],9604:["FD","1","DiffusionBValueXZ"],9605:["FD","1","DiffusionBValueYY"],9606:["FD","1","DiffusionBValueYZ"],9607:["FD","1","DiffusionBValueZZ"],9621:["SQ","1","FunctionalMRSequence"],9622:["CS","1","FunctionalSettlingPhaseFramesPresent"],9623:["DT","1","FunctionalSyncPulse"],9624:["CS","1","SettlingPhaseFrame"],9701:["DT","1","DecayCorrectionDateTime"],9715:["FD","1","StartDensityThreshold"],9716:["FD","1","StartRelativeDensityDifferenceThreshold"],9717:["FD","1","StartCardiacTriggerCountThreshold"],9718:["FD","1","StartRespiratoryTriggerCountThreshold"],9719:["FD","1","TerminationCountsThreshold"],9720:["FD","1","TerminationDensityThreshold"],9721:["FD","1","TerminationRelativeDensityThreshold"],9722:["FD","1","TerminationTimeThreshold"],9723:["FD","1","TerminationCardiacTriggerCountThreshold"],9724:["FD","1","TerminationRespiratoryTriggerCountThreshold"],9725:["CS","1","DetectorGeometry"],9726:["FD","1","TransverseDetectorSeparation"],9727:["FD","1","AxialDetectorDimension"],9729:["US","1","RadiopharmaceuticalAgentNumber"],9732:["SQ","1","PETFrameAcquisitionSequence"],9733:["SQ","1","PETDetectorMotionDetailsSequence"],9734:["SQ","1","PETTableDynamicsSequence"],9735:["SQ","1","PETPositionSequence"],9736:["SQ","1","PETFrameCorrectionFactorsSequence"],9737:["SQ","1","RadiopharmaceuticalUsageSequence"],9738:["CS","1","AttenuationCorrectionSource"],9739:["US","1","NumberOfIterations"],9740:["US","1","NumberOfSubsets"],9749:["SQ","1","PETReconstructionSequence"],9751:["SQ","1","PETFrameTypeSequence"],9755:["CS","1","TimeOfFlightInformationUsed"],9756:["CS","1","ReconstructionType"],9758:["CS","1","DecayCorrected"],9759:["CS","1","AttenuationCorrected"],9760:["CS","1","ScatterCorrected"],9761:["CS","1","DeadTimeCorrected"],9762:["CS","1","GantryMotionCorrected"],9763:["CS","1","PatientMotionCorrected"],9764:["CS","1","CountLossNormalizationCorrected"],9765:["CS","1","RandomsCorrected"],9766:["CS","1","NonUniformRadialSamplingCorrected"],9767:["CS","1","SensitivityCalibrated"],9768:["CS","1","DetectorNormalizationCorrection"],9769:["CS","1","IterativeReconstructionMethod"],9770:["CS","1","AttenuationCorrectionTemporalRelationship"],9771:["SQ","1","PatientPhysiologicalStateSequence"],9772:["SQ","1","PatientPhysiologicalStateCodeSequence"],9801:["FD","1-n","DepthsOfFocus"],9803:["SQ","1","ExcludedIntervalsSequence"],9804:["DT","1","ExclusionStartDateTime"],9805:["FD","1","ExclusionDuration"],9806:["SQ","1","USImageDescriptionSequence"],9807:["SQ","1","ImageDataTypeSequence"],9808:["CS","1","DataType"],9809:["SQ","1","TransducerScanPatternCodeSequence"],"980B":["CS","1","AliasedDataType"],"980C":["CS","1","PositionMeasuringDeviceUsed"],"980D":["SQ","1","TransducerGeometryCodeSequence"],"980E":["SQ","1","TransducerBeamSteeringCodeSequence"],"980F":["SQ","1","TransducerApplicationCodeSequence"],9810:["xs","1","ZeroVelocityPixelValue"],9900:["LO","1","ReferenceLocationLabel"],9901:["UT","1","ReferenceLocationDescription"],9902:["SQ","1","ReferenceBasisCodeSequence"],9903:["SQ","1","ReferenceGeometryCodeSequence"],9904:["DS","1","OffsetDistance"],9905:["CS","1","OffsetDirection"],9906:["SQ","1","PotentialScheduledProtocolCodeSequence"],9907:["SQ","1","PotentialRequestedProcedureCodeSequence"],9908:["UC","1-n","PotentialReasonsForProcedure"],9909:["SQ","1","PotentialReasonsForProcedureCodeSequence"],"990A":["UC","1-n","PotentialDiagnosticTasks"],"990B":["SQ","1","ContraindicationsCodeSequence"],"990C":["SQ","1","ReferencedDefinedProtocolSequence"],"990D":["SQ","1","ReferencedPerformedProtocolSequence"],"990E":["SQ","1","PredecessorProtocolSequence"],"990F":["UT","1","ProtocolPlanningInformation"],9910:["UT","1","ProtocolDesignRationale"],9911:["SQ","1","PatientSpecificationSequence"],9912:["SQ","1","ModelSpecificationSequence"],9913:["SQ","1","ParametersSpecificationSequence"],9914:["SQ","1","InstructionSequence"],9915:["US","1","InstructionIndex"],9916:["LO","1","InstructionText"],9917:["UT","1","InstructionDescription"],9918:["CS","1","InstructionPerformedFlag"],9919:["DT","1","InstructionPerformedDateTime"],"991A":["UT","1","InstructionPerformanceComment"],"991B":["SQ","1","PatientPositioningInstructionSequence"],"991C":["SQ","1","PositioningMethodCodeSequence"],"991D":["SQ","1","PositioningLandmarkSequence"],"991E":["UI","1","TargetFrameOfReferenceUID"],"991F":["SQ","1","AcquisitionProtocolElementSpecificationSequence"],9920:["SQ","1","AcquisitionProtocolElementSequence"],9921:["US","1","ProtocolElementNumber"],9922:["LO","1","ProtocolElementName"],9923:["UT","1","ProtocolElementCharacteristicsSummary"],9924:["UT","1","ProtocolElementPurpose"],9930:["CS","1","AcquisitionMotion"],9931:["SQ","1","AcquisitionStartLocationSequence"],9932:["SQ","1","AcquisitionEndLocationSequence"],9933:["SQ","1","ReconstructionProtocolElementSpecificationSequence"],9934:["SQ","1","ReconstructionProtocolElementSequence"],9935:["SQ","1","StorageProtocolElementSpecificationSequence"],9936:["SQ","1","StorageProtocolElementSequence"],9937:["LO","1","RequestedSeriesDescription"],9938:["US","1-n","SourceAcquisitionProtocolElementNumber"],9939:["US","1-n","SourceAcquisitionBeamNumber"],"993A":["US","1-n","SourceReconstructionProtocolElementNumber"],"993B":["SQ","1","ReconstructionStartLocationSequence"],"993C":["SQ","1","ReconstructionEndLocationSequence"],"993D":["SQ","1","ReconstructionAlgorithmSequence"],"993E":["SQ","1","ReconstructionTargetCenterLocationSequence"],9941:["UT","1","ImageFilterDescription"],9942:["FD","1","CTDIvolNotificationTrigger"],9943:["FD","1","DLPNotificationTrigger"],9944:["CS","1","AutoKVPSelectionType"],9945:["FD","1","AutoKVPUpperBound"],9946:["FD","1","AutoKVPLowerBound"],9947:["CS","1","ProtocolDefinedPatientPosition"],A001:["SQ","1","ContributingEquipmentSequence"],A002:["DT","1","ContributionDateTime"],A003:["ST","1","ContributionDescription"]},"0020":{"0000":["UL","1","GenericGroupLength"],"000D":["UI","1","StudyInstanceUID"],"000E":["UI","1","SeriesInstanceUID"],"0010":["SH","1","StudyID"],"0011":["IS","1","SeriesNumber"],"0012":["IS","1","AcquisitionNumber"],"0013":["IS","1","InstanceNumber"],"0014":["IS","1","IsotopeNumber"],"0015":["IS","1","PhaseNumber"],"0016":["IS","1","IntervalNumber"],"0017":["IS","1","TimeSlotNumber"],"0018":["IS","1","AngleNumber"],"0019":["IS","1","ItemNumber"],"0020":["CS","2","PatientOrientation"],"0022":["IS","1","OverlayNumber"],"0024":["IS","1","CurveNumber"],"0026":["IS","1","LUTNumber"],"0030":["DS","3","ImagePosition"],"0032":["DS","3","ImagePositionPatient"],"0035":["DS","6","ImageOrientation"],"0037":["DS","6","ImageOrientationPatient"],"0050":["DS","1","Location"],"0052":["UI","1","FrameOfReferenceUID"],"0060":["CS","1","Laterality"],"0062":["CS","1","ImageLaterality"],"0070":["LO","1","ImageGeometryType"],"0080":["CS","1-n","MaskingImage"],"00AA":["IS","1","ReportNumber"],"0100":["IS","1","TemporalPositionIdentifier"],"0105":["IS","1","NumberOfTemporalPositions"],"0110":["DS","1","TemporalResolution"],"0200":["UI","1","SynchronizationFrameOfReferenceUID"],"0242":["UI","1","SOPInstanceUIDOfConcatenationSource"],1e3:["IS","1","SeriesInStudy"],1001:["IS","1","AcquisitionsInSeries"],1002:["IS","1","ImagesInAcquisition"],1003:["IS","1","ImagesInSeries"],1004:["IS","1","AcquisitionsInStudy"],1005:["IS","1","ImagesInStudy"],1020:["LO","1-n","Reference"],"103F":["LO","1","TargetPositionReferenceIndicator"],1040:["LO","1","PositionReferenceIndicator"],1041:["DS","1","SliceLocation"],1070:["IS","1-n","OtherStudyNumbers"],1200:["IS","1","NumberOfPatientRelatedStudies"],1202:["IS","1","NumberOfPatientRelatedSeries"],1204:["IS","1","NumberOfPatientRelatedInstances"],1206:["IS","1","NumberOfStudyRelatedSeries"],1208:["IS","1","NumberOfStudyRelatedInstances"],1209:["IS","1","NumberOfSeriesRelatedInstances"],3100:["CS","1-n","SourceImageIDs"],3401:["CS","1","ModifyingDeviceID"],3402:["CS","1","ModifiedImageID"],3403:["DA","1","ModifiedImageDate"],3404:["LO","1","ModifyingDeviceManufacturer"],3405:["TM","1","ModifiedImageTime"],3406:["LO","1","ModifiedImageDescription"],4e3:["LT","1","ImageComments"],5e3:["AT","1-n","OriginalImageIdentification"],5002:["LO","1-n","OriginalImageIdentificationNomenclature"],9056:["SH","1","StackID"],9057:["UL","1","InStackPositionNumber"],9071:["SQ","1","FrameAnatomySequence"],9072:["CS","1","FrameLaterality"],9111:["SQ","1","FrameContentSequence"],9113:["SQ","1","PlanePositionSequence"],9116:["SQ","1","PlaneOrientationSequence"],9128:["UL","1","TemporalPositionIndex"],9153:["FD","1","NominalCardiacTriggerDelayTime"],9154:["FL","1","NominalCardiacTriggerTimePriorToRPeak"],9155:["FL","1","ActualCardiacTriggerTimePriorToRPeak"],9156:["US","1","FrameAcquisitionNumber"],9157:["UL","1-n","DimensionIndexValues"],9158:["LT","1","FrameComments"],9161:["UI","1","ConcatenationUID"],9162:["US","1","InConcatenationNumber"],9163:["US","1","InConcatenationTotalNumber"],9164:["UI","1","DimensionOrganizationUID"],9165:["AT","1","DimensionIndexPointer"],9167:["AT","1","FunctionalGroupPointer"],9170:["SQ","1","UnassignedSharedConvertedAttributesSequence"],9171:["SQ","1","UnassignedPerFrameConvertedAttributesSequence"],9172:["SQ","1","ConversionSourceAttributesSequence"],9213:["LO","1","DimensionIndexPrivateCreator"],9221:["SQ","1","DimensionOrganizationSequence"],9222:["SQ","1","DimensionIndexSequence"],9228:["UL","1","ConcatenationFrameOffsetNumber"],9238:["LO","1","FunctionalGroupPrivateCreator"],9241:["FL","1","NominalPercentageOfCardiacPhase"],9245:["FL","1","NominalPercentageOfRespiratoryPhase"],9246:["FL","1","StartingRespiratoryAmplitude"],9247:["CS","1","StartingRespiratoryPhase"],9248:["FL","1","EndingRespiratoryAmplitude"],9249:["CS","1","EndingRespiratoryPhase"],9250:["CS","1","RespiratoryTriggerType"],9251:["FD","1","RRIntervalTimeNominal"],9252:["FD","1","ActualCardiacTriggerDelayTime"],9253:["SQ","1","RespiratorySynchronizationSequence"],9254:["FD","1","RespiratoryIntervalTime"],9255:["FD","1","NominalRespiratoryTriggerDelayTime"],9256:["FD","1","RespiratoryTriggerDelayThreshold"],9257:["FD","1","ActualRespiratoryTriggerDelayTime"],9301:["FD","3","ImagePositionVolume"],9302:["FD","6","ImageOrientationVolume"],9307:["CS","1","UltrasoundAcquisitionGeometry"],9308:["FD","3","ApexPosition"],9309:["FD","16","VolumeToTransducerMappingMatrix"],"930A":["FD","16","VolumeToTableMappingMatrix"],"930B":["CS","1","VolumeToTransducerRelationship"],"930C":["CS","1","PatientFrameOfReferenceSource"],"930D":["FD","1","TemporalPositionTimeOffset"],"930E":["SQ","1","PlanePositionVolumeSequence"],"930F":["SQ","1","PlaneOrientationVolumeSequence"],9310:["SQ","1","TemporalPositionSequence"],9311:["CS","1","DimensionOrganizationType"],9312:["UI","1","VolumeFrameOfReferenceUID"],9313:["UI","1","TableFrameOfReferenceUID"],9421:["LO","1","DimensionDescriptionLabel"],9450:["SQ","1","PatientOrientationInFrameSequence"],9453:["LO","1","FrameLabel"],9518:["US","1-n","AcquisitionIndex"],9529:["SQ","1","ContributingSOPInstancesReferenceSequence"],9536:["US","1","ReconstructionIndex"]},"0022":{"0000":["UL","1","GenericGroupLength"],"0001":["US","1","LightPathFilterPassThroughWavelength"],"0002":["US","2","LightPathFilterPassBand"],"0003":["US","1","ImagePathFilterPassThroughWavelength"],"0004":["US","2","ImagePathFilterPassBand"],"0005":["CS","1","PatientEyeMovementCommanded"],"0006":["SQ","1","PatientEyeMovementCommandCodeSequence"],"0007":["FL","1","SphericalLensPower"],"0008":["FL","1","CylinderLensPower"],"0009":["FL","1","CylinderAxis"],"000A":["FL","1","EmmetropicMagnification"],"000B":["FL","1","IntraOcularPressure"],"000C":["FL","1","HorizontalFieldOfView"],"000D":["CS","1","PupilDilated"],"000E":["FL","1","DegreeOfDilation"],"0010":["FL","1","StereoBaselineAngle"],"0011":["FL","1","StereoBaselineDisplacement"],"0012":["FL","1","StereoHorizontalPixelOffset"],"0013":["FL","1","StereoVerticalPixelOffset"],"0014":["FL","1","StereoRotation"],"0015":["SQ","1","AcquisitionDeviceTypeCodeSequence"],"0016":["SQ","1","IlluminationTypeCodeSequence"],"0017":["SQ","1","LightPathFilterTypeStackCodeSequence"],"0018":["SQ","1","ImagePathFilterTypeStackCodeSequence"],"0019":["SQ","1","LensesCodeSequence"],"001A":["SQ","1","ChannelDescriptionCodeSequence"],"001B":["SQ","1","RefractiveStateSequence"],"001C":["SQ","1","MydriaticAgentCodeSequence"],"001D":["SQ","1","RelativeImagePositionCodeSequence"],"001E":["FL","1","CameraAngleOfView"],"0020":["SQ","1","StereoPairsSequence"],"0021":["SQ","1","LeftImageSequence"],"0022":["SQ","1","RightImageSequence"],"0028":["CS","1","StereoPairsPresent"],"0030":["FL","1","AxialLengthOfTheEye"],"0031":["SQ","1","OphthalmicFrameLocationSequence"],"0032":["FL","2-2n","ReferenceCoordinates"],"0035":["FL","1","DepthSpatialResolution"],"0036":["FL","1","MaximumDepthDistortion"],"0037":["FL","1","AlongScanSpatialResolution"],"0038":["FL","1","MaximumAlongScanDistortion"],"0039":["CS","1","OphthalmicImageOrientation"],"0041":["FL","1","DepthOfTransverseImage"],"0042":["SQ","1","MydriaticAgentConcentrationUnitsSequence"],"0048":["FL","1","AcrossScanSpatialResolution"],"0049":["FL","1","MaximumAcrossScanDistortion"],"004E":["DS","1","MydriaticAgentConcentration"],"0055":["FL","1","IlluminationWaveLength"],"0056":["FL","1","IlluminationPower"],"0057":["FL","1","IlluminationBandwidth"],"0058":["SQ","1","MydriaticAgentSequence"],1007:["SQ","1","OphthalmicAxialMeasurementsRightEyeSequence"],1008:["SQ","1","OphthalmicAxialMeasurementsLeftEyeSequence"],1009:["CS","1","OphthalmicAxialMeasurementsDeviceType"],1010:["CS","1","OphthalmicAxialLengthMeasurementsType"],1012:["SQ","1","OphthalmicAxialLengthSequence"],1019:["FL","1","OphthalmicAxialLength"],1024:["SQ","1","LensStatusCodeSequence"],1025:["SQ","1","VitreousStatusCodeSequence"],1028:["SQ","1","IOLFormulaCodeSequence"],1029:["LO","1","IOLFormulaDetail"],1033:["FL","1","KeratometerIndex"],1035:["SQ","1","SourceOfOphthalmicAxialLengthCodeSequence"],1036:["SQ","1","SourceOfCornealSizeDataCodeSequence"],1037:["FL","1","TargetRefraction"],1039:["CS","1","RefractiveProcedureOccurred"],1040:["SQ","1","RefractiveSurgeryTypeCodeSequence"],1044:["SQ","1","OphthalmicUltrasoundMethodCodeSequence"],1045:["SQ","1","SurgicallyInducedAstigmatismSequence"],1046:["CS","1","TypeOfOpticalCorrection"],1047:["SQ","1","ToricIOLPowerSequence"],1048:["SQ","1","PredictedToricErrorSequence"],1049:["CS","1","PreSelectedForImplantation"],"104A":["SQ","1","ToricIOLPowerForExactEmmetropiaSequence"],"104B":["SQ","1","ToricIOLPowerForExactTargetRefractionSequence"],1050:["SQ","1","OphthalmicAxialLengthMeasurementsSequence"],1053:["FL","1","IOLPower"],1054:["FL","1","PredictedRefractiveError"],1059:["FL","1","OphthalmicAxialLengthVelocity"],1065:["LO","1","LensStatusDescription"],1066:["LO","1","VitreousStatusDescription"],1090:["SQ","1","IOLPowerSequence"],1092:["SQ","1","LensConstantSequence"],1093:["LO","1","IOLManufacturer"],1094:["LO","1","LensConstantDescription"],1095:["LO","1","ImplantName"],1096:["SQ","1","KeratometryMeasurementTypeCodeSequence"],1097:["LO","1","ImplantPartNumber"],1100:["SQ","1","ReferencedOphthalmicAxialMeasurementsSequence"],1101:["SQ","1","OphthalmicAxialLengthMeasurementsSegmentNameCodeSequence"],1103:["SQ","1","RefractiveErrorBeforeRefractiveSurgeryCodeSequence"],1121:["FL","1","IOLPowerForExactEmmetropia"],1122:["FL","1","IOLPowerForExactTargetRefraction"],1125:["SQ","1","AnteriorChamberDepthDefinitionCodeSequence"],1127:["SQ","1","LensThicknessSequence"],1128:["SQ","1","AnteriorChamberDepthSequence"],"112A":["SQ","1","CalculationCommentSequence"],"112B":["CS","1","CalculationCommentType"],"112C":["LT","1","CalculationComment"],1130:["FL","1","LensThickness"],1131:["FL","1","AnteriorChamberDepth"],1132:["SQ","1","SourceOfLensThicknessDataCodeSequence"],1133:["SQ","1","SourceOfAnteriorChamberDepthDataCodeSequence"],1134:["SQ","1","SourceOfRefractiveMeasurementsSequence"],1135:["SQ","1","SourceOfRefractiveMeasurementsCodeSequence"],1140:["CS","1","OphthalmicAxialLengthMeasurementModified"],1150:["SQ","1","OphthalmicAxialLengthDataSourceCodeSequence"],1153:["SQ","1","OphthalmicAxialLengthAcquisitionMethodCodeSequence"],1155:["FL","1","SignalToNoiseRatio"],1159:["LO","1","OphthalmicAxialLengthDataSourceDescription"],1210:["SQ","1","OphthalmicAxialLengthMeasurementsTotalLengthSequence"],1211:["SQ","1","OphthalmicAxialLengthMeasurementsSegmentalLengthSequence"],1212:["SQ","1","OphthalmicAxialLengthMeasurementsLengthSummationSequence"],1220:["SQ","1","UltrasoundOphthalmicAxialLengthMeasurementsSequence"],1225:["SQ","1","OpticalOphthalmicAxialLengthMeasurementsSequence"],1230:["SQ","1","UltrasoundSelectedOphthalmicAxialLengthSequence"],1250:["SQ","1","OphthalmicAxialLengthSelectionMethodCodeSequence"],1255:["SQ","1","OpticalSelectedOphthalmicAxialLengthSequence"],1257:["SQ","1","SelectedSegmentalOphthalmicAxialLengthSequence"],1260:["SQ","1","SelectedTotalOphthalmicAxialLengthSequence"],1262:["SQ","1","OphthalmicAxialLengthQualityMetricSequence"],1265:["SQ","1","OphthalmicAxialLengthQualityMetricTypeCodeSequence"],1273:["LO","1","OphthalmicAxialLengthQualityMetricTypeDescription"],1300:["SQ","1","IntraocularLensCalculationsRightEyeSequence"],1310:["SQ","1","IntraocularLensCalculationsLeftEyeSequence"],1330:["SQ","1","ReferencedOphthalmicAxialLengthMeasurementQCImageSequence"],1415:["CS","1","OphthalmicMappingDeviceType"],1420:["SQ","1","AcquisitionMethodCodeSequence"],1423:["SQ","1","AcquisitionMethodAlgorithmSequence"],1436:["SQ","1","OphthalmicThicknessMapTypeCodeSequence"],1443:["SQ","1","OphthalmicThicknessMappingNormalsSequence"],1445:["SQ","1","RetinalThicknessDefinitionCodeSequence"],1450:["SQ","1","PixelValueMappingToCodedConceptSequence"],1452:["xs","1","MappedPixelValue"],1454:["LO","1","PixelValueMappingExplanation"],1458:["SQ","1","OphthalmicThicknessMapQualityThresholdSequence"],1460:["FL","1","OphthalmicThicknessMapThresholdQualityRating"],1463:["FL","2","AnatomicStructureReferencePoint"],1465:["SQ","1","RegistrationToLocalizerSequence"],1466:["CS","1","RegisteredLocalizerUnits"],1467:["FL","2","RegisteredLocalizerTopLeftHandCorner"],1468:["FL","2","RegisteredLocalizerBottomRightHandCorner"],1470:["SQ","1","OphthalmicThicknessMapQualityRatingSequence"],1472:["SQ","1","RelevantOPTAttributesSequence"],1512:["SQ","1","TransformationMethodCodeSequence"],1513:["SQ","1","TransformationAlgorithmSequence"],1515:["CS","1","OphthalmicAxialLengthMethod"],1517:["FL","1","OphthalmicFOV"],1518:["SQ","1","TwoDimensionalToThreeDimensionalMapSequence"],1525:["SQ","1","WideFieldOphthalmicPhotographyQualityRatingSequence"],1526:["SQ","1","WideFieldOphthalmicPhotographyQualityThresholdSequence"],1527:["FL","1","WideFieldOphthalmicPhotographyThresholdQualityRating"],1528:["FL","1","XCoordinatesCenterPixelViewAngle"],1529:["FL","1","YCoordinatesCenterPixelViewAngle"],1530:["UL","1","NumberOfMapPoints"],1531:["OF","1","TwoDimensionalToThreeDimensionalMapData"],1612:["SQ","1","DerivationAlgorithmSequence"],1615:["SQ","1","OphthalmicImageTypeCodeSequence"],1616:["LO","1","OphthalmicImageTypeDescription"],1618:["SQ","1","ScanPatternTypeCodeSequence"],1620:["SQ","1","ReferencedSurfaceMeshIdentificationSequence"],1622:["CS","1","OphthalmicVolumetricPropertiesFlag"],1624:["FL","1","OphthalmicAnatomicReferencePointXCoordinate"],1626:["FL","1","OphthalmicAnatomicReferencePointYCoordinate"],1628:["SQ","1","OphthalmicEnFaceImageQualityRatingSequence"],1630:["DS","1","QualityThreshold"],1640:["SQ","1","OCTBscanAnalysisAcquisitionParametersSequence"],1642:["UL","1","NumberOfBscansPerFrame"],1643:["FL","1","BscanSlabThickness"],1644:["FL","1","DistanceBetweenBscanSlabs"],1645:["FL","1","BscanCycleTime"],1646:["FL","1-n","BscanCycleTimeVector"],1649:["FL","1","AscanRate"],1650:["FL","1","BscanRate"],1658:["UL","1","SurfaceMeshZPixelOffset"]},"0024":{"0000":["UL","1","GenericGroupLength"],"0010":["FL","1","VisualFieldHorizontalExtent"],"0011":["FL","1","VisualFieldVerticalExtent"],"0012":["CS","1","VisualFieldShape"],"0016":["SQ","1","ScreeningTestModeCodeSequence"],"0018":["FL","1","MaximumStimulusLuminance"],"0020":["FL","1","BackgroundLuminance"],"0021":["SQ","1","StimulusColorCodeSequence"],"0024":["SQ","1","BackgroundIlluminationColorCodeSequence"],"0025":["FL","1","StimulusArea"],"0028":["FL","1","StimulusPresentationTime"],"0032":["SQ","1","FixationSequence"],"0033":["SQ","1","FixationMonitoringCodeSequence"],"0034":["SQ","1","VisualFieldCatchTrialSequence"],"0035":["US","1","FixationCheckedQuantity"],"0036":["US","1","PatientNotProperlyFixatedQuantity"],"0037":["CS","1","PresentedVisualStimuliDataFlag"],"0038":["US","1","NumberOfVisualStimuli"],"0039":["CS","1","ExcessiveFixationLossesDataFlag"],"0040":["CS","1","ExcessiveFixationLosses"],"0042":["US","1","StimuliRetestingQuantity"],"0044":["LT","1","CommentsOnPatientPerformanceOfVisualField"],"0045":["CS","1","FalseNegativesEstimateFlag"],"0046":["FL","1","FalseNegativesEstimate"],"0048":["US","1","NegativeCatchTrialsQuantity"],"0050":["US","1","FalseNegativesQuantity"],"0051":["CS","1","ExcessiveFalseNegativesDataFlag"],"0052":["CS","1","ExcessiveFalseNegatives"],"0053":["CS","1","FalsePositivesEstimateFlag"],"0054":["FL","1","FalsePositivesEstimate"],"0055":["CS","1","CatchTrialsDataFlag"],"0056":["US","1","PositiveCatchTrialsQuantity"],"0057":["CS","1","TestPointNormalsDataFlag"],"0058":["SQ","1","TestPointNormalsSequence"],"0059":["CS","1","GlobalDeviationProbabilityNormalsFlag"],"0060":["US","1","FalsePositivesQuantity"],"0061":["CS","1","ExcessiveFalsePositivesDataFlag"],"0062":["CS","1","ExcessiveFalsePositives"],"0063":["CS","1","VisualFieldTestNormalsFlag"],"0064":["SQ","1","ResultsNormalsSequence"],"0065":["SQ","1","AgeCorrectedSensitivityDeviationAlgorithmSequence"],"0066":["FL","1","GlobalDeviationFromNormal"],"0067":["SQ","1","GeneralizedDefectSensitivityDeviationAlgorithmSequence"],"0068":["FL","1","LocalizedDeviationFromNormal"],"0069":["LO","1","PatientReliabilityIndicator"],"0070":["FL","1","VisualFieldMeanSensitivity"],"0071":["FL","1","GlobalDeviationProbability"],"0072":["CS","1","LocalDeviationProbabilityNormalsFlag"],"0073":["FL","1","LocalizedDeviationProbability"],"0074":["CS","1","ShortTermFluctuationCalculated"],"0075":["FL","1","ShortTermFluctuation"],"0076":["CS","1","ShortTermFluctuationProbabilityCalculated"],"0077":["FL","1","ShortTermFluctuationProbability"],"0078":["CS","1","CorrectedLocalizedDeviationFromNormalCalculated"],"0079":["FL","1","CorrectedLocalizedDeviationFromNormal"],"0080":["CS","1","CorrectedLocalizedDeviationFromNormalProbabilityCalculated"],"0081":["FL","1","CorrectedLocalizedDeviationFromNormalProbability"],"0083":["SQ","1","GlobalDeviationProbabilitySequence"],"0085":["SQ","1","LocalizedDeviationProbabilitySequence"],"0086":["CS","1","FovealSensitivityMeasured"],"0087":["FL","1","FovealSensitivity"],"0088":["FL","1","VisualFieldTestDuration"],"0089":["SQ","1","VisualFieldTestPointSequence"],"0090":["FL","1","VisualFieldTestPointXCoordinate"],"0091":["FL","1","VisualFieldTestPointYCoordinate"],"0092":["FL","1","AgeCorrectedSensitivityDeviationValue"],"0093":["CS","1","StimulusResults"],"0094":["FL","1","SensitivityValue"],"0095":["CS","1","RetestStimulusSeen"],"0096":["FL","1","RetestSensitivityValue"],"0097":["SQ","1","VisualFieldTestPointNormalsSequence"],"0098":["FL","1","QuantifiedDefect"],"0100":["FL","1","AgeCorrectedSensitivityDeviationProbabilityValue"],"0102":["CS","1","GeneralizedDefectCorrectedSensitivityDeviationFlag"],"0103":["FL","1","GeneralizedDefectCorrectedSensitivityDeviationValue"],"0104":["FL","1","GeneralizedDefectCorrectedSensitivityDeviationProbabilityValue"],"0105":["FL","1","MinimumSensitivityValue"],"0106":["CS","1","BlindSpotLocalized"],"0107":["FL","1","BlindSpotXCoordinate"],"0108":["FL","1","BlindSpotYCoordinate"],"0110":["SQ","1","VisualAcuityMeasurementSequence"],"0112":["SQ","1","RefractiveParametersUsedOnPatientSequence"],"0113":["CS","1","MeasurementLaterality"],"0114":["SQ","1","OphthalmicPatientClinicalInformationLeftEyeSequence"],"0115":["SQ","1","OphthalmicPatientClinicalInformationRightEyeSequence"],"0117":["CS","1","FovealPointNormativeDataFlag"],"0118":["FL","1","FovealPointProbabilityValue"],"0120":["CS","1","ScreeningBaselineMeasured"],"0122":["SQ","1","ScreeningBaselineMeasuredSequence"],"0124":["CS","1","ScreeningBaselineType"],"0126":["FL","1","ScreeningBaselineValue"],"0202":["LO","1","AlgorithmSource"],"0306":["LO","1","DataSetName"],"0307":["LO","1","DataSetVersion"],"0308":["LO","1","DataSetSource"],"0309":["LO","1","DataSetDescription"],"0317":["SQ","1","VisualFieldTestReliabilityGlobalIndexSequence"],"0320":["SQ","1","VisualFieldGlobalResultsIndexSequence"],"0325":["SQ","1","DataObservationSequence"],"0338":["CS","1","IndexNormalsFlag"],"0341":["FL","1","IndexProbability"],"0344":["SQ","1","IndexProbabilitySequence"]},"0028":{"0000":["UL","1","GenericGroupLength"],"0002":["US","1","SamplesPerPixel"],"0003":["US","1","SamplesPerPixelUsed"],"0004":["CS","1","PhotometricInterpretation"],"0005":["US","1","ImageDimensions"],"0006":["US","1","PlanarConfiguration"],"0008":["IS","1","NumberOfFrames"],"0009":["AT","1-n","FrameIncrementPointer"],"000A":["AT","1-n","FrameDimensionPointer"],"0010":["US","1","Rows"],"0011":["US","1","Columns"],"0012":["US","1","Planes"],"0014":["US","1","UltrasoundColorDataPresent"],"0020":["","",""],"0030":["DS","2","PixelSpacing"],"0031":["DS","2","ZoomFactor"],"0032":["DS","2","ZoomCenter"],"0034":["IS","2","PixelAspectRatio"],"0040":["CS","1","ImageFormat"],"0050":["LO","1-n","ManipulatedImage"],"0051":["CS","1-n","CorrectedImage"],"005F":["LO","1","CompressionRecognitionCode"],"0060":["CS","1","CompressionCode"],"0061":["SH","1","CompressionOriginator"],"0062":["LO","1","CompressionLabel"],"0063":["SH","1","CompressionDescription"],"0065":["CS","1-n","CompressionSequence"],"0066":["AT","1-n","CompressionStepPointers"],"0068":["US","1","RepeatInterval"],"0069":["US","1","BitsGrouped"],"0070":["US","1-n","PerimeterTable"],"0071":["xs","1","PerimeterValue"],"0080":["US","1","PredictorRows"],"0081":["US","1","PredictorColumns"],"0082":["US","1-n","PredictorConstants"],"0090":["CS","1","BlockedPixels"],"0091":["US","1","BlockRows"],"0092":["US","1","BlockColumns"],"0093":["US","1","RowOverlap"],"0094":["US","1","ColumnOverlap"],"0100":["US","1","BitsAllocated"],"0101":["US","1","BitsStored"],"0102":["US","1","HighBit"],"0103":["US","1","PixelRepresentation"],"0104":["xs","1","SmallestValidPixelValue"],"0105":["xs","1","LargestValidPixelValue"],"0106":["xs","1","SmallestImagePixelValue"],"0107":["xs","1","LargestImagePixelValue"],"0108":["xs","1","SmallestPixelValueInSeries"],"0109":["xs","1","LargestPixelValueInSeries"],"0110":["xs","1","SmallestImagePixelValueInPlane"],"0111":["xs","1","LargestImagePixelValueInPlane"],"0120":["xs","1","PixelPaddingValue"],"0121":["xs","1","PixelPaddingRangeLimit"],"0122":["FL","1","FloatPixelPaddingValue"],"0123":["FD","1","DoubleFloatPixelPaddingValue"],"0124":["FL","1","FloatPixelPaddingRangeLimit"],"0125":["FD","1","DoubleFloatPixelPaddingRangeLimit"],"0200":["US","1","ImageLocation"],"0300":["CS","1","QualityControlImage"],"0301":["CS","1","BurnedInAnnotation"],"0302":["CS","1","RecognizableVisualFeatures"],"0303":["CS","1","LongitudinalTemporalInformationModified"],"0304":["UI","1","ReferencedColorPaletteInstanceUID"],"0400":["LO","1","TransformLabel"],"0401":["LO","1","TransformVersionNumber"],"0402":["US","1","NumberOfTransformSteps"],"0403":["LO","1-n","SequenceOfCompressedData"],"0404":["AT","1-n","DetailsOfCoefficients"],"04x0":["US","1","RowsForNthOrderCoefficients"],"04x1":["US","1","ColumnsForNthOrderCoefficients"],"04x2":["LO","1-n","CoefficientCoding"],"04x3":["AT","1-n","CoefficientCodingPointers"],"0700":["LO","1","DCTLabel"],"0701":["CS","1-n","DataBlockDescription"],"0702":["AT","1-n","DataBlock"],"0710":["US","1","NormalizationFactorFormat"],"0720":["US","1","ZonalMapNumberFormat"],"0721":["AT","1-n","ZonalMapLocation"],"0722":["US","1","ZonalMapFormat"],"0730":["US","1","AdaptiveMapFormat"],"0740":["US","1","CodeNumberFormat"],"08x0":["CS","1-n","CodeLabel"],"08x2":["US","1","NumberOfTables"],"08x3":["AT","1-n","CodeTableLocation"],"08x4":["US","1","BitsForCodeWord"],"08x8":["AT","1-n","ImageDataLocation"],"0A02":["CS","1","PixelSpacingCalibrationType"],"0A04":["LO","1","PixelSpacingCalibrationDescription"],1040:["CS","1","PixelIntensityRelationship"],1041:["SS","1","PixelIntensityRelationshipSign"],1050:["DS","1-n","WindowCenter"],1051:["DS","1-n","WindowWidth"],1052:["DS","1","RescaleIntercept"],1053:["DS","1","RescaleSlope"],1054:["LO","1","RescaleType"],1055:["LO","1-n","WindowCenterWidthExplanation"],1056:["CS","1","VOILUTFunction"],1080:["CS","1","GrayScale"],1090:["CS","1","RecommendedViewingMode"],1100:["xs","3","GrayLookupTableDescriptor"],1101:["xs","3","RedPaletteColorLookupTableDescriptor"],1102:["xs","3","GreenPaletteColorLookupTableDescriptor"],1103:["xs","3","BluePaletteColorLookupTableDescriptor"],1104:["US","3","AlphaPaletteColorLookupTableDescriptor"],1111:["xs","4","LargeRedPaletteColorLookupTableDescriptor"],1112:["xs","4","LargeGreenPaletteColorLookupTableDescriptor"],1113:["xs","4","LargeBluePaletteColorLookupTableDescriptor"],1199:["UI","1","PaletteColorLookupTableUID"],1200:["xs","1-n or 1","GrayLookupTableData"],1201:["OW","1","RedPaletteColorLookupTableData"],1202:["OW","1","GreenPaletteColorLookupTableData"],1203:["OW","1","BluePaletteColorLookupTableData"],1204:["OW","1","AlphaPaletteColorLookupTableData"],1211:["OW","1","LargeRedPaletteColorLookupTableData"],1212:["OW","1","LargeGreenPaletteColorLookupTableData"],1213:["OW","1","LargeBluePaletteColorLookupTableData"],1214:["UI","1","LargePaletteColorLookupTableUID"],1221:["OW","1","SegmentedRedPaletteColorLookupTableData"],1222:["OW","1","SegmentedGreenPaletteColorLookupTableData"],1223:["OW","1","SegmentedBluePaletteColorLookupTableData"],1224:["OW","1","SegmentedAlphaPaletteColorLookupTableData"],1230:["SQ","1","StoredValueColorRangeSequence"],1231:["FD","1","MinimumStoredValueMapped"],1232:["FD","1","MaximumStoredValueMapped"],1300:["CS","1","BreastImplantPresent"],1350:["CS","1","PartialView"],1351:["ST","1","PartialViewDescription"],1352:["SQ","1","PartialViewCodeSequence"],"135A":["CS","1","SpatialLocationsPreserved"],1401:["SQ","1","DataFrameAssignmentSequence"],1402:["CS","1","DataPathAssignment"],1403:["US","1","BitsMappedToColorLookupTable"],1404:["SQ","1","BlendingLUT1Sequence"],1405:["CS","1","BlendingLUT1TransferFunction"],1406:["FD","1","BlendingWeightConstant"],1407:["US","3","BlendingLookupTableDescriptor"],1408:["OW","1","BlendingLookupTableData"],"140B":["SQ","1","EnhancedPaletteColorLookupTableSequence"],"140C":["SQ","1","BlendingLUT2Sequence"],"140D":["CS","1","BlendingLUT2TransferFunction"],"140E":["CS","1","DataPathID"],"140F":["CS","1","RGBLUTTransferFunction"],1410:["CS","1","AlphaLUTTransferFunction"],2e3:["OB","1","ICCProfile"],2002:["CS","1","ColorSpace"],2110:["CS","1","LossyImageCompression"],2112:["DS","1-n","LossyImageCompressionRatio"],2114:["CS","1-n","LossyImageCompressionMethod"],3e3:["SQ","1","ModalityLUTSequence"],3002:["xs","3","LUTDescriptor"],3003:["LO","1","LUTExplanation"],3004:["LO","1","ModalityLUTType"],3006:["xx","1-n or 1","LUTData"],3010:["SQ","1","VOILUTSequence"],3110:["SQ","1","SoftcopyVOILUTSequence"],4e3:["LT","1","ImagePresentationComments"],5e3:["SQ","1","BiPlaneAcquisitionSequence"],6010:["US","1","RepresentativeFrameNumber"],6020:["US","1-n","FrameNumbersOfInterest"],6022:["LO","1-n","FrameOfInterestDescription"],6023:["CS","1-n","FrameOfInterestType"],6030:["US","1-n","MaskPointers"],6040:["US","1-n","RWavePointer"],6100:["SQ","1","MaskSubtractionSequence"],6101:["CS","1","MaskOperation"],6102:["US","2-2n","ApplicableFrameRange"],6110:["US","1-n","MaskFrameNumbers"],6112:["US","1","ContrastFrameAveraging"],6114:["FL","2","MaskSubPixelShift"],6120:["SS","1","TIDOffset"],6190:["ST","1","MaskOperationExplanation"],7e3:["SQ","1","EquipmentAdministratorSequence"],7001:["US","1","NumberOfDisplaySubsystems"],7002:["US","1","CurrentConfigurationID"],7003:["US","1","DisplaySubsystemID"],7004:["SH","1","DisplaySubsystemName"],7005:["LO","1","DisplaySubsystemDescription"],7006:["CS","1","SystemStatus"],7007:["LO","1","SystemStatusComment"],7008:["SQ","1","TargetLuminanceCharacteristicsSequence"],7009:["US","1","LuminanceCharacteristicsID"],"700A":["SQ","1","DisplaySubsystemConfigurationSequence"],"700B":["US","1","ConfigurationID"],"700C":["SH","1","ConfigurationName"],"700D":["LO","1","ConfigurationDescription"],"700E":["US","1","ReferencedTargetLuminanceCharacteristicsID"],"700F":["SQ","1","QAResultsSequence"],7010:["SQ","1","DisplaySubsystemQAResultsSequence"],7011:["SQ","1","ConfigurationQAResultsSequence"],7012:["SQ","1","MeasurementEquipmentSequence"],7013:["CS","1-n","MeasurementFunctions"],7014:["CS","1","MeasurementEquipmentType"],7015:["SQ","1","VisualEvaluationResultSequence"],7016:["SQ","1","DisplayCalibrationResultSequence"],7017:["US","1","DDLValue"],7018:["FL","2","CIExyWhitePoint"],7019:["CS","1","DisplayFunctionType"],"701A":["FL","1","GammaValue"],"701B":["US","1","NumberOfLuminancePoints"],"701C":["SQ","1","LuminanceResponseSequence"],"701D":["FL","1","TargetMinimumLuminance"],"701E":["FL","1","TargetMaximumLuminance"],"701F":["FL","1","LuminanceValue"],7020:["LO","1","LuminanceResponseDescription"],7021:["CS","1","WhitePointFlag"],7022:["SQ","1","DisplayDeviceTypeCodeSequence"],7023:["SQ","1","DisplaySubsystemSequence"],7024:["SQ","1","LuminanceResultSequence"],7025:["CS","1","AmbientLightValueSource"],7026:["CS","1-n","MeasuredCharacteristics"],7027:["SQ","1","LuminanceUniformityResultSequence"],7028:["SQ","1","VisualEvaluationTestSequence"],7029:["CS","1","TestResult"],"702A":["LO","1","TestResultComment"],"702B":["CS","1","TestImageValidation"],"702C":["SQ","1","TestPatternCodeSequence"],"702D":["SQ","1","MeasurementPatternCodeSequence"],"702E":["SQ","1","VisualEvaluationMethodCodeSequence"],"7FE0":["UR","1","PixelDataProviderURL"],9001:["UL","1","DataPointRows"],9002:["UL","1","DataPointColumns"],9003:["CS","1","SignalDomainColumns"],9099:["US","1","LargestMonochromePixelValue"],9108:["CS","1","DataRepresentation"],9110:["SQ","1","PixelMeasuresSequence"],9132:["SQ","1","FrameVOILUTSequence"],9145:["SQ","1","PixelValueTransformationSequence"],9235:["CS","1","SignalDomainRows"],9411:["FL","1","DisplayFilterPercentage"],9415:["SQ","1","FramePixelShiftSequence"],9416:["US","1","SubtractionItemID"],9422:["SQ","1","PixelIntensityRelationshipLUTSequence"],9443:["SQ","1","FramePixelDataPropertiesSequence"],9444:["CS","1","GeometricalProperties"],9445:["FL","1","GeometricMaximumDistortion"],9446:["CS","1-n","ImageProcessingApplied"],9454:["CS","1","MaskSelectionMode"],9474:["CS","1","LUTFunction"],9478:["FL","1","MaskVisibilityPercentage"],9501:["SQ","1","PixelShiftSequence"],9502:["SQ","1","RegionPixelShiftSequence"],9503:["SS","2-2n","VerticesOfTheRegion"],9505:["SQ","1","MultiFramePresentationSequence"],9506:["US","2-2n","PixelShiftFrameRange"],9507:["US","2-2n","LUTFrameRange"],9520:["DS","16","ImageToEquipmentMappingMatrix"],9537:["CS","1","EquipmentCoordinateSystemIdentification"]},"0032":{"0000":["UL","1","GenericGroupLength"],"000A":["CS","1","StudyStatusID"],"000C":["CS","1","StudyPriorityID"],"0012":["LO","1","StudyIDIssuer"],"0032":["DA","1","StudyVerifiedDate"],"0033":["TM","1","StudyVerifiedTime"],"0034":["DA","1","StudyReadDate"],"0035":["TM","1","StudyReadTime"],1e3:["DA","1","ScheduledStudyStartDate"],1001:["TM","1","ScheduledStudyStartTime"],1010:["DA","1","ScheduledStudyStopDate"],1011:["TM","1","ScheduledStudyStopTime"],1020:["LO","1","ScheduledStudyLocation"],1021:["AE","1-n","ScheduledStudyLocationAETitle"],1030:["LO","1","ReasonForStudy"],1031:["SQ","1","RequestingPhysicianIdentificationSequence"],1032:["PN","1","RequestingPhysician"],1033:["LO","1","RequestingService"],1034:["SQ","1","RequestingServiceCodeSequence"],1040:["DA","1","StudyArrivalDate"],1041:["TM","1","StudyArrivalTime"],1050:["DA","1","StudyCompletionDate"],1051:["TM","1","StudyCompletionTime"],1055:["CS","1","StudyComponentStatusID"],1060:["LO","1","RequestedProcedureDescription"],1064:["SQ","1","RequestedProcedureCodeSequence"],1065:["SQ","1","RequestedLateralityCodeSequence"],1066:["UT","1","ReasonForVisit"],1067:["SQ","1","ReasonForVisitCodeSequence"],1070:["LO","1","RequestedContrastAgent"],4e3:["LT","1","StudyComments"]},"0034":{"0000":["UL","1","GenericGroupLength"],"0001":["SQ","1","FlowIdentifierSequence"],"0002":["OB","1","FlowIdentifier"],"0003":["UI","1","FlowTransferSyntaxUID"],"0004":["UL","1","FlowRTPSamplingRate"],"0005":["OB","1","SourceIdentifier"],"0007":["OB","1","FrameOriginTimestamp"],"0008":["CS","1","IncludesImagingSubject"],"0009":["SQ","1","FrameUsefulnessGroupSequence"],"000A":["SQ","1","RealTimeBulkDataFlowSequence"],"000B":["SQ","1","CameraPositionGroupSequence"],"000C":["CS","1","IncludesInformation"],"000D":["SQ","1","TimeOfFrameGroupSequence"]},"0038":{"0000":["UL","1","GenericGroupLength"],"0004":["SQ","1","ReferencedPatientAliasSequence"],"0008":["CS","1","VisitStatusID"],"0010":["LO","1","AdmissionID"],"0011":["LO","1","IssuerOfAdmissionID"],"0014":["SQ","1","IssuerOfAdmissionIDSequence"],"0016":["LO","1","RouteOfAdmissions"],"001A":["DA","1","ScheduledAdmissionDate"],"001B":["TM","1","ScheduledAdmissionTime"],"001C":["DA","1","ScheduledDischargeDate"],"001D":["TM","1","ScheduledDischargeTime"],"001E":["LO","1","ScheduledPatientInstitutionResidence"],"0020":["DA","1","AdmittingDate"],"0021":["TM","1","AdmittingTime"],"0030":["DA","1","DischargeDate"],"0032":["TM","1","DischargeTime"],"0040":["LO","1","DischargeDiagnosisDescription"],"0044":["SQ","1","DischargeDiagnosisCodeSequence"],"0050":["LO","1","SpecialNeeds"],"0060":["LO","1","ServiceEpisodeID"],"0061":["LO","1","IssuerOfServiceEpisodeID"],"0062":["LO","1","ServiceEpisodeDescription"],"0064":["SQ","1","IssuerOfServiceEpisodeIDSequence"],"0100":["SQ","1","PertinentDocumentsSequence"],"0101":["SQ","1","PertinentResourcesSequence"],"0102":["LO","1","ResourceDescription"],"0300":["LO","1","CurrentPatientLocation"],"0400":["LO","1","PatientInstitutionResidence"],"0500":["LO","1","PatientState"],"0502":["SQ","1","PatientClinicalTrialParticipationSequence"],4e3:["LT","1","VisitComments"]},"003A":{"0000":["UL","1","GenericGroupLength"],"0004":["CS","1","WaveformOriginality"],"0005":["US","1","NumberOfWaveformChannels"],"0010":["UL","1","NumberOfWaveformSamples"],"001A":["DS","1","SamplingFrequency"],"0020":["SH","1","MultiplexGroupLabel"],"0200":["SQ","1","ChannelDefinitionSequence"],"0202":["IS","1","WaveformChannelNumber"],"0203":["SH","1","ChannelLabel"],"0205":["CS","1-n","ChannelStatus"],"0208":["SQ","1","ChannelSourceSequence"],"0209":["SQ","1","ChannelSourceModifiersSequence"],"020A":["SQ","1","SourceWaveformSequence"],"020C":["LO","1","ChannelDerivationDescription"],"0210":["DS","1","ChannelSensitivity"],"0211":["SQ","1","ChannelSensitivityUnitsSequence"],"0212":["DS","1","ChannelSensitivityCorrectionFactor"],"0213":["DS","1","ChannelBaseline"],"0214":["DS","1","ChannelTimeSkew"],"0215":["DS","1","ChannelSampleSkew"],"0218":["DS","1","ChannelOffset"],"021A":["US","1","WaveformBitsStored"],"0220":["DS","1","FilterLowFrequency"],"0221":["DS","1","FilterHighFrequency"],"0222":["DS","1","NotchFilterFrequency"],"0223":["DS","1","NotchFilterBandwidth"],"0230":["FL","1","WaveformDataDisplayScale"],"0231":["US","3","WaveformDisplayBackgroundCIELabValue"],"0240":["SQ","1","WaveformPresentationGroupSequence"],"0241":["US","1","PresentationGroupNumber"],"0242":["SQ","1","ChannelDisplaySequence"],"0244":["US","3","ChannelRecommendedDisplayCIELabValue"],"0245":["FL","1","ChannelPosition"],"0246":["CS","1","DisplayShadingFlag"],"0247":["FL","1","FractionalChannelDisplayScale"],"0248":["FL","1","AbsoluteChannelDisplayScale"],"0300":["SQ","1","MultiplexedAudioChannelsDescriptionCodeSequence"],"0301":["IS","1","ChannelIdentificationCode"],"0302":["CS","1","ChannelMode"],"0310":["UI","1","MultiplexGroupUID"],"0311":["DS","1","PowerlineFrequency"],"0312":["SQ","1","ChannelImpedanceSequence"],"0313":["DS","1","ImpedanceValue"],"0314":["DT","1","ImpedanceMeasurementDateTime"],"0315":["DS","1","ImpedanceMeasurementFrequency"],"0316":["CS","1","ImpedanceMeasurementCurrentType"]},"0040":{"0000":["UL","1","GenericGroupLength"],"0001":["AE","1-n","ScheduledStationAETitle"],"0002":["DA","1","ScheduledProcedureStepStartDate"],"0003":["TM","1","ScheduledProcedureStepStartTime"],"0004":["DA","1","ScheduledProcedureStepEndDate"],"0005":["TM","1","ScheduledProcedureStepEndTime"],"0006":["PN","1","ScheduledPerformingPhysicianName"],"0007":["LO","1","ScheduledProcedureStepDescription"],"0008":["SQ","1","ScheduledProtocolCodeSequence"],"0009":["SH","1","ScheduledProcedureStepID"],"000A":["SQ","1","StageCodeSequence"],"000B":["SQ","1","ScheduledPerformingPhysicianIdentificationSequence"],"0010":["SH","1-n","ScheduledStationName"],"0011":["SH","1","ScheduledProcedureStepLocation"],"0012":["LO","1","PreMedication"],"0020":["CS","1","ScheduledProcedureStepStatus"],"0026":["SQ","1","OrderPlacerIdentifierSequence"],"0027":["SQ","1","OrderFillerIdentifierSequence"],"0031":["UT","1","LocalNamespaceEntityID"],"0032":["UT","1","UniversalEntityID"],"0033":["CS","1","UniversalEntityIDType"],"0035":["CS","1","IdentifierTypeCode"],"0036":["SQ","1","AssigningFacilitySequence"],"0039":["SQ","1","AssigningJurisdictionCodeSequence"],"003A":["SQ","1","AssigningAgencyOrDepartmentCodeSequence"],"0100":["SQ","1","ScheduledProcedureStepSequence"],"0220":["SQ","1","ReferencedNonImageCompositeSOPInstanceSequence"],"0241":["AE","1","PerformedStationAETitle"],"0242":["SH","1","PerformedStationName"],"0243":["SH","1","PerformedLocation"],"0244":["DA","1","PerformedProcedureStepStartDate"],"0245":["TM","1","PerformedProcedureStepStartTime"],"0250":["DA","1","PerformedProcedureStepEndDate"],"0251":["TM","1","PerformedProcedureStepEndTime"],"0252":["CS","1","PerformedProcedureStepStatus"],"0253":["SH","1","PerformedProcedureStepID"],"0254":["LO","1","PerformedProcedureStepDescription"],"0255":["LO","1","PerformedProcedureTypeDescription"],"0260":["SQ","1","PerformedProtocolCodeSequence"],"0261":["CS","1","PerformedProtocolType"],"0270":["SQ","1","ScheduledStepAttributesSequence"],"0275":["SQ","1","RequestAttributesSequence"],"0280":["ST","1","CommentsOnThePerformedProcedureStep"],"0281":["SQ","1","PerformedProcedureStepDiscontinuationReasonCodeSequence"],"0293":["SQ","1","QuantitySequence"],"0294":["DS","1","Quantity"],"0295":["SQ","1","MeasuringUnitsSequence"],"0296":["SQ","1","BillingItemSequence"],"0300":["US","1","TotalTimeOfFluoroscopy"],"0301":["US","1","TotalNumberOfExposures"],"0302":["US","1","EntranceDose"],"0303":["US","1-2","ExposedArea"],"0306":["DS","1","DistanceSourceToEntrance"],"0307":["DS","1","DistanceSourceToSupport"],"030E":["SQ","1","ExposureDoseSequence"],"0310":["ST","1","CommentsOnRadiationDose"],"0312":["DS","1","XRayOutput"],"0314":["DS","1","HalfValueLayer"],"0316":["DS","1","OrganDose"],"0318":["CS","1","OrganExposed"],"0320":["SQ","1","BillingProcedureStepSequence"],"0321":["SQ","1","FilmConsumptionSequence"],"0324":["SQ","1","BillingSuppliesAndDevicesSequence"],"0330":["SQ","1","ReferencedProcedureStepSequence"],"0340":["SQ","1","PerformedSeriesSequence"],"0400":["LT","1","CommentsOnTheScheduledProcedureStep"],"0440":["SQ","1","ProtocolContextSequence"],"0441":["SQ","1","ContentItemModifierSequence"],"0500":["SQ","1","ScheduledSpecimenSequence"],"050A":["LO","1","SpecimenAccessionNumber"],"0512":["LO","1","ContainerIdentifier"],"0513":["SQ","1","IssuerOfTheContainerIdentifierSequence"],"0515":["SQ","1","AlternateContainerIdentifierSequence"],"0518":["SQ","1","ContainerTypeCodeSequence"],"051A":["LO","1","ContainerDescription"],"0520":["SQ","1","ContainerComponentSequence"],"0550":["SQ","1","SpecimenSequence"],"0551":["LO","1","SpecimenIdentifier"],"0552":["SQ","1","SpecimenDescriptionSequenceTrial"],"0553":["ST","1","SpecimenDescriptionTrial"],"0554":["UI","1","SpecimenUID"],"0555":["SQ","1","AcquisitionContextSequence"],"0556":["ST","1","AcquisitionContextDescription"],"0560":["SQ","1","SpecimenDescriptionSequence"],"0562":["SQ","1","IssuerOfTheSpecimenIdentifierSequence"],"059A":["SQ","1","SpecimenTypeCodeSequence"],"0600":["LO","1","SpecimenShortDescription"],"0602":["UT","1","SpecimenDetailedDescription"],"0610":["SQ","1","SpecimenPreparationSequence"],"0612":["SQ","1","SpecimenPreparationStepContentItemSequence"],"0620":["SQ","1","SpecimenLocalizationContentItemSequence"],"06FA":["LO","1","SlideIdentifier"],"0710":["SQ","1","WholeSlideMicroscopyImageFrameTypeSequence"],"071A":["SQ","1","ImageCenterPointCoordinatesSequence"],"072A":["DS","1","XOffsetInSlideCoordinateSystem"],"073A":["DS","1","YOffsetInSlideCoordinateSystem"],"074A":["DS","1","ZOffsetInSlideCoordinateSystem"],"08D8":["SQ","1","PixelSpacingSequence"],"08DA":["SQ","1","CoordinateSystemAxisCodeSequence"],"08EA":["SQ","1","MeasurementUnitsCodeSequence"],"09F8":["SQ","1","VitalStainCodeSequenceTrial"],1001:["SH","1","RequestedProcedureID"],1002:["LO","1","ReasonForTheRequestedProcedure"],1003:["SH","1","RequestedProcedurePriority"],1004:["LO","1","PatientTransportArrangements"],1005:["LO","1","RequestedProcedureLocation"],1006:["SH","1","PlacerOrderNumberProcedure"],1007:["SH","1","FillerOrderNumberProcedure"],1008:["LO","1","ConfidentialityCode"],1009:["SH","1","ReportingPriority"],"100A":["SQ","1","ReasonForRequestedProcedureCodeSequence"],1010:["PN","1-n","NamesOfIntendedRecipientsOfResults"],1011:["SQ","1","IntendedRecipientsOfResultsIdentificationSequence"],1012:["SQ","1","ReasonForPerformedProcedureCodeSequence"],1060:["LO","1","RequestedProcedureDescriptionTrial"],1101:["SQ","1","PersonIdentificationCodeSequence"],1102:["ST","1","PersonAddress"],1103:["LO","1-n","PersonTelephoneNumbers"],1104:["LT","1","PersonTelecomInformation"],1400:["LT","1","RequestedProcedureComments"],2001:["LO","1","ReasonForTheImagingServiceRequest"],2004:["DA","1","IssueDateOfImagingServiceRequest"],2005:["TM","1","IssueTimeOfImagingServiceRequest"],2006:["SH","1","PlacerOrderNumberImagingServiceRequestRetired"],2007:["SH","1","FillerOrderNumberImagingServiceRequestRetired"],2008:["PN","1","OrderEnteredBy"],2009:["SH","1","OrderEntererLocation"],2010:["SH","1","OrderCallbackPhoneNumber"],2011:["LT","1","OrderCallbackTelecomInformation"],2016:["LO","1","PlacerOrderNumberImagingServiceRequest"],2017:["LO","1","FillerOrderNumberImagingServiceRequest"],2400:["LT","1","ImagingServiceRequestComments"],3001:["LO","1","ConfidentialityConstraintOnPatientDataDescription"],4001:["CS","1","GeneralPurposeScheduledProcedureStepStatus"],4002:["CS","1","GeneralPurposePerformedProcedureStepStatus"],4003:["CS","1","GeneralPurposeScheduledProcedureStepPriority"],4004:["SQ","1","ScheduledProcessingApplicationsCodeSequence"],4005:["DT","1","ScheduledProcedureStepStartDateTime"],4006:["CS","1","MultipleCopiesFlag"],4007:["SQ","1","PerformedProcessingApplicationsCodeSequence"],4008:["DT","1","ScheduledProcedureStepExpirationDateTime"],4009:["SQ","1","HumanPerformerCodeSequence"],4010:["DT","1","ScheduledProcedureStepModificationDateTime"],4011:["DT","1","ExpectedCompletionDateTime"],4015:["SQ","1","ResultingGeneralPurposePerformedProcedureStepsSequence"],4016:["SQ","1","ReferencedGeneralPurposeScheduledProcedureStepSequence"],4018:["SQ","1","ScheduledWorkitemCodeSequence"],4019:["SQ","1","PerformedWorkitemCodeSequence"],4020:["CS","1","InputAvailabilityFlag"],4021:["SQ","1","InputInformationSequence"],4022:["SQ","1","RelevantInformationSequence"],4023:["UI","1","ReferencedGeneralPurposeScheduledProcedureStepTransactionUID"],4025:["SQ","1","ScheduledStationNameCodeSequence"],4026:["SQ","1","ScheduledStationClassCodeSequence"],4027:["SQ","1","ScheduledStationGeographicLocationCodeSequence"],4028:["SQ","1","PerformedStationNameCodeSequence"],4029:["SQ","1","PerformedStationClassCodeSequence"],4030:["SQ","1","PerformedStationGeographicLocationCodeSequence"],4031:["SQ","1","RequestedSubsequentWorkitemCodeSequence"],4032:["SQ","1","NonDICOMOutputCodeSequence"],4033:["SQ","1","OutputInformationSequence"],4034:["SQ","1","ScheduledHumanPerformersSequence"],4035:["SQ","1","ActualHumanPerformersSequence"],4036:["LO","1","HumanPerformerOrganization"],4037:["PN","1","HumanPerformerName"],4040:["CS","1","RawDataHandling"],4041:["CS","1","InputReadinessState"],4050:["DT","1","PerformedProcedureStepStartDateTime"],4051:["DT","1","PerformedProcedureStepEndDateTime"],4052:["DT","1","ProcedureStepCancellationDateTime"],4070:["SQ","1","OutputDestinationSequence"],4071:["SQ","1","DICOMStorageSequence"],4072:["SQ","1","STOWRSStorageSequence"],4073:["UR","1","StorageURL"],4074:["SQ","1","XDSStorageSequence"],8302:["DS","1","EntranceDoseInmGy"],8303:["CS","1","EntranceDoseDerivation"],9092:["SQ","1","ParametricMapFrameTypeSequence"],9094:["SQ","1","ReferencedImageRealWorldValueMappingSequence"],9096:["SQ","1","RealWorldValueMappingSequence"],9098:["SQ","1","PixelValueMappingCodeSequence"],9210:["SH","1","LUTLabel"],9211:["xs","1","RealWorldValueLastValueMapped"],9212:["FD","1-n","RealWorldValueLUTData"],9213:["FD","1","DoubleFloatRealWorldValueLastValueMapped"],9214:["FD","1","DoubleFloatRealWorldValueFirstValueMapped"],9216:["xs","1","RealWorldValueFirstValueMapped"],9220:["SQ","1","QuantityDefinitionSequence"],9224:["FD","1","RealWorldValueIntercept"],9225:["FD","1","RealWorldValueSlope"],A007:["CS","1","FindingsFlagTrial"],A010:["CS","1","RelationshipType"],A020:["SQ","1","FindingsSequenceTrial"],A021:["UI","1","FindingsGroupUIDTrial"],A022:["UI","1","ReferencedFindingsGroupUIDTrial"],A023:["DA","1","FindingsGroupRecordingDateTrial"],A024:["TM","1","FindingsGroupRecordingTimeTrial"],A026:["SQ","1","FindingsSourceCategoryCodeSequenceTrial"],A027:["LO","1","VerifyingOrganization"],A028:["SQ","1","DocumentingOrganizationIdentifierCodeSequenceTrial"],A030:["DT","1","VerificationDateTime"],A032:["DT","1","ObservationDateTime"],A033:["DT","1","ObservationStartDateTime"],A040:["CS","1","ValueType"],A043:["SQ","1","ConceptNameCodeSequence"],A047:["LO","1","MeasurementPrecisionDescriptionTrial"],A050:["CS","1","ContinuityOfContent"],A057:["CS","1-n","UrgencyOrPriorityAlertsTrial"],A060:["LO","1","SequencingIndicatorTrial"],A066:["SQ","1","DocumentIdentifierCodeSequenceTrial"],A067:["PN","1","DocumentAuthorTrial"],A068:["SQ","1","DocumentAuthorIdentifierCodeSequenceTrial"],A070:["SQ","1","IdentifierCodeSequenceTrial"],A073:["SQ","1","VerifyingObserverSequence"],A074:["OB","1","ObjectBinaryIdentifierTrial"],A075:["PN","1","VerifyingObserverName"],A076:["SQ","1","DocumentingObserverIdentifierCodeSequenceTrial"],A078:["SQ","1","AuthorObserverSequence"],A07A:["SQ","1","ParticipantSequence"],A07C:["SQ","1","CustodialOrganizationSequence"],A080:["CS","1","ParticipationType"],A082:["DT","1","ParticipationDateTime"],A084:["CS","1","ObserverType"],A085:["SQ","1","ProcedureIdentifierCodeSequenceTrial"],A088:["SQ","1","VerifyingObserverIdentificationCodeSequence"],A089:["OB","1","ObjectDirectoryBinaryIdentifierTrial"],A090:["SQ","1","EquivalentCDADocumentSequence"],A0B0:["US","2-2n","ReferencedWaveformChannels"],A110:["DA","1","DateOfDocumentOrVerbalTransactionTrial"],A112:["TM","1","TimeOfDocumentCreationOrVerbalTransactionTrial"],A120:["DT","1","DateTime"],A121:["DA","1","Date"],A122:["TM","1","Time"],A123:["PN","1","PersonName"],A124:["UI","1","UID"],A125:["CS","2","ReportStatusIDTrial"],A130:["CS","1","TemporalRangeType"],A132:["UL","1-n","ReferencedSamplePositions"],A136:["US","1-n","ReferencedFrameNumbers"],A138:["DS","1-n","ReferencedTimeOffsets"],A13A:["DT","1-n","ReferencedDateTime"],A160:["UT","1","TextValue"],A161:["FD","1-n","FloatingPointValue"],A162:["SL","1-n","RationalNumeratorValue"],A163:["UL","1-n","RationalDenominatorValue"],A167:["SQ","1","ObservationCategoryCodeSequenceTrial"],A168:["SQ","1","ConceptCodeSequence"],A16A:["ST","1","BibliographicCitationTrial"],A170:["SQ","1","PurposeOfReferenceCodeSequence"],A171:["UI","1","ObservationUID"],A172:["UI","1","ReferencedObservationUIDTrial"],A173:["CS","1","ReferencedObservationClassTrial"],A174:["CS","1","ReferencedObjectObservationClassTrial"],A180:["US","1","AnnotationGroupNumber"],A192:["DA","1","ObservationDateTrial"],A193:["TM","1","ObservationTimeTrial"],A194:["CS","1","MeasurementAutomationTrial"],A195:["SQ","1","ModifierCodeSequence"],A224:["ST","1","IdentificationDescriptionTrial"],A290:["CS","1","CoordinatesSetGeometricTypeTrial"],A296:["SQ","1","AlgorithmCodeSequenceTrial"],A297:["ST","1","AlgorithmDescriptionTrial"],A29A:["SL","2-2n","PixelCoordinatesSetTrial"],A300:["SQ","1","MeasuredValueSequence"],A301:["SQ","1","NumericValueQualifierCodeSequence"],A307:["PN","1","CurrentObserverTrial"],A30A:["DS","1-n","NumericValue"],A313:["SQ","1","ReferencedAccessionSequenceTrial"],A33A:["ST","1","ReportStatusCommentTrial"],A340:["SQ","1","ProcedureContextSequenceTrial"],A352:["PN","1","VerbalSourceTrial"],A353:["ST","1","AddressTrial"],A354:["LO","1","TelephoneNumberTrial"],A358:["SQ","1","VerbalSourceIdentifierCodeSequenceTrial"],A360:["SQ","1","PredecessorDocumentsSequence"],A370:["SQ","1","ReferencedRequestSequence"],A372:["SQ","1","PerformedProcedureCodeSequence"],A375:["SQ","1","CurrentRequestedProcedureEvidenceSequence"],A380:["SQ","1","ReportDetailSequenceTrial"],A385:["SQ","1","PertinentOtherEvidenceSequence"],A390:["SQ","1","HL7StructuredDocumentReferenceSequence"],A402:["UI","1","ObservationSubjectUIDTrial"],A403:["CS","1","ObservationSubjectClassTrial"],A404:["SQ","1","ObservationSubjectTypeCodeSequenceTrial"],A491:["CS","1","CompletionFlag"],A492:["LO","1","CompletionFlagDescription"],A493:["CS","1","VerificationFlag"],A494:["CS","1","ArchiveRequested"],A496:["CS","1","PreliminaryFlag"],A504:["SQ","1","ContentTemplateSequence"],A525:["SQ","1","IdenticalDocumentsSequence"],A600:["CS","1","ObservationSubjectContextFlagTrial"],A601:["CS","1","ObserverContextFlagTrial"],A603:["CS","1","ProcedureContextFlagTrial"],A730:["SQ","1","ContentSequence"],A731:["SQ","1","RelationshipSequenceTrial"],A732:["SQ","1","RelationshipTypeCodeSequenceTrial"],A744:["SQ","1","LanguageCodeSequenceTrial"],A801:["SQ","1","TabulatedValuesSequence"],A802:["UL","1","NumberOfTableRows"],A803:["UL","1","NumberOfTableColumns"],A804:["UL","1","TableRowNumber"],A805:["UL","1","TableColumnNumber"],A806:["SQ","1","TableRowDefinitionSequence"],A807:["SQ","1","TableColumnDefinitionSequence"],A808:["SQ","1","CellValuesSequence"],A992:["ST","1","UniformResourceLocatorTrial"],B020:["SQ","1","WaveformAnnotationSequence"],DB00:["CS","1","TemplateIdentifier"],DB06:["DT","1","TemplateVersion"],DB07:["DT","1","TemplateLocalVersion"],DB0B:["CS","1","TemplateExtensionFlag"],DB0C:["UI","1","TemplateExtensionOrganizationUID"],DB0D:["UI","1","TemplateExtensionCreatorUID"],DB73:["UL","1-n","ReferencedContentItemIdentifier"],E001:["ST","1","HL7InstanceIdentifier"],E004:["DT","1","HL7DocumentEffectiveTime"],E006:["SQ","1","HL7DocumentTypeCodeSequence"],E008:["SQ","1","DocumentClassCodeSequence"],E010:["UR","1","RetrieveURI"],E011:["UI","1","RetrieveLocationUID"],E020:["CS","1","TypeOfInstances"],E021:["SQ","1","DICOMRetrievalSequence"],E022:["SQ","1","DICOMMediaRetrievalSequence"],E023:["SQ","1","WADORetrievalSequence"],E024:["SQ","1","XDSRetrievalSequence"],E025:["SQ","1","WADORSRetrievalSequence"],E030:["UI","1","RepositoryUniqueID"],E031:["UI","1","HomeCommunityID"]},"0042":{"0000":["UL","1","GenericGroupLength"],"0010":["ST","1","DocumentTitle"],"0011":["OB","1","EncapsulatedDocument"],"0012":["LO","1","MIMETypeOfEncapsulatedDocument"],"0013":["SQ","1","SourceInstanceSequence"],"0014":["LO","1-n","ListOfMIMETypes"],"0015":["UL","1","EncapsulatedDocumentLength"]},"0044":{"0000":["UL","1","GenericGroupLength"],"0001":["ST","1","ProductPackageIdentifier"],"0002":["CS","1","SubstanceAdministrationApproval"],"0003":["LT","1","ApprovalStatusFurtherDescription"],"0004":["DT","1","ApprovalStatusDateTime"],"0007":["SQ","1","ProductTypeCodeSequence"],"0008":["LO","1-n","ProductName"],"0009":["LT","1","ProductDescription"],"000A":["LO","1","ProductLotIdentifier"],"000B":["DT","1","ProductExpirationDateTime"],"0010":["DT","1","SubstanceAdministrationDateTime"],"0011":["LO","1","SubstanceAdministrationNotes"],"0012":["LO","1","SubstanceAdministrationDeviceID"],"0013":["SQ","1","ProductParameterSequence"],"0019":["SQ","1","SubstanceAdministrationParameterSequence"],"0100":["SQ","1","ApprovalSequence"],"0101":["SQ","1","AssertionCodeSequence"],"0102":["UI","1","AssertionUID"],"0103":["SQ","1","AsserterIdentificationSequence"],"0104":["DT","1","AssertionDateTime"],"0105":["DT","1","AssertionExpirationDateTime"],"0106":["UT","1","AssertionComments"],"0107":["SQ","1","RelatedAssertionSequence"],"0108":["UI","1","ReferencedAssertionUID"],"0109":["SQ","1","ApprovalSubjectSequence"],"010A":["SQ","1","OrganizationalRoleCodeSequence"]},"0046":{"0000":["UL","1","GenericGroupLength"],"0012":["LO","1","LensDescription"],"0014":["SQ","1","RightLensSequence"],"0015":["SQ","1","LeftLensSequence"],"0016":["SQ","1","UnspecifiedLateralityLensSequence"],"0018":["SQ","1","CylinderSequence"],"0028":["SQ","1","PrismSequence"],"0030":["FD","1","HorizontalPrismPower"],"0032":["CS","1","HorizontalPrismBase"],"0034":["FD","1","VerticalPrismPower"],"0036":["CS","1","VerticalPrismBase"],"0038":["CS","1","LensSegmentType"],"0040":["FD","1","OpticalTransmittance"],"0042":["FD","1","ChannelWidth"],"0044":["FD","1","PupilSize"],"0046":["FD","1","CornealSize"],"0047":["SQ","1","CornealSizeSequence"],"0050":["SQ","1","AutorefractionRightEyeSequence"],"0052":["SQ","1","AutorefractionLeftEyeSequence"],"0060":["FD","1","DistancePupillaryDistance"],"0062":["FD","1","NearPupillaryDistance"],"0063":["FD","1","IntermediatePupillaryDistance"],"0064":["FD","1","OtherPupillaryDistance"],"0070":["SQ","1","KeratometryRightEyeSequence"],"0071":["SQ","1","KeratometryLeftEyeSequence"],"0074":["SQ","1","SteepKeratometricAxisSequence"],"0075":["FD","1","RadiusOfCurvature"],"0076":["FD","1","KeratometricPower"],"0077":["FD","1","KeratometricAxis"],"0080":["SQ","1","FlatKeratometricAxisSequence"],"0092":["CS","1","BackgroundColor"],"0094":["CS","1","Optotype"],"0095":["CS","1","OptotypePresentation"],"0097":["SQ","1","SubjectiveRefractionRightEyeSequence"],"0098":["SQ","1","SubjectiveRefractionLeftEyeSequence"],"0100":["SQ","1","AddNearSequence"],"0101":["SQ","1","AddIntermediateSequence"],"0102":["SQ","1","AddOtherSequence"],"0104":["FD","1","AddPower"],"0106":["FD","1","ViewingDistance"],"0110":["SQ","1","CorneaMeasurementsSequence"],"0111":["SQ","1","SourceOfCorneaMeasurementDataCodeSequence"],"0112":["SQ","1","SteepCornealAxisSequence"],"0113":["SQ","1","FlatCornealAxisSequence"],"0114":["FD","1","CornealPower"],"0115":["FD","1","CornealAxis"],"0116":["SQ","1","CorneaMeasurementMethodCodeSequence"],"0117":["FL","1","RefractiveIndexOfCornea"],"0118":["FL","1","RefractiveIndexOfAqueousHumor"],"0121":["SQ","1","VisualAcuityTypeCodeSequence"],"0122":["SQ","1","VisualAcuityRightEyeSequence"],"0123":["SQ","1","VisualAcuityLeftEyeSequence"],"0124":["SQ","1","VisualAcuityBothEyesOpenSequence"],"0125":["CS","1","ViewingDistanceType"],"0135":["SS","2","VisualAcuityModifiers"],"0137":["FD","1","DecimalVisualAcuity"],"0139":["LO","1","OptotypeDetailedDefinition"],"0145":["SQ","1","ReferencedRefractiveMeasurementsSequence"],"0146":["FD","1","SpherePower"],"0147":["FD","1","CylinderPower"],"0201":["CS","1","CornealTopographySurface"],"0202":["FL","2","CornealVertexLocation"],"0203":["FL","1","PupilCentroidXCoordinate"],"0204":["FL","1","PupilCentroidYCoordinate"],"0205":["FL","1","EquivalentPupilRadius"],"0207":["SQ","1","CornealTopographyMapTypeCodeSequence"],"0208":["IS","2-2n","VerticesOfTheOutlineOfPupil"],"0210":["SQ","1","CornealTopographyMappingNormalsSequence"],"0211":["SQ","1","MaximumCornealCurvatureSequence"],"0212":["FL","1","MaximumCornealCurvature"],"0213":["FL","2","MaximumCornealCurvatureLocation"],"0215":["SQ","1","MinimumKeratometricSequence"],"0218":["SQ","1","SimulatedKeratometricCylinderSequence"],"0220":["FL","1","AverageCornealPower"],"0224":["FL","1","CornealISValue"],"0227":["FL","1","AnalyzedArea"],"0230":["FL","1","SurfaceRegularityIndex"],"0232":["FL","1","SurfaceAsymmetryIndex"],"0234":["FL","1","CornealEccentricityIndex"],"0236":["FL","1","KeratoconusPredictionIndex"],"0238":["FL","1","DecimalPotentialVisualAcuity"],"0242":["CS","1","CornealTopographyMapQualityEvaluation"],"0244":["SQ","1","SourceImageCornealProcessedDataSequence"],"0247":["FL","3","CornealPointLocation"],"0248":["CS","1","CornealPointEstimated"],"0249":["FL","1","AxialPower"],"0250":["FL","1","TangentialPower"],"0251":["FL","1","RefractivePower"],"0252":["FL","1","RelativeElevation"],"0253":["FL","1","CornealWavefront"]},"0048":{"0000":["UL","1","GenericGroupLength"],"0001":["FL","1","ImagedVolumeWidth"],"0002":["FL","1","ImagedVolumeHeight"],"0003":["FL","1","ImagedVolumeDepth"],"0006":["UL","1","TotalPixelMatrixColumns"],"0007":["UL","1","TotalPixelMatrixRows"],"0008":["SQ","1","TotalPixelMatrixOriginSequence"],"0010":["CS","1","SpecimenLabelInImage"],"0011":["CS","1","FocusMethod"],"0012":["CS","1","ExtendedDepthOfField"],"0013":["US","1","NumberOfFocalPlanes"],"0014":["FL","1","DistanceBetweenFocalPlanes"],"0015":["US","3","RecommendedAbsentPixelCIELabValue"],"0100":["SQ","1","IlluminatorTypeCodeSequence"],"0102":["DS","6","ImageOrientationSlide"],"0105":["SQ","1","OpticalPathSequence"],"0106":["SH","1","OpticalPathIdentifier"],"0107":["ST","1","OpticalPathDescription"],"0108":["SQ","1","IlluminationColorCodeSequence"],"0110":["SQ","1","SpecimenReferenceSequence"],"0111":["DS","1","CondenserLensPower"],"0112":["DS","1","ObjectiveLensPower"],"0113":["DS","1","ObjectiveLensNumericalAperture"],"0120":["SQ","1","PaletteColorLookupTableSequence"],"0200":["SQ","1","ReferencedImageNavigationSequence"],"0201":["US","2","TopLeftHandCornerOfLocalizerArea"],"0202":["US","2","BottomRightHandCornerOfLocalizerArea"],"0207":["SQ","1","OpticalPathIdentificationSequence"],"021A":["SQ","1","PlanePositionSlideSequence"],"021E":["SL","1","ColumnPositionInTotalImagePixelMatrix"],"021F":["SL","1","RowPositionInTotalImagePixelMatrix"],"0301":["CS","1","PixelOriginInterpretation"],"0302":["UL","1","NumberOfOpticalPaths"],"0303":["UL","1","TotalPixelMatrixFocalPlanes"]},"0050":{"0000":["UL","1","GenericGroupLength"],"0004":["CS","1","CalibrationImage"],"0010":["SQ","1","DeviceSequence"],"0012":["SQ","1","ContainerComponentTypeCodeSequence"],"0013":["FD","1","ContainerComponentThickness"],"0014":["DS","1","DeviceLength"],"0015":["FD","1","ContainerComponentWidth"],"0016":["DS","1","DeviceDiameter"],"0017":["CS","1","DeviceDiameterUnits"],"0018":["DS","1","DeviceVolume"],"0019":["DS","1","InterMarkerDistance"],"001A":["CS","1","ContainerComponentMaterial"],"001B":["LO","1","ContainerComponentID"],"001C":["FD","1","ContainerComponentLength"],"001D":["FD","1","ContainerComponentDiameter"],"001E":["LO","1","ContainerComponentDescription"],"0020":["LO","1","DeviceDescription"],"0021":["ST","1","LongDeviceDescription"]},"0052":{"0000":["UL","1","GenericGroupLength"],"0001":["FL","1","ContrastBolusIngredientPercentByVolume"],"0002":["FD","1","OCTFocalDistance"],"0003":["FD","1","BeamSpotSize"],"0004":["FD","1","EffectiveRefractiveIndex"],"0006":["CS","1","OCTAcquisitionDomain"],"0007":["FD","1","OCTOpticalCenterWavelength"],"0008":["FD","1","AxialResolution"],"0009":["FD","1","RangingDepth"],"0011":["FD","1","ALineRate"],"0012":["US","1","ALinesPerFrame"],"0013":["FD","1","CatheterRotationalRate"],"0014":["FD","1","ALinePixelSpacing"],"0016":["SQ","1","ModeOfPercutaneousAccessSequence"],"0025":["SQ","1","IntravascularOCTFrameTypeSequence"],"0026":["CS","1","OCTZOffsetApplied"],"0027":["SQ","1","IntravascularFrameContentSequence"],"0028":["FD","1","IntravascularLongitudinalDistance"],"0029":["SQ","1","IntravascularOCTFrameContentSequence"],"0030":["SS","1","OCTZOffsetCorrection"],"0031":["CS","1","CatheterDirectionOfRotation"],"0033":["FD","1","SeamLineLocation"],"0034":["FD","1","FirstALineLocation"],"0036":["US","1","SeamLineIndex"],"0038":["US","1","NumberOfPaddedALines"],"0039":["CS","1","InterpolationType"],"003A":["CS","1","RefractiveIndexApplied"]},"0054":{"0000":["UL","1","GenericGroupLength"],"0010":["US","1-n","EnergyWindowVector"],"0011":["US","1","NumberOfEnergyWindows"],"0012":["SQ","1","EnergyWindowInformationSequence"],"0013":["SQ","1","EnergyWindowRangeSequence"],"0014":["DS","1","EnergyWindowLowerLimit"],"0015":["DS","1","EnergyWindowUpperLimit"],"0016":["SQ","1","RadiopharmaceuticalInformationSequence"],"0017":["IS","1","ResidualSyringeCounts"],"0018":["SH","1","EnergyWindowName"],"0020":["US","1-n","DetectorVector"],"0021":["US","1","NumberOfDetectors"],"0022":["SQ","1","DetectorInformationSequence"],"0030":["US","1-n","PhaseVector"],"0031":["US","1","NumberOfPhases"],"0032":["SQ","1","PhaseInformationSequence"],"0033":["US","1","NumberOfFramesInPhase"],"0036":["IS","1","PhaseDelay"],"0038":["IS","1","PauseBetweenFrames"],"0039":["CS","1","PhaseDescription"],"0050":["US","1-n","RotationVector"],"0051":["US","1","NumberOfRotations"],"0052":["SQ","1","RotationInformationSequence"],"0053":["US","1","NumberOfFramesInRotation"],"0060":["US","1-n","RRIntervalVector"],"0061":["US","1","NumberOfRRIntervals"],"0062":["SQ","1","GatedInformationSequence"],"0063":["SQ","1","DataInformationSequence"],"0070":["US","1-n","TimeSlotVector"],"0071":["US","1","NumberOfTimeSlots"],"0072":["SQ","1","TimeSlotInformationSequence"],"0073":["DS","1","TimeSlotTime"],"0080":["US","1-n","SliceVector"],"0081":["US","1","NumberOfSlices"],"0090":["US","1-n","AngularViewVector"],"0100":["US","1-n","TimeSliceVector"],"0101":["US","1","NumberOfTimeSlices"],"0200":["DS","1","StartAngle"],"0202":["CS","1","TypeOfDetectorMotion"],"0210":["IS","1-n","TriggerVector"],"0211":["US","1","NumberOfTriggersInPhase"],"0220":["SQ","1","ViewCodeSequence"],"0222":["SQ","1","ViewModifierCodeSequence"],"0300":["SQ","1","RadionuclideCodeSequence"],"0302":["SQ","1","AdministrationRouteCodeSequence"],"0304":["SQ","1","RadiopharmaceuticalCodeSequence"],"0306":["SQ","1","CalibrationDataSequence"],"0308":["US","1","EnergyWindowNumber"],"0400":["SH","1","ImageID"],"0410":["SQ","1","PatientOrientationCodeSequence"],"0412":["SQ","1","PatientOrientationModifierCodeSequence"],"0414":["SQ","1","PatientGantryRelationshipCodeSequence"],"0500":["CS","1","SliceProgressionDirection"],"0501":["CS","1","ScanProgressionDirection"],1e3:["CS","2","SeriesType"],1001:["CS","1","Units"],1002:["CS","1","CountsSource"],1004:["CS","1","ReprojectionMethod"],1006:["CS","1","SUVType"],1100:["CS","1","RandomsCorrectionMethod"],1101:["LO","1","AttenuationCorrectionMethod"],1102:["CS","1","DecayCorrection"],1103:["LO","1","ReconstructionMethod"],1104:["LO","1","DetectorLinesOfResponseUsed"],1105:["LO","1","ScatterCorrectionMethod"],1200:["DS","1","AxialAcceptance"],1201:["IS","2","AxialMash"],1202:["IS","1","TransverseMash"],1203:["DS","2","DetectorElementSize"],1210:["DS","1","CoincidenceWindowWidth"],1220:["CS","1-n","SecondaryCountsType"],1300:["DS","1","FrameReferenceTime"],1310:["IS","1","PrimaryPromptsCountsAccumulated"],1311:["IS","1-n","SecondaryCountsAccumulated"],1320:["DS","1","SliceSensitivityFactor"],1321:["DS","1","DecayFactor"],1322:["DS","1","DoseCalibrationFactor"],1323:["DS","1","ScatterFractionFactor"],1324:["DS","1","DeadTimeFactor"],1330:["US","1","ImageIndex"],1400:["CS","1-n","CountsIncluded"],1401:["CS","1","DeadTimeCorrectionFlag"]},"0060":{"0000":["UL","1","GenericGroupLength"],3e3:["SQ","1","HistogramSequence"],3002:["US","1","HistogramNumberOfBins"],3004:["xs","1","HistogramFirstBinValue"],3006:["xs","1","HistogramLastBinValue"],3008:["US","1","HistogramBinWidth"],3010:["LO","1","HistogramExplanation"],3020:["UL","1-n","HistogramData"]},"0062":{"0000":["UL","1","GenericGroupLength"],"0001":["CS","1","SegmentationType"],"0002":["SQ","1","SegmentSequence"],"0003":["SQ","1","SegmentedPropertyCategoryCodeSequence"],"0004":["US","1","SegmentNumber"],"0005":["LO","1","SegmentLabel"],"0006":["ST","1","SegmentDescription"],"0007":["SQ","1","SegmentationAlgorithmIdentificationSequence"],"0008":["CS","1","SegmentAlgorithmType"],"0009":["LO","1-n","SegmentAlgorithmName"],"000A":["SQ","1","SegmentIdentificationSequence"],"000B":["US","1-n","ReferencedSegmentNumber"],"000C":["US","1","RecommendedDisplayGrayscaleValue"],"000D":["US","3","RecommendedDisplayCIELabValue"],"000E":["US","1","MaximumFractionalValue"],"000F":["SQ","1","SegmentedPropertyTypeCodeSequence"],"0010":["CS","1","SegmentationFractionalType"],"0011":["SQ","1","SegmentedPropertyTypeModifierCodeSequence"],"0012":["SQ","1","UsedSegmentsSequence"],"0013":["CS","1","SegmentsOverlap"],"0020":["UT","1","TrackingID"],"0021":["UI","1","TrackingUID"]},"0064":{"0000":["UL","1","GenericGroupLength"],"0002":["SQ","1","DeformableRegistrationSequence"],"0003":["UI","1","SourceFrameOfReferenceUID"],"0005":["SQ","1","DeformableRegistrationGridSequence"],"0007":["UL","3","GridDimensions"],"0008":["FD","3","GridResolution"],"0009":["OF","1","VectorGridData"],"000F":["SQ","1","PreDeformationMatrixRegistrationSequence"],"0010":["SQ","1","PostDeformationMatrixRegistrationSequence"]},"0066":{"0000":["UL","1","GenericGroupLength"],"0001":["UL","1","NumberOfSurfaces"],"0002":["SQ","1","SurfaceSequence"],"0003":["UL","1","SurfaceNumber"],"0004":["LT","1","SurfaceComments"],"0009":["CS","1","SurfaceProcessing"],"000A":["FL","1","SurfaceProcessingRatio"],"000B":["LO","1","SurfaceProcessingDescription"],"000C":["FL","1","RecommendedPresentationOpacity"],"000D":["CS","1","RecommendedPresentationType"],"000E":["CS","1","FiniteVolume"],"0010":["CS","1","Manifold"],"0011":["SQ","1","SurfacePointsSequence"],"0012":["SQ","1","SurfacePointsNormalsSequence"],"0013":["SQ","1","SurfaceMeshPrimitivesSequence"],"0015":["UL","1","NumberOfSurfacePoints"],"0016":["OF","1","PointCoordinatesData"],"0017":["FL","3","PointPositionAccuracy"],"0018":["FL","1","MeanPointDistance"],"0019":["FL","1","MaximumPointDistance"],"001A":["FL","6","PointsBoundingBoxCoordinates"],"001B":["FL","3","AxisOfRotation"],"001C":["FL","3","CenterOfRotation"],"001E":["UL","1","NumberOfVectors"],"001F":["US","1","VectorDimensionality"],"0020":["FL","1-n","VectorAccuracy"],"0021":["OF","1","VectorCoordinateData"],"0022":["OD","1","DoublePointCoordinatesData"],"0023":["OW","1","TrianglePointIndexList"],"0024":["OW","1","EdgePointIndexList"],"0025":["OW","1","VertexPointIndexList"],"0026":["SQ","1","TriangleStripSequence"],"0027":["SQ","1","TriangleFanSequence"],"0028":["SQ","1","LineSequence"],"0029":["OW","1","PrimitivePointIndexList"],"002A":["UL","1","SurfaceCount"],"002B":["SQ","1","ReferencedSurfaceSequence"],"002C":["UL","1","ReferencedSurfaceNumber"],"002D":["SQ","1","SegmentSurfaceGenerationAlgorithmIdentificationSequence"],"002E":["SQ","1","SegmentSurfaceSourceInstanceSequence"],"002F":["SQ","1","AlgorithmFamilyCodeSequence"],"0030":["SQ","1","AlgorithmNameCodeSequence"],"0031":["LO","1","AlgorithmVersion"],"0032":["LT","1","AlgorithmParameters"],"0034":["SQ","1","FacetSequence"],"0035":["SQ","1","SurfaceProcessingAlgorithmIdentificationSequence"],"0036":["LO","1","AlgorithmName"],"0037":["FL","1","RecommendedPointRadius"],"0038":["FL","1","RecommendedLineThickness"],"0040":["OL","1","LongPrimitivePointIndexList"],"0041":["OL","1","LongTrianglePointIndexList"],"0042":["OL","1","LongEdgePointIndexList"],"0043":["OL","1","LongVertexPointIndexList"],"0101":["SQ","1","TrackSetSequence"],"0102":["SQ","1","TrackSequence"],"0103":["OW","1","RecommendedDisplayCIELabValueList"],"0104":["SQ","1","TrackingAlgorithmIdentificationSequence"],"0105":["UL","1","TrackSetNumber"],"0106":["LO","1","TrackSetLabel"],"0107":["UT","1","TrackSetDescription"],"0108":["SQ","1","TrackSetAnatomicalTypeCodeSequence"],"0121":["SQ","1","MeasurementsSequence"],"0124":["SQ","1","TrackSetStatisticsSequence"],"0125":["OF","1","FloatingPointValues"],"0129":["OL","1","TrackPointIndexList"],"0130":["SQ","1","TrackStatisticsSequence"],"0132":["SQ","1","MeasurementValuesSequence"],"0133":["SQ","1","DiffusionAcquisitionCodeSequence"],"0134":["SQ","1","DiffusionModelCodeSequence"]},"0068":{"0000":["UL","1","GenericGroupLength"],6210:["LO","1","ImplantSize"],6221:["LO","1","ImplantTemplateVersion"],6222:["SQ","1","ReplacedImplantTemplateSequence"],6223:["CS","1","ImplantType"],6224:["SQ","1","DerivationImplantTemplateSequence"],6225:["SQ","1","OriginalImplantTemplateSequence"],6226:["DT","1","EffectiveDateTime"],6230:["SQ","1","ImplantTargetAnatomySequence"],6260:["SQ","1","InformationFromManufacturerSequence"],6265:["SQ","1","NotificationFromManufacturerSequence"],6270:["DT","1","InformationIssueDateTime"],6280:["ST","1","InformationSummary"],"62A0":["SQ","1","ImplantRegulatoryDisapprovalCodeSequence"],"62A5":["FD","1","OverallTemplateSpatialTolerance"],"62C0":["SQ","1","HPGLDocumentSequence"],"62D0":["US","1","HPGLDocumentID"],"62D5":["LO","1","HPGLDocumentLabel"],"62E0":["SQ","1","ViewOrientationCodeSequence"],"62F0":["SQ","1","ViewOrientationModifierCodeSequence"],"62F2":["FD","1","HPGLDocumentScaling"],6300:["OB","1","HPGLDocument"],6310:["US","1","HPGLContourPenNumber"],6320:["SQ","1","HPGLPenSequence"],6330:["US","1","HPGLPenNumber"],6340:["LO","1","HPGLPenLabel"],6345:["ST","1","HPGLPenDescription"],6346:["FD","2","RecommendedRotationPoint"],6347:["FD","4","BoundingRectangle"],6350:["US","1-n","ImplantTemplate3DModelSurfaceNumber"],6360:["SQ","1","SurfaceModelDescriptionSequence"],6380:["LO","1","SurfaceModelLabel"],6390:["FD","1","SurfaceModelScalingFactor"],"63A0":["SQ","1","MaterialsCodeSequence"],"63A4":["SQ","1","CoatingMaterialsCodeSequence"],"63A8":["SQ","1","ImplantTypeCodeSequence"],"63AC":["SQ","1","FixationMethodCodeSequence"],"63B0":["SQ","1","MatingFeatureSetsSequence"],"63C0":["US","1","MatingFeatureSetID"],"63D0":["LO","1","MatingFeatureSetLabel"],"63E0":["SQ","1","MatingFeatureSequence"],"63F0":["US","1","MatingFeatureID"],6400:["SQ","1","MatingFeatureDegreeOfFreedomSequence"],6410:["US","1","DegreeOfFreedomID"],6420:["CS","1","DegreeOfFreedomType"],6430:["SQ","1","TwoDMatingFeatureCoordinatesSequence"],6440:["US","1","ReferencedHPGLDocumentID"],6450:["FD","2","TwoDMatingPoint"],6460:["FD","4","TwoDMatingAxes"],6470:["SQ","1","TwoDDegreeOfFreedomSequence"],6490:["FD","3","ThreeDDegreeOfFreedomAxis"],"64A0":["FD","2","RangeOfFreedom"],"64C0":["FD","3","ThreeDMatingPoint"],"64D0":["FD","9","ThreeDMatingAxes"],"64F0":["FD","3","TwoDDegreeOfFreedomAxis"],6500:["SQ","1","PlanningLandmarkPointSequence"],6510:["SQ","1","PlanningLandmarkLineSequence"],6520:["SQ","1","PlanningLandmarkPlaneSequence"],6530:["US","1","PlanningLandmarkID"],6540:["LO","1","PlanningLandmarkDescription"],6545:["SQ","1","PlanningLandmarkIdentificationCodeSequence"],6550:["SQ","1","TwoDPointCoordinatesSequence"],6560:["FD","2","TwoDPointCoordinates"],6590:["FD","3","ThreeDPointCoordinates"],"65A0":["SQ","1","TwoDLineCoordinatesSequence"],"65B0":["FD","4","TwoDLineCoordinates"],"65D0":["FD","6","ThreeDLineCoordinates"],"65E0":["SQ","1","TwoDPlaneCoordinatesSequence"],"65F0":["FD","4","TwoDPlaneIntersection"],6610:["FD","3","ThreeDPlaneOrigin"],6620:["FD","3","ThreeDPlaneNormal"],7001:["CS","1","ModelModification"],7002:["CS","1","ModelMirroring"],7003:["SQ","1","ModelUsageCodeSequence"],7004:["UI","1","ModelGroupUID"],7005:["UR","1","RelativeURIReferenceWithinEncapsulatedDocument"]},"006A":{"0000":["UL","1","GenericGroupLength"],"0001":["CS","1","AnnotationCoordinateType"],"0002":["SQ","1","AnnotationGroupSequence"],"0003":["UI","1","AnnotationGroupUID"],"0005":["LO","1","AnnotationGroupLabel"],"0006":["UT","1","AnnotationGroupDescription"],"0007":["CS","1","AnnotationGroupGenerationType"],"0008":["SQ","1","AnnotationGroupAlgorithmIdentificationSequence"],"0009":["SQ","1","AnnotationPropertyCategoryCodeSequence"],"000A":["SQ","1","AnnotationPropertyTypeCodeSequence"],"000B":["SQ","1","AnnotationPropertyTypeModifierCodeSequence"],"000C":["UL","1","NumberOfAnnotations"],"000D":["CS","1","AnnotationAppliesToAllOpticalPaths"],"000E":["SH","1-n","ReferencedOpticalPathIdentifier"],"000F":["CS","1","AnnotationAppliesToAllZPlanes"],"0010":["FD","1-n","CommonZCoordinateValue"],"0011":["OL","1","AnnotationIndexList"]},"0070":{"0000":["UL","1","GenericGroupLength"],"0001":["SQ","1","GraphicAnnotationSequence"],"0002":["CS","1","GraphicLayer"],"0003":["CS","1","BoundingBoxAnnotationUnits"],"0004":["CS","1","AnchorPointAnnotationUnits"],"0005":["CS","1","GraphicAnnotationUnits"],"0006":["ST","1","UnformattedTextValue"],"0008":["SQ","1","TextObjectSequence"],"0009":["SQ","1","GraphicObjectSequence"],"0010":["FL","2","BoundingBoxTopLeftHandCorner"],"0011":["FL","2","BoundingBoxBottomRightHandCorner"],"0012":["CS","1","BoundingBoxTextHorizontalJustification"],"0014":["FL","2","AnchorPoint"],"0015":["CS","1","AnchorPointVisibility"],"0020":["US","1","GraphicDimensions"],"0021":["US","1","NumberOfGraphicPoints"],"0022":["FL","2-n","GraphicData"],"0023":["CS","1","GraphicType"],"0024":["CS","1","GraphicFilled"],"0040":["IS","1","ImageRotationRetired"],"0041":["CS","1","ImageHorizontalFlip"],"0042":["US","1","ImageRotation"],"0050":["US","2","DisplayedAreaTopLeftHandCornerTrial"],"0051":["US","2","DisplayedAreaBottomRightHandCornerTrial"],"0052":["SL","2","DisplayedAreaTopLeftHandCorner"],"0053":["SL","2","DisplayedAreaBottomRightHandCorner"],"005A":["SQ","1","DisplayedAreaSelectionSequence"],"0060":["SQ","1","GraphicLayerSequence"],"0062":["IS","1","GraphicLayerOrder"],"0066":["US","1","GraphicLayerRecommendedDisplayGrayscaleValue"],"0067":["US","3","GraphicLayerRecommendedDisplayRGBValue"],"0068":["LO","1","GraphicLayerDescription"],"0080":["CS","1","ContentLabel"],"0081":["LO","1","ContentDescription"],"0082":["DA","1","PresentationCreationDate"],"0083":["TM","1","PresentationCreationTime"],"0084":["PN","1","ContentCreatorName"],"0086":["SQ","1","ContentCreatorIdentificationCodeSequence"],"0087":["SQ","1","AlternateContentDescriptionSequence"],"0100":["CS","1","PresentationSizeMode"],"0101":["DS","2","PresentationPixelSpacing"],"0102":["IS","2","PresentationPixelAspectRatio"],"0103":["FL","1","PresentationPixelMagnificationRatio"],"0207":["LO","1","GraphicGroupLabel"],"0208":["ST","1","GraphicGroupDescription"],"0209":["SQ","1","CompoundGraphicSequence"],"0226":["UL","1","CompoundGraphicInstanceID"],"0227":["LO","1","FontName"],"0228":["CS","1","FontNameType"],"0229":["LO","1","CSSFontName"],"0230":["FD","1","RotationAngle"],"0231":["SQ","1","TextStyleSequence"],"0232":["SQ","1","LineStyleSequence"],"0233":["SQ","1","FillStyleSequence"],"0234":["SQ","1","GraphicGroupSequence"],"0241":["US","3","TextColorCIELabValue"],"0242":["CS","1","HorizontalAlignment"],"0243":["CS","1","VerticalAlignment"],"0244":["CS","1","ShadowStyle"],"0245":["FL","1","ShadowOffsetX"],"0246":["FL","1","ShadowOffsetY"],"0247":["US","3","ShadowColorCIELabValue"],"0248":["CS","1","Underlined"],"0249":["CS","1","Bold"],"0250":["CS","1","Italic"],"0251":["US","3","PatternOnColorCIELabValue"],"0252":["US","3","PatternOffColorCIELabValue"],"0253":["FL","1","LineThickness"],"0254":["CS","1","LineDashingStyle"],"0255":["UL","1","LinePattern"],"0256":["OB","1","FillPattern"],"0257":["CS","1","FillMode"],"0258":["FL","1","ShadowOpacity"],"0261":["FL","1","GapLength"],"0262":["FL","1","DiameterOfVisibility"],"0273":["FL","2","RotationPoint"],"0274":["CS","1","TickAlignment"],"0278":["CS","1","ShowTickLabel"],"0279":["CS","1","TickLabelAlignment"],"0282":["CS","1","CompoundGraphicUnits"],"0284":["FL","1","PatternOnOpacity"],"0285":["FL","1","PatternOffOpacity"],"0287":["SQ","1","MajorTicksSequence"],"0288":["FL","1","TickPosition"],"0289":["SH","1","TickLabel"],"0294":["CS","1","CompoundGraphicType"],"0295":["UL","1","GraphicGroupID"],"0306":["CS","1","ShapeType"],"0308":["SQ","1","RegistrationSequence"],"0309":["SQ","1","MatrixRegistrationSequence"],"030A":["SQ","1","MatrixSequence"],"030B":["FD","16","FrameOfReferenceToDisplayedCoordinateSystemTransformationMatrix"],"030C":["CS","1","FrameOfReferenceTransformationMatrixType"],"030D":["SQ","1","RegistrationTypeCodeSequence"],"030F":["ST","1","FiducialDescription"],"0310":["SH","1","FiducialIdentifier"],"0311":["SQ","1","FiducialIdentifierCodeSequence"],"0312":["FD","1","ContourUncertaintyRadius"],"0314":["SQ","1","UsedFiducialsSequence"],"0318":["SQ","1","GraphicCoordinatesDataSequence"],"031A":["UI","1","FiducialUID"],"031B":["UI","1","ReferencedFiducialUID"],"031C":["SQ","1","FiducialSetSequence"],"031E":["SQ","1","FiducialSequence"],"031F":["SQ","1","FiducialsPropertyCategoryCodeSequence"],"0401":["US","3","GraphicLayerRecommendedDisplayCIELabValue"],"0402":["SQ","1","BlendingSequence"],"0403":["FL","1","RelativeOpacity"],"0404":["SQ","1","ReferencedSpatialRegistrationSequence"],"0405":["CS","1","BlendingPosition"],1101:["UI","1","PresentationDisplayCollectionUID"],1102:["UI","1","PresentationSequenceCollectionUID"],1103:["US","1","PresentationSequencePositionIndex"],1104:["SQ","1","RenderedImageReferenceSequence"],1201:["SQ","1","VolumetricPresentationStateInputSequence"],1202:["CS","1","PresentationInputType"],1203:["US","1","InputSequencePositionIndex"],1204:["CS","1","Crop"],1205:["US","1-n","CroppingSpecificationIndex"],1206:["CS","1","CompositingMethod"],1207:["US","1","VolumetricPresentationInputNumber"],1208:["CS","1","ImageVolumeGeometry"],1209:["UI","1","VolumetricPresentationInputSetUID"],"120A":["SQ","1","VolumetricPresentationInputSetSequence"],"120B":["CS","1","GlobalCrop"],"120C":["US","1-n","GlobalCroppingSpecificationIndex"],"120D":["CS","1","RenderingMethod"],1301:["SQ","1","VolumeCroppingSequence"],1302:["CS","1","VolumeCroppingMethod"],1303:["FD","6","BoundingBoxCrop"],1304:["SQ","1","ObliqueCroppingPlaneSequence"],1305:["FD","4","Plane"],1306:["FD","3","PlaneNormal"],1309:["US","1","CroppingSpecificationNumber"],1501:["CS","1","MultiPlanarReconstructionStyle"],1502:["CS","1","MPRThicknessType"],1503:["FD","1","MPRSlabThickness"],1505:["FD","3","MPRTopLeftHandCorner"],1507:["FD","3","MPRViewWidthDirection"],1508:["FD","1","MPRViewWidth"],"150C":["UL","1","NumberOfVolumetricCurvePoints"],"150D":["OD","1","VolumetricCurvePoints"],1511:["FD","3","MPRViewHeightDirection"],1512:["FD","1","MPRViewHeight"],1602:["CS","1","RenderProjection"],1603:["FD","3","ViewpointPosition"],1604:["FD","3","ViewpointLookAtPoint"],1605:["FD","3","ViewpointUpDirection"],1606:["FD","6","RenderFieldOfView"],1607:["FD","1","SamplingStepSize"],1701:["CS","1","ShadingStyle"],1702:["FD","1","AmbientReflectionIntensity"],1703:["FD","3","LightDirection"],1704:["FD","1","DiffuseReflectionIntensity"],1705:["FD","1","SpecularReflectionIntensity"],1706:["FD","1","Shininess"],1801:["SQ","1","PresentationStateClassificationComponentSequence"],1802:["CS","1","ComponentType"],1803:["SQ","1","ComponentInputSequence"],1804:["US","1","VolumetricPresentationInputIndex"],1805:["SQ","1","PresentationStateCompositorComponentSequence"],1806:["SQ","1","WeightingTransferFunctionSequence"],1807:["US","3","WeightingLookupTableDescriptor"],1808:["OB","1","WeightingLookupTableData"],1901:["SQ","1","VolumetricAnnotationSequence"],1903:["SQ","1","ReferencedStructuredContextSequence"],1904:["UI","1","ReferencedContentItem"],1905:["SQ","1","VolumetricPresentationInputAnnotationSequence"],1907:["CS","1","AnnotationClipping"],"1A01":["CS","1","PresentationAnimationStyle"],"1A03":["FD","1","RecommendedAnimationRate"],"1A04":["SQ","1","AnimationCurveSequence"],"1A05":["FD","1","AnimationStepSize"],"1A06":["FD","1","SwivelRange"],"1A07":["OD","1","VolumetricCurveUpDirections"],"1A08":["SQ","1","VolumeStreamSequence"],"1A09":["LO","1","RGBATransferFunctionDescription"],"1B01":["SQ","1","AdvancedBlendingSequence"],"1B02":["US","1","BlendingInputNumber"],"1B03":["SQ","1","BlendingDisplayInputSequence"],"1B04":["SQ","1","BlendingDisplaySequence"],"1B06":["CS","1","BlendingMode"],"1B07":["CS","1","TimeSeriesBlending"],"1B08":["CS","1","GeometryForDisplay"],"1B11":["SQ","1","ThresholdSequence"],"1B12":["SQ","1","ThresholdValueSequence"],"1B13":["CS","1","ThresholdType"],"1B14":["FD","1","ThresholdValue"]},"0072":{"0000":["UL","1","GenericGroupLength"],"0002":["SH","1","HangingProtocolName"],"0004":["LO","1","HangingProtocolDescription"],"0006":["CS","1","HangingProtocolLevel"],"0008":["LO","1","HangingProtocolCreator"],"000A":["DT","1","HangingProtocolCreationDateTime"],"000C":["SQ","1","HangingProtocolDefinitionSequence"],"000E":["SQ","1","HangingProtocolUserIdentificationCodeSequence"],"0010":["LO","1","HangingProtocolUserGroupName"],"0012":["SQ","1","SourceHangingProtocolSequence"],"0014":["US","1","NumberOfPriorsReferenced"],"0020":["SQ","1","ImageSetsSequence"],"0022":["SQ","1","ImageSetSelectorSequence"],"0024":["CS","1","ImageSetSelectorUsageFlag"],"0026":["AT","1","SelectorAttribute"],"0028":["US","1","SelectorValueNumber"],"0030":["SQ","1","TimeBasedImageSetsSequence"],"0032":["US","1","ImageSetNumber"],"0034":["CS","1","ImageSetSelectorCategory"],"0038":["US","2","RelativeTime"],"003A":["CS","1","RelativeTimeUnits"],"003C":["SS","2","AbstractPriorValue"],"003E":["SQ","1","AbstractPriorCodeSequence"],"0040":["LO","1","ImageSetLabel"],"0050":["CS","1","SelectorAttributeVR"],"0052":["AT","1-n","SelectorSequencePointer"],"0054":["LO","1-n","SelectorSequencePointerPrivateCreator"],"0056":["LO","1","SelectorAttributePrivateCreator"],"005E":["AE","1-n","SelectorAEValue"],"005F":["AS","1-n","SelectorASValue"],"0060":["AT","1-n","SelectorATValue"],"0061":["DA","1-n","SelectorDAValue"],"0062":["CS","1-n","SelectorCSValue"],"0063":["DT","1-n","SelectorDTValue"],"0064":["IS","1-n","SelectorISValue"],"0065":["OB","1","SelectorOBValue"],"0066":["LO","1-n","SelectorLOValue"],"0067":["OF","1","SelectorOFValue"],"0068":["LT","1","SelectorLTValue"],"0069":["OW","1","SelectorOWValue"],"006A":["PN","1-n","SelectorPNValue"],"006B":["TM","1-n","SelectorTMValue"],"006C":["SH","1-n","SelectorSHValue"],"006D":["UN","1","SelectorUNValue"],"006E":["ST","1","SelectorSTValue"],"006F":["UC","1-n","SelectorUCValue"],"0070":["UT","1","SelectorUTValue"],"0071":["UR","1","SelectorURValue"],"0072":["DS","1-n","SelectorDSValue"],"0073":["OD","1","SelectorODValue"],"0074":["FD","1-n","SelectorFDValue"],"0075":["OL","1","SelectorOLValue"],"0076":["FL","1-n","SelectorFLValue"],"0078":["UL","1-n","SelectorULValue"],"007A":["US","1-n","SelectorUSValue"],"007C":["SL","1-n","SelectorSLValue"],"007E":["SS","1-n","SelectorSSValue"],"007F":["UI","1-n","SelectorUIValue"],"0080":["SQ","1","SelectorCodeSequenceValue"],"0081":["OV","1","SelectorOVValue"],"0082":["SV","1-n","SelectorSVValue"],"0083":["UV","1-n","SelectorUVValue"],"0100":["US","1","NumberOfScreens"],"0102":["SQ","1","NominalScreenDefinitionSequence"],"0104":["US","1","NumberOfVerticalPixels"],"0106":["US","1","NumberOfHorizontalPixels"],"0108":["FD","4","DisplayEnvironmentSpatialPosition"],"010A":["US","1","ScreenMinimumGrayscaleBitDepth"],"010C":["US","1","ScreenMinimumColorBitDepth"],"010E":["US","1","ApplicationMaximumRepaintTime"],"0200":["SQ","1","DisplaySetsSequence"],"0202":["US","1","DisplaySetNumber"],"0203":["LO","1","DisplaySetLabel"],"0204":["US","1","DisplaySetPresentationGroup"],"0206":["LO","1","DisplaySetPresentationGroupDescription"],"0208":["CS","1","PartialDataDisplayHandling"],"0210":["SQ","1","SynchronizedScrollingSequence"],"0212":["US","2-n","DisplaySetScrollingGroup"],"0214":["SQ","1","NavigationIndicatorSequence"],"0216":["US","1","NavigationDisplaySet"],"0218":["US","1-n","ReferenceDisplaySets"],"0300":["SQ","1","ImageBoxesSequence"],"0302":["US","1","ImageBoxNumber"],"0304":["CS","1","ImageBoxLayoutType"],"0306":["US","1","ImageBoxTileHorizontalDimension"],"0308":["US","1","ImageBoxTileVerticalDimension"],"0310":["CS","1","ImageBoxScrollDirection"],"0312":["CS","1","ImageBoxSmallScrollType"],"0314":["US","1","ImageBoxSmallScrollAmount"],"0316":["CS","1","ImageBoxLargeScrollType"],"0318":["US","1","ImageBoxLargeScrollAmount"],"0320":["US","1","ImageBoxOverlapPriority"],"0330":["FD","1","CineRelativeToRealTime"],"0400":["SQ","1","FilterOperationsSequence"],"0402":["CS","1","FilterByCategory"],"0404":["CS","1","FilterByAttributePresence"],"0406":["CS","1","FilterByOperator"],"0420":["US","3","StructuredDisplayBackgroundCIELabValue"],"0421":["US","3","EmptyImageBoxCIELabValue"],"0422":["SQ","1","StructuredDisplayImageBoxSequence"],"0424":["SQ","1","StructuredDisplayTextBoxSequence"],"0427":["SQ","1","ReferencedFirstFrameSequence"],"0430":["SQ","1","ImageBoxSynchronizationSequence"],"0432":["US","2-n","SynchronizedImageBoxList"],"0434":["CS","1","TypeOfSynchronization"],"0500":["CS","1","BlendingOperationType"],"0510":["CS","1","ReformattingOperationType"],"0512":["FD","1","ReformattingThickness"],"0514":["FD","1","ReformattingInterval"],"0516":["CS","1","ReformattingOperationInitialViewDirection"],"0520":["CS","1-n","ThreeDRenderingType"],"0600":["SQ","1","SortingOperationsSequence"],"0602":["CS","1","SortByCategory"],"0604":["CS","1","SortingDirection"],"0700":["CS","2","DisplaySetPatientOrientation"],"0702":["CS","1","VOIType"],"0704":["CS","1","PseudoColorType"],"0705":["SQ","1","PseudoColorPaletteInstanceReferenceSequence"],"0706":["CS","1","ShowGrayscaleInverted"],"0710":["CS","1","ShowImageTrueSizeFlag"],"0712":["CS","1","ShowGraphicAnnotationFlag"],"0714":["CS","1","ShowPatientDemographicsFlag"],"0716":["CS","1","ShowAcquisitionTechniquesFlag"],"0717":["CS","1","DisplaySetHorizontalJustification"],"0718":["CS","1","DisplaySetVerticalJustification"]},"0074":{"0000":["UL","1","GenericGroupLength"],"0120":["FD","1","ContinuationStartMeterset"],"0121":["FD","1","ContinuationEndMeterset"],1e3:["CS","1","ProcedureStepState"],1002:["SQ","1","ProcedureStepProgressInformationSequence"],1004:["DS","1","ProcedureStepProgress"],1006:["ST","1","ProcedureStepProgressDescription"],1007:["SQ","1","ProcedureStepProgressParametersSequence"],1008:["SQ","1","ProcedureStepCommunicationsURISequence"],"100A":["UR","1","ContactURI"],"100C":["LO","1","ContactDisplayName"],"100E":["SQ","1","ProcedureStepDiscontinuationReasonCodeSequence"],1020:["SQ","1","BeamTaskSequence"],1022:["CS","1","BeamTaskType"],1024:["IS","1","BeamOrderIndexTrial"],1025:["CS","1","AutosequenceFlag"],1026:["FD","1","TableTopVerticalAdjustedPosition"],1027:["FD","1","TableTopLongitudinalAdjustedPosition"],1028:["FD","1","TableTopLateralAdjustedPosition"],"102A":["FD","1","PatientSupportAdjustedAngle"],"102B":["FD","1","TableTopEccentricAdjustedAngle"],"102C":["FD","1","TableTopPitchAdjustedAngle"],"102D":["FD","1","TableTopRollAdjustedAngle"],1030:["SQ","1","DeliveryVerificationImageSequence"],1032:["CS","1","VerificationImageTiming"],1034:["CS","1","DoubleExposureFlag"],1036:["CS","1","DoubleExposureOrdering"],1038:["DS","1","DoubleExposureMetersetTrial"],"103A":["DS","4","DoubleExposureFieldDeltaTrial"],1040:["SQ","1","RelatedReferenceRTImageSequence"],1042:["SQ","1","GeneralMachineVerificationSequence"],1044:["SQ","1","ConventionalMachineVerificationSequence"],1046:["SQ","1","IonMachineVerificationSequence"],1048:["SQ","1","FailedAttributesSequence"],"104A":["SQ","1","OverriddenAttributesSequence"],"104C":["SQ","1","ConventionalControlPointVerificationSequence"],"104E":["SQ","1","IonControlPointVerificationSequence"],1050:["SQ","1","AttributeOccurrenceSequence"],1052:["AT","1","AttributeOccurrencePointer"],1054:["UL","1","AttributeItemSelector"],1056:["LO","1","AttributeOccurrencePrivateCreator"],1057:["IS","1-n","SelectorSequencePointerItems"],1200:["CS","1","ScheduledProcedureStepPriority"],1202:["LO","1","WorklistLabel"],1204:["LO","1","ProcedureStepLabel"],1210:["SQ","1","ScheduledProcessingParametersSequence"],1212:["SQ","1","PerformedProcessingParametersSequence"],1216:["SQ","1","UnifiedProcedureStepPerformedProcedureSequence"],1220:["SQ","1","RelatedProcedureStepSequence"],1222:["LO","1","ProcedureStepRelationshipType"],1224:["SQ","1","ReplacedProcedureStepSequence"],1230:["LO","1","DeletionLock"],1234:["AE","1","ReceivingAE"],1236:["AE","1","RequestingAE"],1238:["LT","1","ReasonForCancellation"],1242:["CS","1","SCPStatus"],1244:["CS","1","SubscriptionListStatus"],1246:["CS","1","UnifiedProcedureStepListStatus"],1324:["UL","1","BeamOrderIndex"],1338:["FD","1","DoubleExposureMeterset"],"133A":["FD","4","DoubleExposureFieldDelta"],1401:["SQ","1","BrachyTaskSequence"],1402:["DS","1","ContinuationStartTotalReferenceAirKerma"],1403:["DS","1","ContinuationEndTotalReferenceAirKerma"],1404:["IS","1","ContinuationPulseNumber"],1405:["SQ","1","ChannelDeliveryOrderSequence"],1406:["IS","1","ReferencedChannelNumber"],1407:["DS","1","StartCumulativeTimeWeight"],1408:["DS","1","EndCumulativeTimeWeight"],1409:["SQ","1","OmittedChannelSequence"],"140A":["CS","1","ReasonForChannelOmission"],"140B":["LO","1","ReasonForChannelOmissionDescription"],"140C":["IS","1","ChannelDeliveryOrderIndex"],"140D":["SQ","1","ChannelDeliveryContinuationSequence"],"140E":["SQ","1","OmittedApplicationSetupSequence"]},"0076":{"0000":["UL","1","GenericGroupLength"],"0001":["LO","1","ImplantAssemblyTemplateName"],"0003":["LO","1","ImplantAssemblyTemplateIssuer"],"0006":["LO","1","ImplantAssemblyTemplateVersion"],"0008":["SQ","1","ReplacedImplantAssemblyTemplateSequence"],"000A":["CS","1","ImplantAssemblyTemplateType"],"000C":["SQ","1","OriginalImplantAssemblyTemplateSequence"],"000E":["SQ","1","DerivationImplantAssemblyTemplateSequence"],"0010":["SQ","1","ImplantAssemblyTemplateTargetAnatomySequence"],"0020":["SQ","1","ProcedureTypeCodeSequence"],"0030":["LO","1","SurgicalTechnique"],"0032":["SQ","1","ComponentTypesSequence"],"0034":["SQ","1","ComponentTypeCodeSequence"],"0036":["CS","1","ExclusiveComponentType"],"0038":["CS","1","MandatoryComponentType"],"0040":["SQ","1","ComponentSequence"],"0055":["US","1","ComponentID"],"0060":["SQ","1","ComponentAssemblySequence"],"0070":["US","1","Component1ReferencedID"],"0080":["US","1","Component1ReferencedMatingFeatureSetID"],"0090":["US","1","Component1ReferencedMatingFeatureID"],"00A0":["US","1","Component2ReferencedID"],"00B0":["US","1","Component2ReferencedMatingFeatureSetID"],"00C0":["US","1","Component2ReferencedMatingFeatureID"]},"0078":{"0000":["UL","1","GenericGroupLength"],"0001":["LO","1","ImplantTemplateGroupName"],"0010":["ST","1","ImplantTemplateGroupDescription"],"0020":["LO","1","ImplantTemplateGroupIssuer"],"0024":["LO","1","ImplantTemplateGroupVersion"],"0026":["SQ","1","ReplacedImplantTemplateGroupSequence"],"0028":["SQ","1","ImplantTemplateGroupTargetAnatomySequence"],"002A":["SQ","1","ImplantTemplateGroupMembersSequence"],"002E":["US","1","ImplantTemplateGroupMemberID"],"0050":["FD","3","ThreeDImplantTemplateGroupMemberMatchingPoint"],"0060":["FD","9","ThreeDImplantTemplateGroupMemberMatchingAxes"],"0070":["SQ","1","ImplantTemplateGroupMemberMatching2DCoordinatesSequence"],"0090":["FD","2","TwoDImplantTemplateGroupMemberMatchingPoint"],"00A0":["FD","4","TwoDImplantTemplateGroupMemberMatchingAxes"],"00B0":["SQ","1","ImplantTemplateGroupVariationDimensionSequence"],"00B2":["LO","1","ImplantTemplateGroupVariationDimensionName"],"00B4":["SQ","1","ImplantTemplateGroupVariationDimensionRankSequence"],"00B6":["US","1","ReferencedImplantTemplateGroupMemberID"],"00B8":["US","1","ImplantTemplateGroupVariationDimensionRank"]},"0080":{"0000":["UL","1","GenericGroupLength"],"0001":["SQ","1","SurfaceScanAcquisitionTypeCodeSequence"],"0002":["SQ","1","SurfaceScanModeCodeSequence"],"0003":["SQ","1","RegistrationMethodCodeSequence"],"0004":["FD","1","ShotDurationTime"],"0005":["FD","1","ShotOffsetTime"],"0006":["US","1-n","SurfacePointPresentationValueData"],"0007":["US","3-3n","SurfacePointColorCIELabValueData"],"0008":["SQ","1","UVMappingSequence"],"0009":["SH","1","TextureLabel"],"0010":["OF","1","UValueData"],"0011":["OF","1","VValueData"],"0012":["SQ","1","ReferencedTextureSequence"],"0013":["SQ","1","ReferencedSurfaceDataSequence"]},"0082":{"0000":["UL","1","GenericGroupLength"],"0001":["CS","1","AssessmentSummary"],"0003":["UT","1","AssessmentSummaryDescription"],"0004":["SQ","1","AssessedSOPInstanceSequence"],"0005":["SQ","1","ReferencedComparisonSOPInstanceSequence"],"0006":["UL","1","NumberOfAssessmentObservations"],"0007":["SQ","1","AssessmentObservationsSequence"],"0008":["CS","1","ObservationSignificance"],"000A":["UT","1","ObservationDescription"],"000C":["SQ","1","StructuredConstraintObservationSequence"],"0010":["SQ","1","AssessedAttributeValueSequence"],"0016":["LO","1","AssessmentSetID"],"0017":["SQ","1","AssessmentRequesterSequence"],"0018":["LO","1","SelectorAttributeName"],"0019":["LO","1","SelectorAttributeKeyword"],"0021":["SQ","1","AssessmentTypeCodeSequence"],"0022":["SQ","1","ObservationBasisCodeSequence"],"0023":["LO","1","AssessmentLabel"],"0032":["CS","1","ConstraintType"],"0033":["UT","1","SpecificationSelectionGuidance"],"0034":["SQ","1","ConstraintValueSequence"],"0035":["SQ","1","RecommendedDefaultValueSequence"],"0036":["CS","1","ConstraintViolationSignificance"],"0037":["UT","1","ConstraintViolationCondition"],"0038":["CS","1","ModifiableConstraintFlag"]},"0088":{"0000":["UL","1","GenericGroupLength"],"0130":["SH","1","StorageMediaFileSetID"],"0140":["UI","1","StorageMediaFileSetUID"],"0200":["SQ","1","IconImageSequence"],"0904":["LO","1","TopicTitle"],"0906":["ST","1","TopicSubject"],"0910":["LO","1","TopicAuthor"],"0912":["LO","1-32","TopicKeywords"]},"0100":{"0000":["UL","1","GenericGroupLength"],"0410":["CS","1","SOPInstanceStatus"],"0420":["DT","1","SOPAuthorizationDateTime"],"0424":["LT","1","SOPAuthorizationComment"],"0426":["LO","1","AuthorizationEquipmentCertificationNumber"]},"0400":{"0000":["UL","1","GenericGroupLength"],"0005":["US","1","MACIDNumber"],"0010":["UI","1","MACCalculationTransferSyntaxUID"],"0015":["CS","1","MACAlgorithm"],"0020":["AT","1-n","DataElementsSigned"],"0100":["UI","1","DigitalSignatureUID"],"0105":["DT","1","DigitalSignatureDateTime"],"0110":["CS","1","CertificateType"],"0115":["OB","1","CertificateOfSigner"],"0120":["OB","1","Signature"],"0305":["CS","1","CertifiedTimestampType"],"0310":["OB","1","CertifiedTimestamp"],"0315":["FL","1",""],"0401":["SQ","1","DigitalSignaturePurposeCodeSequence"],"0402":["SQ","1","ReferencedDigitalSignatureSequence"],"0403":["SQ","1","ReferencedSOPInstanceMACSequence"],"0404":["OB","1","MAC"],"0500":["SQ","1","EncryptedAttributesSequence"],"0510":["UI","1","EncryptedContentTransferSyntaxUID"],"0520":["OB","1","EncryptedContent"],"0550":["SQ","1","ModifiedAttributesSequence"],"0551":["SQ","1","NonconformingModifiedAttributesSequence"],"0552":["OB","1","NonconformingDataElementValue"],"0561":["SQ","1","OriginalAttributesSequence"],"0562":["DT","1","AttributeModificationDateTime"],"0563":["LO","1","ModifyingSystem"],"0564":["LO","1","SourceOfPreviousValues"],"0565":["CS","1","ReasonForTheAttributeModification"],"0600":["CS","1","InstanceOriginStatus"]},1e3:{"0000":["UL","1","GenericGroupLength"],"0010":["US","3","EscapeTriplet"],"0011":["US","3","RunLengthTriplet"],"0012":["US","1","HuffmanTableSize"],"0013":["US","3","HuffmanTableTriplet"],"0014":["US","1","ShiftTableSize"],"0015":["US","3","ShiftTableTriplet"]},1010:{"0000":["UL","1","GenericGroupLength"],"0004":["US","1-n","ZonalMap"]},2e3:{"0000":["UL","1","GenericGroupLength"],"0010":["IS","1","NumberOfCopies"],"001E":["SQ","1","PrinterConfigurationSequence"],"0020":["CS","1","PrintPriority"],"0030":["CS","1","MediumType"],"0040":["CS","1","FilmDestination"],"0050":["LO","1","FilmSessionLabel"],"0060":["IS","1","MemoryAllocation"],"0061":["IS","1","MaximumMemoryAllocation"],"0062":["CS","1","ColorImagePrintingFlag"],"0063":["CS","1","CollationFlag"],"0065":["CS","1","AnnotationFlag"],"0067":["CS","1","ImageOverlayFlag"],"0069":["CS","1","PresentationLUTFlag"],"006A":["CS","1","ImageBoxPresentationLUTFlag"],"00A0":["US","1","MemoryBitDepth"],"00A1":["US","1","PrintingBitDepth"],"00A2":["SQ","1","MediaInstalledSequence"],"00A4":["SQ","1","OtherMediaAvailableSequence"],"00A8":["SQ","1","SupportedImageDisplayFormatsSequence"],"0500":["SQ","1","ReferencedFilmBoxSequence"],"0510":["SQ","1","ReferencedStoredPrintSequence"]},2010:{"0000":["UL","1","GenericGroupLength"],"0010":["ST","1","ImageDisplayFormat"],"0030":["CS","1","AnnotationDisplayFormatID"],"0040":["CS","1","FilmOrientation"],"0050":["CS","1","FilmSizeID"],"0052":["CS","1","PrinterResolutionID"],"0054":["CS","1","DefaultPrinterResolutionID"],"0060":["CS","1","MagnificationType"],"0080":["CS","1","SmoothingType"],"00A6":["CS","1","DefaultMagnificationType"],"00A7":["CS","1-n","OtherMagnificationTypesAvailable"],"00A8":["CS","1","DefaultSmoothingType"],"00A9":["CS","1-n","OtherSmoothingTypesAvailable"],"0100":["CS","1","BorderDensity"],"0110":["CS","1","EmptyImageDensity"],"0120":["US","1","MinDensity"],"0130":["US","1","MaxDensity"],"0140":["CS","1","Trim"],"0150":["ST","1","ConfigurationInformation"],"0152":["LT","1","ConfigurationInformationDescription"],"0154":["IS","1","MaximumCollatedFilms"],"015E":["US","1","Illumination"],"0160":["US","1","ReflectedAmbientLight"],"0376":["DS","2","PrinterPixelSpacing"],"0500":["SQ","1","ReferencedFilmSessionSequence"],"0510":["SQ","1","ReferencedImageBoxSequence"],"0520":["SQ","1","ReferencedBasicAnnotationBoxSequence"]},2020:{"0000":["UL","1","GenericGroupLength"],"0010":["US","1","ImageBoxPosition"],"0020":["CS","1","Polarity"],"0030":["DS","1","RequestedImageSize"],"0040":["CS","1","RequestedDecimateCropBehavior"],"0050":["CS","1","RequestedResolutionID"],"00A0":["CS","1","RequestedImageSizeFlag"],"00A2":["CS","1","DecimateCropResult"],"0110":["SQ","1","BasicGrayscaleImageSequence"],"0111":["SQ","1","BasicColorImageSequence"],"0130":["SQ","1","ReferencedImageOverlayBoxSequence"],"0140":["SQ","1","ReferencedVOILUTBoxSequence"]},2030:{"0000":["UL","1","GenericGroupLength"],"0010":["US","1","AnnotationPosition"],"0020":["LO","1","TextString"]},2040:{"0000":["UL","1","GenericGroupLength"],"0010":["SQ","1","ReferencedOverlayPlaneSequence"],"0011":["US","1-99","ReferencedOverlayPlaneGroups"],"0020":["SQ","1","OverlayPixelDataSequence"],"0060":["CS","1","OverlayMagnificationType"],"0070":["CS","1","OverlaySmoothingType"],"0072":["CS","1","OverlayOrImageMagnification"],"0074":["US","1","MagnifyToNumberOfColumns"],"0080":["CS","1","OverlayForegroundDensity"],"0082":["CS","1","OverlayBackgroundDensity"],"0090":["CS","1","OverlayMode"],"0100":["CS","1","ThresholdDensity"],"0500":["SQ","1","ReferencedImageBoxSequenceRetired"]},2050:{"0000":["UL","1","GenericGroupLength"],"0010":["SQ","1","PresentationLUTSequence"],"0020":["CS","1","PresentationLUTShape"],"0500":["SQ","1","ReferencedPresentationLUTSequence"]},2100:{"0000":["UL","1","GenericGroupLength"],"0010":["SH","1","PrintJobID"],"0020":["CS","1","ExecutionStatus"],"0030":["CS","1","ExecutionStatusInfo"],"0040":["DA","1","CreationDate"],"0050":["TM","1","CreationTime"],"0070":["AE","1","Originator"],"0140":["AE","1","DestinationAE"],"0160":["SH","1","OwnerID"],"0170":["IS","1","NumberOfFilms"],"0500":["SQ","1","ReferencedPrintJobSequencePullStoredPrint"]},2110:{"0000":["UL","1","GenericGroupLength"],"0010":["CS","1","PrinterStatus"],"0020":["CS","1","PrinterStatusInfo"],"0030":["LO","1","PrinterName"],"0099":["SH","1","PrintQueueID"]},2120:{"0000":["UL","1","GenericGroupLength"],"0010":["CS","1","QueueStatus"],"0050":["SQ","1","PrintJobDescriptionSequence"],"0070":["SQ","1","ReferencedPrintJobSequence"]},2130:{"0000":["UL","1","GenericGroupLength"],"0010":["SQ","1","PrintManagementCapabilitiesSequence"],"0015":["SQ","1","PrinterCharacteristicsSequence"],"0030":["SQ","1","FilmBoxContentSequence"],"0040":["SQ","1","ImageBoxContentSequence"],"0050":["SQ","1","AnnotationContentSequence"],"0060":["SQ","1","ImageOverlayBoxContentSequence"],"0080":["SQ","1","PresentationLUTContentSequence"],"00A0":["SQ","1","ProposedStudySequence"],"00C0":["SQ","1","OriginalImageSequence"]},2200:{"0000":["UL","1","GenericGroupLength"],"0001":["CS","1","LabelUsingInformationExtractedFromInstances"],"0002":["UT","1","LabelText"],"0003":["CS","1","LabelStyleSelection"],"0004":["LT","1","MediaDisposition"],"0005":["LT","1","BarcodeValue"],"0006":["CS","1","BarcodeSymbology"],"0007":["CS","1","AllowMediaSplitting"],"0008":["CS","1","IncludeNonDICOMObjects"],"0009":["CS","1","IncludeDisplayApplication"],"000A":["CS","1","PreserveCompositeInstancesAfterMediaCreation"],"000B":["US","1","TotalNumberOfPiecesOfMediaCreated"],"000C":["LO","1","RequestedMediaApplicationProfile"],"000D":["SQ","1","ReferencedStorageMediaSequence"],"000E":["AT","1-n","FailureAttributes"],"000F":["CS","1","AllowLossyCompression"],"0020":["CS","1","RequestPriority"]},3002:{"0000":["UL","1","GenericGroupLength"],"0002":["SH","1","RTImageLabel"],"0003":["LO","1","RTImageName"],"0004":["ST","1","RTImageDescription"],"000A":["CS","1","ReportedValuesOrigin"],"000C":["CS","1","RTImagePlane"],"000D":["DS","3","XRayImageReceptorTranslation"],"000E":["DS","1","XRayImageReceptorAngle"],"0010":["DS","6","RTImageOrientation"],"0011":["DS","2","ImagePlanePixelSpacing"],"0012":["DS","2","RTImagePosition"],"0020":["SH","1","RadiationMachineName"],"0022":["DS","1","RadiationMachineSAD"],"0024":["DS","1","RadiationMachineSSD"],"0026":["DS","1","RTImageSID"],"0028":["DS","1","SourceToReferenceObjectDistance"],"0029":["IS","1","FractionNumber"],"0030":["SQ","1","ExposureSequence"],"0032":["DS","1","MetersetExposure"],"0034":["DS","4","DiaphragmPosition"],"0040":["SQ","1","FluenceMapSequence"],"0041":["CS","1","FluenceDataSource"],"0042":["DS","1","FluenceDataScale"],"0050":["SQ","1","PrimaryFluenceModeSequence"],"0051":["CS","1","FluenceMode"],"0052":["SH","1","FluenceModeID"]},3004:{"0000":["UL","1","GenericGroupLength"],"0001":["CS","1","DVHType"],"0002":["CS","1","DoseUnits"],"0004":["CS","1","DoseType"],"0005":["CS","1","SpatialTransformOfDose"],"0006":["LO","1","DoseComment"],"0008":["DS","3","NormalizationPoint"],"000A":["CS","1","DoseSummationType"],"000C":["DS","2-n","GridFrameOffsetVector"],"000E":["DS","1","DoseGridScaling"],"0010":["SQ","1","RTDoseROISequence"],"0012":["DS","1","DoseValue"],"0014":["CS","1-3","TissueHeterogeneityCorrection"],"0040":["DS","3","DVHNormalizationPoint"],"0042":["DS","1","DVHNormalizationDoseValue"],"0050":["SQ","1","DVHSequence"],"0052":["DS","1","DVHDoseScaling"],"0054":["CS","1","DVHVolumeUnits"],"0056":["IS","1","DVHNumberOfBins"],"0058":["DS","2-2n","DVHData"],"0060":["SQ","1","DVHReferencedROISequence"],"0062":["CS","1","DVHROIContributionType"],"0070":["DS","1","DVHMinimumDose"],"0072":["DS","1","DVHMaximumDose"],"0074":["DS","1","DVHMeanDose"]},3006:{"0000":["UL","1","GenericGroupLength"],"0002":["SH","1","StructureSetLabel"],"0004":["LO","1","StructureSetName"],"0006":["ST","1","StructureSetDescription"],"0008":["DA","1","StructureSetDate"],"0009":["TM","1","StructureSetTime"],"0010":["SQ","1","ReferencedFrameOfReferenceSequence"],"0012":["SQ","1","RTReferencedStudySequence"],"0014":["SQ","1","RTReferencedSeriesSequence"],"0016":["SQ","1","ContourImageSequence"],"0018":["SQ","1","PredecessorStructureSetSequence"],"0020":["SQ","1","StructureSetROISequence"],"0022":["IS","1","ROINumber"],"0024":["UI","1","ReferencedFrameOfReferenceUID"],"0026":["LO","1","ROIName"],"0028":["ST","1","ROIDescription"],"002A":["IS","3","ROIDisplayColor"],"002C":["DS","1","ROIVolume"],"0030":["SQ","1","RTRelatedROISequence"],"0033":["CS","1","RTROIRelationship"],"0036":["CS","1","ROIGenerationAlgorithm"],"0037":["SQ","1","ROIDerivationAlgorithmIdentificationSequence"],"0038":["LO","1","ROIGenerationDescription"],"0039":["SQ","1","ROIContourSequence"],"0040":["SQ","1","ContourSequence"],"0042":["CS","1","ContourGeometricType"],"0044":["DS","1","ContourSlabThickness"],"0045":["DS","3","ContourOffsetVector"],"0046":["IS","1","NumberOfContourPoints"],"0048":["IS","1","ContourNumber"],"0049":["IS","1-n","AttachedContours"],"004A":["SQ","1","SourcePixelPlanesCharacteristicsSequence"],"0050":["DS","3-3n","ContourData"],"0080":["SQ","1","RTROIObservationsSequence"],"0082":["IS","1","ObservationNumber"],"0084":["IS","1","ReferencedROINumber"],"0085":["SH","1","ROIObservationLabel"],"0086":["SQ","1","RTROIIdentificationCodeSequence"],"0088":["ST","1","ROIObservationDescription"],"00A0":["SQ","1","RelatedRTROIObservationsSequence"],"00A4":["CS","1","RTROIInterpretedType"],"00A6":["PN","1","ROIInterpreter"],"00B0":["SQ","1","ROIPhysicalPropertiesSequence"],"00B2":["CS","1","ROIPhysicalProperty"],"00B4":["DS","1","ROIPhysicalPropertyValue"],"00B6":["SQ","1","ROIElementalCompositionSequence"],"00B7":["US","1","ROIElementalCompositionAtomicNumber"],"00B8":["FL","1","ROIElementalCompositionAtomicMassFraction"],"00B9":["SQ","1","AdditionalRTROIIdentificationCodeSequence"],"00C0":["SQ","1","FrameOfReferenceRelationshipSequence"],"00C2":["UI","1","RelatedFrameOfReferenceUID"],"00C4":["CS","1","FrameOfReferenceTransformationType"],"00C6":["DS","16","FrameOfReferenceTransformationMatrix"],"00C8":["LO","1","FrameOfReferenceTransformationComment"],"00C9":["SQ","1","PatientLocationCoordinatesSequence"],"00CA":["SQ","1","PatientLocationCoordinatesCodeSequence"],"00CB":["SQ","1","PatientSupportPositionSequence"]},3008:{"0000":["UL","1","GenericGroupLength"],"0010":["SQ","1","MeasuredDoseReferenceSequence"],"0012":["ST","1","MeasuredDoseDescription"],"0014":["CS","1","MeasuredDoseType"],"0016":["DS","1","MeasuredDoseValue"],"0020":["SQ","1","TreatmentSessionBeamSequence"],"0021":["SQ","1","TreatmentSessionIonBeamSequence"],"0022":["IS","1","CurrentFractionNumber"],"0024":["DA","1","TreatmentControlPointDate"],"0025":["TM","1","TreatmentControlPointTime"],"002A":["CS","1","TreatmentTerminationStatus"],"002B":["SH","1","TreatmentTerminationCode"],"002C":["CS","1","TreatmentVerificationStatus"],"0030":["SQ","1","ReferencedTreatmentRecordSequence"],"0032":["DS","1","SpecifiedPrimaryMeterset"],"0033":["DS","1","SpecifiedSecondaryMeterset"],"0036":["DS","1","DeliveredPrimaryMeterset"],"0037":["DS","1","DeliveredSecondaryMeterset"],"003A":["DS","1","SpecifiedTreatmentTime"],"003B":["DS","1","DeliveredTreatmentTime"],"0040":["SQ","1","ControlPointDeliverySequence"],"0041":["SQ","1","IonControlPointDeliverySequence"],"0042":["DS","1","SpecifiedMeterset"],"0044":["DS","1","DeliveredMeterset"],"0045":["FL","1","MetersetRateSet"],"0046":["FL","1","MetersetRateDelivered"],"0047":["FL","1-n","ScanSpotMetersetsDelivered"],"0048":["DS","1","DoseRateDelivered"],"0050":["SQ","1","TreatmentSummaryCalculatedDoseReferenceSequence"],"0052":["DS","1","CumulativeDoseToDoseReference"],"0054":["DA","1","FirstTreatmentDate"],"0056":["DA","1","MostRecentTreatmentDate"],"005A":["IS","1","NumberOfFractionsDelivered"],"0060":["SQ","1","OverrideSequence"],"0061":["AT","1","ParameterSequencePointer"],"0062":["AT","1","OverrideParameterPointer"],"0063":["IS","1","ParameterItemIndex"],"0064":["IS","1","MeasuredDoseReferenceNumber"],"0065":["AT","1","ParameterPointer"],"0066":["ST","1","OverrideReason"],"0067":["US","1","ParameterValueNumber"],"0068":["SQ","1","CorrectedParameterSequence"],"006A":["FL","1","CorrectionValue"],"0070":["SQ","1","CalculatedDoseReferenceSequence"],"0072":["IS","1","CalculatedDoseReferenceNumber"],"0074":["ST","1","CalculatedDoseReferenceDescription"],"0076":["DS","1","CalculatedDoseReferenceDoseValue"],"0078":["DS","1","StartMeterset"],"007A":["DS","1","EndMeterset"],"0080":["SQ","1","ReferencedMeasuredDoseReferenceSequence"],"0082":["IS","1","ReferencedMeasuredDoseReferenceNumber"],"0090":["SQ","1","ReferencedCalculatedDoseReferenceSequence"],"0092":["IS","1","ReferencedCalculatedDoseReferenceNumber"],"00A0":["SQ","1","BeamLimitingDeviceLeafPairsSequence"],"00B0":["SQ","1","RecordedWedgeSequence"],"00C0":["SQ","1","RecordedCompensatorSequence"],"00D0":["SQ","1","RecordedBlockSequence"],"00D1":["SQ","1","RecordedBlockSlabSequence"],"00E0":["SQ","1","TreatmentSummaryMeasuredDoseReferenceSequence"],"00F0":["SQ","1","RecordedSnoutSequence"],"00F2":["SQ","1","RecordedRangeShifterSequence"],"00F4":["SQ","1","RecordedLateralSpreadingDeviceSequence"],"00F6":["SQ","1","RecordedRangeModulatorSequence"],"0100":["SQ","1","RecordedSourceSequence"],"0105":["LO","1","SourceSerialNumber"],"0110":["SQ","1","TreatmentSessionApplicationSetupSequence"],"0116":["CS","1","ApplicationSetupCheck"],"0120":["SQ","1","RecordedBrachyAccessoryDeviceSequence"],"0122":["IS","1","ReferencedBrachyAccessoryDeviceNumber"],"0130":["SQ","1","RecordedChannelSequence"],"0132":["DS","1","SpecifiedChannelTotalTime"],"0134":["DS","1","DeliveredChannelTotalTime"],"0136":["IS","1","SpecifiedNumberOfPulses"],"0138":["IS","1","DeliveredNumberOfPulses"],"013A":["DS","1","SpecifiedPulseRepetitionInterval"],"013C":["DS","1","DeliveredPulseRepetitionInterval"],"0140":["SQ","1","RecordedSourceApplicatorSequence"],"0142":["IS","1","ReferencedSourceApplicatorNumber"],"0150":["SQ","1","RecordedChannelShieldSequence"],"0152":["IS","1","ReferencedChannelShieldNumber"],"0160":["SQ","1","BrachyControlPointDeliveredSequence"],"0162":["DA","1","SafePositionExitDate"],"0164":["TM","1","SafePositionExitTime"],"0166":["DA","1","SafePositionReturnDate"],"0168":["TM","1","SafePositionReturnTime"],"0171":["SQ","1","PulseSpecificBrachyControlPointDeliveredSequence"],"0172":["US","1","PulseNumber"],"0173":["SQ","1","BrachyPulseControlPointDeliveredSequence"],"0200":["CS","1","CurrentTreatmentStatus"],"0202":["ST","1","TreatmentStatusComment"],"0220":["SQ","1","FractionGroupSummarySequence"],"0223":["IS","1","ReferencedFractionNumber"],"0224":["CS","1","FractionGroupType"],"0230":["CS","1","BeamStopperPosition"],"0240":["SQ","1","FractionStatusSummarySequence"],"0250":["DA","1","TreatmentDate"],"0251":["TM","1","TreatmentTime"]},"300A":{"0000":["UL","1","GenericGroupLength"],"0002":["SH","1","RTPlanLabel"],"0003":["LO","1","RTPlanName"],"0004":["ST","1","RTPlanDescription"],"0006":["DA","1","RTPlanDate"],"0007":["TM","1","RTPlanTime"],"0009":["LO","1-n","TreatmentProtocols"],"000A":["CS","1","PlanIntent"],"000B":["LO","1-n","TreatmentSites"],"000C":["CS","1","RTPlanGeometry"],"000E":["ST","1","PrescriptionDescription"],"0010":["SQ","1","DoseReferenceSequence"],"0012":["IS","1","DoseReferenceNumber"],"0013":["UI","1","DoseReferenceUID"],"0014":["CS","1","DoseReferenceStructureType"],"0015":["CS","1","NominalBeamEnergyUnit"],"0016":["LO","1","DoseReferenceDescription"],"0018":["DS","3","DoseReferencePointCoordinates"],"001A":["DS","1","NominalPriorDose"],"0020":["CS","1","DoseReferenceType"],"0021":["DS","1","ConstraintWeight"],"0022":["DS","1","DeliveryWarningDose"],"0023":["DS","1","DeliveryMaximumDose"],"0025":["DS","1","TargetMinimumDose"],"0026":["DS","1","TargetPrescriptionDose"],"0027":["DS","1","TargetMaximumDose"],"0028":["DS","1","TargetUnderdoseVolumeFraction"],"002A":["DS","1","OrganAtRiskFullVolumeDose"],"002B":["DS","1","OrganAtRiskLimitDose"],"002C":["DS","1","OrganAtRiskMaximumDose"],"002D":["DS","1","OrganAtRiskOverdoseVolumeFraction"],"0040":["SQ","1","ToleranceTableSequence"],"0042":["IS","1","ToleranceTableNumber"],"0043":["SH","1","ToleranceTableLabel"],"0044":["DS","1","GantryAngleTolerance"],"0046":["DS","1","BeamLimitingDeviceAngleTolerance"],"0048":["SQ","1","BeamLimitingDeviceToleranceSequence"],"004A":["DS","1","BeamLimitingDevicePositionTolerance"],"004B":["FL","1","SnoutPositionTolerance"],"004C":["DS","1","PatientSupportAngleTolerance"],"004E":["DS","1","TableTopEccentricAngleTolerance"],"004F":["FL","1","TableTopPitchAngleTolerance"],"0050":["FL","1","TableTopRollAngleTolerance"],"0051":["DS","1","TableTopVerticalPositionTolerance"],"0052":["DS","1","TableTopLongitudinalPositionTolerance"],"0053":["DS","1","TableTopLateralPositionTolerance"],"0055":["CS","1","RTPlanRelationship"],"0070":["SQ","1","FractionGroupSequence"],"0071":["IS","1","FractionGroupNumber"],"0072":["LO","1","FractionGroupDescription"],"0078":["IS","1","NumberOfFractionsPlanned"],"0079":["IS","1","NumberOfFractionPatternDigitsPerDay"],"007A":["IS","1","RepeatFractionCycleLength"],"007B":["LT","1","FractionPattern"],"0080":["IS","1","NumberOfBeams"],"0082":["DS","3","BeamDoseSpecificationPoint"],"0083":["UI","1","ReferencedDoseReferenceUID"],"0084":["DS","1","BeamDose"],"0086":["DS","1","BeamMeterset"],"0088":["FL","1","BeamDosePointDepth"],"0089":["FL","1","BeamDosePointEquivalentDepth"],"008A":["FL","1","BeamDosePointSSD"],"008B":["CS","1","BeamDoseMeaning"],"008C":["SQ","1","BeamDoseVerificationControlPointSequence"],"008D":["FL","1","AverageBeamDosePointDepth"],"008E":["FL","1","AverageBeamDosePointEquivalentDepth"],"008F":["FL","1","AverageBeamDosePointSSD"],"0090":["CS","1","BeamDoseType"],"0091":["DS","1","AlternateBeamDose"],"0092":["CS","1","AlternateBeamDoseType"],"0093":["CS","1","DepthValueAveragingFlag"],"0094":["DS","1","BeamDosePointSourceToExternalContourDistance"],"00A0":["IS","1","NumberOfBrachyApplicationSetups"],"00A2":["DS","3","BrachyApplicationSetupDoseSpecificationPoint"],"00A4":["DS","1","BrachyApplicationSetupDose"],"00B0":["SQ","1","BeamSequence"],"00B2":["SH","1","TreatmentMachineName"],"00B3":["CS","1","PrimaryDosimeterUnit"],"00B4":["DS","1","SourceAxisDistance"],"00B6":["SQ","1","BeamLimitingDeviceSequence"],"00B8":["CS","1","RTBeamLimitingDeviceType"],"00BA":["DS","1","SourceToBeamLimitingDeviceDistance"],"00BB":["FL","1","IsocenterToBeamLimitingDeviceDistance"],"00BC":["IS","1","NumberOfLeafJawPairs"],"00BE":["DS","3-n","LeafPositionBoundaries"],"00C0":["IS","1","BeamNumber"],"00C2":["LO","1","BeamName"],"00C3":["ST","1","BeamDescription"],"00C4":["CS","1","BeamType"],"00C5":["FD","1","BeamDeliveryDurationLimit"],"00C6":["CS","1","RadiationType"],"00C7":["CS","1","HighDoseTechniqueType"],"00C8":["IS","1","ReferenceImageNumber"],"00CA":["SQ","1","PlannedVerificationImageSequence"],"00CC":["LO","1-n","ImagingDeviceSpecificAcquisitionParameters"],"00CE":["CS","1","TreatmentDeliveryType"],"00D0":["IS","1","NumberOfWedges"],"00D1":["SQ","1","WedgeSequence"],"00D2":["IS","1","WedgeNumber"],"00D3":["CS","1","WedgeType"],"00D4":["SH","1","WedgeID"],"00D5":["IS","1","WedgeAngle"],"00D6":["DS","1","WedgeFactor"],"00D7":["FL","1","TotalWedgeTrayWaterEquivalentThickness"],"00D8":["DS","1","WedgeOrientation"],"00D9":["FL","1","IsocenterToWedgeTrayDistance"],"00DA":["DS","1","SourceToWedgeTrayDistance"],"00DB":["FL","1","WedgeThinEdgePosition"],"00DC":["SH","1","BolusID"],"00DD":["ST","1","BolusDescription"],"00DE":["DS","1","EffectiveWedgeAngle"],"00E0":["IS","1","NumberOfCompensators"],"00E1":["SH","1","MaterialID"],"00E2":["DS","1","TotalCompensatorTrayFactor"],"00E3":["SQ","1","CompensatorSequence"],"00E4":["IS","1","CompensatorNumber"],"00E5":["SH","1","CompensatorID"],"00E6":["DS","1","SourceToCompensatorTrayDistance"],"00E7":["IS","1","CompensatorRows"],"00E8":["IS","1","CompensatorColumns"],"00E9":["DS","2","CompensatorPixelSpacing"],"00EA":["DS","2","CompensatorPosition"],"00EB":["DS","1-n","CompensatorTransmissionData"],"00EC":["DS","1-n","CompensatorThicknessData"],"00ED":["IS","1","NumberOfBoli"],"00EE":["CS","1","CompensatorType"],"00EF":["SH","1","CompensatorTrayID"],"00F0":["IS","1","NumberOfBlocks"],"00F2":["DS","1","TotalBlockTrayFactor"],"00F3":["FL","1","TotalBlockTrayWaterEquivalentThickness"],"00F4":["SQ","1","BlockSequence"],"00F5":["SH","1","BlockTrayID"],"00F6":["DS","1","SourceToBlockTrayDistance"],"00F7":["FL","1","IsocenterToBlockTrayDistance"],"00F8":["CS","1","BlockType"],"00F9":["LO","1","AccessoryCode"],"00FA":["CS","1","BlockDivergence"],"00FB":["CS","1","BlockMountingPosition"],"00FC":["IS","1","BlockNumber"],"00FE":["LO","1","BlockName"],"0100":["DS","1","BlockThickness"],"0102":["DS","1","BlockTransmission"],"0104":["IS","1","BlockNumberOfPoints"],"0106":["DS","2-2n","BlockData"],"0107":["SQ","1","ApplicatorSequence"],"0108":["SH","1","ApplicatorID"],"0109":["CS","1","ApplicatorType"],"010A":["LO","1","ApplicatorDescription"],"010C":["DS","1","CumulativeDoseReferenceCoefficient"],"010E":["DS","1","FinalCumulativeMetersetWeight"],"0110":["IS","1","NumberOfControlPoints"],"0111":["SQ","1","ControlPointSequence"],"0112":["IS","1","ControlPointIndex"],"0114":["DS","1","NominalBeamEnergy"],"0115":["DS","1","DoseRateSet"],"0116":["SQ","1","WedgePositionSequence"],"0118":["CS","1","WedgePosition"],"011A":["SQ","1","BeamLimitingDevicePositionSequence"],"011C":["DS","2-2n","LeafJawPositions"],"011E":["DS","1","GantryAngle"],"011F":["CS","1","GantryRotationDirection"],"0120":["DS","1","BeamLimitingDeviceAngle"],"0121":["CS","1","BeamLimitingDeviceRotationDirection"],"0122":["DS","1","PatientSupportAngle"],"0123":["CS","1","PatientSupportRotationDirection"],"0124":["DS","1","TableTopEccentricAxisDistance"],"0125":["DS","1","TableTopEccentricAngle"],"0126":["CS","1","TableTopEccentricRotationDirection"],"0128":["DS","1","TableTopVerticalPosition"],"0129":["DS","1","TableTopLongitudinalPosition"],"012A":["DS","1","TableTopLateralPosition"],"012C":["DS","3","IsocenterPosition"],"012E":["DS","3","SurfaceEntryPoint"],"0130":["DS","1","SourceToSurfaceDistance"],"0131":["FL","1","AverageBeamDosePointSourceToExternalContourDistance"],"0132":["FL","1","SourceToExternalContourDistance"],"0133":["FL","3","ExternalContourEntryPoint"],"0134":["DS","1","CumulativeMetersetWeight"],"0140":["FL","1","TableTopPitchAngle"],"0142":["CS","1","TableTopPitchRotationDirection"],"0144":["FL","1","TableTopRollAngle"],"0146":["CS","1","TableTopRollRotationDirection"],"0148":["FL","1","HeadFixationAngle"],"014A":["FL","1","GantryPitchAngle"],"014C":["CS","1","GantryPitchRotationDirection"],"014E":["FL","1","GantryPitchAngleTolerance"],"0150":["CS","1","FixationEye"],"0151":["DS","1","ChairHeadFramePosition"],"0152":["DS","1","HeadFixationAngleTolerance"],"0153":["DS","1","ChairHeadFramePositionTolerance"],"0154":["DS","1","FixationLightAzimuthalAngleTolerance"],"0155":["DS","1","FixationLightPolarAngleTolerance"],"0180":["SQ","1","PatientSetupSequence"],"0182":["IS","1","PatientSetupNumber"],"0183":["LO","1","PatientSetupLabel"],"0184":["LO","1","PatientAdditionalPosition"],"0190":["SQ","1","FixationDeviceSequence"],"0192":["CS","1","FixationDeviceType"],"0194":["SH","1","FixationDeviceLabel"],"0196":["ST","1","FixationDeviceDescription"],"0198":["SH","1","FixationDevicePosition"],"0199":["FL","1","FixationDevicePitchAngle"],"019A":["FL","1","FixationDeviceRollAngle"],"01A0":["SQ","1","ShieldingDeviceSequence"],"01A2":["CS","1","ShieldingDeviceType"],"01A4":["SH","1","ShieldingDeviceLabel"],"01A6":["ST","1","ShieldingDeviceDescription"],"01A8":["SH","1","ShieldingDevicePosition"],"01B0":["CS","1","SetupTechnique"],"01B2":["ST","1","SetupTechniqueDescription"],"01B4":["SQ","1","SetupDeviceSequence"],"01B6":["CS","1","SetupDeviceType"],"01B8":["SH","1","SetupDeviceLabel"],"01BA":["ST","1","SetupDeviceDescription"],"01BC":["DS","1","SetupDeviceParameter"],"01D0":["ST","1","SetupReferenceDescription"],"01D2":["DS","1","TableTopVerticalSetupDisplacement"],"01D4":["DS","1","TableTopLongitudinalSetupDisplacement"],"01D6":["DS","1","TableTopLateralSetupDisplacement"],"0200":["CS","1","BrachyTreatmentTechnique"],"0202":["CS","1","BrachyTreatmentType"],"0206":["SQ","1","TreatmentMachineSequence"],"0210":["SQ","1","SourceSequence"],"0212":["IS","1","SourceNumber"],"0214":["CS","1","SourceType"],"0216":["LO","1","SourceManufacturer"],"0218":["DS","1","ActiveSourceDiameter"],"021A":["DS","1","ActiveSourceLength"],"021B":["SH","1","SourceModelID"],"021C":["LO","1","SourceDescription"],"0222":["DS","1","SourceEncapsulationNominalThickness"],"0224":["DS","1","SourceEncapsulationNominalTransmission"],"0226":["LO","1","SourceIsotopeName"],"0228":["DS","1","SourceIsotopeHalfLife"],"0229":["CS","1","SourceStrengthUnits"],"022A":["DS","1","ReferenceAirKermaRate"],"022B":["DS","1","SourceStrength"],"022C":["DA","1","SourceStrengthReferenceDate"],"022E":["TM","1","SourceStrengthReferenceTime"],"0230":["SQ","1","ApplicationSetupSequence"],"0232":["CS","1","ApplicationSetupType"],"0234":["IS","1","ApplicationSetupNumber"],"0236":["LO","1","ApplicationSetupName"],"0238":["LO","1","ApplicationSetupManufacturer"],"0240":["IS","1","TemplateNumber"],"0242":["SH","1","TemplateType"],"0244":["LO","1","TemplateName"],"0250":["DS","1","TotalReferenceAirKerma"],"0260":["SQ","1","BrachyAccessoryDeviceSequence"],"0262":["IS","1","BrachyAccessoryDeviceNumber"],"0263":["SH","1","BrachyAccessoryDeviceID"],"0264":["CS","1","BrachyAccessoryDeviceType"],"0266":["LO","1","BrachyAccessoryDeviceName"],"026A":["DS","1","BrachyAccessoryDeviceNominalThickness"],"026C":["DS","1","BrachyAccessoryDeviceNominalTransmission"],"0271":["DS","1","ChannelEffectiveLength"],"0272":["DS","1","ChannelInnerLength"],"0273":["SH","1","AfterloaderChannelID"],"0274":["DS","1","SourceApplicatorTipLength"],"0280":["SQ","1","ChannelSequence"],"0282":["IS","1","ChannelNumber"],"0284":["DS","1","ChannelLength"],"0286":["DS","1","ChannelTotalTime"],"0288":["CS","1","SourceMovementType"],"028A":["IS","1","NumberOfPulses"],"028C":["DS","1","PulseRepetitionInterval"],"0290":["IS","1","SourceApplicatorNumber"],"0291":["SH","1","SourceApplicatorID"],"0292":["CS","1","SourceApplicatorType"],"0294":["LO","1","SourceApplicatorName"],"0296":["DS","1","SourceApplicatorLength"],"0298":["LO","1","SourceApplicatorManufacturer"],"029C":["DS","1","SourceApplicatorWallNominalThickness"],"029E":["DS","1","SourceApplicatorWallNominalTransmission"],"02A0":["DS","1","SourceApplicatorStepSize"],"02A1":["IS","1","ApplicatorShapeReferencedROINumber"],"02A2":["IS","1","TransferTubeNumber"],"02A4":["DS","1","TransferTubeLength"],"02B0":["SQ","1","ChannelShieldSequence"],"02B2":["IS","1","ChannelShieldNumber"],"02B3":["SH","1","ChannelShieldID"],"02B4":["LO","1","ChannelShieldName"],"02B8":["DS","1","ChannelShieldNominalThickness"],"02BA":["DS","1","ChannelShieldNominalTransmission"],"02C8":["DS","1","FinalCumulativeTimeWeight"],"02D0":["SQ","1","BrachyControlPointSequence"],"02D2":["DS","1","ControlPointRelativePosition"],"02D4":["DS","3","ControlPoint3DPosition"],"02D6":["DS","1","CumulativeTimeWeight"],"02E0":["CS","1","CompensatorDivergence"],"02E1":["CS","1","CompensatorMountingPosition"],"02E2":["DS","1-n","SourceToCompensatorDistance"],"02E3":["FL","1","TotalCompensatorTrayWaterEquivalentThickness"],"02E4":["FL","1","IsocenterToCompensatorTrayDistance"],"02E5":["FL","1","CompensatorColumnOffset"],"02E6":["FL","1-n","IsocenterToCompensatorDistances"],"02E7":["FL","1","CompensatorRelativeStoppingPowerRatio"],"02E8":["FL","1","CompensatorMillingToolDiameter"],"02EA":["SQ","1","IonRangeCompensatorSequence"],"02EB":["LT","1","CompensatorDescription"],"0302":["IS","1","RadiationMassNumber"],"0304":["IS","1","RadiationAtomicNumber"],"0306":["SS","1","RadiationChargeState"],"0308":["CS","1","ScanMode"],"0309":["CS","1","ModulatedScanModeType"],"030A":["FL","2","VirtualSourceAxisDistances"],"030C":["SQ","1","SnoutSequence"],"030D":["FL","1","SnoutPosition"],"030F":["SH","1","SnoutID"],"0312":["IS","1","NumberOfRangeShifters"],"0314":["SQ","1","RangeShifterSequence"],"0316":["IS","1","RangeShifterNumber"],"0318":["SH","1","RangeShifterID"],"0320":["CS","1","RangeShifterType"],"0322":["LO","1","RangeShifterDescription"],"0330":["IS","1","NumberOfLateralSpreadingDevices"],"0332":["SQ","1","LateralSpreadingDeviceSequence"],"0334":["IS","1","LateralSpreadingDeviceNumber"],"0336":["SH","1","LateralSpreadingDeviceID"],"0338":["CS","1","LateralSpreadingDeviceType"],"033A":["LO","1","LateralSpreadingDeviceDescription"],"033C":["FL","1","LateralSpreadingDeviceWaterEquivalentThickness"],"0340":["IS","1","NumberOfRangeModulators"],"0342":["SQ","1","RangeModulatorSequence"],"0344":["IS","1","RangeModulatorNumber"],"0346":["SH","1","RangeModulatorID"],"0348":["CS","1","RangeModulatorType"],"034A":["LO","1","RangeModulatorDescription"],"034C":["SH","1","BeamCurrentModulationID"],"0350":["CS","1","PatientSupportType"],"0352":["SH","1","PatientSupportID"],"0354":["LO","1","PatientSupportAccessoryCode"],"0355":["LO","1","TrayAccessoryCode"],"0356":["FL","1","FixationLightAzimuthalAngle"],"0358":["FL","1","FixationLightPolarAngle"],"035A":["FL","1","MetersetRate"],"0360":["SQ","1","RangeShifterSettingsSequence"],"0362":["LO","1","RangeShifterSetting"],"0364":["FL","1","IsocenterToRangeShifterDistance"],"0366":["FL","1","RangeShifterWaterEquivalentThickness"],"0370":["SQ","1","LateralSpreadingDeviceSettingsSequence"],"0372":["LO","1","LateralSpreadingDeviceSetting"],"0374":["FL","1","IsocenterToLateralSpreadingDeviceDistance"],"0380":["SQ","1","RangeModulatorSettingsSequence"],"0382":["FL","1","RangeModulatorGatingStartValue"],"0384":["FL","1","RangeModulatorGatingStopValue"],"0386":["FL","1","RangeModulatorGatingStartWaterEquivalentThickness"],"0388":["FL","1","RangeModulatorGatingStopWaterEquivalentThickness"],"038A":["FL","1","IsocenterToRangeModulatorDistance"],"038F":["FL","1-n","ScanSpotTimeOffset"],"0390":["SH","1","ScanSpotTuneID"],"0391":["IS","1-n","ScanSpotPrescribedIndices"],"0392":["IS","1","NumberOfScanSpotPositions"],"0393":["CS","1","ScanSpotReordered"],"0394":["FL","1-n","ScanSpotPositionMap"],"0395":["CS","1","ScanSpotReorderingAllowed"],"0396":["FL","1-n","ScanSpotMetersetWeights"],"0398":["FL","2","ScanningSpotSize"],"0399":["FL","2-2n","ScanSpotSizesDelivered"],"039A":["IS","1","NumberOfPaintings"],"03A0":["SQ","1","IonToleranceTableSequence"],"03A2":["SQ","1","IonBeamSequence"],"03A4":["SQ","1","IonBeamLimitingDeviceSequence"],"03A6":["SQ","1","IonBlockSequence"],"03A8":["SQ","1","IonControlPointSequence"],"03AA":["SQ","1","IonWedgeSequence"],"03AC":["SQ","1","IonWedgePositionSequence"],"0401":["SQ","1","ReferencedSetupImageSequence"],"0402":["ST","1","SetupImageComment"],"0410":["SQ","1","MotionSynchronizationSequence"],"0412":["FL","3","ControlPointOrientation"],"0420":["SQ","1","GeneralAccessorySequence"],"0421":["SH","1","GeneralAccessoryID"],"0422":["ST","1","GeneralAccessoryDescription"],"0423":["CS","1","GeneralAccessoryType"],"0424":["IS","1","GeneralAccessoryNumber"],"0425":["FL","1","SourceToGeneralAccessoryDistance"],"0426":["DS","1","IsocenterToGeneralAccessoryDistance"],"0431":["SQ","1","ApplicatorGeometrySequence"],"0432":["CS","1","ApplicatorApertureShape"],"0433":["FL","1","ApplicatorOpening"],"0434":["FL","1","ApplicatorOpeningX"],"0435":["FL","1","ApplicatorOpeningY"],"0436":["FL","1","SourceToApplicatorMountingPositionDistance"],"0440":["IS","1","NumberOfBlockSlabItems"],"0441":["SQ","1","BlockSlabSequence"],"0442":["DS","1","BlockSlabThickness"],"0443":["US","1","BlockSlabNumber"],"0450":["SQ","1","DeviceMotionControlSequence"],"0451":["CS","1","DeviceMotionExecutionMode"],"0452":["CS","1","DeviceMotionObservationMode"],"0453":["SQ","1","DeviceMotionParameterCodeSequence"],"0501":["FL","1","DistalDepthFraction"],"0502":["FL","1","DistalDepth"],"0503":["FL","2","NominalRangeModulationFractions"],"0504":["FL","2","NominalRangeModulatedRegionDepths"],"0505":["SQ","1","DepthDoseParametersSequence"],"0506":["SQ","1","DeliveredDepthDoseParametersSequence"],"0507":["FL","1","DeliveredDistalDepthFraction"],"0508":["FL","1","DeliveredDistalDepth"],"0509":["FL","2","DeliveredNominalRangeModulationFractions"],"0510":["FL","2","DeliveredNominalRangeModulatedRegionDepths"],"0511":["CS","1","DeliveredReferenceDoseDefinition"],"0512":["CS","1","ReferenceDoseDefinition"],"0600":["US","1","RTControlPointIndex"],"0601":["US","1","RadiationGenerationModeIndex"],"0602":["US","1","ReferencedDefinedDeviceIndex"],"0603":["US","1","RadiationDoseIdentificationIndex"],"0604":["US","1","NumberOfRTControlPoints"],"0605":["US","1","ReferencedRadiationGenerationModeIndex"],"0606":["US","1","TreatmentPositionIndex"],"0607":["US","1","ReferencedDeviceIndex"],"0608":["LO","1","TreatmentPositionGroupLabel"],"0609":["UI","1","TreatmentPositionGroupUID"],"060A":["SQ","1","TreatmentPositionGroupSequence"],"060B":["US","1","ReferencedTreatmentPositionIndex"],"060C":["US","1","ReferencedRadiationDoseIdentificationIndex"],"060D":["FD","1","RTAccessoryHolderWaterEquivalentThickness"],"060E":["US","1","ReferencedRTAccessoryHolderDeviceIndex"],"060F":["CS","1","RTAccessoryHolderSlotExistenceFlag"],"0610":["SQ","1","RTAccessoryHolderSlotSequence"],"0611":["LO","1","RTAccessoryHolderSlotID"],"0612":["FD","1","RTAccessoryHolderSlotDistance"],"0613":["FD","1","RTAccessorySlotDistance"],"0614":["SQ","1","RTAccessoryHolderDefinitionSequence"],"0615":["LO","1","RTAccessoryDeviceSlotID"],"0616":["SQ","1","RTRadiationSequence"],"0617":["SQ","1","RadiationDoseSequence"],"0618":["SQ","1","RadiationDoseIdentificationSequence"],"0619":["LO","1","RadiationDoseIdentificationLabel"],"061A":["CS","1","ReferenceDoseType"],"061B":["CS","1","PrimaryDoseValueIndicator"],"061C":["SQ","1","DoseValuesSequence"],"061D":["CS","1-n","DoseValuePurpose"],"061E":["FD","3","ReferenceDosePointCoordinates"],"061F":["SQ","1","RadiationDoseValuesParametersSequence"],"0620":["SQ","1","MetersetToDoseMappingSequence"],"0621":["SQ","1","ExpectedInVivoMeasurementValuesSequence"],"0622":["US","1","ExpectedInVivoMeasurementValueIndex"],"0623":["LO","1","RadiationDoseInVivoMeasurementLabel"],"0624":["FD","2","RadiationDoseCentralAxisDisplacement"],"0625":["FD","1","RadiationDoseValue"],"0626":["FD","1","RadiationDoseSourceToSkinDistance"],"0627":["FD","3","RadiationDoseMeasurementPointCoordinates"],"0628":["FD","1","RadiationDoseSourceToExternalContourDistance"],"0629":["SQ","1","RTToleranceSetSequence"],"062A":["LO","1","RTToleranceSetLabel"],"062B":["SQ","1","AttributeToleranceValuesSequence"],"062C":["FD","1","ToleranceValue"],"062D":["SQ","1","PatientSupportPositionToleranceSequence"],"062E":["FD","1","TreatmentTimeLimit"],"062F":["SQ","1","CArmPhotonElectronControlPointSequence"],"0630":["SQ","1","ReferencedRTRadiationSequence"],"0631":["SQ","1","ReferencedRTInstanceSequence"],"0632":["SQ","1","ReferencedRTPatientSetupSequence"],"0634":["FD","1","SourceToPatientSurfaceDistance"],"0635":["SQ","1","TreatmentMachineSpecialModeCodeSequence"],"0636":["US","1","IntendedNumberOfFractions"],"0637":["CS","1","RTRadiationSetIntent"],"0638":["CS","1","RTRadiationPhysicalAndGeometricContentDetailFlag"],"0639":["CS","1","RTRecordFlag"],"063A":["SQ","1","TreatmentDeviceIdentificationSequence"],"063B":["SQ","1","ReferencedRTPhysicianIntentSequence"],"063C":["FD","1","CumulativeMeterset"],"063D":["FD","1","DeliveryRate"],"063E":["SQ","1","DeliveryRateUnitSequence"],"063F":["SQ","1","TreatmentPositionSequence"],"0640":["FD","1","RadiationSourceAxisDistance"],"0641":["US","1","NumberOfRTBeamLimitingDevices"],"0642":["FD","1","RTBeamLimitingDeviceProximalDistance"],"0643":["FD","1","RTBeamLimitingDeviceDistalDistance"],"0644":["SQ","1","ParallelRTBeamDelimiterDeviceOrientationLabelCodeSequence"],"0645":["FD","1","BeamModifierOrientationAngle"],"0646":["SQ","1","FixedRTBeamDelimiterDeviceSequence"],"0647":["SQ","1","ParallelRTBeamDelimiterDeviceSequence"],"0648":["US","1","NumberOfParallelRTBeamDelimiters"],"0649":["FD","2-n","ParallelRTBeamDelimiterBoundaries"],"064A":["FD","2-n","ParallelRTBeamDelimiterPositions"],"064B":["FD","2","RTBeamLimitingDeviceOffset"],"064C":["SQ","1","RTBeamDelimiterGeometrySequence"],"064D":["SQ","1","RTBeamLimitingDeviceDefinitionSequence"],"064E":["CS","1","ParallelRTBeamDelimiterOpeningMode"],"064F":["CS","1-n","ParallelRTBeamDelimiterLeafMountingSide"],"0650":["UI","1","PatientSetupUID"],"0651":["SQ","1","WedgeDefinitionSequence"],"0652":["FD","1","RadiationBeamWedgeAngle"],"0653":["FD","1","RadiationBeamWedgeThinEdgeDistance"],"0654":["FD","1","RadiationBeamEffectiveWedgeAngle"],"0655":["US","1","NumberOfWedgePositions"],"0656":["SQ","1","RTBeamLimitingDeviceOpeningSequence"],"0657":["US","1","NumberOfRTBeamLimitingDeviceOpenings"],"0658":["SQ","1","RadiationDosimeterUnitSequence"],"0659":["SQ","1","RTDeviceDistanceReferenceLocationCodeSequence"],"065A":["SQ","1","RadiationDeviceConfigurationAndCommissioningKeySequence"],"065B":["SQ","1","PatientSupportPositionParameterSequence"],"065C":["CS","1","PatientSupportPositionSpecificationMethod"],"065D":["SQ","1","PatientSupportPositionDeviceParameterSequence"],"065E":["US","1","DeviceOrderIndex"],"065F":["US","1","PatientSupportPositionParameterOrderIndex"],"0660":["SQ","1","PatientSupportPositionDeviceToleranceSequence"],"0661":["US","1","PatientSupportPositionToleranceOrderIndex"],"0662":["SQ","1","CompensatorDefinitionSequence"],"0663":["CS","1","CompensatorMapOrientation"],"0664":["OF","1","CompensatorProximalThicknessMap"],"0665":["OF","1","CompensatorDistalThicknessMap"],"0666":["FD","1","CompensatorBasePlaneOffset"],"0667":["SQ","1","CompensatorShapeFabricationCodeSequence"],"0668":["SQ","1","CompensatorShapeSequence"],"0669":["FD","1","RadiationBeamCompensatorMillingToolDiameter"],"066A":["SQ","1","BlockDefinitionSequence"],"066B":["OF","1","BlockEdgeData"],"066C":["CS","1","BlockOrientation"],"066D":["FD","1","RadiationBeamBlockThickness"],"066E":["FD","1","RadiationBeamBlockSlabThickness"],"066F":["SQ","1","BlockEdgeDataSequence"],"0670":["US","1","NumberOfRTAccessoryHolders"],"0671":["SQ","1","GeneralAccessoryDefinitionSequence"],"0672":["US","1","NumberOfGeneralAccessories"],"0673":["SQ","1","BolusDefinitionSequence"],"0674":["US","1","NumberOfBoluses"],"0675":["UI","1","EquipmentFrameOfReferenceUID"],"0676":["ST","1","EquipmentFrameOfReferenceDescription"],"0677":["SQ","1","EquipmentReferencePointCoordinatesSequence"],"0678":["SQ","1","EquipmentReferencePointCodeSequence"],"0679":["FD","1","RTBeamLimitingDeviceAngle"],"067A":["FD","1","SourceRollAngle"],"067B":["SQ","1","RadiationGenerationModeSequence"],"067C":["SH","1","RadiationGenerationModeLabel"],"067D":["ST","1","RadiationGenerationModeDescription"],"067E":["SQ","1","RadiationGenerationModeMachineCodeSequence"],"067F":["SQ","1","RadiationTypeCodeSequence"],"0680":["DS","1","NominalEnergy"],"0681":["DS","1","MinimumNominalEnergy"],"0682":["DS","1","MaximumNominalEnergy"],"0683":["SQ","1","RadiationFluenceModifierCodeSequence"],"0684":["SQ","1","EnergyUnitCodeSequence"],"0685":["US","1","NumberOfRadiationGenerationModes"],"0686":["SQ","1","PatientSupportDevicesSequence"],"0687":["US","1","NumberOfPatientSupportDevices"],"0688":["FD","1","RTBeamModifierDefinitionDistance"],"0689":["SQ","1","BeamAreaLimitSequence"],"068A":["SQ","1","ReferencedRTPrescriptionSequence"],"0700":["UI","1","TreatmentSessionUID"],"0701":["CS","1","RTRadiationUsage"],"0702":["SQ","1","ReferencedRTRadiationSetSequence"],"0703":["SQ","1","ReferencedRTRadiationRecordSequence"],"0704":["US","1","RTRadiationSetDeliveryNumber"],"0705":["US","1","ClinicalFractionNumber"],"0706":["CS","1","RTTreatmentFractionCompletionStatus"],"0707":["CS","1","RTRadiationSetUsage"],"0708":["CS","1","TreatmentDeliveryContinuationFlag"],"0709":["CS","1","TreatmentRecordContentOrigin"],"0714":["CS","1","RTTreatmentTerminationStatus"],"0715":["SQ","1","RTTreatmentTerminationReasonCodeSequence"],"0716":["SQ","1","MachineSpecificTreatmentTerminationCodeSequence"],"0722":["SQ","1","RTRadiationSalvageRecordControlPointSequence"],"0723":["CS","1","StartingMetersetValueKnownFlag"],"0730":["ST","1","TreatmentTerminationDescription"],"0731":["SQ","1","TreatmentToleranceViolationSequence"],"0732":["CS","1","TreatmentToleranceViolationCategory"],"0733":["SQ","1","TreatmentToleranceViolationAttributeSequence"],"0734":["ST","1","TreatmentToleranceViolationDescription"],"0735":["ST","1","TreatmentToleranceViolationIdentification"],"0736":["DT","1","TreatmentToleranceViolationDateTime"],"073A":["DT","1","RecordedRTControlPointDateTime"],"073B":["US","1","ReferencedRadiationRTControlPointIndex"],"073E":["SQ","1","AlternateValueSequence"],"073F":["SQ","1","ConfirmationSequence"],"0740":["SQ","1","InterlockSequence"],"0741":["DT","1","InterlockDateTime"],"0742":["ST","1","InterlockDescription"],"0743":["SQ","1","InterlockOriginatingDeviceSequence"],"0744":["SQ","1","InterlockCodeSequence"],"0745":["SQ","1","InterlockResolutionCodeSequence"],"0746":["SQ","1","InterlockResolutionUserSequence"],"0760":["DT","1","OverrideDateTime"],"0761":["SQ","1","TreatmentToleranceViolationTypeCodeSequence"],"0762":["SQ","1","TreatmentToleranceViolationCauseCodeSequence"],"0772":["SQ","1","MeasuredMetersetToDoseMappingSequence"],"0773":["US","1","ReferencedExpectedInVivoMeasurementValueIndex"],"0774":["SQ","1","DoseMeasurementDeviceCodeSequence"],"0780":["SQ","1","AdditionalParameterRecordingInstanceSequence"],"0782":["US","1",""],"0783":["ST","1","InterlockOriginDescription"],"0784":["SQ","1","RTPatientPositionScopeSequence"],"0785":["UI","1","ReferencedTreatmentPositionGroupUID"],"0786":["US","1","RadiationOrderIndex"],"0787":["SQ","1","OmittedRadiationSequence"],"0788":["SQ","1","ReasonForOmissionCodeSequence"],"0789":["SQ","1","RTDeliveryStartPatientPositionSequence"],"078A":["SQ","1","RTTreatmentPreparationPatientPositionSequence"],"078B":["SQ","1","ReferencedRTTreatmentPreparationSequence"],"078C":["SQ","1","ReferencedPatientSetupPhotoSequence"],"078D":["SQ","1","PatientTreatmentPreparationMethodCodeSequence"],"078E":["LT","1","PatientTreatmentPreparationProcedureParameterDescription"],"078F":["SQ","1","PatientTreatmentPreparationDeviceSequence"],"0790":["SQ","1","PatientTreatmentPreparationProcedureSequence"],"0791":["SQ","1","PatientTreatmentPreparationProcedureCodeSequence"],"0792":["LT","1","PatientTreatmentPreparationMethodDescription"],"0793":["SQ","1","PatientTreatmentPreparationProcedureParameterSequence"],"0794":["LT","1","PatientSetupPhotoDescription"],"0795":["US","1","PatientTreatmentPreparationProcedureIndex"],"0796":["US","1","ReferencedPatientSetupProcedureIndex"],"0797":["SQ","1","RTRadiationTaskSequence"],"0798":["SQ","1","RTPatientPositionDisplacementSequence"],"0799":["SQ","1","RTPatientPositionSequence"],"079A":["LO","1","DisplacementReferenceLabel"],"079B":["FD","16","DisplacementMatrix"],"079C":["SQ","1","PatientSupportDisplacementSequence"],"079D":["SQ","1","DisplacementReferenceLocationCodeSequence"],"079E":["CS","1","RTRadiationSetDeliveryUsage"]},"300C":{"0000":["UL","1","GenericGroupLength"],"0002":["SQ","1","ReferencedRTPlanSequence"],"0004":["SQ","1","ReferencedBeamSequence"],"0006":["IS","1","ReferencedBeamNumber"],"0007":["IS","1","ReferencedReferenceImageNumber"],"0008":["DS","1","StartCumulativeMetersetWeight"],"0009":["DS","1","EndCumulativeMetersetWeight"],"000A":["SQ","1","ReferencedBrachyApplicationSetupSequence"],"000C":["IS","1","ReferencedBrachyApplicationSetupNumber"],"000E":["IS","1","ReferencedSourceNumber"],"0020":["SQ","1","ReferencedFractionGroupSequence"],"0022":["IS","1","ReferencedFractionGroupNumber"],"0040":["SQ","1","ReferencedVerificationImageSequence"],"0042":["SQ","1","ReferencedReferenceImageSequence"],"0050":["SQ","1","ReferencedDoseReferenceSequence"],"0051":["IS","1","ReferencedDoseReferenceNumber"],"0055":["SQ","1","BrachyReferencedDoseReferenceSequence"],"0060":["SQ","1","ReferencedStructureSetSequence"],"006A":["IS","1","ReferencedPatientSetupNumber"],"0080":["SQ","1","ReferencedDoseSequence"],"00A0":["IS","1","ReferencedToleranceTableNumber"],"00B0":["SQ","1","ReferencedBolusSequence"],"00C0":["IS","1","ReferencedWedgeNumber"],"00D0":["IS","1","ReferencedCompensatorNumber"],"00E0":["IS","1","ReferencedBlockNumber"],"00F0":["IS","1","ReferencedControlPointIndex"],"00F2":["SQ","1","ReferencedControlPointSequence"],"00F4":["IS","1","ReferencedStartControlPointIndex"],"00F6":["IS","1","ReferencedStopControlPointIndex"],"0100":["IS","1","ReferencedRangeShifterNumber"],"0102":["IS","1","ReferencedLateralSpreadingDeviceNumber"],"0104":["IS","1","ReferencedRangeModulatorNumber"],"0111":["SQ","1","OmittedBeamTaskSequence"],"0112":["CS","1","ReasonForOmission"],"0113":["LO","1","ReasonForOmissionDescription"],"0114":["SQ","1","PrescriptionOverviewSequence"],"0115":["FL","1","TotalPrescriptionDose"],"0116":["SQ","1","PlanOverviewSequence"],"0117":["US","1","PlanOverviewIndex"],"0118":["US","1","ReferencedPlanOverviewIndex"],"0119":["US","1","NumberOfFractionsIncluded"],"0120":["SQ","1","DoseCalibrationConditionsSequence"],"0121":["FD","1","AbsorbedDoseToMetersetRatio"],"0122":["FD","2","DelineatedRadiationFieldSize"],"0123":["CS","1","DoseCalibrationConditionsVerifiedFlag"],"0124":["FD","1","CalibrationReferencePointDepth"],"0125":["SQ","1","GatingBeamHoldTransitionSequence"],"0126":["CS","1","BeamHoldTransition"],"0127":["DT","1","BeamHoldTransitionDateTime"],"0128":["SQ","1","BeamHoldOriginatingDeviceSequence"]},"300E":{"0000":["UL","1","GenericGroupLength"],"0002":["CS","1","ApprovalStatus"],"0004":["DA","1","ReviewDate"],"0005":["TM","1","ReviewTime"],"0008":["PN","1","ReviewerName"]},3010:{"0000":["UL","1","GenericGroupLength"],"0001":["SQ","1","RadiobiologicalDoseEffectSequence"],"0002":["CS","1","RadiobiologicalDoseEffectFlag"],"0003":["SQ","1","EffectiveDoseCalculationMethodCategoryCodeSequence"],"0004":["SQ","1","EffectiveDoseCalculationMethodCodeSequence"],"0005":["LO","1","EffectiveDoseCalculationMethodDescription"],"0006":["UI","1","ConceptualVolumeUID"],"0007":["SQ","1","OriginatingSOPInstanceReferenceSequence"],"0008":["SQ","1","ConceptualVolumeConstituentSequence"],"0009":["SQ","1","EquivalentConceptualVolumeInstanceReferenceSequence"],"000A":["SQ","1","EquivalentConceptualVolumesSequence"],"000B":["UI","1","ReferencedConceptualVolumeUID"],"000C":["UT","1","ConceptualVolumeCombinationExpression"],"000D":["US","1","ConceptualVolumeConstituentIndex"],"000E":["CS","1","ConceptualVolumeCombinationFlag"],"000F":["ST","1","ConceptualVolumeCombinationDescription"],"0010":["CS","1","ConceptualVolumeSegmentationDefinedFlag"],"0011":["SQ","1","ConceptualVolumeSegmentationReferenceSequence"],"0012":["SQ","1","ConceptualVolumeConstituentSegmentationReferenceSequence"],"0013":["UI","1","ConstituentConceptualVolumeUID"],"0014":["SQ","1","DerivationConceptualVolumeSequence"],"0015":["UI","1","SourceConceptualVolumeUID"],"0016":["SQ","1","ConceptualVolumeDerivationAlgorithmSequence"],"0017":["ST","1","ConceptualVolumeDescription"],"0018":["SQ","1","SourceConceptualVolumeSequence"],"0019":["SQ","1","AuthorIdentificationSequence"],"001A":["LO","1","ManufacturerModelVersion"],"001B":["UC","1","DeviceAlternateIdentifier"],"001C":["CS","1","DeviceAlternateIdentifierType"],"001D":["LT","1","DeviceAlternateIdentifierFormat"],"001E":["LO","1","SegmentationCreationTemplateLabel"],"001F":["UI","1","SegmentationTemplateUID"],"0020":["US","1","ReferencedSegmentReferenceIndex"],"0021":["SQ","1","SegmentReferenceSequence"],"0022":["US","1","SegmentReferenceIndex"],"0023":["SQ","1","DirectSegmentReferenceSequence"],"0024":["SQ","1","CombinationSegmentReferenceSequence"],"0025":["SQ","1","ConceptualVolumeSequence"],"0026":["SQ","1","SegmentedRTAccessoryDeviceSequence"],"0027":["SQ","1","SegmentCharacteristicsSequence"],"0028":["SQ","1","RelatedSegmentCharacteristicsSequence"],"0029":["US","1","SegmentCharacteristicsPrecedence"],"002A":["SQ","1","RTSegmentAnnotationSequence"],"002B":["SQ","1","SegmentAnnotationCategoryCodeSequence"],"002C":["SQ","1","SegmentAnnotationTypeCodeSequence"],"002D":["LO","1","DeviceLabel"],"002E":["SQ","1","DeviceTypeCodeSequence"],"002F":["SQ","1","SegmentAnnotationTypeModifierCodeSequence"],"0030":["SQ","1","PatientEquipmentRelationshipCodeSequence"],"0031":["UI","1","ReferencedFiducialsUID"],"0032":["SQ","1","PatientTreatmentOrientationSequence"],"0033":["SH","1","UserContentLabel"],"0034":["LO","1","UserContentLongLabel"],"0035":["SH","1","EntityLabel"],"0036":["LO","1","EntityName"],"0037":["ST","1","EntityDescription"],"0038":["LO","1","EntityLongLabel"],"0039":["US","1","DeviceIndex"],"003A":["US","1","RTTreatmentPhaseIndex"],"003B":["UI","1","RTTreatmentPhaseUID"],"003C":["US","1","RTPrescriptionIndex"],"003D":["US","1","RTSegmentAnnotationIndex"],"003E":["US","1","BasisRTTreatmentPhaseIndex"],"003F":["US","1","RelatedRTTreatmentPhaseIndex"],"0040":["US","1","ReferencedRTTreatmentPhaseIndex"],"0041":["US","1","ReferencedRTPrescriptionIndex"],"0042":["US","1","ReferencedParentRTPrescriptionIndex"],"0043":["ST","1","ManufacturerDeviceIdentifier"],"0044":["SQ","1","InstanceLevelReferencedPerformedProcedureStepSequence"],"0045":["CS","1","RTTreatmentPhaseIntentPresenceFlag"],"0046":["CS","1","RadiotherapyTreatmentType"],"0047":["CS","1-n","TeletherapyRadiationType"],"0048":["CS","1-n","BrachytherapySourceType"],"0049":["SQ","1","ReferencedRTTreatmentPhaseSequence"],"004A":["SQ","1","ReferencedDirectSegmentInstanceSequence"],"004B":["SQ","1","IntendedRTTreatmentPhaseSequence"],"004C":["DA","1","IntendedPhaseStartDate"],"004D":["DA","1","IntendedPhaseEndDate"],"004E":["SQ","1","RTTreatmentPhaseIntervalSequence"],"004F":["CS","1","TemporalRelationshipIntervalAnchor"],"0050":["FD","1","MinimumNumberOfIntervalDays"],"0051":["FD","1","MaximumNumberOfIntervalDays"],"0052":["UI","1-n","PertinentSOPClassesInStudy"],"0053":["UI","1-n","PertinentSOPClassesInSeries"],"0054":["LO","1","RTPrescriptionLabel"],"0055":["SQ","1","RTPhysicianIntentPredecessorSequence"],"0056":["LO","1","RTTreatmentApproachLabel"],"0057":["SQ","1","RTPhysicianIntentSequence"],"0058":["US","1","RTPhysicianIntentIndex"],"0059":["CS","1","RTTreatmentIntentType"],"005A":["UT","1","RTPhysicianIntentNarrative"],"005B":["SQ","1","RTProtocolCodeSequence"],"005C":["ST","1","ReasonForSuperseding"],"005D":["SQ","1","RTDiagnosisCodeSequence"],"005E":["US","1","ReferencedRTPhysicianIntentIndex"],"005F":["SQ","1","RTPhysicianIntentInputInstanceSequence"],"0060":["SQ","1","RTAnatomicPrescriptionSequence"],"0061":["UT","1","PriorTreatmentDoseDescription"],"0062":["SQ","1","PriorTreatmentReferenceSequence"],"0063":["CS","1","DosimetricObjectiveEvaluationScope"],"0064":["SQ","1","TherapeuticRoleCategoryCodeSequence"],"0065":["SQ","1","TherapeuticRoleTypeCodeSequence"],"0066":["US","1","ConceptualVolumeOptimizationPrecedence"],"0067":["SQ","1","ConceptualVolumeCategoryCodeSequence"],"0068":["CS","1","ConceptualVolumeBlockingConstraint"],"0069":["SQ","1","ConceptualVolumeTypeCodeSequence"],"006A":["SQ","1","ConceptualVolumeTypeModifierCodeSequence"],"006B":["SQ","1","RTPrescriptionSequence"],"006C":["SQ","1","DosimetricObjectiveSequence"],"006D":["SQ","1","DosimetricObjectiveTypeCodeSequence"],"006E":["UI","1","DosimetricObjectiveUID"],"006F":["UI","1","ReferencedDosimetricObjectiveUID"],"0070":["SQ","1","DosimetricObjectiveParameterSequence"],"0071":["SQ","1","ReferencedDosimetricObjectivesSequence"],"0073":["CS","1","AbsoluteDosimetricObjectiveFlag"],"0074":["FD","1","DosimetricObjectiveWeight"],"0075":["CS","1","DosimetricObjectivePurpose"],"0076":["SQ","1","PlanningInputInformationSequence"],"0077":["LO","1","TreatmentSite"],"0078":["SQ","1","TreatmentSiteCodeSequence"],"0079":["SQ","1","FractionPatternSequence"],"007A":["UT","1","TreatmentTechniqueNotes"],"007B":["UT","1","PrescriptionNotes"],"007C":["IS","1","NumberOfIntervalFractions"],"007D":["US","1","NumberOfFractions"],"007E":["US","1","IntendedDeliveryDuration"],"007F":["UT","1","FractionationNotes"],"0080":["SQ","1","RTTreatmentTechniqueCodeSequence"],"0081":["SQ","1","PrescriptionNotesSequence"],"0082":["SQ","1","FractionBasedRelationshipSequence"],"0083":["CS","1","FractionBasedRelationshipIntervalAnchor"],"0084":["FD","1","MinimumHoursBetweenFractions"],"0085":["TM","1-n","IntendedFractionStartTime"],"0086":["LT","1","IntendedStartDayOfWeek"],"0087":["SQ","1","WeekdayFractionPatternSequence"],"0088":["SQ","1","DeliveryTimeStructureCodeSequence"],"0089":["SQ","1","TreatmentSiteModifierCodeSequence"],"0090":["CS","1","RoboticBaseLocationIndicator"],"0091":["SQ","1","RoboticPathNodeSetCodeSequence"],"0092":["UL","1","RoboticNodeIdentifier"],"0093":["FD","3","RTTreatmentSourceCoordinates"],"0094":["FD","1","RadiationSourceCoordinateSystemYawAngle"],"0095":["FD","1","RadiationSourceCoordinateSystemRollAngle"],"0096":["FD","1","RadiationSourceCoordinateSystemPitchAngle"],"0097":["SQ","1","RoboticPathControlPointSequence"],"0098":["SQ","1","TomotherapeuticControlPointSequence"],"0099":["FD","1-n","TomotherapeuticLeafOpenDurations"],"009A":["FD","1-n","TomotherapeuticLeafInitialClosedDurations"]},4e3:{"0000":["UL","1","GenericGroupLength"],"0010":["LT","1","Arbitrary"],4e3:["LT","1","TextComments"]},4008:{"0000":["UL","1","GenericGroupLength"],"0040":["SH","1","ResultsID"],"0042":["LO","1","ResultsIDIssuer"],"0050":["SQ","1","ReferencedInterpretationSequence"],"00FF":["CS","1","ReportProductionStatusTrial"],"0100":["DA","1","InterpretationRecordedDate"],"0101":["TM","1","InterpretationRecordedTime"],"0102":["PN","1","InterpretationRecorder"],"0103":["LO","1","ReferenceToRecordedSound"],"0108":["DA","1","InterpretationTranscriptionDate"],"0109":["TM","1","InterpretationTranscriptionTime"],"010A":["PN","1","InterpretationTranscriber"],"010B":["ST","1","InterpretationText"],"010C":["PN","1","InterpretationAuthor"],"0111":["SQ","1","InterpretationApproverSequence"],"0112":["DA","1","InterpretationApprovalDate"],"0113":["TM","1","InterpretationApprovalTime"],"0114":["PN","1","PhysicianApprovingInterpretation"],"0115":["LT","1","InterpretationDiagnosisDescription"],"0117":["SQ","1","InterpretationDiagnosisCodeSequence"],"0118":["SQ","1","ResultsDistributionListSequence"],"0119":["PN","1","DistributionName"],"011A":["LO","1","DistributionAddress"],"0200":["SH","1","InterpretationID"],"0202":["LO","1","InterpretationIDIssuer"],"0210":["CS","1","InterpretationTypeID"],"0212":["CS","1","InterpretationStatusID"],"0300":["ST","1","Impressions"],4e3:["ST","1","ResultsComments"]},4010:{"0000":["UL","1","GenericGroupLength"],"0001":["CS","1","LowEnergyDetectors"],"0002":["CS","1","HighEnergyDetectors"],"0004":["SQ","1","DetectorGeometrySequence"],1001:["SQ","1","ThreatROIVoxelSequence"],1004:["FL","3","ThreatROIBase"],1005:["FL","3","ThreatROIExtents"],1006:["OB","1","ThreatROIBitmap"],1007:["SH","1","RouteSegmentID"],1008:["CS","1","GantryType"],1009:["CS","1","OOIOwnerType"],"100A":["SQ","1","RouteSegmentSequence"],1010:["US","1","PotentialThreatObjectID"],1011:["SQ","1","ThreatSequence"],1012:["CS","1","ThreatCategory"],1013:["LT","1","ThreatCategoryDescription"],1014:["CS","1","ATDAbilityAssessment"],1015:["CS","1","ATDAssessmentFlag"],1016:["FL","1","ATDAssessmentProbability"],1017:["FL","1","Mass"],1018:["FL","1","Density"],1019:["FL","1","ZEffective"],"101A":["SH","1","BoardingPassID"],"101B":["FL","3","CenterOfMass"],"101C":["FL","3","CenterOfPTO"],"101D":["FL","6-n","BoundingPolygon"],"101E":["SH","1","RouteSegmentStartLocationID"],"101F":["SH","1","RouteSegmentEndLocationID"],1020:["CS","1","RouteSegmentLocationIDType"],1021:["CS","1-n","AbortReason"],1023:["FL","1","VolumeOfPTO"],1024:["CS","1","AbortFlag"],1025:["DT","1","RouteSegmentStartTime"],1026:["DT","1","RouteSegmentEndTime"],1027:["CS","1","TDRType"],1028:["CS","1","InternationalRouteSegment"],1029:["LO","1-n","ThreatDetectionAlgorithmAndVersion"],"102A":["SH","1","AssignedLocation"],"102B":["DT","1","AlarmDecisionTime"],1031:["CS","1","AlarmDecision"],1033:["US","1","NumberOfTotalObjects"],1034:["US","1","NumberOfAlarmObjects"],1037:["SQ","1","PTORepresentationSequence"],1038:["SQ","1","ATDAssessmentSequence"],1039:["CS","1","TIPType"],"103A":["CS","1","DICOSVersion"],1041:["DT","1","OOIOwnerCreationTime"],1042:["CS","1","OOIType"],1043:["FL","3","OOISize"],1044:["CS","1","AcquisitionStatus"],1045:["SQ","1","BasisMaterialsCodeSequence"],1046:["CS","1","PhantomType"],1047:["SQ","1","OOIOwnerSequence"],1048:["CS","1","ScanType"],1051:["LO","1","ItineraryID"],1052:["SH","1","ItineraryIDType"],1053:["LO","1","ItineraryIDAssigningAuthority"],1054:["SH","1","RouteID"],1055:["SH","1","RouteIDAssigningAuthority"],1056:["CS","1","InboundArrivalType"],1058:["SH","1","CarrierID"],1059:["CS","1","CarrierIDAssigningAuthority"],1060:["FL","3","SourceOrientation"],1061:["FL","3","SourcePosition"],1062:["FL","1","BeltHeight"],1064:["SQ","1","AlgorithmRoutingCodeSequence"],1067:["CS","1","TransportClassification"],1068:["LT","1","OOITypeDescriptor"],1069:["FL","1","TotalProcessingTime"],"106C":["OB","1","DetectorCalibrationData"],"106D":["CS","1","AdditionalScreeningPerformed"],"106E":["CS","1","AdditionalInspectionSelectionCriteria"],"106F":["SQ","1","AdditionalInspectionMethodSequence"],1070:["CS","1","AITDeviceType"],1071:["SQ","1","QRMeasurementsSequence"],1072:["SQ","1","TargetMaterialSequence"],1073:["FD","1","SNRThreshold"],1075:["DS","1","ImageScaleRepresentation"],1076:["SQ","1","ReferencedPTOSequence"],1077:["SQ","1","ReferencedTDRInstanceSequence"],1078:["ST","1","PTOLocationDescription"],1079:["SQ","1","AnomalyLocatorIndicatorSequence"],"107A":["FL","3","AnomalyLocatorIndicator"],"107B":["SQ","1","PTORegionSequence"],"107C":["CS","1","InspectionSelectionCriteria"],"107D":["SQ","1","SecondaryInspectionMethodSequence"],"107E":["DS","6","PRCSToRCSOrientation"]},"4FFE":{"0000":["UL","1","GenericGroupLength"],"0001":["SQ","1","MACParametersSequence"]},5e3:{"0000":["UL","1","GenericGroupLength"],"0005":["US","1","CurveDimensions"],"0010":["US","1","NumberOfPoints"],"0020":["CS","1","TypeOfData"],"0022":["LO","1","CurveDescription"],"0030":["SH","1-n","AxisUnits"],"0040":["SH","1-n","AxisLabels"],"0103":["US","1","DataValueRepresentation"],"0104":["US","1-n","MinimumCoordinateValue"],"0105":["US","1-n","MaximumCoordinateValue"],"0106":["SH","1-n","CurveRange"],"0110":["US","1-n","CurveDataDescriptor"],"0112":["US","1-n","CoordinateStartValue"],"0114":["US","1-n","CoordinateStepValue"],1001:["CS","1","CurveActivationLayer"],2e3:["US","1","AudioType"],2002:["US","1","AudioSampleFormat"],2004:["US","1","NumberOfChannels"],2006:["UL","1","NumberOfSamples"],2008:["UL","1","SampleRate"],"200A":["UL","1","TotalTime"],"200C":["ox","1","AudioSampleData"],"200E":["LT","1","AudioComments"],2500:["LO","1","CurveLabel"],2600:["SQ","1","CurveReferencedOverlaySequence"],2610:["US","1","CurveReferencedOverlayGroup"],3e3:["ox","1","CurveData"]},5200:{"0000":["UL","1","GenericGroupLength"],9229:["SQ","1","SharedFunctionalGroupsSequence"],9230:["SQ","1","PerFrameFunctionalGroupsSequence"]},5400:{"0000":["UL","1","GenericGroupLength"],"0100":["SQ","1","WaveformSequence"],"0110":["ox","1","ChannelMinimumValue"],"0112":["ox","1","ChannelMaximumValue"],1004:["US","1","WaveformBitsAllocated"],1006:["CS","1","WaveformSampleInterpretation"],"100A":["ox","1","WaveformPaddingValue"],1010:["ox","1","WaveformData"]},5600:{"0000":["UL","1","GenericGroupLength"],"0010":["OF","1","FirstOrderPhaseCorrectionAngle"],"0020":["OF","1","SpectroscopyData"]},6e3:{"0000":["UL","1","GenericGroupLength"],"0010":["US","1","OverlayRows"],"0011":["US","1","OverlayColumns"],"0012":["US","1","OverlayPlanes"],"0015":["IS","1","NumberOfFramesInOverlay"],"0022":["LO","1","OverlayDescription"],"0040":["CS","1","OverlayType"],"0045":["LO","1","OverlaySubtype"],"0050":["SS","2","OverlayOrigin"],"0051":["US","1","ImageFrameOrigin"],"0052":["US","1","OverlayPlaneOrigin"],"0060":["CS","1","OverlayCompressionCode"],"0061":["SH","1","OverlayCompressionOriginator"],"0062":["SH","1","OverlayCompressionLabel"],"0063":["CS","1","OverlayCompressionDescription"],"0066":["AT","1-n","OverlayCompressionStepPointers"],"0068":["US","1","OverlayRepeatInterval"],"0069":["US","1","OverlayBitsGrouped"],"0100":["US","1","OverlayBitsAllocated"],"0102":["US","1","OverlayBitPosition"],"0110":["CS","1","OverlayFormat"],"0200":["US","1","OverlayLocation"],"0800":["CS","1-n","OverlayCodeLabel"],"0802":["US","1","OverlayNumberOfTables"],"0803":["AT","1-n","OverlayCodeTableLocation"],"0804":["US","1","OverlayBitsForCodeWord"],1001:["CS","1","OverlayActivationLayer"],1100:["US","1","OverlayDescriptorGray"],1101:["US","1","OverlayDescriptorRed"],1102:["US","1","OverlayDescriptorGreen"],1103:["US","1","OverlayDescriptorBlue"],1200:["US","1-n","OverlaysGray"],1201:["US","1-n","OverlaysRed"],1202:["US","1-n","OverlaysGreen"],1203:["US","1-n","OverlaysBlue"],1301:["IS","1","ROIArea"],1302:["DS","1","ROIMean"],1303:["DS","1","ROIStandardDeviation"],1500:["LO","1","OverlayLabel"],3e3:["ox","1","OverlayData"],4e3:["LT","1","OverlayComments"]},"7F00":{"0000":["UL","1","GenericGroupLength"],"0010":["ox","1","VariablePixelData"],"0011":["US","1","VariableNextDataGroup"],"0020":["OW","1","VariableCoefficientsSDVN"],"0030":["OW","1","VariableCoefficientsSDHN"],"0040":["OW","1","VariableCoefficientsSDDN"]},"7FE0":{"0000":["UL","1","GenericGroupLength"],"0001":["OV","1","ExtendedOffsetTable"],"0002":["OV","1","ExtendedOffsetTableLengths"],"0008":["OF","1","FloatPixelData"],"0009":["OD","1","DoubleFloatPixelData"],"0010":["ox","1","PixelData"],"0020":["OW","1","CoefficientsSDVN"],"0030":["OW","1","CoefficientsSDHN"],"0040":["OW","1","CoefficientsSDDN"]},FFFA:{"0000":["UL","1","GenericGroupLength"],FFFA:["SQ","1","DigitalSignaturesSequence"]},FFFC:{"0000":["UL","1","GenericGroupLength"],FFFC:["OB","1","DataSetTrailingPadding"]},FFFE:{"0000":["UL","1","GenericGroupLength"],E000:["NONE","1","Item"],E00D:["NONE","1","ItemDelimitationItem"],E0DD:["NONE","1","SequenceDelimitationItem"]}};function K(e,t){_[e]=t}const J={"0000":"Command","0002":"Meta Element","0004":"File Set","0008":"Identifying","0009":"SPI Identifying","0010":"Patient","0012":"Clinical Trial","0018":"Acquisition","0019":"SPI Acquisition","0020":"Image","0021":"SPI Image","0022":"Ophtalmology","0028":"Image Presentation","0032":"Study","0038":"Visit","003A":"Waveform","0040":"Procedure","0042":"Encapsulated Document","0050":"Device Informations","0054":"Nuclear Medicine","0060":"Histogram","0070":"Presentation State","0072":"Hanging Protocol","0088":"Storage","0100":"Authorization","0400":"Digital Signature",1e3:"Code Table",1010:"Zonal Map",2e3:"Film Session",2010:"Film Box",2020:"Image Box",2030:"Annotation",2040:"Overlay Box",2050:"Presentation LUT",2100:"Print Job",2110:"Printer",2120:"Queue",2130:"Print Content",2200:"Media Creation",3002:"RT Image",3004:"RT Dose",3006:"RT StructureSet",3008:"RT Treatment","300A":"RT Plan","300C":"RT Relationship","300E":"RT Approval",4e3:"Text",4008:"Results","4FFE":"MAC Parameters",5e3:"Curve",5002:"Curve",5004:"Curve",5006:"Curve",5008:"Curve","500A":"Curve","500C":"Curve","500E":"Curve",5400:"Waveform Data",6e3:"Overlays",6002:"Overlays",6004:"Overlays",6008:"Overlays","600A":"Overlays","600C":"Overlays","600E":"Overlays",FFFC:"Generic","7FE0":"Pixel Data",FFFF:"Unknown"},$={OB:!0,OD:!0,OF:!0,OL:!0,OV:!0,OW:!0,SQ:!0,SV:!0,UC:!0,UN:!0,UR:!0,UT:!0,UV:!0,ox:!0};function ee(e){return void 0!==$[e]}const te={SH:!0,LO:!0,UC:!0,ST:!0,LT:!0,UT:!0,PN:!0};function ne(e){return void 0!==te[e]}const ie={AE:"string",AS:"string",AT:void 0,CS:"string",DA:"string",DS:"string",DT:"string",FL:"Float32",FD:"Float64",IS:"string",LO:"string",LT:"string",OB:"Uint8",OD:"Uint64",OF:"Uint32",OL:"Uint32",OV:"Uint64",OW:"Uint16",PN:"string",SH:"string",SL:"Int32",SQ:void 0,SS:"Int16",ST:"string",SV:"Int64",TM:"string",UC:"string",UI:"string",UL:"Uint32",UN:"Uint8",UR:"string",US:"Uint16",UT:"string",UV:"Uint64"},re={"1.2.840.10008.1.2":"Implicit VR Little Endian","1.2.840.10008.1.2.1":"Explicit VR Little Endian","1.2.840.10008.1.2.1.98":"Encapsulated Uncompressed Explicit VR Little Endian","1.2.840.10008.1.2.1.99":"Deflated Explicit VR Little Endian","1.2.840.10008.1.2.2":"Explicit VR Big Endian (Retired)","1.2.840.10008.1.2.4.50":"JPEG Baseline (Process 1)","1.2.840.10008.1.2.4.51":"JPEG Extended (Process 2 & 4)","1.2.840.10008.1.2.4.52":"JPEG Extended (Process 3 & 5) (Retired)","1.2.840.10008.1.2.4.53":"JPEG Spectral Selection, Non-Hierarchical (Process 6 & 8) (Retired)","1.2.840.10008.1.2.4.54":"JPEG Spectral Selection, Non-Hierarchical (Process 7 & 9) (Retired)","1.2.840.10008.1.2.4.55":"JPEG Full Progression, Non-Hierarchical (Process 10 & 12) (Retired)","1.2.840.10008.1.2.4.56":"JPEG Full Progression, Non-Hierarchical (Process 11 & 13) (Retired)","1.2.840.10008.1.2.4.57":"JPEG Lossless, Non-Hierarchical (Process 14)","1.2.840.10008.1.2.4.58":"JPEG Lossless, Non-Hierarchical (Process 15) (Retired)","1.2.840.10008.1.2.4.59":"JPEG Extended, Hierarchical (Process 16 & 18) (Retired)","1.2.840.10008.1.2.4.60":"JPEG Extended, Hierarchical (Process 17 & 19) (Retired)","1.2.840.10008.1.2.4.61":"JPEG Spectral Selection, Hierarchical (Process 20 & 22) (Retired)","1.2.840.10008.1.2.4.62":"JPEG Spectral Selection, Hierarchical (Process 21 & 23) (Retired)","1.2.840.10008.1.2.4.63":"JPEG Full Progression, Hierarchical (Process 24 & 26) (Retired)","1.2.840.10008.1.2.4.64":"JPEG Full Progression, Hierarchical (Process 25 & 27) (Retired)","1.2.840.10008.1.2.4.65":"JPEG Lossless, Hierarchical (Process 28) (Retired)","1.2.840.10008.1.2.4.66":"JPEG Lossless, Hierarchical (Process 29) (Retired)","1.2.840.10008.1.2.4.70":"JPEG Lossless, Non-Hierarchical, First-Order Prediction (Process 14 [Selection Value 1])","1.2.840.10008.1.2.4.80":"JPEG-LS Lossless Image Compression","1.2.840.10008.1.2.4.81":"JPEG-LS Lossy (Near-Lossless) Image Compression","1.2.840.10008.1.2.4.90":"JPEG 2000 Image Compression (Lossless Only)","1.2.840.10008.1.2.4.91":"JPEG 2000 Image Compression","1.2.840.10008.1.2.4.92":"JPEG 2000 Part 2 Multi-component Image Compression (Lossless Only)","1.2.840.10008.1.2.4.93":"JPEG 2000 Part 2 Multi-component Image Compression","1.2.840.10008.1.2.4.94":"JPIP Referenced","1.2.840.10008.1.2.4.95":"JPIP Referenced Deflate","1.2.840.10008.1.2.4.100":"MPEG2 Main Profile / Main Level","1.2.840.10008.1.2.4.101":"MPEG2 Main Profile / High Level","1.2.840.10008.1.2.4.102":"MPEG-4 AVC/H.264 High Profile / Level 4.1","1.2.840.10008.1.2.4.103":"MPEG-4 AVC/H.264 BD-compatible High Profile / Level 4.1","1.2.840.10008.1.2.4.104":"MPEG-4 AVC/H.264 High Profile / Level 4.2 For 2D Video","1.2.840.10008.1.2.4.105":"MPEG-4 AVC/H.264 High Profile / Level 4.2 For 3D Video","1.2.840.10008.1.2.4.106":"MPEG-4 AVC/H.264 Stereo High Profile / Level 4.2","1.2.840.10008.1.2.4.107":"HEVC/H.265 Main Profile / Level 5.1","1.2.840.10008.1.2.4.108":"HEVC/H.265 Main 10 Profile / Level 5.1","1.2.840.10008.1.2.5":"RLE Lossless","1.2.840.10008.1.2.6.1":"RFC 2557 MIME encapsulation (Retired)","1.2.840.10008.1.2.6.2":"XML Encoding (Retired)","1.2.840.10008.1.2.7.1":"SMPTE ST 2110-20 Uncompressed Progressive Active Video","1.2.840.10008.1.2.7.2":"SMPTE ST 2110-20 Uncompressed Interlaced Active Video","1.2.840.10008.1.2.7.3":"SMPTE ST 2110-30 PCM Digital Audio","1.2.840.10008.1.20":"Papyrus 3 Implicit VR Little Endian (Retired)"},oe="1.2.840.10008.1.2",ae="1.2.840.10008.1.2.1",se="1.2.840.10008.1.2.2";class le{vr;value;tag;vl;undefinedLength;startOffset;endOffset;items;constructor(e){this.vr=e}}function ce(e){return void 0!==e&&void 0!==e.value&&0!==e.value.length}function ue(e,t){let n;return ce(e[t])&&(n=e[t].value[0]),n}function de(e,t){let n;return ce(e[t])&&(n=e[t].value),n}function he(e,t,n){let i="";if(void 0===e)i+=" "+t+" is undefined,";else if(void 0===e.value)i+=" "+t+" has undefined value,";else if(0===e.value.length)i+=" "+t+" is empty,";else if(void 0!==n)for(let r=0;r<n.length;++r)e.value.includes(n[r])||(i+=" "+t+" does not contain "+n[r]+" (value: "+e.value+"),");return i}class ge{#P;#L;constructor(e,t){if(!e||void 0===e)throw new Error("Cannot create tag with no group.");if(4!==e.length)throw new Error("Cannot create tag with badly sized group: "+e);if(!t||void 0===t)throw new Error("Cannot create tag with no element.");if(4!==t.length)throw new Error("Cannot create tag with badly sized element: "+t);this.#P=e,this.#L=t}getGroup(){return this.#P}getElement(){return this.#L}toString(){return this.getKey()+": "+this.getNameFromDictionary()}equals(e){return null!=e&&this.#P===e.getGroup()&&this.#L===e.getElement()}getKey(){return this.#P+this.#L}getGroupName(){return J[this.#P]}isWithVR(){return!("FFFE"===this.#P&&("E000"===this.#L||"E00D"===this.#L||"E0DD"===this.#L))}isPrivate(){return parseInt(this.#P,16)%2==1}#w(){let e;return void 0!==_[this.#P]&&void 0!==_[this.#P][this.#L]&&(e=_[this.#P][this.#L]),e}getVrFromDictionary(){let e;const t=this.#w();return void 0!==t&&(e=t[0]),e}getMultiplicityFromDictionary(){let e;const t=this.#w();return void 0!==t&&(e=parseInt(t[1],10)),e}getNameFromDictionary(){let e;const t=this.#w();return void 0!==t&&(e=t[2]),e}}function Se(e,t){let n=parseInt(e.getGroup(),16)-parseInt(t.getGroup(),16);return 0===n&&(n=parseInt(e.getElement(),16)-parseInt(t.getElement(),16)),n}function me(e){if(!e||void 0===e)throw new Error("Cannot create tag with no key.");if(8!==e.length)throw new Error("Cannot create tag with badly sized key: "+e);return new ge(e.substring(0,4),e.substring(4,8))}function pe(){return new ge("FFFE","E000")}function fe(e){return"FFFEE000"===e.getKey()}function De(e){return"FFFEE00D"===e.getKey()}function ye(e){return"FFFEE0DD"===e.getKey()}function ve(){return new ge("7FE0","0010")}function Ce(e){return"7FE00010"===e.getKey()}function Ie(e){if(null==e)return null;let t=null,n=null;const i=_,r=Object.keys(i);let o,a=null,s=!1;for(let o=0,l=r.length;o<l;++o){t=r[o],a=Object.keys(i[t]);for(let r=0,o=a.length;r<o;++r)if(n=a[r],i[t][n][2]===e){s=!0;break}if(s)break}return s&&(o=new ge(t,n)),o}function Te(e){return function(t,n){const i=me(n);let r=i.getNameFromDictionary();void 0===r&&(r="x"+i.getKey());const o=e[n];for(const e in o)void 0===o[e]&&delete o[e];let a;if("SQ"===o.vr){a={value:[]};for(let e=0;e<o.value.length;++e){const t=o.value[e];a.value.push(Object.keys(t).reduce(Te(t),{}))}}else a=1===o.value.length?o.value[0]:o.value;return t[r]=a,t}}function Pe(e){const t=structuredClone(e);return Object.keys(t).reduce(Te(t),{})}function Le(e){const t=e.byteLength,n=new Uint8Array(e.buffer,e.byteOffset,t),i=e.BYTES_PER_ELEMENT;let r;for(let e=0;e<t;e+=i)for(let t=e+i-1,o=e;t>o;t--,o++)r=n[o],n[o]=n[t],n[t]=r}class we{#O;#b=!0;#A=function(){return new Int8Array(new Int16Array([1]).buffer)[0]>0}();#x;#R;constructor(e,t){this.#O=e,void 0!==t&&(this.#b=t),this.#x=this.#b!==this.#A,this.#R=new DataView(e)}readUint16(e){return this.#R.getUint16(e,this.#b)}readInt16(e){return this.#R.getInt16(e,this.#b)}readUint32(e){return this.#R.getUint32(e,this.#b)}readBigUint64(e){return this.#R.getBigUint64(e,this.#b)}readInt32(e){return this.#R.getInt32(e,this.#b)}readBigInt64(e){return this.#R.getBigInt64(e,this.#b)}readFloat32(e){return this.#R.getFloat32(e,this.#b)}readFloat64(e){return this.#R.getFloat64(e,this.#b)}readBinaryArray(e,t){const n=new Uint8Array(this.#O,e,t),i=8*n.length,r=new Uint8Array(i);let o=0,a=0;for(let e=0;e<i;++e)o=e%8,a=Math.floor(e/8),r[e]=255*!!(n[a]&1<<o);return r}readUint8Array(e,t){return new Uint8Array(this.#O,e,t)}readInt8Array(e,t){return new Int8Array(this.#O,e,t)}readUint16Array(e,t){const n=Uint16Array.BYTES_PER_ELEMENT,i=t/n;let r=null;if(e%n==0)r=new Uint16Array(this.#O,e,i),this.#x&&Le(r);else{r=new Uint16Array(i);let t=e;for(let e=0;e<i;++e)r[e]=this.readUint16(t),t+=n}return r}readInt16Array(e,t){const n=Int16Array.BYTES_PER_ELEMENT,i=t/n;let r=null;if(e%n==0)r=new Int16Array(this.#O,e,i),this.#x&&Le(r);else{r=new Int16Array(i);let t=e;for(let e=0;e<i;++e)r[e]=this.readInt16(t),t+=n}return r}readUint32Array(e,t){const n=Uint32Array.BYTES_PER_ELEMENT,i=t/n;let r=null;if(e%n==0)r=new Uint32Array(this.#O,e,i),this.#x&&Le(r);else{r=new Uint32Array(i);let t=e;for(let e=0;e<i;++e)r[e]=this.readUint32(t),t+=n}return r}readUint64Array(e,t){const n=BigUint64Array.BYTES_PER_ELEMENT,i=t/n;let r=null;if(e%n==0)r=new BigUint64Array(this.#O,e,i),this.#x&&Le(r);else{r=new BigUint64Array(i);let t=e;for(let e=0;e<i;++e)r[e]=this.readBigUint64(t),t+=n}return r}readInt32Array(e,t){const n=Int32Array.BYTES_PER_ELEMENT,i=t/n;let r=null;if(e%n==0)r=new Int32Array(this.#O,e,i),this.#x&&Le(r);else{r=new Int32Array(i);let t=e;for(let e=0;e<i;++e)r[e]=this.readInt32(t),t+=n}return r}readInt64Array(e,t){const n=BigInt64Array.BYTES_PER_ELEMENT,i=t/n;let r=null;if(e%n==0)r=new BigInt64Array(this.#O,e,i),this.#x&&Le(r);else{r=new BigInt64Array(i);let t=e;for(let e=0;e<i;++e)r[e]=this.readBigInt64(t),t+=n}return r}readFloat32Array(e,t){const n=Float32Array.BYTES_PER_ELEMENT,i=t/n;let r=null;if(e%n==0)r=new Float32Array(this.#O,e,i),this.#x&&Le(r);else{r=new Float32Array(i);let t=e;for(let e=0;e<i;++e)r[e]=this.readFloat32(t),t+=n}return r}readFloat64Array(e,t){const n=Float64Array.BYTES_PER_ELEMENT,i=t/n;let r=null;if(e%n==0)r=new Float64Array(this.#O,e,i),this.#x&&Le(r);else{r=new Float64Array(i);let t=e;for(let e=0;e<i;++e)r[e]=this.readFloat64(t),t+=n}return r}readHex(e){const t=this.readUint16(e).toString(16);return"0000".substring(0,4-t.length)+t.toUpperCase()}}function Oe(){return"0.35.0-beta.22"}function be(e){const t=e.split("-");let n=[];for(const e of t)n=n.concat(e.split("."));return n}function Ae(e,t){let n=0;const i=be(e),r=be(t);for(let e=0;e<3&&(n=parseInt(i[e],10)-parseInt(r[e],10),0===n);++e);if(0===n){const e=4,t=i[e],o=r[e];n=void 0===t&&void 0===o?0:void 0===t&&void 0!==o?1:void 0!==t&&void 0===o?-1:parseInt(t,10)-parseInt(o,10)}return n}function xe(e){return!(e.byteLength<132)&&"DICM"===new Uint8Array(e,128,4).reduce((function(e,t){return e+String.fromCharCode(t)}),"")}const Re=String.fromCharCode("u200B");class Ee{decode(e){let t="";for(let n=0,i=e.length;n<i;++n)t+=String.fromCharCode(e[n]);return t}}function Fe(e){if(!e)return null;const t={L:"R",R:"L",A:"P",P:"A",H:"F",F:"H"};let n="";for(let i=0;i<e.length;i++){const r=t[e.substring(i,i+1)];r&&(n+=r)}return n}function qe(e){return e===oe}function Ue(e){return e===se}function Me(e){return"1.2.840.10008.1.2.4.50"===e||"1.2.840.10008.1.2.4.51"===e}function Qe(e){return"1.2.840.10008.1.2.4.57"===e||"1.2.840.10008.1.2.4.70"===e}function Ve(e){return null!==e.match(/1.2.840.10008.1.2.4.9/)}function Ne(e){return"1.2.840.10008.1.2.5"===e}function Be(e,t,n){let i=null;try{1===e||8===e?i=0===t?new Uint8Array(n):new Int8Array(n):16===e?i=0===t?new Uint16Array(n):new Int16Array(n):32===e&&(i=0===t?new Uint32Array(n):new Int32Array(n))}catch(e){if(e instanceof RangeError){const e=Math.floor(Math.log(n)/Math.log(2));c.error("Cannot allocate array of size: "+n+" (>2^"+e+").")}}return i}function Ge(e,t){return t?8:ee(e)?12:8}const ke="00280008",He="00280100",ze="00280103",We="7FE00010";class Ye{#E={};#F;#q=new Ee;#U=this.#q;#M(e){return this.#q.decode(e)}#Q(e){return this.#U.decode(e)}getDefaultCharacterSet(){return this.#F}setDefaultCharacterSet(e){this.#F=e}setDecoderCharacterSet(e){this.#U=new TextDecoder(e)}getDicomElements(){return this.#E}safeGet(e){return ue(this.#E,e)}#V(e,t){const n=e.readHex(t);t+=Uint16Array.BYTES_PER_ELEMENT;const i=e.readHex(t);return t+=Uint16Array.BYTES_PER_ELEMENT,{tag:new ge(n,i),endOffset:t}}#N(e,t,n){const i={};let r=this.#B(e,t,n);if(t=r.endOffset,ye(r.tag))return{data:i,endOffset:r.endOffset,isSeqDelim:!0};if(i[r.tag.getKey()]={tag:r.tag,vr:"NONE",vl:r.vl,undefinedLength:r.undefinedLength},r.undefinedLength){let o=!1;for(;!o;)r=this.#B(e,t,n),t=r.endOffset,o=De(r.tag),o||(i[r.tag.getKey()]=r)}else{const o=t;for(t-=r.vl;t<o;)r=this.#B(e,t,n),t=r.endOffset,i[r.tag.getKey()]=r}return{data:i,endOffset:t,isSeqDelim:!1}}#G(e,t,n){const i=[];let r=this.#B(e,t,n);const o=r.vl;t=r.endOffset;let a=!1;for(;!a;)r=this.#B(e,t,n),t=r.endOffset,a=ye(r.tag),a||(r.vr="OB",i.push(r));return{data:i,endOffset:t,offsetTableVl:o}}#B(e,t,n,i){const r=this.#V(e,t),o=r.tag;if(void 0!==i&&o.equals(i)){const e=new le("");return e.tag=o,e}t=r.endOffset;let a=null,s=!1;o.isWithVR()?n?(a=o.getVrFromDictionary(),void 0===a&&(a="UN"),s=!0):(a=this.#M(e.readUint8Array(t,2)),t+=2*Uint8Array.BYTES_PER_ELEMENT,s=ee(a),s&&(t+=2*Uint8Array.BYTES_PER_ELEMENT)):(a="NONE",s=!0),function(e){return Object.keys(ie).concat(["NONE","ox","xx","xs"]).includes(e)}(a)||(c.warn("Unknown VR: "+a+" (for tag "+o.getKey()+"), treating as 'UN'"),a="UN");let l=0;s?(l=e.readUint32(t),t+=Uint32Array.BYTES_PER_ELEMENT):(l=e.readUint16(t),t+=Uint16Array.BYTES_PER_ELEMENT);let u=!1;4294967295===l&&(u=!0,l=0),o.isPrivate()&&"UN"===a&&0===l&&(a="SQ");let d,h=t,g=h+l;if(Ce(o)&&u){const i=this.#G(e,t,n);t=i.endOffset,h+=i.offsetTableVl,d=i.data,g=t,l=t-h}else if("SQ"===a){let i;if(d=[],u){let r=!1;for(;!r;)i=this.#N(e,t,n),r=i.isSeqDelim,t=i.endOffset,r||d.push(i.data);g=t,l=t-h}else if(0!==l){const r=t+l;for(;t<r;)i=this.#N(e,t,n),d.push(i.data),t=i.endOffset;g=t,l=t-h}}const S=new le(a);return S.tag=o,S.vl=l,S.startOffset=h,S.endOffset=g,u&&(S.undefinedLength=u),d&&(S.items=d),S}#k(e,t,n,i){const r=e.tag,o=e.vl,a=e.vr,s=e.startOffset;let l=null;const u=ie[a];if(Ce(r))if(e.undefinedLength){l=[];for(let r=0;r<e.items.length;++r)l.push(this.#k(e.items[r],t,n,i));delete e.items}else if(i>8&&"OB"===a&&(c.warn("Reading DICOM pixel data with bitsAllocated>8 and OB VR, treating as OW"),e.vr="OW"),l=[],1===i)l.push(t.readBinaryArray(s,o));else if(8===i)0===n?l.push(t.readUint8Array(s,o)):l.push(t.readInt8Array(s,o));else{if(16!==i)throw new Error("Unsupported bits allocated: "+i);0===n?l.push(t.readUint16Array(s,o)):l.push(t.readInt16Array(s,o))}else if(void 0!==u)if("Uint8"===u)l=t.readUint8Array(s,o);else if("Uint16"===u)l=t.readUint16Array(s,o),"O"!==a[0]&&(l=Array.from(l));else if("Uint32"===u)l=t.readUint32Array(s,o),"O"!==a[0]&&(l=Array.from(l));else if("Uint64"===u)l=t.readUint64Array(s,o);else if("Int16"===u)l=Array.from(t.readInt16Array(s,o));else if("Int32"===u)l=Array.from(t.readInt32Array(s,o));else if("Int64"===u)l=t.readInt64Array(s,o);else if("Float32"===u)l=Array.from(t.readFloat32Array(s,o));else if("Float64"===u)l=Array.from(t.readFloat64Array(s,o));else{if("string"!==u)throw new Error("Unknown VR type: "+u);{const e=t.readUint8Array(s,o);l=ne(a)?this.#Q(e):this.#M(e),l=function(e){let t=e;const n=e.length-1;return e[n]===Re&&(t=e.substring(0,n)),t=t.trim(),t}(l).split("\\")}}else if("xx"===a)l=Array.from(t.readUint16Array(s,o));else if("ox"===a)l=8===i?0===n?Array.from(t.readUint8Array(s,o)):Array.from(t.readInt8Array(s,o)):0===n?Array.from(t.readUint16Array(s,o)):Array.from(t.readInt16Array(s,o));else if("xs"===a)l=0===n?Array.from(t.readUint16Array(s,o)):Array.from(t.readInt16Array(s,o));else if("AT"===a){const e=t.readUint16Array(s,o);l=[];for(let t=0,n=e.length;t<n;t+=2){const n=e[t].toString(16),i=e[t+1].toString(16);let r="(";r+="0000".substring(0,4-n.length)+n.toUpperCase(),r+=",",r+="0000".substring(0,4-i.length)+i.toUpperCase(),r+=")",l.push(r)}}else if("SQ"===a){l=[];for(let r=0;r<e.items.length;++r){const o=e.items[r],a={},s=Object.keys(o);let c=i,u=n;for(let e=0;e<s.length;++e){let n=o[He];void 0!==n&&void 0!==n.value&&(c=n.value[0]),n=o[ze],void 0!==n&&void 0!==n.value&&(u=n.value[0]);const i=o[s[e]];i.value=this.#k(i,t,u,c),delete i.tag,delete i.vl,delete i.startOffset,delete i.endOffset,a[s[e]]=i}l.push(a)}delete e.items}else"NONE"===a||c.warn("Unknown VR: "+a+" (for tag "+e.tag.getKey()+")"),l=[];return l}#H(e,t,n,i){const r=Object.keys(e);for(let o=0;o<r.length;++o){const a=e[r[o]];void 0===a.value&&(a.value=this.#k(a,t,n,i)),delete a.tag,delete a.vl,delete a.startOffset,delete a.endOffset}}parse(e,t){let n=0,i="",r=null;const o=new we(e);let a=new we(e);n=128;const s=this.#M(o.readUint8Array(n,4));if(n+=4*Uint8Array.BYTES_PER_ELEMENT,"DICM"===s){r=this.#B(o,n,!1),r.value=this.#k(r,o),n=r.endOffset,this.#E[r.tag.getKey()]=r;const e=n+r.value[0];for(;n<e;)r=this.#B(o,n,!1),n=r.endOffset,this.#E[r.tag.getKey()]=r;if(r=this.#E["00020010"],void 0===r)throw new Error("Not a valid DICOM file (no TransferSyntaxUID found)");r.value=this.#k(r,o),i=r.value[0]}else{c.warn("No DICM prefix, trying to guess tansfer syntax."),r=this.#B(a,0,!1);const e=function(e){const t="0008",n=e.tag.getGroup();if("0800"!==n&&n!==t)throw new Error("Not a valid DICOM file (no magic DICM word found and first element not in 0008 group)");const i=e.vr,r=i.charCodeAt(0),o=i.charCodeAt(1),a=!(r>=65&&r<=90&&o>=65&&o<=90);let s=null;if(n===t)s=a?oe:ae;else{if(a)throw new Error("Not a valid DICOM file (no magic DICM word foundand implicit VR big endian detected)");s=se}const l=new le("UI");return l.tag=new ge("0002","0010"),l.value=[s],l.vl=l.value[0].length,l.startOffset=e.startOffset,l.endOffset=l.startOffset+l.vl,l}(r);this.#E[e.tag.getKey()]=e,i=e.value[0],n=0}if(!function(e){return e===oe||e===ae||e===se||Me(e)||Qe(e)||Ve(e)||Ne(e)}(i))throw new Error("Unsupported DICOM transfer syntax: '"+i+"' ("+function(e){let t="Unknown";return void 0!==re[e]&&(t=re[e]),t}(i)+")");let l=!1;qe(i)&&(l=!0),Ue(i)&&(a=new we(e,!1));let u=!1;for(;n<e.byteLength;){if(r=this.#B(a,n,l,t),void 0!==t&&r.tag.equals(t)){u=!0;break}n=r.endOffset;const e=r.tag.getKey();void 0===this.#E[e]?this.#E[e]=r:c.warn("Not saving duplicate tag: "+e)}if(isNaN(n))throw new Error("Problem while parsing, bad offset");u||e.byteLength===n||c.warn("Did not reach the end of the buffer: "+n+" != "+e.byteLength);let d=0,h=16;if(void 0!==this.#E[We]&&(r=this.#E[ze],void 0!==r?(r.value=this.#k(r,a),d=r.value[0]):c.warn("Reading DICOM pixel data with default pixelRepresentation."),r=this.#E[He],void 0!==r?(r.value=this.#k(r,a),h=r.value[0]):c.warn("Reading DICOM pixel data with default bitsAllocated.")),void 0!==this.#F&&this.setDecoderCharacterSet(this.#F),r=this.#E["00080005"],void 0!==r){let e;r.value=this.#k(r,a),1===r.value.length?e=r.value[0]:(e=r.value[1],c.warn("Unsupported character set with code extensions: '"+e+"'.")),this.setDecoderCharacterSet(function(e){let t="utf-8";return"ISO_IR 100"===e?t="iso-8859-1":"ISO_IR 101"===e?t="iso-8859-2":"ISO_IR 109"===e?t="iso-8859-3":"ISO_IR 110"===e?t="iso-8859-4":"ISO_IR 144"===e?t="iso-8859-5":"ISO_IR 127"===e?t="iso-8859-6":"ISO_IR 126"===e?t="iso-8859-7":"ISO_IR 138"===e?t="iso-8859-8":"ISO_IR 148"===e?t="iso-8859-9":"ISO_IR 13"===e?t="shift-jis":"ISO_IR 166"===e?t="iso-8859-11":"ISO 2022 IR 87"===e?t="iso-2022-jp":"ISO 2022 IR 149"===e||"ISO 2022 IR 58"===e||("ISO_IR 192"===e?t="utf-8":"GB18030"===e?t="gb18030":"GB2312"===e?t="gb2312":"GBK"===e&&(t="chinese")),t}(e))}if(this.#H(this.#E,a,d,h),r=this.#E[We],void 0!==r&&r.undefinedLength){let e=1;void 0!==this.#E[ke]&&(e=Number(this.#E[ke].value[0]));const t=r.value;if(t.length>1&&t.length>e){const n=t.length/e,i=[];let o=0;for(let r=0;r<e;++r){o=r*n;let e=0;for(let i=0;i<n;++i)e+=t[o+i].length;const a=new t[0].constructor(e);let s=0;for(let e=0;e<n;++e)a.set(t[o+e],s),s+=t[o+e].length;i[r]=a}r.value=i}}}}class Xe{#z={};add(e,t){void 0===this.#z[e]&&(this.#z[e]=[]),this.#z[e].push(t)}remove(e,t){if(void 0===this.#z[e])return;let n=0;for(let i=0;i<this.#z[e].length;++i)this.#z[e][i]===t&&(++n,this.#z[e].splice(i,1));0===n&&c.debug("No callback found on remove listener for type "+e)}fireEvent=e=>{if(void 0===this.#z[e.type])return;const t=this.#z[e.type].slice();for(let n=0;n<t.length;++n)t[n](e)}}function je(e,t,n,i,r,o,a,s){void 0===a&&(a=!1),void 0===s&&(s=!1);let l=t;a?(o*=-1,s?l-=(r-1)*i:i*=-1):s&&(l+=(r-1)*i,i*=-1);const c=o-r*i;let u=0,d=0;return{next:function(){if(u<n){const t={value:e(l),done:!1,index:l};return l+=i,++u,++d,d===r&&(d=0,l+=c),t}return{done:!0,index:l}}}}function Ze(e){const t=[];let n=e.next();for(;!n.done;)t.push(n.value),n=e.next();return t}function _e(e,t,n,i){const r=e.getGeometry().getSize();let o=2;i&&void 0!==i&&(o=i.getColAbsMax(2).index);const a=t.getValues(),l=new s(a.map((function(e,t){return t===o||t>2?e:0})));let c=r.indexToOffset(l);void 0===n&&(n=!1);let u=null;u=n?function(t){return e.getRescaledValueAtOffset(t)}:function(t){return e.getValueAtOffset(t)};const d=r.get(0),h=r.get(1),g=r.get(2);let S=r.getDimSize(2);const m=e.getNumberOfComponents(),p=1===e.getPlanarConfiguration(),f=function(e,t,n,i,r,o,a,s){return 1===m?je(e,t,n,i,r,o,a,s):3===m?function(e,t,n,i,r,o,a,s,l){const c=[];return l?(c.push(je(e,t,n,i,r,o,a,s)),c.push(je(e,t+n*i,n,i,r,o,a,s)),c.push(je(e,t+2*n*i,n,i,r,o,a,s))):(i*=3,o*=3,c.push(je(e,t,n,i,r,o,a,s)),c.push(je(e,t+1,n,i,r,o,a,s)),c.push(je(e,t+2,n,i,r,o,a,s))),{next:function(){const e=c[0].next(),t=c[1].next(),n=c[2].next();return e.done?{done:!0,index:n.index}:{value:[e.value,t.value,n.value],done:!1,index:[e.index,t.index,n.index]}}}}(e,3*t,n,i,r,o,a,s,p):void 0};let D=null;if(i&&void 0!==i){const e=i.getColAbsMax(0),t=i.getColAbsMax(2),n=!1,r=!1;let o=null;if(2===t.index)o=d*h,D=0===e.index?f(u,c,o,1,d,d,n,r):f(u,c,o,d,h,1,n,r);else if(0===t.index)o=g*h,D=1===e.index?f(u,c,o,d,h,S,n,r):f(u,c,o,S,g,d,n,r);else{if(1!==t.index)throw new Error("Unknown direction: "+t.index);o=g*d,D=0===e.index?f(u,c,o,1,d,S,n,r):f(u,c,o,S,g,1,n,r)}}else if(1===e.getNumberOfComponents())D=function(e,t,n,i){void 0===i&&(i=1);let r=t;return{next:function(){if(r<n){const t={value:e(r),done:!1,index:r};return r+=i,t}return{done:!0,index:n}}}}(u,c,c+S);else{if(3!==e.getNumberOfComponents())throw new Error("Unsupported number of components: "+e.getNumberOfComponents());c*=3,S*=3,D=function(e,t,n,i,r){void 0===i&&(i=1),void 0===r&&(r=!1);let o=t,a=1;r?a=(n-t)/3:i*=3;let s=o+a,l=o+2*a;return{next:function(){if(o<n){const t={value:[e(o),e(s),e(l)],done:!1,index:[o,s,l]};return o+=i,s+=i,l+=i,t}return{done:!0,index:[n]}}}}(u,c,c+S,1,p)}return D}function Ke(e,t){let n=0,i=0;return{next:function(){if(n<t){i+1<e.length&&n>=e[i+1].index&&++i;const t={value:e[i].value,done:!1,index:n};return++n,t}return{done:!0,index:t}}}}class Je{#h;#W;constructor(e,t){this.#h=e,this.#W=t}getSlope(){return this.#h}getIntercept(){return this.#W}apply(e){return e*this.#h+this.#W}equals(e){return null!=e&&this.getSlope()===e.getSlope()&&this.getIntercept()===e.getIntercept()}isID(){return 1===this.getSlope()&&0===this.getIntercept()}}class $e{#e;constructor(e){if(!e||void 0===e)throw new Error("Cannot create size with no values.");if(0===e.length)throw new Error("Cannot create size with empty values.");if(!e.every((function(e){return!isNaN(e)&&0!==e})))throw new Error("Cannot create size with non number or zero values.");this.#e=e}get(e){return this.#e[e]}length(){return this.#e.length}toString(){return"("+this.#e.toString()+")"}getValues(){return this.#e.slice()}moreThanOne(e){return this.length()>=e+1&&1!==this.get(e)}canScroll3D(e){let t=2;return void 0!==e&&(t=e.getThirdColMajorDirection()),this.moreThanOne(t)}canScroll(e){let t=this.canScroll3D(e);for(let e=3;e<this.length();++e)t=t||this.moreThanOne(e);return t}getDimSize(e,t){if(e>this.length())return null;if(void 0===t)t=0;else if(t<0||t>e)throw new Error("Invalid start value for getDimSize");let n=1;for(let i=t;i<e;++i)n*=this.get(i);return n}getTotalSize(e){return this.getDimSize(this.length(),e)}equals(e){if(!e)return!1;const t=this.length();if(t!==e.length())return!1;for(let n=0;n<t;++n)if(this.get(n)!==e.get(n))return!1;return!0}isInBounds(e,t){if(!e)return!1;const n=this.length();if(n!==e.length())return!1;if(void 0===t){t=[];for(let e=0;e<n;++e)t.push(e)}else for(let e=0;e<n;++e)if(t[e]>n-1)throw new Error("Wrong input dir value: "+t[e]);for(let n=0;n<t.length;++n)if(i=e.get(t[n]),r=this.get(t[n]),!(i>=0&&i<r))return!1;var i,r;return!0}indexToOffset(e,t){if(e.length()<this.length())throw new Error("Incompatible index and size length");if(void 0===t)t=0;else if(t<0||t>this.length()-1)throw new Error("Invalid start value for indexToOffset");let n=0;for(let i=t;i<this.length();++i){const r=this.get(i),o=e.get(i);if(o>=r||o<0)return-1;n+=o*this.getDimSize(i,t)}return n}offsetToIndex(e){const t=new Array(this.length());let n=e,i=0;for(let e=this.length()-1;e>0;--e)i=this.getDimSize(e),t[e]=Math.floor(n/i),n-=t[e]*i;return t[0]=n,new s(t)}get2D(){return{x:this.get(0),y:this.get(1)}}}class et{min;max;mean;stdDev;median;p25;p75;constructor(e,t,n,i){this.min=e,this.max=t,this.mean=n,this.stdDev=i}}function tt(e,t){return function(e){return null!=e&&(e.includes("median")||e.includes("p25")||e.includes("p75"))}(t)?function(e){const t=nt(e);return e.sort((function(e,t){return e-t})),t.median=it(e,.5),t.p25=it(e,.25),t.p75=it(e,.75),t}(e):nt(e)}function nt(e){let t=e[0],n=t,i=0,r=0,o=0;const a=e.length;for(let s=0;s<a;++s)o=e[s],o<t?t=o:o>n&&(n=o),i+=o,r+=o*o;const s=i/a;let l=r/a-s*s;l<0&&(l=0);const c=Math.sqrt(l);return new et(t,n,s,c)}function it(e,t){if(0===e.length)throw new Error("Empty array provided for percentile calculation.");if(t<0||t>1)throw new Error("Invalid ratio provided for percentile calculation: "+t);if(0===t)return e[0];if(1===t)return e[e.length-1];const n=(e.length-1)*t,i=Math.floor(n),r=e[i];return r+(e[i+1]-r)*(n-i)}class rt{min;max;constructor(e,t){this.min=e,this.max=t}}class ot{#e;constructor(e){if(!e||void 0===e)throw new Error("Cannot create spacing with no values.");if(0===e.length)throw new Error("Cannot create spacing with empty values.");if(!e.every((function(e){return!isNaN(e)&&0!==e})))throw new Error("Cannot create spacing with non number or zero values.");this.#e=e}get(e){return this.#e[e]}length(){return this.#e.length}toString(){return"("+this.#e.toString()+")"}getValues(){return this.#e.slice()}equals(e){if(!e)return!1;const t=this.length();if(t!==e.length())return!1;for(let n=0;n<t;++n)if(this.get(n)!==e.get(n))return!1;return!0}get2D(){return{x:this.get(0),y:this.get(1)}}}class at{#Y;#X;#j;#Z={};#_;#K=R();#J=!1;constructor(e,t,n,i,r){this.#Y=e,this.#X=t,this.#j=n,void 0!==r&&(this.#_=r,this.#Z[r]=e),void 0!==i&&(this.#K=i)}getInitialTime(){return this.#_}getCurrentTotalNumberOfSlices(){const e=Object.keys(this.#Z);if(0===e.length)return this.#Y.length;let t=0;for(let n=0;n<e.length;++n)t+=this.#Z[e[n]].length;return t}hasSlicesAtTime(e){return void 0!==this.#Z[e]}getCurrentNumberOfSlicesBeforeTime(e){const t=Object.keys(this.#Z);if(0===t.length)return;let n=0;for(let i=0;i<t.length;++i){const r=t[i];if(parseInt(r,10)===e)break;n+=this.#Z[r].length}return n}getOrigin(){return this.#Y[0]}getOrigins(){return this.#Y}includesOrigin(e,t){for(let n=0;n<this.#Y.length;++n)if(this.#Y[n].isSimilar(e,t))return!0;return!1}getSize(e){let t=this.#X;if(e&&void 0!==e){let n=st([this.#X.get(0),this.#X.get(1),this.#X.get(2)],e);n=n.map(Math.abs),t=new $e(n.concat(this.#X.getValues().slice(3)))}return t}#$(){const e=function(e){if(e.length<=1)return;const t=[];for(let n=0;n<e.length-1;++n){const i=e[n],r=e[n+1],o=i.getDistance(r);if(0===o)throw new Error("Zero slice spacing "+i.toString()+" "+r.toString());t.push(o)}const n=nt(t),i=k(n.mean,4);return n.stdDev>b&&c.warn("Varying slice spacing, value: "+i+" (mean: "+n.mean+", min: "+n.min+", max: "+n.max+", stdDev: "+n.stdDev+")"),i}(this.#Y);if(void 0!==e&&this.#j.get(2)!==e){c.debug("Using geometric spacing "+e+" instead of tag spacing "+this.#j.get(2));const t=this.#j.getValues();t[2]=e,this.#j=new ot(t)}}getSpacing(e){this.#J&&(this.#$(),this.#J=!1);let t=this.#j;if(e&&void 0!==e){let n=st([this.#j.get(0),this.#j.get(1),this.#j.get(2)],e);n=n.map(Math.abs),t=new ot(n)}return t}getRealSpacing(){return this.getSpacing(this.#K.getInverse().asOneAndZeros())}getOrientation(){return this.#K}getSliceIndex(e,t){let n=this.#Y;void 0!==t&&(n=this.#Z[t]);const i=e.getClosest(n),r=n[i],o=e.minus(r);return new O(this.#K.get(0,2),this.#K.get(1,2),this.#K.get(2,2)).isCodirectional(o)?i+1:i}appendOrigin(e,t,n){const i=function(t){return t.equals(e)};if(void 0!==n){if(void 0!==this.#Z[n].find(i))throw new Error("Cannot append same time origin twice");this.#Z[n].splice(t,0,e)}if(void 0===n||n===this.#_){if(void 0!==this.#Y.find(i))throw new Error("Cannot append same origin twice");this.#J=!0,this.#Y.splice(t,0,e);const n=this.#X.getValues();n[2]+=1,this.#X=new $e(n)}}appendFrame(e,t){this.#Z[t]=[e];const n=this.#X.getValues(),i=this.#j.getValues();4===n.length?n[3]+=1:(n.push(2),i.push(1)),this.#X=new $e(n),this.#j=new ot(i)}toString(){return"Origin: "+this.getOrigin()+", Size: "+this.getSize()+", Spacing: "+this.getSpacing()+", Orientation: "+this.getOrientation()}equals(e){return null!==e&&this.getOrigin().equals(e.getOrigin())&&this.getSize().equals(e.getSize())&&this.getSpacing().equals(e.getSpacing())}isInBounds(e){return this.isIndexInBounds(this.worldToIndex(e))}isIndexInBounds(e,t){return this.getSize().isInBounds(e,t)}getRange(){const e=this.getSize().length(),t=new Array(e);t.fill(0);const n=new s(t),i=new s(this.getSize().getValues());return[this.indexToWorld(n),this.indexToWorld(i)]}indexToWorld(e){const t=this.getSpacing(),n=new q(e.get(0)*t.get(0),e.get(1)*t.get(1),e.get(2)*t.get(2)),i=this.getOrientation().multiplyPoint3D(n),r=e.getValues(),o=this.getOrigin();return r[0]=o.getX()+i.getX(),r[1]=o.getY()+i.getY(),r[2]=o.getZ()+i.getZ(),new U(r)}pointToWorld(e){const t=this.getSpacing(),n=new q(e.getX()*t.get(0),e.getY()*t.get(1),e.getZ()*t.get(2)),i=this.getOrientation().multiplyPoint3D(n),r=this.getOrigin();return new q(r.getX()+i.getX(),r.getY()+i.getY(),r.getZ()+i.getZ())}worldToIndex(e){const t=this.getOrigin(),n=new q(e.get(0)-t.getX(),e.get(1)-t.getY(),e.get(2)-t.getZ()),i=this.getOrientation().getInverse().multiplyPoint3D(n),r=e.getValues(),o=this.getSpacing();return r[0]=Math.floor(k(i.getX()/o.get(0),5)),r[1]=Math.floor(k(i.getY()/o.get(1),5)),r[2]=Math.floor(k(i.getZ()/o.get(2),5)),new s(r)}worldToPoint(e){const t=this.getOrigin(),n=new q(e.get(0)-t.getX(),e.get(1)-t.getY(),e.get(2)-t.getZ()),i=this.getOrientation().getInverse().multiplyPoint3D(n),r=e.getValues(),o=this.getSpacing();return r[0]=i.getX()/o.get(0),r[1]=i.getY()/o.get(1),r[2]=i.getZ()/o.get(2),new q(r[0],r[1],r[2])}}function st(e,t){return t.getInverse().multiplyArray3D(e)}function lt(e,t){return t.multiplyArray3D(e)}function ct(){return new x([1,0,0,0,0,1,0,-1,0])}const ut={Axial:"axial",Coronal:"coronal",Sagittal:"sagittal"};function dt(e){let t;return e===ut.Axial?t=R():e===ut.Coronal?t=ct():e===ut.Sagittal&&(t=new x([0,0,-1,1,0,0,0,-1,0])),t}function ht(e){const t=new O(e.get(0,0),e.get(1,0),e.get(2,0)),n=new O(e.get(0,1),e.get(1,1),e.get(2,1)),i=new O(e.get(0,2),e.get(1,2),e.get(2,2));return gt(t)+gt(n)+gt(i)}function gt(e){let t=new O(Math.abs(e.getX()),Math.abs(e.getY()),Math.abs(e.getZ())),n="";const i=e.getX()<0?"R":"L",r=e.getY()<0?"A":"P",o=e.getZ()<0?"I":"S",a=1e-4;for(let e=0;e<3;e++)if(t.getX()>a&&t.getX()>t.getY()&&t.getX()>t.getZ())n+=i,t=new O(0,t.getY(),t.getZ());else if(t.getY()>a&&t.getY()>t.getX()&&t.getY()>t.getZ())n+=r,t=new O(t.getX(),0,t.getZ());else{if(!(t.getZ()>a&&t.getZ()>t.getX()&&t.getZ()>t.getY()))break;n+=o,t=new O(t.getX(),t.getY(),0)}return n}function St(e){let t;const n=mt(e);return void 0!==n&&(t=function(e){let t;return["LPS","LAI","RPI","RAS","ALS","ARI","PLI","PRS"].includes(e)?t=ut.Axial:["LSA","LIP","RSP","RIA","ILA","IRP","SLP","SRA"].includes(e)?t=ut.Coronal:["PSL","PIR","ASR","AIL","IAR","IPL","SAL","SPR"].includes(e)&&(t=ut.Sagittal),t}(ht(n.asOneAndZeros()))),t}function mt(e){let t;if(void 0!==e&&6===e.length){const n=new O(e[0],e[1],e[2]),i=new O(e[3],e[4],e[5]),r=n.crossProduct(i);t=new x([n.getX(),i.getX(),r.getX(),n.getY(),i.getY(),r.getY(),n.getZ(),i.getZ(),r.getZ()])}return t}function pt(e,t){let n=R();return void 0!==t&&(n=e.asOneAndZeros().getInverse().multiply(t)),n.getAbs()}const ft={TransferSyntax:"00020010",SOPClassUID:"00080016",Modality:"00080060",Rows:"00280010",Columns:"00280011",PixelSpacing:"00280030",ImagerPixelSpacing:"00181164",NominalScannedPixelSpacing:"00182010",PixelAspectRatio:"00280034",SpacingBetweenSlices:"00180088",RescaleType:"00281054",Units:"00541001",ImageOrientationPatient:"00200037",PhotometricInterpretation:"00280004",SamplesPerPixel:"00280002"};function Dt(e){const t=e[ft.Rows];if(void 0===t)throw new Error("Missing DICOM image number of rows");if(0===t.value.length)throw new Error("Empty DICOM image number of rows");const n=e[ft.Columns];if(void 0===n)throw new Error("Missing DICOM image number of columns");if(0===n.value.length)throw new Error("Empty DICOM image number of columns");return[n.value[0],t.value[0]]}function yt(e){const t=de(e,ft.PixelSpacing);if(void 0===t||2!==t.length)return;const n=[parseFloat(t[1]),parseFloat(t[0])],i=ue(e,ft.SpacingBetweenSlices);return void 0!==i&&n.push(parseFloat(i)),new ot(n)}function vt(e){const t=ue(e,ft.PhotometricInterpretation),n=ue(e,ft.TransferSyntax);if(void 0!==t&&void 0!==n){let i=t.toUpperCase();(Ve(n)||Me(n)||Qe(n))&&!Ct(i)&&(i="RGB");let r=ue(e,ft.SamplesPerPixel);return void 0===r&&(r=1),"RGB"===i&&1===r&&(i="PALETTE COLOR"),i}}function Ct(e){return void 0!==e&&null!==e.match(/MONOCHROME/)}function It(e){return("0"+e).slice(-2)}function Tt(e){if(void 0===e)return;if(1!==e.value.length)return;const t=e.value[0];let n=4,i=6;return 10===t.length&&(n=5,i=8),{year:parseInt(t.substring(0,4),10),monthIndex:t.length>=n+2?parseInt(t.substring(n,n+2),10)-1:0,day:t.length===i+2?parseInt(t.substring(i,i+2),10):0}}function Pt(e){if(void 0===e)return;if(1!==e.value.length)return;const t=e.value[0],n=parseInt(t.substring(0,2),10),i=t.length>=4?parseInt(t.substring(2,4),10):0,r=t.length>=6?parseInt(t.substring(4,6),10):0,o=t.length>=8?t.substring(7,10):0;return{hours:n,minutes:i,seconds:r,milliseconds:0===o?0:parseInt(o,10)*Math.pow(10,3-o.length)}}function Lt(e){return{year:e.getFullYear().toString(),monthIndex:It((e.getMonth()+1).toString()),day:It(e.getDate().toString())}}function wt(e){return{hours:It(e.getHours().toString()),minutes:It(e.getMinutes().toString()),seconds:It(e.getSeconds().toString())}}function Ot(e){return e.year+e.monthIndex+e.day}function bt(e){return e.hours+e.minutes+e.seconds}const At="00080016",xt="00080060",Rt="00280002",Et="00280100",Ft={PatientName:"00100010",PatientID:"00100020",PatientBirthDate:"00100030",PatientSex:"00100040",StudyDate:"00080020",StudyTime:"00080030",StudyInstanceUID:"0020000D",StudyID:"00200010",StudyDescription:"00081030",ReferringPhysicianName:"00080090",SeriesDate:"00080021",SeriesTime:"00080031",SeriesInstanceUID:"0020000E",SeriesNumber:"00200011",FrameOfReferenceUID:"00200052",Manufacturer:"00080070",ManufacturerModelName:"00081090",DeviceSerialNumber:"00181000",SoftwareVersions:"00181020",LossyImageCompression:"00282110"};class qt{#ee;#te;getWarning(){return this.#ee}checkElements(e){this.#ee=void 0,Dt(e);const t=ue(e,xt);if(void 0!==t&&"PT"===t){const t=vt(e);if(void 0!==(n=ue(e,At))&&/^1\.2\.840\.10008\.5\.1\.4\.1\.1\.7/.test(n)||!Ct(t))return this.#ee;const i=function(e){let t="";const n={};let i;t+=he(e["00280051"],"Corrected Image (00280051)",["ATTN","DECY"]),t+=he(e["00541102"],"Decay Correction (00541102)",["START"]),t+=he(e["00541001"],"Units (00541001)",["BQML"]);const r=e["00101030"],o=he(r," PatientWeight (00101030)");if(0===o.length){const e=parseFloat(r.value[0]);isNaN(e)?t+=" PatientWeight is not a number":i=e}else t+=o;const a=function(e){let t,n="";const i=Tt(e["00080021"]);let r,o,a;const s=e["00540016"];if(n+=he(s,"RadiopharmaceuticalInformationSequence (00540016)"),void 0!==s){1!==s.value.length&&c.warn("Found more than 1 istopes in RadiopharmaceuticalInformation Sequence.");const e="RadionuclideTotalDose (00181074)",l=s.value[0]["00181074"];if(t=he(l,e),0===t.length){const e=parseFloat(l.value[0]);isNaN(e)?n+=" TotalDose is not a number":r=e}else n+=t;const u="RadionuclideHalfLife (00181075)",d=s.value[0]["00181075"];if(t=he(d,u),0===t.length){const e=parseFloat(d.value[0]);isNaN(e)?n+=" HalfLife is not a number":o=e}else n+=t;const h=s.value[0]["00181078"];let g,S;if(void 0===h)g=i,S=Pt(s.value[0]["00181072"]);else{const e=function(e){if(void 0===e)return;if(1!==e.value.length)return;const t=e.value[0].split("&")[0],n=new le("DA");n.value=[t.substring(0,8)];const i=Tt(n),r=new le("TM");return r.value=[t.substring(8)],{date:i,time:t.length>=9?Pt(r):void 0}}(h);g=e.date,S=e.time}void 0===S&&(S={hours:0,minutes:0,seconds:0,milliseconds:0}),a=new Date(g.year,g.monthIndex,g.day,S.hours,S.minutes,S.seconds,S.milliseconds)}const l=Pt(e["00080031"]);let u=new Date(i.year,i.monthIndex,i.day,l.hours,l.minutes,l.seconds,l.milliseconds);const d=e["00080022"],h=e["00080032"];if(void 0!==d&&void 0!==h){const t=Tt(d),i=Pt(h),r=new Date(t.year,t.monthIndex,t.day,i.hours,i.minutes,i.seconds,i.milliseconds);if(u>r){const a="Series date/time is after Aquisition date/time (diff="+(u.getTime()-r.getTime()).toString()+"ms) ";c.debug(a);let s=0;const l="FrameReferenceTime (00541300)",d=e["00541300"];n+=he(d,l),void 0!==d&&(s=d.value[0]);let h=0;const g="ActualFrameDuration (00181242)",S=e["00181242"];if(n+=he(S,g),void 0!==S&&(h=S.value[0]),s>0&&h>0){h/=1e3,s/=1e3;const e=Math.log(2)/o,n=e*h,r=1/e*Math.log(n/(1-Math.exp(-n)))-s;u=new Date(t.year,t.monthIndex,t.day,i.hours,i.minutes,i.seconds+r,i.milliseconds)}}}let g;if(void 0!==u&&void 0!==a&&void 0!==r&&void 0!==o){const e=(u.getTime()-a.getTime())/1e3;g=r*Math.pow(2,-e/o)}return{value:g,warning:n}}(e);return t+=a.warning,0!==t.length?n.warning="Cannot calculate PET SUV:"+t:n.value=1e3*i/a.value,n}(e);this.#te=i.value,this.#ee=i.warning}var n;return this.#ee}create(e,t,n){const i=function(t){return ue(e,t)},r=function(t){return de(e,t)},o=Dt(e),a=[o[0],o[1],1],s=i("00280008");if(void 0!==s){const e=parseInt(s,10);e>1&&a.push(e)}const l=new $e(a),d=function(e){let t,n;const i=["PixelSpacing","ImagerPixelSpacing","NominalScannedPixelSpacing","PixelAspectRatio"];for(const r of i){const i=de(e,ft[r]);if(void 0!==i&&2===i.length){t=parseFloat(i[0]),n=parseFloat(i[1]);break}}return void 0===t?(c.warn("Undefined row spacing, using default (1mm)."),t=1):0===t&&(c.warn("Zero row spacing, using default (1mm)."),t=1),void 0===n?(c.warn("Undefined column spacing, using default (1mm)."),n=1):0===n&&(c.warn("Zero column spacing, using default (1mm)."),n=1),new ot([n,t,1])}(e),h=r("00200032");let g=new Array(0,0,0);void 0!==h&&(g=[parseFloat(h[0]),parseFloat(h[1]),parseFloat(h[2])]);const S=function(e){const t=de(e,ft.ImageOrientationPatient);let n;return void 0!==t&&(n=mt(t.map((e=>parseFloat(e))))),n}(e),m=new q(g[0],g[1],g[2]),f=(D=e,void 0!==w.getTagTime?w.getTagTime(D):void 0);var D;const y=new at([m],l,d,S,f),v=i("00080018");let C=i(Rt);void 0===C&&(C=1);const I=l.getTotalSize()*C;if(I!==t.length){if(c.warn("Badly sized pixel buffer: "+t.length+" != "+I),!(I<t.length))throw new Error("Underestimated buffer size, can't fix it...");t=t.slice(0,l.getTotalSize())}const T=new $n(y,t,[v]),P=vt(e);void 0!==P&&T.setPhotometricInterpretation(P);const L=i("00280006");void 0!==L&&T.setPlanarConfiguration(L);let O=1;const b=i("00281053");if(void 0!==b){const e=parseFloat(b);isNaN(e)||(O=e)}let A=0;const x=i("00281052");if(void 0!==x){const e=parseFloat(x);isNaN(e)||(A=e)}let R=!1,E=1;void 0!==this.#te&&(R=!0,E=this.#te,c.info("Applying PET SUV calibration: "+E),O*=E,A*=E);const F=new Je(O,A);if(T.setRescaleSlopeAndIntercept(F),"PALETTE COLOR"===T.getPhotometricInterpretation()){const t=function(e){let t;const n=de(e,"00281101");if(void 0!==n&&3===n.length){let i,r,o;const a=e["00281201"],s=e["00281202"],l=e["00281203"];if(16===n[2]){let t=!1,u=n[0];0===u&&(u=65536);const d=a.vl;if(d!==2*u&&(t=!0,c.info("16bits lut but size is not double. desc: "+u+" vl: "+d)),8===parseInt(ue(e,Et),10)&&(t=!0,c.info("Scaling 16bits color lut since bits allocated is 8.")),t){const e=function(e){return e>>8};i=a.value.map(e),r=s.value.map(e),o=l.value.map(e)}}else if(8===n[2]){c.info("Scaling 16bits color lut since the lut descriptor is 8.");let e=a.value.slice(0);i=Array.from(new Uint8Array(e.buffer)),e=s.value.slice(0),r=Array.from(new Uint8Array(e.buffer)),e=l.value.slice(0),o=Array.from(new Uint8Array(e.buffer))}t=new p(i,r,o)}return t}(e);void 0!==t&&T.setPaletteColourMap(t)}const U={numberOfFiles:n};U.TransferSyntaxUID=i("00020010"),U.MediaStorageSOPClassUID=i("00020002"),U.SOPClassUID=i(At),U.Modality=i(xt),U.ImageType=i("00080008"),U.SamplesPerPixel=i(Rt),U.PhotometricInterpretation=i("00280004"),U.PixelRepresentation=i("00280103"),U.BitsAllocated=i(Et),U.BitsStored=i("00280101"),U.HighBit=i("00280102"),U.ImageOrientationPatient=r("00200037");const M=Object.keys(Ft);for(const e of M)U[e]=i(Ft[e]);if(R)U.pixelUnit="SUV";else{const t=function(e){return void 0!==w.getTagPixelUnit?w.getTagPixelUnit(e):function(e){let t;const n=["RescaleType","Units"];for(const t of n)if(void 0!==ue(e,ft[t]))break;if(void 0===t){const n=ue(e,ft.Modality);void 0!==n&&"CT"===n&&(t="HU")}return t}(e)}(e);void 0!==t&&(U.pixelUnit=t)}const Q=function(e,t){let n;const i=de(e,"00281050"),r=de(e,"00281051");if(void 0!==i&&void 0!==r){n={};const o=de(e,"00281055");let a;for(let e=0;e<i.length;++e){const s=parseFloat(i[e]);let l=parseFloat(r[e]);s&&l&&0!==l&&(a="",void 0!==o&&(a=o[e]),""===a&&(a="Default"+e),l*=t,l<1&&(l=1),n[a]={wl:[new u(s*t,l)],name:a}),0===l&&c.warn("Zero window width found in DICOM.")}}return n}(e,E);return void 0!==Q&&(U.windowPresets=Q),T.setMeta(U),T}}class Ut{#b=!0;#R;constructor(e,t){void 0!==t&&(this.#b=t),this.#R=new DataView(e)}writeUint8(e,t){return this.#R.setUint8(e,t),e+Uint8Array.BYTES_PER_ELEMENT}writeInt8(e,t){return this.#R.setInt8(e,t),e+Int8Array.BYTES_PER_ELEMENT}writeUint16(e,t){return this.#R.setUint16(e,t,this.#b),e+Uint16Array.BYTES_PER_ELEMENT}writeInt16(e,t){return this.#R.setInt16(e,t,this.#b),e+Int16Array.BYTES_PER_ELEMENT}writeUint32(e,t){return this.#R.setUint32(e,t,this.#b),e+Uint32Array.BYTES_PER_ELEMENT}writeUint64(e,t){return this.#R.setBigUint64(e,t,this.#b),e+BigUint64Array.BYTES_PER_ELEMENT}writeInt32(e,t){return this.#R.setInt32(e,t,this.#b),e+Int32Array.BYTES_PER_ELEMENT}writeInt64(e,t){return this.#R.setBigInt64(e,t,this.#b),e+BigInt64Array.BYTES_PER_ELEMENT}writeFloat32(e,t){return this.#R.setFloat32(e,t,this.#b),e+Float32Array.BYTES_PER_ELEMENT}writeFloat64(e,t){return this.#R.setFloat64(e,t,this.#b),e+Float64Array.BYTES_PER_ELEMENT}writeHex(e,t){const n=parseInt(t,16);return this.#R.setUint16(e,n,this.#b),e+Uint16Array.BYTES_PER_ELEMENT}writeBinaryArray(e,t){if(t.length%8!=0)throw new Error("Cannot write boolean array as binary.");let n=null,i=null;for(let r=0,o=t.length;r<o;r+=8){n=0;for(let e=0;e<8;++e)i=0===t[r+e]?0:1,n+=i<<e;e=this.writeUint8(e,n)}return e}writeUint8Array(e,t){for(let n=0,i=t.length;n<i;++n)e=this.writeUint8(e,t[n]);return e}writeInt8Array(e,t){for(let n=0,i=t.length;n<i;++n)e=this.writeInt8(e,t[n]);return e}writeUint16Array(e,t){for(let n=0,i=t.length;n<i;++n)e=this.writeUint16(e,t[n]);return e}writeInt16Array(e,t){for(let n=0,i=t.length;n<i;++n)e=this.writeInt16(e,t[n]);return e}writeUint32Array(e,t){for(let n=0,i=t.length;n<i;++n)e=this.writeUint32(e,t[n]);return e}writeUint64Array(e,t){for(let n=0,i=t.length;n<i;++n)e=this.writeUint64(e,t[n]);return e}writeInt32Array(e,t){for(let n=0,i=t.length;n<i;++n)e=this.writeInt32(e,t[n]);return e}writeInt64Array(e,t){for(let n=0,i=t.length;n<i;++n)e=this.writeInt64(e,t[n]);return e}writeFloat32Array(e,t){for(let n=0,i=t.length;n<i;++n)e=this.writeFloat32(e,t[n]);return e}writeFloat64Array(e,t){for(let n=0,i=t.length;n<i;++n)e=this.writeFloat64(e,t[n]);return e}}let Mt=0;class Qt{action;value;constructor(e){this.action=e}}const Vt={copy:function(e){return e},remove:function(){return null},clear:function(e){return e.value=[],e},replace:function(e,t){return e.value=[t],e}};function Nt(e){const t="."+(new Date).toISOString().replace(/\D/g,"").substring(0,14);Mt+=1;const n="."+Mt;let i="1.2.826.0.1.3680043.9.7278.1.";const r=29+n.length+t.length,o=Math.min(e.length,64-r);if(o>1){let t="";for(let n=0;n<o;++n)t+=e.charCodeAt(n);i+=t.substring(0,o)}return i+=t+n,i}function Bt(e){return e%2==0}function Gt(e){const t=ie[e];return void 0!==t&&"string"===t}function kt(e,t){const n=new Uint8Array(e.length+1);return n.set(e),n.set(t,e.length),n}class Ht{encode(e){const t=new Uint8Array(e.length);for(let n=0,i=e.length;n<i;++n)t[n]=e.charCodeAt(n);return t}}const zt="00080005",Wt="00280100";class Yt{#ne=!1;#ie=!0;#re={default:{action:"copy",value:null}};#oe=this.#re;#ae=[];#se=new Ht;#le=this.#se;setUseUnVrForPrivateSq(e){this.#ne=e}setFixUnknownVR(e){this.#ie=e}setRules(e,t){if(this.#oe=e,this.#ae=[],t){const t=Object.keys(e);for(const n of t){const t=e[n];if("replace"===t.action&&void 0!==t.value&&null!==t.value){let e,t=!1;if(8===n.length&&(t=void 0!==me(n).getNameFromDictionary()),t)e=n;else{const t=Ie(n);void 0!==t&&(e=t.getKey())}void 0!==e&&this.#ae.push(e)}}}}#ce(e){return this.#se.encode(e)}#ue(e){return this.#le.encode(e)}useSpecialTextEncoder(){this.#le=new TextEncoder}getElementToWrite(e){const t=e.tag.getGroupName(),n=e.tag.getNameFromDictionary();let i;return i=void 0!==this.#oe[e.tag.getKey()]?this.#oe[e.tag.getKey()]:void 0!==n&&void 0!==this.#oe[n]?this.#oe[n]:void 0!==this.#oe[t]?this.#oe[t]:this.#oe.default,Vt[i.action](e,i.value)}#de(e,t,n,i){const r=function(e){return fe(e.tag)&&"NONE"===e.vr};for(const o of n){if(0===o.length)continue;let n=!1;const a=o.find((e=>r(e)));void 0!==a&&void 0!==a.undefinedLength&&(n=a.undefinedLength);const s=new le("NONE");s.vl=n?4294967295:a.vl,s.tag=pe(),s.value=[],t=this.#he(e,s,t,i);for(const n of o)r(n)||De(n.tag)||(t=this.#he(e,n,t,i));if(n){const n=new le("NONE");n.vl=0,n.tag=new ge("FFFE","E00D"),n.value=[],t=this.#he(e,n,t,i)}}return t}#ge(e,t,n,i,r){const o=n;if("NONE"===t.vr);else if(i instanceof Uint8Array)n=i.length===8*t.vl?e.writeBinaryArray(n,i):e.writeUint8Array(n,i);else if(i instanceof Int8Array)n=e.writeInt8Array(n,i);else if(i instanceof Uint16Array)n=e.writeUint16Array(n,i);else if(i instanceof Int16Array)n=e.writeInt16Array(n,i);else if(i instanceof Uint32Array)n=e.writeUint32Array(n,i);else if(i instanceof Int32Array)n=e.writeInt32Array(n,i);else if(i instanceof BigUint64Array)n=e.writeUint64Array(n,i);else if(i instanceof BigInt64Array)n=e.writeInt64Array(n,i);else{const o=ie[t.vr];if(void 0!==o)if("Uint8"===o)n=e.writeUint8Array(n,i);else if("Uint16"===o)n=e.writeUint16Array(n,i);else if("Int16"===o)n=e.writeInt16Array(n,i);else if("Uint32"===o)n=e.writeUint32Array(n,i);else if("Int32"===o)n=e.writeInt32Array(n,i);else if("Uint64"===o)n=e.writeUint64Array(n,i);else if("Int64"===o)n=e.writeInt64Array(n,i);else if("Float32"===o)n=e.writeFloat32Array(n,i);else if("Float64"===o)n=e.writeFloat64Array(n,i);else{if("string"!==o)throw new Error("Unknown VR type: "+o);n=e.writeUint8Array(n,i)}else if("SQ"===t.vr)n=this.#de(e,n,i,r);else if("AT"===t.vr)for(const t of i){const i=t+"",r=i.substring(1,5),o=i.substring(6,10),a=[parseInt(r,16),parseInt(o,16)];n=e.writeUint16Array(n,a)}else"xs"===t.vr?n=i instanceof Int16Array?e.writeInt16Array(n,i):e.writeUint16Array(n,i):c.warn("Unknown VR: "+t.vr)}if("SQ"!==t.vr&&"NONE"!==t.vr){const e=n-o;if(e!==t.vl){let n="Offset difference and VL are not equal: "+e+" != "+t.vl;n+=" (",void 0!==t.tag&&(n+=t.tag+", "),n+="vr:"+t.vr+")",c.warn(n)}}return n}#Se(e,t,n,i,r){let o=!1;if(void 0!==t.undefinedLength&&(o=t.undefinedLength),o){const o=[];o.push({tag:pe(),vr:"NONE",vl:0,value:[]});for(const e of i)o.push({tag:pe(),vr:t.vr,vl:e.length,value:e});n=this.#de(e,n,[o],r)}else{let o=i[0];i.length>1&&(o=function(e){const t=e.length,n=e[0].length;if(void 0===n)return e;const i=t*n,r=new e[0].constructor(i);for(let i=0;i<t;i++){const t=i*n;r.set(e[i],t)}return r}(i)),n=this.#ge(e,t,n,o,r)}return n}#he(e,t,n,i){const r=t.tag.isWithVR(),o=!(!i&&r)||ee(t.vr);n=e.writeHex(n,t.tag.getGroup()),n=e.writeHex(n,t.tag.getElement());let a=t.vr;this.#ne&&t.tag.isPrivate()&&"SQ"===a&&(c.warn("Write element using VR=UN for private sequence."),a="UN"),r&&!i&&(n=e.writeUint8Array(n,this.#ce(a)),o&&(n+=2));let s=!1;("SQ"===t.vr||Ce(t.tag))&&void 0!==t.undefinedLength&&(s=t.undefinedLength);let l=!1;fe(t.tag)&&void 0!==t.undefinedLength&&(l=t.undefinedLength);let u=t.vl;(s||l)&&(u=4294967295),n=o?e.writeUint32(n,u):e.writeUint16(n,u);let d=t.value;if(void 0===d&&(d=[]),n=Ce(t.tag)?this.#Se(e,t,n,d,i):this.#ge(e,t,n,d,i),s){const t=new le("NONE");t.vl=0,t.tag=new ge("FFFE","E0DD"),t.value=[],n=this.#he(e,t,n,i)}return n}getBuffer(e){const t=e["00020010"].value[0],n=qe(t),i=Ue(t);if(void 0!==e[zt]){const t=e[zt].value[0];void 0!==t&&"ISO-IR 6"!==t&&(c.debug("Change charset to UTF, was: "+t),this.useSpecialTextEncoder(),e[zt].value=["ISO_IR 192"])}let r;void 0!==e[Wt]&&(r=e[Wt].value[0]);let o=132,a=0;const s=[],l=[];let u,d,h=0;const g=new ge("0002","0000"),S=new ge("0002","0001"),m=new ge("0002","0012"),p=new ge("0002","0013"),f=this.#ae.slice(),D=Object.keys(e);for(const t of D){const c=e[t];if(c.tag=me(t),u=this.getElementToWrite(c),!(null===u||g.equals(u.tag)||S.equals(u.tag)||m.equals(u.tag)||p.equals(u.tag))){a=0;const e=f.indexOf(u.tag.getKey());-1!==e&&f.splice(e,1),this.#ie&&Xt(u,!i),this.#me(u,u.value,n,r),d=u.tag.getGroupName(),a+=Ge(u.vr,"Meta Element"!==d&&n),a+=u.vl,"Meta Element"===d?(s.push(u),h+=a):l.push(u),o+=a}}for(const e of f){const t=me(e),i=new le(t.getVrFromDictionary());let r;if(i.tag=t,void 0!==this.#oe[e])r=this.#oe[e].value;else{const e=t.getNameFromDictionary();r=this.#oe[e].value}let a=Ge(i.vr,n);a+=this.#me(i,[r],n),l.push(i),o+=a}const y=jt("FileMetaInformationVersion");let v=Ge(y.vr,!1);v+=this.#me(y,[0,1],!1),s.push(y),h+=v,o+=v;const C=jt("ImplementationClassUID");let I=Ge(C.vr,!1);const T="1.2.826.0.1.3680043.9.7278.1."+"0.35.0-beta.22".replace("-beta",".99");I+=this.#me(C,[T],!1),s.push(C),h+=I,o+=I;const P=jt("ImplementationVersionName");let L=Ge(P.vr,!1);L+=this.#me(P,["DWV_0.35.0-beta.22"],!1),s.push(P),h+=L,o+=L;const w=function(e,t){return Se(e.tag,t.tag)};s.sort(w),l.sort(w);const O=jt("FileMetaInformationGroupLength");let b=Ge(O.vr,!1);b+=this.#me(O,new Uint32Array([h]),!1),o+=b;const A=new ArrayBuffer(o),x=new Ut(A),R=new Ut(A,!i);let E=128;E=x.writeUint8Array(E,this.#ce("DICM")),E=this.#he(x,O,E,!1);for(const e of s)E=this.#he(x,e,E,!1);const F=132+b+h;E!==F&&c.warn("Bad size calculation... meta offset: "+E+", calculated size:"+F+" (diff:"+(E-F)+")");for(const e of l)E=this.#he(R,e,E,n);return E!==o&&c.warn("Bad size calculation... final offset: "+E+", calculated size:"+o+" (diff:"+(E-o)+")"),A}#me(e,t,n,i){let r=0;if("SQ"===e.vr){if(null!==t&&0!==t){const o=[];let a=!1;void 0!==e.undefinedLength&&(a=e.undefinedLength,delete e.undefinedLength);for(const e of t){const t=e,s=[];let l=0;if(null===t||0===t)continue;let c=i;const u=t[Wt];void 0!==u&&void 0!==u.value&&(c=u.value[0]);const d=Object.keys(t);for(const e of d){const i=t[e];i.tag=me(e),fe(i.tag)||(l+=this.#me(i,i.value,n,c),s.push(i),l+=Ge(i.vr,n))}const h={tag:pe(),vr:"NONE",vl:l,value:[]};a&&(h.undefinedLength=a),s.push(h),l+=Ge(h.vr,n),a&&(l+=Ge("NONE",n));const g=function(e,t){return Se(e.tag,t.tag)};s.sort(g),r+=l,o.push(s)}a&&(r+=Ge("NONE",n)),e.value=o,e.vl=r,a&&(e.undefinedLength=a)}}else{if(Gt(o=e.vr)||"OB"===o){const n=function(e){let t="";return Gt(e)&&(t="UI"===e?"\0":" "),t}(e.vr);if(Gt(e.vr)){let i;ne(e.vr)?(t=this.#ue(t.join("\\")),i=this.#ue(n)):(t=this.#ce(t.join("\\")),i=this.#ce(n)),Bt(t.length)||(t=kt(t,i))}else"OB"===e.vr&&(t=function(e){if(null==e||void 0===e.length)throw new Error("Cannot pad undefined or null OB value.");if(0!==e.length&&void 0!==e[0].length){let t=0;for(const n of e)t+=n.length;Bt(t)||(e[e.length-1]=kt(e[e.length-1],[0]))}else Bt(e.length)||(e=kt(e,[0]));return e}(t))}if(r=0,"AT"===e.vr)r=4*t.length;else if("xs"===e.vr)r=t.length*Uint16Array.BYTES_PER_ELEMENT;else if(function(e){const t=ie[e];return void 0!==t&&"string"!==t}(e.vr)||"ox"===e.vr){if(Ce(e.tag)&&Array.isArray(t)){r=0;for(const e of t)r+=e.length}else r=t.length;const o=ie[e.vr];if(Ce(e.tag)||"ox"===e.vr)if(e.undefinedLength){const e=Ge("NONE",n);r+=e,r+=e*t.length,r+=e}else void 0!==i&&(1===i?r/=8:16===i&&(r*=Uint16Array.BYTES_PER_ELEMENT));else{if(void 0===o)throw new Error("Unsupported element: "+e.vr);{const e=function(e){let t;return"Uint8"===e?t=Uint8Array.BYTES_PER_ELEMENT:"Uint16"===e?t=Uint16Array.BYTES_PER_ELEMENT:"Int16"===e?t=Int16Array.BYTES_PER_ELEMENT:"Uint32"===e?t=Uint32Array.BYTES_PER_ELEMENT:"Int32"===e?t=Int32Array.BYTES_PER_ELEMENT:"Float32"===e?t=Float32Array.BYTES_PER_ELEMENT:"Float64"===e?t=Float64Array.BYTES_PER_ELEMENT:"Uint64"===e?t=BigUint64Array.BYTES_PER_ELEMENT:"Int64"===e&&(t=BigInt64Array.BYTES_PER_ELEMENT),t}(o);if(void 0===e)throw new Error("Unknown bytes per element for VR type: "+o);r*=e}}}else r=t.length;e.value=t,e.vl=r}var o;return r}}function Xt(e,t){if("UN"===e.vr){const n=e.tag.getVrFromDictionary();if(void 0!==n&&e.vr!==n){e.vr=n;const i=ie[e.vr];if(void 0!==i&&"Uint8"!==i&&"string"!==i){const n=function(e,t,n){let i;if(void 0===e.buffer)return i;const r=new we(e.buffer,n),o=e.byteOffset,a=e.length,s=ie[t];return"Uint16"===s?i=r.readUint16Array(o,a):"Uint32"===s?i=r.readUint32Array(o,a):"Uint64"===s?i=r.readUint64Array(o,a):"Int16"===s?i=Array.from(r.readInt16Array(o,a)):"Int32"===s?i=Array.from(r.readInt32Array(o,a)):"Int64"===s?i=r.readInt64Array(o,a):"Float32"===s?i=Array.from(r.readFloat32Array(o,a)):"Float64"===s&&(i=Array.from(r.readFloat64Array(o,a))),i}(e.value,e.vr,t);void 0!==n&&(e.value=n)}c.info("Element "+e.tag.getGroup()+" "+e.tag.getElement()+" VR changed from UN to "+e.vr)}}}function jt(e){const t=Ie(e),n=new le(t.getVrFromDictionary());return n.tag=t,n}function Zt(e){const t=Object.keys(e),n={};for(const i of t){const t=Ie(i);if(void 0===t)continue;const r=t.getVrFromDictionary();let o,a=!1;const s=e[i];if("SQ"===r){const e=[];if(void 0!==s.undefinedLength&&(a=s.undefinedLength),Array.isArray(s.value))for(const t of s.value)e.push(Zt(t));else c.debug("Non array simpleTag SQ value");o=e}else o=Array.isArray(s)?s:[s];const l=new le(r);l.tag=t,l.value=o,a&&(l.undefinedLength=a),n[t.getKey()]=l}return n}const _t={CodeValue:"00080100",CodingSchemeDesignator:"00080102",CodeMeaning:"00080104",LongCodeValue:"00080119",URNCodeValue:"00080120"};class Kt{meaning;value;longValue;urnValue;schemeDesignator;constructor(e){this.meaning=e}toString(){return"("+this.value+", "+this.schemeDesignator+", '"+this.meaning+"')"}}function Jt(e,t){return void 0!==e&&void 0!==t&&e.schemeDesignator===t.schemeDesignator&&e.value===t.value}function $t(e){const t=new Kt(e[_t.CodeMeaning].value[0]);if(void 0!==e[_t.CodeValue])t.value=e[_t.CodeValue].value[0];else if(void 0!==e[_t.LongCodeValue])t.longValue=e[_t.LongCodeValue].value[0];else{if(void 0===e[_t.URNCodeValue])throw new Error("Invalid code with no value, no long value and no urn value.");t.urnValue=e[_t.URNCodeValue].value[0]}if(void 0!==t.value||void 0!==t.longValue){if(void 0===e[_t.CodingSchemeDesignator])throw new Error("No coding sheme designator when code value or long value is present");t.schemeDesignator=e[_t.CodingSchemeDesignator].value[0]}return t}function en(e){const t={};return void 0!==e.value?t.CodeValue=e.value:void 0!==e.longValue?t.LongCodeValue=e.longValue:void 0!==e.urnValue&&(t.URNCodeValue=e.urnValue),void 0!==e.schemeDesignator&&(t.CodingSchemeDesignator=e.schemeDesignator),t.CodeMeaning=e.meaning,t}const tn={111030:"Image Region",112039:"Tracking Identifier",112040:"Tracking Unique Identifier",113048:"Pixel by pixel Maximum",113049:"Pixel by pixel mean",113051:"Pixel by pixel Minimum",113061:"Standard Deviation",113076:"Segmentation",121055:"Path",121207:"Height",121322:"Source image for image processing operation",121324:"Source Image",122438:"Reference Points",125007:"Measurement Group",125309:"Short Label",126e3:"Imaging Measurement Report",126010:"Imaging Measurements",128773:"Reference Geometry"},nn={1483009:"Angle",42798e3:"Area",103355008:"Width",103339001:"Long axis",103340004:"Short axis",131190003:"Radius",261665006:"Unknown",410668003:"Length",718499004:"Color"},rn={1:"No units",mm:"Millimeter",deg:"Degree - plane angle",cm2:"Square centimeter","cm2/ml":"Square centimeter per milliliter","/cm":"Per centimeter","g/ml":"Gram per milliliter","g/ml{SUVbw}":"Standardized Uptake Value body weight","mg/ml":"Milligram per milliliter","umol/ml":"Micromole per milliliter","Bq/ml":"Becquerels per milliliter","mg/min/ml":"Milligrams per minute per milliliter","umol/min/ml":"Micromole per minute per milliliter","ml/min/g":"Milliliter per minute per gram","ml/g":"Milliliter per gram","ml/min/ml":"Milliliter per minute per milliliter","ml/ml":"Milliliter per milliliter","%":"Percentage","[hnsf'U]":"Hounsfield unit","10*23/ml":"Electron density","{counts}":"Counts","{counts}/s":"Counts per second","{propcounts}":"Proportional to counts","{propcounts}/s":"Proportional to counts per second"};function on(e,t){let n,i;return"DCM"===t?n=tn[e]:"SCT"===t?n=nn[e]:"UCUM"===t&&(n=rn[e]),void 0!==n&&(i=new Kt(n),i.schemeDesignator=t,i.value=e),i}function an(){return on("125007","DCM")}function sn(){return on("126000","DCM")}function ln(){return on("126010","DCM")}function cn(){return on("111030","DCM")}function un(){return on("128773","DCM")}function dn(){return on("112039","DCM")}function hn(){return on("112040","DCM")}function gn(){return on("113076","DCM")}function Sn(){return on("125309","DCM")}function mn(){return on("122438","DCM")}function pn(){return on("718499004","SCT")}const fn={angle:{key:"1483009",scheme:"SCT"},length:{key:"410668003",scheme:"SCT"},surface:{key:"42798000",scheme:"SCT"},height:{key:"121207",scheme:"DCM"},width:{key:"103355008",scheme:"SCT"},radius:{key:"131190003",scheme:"SCT"},a:{key:"103339001",scheme:"SCT"},b:{key:"103340004",scheme:"SCT"},min:{key:"113051",scheme:"DCM"},max:{key:"113048",scheme:"DCM"},mean:{key:"113049",scheme:"DCM"},stddev:{key:"113061",scheme:"DCM"}},Dn={"unit.mm":"mm","unit.cm2":"cm2","unit.degree":"deg",HU:"[hnsf'U]",MGML:"mg/ml",ED:"10*23/ml",PCT:"%",CNTS:"{counts}",NONE:"1",CM2:"cm2",CM2ML:"cm2/ml",PCNT:"%",CPS:"{counts}/s",BQML:"Bq/ml",MGMINML:"mg/min/ml",UMOLMINML:"umol/min/ml",MLMING:"ml/min/g",MLG:"ml/g","1CM":"/cm",UMOLML:"umol/ml",PROPCNTS:"{propcounts}",PROPCPS:"{propcounts}/s",MLMINML:"ml/min/ml",MLML:"ml/ml",GML:"g/ml",SUV:"g/ml{SUVbw}"},yn="00620005",vn="00620009",Cn="0062000C",In="0062000D",Tn="00620003",Pn="0062000F",Ln="00620020";class wn{number;label;algorithmType;algorithmName;displayValue;displayRGBValue;propertyTypeCode;propertyCategoryCode;trackingUid;trackingId;constructor(e,t,n){this.number=e,this.label=t,this.algorithmType=n}}function On(e){const t=new wn(e["00620004"].value[0],e[yn]?e[yn].value[0]:"n/a",e["00620008"].value[0]);if(void 0!==e[vn]&&(t.algorithmName=e[vn].value[0]),void 0!==e[Cn])t.displayValue=e[Cn].value[0];else if(void 0!==e[In]){const i=e[In].value,r=function(e){return function(e){function t(e){let t=null;return t=e<=.0031308?12.92*e:1.055*Math.pow(e,.416666667)-.055,Math.min(1,Math.max(0,t))}const n=e.x/100,i=e.y/100,r=e.z/100;return{r:Math.round(255*t(3.2406*n-1.5372*i-.4986*r)),g:Math.round(255*t(-.9689*n+1.8758*i+.0415*r)),b:Math.round(255*t(.0557*n-.204*i+1.057*r))}}(function(e){function t(e){let t=null;return t=e>.206896552?Math.pow(e,3):.128418549*e-.017712903,t}const n=T,i=(e.l+16)/116;return{x:n.x*t(i+e.a/500),y:n.y*t(i),z:n.z*t(i-e.b/200)}}(e))}({l:.001525902*(n={l:i[0],a:i[1],b:i[2]}).l,a:.003891051*n.a-128,b:.003891051*n.b-128});t.displayRGBValue=r}else c.warn("No recommended colour for segment, using default"),t.displayRGBValue=function(e){const t=[new D(0,0,0),new D(255,0,0),new D(0,255,0),new D(0,0,255),new D(255,255,0),new D(0,255,255),new D(255,0,255),new D(255,239,213),new D(0,0,205),new D(205,133,63),new D(210,180,140),new D(102,205,170),new D(0,0,128),new D(0,139,139),new D(46,139,87),new D(255,228,225)];let n;return n=e<t.length?t[e]:new D(255*Math.random(),255*Math.random(),255*Math.random()),n}(t.number);var n;if(void 0===e[Tn])throw new Error("Missing Segmented Property Category Code Sequence.");if(t.propertyCategoryCode=$t(e[Tn].value[0]),void 0===e[Pn])throw new Error("Missing Segmented Property Type Code Sequence.");return t.propertyTypeCode=$t(e[Pn].value[0]),void 0!==e[Ln]&&(t.trackingId=e[Ln].value[0],t.trackingUid=e["00620021"].value[0]),t}function bn(e){let t=e.algorithmType;void 0===t&&(t="MANUAL");const n={SegmentNumber:e.number,SegmentLabel:e.label,SegmentAlgorithmType:t};if("MANUAL"!==t&&void 0!==e.algorithmName&&(n.SegmentAlgorithmName=e.algorithmName),e.displayRGBValue){const t=I(P(e.displayRGBValue));n.RecommendedDisplayCIELabValue=[Math.round(t.l),Math.round(t.a),Math.round(t.b)]}else n.RecommendedDisplayGrayscaleValue=e.displayValue;return e.propertyCategoryCode&&(n.SegmentedPropertyCategoryCodeSequence={value:[en(e.propertyCategoryCode)]}),e.propertyTypeCode&&(n.SegmentedPropertyTypeCodeSequence={value:[en(e.propertyTypeCode)]}),e.trackingId&&(n.TrackingID=e.trackingId,n.TrackingUID=e.trackingUid),n}const An="00089124",xn="00082112",Rn="00081150",En="00081155",Fn="00209116",qn="00289110";class Un{dimIndex;imagePosPat;derivationImages;refSegmentNumber;imageOrientationPatient;spacing;constructor(e,t,n,i){this.dimIndex=e,this.imagePosPat=t,this.derivationImages=n,this.refSegmentNumber=i}}function Mn(e){const t=[];if(void 0!==e[An]){const n=e[An].value;for(let e=0;e<n.length;++e){const i=[];if(void 0!==n[e][xn]){const t=n[e][xn].value;for(let e=0;e<t.length;++e){const n={};void 0!==t[e][Rn]&&(n.referencedSOPClassUID=t[e][Rn].value[0]),void 0!==t[e][En]&&(n.referencedSOPInstanceUID=t[e][En].value[0]),i.push(n)}}t.push({sourceImages:i})}}const n=e["00209111"].value[0]["00209157"].value,i=e["0062000A"].value,r=parseInt(i[0]["0062000B"].value[0],0),o=e["00209113"].value[0]["00200032"].value;for(let e=0;e<o.length;++e)o[e]=parseFloat(o[e]);const a=new Un(n,o,t,r);if(void 0!==e[Fn]){const t=e[Fn];if(0!==t.value.length){const e=t.value[0]["00200037"].value;void 0!==e&&(a.imageOrientationPatient=e)}}if(void 0!==e[qn]){const t=e[qn];if(0!==t.value.length){const e=yt(t.value[0]);void 0!==e&&(a.spacing=e)}else c.warn("No shared functional group pixel measure sequence items.")}return a}function Qn(e){const t={FrameContentSequence:{value:[{DimensionIndexValues:e.dimIndex}]},PlanePositionSequence:{value:[{ImagePositionPatient:e.imagePosPat}]},SegmentIdentificationSequence:{value:[{ReferencedSegmentNumber:e.refSegmentNumber}]}};if(void 0!==e.derivationImages){const n=en(on("121322","DCM")),i=en(gn()),r=[];for(const t of e.derivationImages){const e=[];for(const i of t.sourceImages)e.push({PurposeOfReferenceCodeSequence:{value:[n]},ReferencedSOPClassUID:i.referencedSOPClassUID,ReferencedSOPInstanceUID:i.referencedSOPInstanceUID});r.push({DerivationCodeSequence:{value:[i]},SourceImageSequence:{value:e}})}t.DerivationImageSequence={value:r}}return t}const Vn="00209116",Nn="00289110",Bn={PatientName:"00100010",PatientID:"00100020",PatientBirthDate:"00100030",PatientSex:"00100040",StudyDate:"00080020",StudyTime:"00080030",StudyInstanceUID:"0020000D",StudyID:"00200010",ReferringPhysicianName:"00080090",SeriesDate:"00080021",SeriesTime:"00080031",SeriesInstanceUID:"0020000E",SeriesNumber:"00200011",FrameOfReferenceUID:"00200052",Manufacturer:"00080070",ManufacturerModelName:"00081090",DeviceSerialNumber:"00181000",SoftwareVersions:"00181020",LossyImageCompression:"00282110"};function Gn(e,t){const n=e[t.tag];if(1===t.type||2===t.type){if(void 0===n)throw new Error("Missing or empty "+t.name)}else if(void 0===n)return;let i,r=!1;if(i=1===n.value.length?n.value[0]:n.value,Array.isArray(i))for(let e=0;e<t.enum.length;++e){if(!Array.isArray(t.enum[e]))throw new Error("Cannot compare array and non array tag value.");if(z(t.enum[e],i)){r=!0;break}}else r=t.enum.includes(i);if(!r)throw new Error("Unsupported "+t.name+" value: "+i)}function kn(e,t,n){const i=e.getGeometry().getSize().getDimSize(2),r={};for(let o=0;o<i;++o){const a=n+o,s=e.getValueAtOffset(a);for(const e of t){const t=e.number-1;s===e.number&&(void 0===r[t]&&(r[t]=new Uint8Array(i)),r[t][o]=1)}}return r}const Hn=[{name:"TransferSyntaxUID",tag:"00020010",type:"1",enum:[oe,ae,se]},{name:"MediaStorageSOPClassUID",tag:"00020002",type:"1",enum:["1.2.840.10008.5.1.4.1.1.66.4"]},{name:"SOPClassUID",tag:"00020002",type:"1",enum:["1.2.840.10008.5.1.4.1.1.66.4"]},{name:"Modality",tag:"00080060",type:"1",enum:["SEG"]},{name:"SegmentationType",tag:"00620001",type:"1",enum:["BINARY"]},{name:"DimensionOrganizationType",tag:"00209311",type:"3",enum:["3D"]},{name:"ImageType",tag:"00080008",type:"1",enum:[["DERIVED","PRIMARY"]]},{name:"SamplesPerPixel",tag:"00280002",type:"1",enum:[1]},{name:"PhotometricInterpretation",tag:"00280004",type:"1",enum:["MONOCHROME2"]},{name:"PixelRepresentation",tag:"00280103",type:"1",enum:[0]},{name:"BitsAllocated",tag:"00280100",type:"1",enum:[1]},{name:"BitsStored",tag:"00280101",type:"1",enum:[1]},{name:"HighBit",tag:"00280102",type:"1",enum:[0]}];function zn(){const e={};for(const t of Hn)e[t.name]=t.enum[0];return e}class Wn{#ee;getWarning(){return this.#ee}checkElements(e){}create(e,t,n){const i=function(t){return ue(e,t)},r=function(t){return de(e,t)};for(const t of Hn)Gn(e,t);const o=Dt(e),a=new $e([o[0],o[1],1]),s=a.getTotalSize();let l=i("00280008");if(l=void 0!==l?parseInt(l,10):1,l!==t.length/s)throw new Error("Buffer and numberOfFrames meta are not equal."+l+" "+t.length/s);const u=function(e){const t=e["00209221"];if(void 0===t||1!==t.value.length)throw new Error("Unsupported dimension organization sequence length");const n=t.value[0]["00209164"].value[0],i=[],r=e["00209222"];if(void 0!==r){const e=r.value;if(2!==e.length)throw new Error("Unsupported dimension index sequence length");let t;for(let r=0;r<e.length;++r){const o=e[r]["00209164"].value[0];if(o!==n)throw new Error("Dimension Index Sequence contains a unknown Dimension Organization");t=e[r]["00209165"].value[0];const a={DimensionOrganizationUID:o,DimensionIndexPointer:t};void 0!==e[r]["00209421"]&&(a.DimensionDescriptionLabel=e[r]["00209421"].value[0]),i.push(a)}if("(0020,0032)"!==t)throw new Error("Unsupported non image position as last index")}return{organizations:{value:[{DimensionOrganizationUID:n}]},indices:{value:i}}}(e),d=r("00620002");if(void 0===d)throw new Error("Missing or empty segmentation sequence");const h=[],g=[0],S=[0],m=[0];for(let e=0;e<d.length;++e){const t=On(d[e]);void 0!==t.displayRGBValue&&(g[t.number]=t.displayRGBValue.r,S[t.number]=t.displayRGBValue.g,m[t.number]=t.displayRGBValue.b),h.push(t)}let f,D,y,v=!1;g.length>1&&(v=!0,f=new p(g,S,m));const C=r("52009229");if(void 0!==C){const e=C[0];if(void 0!==e[Vn]){const t=e[Vn];0!==t.value.length?y=t.value[0]["00200037"].value:c.warn("No shared functional group plane orientation sequence items.")}if(void 0!==e[Nn]){const t=e[Nn];0!==t.value.length?D=yt(t.value[0]):c.warn("No shared functional group pixel measure sequence items.")}}const I=function(e,t){return e.some((function(e){return n=t,i=e,JSON.stringify(n)===JSON.stringify(i);var n,i}))},T=function(e,t){return e.findIndex((function(e){return t.equals(e)}))},P=r("52009230");if(void 0===P)throw new Error("Missing or empty per frame functional sequence");if(l!==P.length)throw new Error("perFrameFuncGroupSequence meta and numberOfFrames are not equal.");const L=[];for(let e=0;e<P.length;++e)L.push(Mn(P[e]));const w=[];for(let e=0;e<L.length;++e){if(I(w,L[e].imagePosPat)||w.push(L[e].imagePosPat),void 0!==L[e].imageOrientationPatient)if(void 0===y)y=L[e].imageOrientationPatient;else if(!z(y,L[e].imageOrientationPatient))throw new Error("Unsupported multi orientation dicom seg.");if(void 0!==L[e].spacing)if(void 0===D)D=L[e].spacing;else if(!D.equals(L[e].spacing))throw new Error("Unsupported multi resolution dicom seg.")}if(void 0===D)throw new Error("No spacing found for DICOM SEG");if(3!==D.length())throw new Error("Incomplete spacing found for DICOM SEG");if(void 0===y)throw new Error("No imageOrientationPatient found for DICOM SEG");const O=mt(y.map((e=>parseFloat(e))));if(void 0===O)throw new Error("Invalid imageOrientationPatient found for DICOM SEG");w.sort(function(e){const t=e.getInverse();return function(e,n){const i=t.multiplyArray3D(e),r=t.multiplyArray3D(n);return i[2]-r[2]}}(O));const b=function(e){return new q(e[0],e[1],e[2])},A=[];for(const e of w)A.push(b(e));let x;x=void 0!==n?this.#pe(A,a,D,O,n.getGeometry().getOrigins()):this.#fe(A,a,D,O);const R=x.getSize().get(2),E=function(e){return function(t){return t.number===e}},F=new t.constructor(s*R);F.fill(0);const U=x.getOrigins();let M,Q,V;for(let e=0;e<L.length;++e){if(M=T(U,b(L[e].imagePosPat)),-1===M)throw new Error("Cannot find frame origin in mask origins");Q=s*e,V=s*M;const n=h.find(E(L[e].refSegmentNumber));for(let e=0;e<s;++e)if(0!==t[Q+e]){F[V+e]=v?n.number:n.displayValue}}const N=[];for(let e=0;e<R;++e)N.push(e.toString());const B=new $n(x,F,N);v&&(B.setPhotometricInterpretation("PALETTE COLOR"),B.setPaletteColourMap(f));const G=zn(),k=Object.keys(Bn);for(const e of k)G[e]=i(Bn[e]);return G.DimensionOrganizationSequence=u.organizations,G.DimensionIndexSequence=u.indices,G.custom={segments:h,frameInfos:L,SOPInstanceUID:i("00080018")},G.numberOfFiles=R,B.setMeta(G),B}#pe(e,t,n,i,r){const o=function(e,t){return e.findIndex((function(e){return t.isSimilar(e,1e-4)}))},a=[];a.push(e[0]);let s=o(r,e[0]);if(-1===s)throw new Error("No index for first frame origin");for(let t=1;t<e.length;++t){const n=e[t],i=o(r,n);if(-1===i)throw new Error("No index for frame origin "+t);if(i!==s+1)for(let e=s+1;e<i;++e)a.push(r[e]);a.push(n),s=i}const l=new at([e[0]],t,n,i);for(let e=1;e<a.length;++e)l.appendOrigin(a[e],e);return l}#fe(e,t,n,i){c.warn("Guessing image geometry for DICOM SEG");const r=new at([e[0]],t,n,i),o=function(e){let t=e>b;return t&&(t=e>.001,t?(t=e>.01,t||c.warn("Using larger+ real world epsilon in SEG pos pat adding")):c.warn("Using larger real world epsilon in SEG pos pat adding")),t},a=[];a.push(e[0]);let l=0;for(let t=1;t<e.length;++t){++l;let n=new s([0,0,l]),i=r.indexToWorld(n).get3D();const u=e[t];let d=u.getDistance(i);const h=d;for(;o(d);)if(c.debug("Adding intermediate pos pats for DICOM seg at "+i.toString()),a.push(i),++l,n=new s([0,0,l]),i=r.indexToWorld(n).get3D(),d=u.getDistance(i),d>h)throw new Error("Test distance is increasing when adding intermediate pos pats");a.push(u)}const u=new at([e[0]],t,n,i);for(let e=1;e<a.length;++e)u.appendOrigin(a[e],e);return u}toDicom(e,t,n,i){const r=e.getMeta();void 0===t&&(t=r.segments);const o=e.getGeometry(),a=o.getSize();r.Rows=a.get(1),r.Columns=a.get(0);const s=new Date;r.ContentDate=Ot(Lt(s)),r.ContentTime=bt(wt(s)),void 0!==n&&(r.StudyInstanceUID=n.getMeta().StudyInstanceUID);const l=[];for(const e of t)l.push(bn(e));var u,d;r.SegmentSequence={value:l},r.SharedFunctionalGroupsSequence={value:[{PlaneOrientationSequence:{value:[(d=o.getOrientation(),{ImageOrientationPatient:[d.get(0,0),d.get(1,0),d.get(2,0),d.get(0,1),d.get(1,1),d.get(2,1)]})]},PixelMeasuresSequence:{value:[(u=o.getSpacing(),{SpacingBetweenSlices:u.get(2),PixelSpacing:[u.get(1),u.get(0)]})]}}]};const h=function(e,t){const n=e.getGeometry().getSize(),i=n.getDimSize(2),r={};for(let o=0;o<n.get(2);++o){const n=kn(e,t,o*i),a=Object.keys(n);for(const e of a)void 0===r[e]&&(r[e]={}),r[e][o]=n[e]}return r}(e,t),g=[],S=[],m=[];for(const i of t){const t=i.number,r=t-1;if(void 0===h[r])continue;const o=Object.keys(h[r]);for(let i=o.length-1;i>=0;--i){const a=Number.parseInt(o[i],10);S.push(h[r][a]);const s=e.getGeometry().getOrigins()[a],l=[s.getX(),s.getY(),s.getZ()],c={dimIndex:[t,o.length-i],imagePosPat:l,refSegmentNumber:t};if(void 0!==n){const e=n.getGeometry().worldToIndex(new U([s.getX(),s.getY(),s.getZ()]));c.derivationImages=[{sourceImages:[{referencedSOPInstanceUID:n.getImageUid(e),referencedSOPClassUID:n.getMeta().SOPClassUID}]}],m.push({ReferencedSOPInstanceUID:n.getImageUid(e),ReferencedSOPClassUID:n.getMeta().SOPClassUID})}g.push(c)}}r.NumberOfFrames=S.length.toString();const p=[];for(const e of g)p.push(Qn(e));if(r.PerFrameFunctionalGroupsSequence={value:p},void 0!==n){const e=[];e.push({ReferencedInstanceSequence:{value:m},SeriesInstanceUID:n.getMeta().SeriesInstanceUID}),r.ReferencedSeriesSequence={value:e}}void 0!==i&&function(e,t){const n=Object.keys(t);for(const i of n)void 0!==e[i]&&c.debug("Overwritting tag: "+i),e[i]=t[i]}(r,i);const f=Zt(r),D=a.getDimSize(2),y=S.length*D/8,v=new le("OB");return v.tag=new ge("7FE0","0010"),v.vl=y,v.value=S,f["7FE00010"]=v,f}}class Yn{constructor(e){this.poolSize=e,this.taskQueue=[],this.freeThreads=[];for(let t=0;t<e;++t)this.freeThreads.push(new Xn(this));this.runningThreads=[]}addWorkerTask(e){if(this.freeThreads.length===this.poolSize&&this.onworkstart({type:"work-start"}),this.freeThreads.length>0){const t=this.freeThreads.shift();this.runningThreads.push(t),t.run(e)}else this.taskQueue.push(e)}abort(){this.#De(),this.onabort({type:"work-abort"}),this.onworkend({type:"work-end"})}onTaskEnd(e){if(this.taskQueue.length>0){const t=this.taskQueue.shift();e.run(t)}else{e.stop(),this.freeThreads.push(e);for(let t=0;t<this.runningThreads.length;++t)this.runningThreads[t].getId()===e.getId()&&this.runningThreads.splice(t,1);this.freeThreads.length===this.poolSize&&(this.onwork({type:"work"}),this.onworkend({type:"work-end"}))}}handleWorkerError=e=>{this.#De(),this.onerror({error:e}),this.onworkend({type:"work-end"})};#De(){this.taskQueue=[];for(let e=0;e<this.runningThreads.length;++e)this.runningThreads[e].stop();this.runningThreads=[]}onworkstart(e){}onworkitem(e){}onwork(e){}onworkend(e){}onerror(e){}onabort(e){}}class Xn{constructor(e){this.parentPool=e,this.id=Math.random().toString(36).substring(2,15),this.runningTask=null,this.worker}getId(){return this.id}run(e){this.runningTask=e,void 0===this.worker&&(this.worker=new Worker(this.runningTask.script),this.worker.onmessage=this.onmessage,this.worker.onerror=this.onerror),this.worker.postMessage(this.runningTask.startMessage)}stop(){void 0!==this.worker&&(this.worker.terminate(),this.worker=void 0)}onmessage=e=>{e.itemNumber=this.runningTask.info.itemNumber,e.numberOfItems=this.runningTask.info.numberOfItems,e.index=this.runningTask.info.index,this.parentPool.onworkitem(e),this.parentPool.onTaskEnd(this)};onerror=e=>{e.itemNumber=this.runningTask.info.itemNumber,e.numberOfItems=this.runningTask.info.numberOfItems,e.index=this.runningTask.info.index,this.parentPool.handleWorkerError(e),this.stop()}}class jn{constructor(e,t,n){this.script=e,this.startMessage=t,this.info=n}}const Zn=new URL(o(976),o.b);class _n{#ye=new Yn(1);constructor(){this.#ye.onerror=e=>{console.error("Labeling failed!",e.error)}}run(e,t){this.#ye.onworkitem=this.ondone;const n=new jn(Zn,function(e,t){const n=t.length(),i=Array(n).fill(0);for(let e=0;e<n;e++)i[e]=t.getDimSize(e);const r=Array(n).fill(0);for(let e=0;e<n;e++)r[e]=t.get(e);return{imageBuffer:e,unitVectors:i,sizes:r,totalSize:t.getTotalSize()}}(e,t),{});this.#ye.addWorkerTask(n)}ondone(e){}}function Kn(e){return(new qt).create(e,e["7FE00010"].value[0],1)}function Jn(e){return(new Wn).create(e,e["7FE00010"].value[0])}class $n{#ve;#O;#Ce;#n=new Je(1,0);#Ie=null;#Te=!0;#Pe=!0;#Le="MONOCHROME2";#we;#Oe=0;#be;#Ae={};#xe=null;#Re=null;#Ee=null;#Fe=new Xe;#qe;constructor(e,t,n){this.#ve=e,this.#O=t,this.#Ce=n,this.#qe=null,this.#be=this.#O.length/this.#ve.getSize().getTotalSize()}getImageUid(e){let t=this.#Ce[0];return 1!==this.#Ce.length&&void 0!==e&&(t=this.#Ce[this.getSecondaryOffset(e)]),t}getOriginForImageUid(e){let t;const n=this.#Ce.indexOf(e);return-1!==n&&(t=this.getGeometry().getOrigins()[n]),t}includesImageUid(e){return this.#Ce.includes(e)}containsImageUids(e){return function(e,t){if(null===e||null===t||void 0===e||void 0===t)return!1;if(0===e.length||0===t.length||t.length>e.length)return!1;for(const n of t)if(!e.includes(n))return!1;return!0}(this.#Ce,e)}getGeometry(){return this.#ve}getBuffer(){return this.#O}canQuantify(){return 1===this.getNumberOfComponents()}canWindowLevel(){return this.isMonochrome()}isMonochrome(){return Ct(this.getPhotometricInterpretation())}canScroll(e){const t=this.getGeometry().getSize();let n=1;return void 0!==this.#Ae.numberOfFiles&&(n=this.#Ae.numberOfFiles),t.canScroll(e)||1!==n}#Ue(){return this.#ve.getSize().getTotalSize(2)}getSecondaryOffset(e){return this.#ve.getSize().indexToOffset(e,2)}getRescaleSlopeAndIntercept(e){let t=this.#n;if(!this.isConstantRSI()){if(void 0===e)throw new Error("Cannot get non constant RSI with empty slice index.");const n=this.getSecondaryOffset(e);void 0!==this.#Ie[n]?t=this.#Ie[n]:c.warn("undefined non constant rsi at "+n)}return t}#Me(e){return this.#Ie[e]}setRescaleSlopeAndIntercept(e,t){if(this.#Te=this.#Te&&e.isID(),this.#Pe){if(!this.#n.equals(e))if(void 0===t)this.#n=e;else{this.#Pe=!1,this.#Ie=[];for(let e=0,t=this.#Ue();e<t;++e)this.#Ie.push(this.#n);this.#n=null,this.#Ie.splice(t,0,e)}}else{if(void 0===t)throw new Error("Cannot store non constant RSI with empty slice index.");this.#Ie.splice(t,0,e)}}isIdentityRSI(){return this.#Te}isConstantRSI(){return this.#Pe}getPhotometricInterpretation(){return this.#Le}setPhotometricInterpretation(e){this.#Le=e}setPaletteColourMap(e){this.#we=e,this.#Qe({type:"imagecontentchange"})}getPaletteColourMap(){return this.#we}updatePaletteColourMap(e,t){this.#we.red[e]=t.r,this.#we.green[e]=t.g,this.#we.blue[e]=t.b,this.#Qe({type:"imagecontentchange"})}getPlanarConfiguration(){return this.#Oe}setPlanarConfiguration(e){this.#Oe=e}getNumberOfComponents(){return this.#be}getMeta(){return this.#Ae}setMeta(e){this.#Ae=e}getValueAtOffset(e){return this.#O[e]}getOffsets(e){let t;if("number"==typeof e){if(1!==this.#be)throw new Error("Number of components is not 1 for getting single value.");t=[e]}else if(void 0!==e.r&&void 0!==e.g&&void 0!==e.b){if(3!==this.#be)throw new Error("Number of components is not 3 for getting RGB value.");t=[e.r,e.g,e.b]}const n=[];let i;for(let e=0;e<this.#O.length;e+=this.#be){i=!0;for(let n=0;n<this.#be;++n)if(this.#O[e+n]!==t[n]){i=!1;break}i&&n.push(e)}return n}hasValues(e){if(void 0===e||0===e.length)return[];const t=[];for(let n=0;n<e.length;++n)1===this.#be?t.push([e[n]]):3===this.#be&&t.push([e[n].r,e[n].g,e[n].b]);let n;1===this.#be?n=function(e,t){return e[0]===t[0]}:3===this.#be&&(n=function(e,t){return e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]});const i=function(e){return function(t){return n(t,e)}},r=new Array(e.length);r.fill(!1);const o=t.slice();let a,s;for(let e=0,n=this.#O.length;e<n;e+=this.#be){s=[];for(let n=0;n<o.length;++n){a=!0;for(let t=0;t<this.#be;++t)if(this.#O[e+t]!==o[n][t]){a=!1;break}a&&(r[t.findIndex(i(o[n]))]=!0,s.push(n))}for(let e=0;e<s.length;++e)o.splice(s[e],1);if(0===o.length)break}return r}clone(){const e=this.#O.slice(0),t=new $n(this.getGeometry(),e,this.#Ce);if(this.isConstantRSI())t.setRescaleSlopeAndIntercept(this.getRescaleSlopeAndIntercept());else for(let e=0;e<this.#Ue();++e)t.setRescaleSlopeAndIntercept(this.#Me(e),e);return t.setPhotometricInterpretation(this.getPhotometricInterpretation()),t.setPlanarConfiguration(this.getPlanarConfiguration()),t.setMeta(this.getMeta()),t}#Ve(e){let t=this.#O;if(this.#O=Be(8*this.#O.BYTES_PER_ELEMENT,this.#Ae.PixelRepresentation,e),null===this.#O)throw new Error("Cannot reallocate data for image.");this.#O.set(t),t=null}appendSlice(e){if(null===e)throw new Error("Cannot append null slice");const t=e.getGeometry().getSize();let n=this.#ve.getSize();if(1!==t.get(2))throw new Error("Cannot append more than one slice");if(n.get(0)!==t.get(0))throw new Error("Cannot append a slice with different number of columns");if(n.get(1)!==t.get(1))throw new Error("Cannot append a slice with different number of rows");if(!this.#ve.getOrientation().isSimilar(e.getGeometry().getOrientation(),b))throw new Error("Cannot append a slice with different orientation");if(this.#Le!==e.getPhotometricInterpretation())throw new Error("Cannot append a slice with different photometric interpretation");for(const t in this.#Ae)if("windowPresets"!==t&&"numberOfFiles"!==t&&"custom"!==t&&"ImageOrientationPatient"!==t&&this.#Ae[t]!==e.getMeta()[t])throw new Error("Cannot append a slice with different "+t+": "+this.#Ae[t]+" != "+e.getMeta()[t]);const i=e.getDataRange(),r=this.getDataRange();this.#xe={min:Math.min(i.min,r.min),max:Math.max(i.max,r.max)};const o=e.getRescaledDataRange(),a=this.getRescaledDataRange();this.#Re={min:Math.min(o.min,a.min),max:Math.max(o.max,a.max)};const l=e.getGeometry().getInitialTime();let c=!1;void 0===l||this.#ve.hasSlicesAtTime(l)||(this.appendFrame(l,e.getGeometry().getOrigin()),n=this.#ve.getSize(),c=!0);const u=function(e,t){const n=t.getInitialTime(),i=[];return i.push(0),i.push(0),i.push(e.getSliceIndex(t.getOrigin(),n)),void 0!==n&&i.push(n),new s(i)}(this.#ve,e.getGeometry()),d=this.#be*n.getDimSize(2);if(void 0===this.#Ae.numberOfFiles)throw new Error("Missing number of files for buffer manipulation.");const h=d*this.#Ae.numberOfFiles;this.#O.length!==h&&this.#Ve(h);const g=u.get(2);let S=g;void 0!==l&&(S+=this.#ve.getCurrentNumberOfSlicesBeforeTime(l));const m=S*d,p=this.#ve.getCurrentTotalNumberOfSlices()*d;m<p&&this.#O.set(this.#O.subarray(m,p),m+d),this.#O.set(e.getBuffer(),m),c||this.#ve.appendOrigin(e.getGeometry().getOrigin(),g,l),this.setRescaleSlopeAndIntercept(e.getRescaleSlopeAndIntercept(),S);const f=this.#Ce.length;if(this.#Ce.splice(S,0,e.getImageUid()),void 0!==this.#Ae.windowPresets){const t=this.#Ae.windowPresets,n=e.getMeta().windowPresets,i=Object.keys(n);let r=null;for(let e=0;e<i.length;++e){r=i[e];const o=n[r],a=t[r];if(void 0!==a){if((void 0===a.perslice||!1===a.perslice)&&!a.wl[0].equals(o.wl[0])){a.perslice=!0;for(let e=0;e<f-1;++e)a.wl.push(a.wl[0])}void 0!==a.perslice&&!0===a.perslice&&t[r].wl.splice(S,0,o.wl[0])}else t[r]=n[r]}}this.#Qe({type:"imagegeometrychange"})}appendFrameBuffer(e,t){const n=this.#ve.getSize(),i=this.#be*n.getDimSize(2);if(void 0===this.#Ae.numberOfFiles)throw new Error("Missing number of files for frame buffer manipulation.");const r=i*this.#Ae.numberOfFiles;this.#O.length!==r&&this.#Ve(r),t>=this.#Ae.numberOfFiles?c.warn("Ignoring frame at index "+t+" (size: "+this.#Ae.numberOfFiles+")"):(this.#O.set(e,i*t),this.appendFrame(t,new q(0,0,0)))}appendFrame(e,t){this.#ve.appendFrame(t,e),this.#Qe({type:"appendframe"})}getDataRange(){return this.#xe||(this.#xe=this.calculateDataRange()),this.#xe}getRescaledDataRange(){return this.#Re||(this.#Re=this.calculateRescaledDataRange()),this.#Re}getHistogram(){if(!this.#Ee){const e=this.calculateHistogram();this.#xe=e.dataRange,this.#Re=e.rescaledDataRange,this.#Ee=e.histogram}return this.#Ee}addEventListener(e,t){this.#Fe.add(e,t)}removeEventListener(e,t){this.#Fe.remove(e,t)}#Qe=e=>{this.#Fe.fireEvent(e)};setAtOffsets(e,t){let n,i;if("number"==typeof t){if(1!==this.#be)throw new Error("Number of components is not 1 for setting single value.");n=[t]}else if(void 0!==t.r&&void 0!==t.g&&void 0!==t.b){if(3!==this.#be)throw new Error("Number of components is not 3 for setting RGB value.");n=[t.r,t.g,t.b]}for(let t=0,r=e.length;t<r;++t){i=e[t];for(let e=0;e<this.#be;++e)this.#O[i+e]=n[e]}this.#Qe({type:"imagecontentchange"})}setAtOffsetsAndGetOriginals(e,t){const n=[];for(let i=0;i<e.length;++i){const r=e[i];let o=r[0],a=this.#O[o];const s=[];s.push({index:0,value:a});for(let e=0;e<r.length;++e){o=r[e];const n=this.#O[o];a!==n&&(s.push({index:e,value:n}),a=n),this.#O[o]=t}n.push(s)}return this.#Qe({type:"imagecontentchange"}),n}setAtOffsetsWithIterator(e,t){const n=Array.isArray(t);for(let i=0;i<e.length;++i){const r=e[i];let o;o=Ke(n?t[i]:[{index:0,value:t}],r.length);let a=o.next();for(;!a.done;){const e=r[a.index];this.#O[e]=a.value,a=o.next()}}this.#Qe({type:"imagecontentchange"})}getValue(e,t,n,i){const r=new s([e,t,n,i||0]);return this.getValueAtOffset(this.getGeometry().getSize().indexToOffset(r))}getValueAtIndex(e){return this.getValueAtOffset(this.getGeometry().getSize().indexToOffset(e))}getRescaledValue(e,t,n,i){void 0===i&&(i=0);let r=this.getValue(e,t,n,i);if(!this.isIdentityRSI())if(this.isConstantRSI())r=this.getRescaleSlopeAndIntercept().apply(r);else{const o=new s([e,t,n,i]);r=this.getRescaleSlopeAndIntercept(o).apply(r)}return r}getRescaledValueAtIndex(e){return this.getRescaledValueAtOffset(this.getGeometry().getSize().indexToOffset(e))}getRescaledValueAtOffset(e){let t=this.getValueAtOffset(e);if(!this.isIdentityRSI())if(this.isConstantRSI())t=this.getRescaleSlopeAndIntercept().apply(t);else{const n=this.getGeometry().getSize().offsetToIndex(e);t=this.getRescaleSlopeAndIntercept(n).apply(t)}return t}calculateDataRange(){let e=this.getValueAtOffset(0),t=e,n=0;const i=this.getGeometry().getSize();let r=i.getTotalSize();i.length()>=3&&(r=i.getDimSize(3));for(let i=0;i<r;++i)n=this.getValueAtOffset(i),n>t&&(t=n),n<e&&(e=n);return{min:e,max:t}}calculateRescaledDataRange(){if(this.isIdentityRSI())return this.getDataRange();if(this.isConstantRSI()){const e=this.getDataRange(),t=this.getRescaleSlopeAndIntercept().apply(e.min),n=this.getRescaleSlopeAndIntercept().apply(e.max);return{min:t<n?t:n,max:t>n?t:n}}{let e=this.getRescaledValueAtOffset(0),t=e,n=0;const i=this.getGeometry().getSize();let r=i.getTotalSize();3===i.length()&&(r=i.getDimSize(3));for(let i=0;i<r;++i)n=this.getRescaledValueAtOffset(i),n>t&&(t=n),n<e&&(e=n);return{min:e,max:t}}}calculateHistogram(){const e=this.getGeometry().getSize(),t=[];let n=this.getValueAtOffset(0),i=n,r=0,o=this.getRescaledValueAtOffset(0),a=o,s=0;for(let l=0,c=e.getTotalSize();l<c;++l)r=this.getValueAtOffset(l),r>i&&(i=r),r<n&&(n=r),s=this.getRescaledValueAtOffset(l),s>a&&(a=s),s<o&&(o=s),t[s]=(t[s]||0)+1;const l={min:n,max:i},c={min:o,max:a},u=[];for(let e=o;e<=a;++e)u.push([e,t[e]||0]);return{dataRange:l,rescaledDataRange:c,histogram:u}}convolute2D(e){if(9!==e.length)throw new Error("The convolution matrix does not have a length of 9; it has "+e.length);const t=this.clone(),n=t.getBuffer(),i=this.getGeometry().getSize(),r=i.getDimSize(2)*this.getNumberOfComponents();for(let t=0;t<i.get(2);++t)this.convoluteBuffer(e,n,t*r);return t}convoluteBuffer(e,t,n){const i=this.getGeometry().getSize(),r=i.get(0),o=i.get(1),a=this.getNumberOfComponents();let s=1,l=1;3===a&&(0===this.getPlanarConfiguration()?s=3:l=i.getDimSize(2));const c=[];c[0]=(-r-1)*s,c[1]=-r*s,c[2]=(1-r)*s,c[3]=-s,c[4]=0,c[5]=1*s,c[6]=(r-1)*s,c[7]=r*s,c[8]=(r+1)*s;const u=[];u[0]=c[4],u[1]=c[4],u[2]=c[5],u[3]=c[4],u[4]=c[4],u[5]=c[5],u[6]=c[7],u[7]=c[7],u[8]=c[8];const d=[];d[0]=c[1],d[1]=c[1],d[2]=c[2],d[3]=c[4],d[4]=c[4],d[5]=c[5],d[6]=c[7],d[7]=c[7],d[8]=c[8];const h=[];h[0]=c[1],h[1]=c[1],h[2]=c[2],h[3]=c[4],h[4]=c[4],h[5]=c[5],h[6]=c[4],h[7]=c[4],h[8]=c[5];const g=[];g[0]=c[3],g[1]=c[4],g[2]=c[5],g[3]=c[3],g[4]=c[4],g[5]=c[5],g[6]=c[6],g[7]=c[7],g[8]=c[8];const S=[];S[0]=c[0],S[1]=c[1],S[2]=c[2],S[3]=c[3],S[4]=c[4],S[5]=c[5],S[6]=c[3],S[7]=c[4],S[8]=c[5];const m=[];m[0]=c[3],m[1]=c[4],m[2]=c[4],m[3]=c[3],m[4]=c[4],m[5]=c[4],m[6]=c[6],m[7]=c[7],m[8]=c[7];const p=[];p[0]=c[0],p[1]=c[1],p[2]=c[1],p[3]=c[3],p[4]=c[4],p[5]=c[4],p[6]=c[6],p[7]=c[7],p[8]=c[7];const f=[];f[0]=c[0],f[1]=c[1],f[2]=c[1],f[3]=c[3],f[4]=c[4],f[5]=c[4],f[6]=c[3],f[7]=c[4],f[8]=c[4];let D=n,y=0,v=[];for(let n=0;n<a;++n){D+=n*l;for(let n=0;n<o;++n)for(let i=0;i<r;++i){v=c,0===i&&0===n?v=u:0===i&&n===o-1?v=h:i===r-1&&0===n?v=m:i===r-1&&n===o-1?v=f:0===i&&n!==o-1&&0!==n?v=d:i===r-1&&n!==o-1&&0!==n?v=p:0!==i&&i!==r-1&&0===n?v=g:0!==i&&i!==r-1&&n===o-1&&(v=S),y=0;for(let t=0;t<9;++t)y+=this.getValueAtOffset(D+v[t])*e[t];t[D]=y,D+=s}}}transform(e){const t=this.clone(),n=t.getBuffer();for(let i=0,r=n.length;i<r;++i)n[i]=e(t.getValueAtOffset(i));return t}compose(e,t){const n=this.clone(),i=n.getBuffer();for(let n=0,r=i.length;n<r;++n)i[n]=Math.floor(t(this.getValueAtOffset(n),e.getValueAtOffset(n)));return n}recalculateLabels(){if(null===this.#qe){this.#qe=new _n;const e=this.#ve.getSpacing(),t=e.get(0)*e.get(1)*e.get(2)*.001;this.#qe.ondone=e=>{const n=e.data.labels;for(const e of n)e.centroid=this.#ve.indexToWorld(new s(e.centroidIndex)),e.volume=e.count*t;const i=n.sort(((e,t)=>t.volume-e.volume)).sort(((e,t)=>e.id-t.id));this.#Qe({type:"labelschanged",labels:i})}}this.#qe.run(this.#O,this.#ve.getSize())}}const ei={CT:{mediastinum:new u(40,400),lung:new u(-500,1500),bone:new u(500,2e3),brain:new u(40,80),head:new u(90,350)}};class ti{create(e,t){const n=new ri(t);"MONOCHROME1"===t.getPhotometricInterpretation()&&n.setColourMap("invPlain");let i={};void 0!==t.getMeta().windowPresets&&(i=t.getMeta().windowPresets),i.minmax={name:"minmax"};const r=t.getMeta().Modality;let o;o=void 0!==w.wlPresets&&void 0!==w.wlPresets[r]?w.wlPresets[r]:ei[r];for(const e in o){const t=o[e];i[e]={wl:[new u(t.center,t.width)],name:e}}return n.setWindowPresets(i),n.init(),n}}const ni=["wlchange","wlpresetadd","colourmapchange","positionchange","opacitychange","alphafuncchange"];function ii(e,t){return(new ti).create(e,t)}class ri{#Ne;#Be;#Pe;#Ge={minmax:{name:"minmax"}};#ke=null;#He;#ze="plain";#We=null;#K;#Fe=new Xe;constructor(e){this.#Ne=e,this.#Ne.addEventListener("appendframe",(()=>{const e=this.getCurrentIndex();if(3===e.length()){const t=e.getValues();t.push(0),this.setCurrentIndex(new s(t))}}))}getImage(){return this.#Ne}setImage(e){this.#Ne=e}getOrientation(){return this.#K}setOrientation(e){this.#K=e}init(){this.setInitialIndex()}setInitialIndex(){const e=this.#Ne.getGeometry().getSize(),t=new Array(e.length());t.fill(0),t[0]=Math.floor(e.get(0)/2),t[1]=Math.floor(e.get(1)/2),t[2]=Math.floor(e.get(2)/2),this.setCurrentIndex(new s(t),!0)}getPlaybackMilliseconds(e){return e||(e=10),Math.round(1e3/e)}#Ye=function(e,t){return 255};getAlphaFunction(){return this.#Ye}setAlphaFunction(e){this.#Ye=e,this.#Qe({type:"alphafuncchange"})}#Xe(){if(this.#ke&&void 0!==this.#Ge[this.#ke]&&void 0!==this.#Ge[this.#ke].perslice&&!0===this.#Ge[this.#ke].perslice){this.getCurrentIndex()||this.setInitialIndex();const e=this.getCurrentIndex(),t=this.#Ne.getSecondaryOffset(e),n=this.#Ge[this.#ke].wl[t];this.setWindowLevel(n,this.#ke,!0)}if(void 0===this.#He&&this.setWindowLevelPresetById(0,!0),void 0===this.#Pe||this.#Ne.isConstantRSI()!==this.#Pe){let e,t;this.#Pe=this.#Ne.isConstantRSI(),this.#Pe?(e=this.#Ne.getRescaleSlopeAndIntercept(),t=!0):(e=new Je(1,0),t=!1);const n=new l(e,this.#Ne.getMeta().BitsStored);this.#Be=new h(n,1===this.#Ne.getMeta().PixelRepresentation,t)}const e=this.#Be.getVoiLut();let t;if(void 0!==e&&(t=e.getWindowLevel()),void 0===e||!this.#He.equals(t)){const e=new d(this.#He);this.#Be.setVoiLut(e)}return this.#Be}getWindowPresets(){return this.#Ge}getWindowPresetsNames(){return Object.keys(this.#Ge)}setWindowPresets(e){this.#Ge=e}addWindowPresets(e){const t=Object.keys(e);let n=null;for(let i=0;i<t.length;++i)if(n=t[i],void 0!==this.#Ge[n]){if(void 0!==this.#Ge[n].perslice&&!0===this.#Ge[n].perslice)throw new Error("Cannot add perslice preset");this.#Ge[n]=e[n]}else this.#Ge[n]=e[n],this.#Qe({type:"wlpresetadd",name:n})}getCurrentWindowPresetName(){return this.#ke}getColourMap(){return this.#ze}#je(){return f[this.#ze]}setColourMap(e){if(!f[e])throw new Error("Unknown colour map: '"+e+"'");this.#ze=e,this.#Qe({type:"colourmapchange",value:[e]})}getCurrentPosition(){return this.#We}getCurrentIndex(){const e=this.getCurrentPosition();return e?this.getImage().getGeometry().worldToIndex(e):null}getCurrentImageUid(){return this.#Ne.getImageUid(this.getCurrentIndex())}getOriginForImageUid(e){return this.#Ne.getOriginForImageUid(e)}includesImageUid(e){return this.#Ne.includesImageUid(e)}isPositionInBounds(e){void 0===e&&(e=this.#We);const t=this.#Ne.getGeometry(),n=t.worldToIndex(e),i=[this.getScrollDimIndex()];return 4===n.length()&&i.push(3),t.isIndexInBounds(n,i)}getOrigin(e){const t=this.#Ne.getGeometry();let n=0;return void 0!==e&&(n=t.worldToIndex(e).get(2)),t.getOrigins()[n]}setCurrentIndex(e,t){const n=this.#Ne.getGeometry().indexToWorld(e);return this.setCurrentPosition(n,t)}setCurrentPosition(e,t){void 0===t&&(t=!1);const n=this.#Ne.getGeometry(),i=n.worldToIndex(e),r=[this.getScrollDimIndex()];if(4===i.length()&&r.push(3),!n.isIndexInBounds(i,r))return this.#We=e,t||this.#Qe({type:"positionchange",value:[i.getValues(),e.getValues()],valid:!1}),!1;let o=null,a=null;if(this.getCurrentPosition()&&(a=this.getCurrentIndex()),a)if(a.canCompare(i))o=a.compare(i);else{o=[];const e=Math.min(a.length(),i.length());for(let t=0;t<e;++t)a.get(t)!==i.get(t)&&o.push(t);const t=Math.max(a.length(),i.length());for(let n=e;n<t;++n)o.push(n)}else{o=[];for(let e=0;e<i.length();++e)o.push(e)}if(this.#We=e,!t){const t={type:"positionchange",value:[i.getValues(),e.getValues()],diffDims:o,data:{imageUid:this.#Ne.getImageUid(i)}};if(this.#Ne.canQuantify()){const e=this.#Ne.getRescaledValueAtIndex(i);t.value.push(e)}this.#Qe(t)}return!0}setWindowLevel(e,t,n){if(void 0===t&&(t="manual"),"manual"!==t&&void 0===this.#Ge[t])throw new Error("Unknown window level preset: '"+t+"'");void 0===n&&(n=!1);const i=!e.equals(this.#He),r=this.#ke!==t;(i||r)&&(this.#He=e,this.#ke=t,"manual"===t&&(void 0!==this.#Ge[t]?this.#Ge[t].wl[0]=e:this.addWindowPresets({manual:{wl:[e],name:"manual"}})),this.#Qe({type:"wlchange",value:[e.center,e.width,t],wc:e.center,ww:e.width,skipGenerate:n}))}getWindowLevel(){return this.#Xe().getVoiLut().getWindowLevel()}setWindowLevelPreset(e,t){const n=this.getWindowPresets()[e];if(void 0===n)throw new Error("Unknown window level preset: '"+e+"'");"minmax"===e&&void 0===n.wl&&(n.wl=[this.getWindowLevelMinMax()]);let i=n.wl[0];if(void 0!==n.perslice&&!0===n.perslice){const e=this.#Ne.getSecondaryOffset(this.getCurrentIndex());i=n.wl[e]}this.setWindowLevel(i,e,t)}setWindowLevelPresetById(e,t){const n=Object.keys(this.getWindowPresets());this.setWindowLevelPreset(n[e],t)}addEventListener(e,t){this.#Fe.add(e,t)}removeEventListener(e,t){this.#Fe.remove(e,t)}#Qe=e=>{this.#Fe.fireEvent(e)};getWindowLevelMinMax(){const e=this.getImage().getRescaledDataRange(),t=e.min;let n=e.max-t;return n<1&&(c.warn("Zero or negative window width, defaulting to one."),n=1),new u(t+n/2,n)}setWindowLevelMinMax(){const e=this.getWindowLevelMinMax();this.setWindowLevel(e,"minmax")}generateImageData(e,t){void 0===t&&(this.getCurrentIndex()||this.setInitialIndex(),t=this.getCurrentIndex());const n=this.getImage(),i=!n.isConstantRSI(),r=_e(n,t,i,this.getOrientation()),o=n.getPhotometricInterpretation();switch(o){case"MONOCHROME1":case"MONOCHROME2":!function(e,t,n,i,r){let o=0,a=0,s=t.next();for(;!s.done;)a=i.getValue(s.value),e.data[o]=r.red[a],e.data[o+1]=r.green[a],e.data[o+2]=r.blue[a],e.data[o+3]=n(s.value,s.index),o+=4,s=t.next()}(e,r,this.getAlphaFunction(),this.#Xe(),this.#je());break;case"PALETTE COLOR":!function(e,t,n,i,r){const o=function(e){return e>>8};r&&c.info("Scaling 16bits data to 8bits.");let a=0,s=0,l=t.next();for(;!l.done;)s=l.value,r?(e.data[a]=o(i.red[s]),e.data[a+1]=o(i.green[s]),e.data[a+2]=o(i.blue[s])):(e.data[a]=i.red[s],e.data[a+1]=i.green[s],e.data[a+2]=i.blue[s]),e.data[a+3]=n(s,l.index),a+=4,l=t.next()}(e,r,this.getAlphaFunction(),n.getPaletteColourMap(),16===n.getMeta().BitsStored);break;case"RGB":!function(e,t,n){let i=0,r=t.next();for(;!r.done;)e.data[i]=r.value[0],e.data[i+1]=r.value[1],e.data[i+2]=r.value[2],e.data[i+3]=n(r.value,r.index),i+=4,r=t.next()}(e,r,this.getAlphaFunction());break;case"YBR_FULL":!function(e,t,n){let i=0,r=null,o=t.next();for(;!o.done;)a=o.value[0],s=o.value[1],r={r:a+1.402*((l=o.value[2])-128),g:a-.34414*(s-128)-.71414*(l-128),b:a+1.772*(s-128)},e.data[i]=r.r,e.data[i+1]=r.g,e.data[i+2]=r.b,e.data[i+3]=n(o.value,o.index),i+=4,o=t.next();var a,s,l}(e,r,this.getAlphaFunction());break;default:throw new Error("Unsupported photometric interpretation: "+o)}}getScrollDimIndex(){let e=null;const t=this.getOrientation();return e=void 0!==t?t.getThirdColMajorDirection():2,e}isAquisitionOrientation(){return E(this.#K)}}class oi{#Ze;#j;#_e;#Ke;#Je;constructor(e,t){this.#Ze=e,this.#j=e.getRealSpacing(),this.#_e=e.getOrientation(),this.#Ke=t,this.#Je=function(e,t){let n=e.asOneAndZeros().multiply(t);return e.asOneAndZeros().getAbs().isSimilar(ct().getAbs())&&(n=n.getAbs()),n}(this.#_e,t)}getViewOrientation(){return this.#Ke}getTargetOrientation(){return this.#Je}getOffset3DFromPlaneOffset(e){const t=new O(e.x,e.y,0),n=this.getTargetDeOrientedVector3D(t);return new O(n.getX()*this.#j.get(0),n.getY()*this.#j.get(1),n.getZ()*this.#j.get(2))}getPlaneOffsetFromOffset3D(e){const t=new O(e.x/this.#j.get(0),e.y/this.#j.get(1),e.z/this.#j.get(2)),n=this.getTargetOrientedVector3D(t);return{x:n.getX(),y:n.getY()}}getTargetOrientedVector3D(e){let t=e;return void 0!==this.#Je&&(t=this.#Je.getInverse().multiplyVector3D(e)),t}getTargetDeOrientedVector3D(e){let t=e;return void 0!==this.#Je&&(t=this.#Je.multiplyVector3D(e)),t}getTargetDeOrientedPoint3D(e){let t=e;return void 0!==this.#Je&&(t=this.#Je.multiplyPoint3D(e)),t}getImageOrientedVector3D(e){let t=e;if(void 0!==this.#Ke){const n=lt([e.getX(),e.getY(),e.getZ()],this.#Ke);t=new O(n[0],n[1],n[2])}return t}getImageOrientedPoint3D(e){let t=e;if(void 0!==this.#Ke){const n=lt([e.getX(),e.getY(),e.getZ()],this.#Ke);t=new q(n[0],n[1],n[2])}return t}getImageDeOrientedVector3D(e){let t=e;if(void 0!==this.#Ke){const n=st([e.getX(),e.getY(),e.getZ()],this.#Ke);t=new O(n[0],n[1],n[2])}return t}getImageDeOrientedPoint3D(e){let t=e;if(void 0!==this.#Ke){const n=st([e.getX(),e.getY(),e.getZ()],this.#Ke);t=new q(n[0],n[1],n[2])}return t}getPositionFromPlanePoint(e,t){const n=new q(e.getX(),e.getY(),t),i=this.getImageOrientedPoint3D(n);return this.#Ze.pointToWorld(i)}getPlanePointFromPosition(e){const t=this.#Ze.worldToPoint(e);return this.getImageDeOrientedPoint3D(t)}getCosines(){return[(e=this.#Je).get(0,0),e.get(1,0),e.get(2,0),e.get(0,1),e.get(1,1),e.get(2,1)];var e}getPlanePoints(e){const t=this.worldToIndex(e),n=this.indexToWorld(t),i=this.getPlanePointFromPosition(n),r=this.getPositionFromPlanePoint(new F(0,0),i.getZ()),o=this.#Ze.getOrigins(),a=o[r.getClosest(o)],s=r.getValues(),l=a.getValues(),c=this.getNativeScrollDimIndex();s[c]=l[c];const u=this.getCosines();return[new q(s[0],s[1],s[2]),new q(u[0],u[1],u[2]),new q(u[3],u[4],u[5])]}worldToIndex(e){return this.#Ze.worldToIndex(e)}indexToWorld(e){return this.#Ze.indexToWorld(e)}isAquisitionOrientation(){return E(this.#Ke)}getTargetOrientedPositiveXYZ(e){const t=st([e.x,e.y,e.z],this.#Je);return{x:t[0],y:t[1],z:t[2]}}getScrollDimIndex(){let e=null;return e=void 0!==this.#Ke?this.#Ke.getThirdColMajorDirection():2,e}getNativeScrollDimIndex(){let e=null;return e=void 0!==this.#_e?this.#_e.getThirdColMajorDirection():2,e}}class ai{#R;constructor(e){this.#R=e}getCurrentPosition(){return this.#R.getCurrentPosition()}setCurrentPosition(e,t){let n=!1;return void 0!==e&&(n=this.#R.setCurrentPosition(e,t)),n}}class si{#$e;#ve;#et;constructor(e){this.#$e=new ai(e),this.#ve=e.getImage().getGeometry(),this.#et=e.getScrollDimIndex()}getGeometry(){return this.#ve}getScrollDimIndex(){return this.#et}getMaximumDimValue(e){return this.#ve.getSize().get(e)-1}getMaximumScrollValue(){return this.getMaximumDimValue(this.#et)}getCurrentPosition(){return this.#$e.getCurrentPosition()}getCurrentPositionDimValue(e){return this.getCurrentIndex().get(e)}getCurrentPositionScrollValue(){return this.getCurrentPositionDimValue(this.#et)}getCurrentPositionAtDimValue(e,t){const n=this.getCurrentIndex().getValues();return n[e]=t,this.#ve.indexToWorld(new s(n))}getCurrentPositionAtScrollValue(e){return this.getCurrentPositionAtDimValue(this.#et,e)}getCurrentIndex(){return this.#ve.worldToIndex(this.getCurrentPosition())}setCurrentPosition(e,t){let n=!1;return void 0!==e&&(n=this.#$e.setCurrentPosition(e,t)),n}setCurrentPositionSafe(e,t){let n=!1;return this.isPositionInBounds(e)&&(n=this.setCurrentPosition(e,t)),n}merge(e){if(this.#et!==e.getScrollDimIndex())throw new Error("Cannot merge helper of a view with different orientation");this.#ve=function(e,t){const n=e.getOrientation();if(!n.isSimilar(t.getOrientation()))throw new Error("Cannot merge geometries with different orientation");const i=n.getInverse(),r=function(e,t){return e.map(((e,n)=>Math.min(e,t[n])))},o=new ot(r(e.getSpacing().getValues(),t.getSpacing().getValues())),a=function(e){return i.multiplyPoint3D(e.get3D())},s=e.getRange().map(a),l=t.getRange().map(a),c=r(s[0].getValues(),l[0].getValues()),u=(d=s[1].getValues(),h=l[1].getValues(),d.map(((e,t)=>Math.max(e,h[t]))));var d,h;const g=[];for(let e=0;e<c.length;++e)g.push(Math.round(Math.abs(u[e]-c[e])/o.get(e)));const S=new $e(g),m=[];for(let e=0;e<S.get(2);++e){const t=c.slice();t[2]=c[2]+e*o.get(2);const i=new q(t[0],t[1],t[2]);m.push(n.multiplyPoint3D(i))}return new at(m,S,o,n)}(this.#ve,e.getGeometry())}isPositionInBounds(e){const t=this.#ve.worldToIndex(e),n=[this.#et];return 4===t.length()&&n.push(3),this.#ve.isIndexInBounds(t,n)}getIncrementPosition(e){const t=this.getCurrentIndex().next(e);return this.#ve.indexToWorld(t)}getDecrementPosition(e){const t=this.getCurrentIndex().previous(e);return this.#ve.indexToWorld(t)}incrementPosition(e){return this.setCurrentPositionSafe(this.getIncrementPosition(e))}decrementPosition(e){return this.setCurrentPositionSafe(this.getDecrementPosition(e))}incrementPositionAlongScroll(){return this.incrementPosition(this.#et)}decrementPositionAlongScroll(){return this.decrementPosition(this.#et)}}class li{#R;#tt;#nt;#it;#rt=!1;constructor(e){if(void 0===e.getImage())throw new Error("View does not have an image, cannot setup controller");this.#R=e,this.#tt=new oi(e.getImage().getGeometry(),e.getOrientation()),this.#nt=new si(e),"SEG"===e.getImage().getMeta().Modality&&(this.#rt=!0)}getPlaneHelper(){return this.#tt}isMask(){return this.#rt}initialise(){this.setWindowLevelPresetById(0),this.setCurrentPosition(this.getPositionFromPlanePoint(new F(0,0)))}getModality(){return this.#R.getImage().getMeta().Modality}getSopClassUid(){return this.#R.getImage().getMeta().SOPClassUID}getWindowLevelPresetsNames(){return this.#R.getWindowPresetsNames()}addWindowLevelPresets(e){return this.#R.addWindowPresets(e)}setWindowLevelPreset(e){this.#R.setWindowLevelPreset(e)}setWindowLevelPresetById(e){this.#R.setWindowLevelPresetById(e)}isPlaying(){return void 0!==this.#it}getPositionHelper(){return this.#nt}getPositionHelperClone(){return new si(this.#R)}getCurrentPosition(){return this.#nt.getCurrentPosition()}getCurrentIndex(){return this.#nt.getCurrentIndex()}getCurrentImageUid(){return this.#R.getCurrentImageUid()}getOriginForImageUid(e){return this.#R.getOriginForImageUid(e)}includesImageUid(e){return this.#R.includesImageUid(e)}getCurrentOrientedIndex(){let e=this.getCurrentIndex();if(void 0!==this.#R.getOrientation()){const t=this.#tt.getImageDeOrientedVector3D(new O(e.get(0),e.get(1),e.get(2)));e=new s([t.getX(),t.getY(),t.getZ()])}return e}getScrollDimIndex(){return this.#R.getScrollDimIndex()}getCurrentIndexScrollValue(){return this.getCurrentIndex().get(this.#R.getScrollDimIndex())}getOrigin(e){return this.#R.getOrigin(e)}isAquisitionOrientation(){return this.#R.isAquisitionOrientation()}getPlanePoints(e){return this.#tt.getPlanePoints(e)}getCurrentScrollPosition(){const e=this.#R.getScrollDimIndex();return this.#R.getCurrentPosition().get(e)}generateImageData(e,t){this.#R.generateImageData(e,t)}setImage(e){this.#R.setImage(e)}get2DSpacing(){return this.#R.getImage().getGeometry().getSpacing(this.#R.getOrientation()).get2D()}getRescaledImageValue(e){const t=this.#R.getImage();if(!t.canQuantify())return;const n=t.getGeometry(),i=n.worldToIndex(e);let r;return n.isIndexInBounds(i)&&(r=t.getRescaledValueAtIndex(i)),r}getPixelUnit(){return this.#R.getImage().getMeta().pixelUnit}#ot(e,t,n,i){const r=Ze(_e(e,t,n,i)),o=e.getGeometry().getSize(i).getValues();o[2]=1;const a=new $e(o),s=e.getGeometry().getSpacing(i).getValues();s[2]=1;const l=new ot(s),c=new q(0,0,0),u=new at([c],a,l);return new $n(u,r)}getImageRegionValues(e,t,n){let i=this.#R.getImage();const r=this.#R.getOrientation();let o=n,a=!0;E(r)||(i=this.#ot(i,o,a,r),o=new s([0,0,0]),a=!1);const l=function(e,t,n,i,r){if(1!==e.getNumberOfComponents())throw new Error("Unsupported number of components for region iterator: "+e.getNumberOfComponents());void 0===n&&(n=!1);let o=null;o=n?function(t){return e.getRescaledValueAtOffset(t)}:function(t){return e.getValueAtOffset(t)};const a=e.getGeometry().getSize();void 0===i&&(i=new F(0,0)),void 0===r&&(r=new F(a.get(0)-1,a.get(1)));const s=a.indexToOffset(t.getWithNew2D(i.getX(),i.getY())),l=a.indexToOffset(t.getWithNew2D(r.getX(),r.getY()-1)),c=Math.max(1,r.getX()-i.getX());return function(e,t,n,i,r,o){let a=t,s=0;return{next:function(){if(a<n){const t={value:e(a),done:!1,index:a};return s+=1,a+=1,s===r&&(s=0,a+=o),t}return{done:!0,index:n}}}}(o,s,l+1,0,c,a.get(0)-c)}(i,o,a,e,t);let c=[];return l&&(c=Ze(l)),c}getImageVariableRegionValues(e,t){let n=this.#R.getImage();const i=this.#R.getOrientation();let r=t,o=!0;E(i)||(n=this.#ot(n,r,o,i),r=new s([0,0,0]),o=!1);const a=function(e,t,n,i){if(1!==e.getNumberOfComponents())throw new Error("Unsupported number of components for region iterator: "+e.getNumberOfComponents());void 0===n&&(n=!1);let r=null;r=n?function(t){return e.getRescaledValueAtOffset(t)}:function(t){return e.getValueAtOffset(t)};const o=e.getGeometry().getSize(),a=[];let s,l=null,c=null,u=null;for(let e=0;e<i.length;++e){s=i[e];const t=s[1][0]-s[0][0];0!==t&&(u=e,l||(l=s[0]),a.push([s[0][0],t,o.get(0)-s[1][0]]))}if(null!==u&&(c=i[u][1]),0!==a.length)return function(e,t,n,i,r){let o=t,a=0,s=0;return{next:function(){if(o<n){const t={value:e(o),done:!1,index:o};return s+=1,o+=1,s===r[a][1]&&(s=0,o+=r[a][2],a+=1,a<r.length&&(o+=r[a][0])),t}return{done:!0,index:n}}}}(r,o.indexToOffset(t.getWithNew2D(l[0],l[1])),o.indexToOffset(t.getWithNew2D(c[0],c[1]))+1,0,a)}(n,r,o,e);let l=[];return a&&(l=Ze(a)),l}canQuantifyImage(){return this.#R.getImage().canQuantify()}canWindowLevel(){return this.isMonochrome()}isMonochrome(){return this.#R.getImage().isMonochrome()}canScroll(){return this.#R.getImage().canScroll(this.#R.getOrientation())}getImageSize(){return this.#R.getImage().getGeometry().getSize(this.#R.getOrientation())}moreThanOne(e){return this.getImageSize().moreThanOne(e)}getImageWorldSize(){const e=this.#R.getImage().getGeometry(),t=e.getSize(this.#R.getOrientation()).get2D(),n=e.getSpacing(this.#R.getOrientation()).get2D();return{x:t.x*n.x,y:t.y*n.y}}getImageRescaledDataRange(){return this.#R.getImage().getRescaledDataRange()}equalImageMeta(e){const t=this.#R.getImage().getMeta(),n=Object.keys(e);for(let i=0;i<n.length;++i){const r=n[i];if(void 0===t[r])return!1;if(t[r]!==e[r])return!1}return!0}isPositionInBounds(e){return this.#R.isPositionInBounds(e)}setCurrentPosition(e,t){return this.#R.setCurrentPosition(e,t)}getPositionFromPlanePoint(e,t){void 0===t&&(t=this.getCurrentIndexScrollValue());const n=new q(e.getX(),e.getY(),t),i=this.#tt.getImageOrientedPoint3D(n),r=this.#R.getImage().getGeometry().pointToWorld(i);return this.getCurrentPosition().mergeWith3D(r)}getPlanePositionFromPosition(e){const t=this.#R.getImage().getGeometry().worldToPoint(e),n=this.#tt.getImageDeOrientedPoint3D(t);return new F(n.getX(),n.getY())}getIndexFromPosition(e){return this.#R.getImage().getGeometry().worldToIndex(e)}setCurrentIndex(e,t){return this.#R.setCurrentIndex(e,t)}getPlanePositionFromPlanePoint(e){const t=this.getCurrentIndexScrollValue(),n=new q(e.getX(),e.getY(),t),i=this.#tt.getTargetDeOrientedPoint3D(n),r=this.#R.getImage().getGeometry().getRealSpacing();return new q(i.getX()*r.get(0),i.getY()*r.get(1),i.getZ()*r.get(2))}getOffset3DFromPlaneOffset(e){return this.#tt.getOffset3DFromPlaneOffset(e)}play(){if(this.canScroll())if(void 0===this.#it){const e=this.#R.getImage(),t=e.getMeta().RecommendedDisplayFrameRate,n=this.#R.getPlaybackMilliseconds(t),i=e.getGeometry().getSize().canScroll3D();this.#it=window.setInterval((()=>{let e=!1;if(e=i?this.#nt.incrementPositionAlongScroll():this.#nt.incrementPosition(3),!e){const e=this.getCurrentIndex().getValues(),t=this.#R.getOrientation();i?e[t.getThirdColMajorDirection()]=0:e[3]=0;const n=new s(e),r=this.#R.getImage().getGeometry();this.setCurrentPosition(r.indexToWorld(n))}}),n)}else this.stop()}stop(){void 0!==this.#it&&(clearInterval(this.#it),this.#it=void 0)}getWindowLevel(){return this.#R.getWindowLevel()}getCurrentWindowPresetName(){return this.#R.getCurrentWindowPresetName()}setWindowLevel(e){this.#R.setWindowLevel(e)}getColourMap(){return this.#R.getColourMap()}setColourMap(e){this.#R.setColourMap(e)}setViewAlphaFunction(e){this.#R.setAlphaFunction(e)}bindImageAndLayer(e){const t=this.#R.getImage();t.addEventListener("imagecontentchange",e.onimagecontentchange),t.addEventListener("imagegeometrychange",e.onimagegeometrychange)}unbindImageAndLayer(e){const t=this.#R.getImage();t.removeEventListener("imagecontentchange",e.onimagecontentchange),t.removeEventListener("imagegeometrychange",e.onimagegeometrychange)}}const ci=["mousedown","mousemove","mouseup","mouseout","wheel","dblclick","touchstart","touchmove","touchend"];function ui(e){let t=0,n=0;if(0!==e.length&&void 0!==e[0].target){let i=e[0].target.offsetParent;for(;i;)isNaN(i.offsetLeft)||(t+=i.offsetLeft),isNaN(i.offsetTop)||(n+=i.offsetTop),i=i.offsetParent}else c.debug("No touch target offset parent.");const i=[];for(let r=0;r<e.length;++r)i.push(new F(e[r].pageX-t,e[r].pageY-n));return i}function di(e){let t=[];return void 0!==e.targetTouches&&0!==e.targetTouches.length?t=ui(e.targetTouches):void 0!==e.changedTouches&&0!==e.changedTouches.length&&(t=ui(e.changedTouches)),t}function hi(e){return new F(e.offsetX,e.offsetY)}function gi(e,t){const n=document.createElement("canvas");n.width=e,n.height=t;const i=document.createElement("canvas");i.width=1,i.height=1;const r=n.getContext("2d"),o=i.getContext("2d");return r&&(r.fillRect(e-1,t-1,1,1),o.drawImage(n,e-1,t-1,1,1,0,0,1,1)),o&&0!==o.getImageData(0,0,1,1).data[3]}class Si{#at;#st=null;#lt=null;#ct=null;#ut=null;#dt=!0;#ht=null;#gt;#St;#mt=1;#pt={x:1,y:1};#ft={x:1,y:1};#Dt={x:1,y:1,z:1};#yt={x:0,y:0};#vt={x:0,y:0};#Ct={x:0,y:0};#It={x:0,y:0};#Tt={x:0,y:0};#Pt={x:0,y:0};#Lt=null;#wt;#Fe=new Xe;#Ot=!1;#bt;#At;constructor(e){this.#at=e,this.#at.className+=" viewLayer"}getDataId(){return this.#wt}getScale(){return this.#pt}getAbsoluteZoomOffset(){return{x:this.#It.x*this.#ft.x,y:this.#It.y*this.#ft.y}}setImageSmoothing(e){this.#Ot=e}setView(e,t){this.#wt=t,e.addEventListener("wlchange",this.#xt),e.addEventListener("colourmapchange",this.#Rt),e.addEventListener("positionchange",this.#Et),e.addEventListener("alphafuncchange",this.#Ft);for(let t=0;t<ni.length;++t)e.addEventListener(ni[t],this.#Qe);this.#st=new li(e),this.bindImage()}getViewController(){return this.#st}getImageData(){return this.#ht}onimageset=e=>{this.#wt===e.dataid&&(this.#st.setImage(e.value[0]),this.#qt(this.#st.getImageSize().get2D()),this.#Lt=!0)};bindImage(){this.#st&&this.#st.bindImageAndLayer(this)}unbindImage(){this.#st&&this.#st.unbindImageAndLayer(this)}onimagecontentchange=e=>{this.#wt===e.dataid&&(this.#dt=this.#st.isPositionInBounds(),this.#Lt=!0,this.draw())};onimagegeometrychange=e=>{if(this.#wt===e.dataid){const e=this.#st.getImageSize().get2D();if(this.#gt.x!==e.x||this.#gt.y!==e.y){if(void 0!==this.#bt&&void 0!==this.#At){const e=this.#st.getOrigin(),t=this.#At.minus(e),n=this.#st.getOrigin(this.#st.getCurrentPosition()),i=this.#bt.minus(n);this.setBaseOffset(t,i)}this.#qt(e),this.#Lt=!0,this.draw()}}};getId(){return this.#at.id}removeFromDOM(){this.#at.remove()}getBaseSize(){return this.#gt}getImageWorldSize(){return this.#st.getImageWorldSize()}getOpacity(){return this.#mt}setOpacity(e){if(e===this.#mt)return;this.#mt=Math.min(Math.max(e,0),1);const t={type:"opacitychange",value:[this.#mt]};this.#Qe(t)}addFlipOffsetX(){this.#Pt.x+=this.#lt.width/this.#pt.x,this.#yt.x+=this.#Pt.x}addFlipOffsetY(){this.#Pt.y+=this.#lt.height/this.#pt.y,this.#yt.y+=this.#Pt.y}flipScaleX(){this.#Dt.x*=-1}flipScaleY(){this.#Dt.y*=-1}flipScaleZ(){this.#Dt.z*=-1}setScale(e,t){const n=this.#st.getPlaneHelper(),i=n.getTargetOrientedPositiveXYZ({x:e.x*this.#Dt.x,y:e.y*this.#Dt.y,z:e.z*this.#Dt.z}),r={x:this.#ft.x*i.x,y:this.#ft.y*i.y};if(1===Math.abs(e.x)&&1===Math.abs(e.y)&&1===Math.abs(e.z)){const e={x:this.#yt.x-this.#It.x,y:this.#yt.y-this.#It.y};this.#It={x:0,y:0},this.#yt=e}else if(void 0!==t){let e=n.getPlaneOffsetFromOffset3D({x:t.getX(),y:t.getY(),z:t.getZ()});e={x:e.x+this.#vt.x,y:e.y+this.#vt.y};const i=Xr(this.#yt,this.#pt,r,e),o={x:this.#It.x+i.x-this.#yt.x,y:this.#It.y+i.y-this.#yt.y};this.#It=o,this.#yt=i}this.#pt=r}initScale(e,t){const n=this.#st.getPlaneHelper().getTargetOrientedPositiveXYZ({x:e.x*this.#Dt.x,y:e.y*this.#Dt.y,z:e.z*this.#Dt.z}),i={x:this.#ft.x*n.x,y:this.#ft.y*n.y};this.#pt=i,this.#It={x:t.x/this.#ft.x,y:t.y/this.#ft.y},this.#yt={x:this.#yt.x+this.#It.x,y:this.#yt.y+this.#It.y}}setBaseOffset(e,t,n,i){const r=this.#st.getPlaneHelper(),o=r.getNativeScrollDimIndex(),a=r.getPlaneOffsetFromOffset3D({x:0===o?e.getX():t.getX(),y:1===o?e.getY():t.getY(),z:2===o?e.getZ():t.getZ()}),s=this.#vt.x!==a.x||this.#vt.y!==a.y;return void 0!==n&&void 0!==i&&(this.#bt=n,this.#At=i),s&&(this.#yt={x:this.#yt.x-this.#vt.x+a.x,y:this.#yt.y-this.#vt.y+a.y},this.#vt=a),s}setOffset(e){const t=this.#st.getPlaneHelper().getPlaneOffsetFromOffset3D(e);this.#yt={x:this.#yt.x-this.#Tt.x+t.x,y:this.#yt.y-this.#Tt.y+t.y},this.#Tt=t}displayToPlaneIndex(e){const t=this.displayToPlanePos(e);return new s([Math.floor(t.getX()),Math.floor(t.getY())])}displayToPlaneScale(e){return new F(e.getX()/this.#pt.x,e.getY()/this.#pt.y)}displayToPlanePos(e){const t=this.displayToPlaneScale(e);return new F(t.getX()+this.#yt.x,t.getY()+this.#yt.y)}planePosToDisplay(e){let t=(e.getX()-this.#yt.x+this.#vt.x)*this.#pt.x,n=(e.getY()-this.#yt.y+this.#vt.y)*this.#pt.y;return(t<0||t>=this.#lt.width)&&(t=void 0),(n<0||n>=this.#lt.height)&&(n=void 0),new F(t,n)}displayToMainPlanePos(e){const t=this.displayToPlanePos(e);return new F(t.getX()-this.#vt.x,t.getY()-this.#vt.y)}display(e){this.#at.style.display=e?"":"none"}isVisible(){return""===this.#at.style.display}draw(){if(!this.#dt)return;let e={type:"renderstart",layerid:this.getId(),dataid:this.getDataId()};this.#Qe(e),this.#Lt&&this.#Ut(),this.#ut.globalAlpha=this.#mt,this.clear(),this.#ut.setTransform(this.#pt.x,0,0,this.#pt.y,-1*this.#yt.x*this.#pt.x,-1*this.#yt.y*this.#pt.y),this.#ut.imageSmoothingEnabled=this.#Ot,this.#ut.drawImage(this.#ct,0,0),e={type:"renderend",layerid:this.getId(),dataid:this.getDataId()},this.#Qe(e)}initialise(e,t,n){this.#St=t,this.#mt=Math.min(Math.max(n,0),1),this.#lt=document.createElement("canvas"),this.#at.appendChild(this.#lt),this.#lt.getContext?(this.#ut=this.#lt.getContext("2d"),this.#ut?(this.#ct=document.createElement("canvas"),this.#qt(e),this.#Lt=!0):alert("Error: failed to get the 2D context.")):alert("Error: no canvas.getContext method.")}#qt(e){if(!gi(e.x,e.y))throw new Error("Cannot create canvas with size "+e.x+", "+e.y);this.#gt=e,this.#ct.width=this.#gt.x,this.#ct.height=this.#gt.y,this.#ut.clearRect(0,0,this.#gt.x,this.#gt.y),this.#ht=this.#ut.createImageData(this.#gt.x,this.#gt.y)}fitToContainer(e,t,n){let i=!1;const r={x:t*this.#St.x,y:t*this.#St.y},o=r.x/this.#ft.x,a=r.y/this.#ft.y,s=e.x/(this.#lt.width*o),l=e.y/(this.#lt.height*a);if(this.#lt.width!==e.x||this.#lt.height!==e.y){if(!gi(e.x,e.y))throw new Error("Cannot resize canvas "+e.x+", "+e.y);this.#lt.width=e.x,this.#lt.height=e.y,i=!0}const c={x:this.#pt.x*o,y:this.#pt.y*a};this.#pt.x===c.x&&this.#pt.y===c.y||(this.#ft=r,this.#pt=c,i=!0);const u={x:n.x/r.x,y:n.y/r.y},d={x:e.x/r.x,y:e.y/r.y},h={x:0!==this.#Pt.x?d.x:0,y:0!==this.#Pt.y?d.y:0};if(this.#Ct.x!==u.x||this.#Ct.y!==u.y||this.#Pt.x!==h.x||this.#Pt.y!==h.y){const e={x:this.#It.x*s,y:this.#It.y*l};this.#yt={x:this.#yt.x+u.x-this.#Ct.x+h.x-this.#Pt.x+e.x-this.#It.x,y:this.#yt.y+u.y-this.#Ct.y+h.y-this.#Pt.y+e.y-this.#It.y},this.#Pt=h,this.#Ct=u,this.#It=e,i=!0}i&&this.draw()}bindInteraction(){this.#at.style.pointerEvents="auto";const e=ci;for(let t=0;t<e.length;++t){const n=e[t],i="wheel"!==n;this.#at.addEventListener(n,this.#Qe,{passive:i})}}unbindInteraction(){this.#at.style.pointerEvents="none";const e=ci;for(let t=0;t<e.length;++t)this.#at.removeEventListener(e[t],this.#Qe)}addEventListener(e,t){this.#Fe.add(e,t)}removeEventListener(e,t){this.#Fe.remove(e,t)}#Qe=e=>{e.srclayerid=this.getId(),e.dataid=this.#wt,this.#Fe.fireEvent(e)};#Ut(){this.#st.generateImageData(this.#ht),this.#ct.getContext("2d").putImageData(this.#ht,0,0),this.#Lt=!1}#xt=e=>{void 0!==e.skipGenerate&&!0===e.skipGenerate||(this.#Lt=!0,this.draw())};#Rt=e=>{void 0!==e.skipGenerate&&!0===e.skipGenerate||(this.#Lt=!0,this.draw())};#Et=e=>{if(void 0===e.skipGenerate||!0!==e.skipGenerate){let t=!0;if(void 0!==e.valid&&(t=e.valid),t){const t=[0,1,2],n=t.indexOf(this.#st.getScrollDimIndex());t.splice(n,1),0===e.diffDims.filter((function(e){return-1===t.indexOf(e)})).length&&this.#dt||(this.#dt=!0,this.#Lt=!0,this.draw())}else this.#dt&&(this.#dt=!1,this.clear())}};#Ft=e=>{void 0!==e.skipGenerate&&!0===e.skipGenerate||(this.#Lt=!0,this.draw())};setCurrentPosition(e,t){return this.#st.setCurrentPosition(e)}clear(){this.#ut.save(),this.#ut.setTransform(1,0,0,1,0,0),this.#ut.clearRect(0,0,this.#lt.width,this.#lt.height),this.#ut.restore()}}class mi{#Mt=0;getSum(){return this.#Mt}add(e){this.#Mt+=function(e){if(void 0===e.wheelDeltaY)return-e.deltaY;{const t=45;return e.wheelDeltaY>t?1:e.wheelDeltaY<-t?-1:-e.deltaY/60}}(e)}clear(){this.#Mt=0}isTick(){return Math.abs(this.#Mt)>=1}}class pi{#Qt;#Vt=new mi;constructor(e){this.#Qt=e}wheel(e){this.#Vt.add(e);const t=this.#Vt.getSum()>=0;if(!this.#Vt.isTick())return;this.#Vt.clear(),e.preventDefault();const n=Yr(e),i=this.#Qt.getLayerGroupByDivId(n.groupDivId),r=i.getPositionHelper();i.canScroll()?t?r.incrementPositionAlongScroll():r.decrementPositionAlongScroll():i.moreThanOne(3)&&(t?r.incrementPosition(3):r.decrementPosition(3))}}class fi{#Nt;#Bt;constructor(e,t){this.#Nt=e,this.#Bt=t}getBegin(){return this.#Nt}getEnd(){return this.#Bt}equals(e){return null!==e&&this.getBegin().equals(e.getBegin())&&this.getEnd().equals(e.getEnd())}getDeltaX(){return this.getEnd().getX()-this.getBegin().getX()}getDeltaY(){return this.getEnd().getY()-this.getBegin().getY()}getLength(){return Math.sqrt(this.getDeltaX()*this.getDeltaX()+this.getDeltaY()*this.getDeltaY())}getWorldLength(e){let t=null;if(null!==e){const n=this.getDeltaX()*e.x,i=this.getDeltaY()*e.y;t=Math.sqrt(n*n+i*i)}return t}getMidpoint(){return new F((this.getBegin().getX()+this.getEnd().getX())/2,(this.getBegin().getY()+this.getEnd().getY())/2)}getCentroid(){return this.getMidpoint()}getSlope(){return this.getDeltaY()/this.getDeltaX()}getIntercept(){return(this.getEnd().getX()*this.getBegin().getY()-this.getBegin().getX()*this.getEnd().getY())/this.getDeltaX()}getInclination(){return 180-180*Math.atan2(this.getDeltaY(),this.getDeltaX())/Math.PI}quantify(e){const t={},n=e.get2DSpacing(),i=this.getWorldLength(n);return null!==i&&(t.length={value:i,unit:"unit.mm"}),t}}function Di(e,t){const n=e.getDeltaX(),i=e.getDeltaY(),r=t.getDeltaX(),o=t.getDeltaY(),a=n*r+i*o,s=n*o-i*r;return 360-(180-180*Math.atan2(s,a)/Math.PI)}function yi(e,t){const n=e.getDeltaX(),i=e.getDeltaY();return n*t.getDeltaX()+i*t.getDeltaY()==0}function vi(e,t,n,i){void 0===i&&(i={x:1,y:1});const r=-i.x*i.x/(i.y*i.y*e.getSlope());return Ii(r,t.getY()-r*t.getX(),t,n,i)}function Ci(e,t,n,i){const r=Ii(e.getSlope(),e.getIntercept(),e.getBegin(),t,i);let o;return o=function(e,t){const n=Math.min(t.getBegin().getX(),t.getEnd().getX()),i=Math.max(t.getBegin().getX(),t.getEnd().getX()),r=Math.min(t.getBegin().getY(),t.getEnd().getY()),o=Math.max(t.getBegin().getY(),t.getEnd().getY());return e.getX()>=n&&e.getX()<=i&&e.getY()>=r&&e.getY()<=o}(r.getBegin(),e)?r.getBegin():r.getEnd(),vi(e,o,n,i)}function Ii(e,t,n,i,r){void 0===r&&(r={x:1,y:1});let o=0,a=0,s=0,l=0;if(A(e,0,b))o=n.getX()-i/(2*r.x),a=n.getY(),s=n.getX()+i/(2*r.x),l=n.getY();else if(Math.abs(e)>1e6)o=n.getX(),a=n.getY()-i/(2*r.y),s=n.getX(),l=n.getY()+i/(2*r.y);else{const c=r.x*r.x,u=r.y*r.y,d=i/(2*Math.sqrt(c+u*e*e));o=n.getX()-d,a=e*o+t,s=n.getX()+d,l=e*s+t}return new fi(new F(o,a),new F(s,l))}var Ti=o(944),Pi=o.n(Ti);class Li{#Gt;#kt;constructor(e,t){this.#Gt=e,this.#kt=t}getName(){return"AddAnnotation-"+this.#Gt.trackingUid}execute(){this.#kt.addAnnotation(this.#Gt)}undo(){this.#kt.removeAnnotation(this.#Gt.trackingUid)}}class wi{#Gt;#kt;constructor(e,t){this.#Gt=e,this.#kt=t}getName(){return"RemoveAnnotation-"+this.#Gt.trackingUid}execute(){this.#kt.removeAnnotation(this.#Gt.trackingUid)}undo(){this.#kt.addAnnotation(this.#Gt)}}class Oi{#Gt;#kt;#Ht;#zt;constructor(e,t,n,i){this.#Gt=e,this.#kt=i,this.#Ht=t,this.#zt=n}getName(){return"UpdateAnnotation-"+this.#Gt.trackingUid}execute(){const e=Object.keys(this.#zt);for(const t of e)this.#Gt[t]=this.#zt[t];this.#kt.updateAnnotation(this.#Gt,e)}undo(){const e=Object.keys(this.#Ht);for(const t of e)this.#Gt[t]=this.#Ht[t];this.#kt.updateAnnotation(this.#Gt,e)}}class bi{#Wt=10;#Yt="Verdana";#Xt="#fff";#jt="#ffff80";#Zt={x:1,y:1};#_t={x:1,y:1};#Kt=2;#Jt={x:.25,y:.25};#$t=.2;#en=3;getFontFamily(){return this.#Yt}getFontSize(){return this.#Wt}getStrokeWidth(){return this.#Kt}getTextColour(){return this.#Xt}getLineColour(){return this.#jt}setLineColour(e){this.#jt=e}setBaseScale(e){this.#Zt=e}setZoomScale(e){this.#_t=e}getBaseScale(){return this.#Zt}getZoomScale(){return this.#_t}scale(e){return e/this.#Zt.x}applyZoomScale(e){return{x:e/this.#_t.x,y:e/this.#_t.y}}applyZoomRatio(e){return e*this.#_t.x/this.#_t.y}getShadowOffset(){return this.#Jt}getTagOpacity(){return this.#$t}getTextPadding(){return this.#en}getFontStr(){return"normal "+this.getFontSize()+"px sans-serif"}getLineHeight(){return this.getFontSize()+this.getFontSize()/5}getScaledFontSize(){return this.scale(this.getFontSize())}getScaledStrokeWidth(){return this.scale(this.getStrokeWidth())}getShadowLineColour(){return function(e){return.001172549*(t=v(e)).r+.002301961*t.g+447059e-9*t.b<.5;var t}(this.getLineColour())?"#fff":"#000"}}const Ai={arrow:{"*":""},circle:{"*":"{surface}"},ellipse:{"*":"{surface}"},protractor:{"*":"{angle}"},rectangle:{"*":"{surface}"},roi:{"*":""},ruler:{"*":"{length}"}};function xi(e){return"label"===e.name()}function Ri(e){return"shape"===e.name()}function Ei(e){return"position-group"===e.name()}function Fi(e){const t=e.getChildren(Ri)[0];if(t instanceof Pi().Line)return t}function qi(e,t){const n=e.getChildren((function(e){return e.id()==="anchor"+t}))[0];if(n instanceof Pi().Ellipse)return n}function Ui(e){return function(t){return t.id()===e}}function Mi(e,t,n,i){const r=i.applyZoomScale(6),o={x:Math.abs(r.x),y:Math.abs(r.y)};return new(Pi().Ellipse)({x:e,y:t,stroke:"#999",fill:"rgba(100,100,100,0.7",strokeWidth:i.getStrokeWidth(),strokeScaleEnabled:!1,radius:o,radiusX:o.x,radiusY:o.y,name:"anchor",id:n.toString(),dragOnTop:!1,draggable:!0,visible:!1})}function Qi(e){return parseInt(e.substring(6),10)}class Vi{#Qt;#tn;constructor(e,t){this.#Qt=e,this.#tn=t}#nn=null;#in=null;#rn;#Gt;#on=!1;setShape(e,t,n){if(this.#in=e,this.#rn=t,this.#Gt=n,this.#in){if(this.#an(),this.#nn=n.getFactory(),null===this.#nn)throw new Error("Could not find a factory to update shape.");this.#sn()}}getShape(){return this.#in}getAnnotation(){return this.#Gt}isActive(){return this.#on}enable(){this.#on=!0,this.#in&&(this.#ln(!0),this.#in.getLayer()&&this.#in.getLayer().draw())}disable(){this.#on=!1,this.#in&&(this.#ln(!1),this.#in.getLayer()&&this.#in.getLayer().draw())}reset(){this.#in=void 0,this.#rn=void 0,this.#Gt=void 0}resetAnchors(){this.#an(),this.#sn(),this.#ln(!0)}#cn(e){this.#in&&this.#in.getParent()&&this.#in.getParent().find(".anchor").forEach(e)}#ln(e){this.#cn((function(t){t.visible(e)}))}setAnchorsActive(e){let t=null;t=e?e=>{this.#un(e)}:e=>{this.#dn(e)},this.#cn(t)}#an(){this.#cn((function(e){e.remove()}))}#sn(){if(!this.#in||!this.#in.getLayer())return;const e=this.#in.getParent(),t=this.#nn.getAnchors(this.#in,this.#Qt.getStyle());for(let n=0;n<t.length;++n)this.#un(t[n]),e.add(t[n])}#un(e){let t;e.on("dragstart.edit",(e=>{e.cancelBubble=!0,t={mathShape:this.#Gt.mathShape,referencePoints:this.#Gt.referencePoints}})),e.on("dragmove.edit",(e=>{const t=e.target;t instanceof Pi().Shape&&(function(e,t){const n=t.getParent();!function(e,t,n){let i=!1;e.x()<t.getX()?(e.x(t.getX()),i=!0):e.x()>n.getX()&&(e.x(n.getX()),i=!0),e.y()<t.getY()?(e.y(t.getY()),i=!0):e.y()>n.getY()&&(e.y(n.getY()),i=!0)}(t,new F(-n.x(),-n.y()),new F(e.x-n.x(),e.y-n.y()))}(this.#rn.getBaseSize(),t),void 0!==this.#nn.constrainAnchorMove&&this.#nn.constrainAnchorMove(t),this.#nn.updateAnnotationOnAnchorMove(this.#Gt,t),this.#nn.updateShapeGroupOnAnchorMove(this.#Gt,t,this.#Qt.getStyle()),t.getLayer()?t.getLayer().draw():c.warn("No layer to draw the anchor!"),e.cancelBubble=!0)})),e.on("dragend.edit",(e=>{const n={mathShape:this.#Gt.mathShape,referencePoints:this.#Gt.referencePoints},i=new Oi(this.#Gt,t,n,this.#rn.getDrawController());this.#Qt.addToUndoStack(i),this.#tn({type:"annotationupdate",data:this.#Gt,dataid:this.#rn.getDataId(),keys:Object.keys(n)}),t={mathShape:n.mathShape,referencePoints:n.referencePoints},e.cancelBubble=!0})),e.on("mousedown touchstart",(e=>{e.target.moveToTop()})),e.on("mouseover.edit",(e=>{const t=e.target;t instanceof Pi().Shape&&(t.stroke("#ddd"),t.getLayer()?t.getLayer().draw():c.warn("No layer to draw the anchor!"))})),e.on("mouseout.edit",(e=>{const t=e.target;t instanceof Pi().Shape&&(t.stroke("#999"),t.getLayer()?t.getLayer().draw():c.warn("No layer to draw the anchor!"))}))}#dn(e){e.off("dragstart.edit"),e.off("dragmove.edit"),e.off("dragend.edit"),e.off("mousedown touchstart"),e.off("mouseover.edit"),e.off("mouseout.edit")}}class Ni{#hn;constructor(){this.createTrashIcon()}createTrashIcon(){this.#hn=new(Pi().Group);const e=new(Pi().Line)({points:[-10,-10,10,10],stroke:"red"}),t=new(Pi().Line)({points:[10,-10,-10,10],stroke:"red"});this.#hn.width(20),this.#hn.height(20),this.#hn.add(e),this.#hn.add(t)}activate(e){const t=e.getKonvaStage(),n=t.scale(),i=e.getKonvaLayer(),r={x:1/n.x,y:1/n.y};this.#hn.x(t.offset().x+t.width()/(2*n.x)),this.#hn.y(t.offset().y+t.height()/(15*n.y)),this.#hn.scale(r),i.add(this.#hn),i.draw()}changeChildrenColourOnTrashHover(e,t,n){if(this.isOverTrash(e))return this.changeGroupChildrenColour(this.#hn,"orange"),void this.changeGroupChildrenColour(t,"red");this.changeGroupChildrenColour(this.#hn,"red"),this.changeGroupChildrenColour(t,n)}changeGroupChildrenColour(e,t){e.getChildren().forEach((function(e){e instanceof Pi().Shape&&void 0!==e.stroke&&e.stroke(t)}))}remove(){this.#hn.remove()}isOverTrash(e){const t=this.#hn.width()*Math.abs(this.#hn.scaleX())/2,n=this.#hn.height()*Math.abs(this.#hn.scaleY())/2;return Math.abs(e.x-this.#hn.x())<t&&Math.abs(e.y-this.#hn.y())<n}}class Bi{#Qt;#gn;#hn;#Sn="pointer";#mn;#pn;#tn;constructor(e,t){this.#Qt=e,this.#tn=t,this.#gn=new Vi(e,t),this.#hn=new Ni}setEditorShape(e,t){const n=t.getDrawController();e&&e instanceof Pi().Shape&&e!==this.#gn.getShape()&&n.isAnnotationGroupEditable()&&(this.#gn.disable(),this.#gn.setShape(e,t,t.getDrawController().getAnnotation(e.getParent().id())),this.#gn.enable())}getEditorShapeGroup(){let e;if(!this.#gn.isActive()||(e=this.#gn.getShape().getParent(),e instanceof Pi().Group))return e}getEditorAnnotation(){let e;return this.#gn.isActive()&&(e=this.#gn.getAnnotation()),e}disableAndResetEditor(){this.#gn.disable(),this.#gn.reset()}#fn(e,t){const n=t.getKonvaStage();return{x:n.offset().x+e.x/n.scale().x,y:n.offset().y+e.y/n.scale().y}}storeMouseOverCursor(e){this.#Sn=e}#Dn(){this.#mn=document.body.style.cursor,document.body.style.cursor=this.#Sn,this.#pn.opacity(.75)}onMouseOutShapeGroup(){void 0!==this.#mn&&(document.body.style.cursor=this.#mn,this.#mn=void 0),void 0!==this.#pn&&this.#pn.opacity(1)}#yn(e){e.on("mouseover",(()=>{this.#pn=e,this.#Dn()})),e.on("mouseout",(()=>{this.onMouseOutShapeGroup(),this.#pn=void 0}))}#vn(e){e.off("mouseover"),e.off("mouseout")}addShapeGroupListeners(e,t,n){this.#yn(e),this.#Cn(e,t,n),this.#In(e,t,n),e.on("dblclick",(()=>{const e=t.textExpr,i=t=>{const i=t.textExpr,r=new Oi(t,{textExpr:e},{textExpr:i},n.getDrawController());this.#Qt.addToUndoStack(r),r.execute()};void 0!==w.openRoiDialog?w.openRoiDialog(t,i):function(e,t){const n=prompt("Label",e.textExpr);null!==n&&(e.textExpr=n,t(e))}(t,i)}))}#Cn(e,t,n){const i=n.getKonvaLayer(),r=e.getChildren(Ri)[0];if(!(r instanceof Pi().Shape))return;let o,a,s,l;r.draggable(!0),r.on("dragstart.draw",(e=>{l=r.stroke(),o={x:r.x(),y:r.y()},a={x:e.target.x(),y:e.target.y()},s={mathShape:t.mathShape,referencePoints:t.referencePoints},this.#hn.activate(n),this.#gn.setAnchorsActive(!1),i.draw()})),r.on("dragmove.draw",(o=>{const s=function(e,t){return{min:new F(0,0),max:new F(e.x-Math.abs(t.width()),e.y-Math.abs(t.height()))}}(n.getBaseSize(),r);if(s&&!function(e,t,n){const i=e.getClientRect({relativeTo:e.getParent()});return i.x>t.getX()&&i.x<n.getX()&&i.y>t.getY()&&i.y<n.getY()}(r,s.min,s.max))return r.x(a.x),void r.y(a.y);const c={x:o.target.x()-a.x,y:o.target.y()-a.y},u=e.getChildren(),d=void 0===t.labelPosition;for(const e of u)e===o.target||"label"===e.name()&&!d||"connector"===e.name()||e.move(c);a={x:o.target.x(),y:o.target.y()};const h=t.getFactory();h.updateAnnotationOnTranslation(t,c),h.updateLabelContent(t,e,this.#Qt.getStyle()),h.updateConnector(e);const g=hi(o.evt),S={x:g.getX(),y:g.getY()},m=this.#fn(S,n);this.#hn.changeChildrenColourOnTrashHover(m,e,l),i.draw()})),r.on("dragend.draw",(a=>{if(this.#hn.remove(),void 0===a||void 0===a.evt)return;const c=r.x(),u=r.y(),d=hi(a.evt),h={x:d.getX(),y:d.getY()},g=this.#fn(h,n);if(this.#hn.isOverTrash(g)){e.x(o.x),e.y(o.y),this.#gn.disable(),this.#gn.reset(),this.#hn.changeGroupChildrenColour(e,l),t.mathShape=s.mathShape,t.referencePoints=s.referencePoints;const i=new wi(t,n.getDrawController());this.#Qt.addToUndoStack(i),i.execute(),this.onMouseOutShapeGroup()}else{const e={x:c-o.x,y:u-o.y};if(0!==e.x||0!==e.y){const e={mathShape:t.mathShape,referencePoints:t.referencePoints},i=new Oi(t,s,e,n.getDrawController());this.#Qt.addToUndoStack(i),this.#tn({type:"annotationupdate",data:t,dataid:n.getDataId(),keys:Object.keys(e)}),s={mathShape:e.mathShape,referencePoints:e.referencePoints}}this.#gn.setAnchorsActive(!0),this.#gn.resetAnchors()}i.draw(),o={x:r.x(),y:r.y()}}))}#In(e,t,n){const i=e.getChildren(xi)[0];if(!(i instanceof Pi().Label))return;let r,o;i.draggable(!0),i.on("dragstart.draw",(()=>{r={x:i.x(),y:i.y()},o=t.labelPosition})),i.on("dragmove.draw",(()=>{t.getFactory().updateConnector(e)})),i.on("dragend.draw",(()=>{const e=i.x()-r.x,a=i.y()-r.y;if(0!==e||0!==a){const e=new F(i.x(),i.y());t.labelPosition=e;const r=new Oi(t,{labelPosition:o},{labelPosition:e},n.getDrawController());this.#Qt.addToUndoStack(r),this.#tn({type:"annotationupdate",data:t,dataid:n.getDataId(),keys:["labelPosition"]}),o=e}r={x:i.x(),y:i.y()}}))}removeShapeListeners(e){this.#vn(e),e.off("dblclick");const t=e.getChildren(Ri)[0];t instanceof Pi().Shape&&(t.draggable(!1),t.off("dragstart.draw"),t.off("dragmove.draw"),t.off("dragend.draw"));const n=e.getChildren(xi)[0];n instanceof Pi().Label&&(n.draggable(!1),n.off("dragstart.draw"),n.off("dragend.draw"))}}class Gi{#Tn;#Pn;#Ln;constructor(e,t,n){this.#Tn=e,this.#Pn=t,this.#Ln=n}getCenter(){return this.#Tn}getCentroid(){return this.#Tn}getA(){return this.#Pn}getB(){return this.#Ln}equals(e){return null!==e&&this.getCenter().equals(e.getCenter())&&this.getA()===e.getA()&&this.getB()===e.getB()}getSurface(){return Math.PI*this.getA()*this.getB()}getWorldSurface(e){return function(e,t,n){let i=null;return null!==t&&null!==n&&(i=e*t*n),i}(this.getSurface(),e.x,e.y)}getRound(){const e=this.getCenter().getX(),t=this.getCenter().getY(),n=this.getA(),i=this.getB(),r=n/i,o=Math.pow(i,2),a=t+i,s=[];for(let n=t-i;n<a;++n){const i=o-Math.pow(n-t,2);if(Math.abs(i)<1e-7)continue;const a=r*Math.sqrt(i);a<.5||s.push([[Math.round(e-a),Math.round(n)],[Math.round(e+a),Math.round(n)]])}return s}quantify(e,t,n){const i={},r=e.get2DSpacing();i.a={value:this.getA()*r.x,unit:"unit.mm"},i.b={value:this.getB()*r.y,unit:"unit.mm"};const o=this.getWorldSurface(r);if(null!==o&&(i.surface={value:o/100,unit:"unit.cm2"}),e.canQuantifyImage()){const r=this.getRound();if(0!==r.length){const o=e.getImageVariableRegionValues(r,t),a=e.getPixelUnit(),s=tt(o,n);i.min={value:s.min,unit:a},i.max={value:s.max,unit:a},i.mean={value:s.mean,unit:a},i.stdDev={value:s.stdDev,unit:a},void 0!==s.median&&(i.median={value:s.median,unit:a}),void 0!==s.p25&&(i.p25={value:s.p25,unit:a}),void 0!==s.p75&&(i.p75={value:s.p75,unit:a})}}return i}}function ki(e,t,n){const i=e.getValues(),r=i.slice(),o=[],a=t[0],l=t[1],c=a/l,u=Math.pow(l,2),d=n[0],h=n[1];for(let e=0;e<l;++e){const t=Math.round(c*Math.sqrt(u-Math.pow(e,2))),n=i[h]+e,a=i[h]-e;for(let e=0;e<t;++e){const t=i[d]+e,l=i[d]-e;r[d]=t,r[h]=n,o.push(new s(r.slice())),a!==n&&(r[h]=a,o.push(new s(r.slice()))),l!==t&&(r[d]=l,r[h]=n,o.push(new s(r.slice())),a!==n&&(r[h]=a,o.push(new s(r.slice()))))}}return o}class Hi{meta;image;annotationGroup;buffer;constructor(e){this.meta=e}}class zi{#wn={};#On=-1;#Fe=new Xe;getNextDataId(){return++this.#On,this.#On.toString()}getDataIds(){return Object.keys(this.#wn)}reset(){this.#wn={}}get(e){return this.#wn[e]}getDataIdsFromSopUids(e){const t=[];if(void 0===e||0===e.length)return t;const n=Object.keys(this.#wn);for(const i of n)void 0!==this.#wn[i].image&&this.#wn[i].image.containsImageUids(e)&&t.push(i);return t}getDataIdFromSeriesUid(e){let t;const n=Object.keys(this.#wn);for(const i of n){const n=this.#wn[i].image;if(void 0!==n&&e===n.getMeta().SeriesInstanceUID){t=i;break}}return t}setImage(e,t){this.#wn[e].image=t,this.#Qe({type:"dataimageset",value:[t],dataid:e}),t.addEventListener("imagecontentchange",this.#bn(e)),t.addEventListener("imagegeometrychange",this.#bn(e))}add(e,t){if(void 0!==this.#wn[e])throw new Error("Data id already used in storage: "+e);let n;if(this.#wn[e]=t,void 0!==t.meta["00080060"]&&(n=t.meta["00080060"].value[0]),"SEG"===n&&void 0===t.image){let e;const n=t.meta["00081115"];if(void 0!==n&&(e=n.value[0]["0020000E"].value[0]),void 0===e)throw new Error("Cannot create mask image: the DICOM seg does not have a referenced series UID");const i=this.getDataIdFromSeriesUid(e);if(void 0===i)throw new Error("Cannot create mask image: the DICOM seg referenced series is not loaded");const r=new Wn;t.image=r.create(t.meta,t.buffer,this.#wn[i].image)}this.#Qe({type:"dataadd",dataid:e}),void 0!==t.image&&(t.image.addEventListener("imagecontentchange",this.#bn(e)),t.image.addEventListener("imagegeometrychange",this.#bn(e))),void 0!==t.annotationGroup&&(t.annotationGroup.addEventListener("annotationadd",this.#bn(e)),t.annotationGroup.addEventListener("annotationupdate",this.#bn(e)),t.annotationGroup.addEventListener("annotationremove",this.#bn(e)))}remove(e){if(void 0!==this.#wn[e]){const t=this.#wn[e].image;void 0!==t&&(t.removeEventListener("imagecontentchange",this.#bn(e)),t.removeEventListener("imagegeometrychange",this.#bn(e)));const n=this.#wn[e].annotationGroup;void 0!==n&&(n.removeEventListener("annotationadd",this.#bn(e)),n.removeEventListener("annotationupdate",this.#bn(e)),n.removeEventListener("annotationremove",this.#bn(e))),delete this.#wn[e],this.#Qe({type:"dataremove",dataid:e})}}update(e,t){if(void 0===this.#wn[e])throw new Error("Cannot find data to update: "+e);const n=this.#wn[e];void 0!==n.image&&void 0!==t.image&&n.image.appendSlice(t.image);let i="";i=void 0!==t.meta["00020010"]?"00200013":"imageUid",n.meta=function(e,t,n,i){const r={};if(!n)throw new Error("Cannot merge object with an undefined id key: "+n);if(!Object.prototype.hasOwnProperty.call(e,n))throw new Error("Id key not found in first object while merging: "+n+", obj: "+e);if(!Object.prototype.hasOwnProperty.call(t,n))throw new Error("Id key not found in second object while merging: "+n+", obj: "+t);let o=!1;if(Object.prototype.hasOwnProperty.call(e[n],"merged")&&e[n].merged&&(o=!0),!Object.prototype.hasOwnProperty.call(e[n],i))throw new Error("Id value not found in first object while merging: "+n+", valueKey: "+i+", ojb: "+e);if(!Object.prototype.hasOwnProperty.call(t[n],i))throw new Error("Id value not found in second object while merging: "+n+", valueKey: "+i+", ojb: "+t);let a=e[n][i];const s=t[n][i][0];if(r[n]=e[n],o){for(let e=0;e<a.length;++e)if(a[e]===s)throw new Error("The first object already contains id2: "+s+", id1: "+a);r[n][i].push(s)}else{if(a=a[0],a===s)throw new Error("Cannot merge object with same ids: "+a+", id2: "+s);r[n][i].push(s),r[n].merged=!0}const l=Object.keys(e),c=Object.keys(t).filter((function(e){return l.indexOf(e)<0})),u=l.concat(c);for(let l=0;l<u.length;++l){const c=u[l];if(c!==n){let n,l,u,d,h;if(Object.prototype.hasOwnProperty.call(e,c)&&(n=e[c],Object.prototype.hasOwnProperty.call(n,i)&&(l=n[i])),Object.prototype.hasOwnProperty.call(t,c)&&(u=t[c],Object.prototype.hasOwnProperty.call(u,i)&&(d=u[i])),void 0!==n?h=n:void 0!==u&&(h=u),!W(l,d))if(o){if(Array.isArray(l)){h[i]={};for(let e=0;e<a.length;++e)h[i][a[e]]=l}else h[i]=l;void 0===h[i]&&(h[i]={}),h[i][s]=d}else{const e={};e[a]=l,e[s]=d,h[i]=e}r[c]=h}}return r}(n.meta,t.meta,i,"value"),this.#Qe({type:"dataupdate",dataid:e})}addEventListener(e,t){this.#Fe.add(e,t)}removeEventListener(e,t){this.#Fe.remove(e,t)}#Qe=e=>{this.#Fe.fireEvent(e)};#bn(e){return t=>{t.dataid=e,this.#Qe(t)}}}const Wi="No source image to create mask",Yi="No source image to get offsets, ID: {0}",Xi="No brush origins",ji="No mask defined when adding mask slices",Zi="No created mask image",_i="No mask image for temporary draw command, ID: {0}",Ki="No mask image to get offsets from",Ji="No mask image for draw command, ID: {0}",$i="No mask ID to apply mask index",er="No mask view layers",tr="No selected segment number",nr="Too many mask view layers: {0}",ir="More mask layers than expected",rr="Cannot display mask with no mask ID",or="Cannot draw with no mask data ID",ar="Cannot draw with no offsets",sr="Cannot draw with no colour list",lr="Cannot get mask layers with no mask ID",cr="Cannot get mask view controller: no mask ID",ur="Cannot get mask view controller: no mask layers",dr="Cannot find source data for an existing mask, ID: {0}",hr="Unsupported scroll index: {0}";function gr(e,...t){return e.replace(/{(\d+)}/g,((e,n)=>t[n]||""))}const Sr="del",mr="add";function pr(e,t,n,i){return ki(e.worldToIndex(t),n,i)}class fr{mask;dataId;offsetsLists;mode;segmentNumber;srclayerid;originalValuesLists;isSilent}class Dr{#An;#wt;#xn;#Rn;#En;#Fn;#qn;#Un;#Mn;#Qn;constructor(e){this.#An=e.mask,this.#wt=e.dataId,this.#xn=e.offsetsLists,this.#Rn=e.mode,this.#En=e.segmentNumber,this.#Fn=e.srclayerid,void 0!==e.originalValuesLists&&(this.#qn=e.originalValuesLists),this.#Un=e.isSilent??!1,this.#Mn=this.#Rn===Sr?"brushremove":"brushdraw",this.#Qn="brushdraw"===this.#Mn?"brushremove":"brushdraw"}getOriginalValuesLists(){return this.#qn}getExecuteEvent(){const e="brushdraw"===this.#Mn?this.#En:void 0;return new CustomEvent(this.#Mn,{detail:{segmentnumber:e,dataid:this.#wt,srclayerid:this.#Fn}})}getName(){return"Draw-brush"}execute(){if(void 0===this.#En)return;let e=this.#En;"brushremove"===this.#Mn&&(e=0),void 0===this.#qn?this.#qn=this.#An.setAtOffsetsAndGetOriginals(this.#xn,e):this.#An.setAtOffsetsWithIterator(this.#xn,e),this.#Un||this.onExecute(this.getExecuteEvent())}undo(){void 0===this.#qn?this.#qn=this.#An.setAtOffsetsAndGetOriginals(this.#xn,0):this.#An.setAtOffsetsWithIterator(this.#xn,this.#qn);const e="brushdraw"===this.#Qn?this.#En:void 0,t=new CustomEvent(this.#Qn,{detail:{segmentnumber:e,dataid:this.#wt,srclayerid:this.#Fn}});this.onUndo(t)}onExecute(e){}onUndo(e){}}class yr extends EventTarget{#Qt;#Vn;constructor(e){super(),this.#Qt=e,this.#Vn=new pi(e)}#Nn=!1;#An;#Bn;#Gn=10;#kn={min:1,max:20};#Hn=Sr;#zn;#Wn=0;#Yn;#Xn;#jn;#Zn;#_n=[];#Kn(e,t,n){const i=e.getSize().getValues();i[2]=1;const r=new $e(i),o=new at([t],r,e.getSpacing(),e.getOrientation()),a=new Uint8Array(r.getDimSize(2));a.fill(0),++this.#Wn;const s=[this.#Wn.toString()],l=new $n(o,a,s);return l.setMeta(n),l.setPhotometricInterpretation("PALETTE COLOR"),l.setPaletteColourMap(new p([0],[0],[0])),l}#Jn(e,t,n,i,r,o){const a=function(e,t){const n=t.sort((function(e,t){let n=0;const i=e.get(2),r=t.get(2);return void 0!==i&&void 0!==r&&(n=i-r),n}));const i=n[0].get(2);if(void 0===i)return[];const r=new s([0,0,i]),o=e.indexToWorld(r),a=n.at(-1).get(2);if(void 0===a)return[];const l=new s([0,0,a]),u=e.indexToWorld(l),d=e.getOrigins(),h=.1*e.getSpacing().get(2),g=o.get3D().getClosest(d),S=d[g],m=o.get3D().getDistance(S);m>h&&c.warn("Large distance between origin and origin for first index: "+m);const p=u.get3D().getClosest(d),f=d[p],D=u.get3D().getDistance(f);return D>h&&c.warn("Large distance between origin and origin for last index: "+D),[g,p]}(e,pr(e,n,r,i));if(void 0===a||0===a.length)throw new Error(Xi);const l=e.getOrigins(),u=t.getOrigins(),d=u[0].getClosest(l),h=u.at(-1).getClosest(l),g=[];if(a[0]<d)for(let e=d-1;e>=a[0];--e)g.push(e);if(a[1]>h)for(let e=h+1;e<=a[1];++e)g.push(e);const S=[];for(const e of g)S.push(l[e]);if(void 0===this.#An)throw new Error(ji);const m=this.#An.getMeta();for(const e of S)m.numberOfFiles+=1,this.#An.appendSlice(this.#Kn(t,e,o))}#$n(e){const t=this.#ei().getId();if(void 0===this.#Bn)throw new Error($i);const n=this.#Qt.getData(this.#Bn);if(!n)throw new Error(gr(_i,this.#Bn));const i=new fr;i.mask=n.image,i.dataId=this.#Bn,i.offsetsLists=[e],i.mode=this.#Hn,i.segmentNumber=this.#zn,i.srclayerid=t;const r=new Dr(i);r.execute(),this.#jn.push(e);const o=r.getOriginalValuesLists();void 0!==o&&this.#Zn.push(o[0])}#ti(e,t){if(!t)throw new Error(gr(Wi));const n=t.getGeometry(),i=n.worldToIndex(e).get(2);if(void 0===i)throw new Error("Z position is undefined");const r=new s([0,0,i]),o=zn(),a=function(){const e="1.2.826.0.1.3680043.9.7278.1681051091011101.1";return{indices:{value:[{DimensionOrganizationUID:e,DimensionDescriptionLabel:"ReferencedSegmentNumber",DimensionIndexPointer:"(0062,000B)",FunctionalGroupPointer:"(0062,000A)"},{DimensionOrganizationUID:e,DimensionDescriptionLabel:"ImagePositionPatient",DimensionIndexPointer:"(0020,0032)",FunctionalGroupPointer:"(0020,9113)"}]},organizations:{value:[{DimensionOrganizationUID:e}]}}}();o.DimensionOrganizationSequence=a.organizations,o.DimensionIndexSequence=a.indices,o.PixelRepresentation=0,o.numberOfFiles=1;const l=t.getMeta();o.PatientID=l.PatientID,o.StudyInstanceUID=l.StudyInstanceUID,o.SeriesInstanceUID=l.SeriesInstanceUID;const c=[{referencedSOPClassUID:l.SOPClassUID,referencedSOPInstanceUID:t.getImageUid(r)}],u=[];u.push({ReferencedInstanceSequence:{value:c},SeriesInstanceUID:l.SeriesInstanceUID}),o.ReferencedSeriesSequence={value:u},o.custom={frameInfos:[{dimIndex:[1,1],refSegmentNumber:1,imagePosPat:l.ImageOrientationPatient,derivationImages:[{sourceImages:c}]}]},this.#An=this.#Kn(n,n.getOrigins()[i],o);const d=Zt(o),h=new Hi(d);return h.image=this.#An,this.#Qt.addData(h)}#ni(e){const t=this.#Qt.getDataViewConfigs();let n;for(const i in t){const r=t[i].find((function(t){return t.divId===e}));if(void 0!==r){n=r.orientation;break}}return n}#ii(e){if(void 0===this.#Bn)throw new Error(rr);const t=new Da(e);t.orientation=this.#ni(e),this.#Qt.addDataViewConfig(this.#Bn,t),this.#Qt.render(this.#Bn)}#ri(e){let t;const n=e.custom.frameInfos;if(0===n.length)return t;const i=n[0].derivationImages;if(void 0===i)return t;if(0===i.length)return t;const r=i[0].sourceImages;return void 0===r?t:0!==r.length?r[0].referencedSOPInstanceUID:void 0}#oi(e){const t=e.getMeta(),n=this.#ri(t);let i=[];"undefined"!==n&&(i=this.#Qt.getDataIdsFromSopUids([n]));let r="0";return i.length>0?r=i[0]:c.warn(gr(dr,n)),r}#ai(e){if(void 0===this.#Bn)throw new Error(lr);const t=e.getViewLayersByDataId(this.#Bn);if(0===t.length)throw new Error(er);return 1!==t.length&&c.warn(gr(nr,t.length)),t[0]}#si(e){if(void 0===e)throw new Error($i);const t=this.#Qt.getData(e);if(void 0===t)throw new Error(Ki);return t.image}#li(e){const t=Yr(e),n=new F(e.offsetX,e.offsetY),i=this.#Qt.getLayerGroupByDivId(t.groupDivId);if(void 0===i)throw new Error("No layergroup to get mask offsets");let r;if(this.#Yn=i,r=void 0===this.#Bn?i.getBaseViewLayer():i.getViewLayersByDataId(this.#Bn)[0],void 0===r)return[];const o=r.getViewController();let a,s,l,c;if(o.equalImageMeta({Modality:"SEG"})){this.#An=this.#si(this.#Bn);const e=this.#oi(this.#An),t=this.#Qt.getData(e);if(!t)throw new Error(gr(Yi,e));c=t.image;const u=i.getViewLayersByDataId(e)[0],d=u.getViewController(),h=u.displayToPlanePos(n);l=d.getPositionFromPlanePoint(h),a=r,s=o}else{const e=r.getDataId(),t=this.#Qt.getData(e);if(!t)throw new Error(gr(Yi,e));c=t.image;const u=r.displayToPlanePos(n);if(l=o.getPositionFromPlanePoint(u),this.#Bn=this.#ti(l,c),void 0===this.#An)throw new Error(Zi);const d=i.getDivId();void 0!==d&&this.#ii(d),a=this.#ai(i),s=a.getViewController()}const u=c.getGeometry(),d=this.#An.getMeta(),h=this.#An.getGeometry(),g=o.get2DSpacing(),S=[Math.round(this.#Gn/g.x),Math.round(this.#Gn/g.y)];let m;const p=o.getScrollDimIndex();switch(p){case 0:m=[1,2];break;case 1:m=[0,2];break;case 2:m=[0,1];break;default:throw new Error(gr(hr,p))}this.#Jn(u,h,l,m,S,d);const f=a.displayToPlanePos(n);return function(e,t){const n=e.getSize(),i=[];for(const e of t){const t=n.indexToOffset(e);t>=0&&i.push(t)}return i.sort((function(e,t){return e-t}))}(h,pr(h,s.getPositionFromPlanePoint(f),S,m))}#ci(e){const t=Yr(e),n=this.#Qt.getLayerGroupByDivId(t.groupDivId);if(void 0===n)throw new Error("No layergroup to check black list");if(void 0===n.getActiveDrawLayer()){const e=n.getActiveViewLayer().getDataId(),t=this.#Qt.getData(e).image.getMeta().SeriesInstanceUID;if(this.#_n.includes(t))return!0}return!1}mousedown=e=>{if(this.#ci(e))return;if(void 0===this.#zn)return void c.warn(tr);this.#Nn=!0,this.#Xn=new F(e.offsetX,e.offsetY),this.#jn=[],this.#Zn=[],this.#ui(e);const t=this.#li(e);t.length>0?this.#$n(t):(this.#Nn=!1,this.#di(e))};#ui(e){if(2===e.button){this.#Hn=Sr;const e=new CustomEvent("erasingactivated");this.dispatchEvent(e)}}#di(e){if(2===e.button){this.#Hn=mr;const e=new CustomEvent("erasingdeactivated");this.dispatchEvent(e)}}mousemove=e=>{if(!this.#Nn)return;if(void 0===this.#Xn)return;const t=new F(e.offsetX,e.offsetY),n=Math.abs(t.getX()-this.#Xn.getX()),i=Math.abs(t.getY()-this.#Xn.getY());if(n>this.#Gn/2||i>this.#Gn/2){const n=this.#li(e);n.length>0&&this.#$n(n),this.#Xn=t}};mouseup=e=>{if(this.#Nn){if(this.#Nn=!1,this.#di(e),void 0===this.#Bn)throw new Error(or);if(void 0===this.#jn)throw new Error(ar);if(void 0===this.#Zn)throw new Error(sr);this.#jn.reverse(),this.#Zn.reverse();const t=this.#ei().getId(),n=this.#Qt.getData(this.#Bn);if(!n)throw new Error(gr(Ji,this.#Bn));const i=new fr;i.mask=n.image,i.dataId=this.#Bn,i.offsetsLists=this.#jn,i.mode=this.#Hn,i.segmentNumber=this.#zn,i.srclayerid=t,i.originalValuesLists=this.#Zn;const r=new Dr(i);r.onExecute=e=>{this.dispatchEvent(e)},r.onUndo=e=>{this.dispatchEvent(e),this.#An.recalculateLabels()},this.#Qt.addToUndoStack(r),this.dispatchEvent(r.getExecuteEvent()),this.#An.recalculateLabels()}};mouseout=e=>{this.mouseup(e)};touchstart=e=>{this.mousedown(e)};touchmove=e=>{this.mousemove(e)};touchend=e=>{this.mouseup(e)};wheel=e=>{this.#Vn.wheel(e)};#ei(){if(void 0===this.#Bn)throw new Error(cr);if(void 0===this.#Yn)throw new Error("No current layer group");const e=this.#Yn.getViewLayersByDataId(this.#Bn);if(0===e.length)throw new Error(ur);return 1!==e.length&&c.warn(ir),e[0]}keydown=e=>{e.context="Brush",this.#Qt.onKeydown(e);const t=e.ctrlKey||e.altKey;!t&&"+"===e.key&&this.#Gn+1<this.#kn.max?(this.#Gn+=1,c.debug("Brush size: "+this.#Gn)):!t&&"-"===e.key&&this.#Gn-1>=this.#kn.min?(this.#Gn-=1,c.debug("Brush size: "+this.#Gn)):t||Number.isNaN(Number.parseInt(e.key,10))?t||"a"!==e.key?t||"d"!==e.key||(this.#Hn=Sr,c.debug("Brush mode: "+this.#Hn)):(this.#Hn=mr,c.debug("Brush mode: "+this.#Hn)):this.#Hn=mr};activate(e){const t=function(e){let t=[];if(!e)return[];for(const n in e)if(e[n]){const i=e[n];if(Array.isArray(i)){const e=i.map((function(e){return e.divId}));t=[...t,...e]}}return[...new Set(t)]}(this.#Qt.getDataViewConfigs());e?this.#hi(t):this.#gi(t)}#hi(e){for(const t of e){const e=document.querySelector("#"+t);if(!e)return;e.addEventListener("contextmenu",(e=>{e.preventDefault(),e.stopPropagation()}))}}#gi(e){for(const t of e){const e=document.querySelector("#"+t);if(!e)return;e.addEventListener("contextmenu",(e=>{}))}}setFeatures(e){void 0!==e.brushSizeRange&&(this.#kn=e.brushSizeRange),void 0!==e.brushSize&&e.brushSize>=this.#kn.min&&e.brushSize<this.#kn.max&&(this.#Gn=e.brushSize),void 0!==e.brushMode&&(this.#Hn=e.brushMode),e.createMask?this.#Bn=void 0:void 0!==e.maskDataId&&(this.#Bn=e.maskDataId),void 0!==e.selectedSegmentNumber&&(this.#zn=e.selectedSegmentNumber),void 0!==e.blacklist&&(this.#_n=e.blacklist)}init(){}getEventNames(){return["brushdraw","brushremove","erasingactivated","erasingdeactivated"]}getHelpKeys(){return{title:"tool.Brush.name",brief:"tool.Brush.brief",mouse:{mouse_click:"tool.Brush.mouse_click"},touch:{touch_click:"tool.Brush.touch_click"}}}}class vr{#Si=[];constructor(e){void 0!==e&&(this.#Si=e)}getPoint(e){return this.#Si[e]}getPoints(){return this.#Si}getLength(){return this.#Si.length}addPoint(e){this.#Si.push(e)}addPoints(e){this.#Si=this.#Si.concat(e)}getCentroid(){let e,t=0,n=0,i=0;for(let e=0;e<this.#Si.length;++e){const r=this.#Si[e];let o;o=e===this.#Si.length-1?this.#Si[0]:this.#Si[e+1];const a=r.getX()*o.getY()-o.getX()*r.getY();t+=a,n+=(r.getX()+o.getX())*a,i+=(r.getY()+o.getY())*a}if(0!==t){const r=1/(3*t);e=new F(r*n,r*i)}return e}}var Cr=o(324),Ir=o.n(Cr);class Tr{constructor(e,t){this.pointArray=e?e.slice():[],this.controlPointIndexArray=t?t.slice():[]}getPoint(e){return this.pointArray[e]}isControlPoint(e){const t=this.pointArray.indexOf(e);if(-1!==t)return-1!==this.controlPointIndexArray.indexOf(t);throw new Error("Error: isControlPoint called with not in list point.")}getLength(){return this.pointArray.length}addPoint(e){this.pointArray.push(e)}addControlPoint(e){const t=this.pointArray.indexOf(e);if(-1===t)throw new Error("Cannot mark a non registered point as control point.");this.controlPointIndexArray.push(t)}addPoints(e){this.pointArray=this.pointArray.concat(e)}appenPath(e){const t=this.pointArray.length;this.pointArray=this.pointArray.concat(e.pointArray);const n=[];for(let i=0;i<e.controlPointIndexArray.length;++i)n[i]=e.controlPointIndexArray[i]+t;this.controlPointIndexArray=this.controlPointIndexArray.concat(n)}}class Pr{constructor(e,t){this.bucketCount=1<<e,this.mask=this.bucketCount-1,this.size=0,this.loc=0,this.cost=void 0!==t?t:function(e){return e},this.buckets=this.buildArray(this.bucketCount)}push(e){const t=this.getBucket(e);e.next=this.buckets[t],this.buckets[t]=e,this.size++}pop(){if(0===this.size)throw new Error("Cannot pop, bucketQueue is empty.");for(;null===this.buckets[this.loc];)this.loc=(this.loc+1)%this.bucketCount;const e=this.buckets[this.loc];return this.buckets[this.loc]=e.next,e.next=null,this.size--,e}remove(e){if(!e)return!1;const t=this.getBucket(e);let n=this.buckets[t];for(;null!==n&&(null===n.next||e.x!==n.next.x||e.y!==n.next.y);)n=n.next;return null!==n&&(n.next=n.next.next,this.size--,!0)}isEmpty(){return 0===this.size}getBucket(e){return this.cost(e)&this.mask}buildArray(e){const t=new Array(e);for(let e=0;e<t.length;e++)t[e]=null;return t}}const Lr=2/(3*Math.PI);function wr(e,t,n,i,r){const o=e[i][n],a=t[i][n];let s=Math.sqrt(o*o+a*a);s=Math.max(s,1e-100),r.x=o/s,r.y=a/s}class Or{constructor(){this.width=-1,this.height=-1,this.curPoint=null,this.searchGranBits=8,this.searchGran=1<<this.searchGranBits,this.pointsPerPost=500,this.greyscale=null,this.laplace=null,this.gradient=null,this.gradX=null,this.gradY=null,this.parents=null,this.working=!1,this.trained=!1,this.trainingPoints=null,this.edgeWidth=2,this.trainingLength=32,this.edgeGran=256,this.edgeTraining=null,this.gradPointsNeeded=32,this.gradGran=1024,this.gradTraining=null,this.insideGran=256,this.insideTraining=null,this.outsideGran=256,this.outsideTraining=null}getTrainingIdx(e,t){return Math.round((e-1)*t)}getTrainedEdge(e){return this.edgeTraining[this.getTrainingIdx(this.edgeGran,e)]}getTrainedGrad(e){return this.gradTraining[this.getTrainingIdx(this.gradGran,e)]}getTrainedInside(e){return this.insideTraining[this.getTrainingIdx(this.insideGran,e)]}getTrainedOutside(e){return this.outsideTraining[this.getTrainingIdx(this.outsideGran,e)]}setWorking(e){this.working=e}setDimensions(e,t){this.width=e,this.height=t}setData(e){if(-1===this.width||-1===this.height)throw new Error("Dimensions have not been set.");this.greyscale=function(e,t,n){const i={data:[]};for(let r=0;r<n;r++){i.data[r]=[];for(let n=0;n<t;n++){const o=4*(r*t+n);i.data[r][n]=(e[o]+e[o+1]+e[o+2])/765}}return i.dx=function(e,t){return e+1===this.data[t].length&&e--,this.data[t][e+1]-this.data[t][e]},i.dy=function(e,t){return t+1===this.data.length&&t--,this.data[t][e]-this.data[t+1][e]},i.gradMagnitude=function(e,t){const n=this.dx(e,t),i=this.dy(e,t);return Math.sqrt(n*n+i*i)},i.laplace=function(e,t){let n=-16*this.data[t][e];return n+=this.data[t-2][e],n+=this.data[t-1][e-1]+2*this.data[t-1][e]+this.data[t-1][e+1],n+=this.data[t][e-2]+2*this.data[t][e-1]+2*this.data[t][e+1]+this.data[t][e+2],n+=this.data[t+1][e-1]+2*this.data[t+1][e]+this.data[t+1][e+1],n+=this.data[t+2][e],n},i}(e,this.width,this.height),this.laplace=function(e){const t=[];t[0]=[],t[1]=[];for(let n=1;n<e.data.length;n++)t[0][n]=1,t[1][n]=1;for(let n=2;n<e.data.length-2;n++){t[n]=[],t[n][0]=1,t[n][1]=1;for(let i=2;i<e.data[n].length-2;i++)t[n][i]=e.laplace(i,n)>.33?0:1;t[n][e.data[n].length-2]=1,t[n][e.data[n].length-1]=1}t[e.data.length-2]=[],t[e.data.length-1]=[];for(let n=1;n<e.data.length;n++)t[e.data.length-2][n]=1,t[e.data.length-1][n]=1;return t}(this.greyscale),this.gradient=function(e){const t=[];let n=0,i=0,r=0;for(r=0;r<e.data.length-1;r++){for(t[r]=[],i=0;i<e.data[r].length-1;i++)t[r][i]=e.gradMagnitude(i,r),n=Math.max(t[r][i],n);t[r][e.data[r].length-1]=t[r][e.data.length-2]}t[e.data.length-1]=[];for(let n=0;n<t[0].length;n++)t[e.data.length-1][n]=t[e.data.length-2][n];for(r=0;r<t.length;r++)for(i=0;i<t[r].length;i++)t[r][i]=1-t[r][i]/n;return t}(this.greyscale),this.gradX=function(e){const t=[];for(let n=0;n<e.data.length;n++){t[n]=[];for(let i=0;i<e.data[n].length-1;i++)t[n][i]=e.dx(i,n);t[n][e.data[n].length-1]=t[n][e.data[n].length-2]}return t}(this.greyscale),this.gradY=function(e){const t=[];for(let n=0;n<e.data.length-1;n++){t[n]=[];for(let i=0;i<e.data[n].length;i++)t[n][i]=e.dy(i,n)}t[e.data.length-1]=[];for(let n=0;n<e.data[0].length;n++)t[e.data.length-1][n]=t[e.data.length-2][n];return t}(this.greyscale);const t=function(e,t,n,i){const r={inside:[],outside:[]},o={x:-1,y:-1};for(let a=0;a<t.length;a++){r.inside[a]=[],r.outside[a]=[];for(let s=0;s<t[a].length;s++){wr(t,n,s,a,o);let l=Math.round(s+e*o.y),c=Math.round(a-e*o.x),u=Math.round(s-e*o.y),d=Math.round(a+e*o.x);l=Math.max(Math.min(l,t[a].length-1),0),u=Math.max(Math.min(u,t[a].length-1),0),c=Math.max(Math.min(c,t.length-1),0),d=Math.max(Math.min(d,t.length-1),0),r.inside[a][s]=i.data[c][l],r.outside[a][s]=i.data[d][u]}}return r}(this.edgeWidth,this.gradX,this.gradY,this.greyscale);this.inside=t.inside,this.outside=t.outside,this.edgeTraining=[],this.gradTraining=[],this.insideTraining=[],this.outsideTraining=[]}findTrainingPoints(e){const t=[];if(null!==this.parents)for(let n=0;n<this.trainingLength&&e;n++)t.push(e),e=this.parents[e.y][e.x];return t}resetTraining(){this.trained=!1}doTraining(e){if(this.trainingPoints=this.findTrainingPoints(e),this.trainingPoints.length<8)return;const t=[];this.calculateTraining(t,this.edgeGran,this.greyscale,this.edgeTraining),this.calculateTraining(t,this.gradGran,this.gradient,this.gradTraining),this.calculateTraining(t,this.insideGran,this.inside,this.insideTraining),this.calculateTraining(t,this.outsideGran,this.outside,this.outsideTraining),this.trainingPoints.length<this.gradPointsNeeded&&this.addInStaticGrad(this.trainingPoints.length,this.gradPointsNeeded),this.trained=!0}calculateTraining(e,t,n,i){let r=0;for(e.length=t,r=0;r<t;r++)e[r]=0;let o=1;for(r=0;r<this.trainingPoints.length;r++){const i=this.trainingPoints[r],a=this.getTrainingIdx(t,n[i.y][i.x]);e[a]+=1,o=Math.max(o,e[a])}for(r=0;r<t;r++)e[r]=1-e[r]/o;!function(e,t){t[0]=.4*e[0]+.5*e[1]+.1*e[1],t[1]=.25*e[0]+.4*e[1]+.25*e[2]+.1*e[3];for(let n=2;n<e.length-2;n++)t[n]=.05*e[n-2]+.25*e[n-1]+.4*e[n]+.25*e[n+1]+.05*e[n+2];const n=e.length;t[n-2]=.25*e[n-1]+.4*e[n-2]+.25*e[n-3]+.1*e[n-4],t[n-1]=.4*e[n-1]+.5*e[n-2]+.1*e[n-3]}(e,i)}addInStaticGrad(e,t){for(let n=0;n<this.gradGran;n++)this.gradTraining[n]=Math.min(this.gradTraining[n],1-n*(t-e)/(t*this.gradGran))}gradDirection(e,t,n,i){return function(e,t,n,i,r,o){const a={x:-1,y:-1},s={x:-1,y:-1};wr(e,t,n,i,a),wr(e,t,r,o,s);let l=a.y*(r-n)-a.x*(o-i),c=s.y*(r-n)-s.x*(o-i);return l<0&&(l=-l,c=-c),n!==r&&i!==o&&(l*=Math.SQRT1_2,c*=Math.SQRT1_2),Lr*(Math.acos(l)+Math.acos(c))}(this.gradX,this.gradY,e,t,n,i)}dist(e,t,n,i){let r=this.gradient[i][n];e!==n&&t!==i||(r*=Math.SQRT1_2);const o=this.laplace[i][n],a=this.gradDirection(e,t,n,i);return this.trained?.3*this.getTrainedGrad(r)+.3*o+.1*(a+this.getTrainedEdge(this.greyscale.data[t][e])+this.getTrainedInside(this.inside[t][e])+this.getTrainedOutside(this.outside[t][e])):.43*r+.43*o+.11*a}adj(e){const t=[],n=Math.max(e.x-1,0),i=Math.max(e.y-1,0),r=Math.min(e.x+1,this.greyscale.data[0].length-1),o=Math.min(e.y+1,this.greyscale.data.length-1);let a=0;for(let s=i;s<=o;s++)for(let i=n;i<=r;i++)i===e.x&&s===e.y||(t[a++]={x:i,y:s});return t}#mi=e=>Math.round(this.searchGran*this.cost[e.y][e.x]);setPoint(e){this.setWorking(!0),this.curPoint=e;let t=0,n=0;for(this.visited=[],n=0;n<this.height;n++)for(this.visited[n]=[],t=0;t<this.width;t++)this.visited[n][t]=!1;for(this.parents=[],n=0;n<this.height;n++)this.parents[n]=[];for(this.cost=[],n=0;n<this.height;n++)for(this.cost[n]=[],t=0;t<this.width;t++)this.cost[n][t]=Number.MAX_VALUE;this.cost[e.y][e.x]=0,this.pq=new Pr(this.searchGranBits,this.#mi),this.pq.push(e)}doWork(){if(!this.working)return;this.timeout=null;let e=0;const t=[];for(;!this.pq.isEmpty()&&e<this.pointsPerPost;){const n=this.pq.pop();t.push(n),t.push(this.parents[n.y][n.x]),this.visited[n.y][n.x]=!0;const i=this.adj(n);for(let e=0;e<i.length;e++){const t=i[e],r=this.cost[n.y][n.x]+this.dist(n.x,n.y,t.x,t.y);r<this.cost[t.y][t.x]&&(this.cost[t.y][t.x]!==Number.MAX_VALUE&&this.pq.remove(t),this.cost[t.y][t.x]=r,this.parents[t.y][t.x]=n,this.pq.push(t))}e++}return t}}class br{#pi;constructor(e){this.#pi=e}getPosition(e){let t=e.labelPosition;return void 0===t&&(t=this.#pi(e)),t}create(e,t){const n=new(Pi().Text)({fontSize:t.getFontSize(),fontFamily:t.getFontFamily(),fill:e.colour,padding:t.getTextPadding(),shadowColor:t.getShadowLineColour(),shadowOffset:t.getShadowOffset(),name:"text"}),i=e.getText();n.setText(i);const r=t.applyZoomScale(1),o={x:2*r.x,y:2*r.y},a=this.getPosition(e),s=new(Pi().Label)({x:a.getX(),y:a.getY(),scale:o,visible:0!==i.length,name:"label"});return s.add(n),s.add(new(Pi().Tag)({fill:e.colour,opacity:t.getTagOpacity()})),s}updatePosition(e,t){const n=t.getChildren((function(e){return"label"===e.name()}))[0];if(!(n instanceof Pi().Label))return;const i=this.getPosition(e);n.position({x:i.getX(),y:i.getY()})}getLabelAnchorsPosition(e){const t=e.x(),n=e.y(),i=e.width()*e.scale().x,r=e.height()*e.scale().y;return[new F(t+i/2,n),new F(t,n+r/2),new F(t+i/2,n+r),new F(t+i,n+r/2)]}getClosestPoints(e,t){let n=e[0].getDistance(t[0]),i=e[0],r=t[0];for(const o of e)for(const e of t){const t=o.getDistance(e);t<n&&(n=t,i=o,r=e)}return[i,r]}getConnector(e,t,n){const i=this.getLabelAnchorsPosition(t),r=this.getClosestPoints(e,i);return new(Pi().Line)({points:[r[0].getX(),r[0].getY(),r[1].getX(),r[1].getY()],stroke:t.getText().fill(),strokeWidth:n.getStrokeWidth(),strokeScaleEnabled:!1,visible:t.visible(),dash:[10,7],name:"connector"})}updateConnector(e,t){const n=e.getChildren((function(e){return"label"===e.name()}))[0];if(!(n instanceof Pi().Label))return;const i=this.getLabelAnchorsPosition(n),r=this.getClosestPoints(t,i),o=e.getChildren((function(e){return"connector"===e.name()}))[0];o instanceof Pi().Line&&o.points([r[0].getX(),r[0].getY(),r[1].getX(),r[1].getY()])}updateContent(e,t){const n=t.getChildren((function(e){return"label"===e.name()}))[0];if(!(n instanceof Pi().Label))return;const i=e.getText();n.getText().setText(i),n.visible()&&n.visible(0!==i.length)}}class Ar{#Tn;#fi;constructor(e,t){this.#Tn=e,this.#fi=t}getCenter(){return this.#Tn}getCentroid(){return this.#Tn}getRadius(){return this.#fi}equals(e){return null!==e&&this.getCenter().equals(e.getCenter())&&this.getRadius()===e.getRadius()}getSurface(){return Math.PI*this.getRadius()*this.getRadius()}getWorldSurface(e){return function(e,t,n){let i=null;return null!==t&&null!==n&&(i=e*t*n),i}(this.getSurface(),e.x,e.y)}getRound(){const e=this.getCenter().getX(),t=this.getCenter().getY(),n=this.getRadius(),i=Math.pow(n,2),r=t+n,o=[];for(let a=t-n;a<r;++a){const n=i-Math.pow(a-t,2);if(Math.abs(n)<1e-7)continue;const r=Math.sqrt(n);r<.5||o.push([[Math.round(e-r),Math.round(a)],[Math.round(e+r),Math.round(a)]])}return o}quantify(e,t,n){const i={},r=e.get2DSpacing();i.radius={value:this.getRadius()*r.x,unit:"unit.mm"};const o=this.getWorldSurface(r);if(null!==o&&(i.surface={value:o/100,unit:"unit.cm2"}),e.canQuantifyImage()){const r=this.getRound();if(0!==r.length){const o=e.getImageVariableRegionValues(r,t),a=e.getPixelUnit(),s=tt(o,n);i.min={value:s.min,unit:a},i.max={value:s.max,unit:a},i.mean={value:s.mean,unit:a},i.stdDev={value:s.stdDev,unit:a},void 0!==s.median&&(i.median={value:s.median,unit:a}),void 0!==s.p25&&(i.p25={value:s.p25,unit:a}),void 0!==s.p75&&(i.p75={value:s.p75,unit:a})}}return i}}class xr{#Si;constructor(e){if(e.length>3)throw new Error("Too many points for a protractor");this.#Si=e.slice(0,3)}getPoint(e){return this.#Si[e]}getLength(){return this.#Si.length}getCentroid(){return this.#Si[1]}quantify(e,t){const n={};if(3===this.#Si.length){let e=Di(new fi(this.#Si[0],this.#Si[1]),new fi(this.#Si[1],this.#Si[2]));e>180&&(e=360-e),n.angle={value:e,unit:"unit.degree"}}return n}}class Rr{#Nt;#Bt;constructor(e,t){this.#Nt=new F(Math.min(e.getX(),t.getX()),Math.min(e.getY(),t.getY())),this.#Bt=new F(Math.max(e.getX(),t.getX()),Math.max(e.getY(),t.getY()))}getBegin(){return this.#Nt}getEnd(){return this.#Bt}equals(e){return null!==e&&this.getBegin().equals(e.getBegin())&&this.getEnd().equals(e.getEnd())}getSurface(){const e=this.getBegin(),t=this.getEnd();return Math.abs(t.getX()-e.getX())*Math.abs(t.getY()-e.getY())}getWorldSurface(e){return function(e,t,n){let i=null;return null!==t&&null!==n&&(i=e*t*n),i}(this.getSurface(),e.x,e.y)}getRealWidth(){return this.getEnd().getX()-this.getBegin().getX()}getRealHeight(){return this.getEnd().getY()-this.getBegin().getY()}getWidth(){return Math.abs(this.getRealWidth())}getHeight(){return Math.abs(this.getRealHeight())}getRound(){return{min:new F(Math.round(this.getBegin().getX()),Math.round(this.getBegin().getY())),max:new F(Math.round(this.getEnd().getX()),Math.round(this.getEnd().getY()))}}getCentroid(){return new F(this.getBegin().getX()+this.getWidth()/2,this.getBegin().getY()+this.getHeight()/2)}quantify(e,t,n){const i={},r=e.get2DSpacing();i.width={value:this.getWidth()*r.x,unit:"unit.mm"},i.height={value:this.getHeight()*r.y,unit:"unit.mm"};const o=this.getWorldSurface(r);if(null!==o&&(i.surface={value:o/100,unit:"unit.cm2"}),e.canQuantifyImage()){const r=this.getRound(),o=e.getImageRegionValues(r.min,r.max,t),a=e.getPixelUnit(),s=tt(o,n);i.min={value:s.min,unit:a},i.max={value:s.max,unit:a},i.mean={value:s.mean,unit:a},i.stdDev={value:s.stdDev,unit:a},void 0!==s.median&&(i.median={value:s.median,unit:a}),void 0!==s.p25&&(i.p25={value:s.p25,unit:a}),void 0!==s.p75&&(i.p75={value:s.p75,unit:a})}return i}}function Er(e,t,n){const i=e.getValues(),r=i.slice(),o=[],a=t[0],l=Math.floor(a/2),c=t[1],u=Math.floor(c/2),d=n[0],h=n[1];for(let e=0;e<c;++e){r[h]=i[h]-u+e;for(let e=0;e<a;++e)r[d]=i[d]-l+e,o.push(new s(r.slice()))}return o}class Fr{#Di=0;#yi=0;getMin(){return this.#Di}setMin(e){this.#Di=e}getMax(){return this.#yi}setMax(e){this.#yi=e}getName(){return"Threshold"}#vi=null;setOriginalImage(e){this.#vi=e}getOriginalImage(){return this.#vi}update(){const e=this.getOriginalImage(),t=e.getDataRange().min;return e.transform((e=>e<this.getMin()||e>this.getMax()?t:e))}}class qr{getName(){return"Sharpen"}#vi=null;setOriginalImage(e){this.#vi=e}getOriginalImage(){return this.#vi}update(){return this.getOriginalImage().convolute2D([0,-1,0,-1,5,-1,0,-1,0])}}class Ur{getName(){return"Sobel"}#vi=null;setOriginalImage(e){this.#vi=e}getOriginalImage(){return this.#vi}update(){const e=this.getOriginalImage(),t=e.convolute2D([1,0,-1,2,0,-2,1,0,-1]),n=e.convolute2D([1,2,1,0,0,0,-1,-2,-1]);return t.compose(n,(function(e,t){return Math.sqrt(e*e+t*t)}))}}class Mr{#Ci;#wt;#Qt;constructor(e,t,n){this.#Ci=e,this.#wt=t,this.#Qt=n}getName(){return"Filter-"+this.#Ci.getName()}execute(){this.#Qt.setImage(this.#wt,this.#Ci.update()),this.#Qt.render(this.#wt);const e={type:"filterrun",id:this.getName(),dataId:this.#wt};this.onExecute(e)}undo(){this.#Qt.setImage(this.#wt,this.#Ci.getOriginalImage()),this.#Qt.render(this.#wt);const e={type:"filterundo",id:this.getName(),dataid:this.#wt};this.onUndo(e)}onExecute(e){}onUndo(e){}}const Qr={},Vr={},Nr={WindowLevel:class{#Qt;#Nn=!1;#Xn;#Vn;constructor(e){this.#Qt=e,this.#Vn=new pi(e)}#Ii(e,t){const n=this.#Qt.getLayerGroupByDivId(t).getActiveViewLayer();void 0!==n&&n.getViewController().isMonochrome()&&(this.#Nn=!0,this.#Xn=e)}#Ti(e,t){if(!this.#Nn)return;const n=this.#Qt.getLayerGroupByDivId(t).getActiveViewLayer();if(void 0===n)return;const i=n.getViewController(),r=e.getX()-this.#Xn.getX(),o=this.#Xn.getY()-e.getY(),a=i.getImageRescaledDataRange(),s=.01*(a.max-a.min),l=i.getWindowLevel().center,c=i.getWindowLevel().width,d=l+Math.round(o*s);let h=c+Math.round(r*s);var g;h=(g=h)<1?1:g;const S=new u(d,h);i.setWindowLevel(S),this.#Xn=e}#Pi(){this.#Nn&&(this.#Nn=!1)}mousedown=e=>{const t=hi(e),n=Yr(e);this.#Ii(t,n.groupDivId)};mousemove=e=>{const t=hi(e),n=Yr(e);this.#Ti(t,n.groupDivId)};mouseup=e=>{this.#Pi()};mouseout=e=>{this.#Pi()};touchstart=e=>{const t=di(e),n=Yr(e);this.#Ii(t[0],n.groupDivId)};touchmove=e=>{const t=di(e),n=Yr(e);this.#Ti(t[0],n.groupDivId)};touchend=e=>{this.#Pi()};dblclick=e=>{const t=Yr(e),n=hi(e),i=this.#Qt.getLayerGroupByDivId(t.groupDivId).getActiveViewLayer();if(void 0===i)return;const r=i.displayToPlaneIndex(n),o=i.getViewController();if(!o.isMonochrome())return;const a=this.#Qt.getData(i.getDataId()).image,s=new u(a.getRescaledValueAtIndex(o.getCurrentIndex().getWithNew2D(r.get(0),r.get(1))),o.getWindowLevel().width);o.setWindowLevel(s)};wheel=e=>{this.#Vn.wheel(e)};keydown=e=>{e.context="WindowLevel",this.#Qt.onKeydown(e)};activate(e){}init(){}setFeatures(e){}},Scroll:class{#Qt;#Nn=!1;#Xn;#Vn;#Li;#wi=!1;#Oi;constructor(e){this.#Qt=e,this.#Vn=new pi(e)}#bi(e){let t=e.getActiveViewLayer();if(void 0===t){const n=e.getActiveDrawLayer();if(void 0===n)return void c.warn("No draw layer to do scroll");t=e.getViewLayerById(n.getReferenceLayerId())}return t}#Ii(e,t){this.#Ai();const n=this.#Qt.getLayerGroupByDivId(t),i=this.#bi(n);if(void 0===i)return void c.warn("No view layer to start scroll");const r=i.getViewController();r.isPlaying()&&r.stop();const o=i.displayToPlanePos(e),a=r.getPositionFromPlanePoint(o);r.setCurrentPosition(a),this.#Nn=!0,this.#Xn=e}#Ti(e,t){if(!this.#Nn)return void(this.#wi&&this.#xi(e,t));const n=this.#Qt.getLayerGroupByDivId(t),i=n.getPositionHelper(),r=e.getY()-this.#Xn.getY(),o=Math.abs(r)>15,a=e.getX()-this.#Xn.getX(),s=Math.abs(a)>15;o&&n.canScroll()?r>0?i.decrementPositionAlongScroll():i.incrementPositionAlongScroll():s&&n.moreThanOne(3)&&(a>0?i.incrementPosition(3):i.decrementPosition(3)),(s||o)&&(this.#Xn=e)}#Pi(){this.#Nn&&(this.#Nn=!1)}mousedown=e=>{const t=hi(e),n=Yr(e);this.#Ii(t,n.groupDivId)};mousemove=e=>{const t=hi(e),n=Yr(e);this.#Ti(t,n.groupDivId)};mouseup=e=>{this.#Pi()};mouseout=e=>{this.#Pi(),this.#Ai()};touchstart=e=>{this.#Li=setTimeout((()=>{this.dblclick(e)}),500);const t=di(e),n=Yr(e);this.#Ii(t[0],n.groupDivId)};touchmove=e=>{null!==this.#Li&&(clearTimeout(this.#Li),this.#Li=null);const t=di(e),n=Yr(e);this.#Ti(t[0],n.groupDivId)};touchend=e=>{null!==this.#Li&&(clearTimeout(this.#Li),this.#Li=null),this.#Pi()};wheel=e=>{this.#Vn.wheel(e)};keydown=e=>{e.context="Scroll",this.#Qt.onKeydown(e)};dblclick=e=>{const t=Yr(e),n=this.#Qt.getLayerGroupByDivId(t.groupDivId).getActiveViewLayer();void 0!==n&&n.getViewController().play()};#xi(e,t){const n=this.#Qt.getLayerGroupByDivId(t);this.#Oi=t,n.showTooltip(e)}#Ai(){void 0!==this.#Oi&&(this.#Qt.getLayerGroupByDivId(this.#Oi).removeTooltipDiv(),this.#Oi=void 0)}activate(e){e||this.#Ai()}setFeatures(e){void 0!==e.displayTooltip&&(this.#wi=e.displayTooltip)}init(){}},ZoomAndPan:class{#Qt;#Nn=!1;#Xn;#Ri;#Ei;#Fi;constructor(e){this.#Qt=e}#bi(e){let t=e.getActiveViewLayer();if(void 0===t){const n=e.getActiveDrawLayer();if(void 0===n)return void c.warn("No draw layer to do zoom/pan");t=e.getViewLayerById(n.getReferenceLayerId())}return t}#Ii(e){this.#Nn=!0,this.#Xn=e,this.#Ri=!1}#qi=e=>{this.#Nn=!0,this.#Xn=e[0],this.#Ri=!1,this.#Ei=new fi(e[0],e[1]),this.#Fi=this.#Ei.getMidpoint()};#Ti(e,t){if(!this.#Nn)return;this.#Ri=!0;const n=e.getX()-this.#Xn.getX(),i=e.getY()-this.#Xn.getY(),r=this.#Qt.getLayerGroupByDivId(t),o=this.#bi(r);if(void 0===o)return void c.warn("No view layer to update zoom/pan");const a=o.getViewController(),s=o.displayToPlaneScale(new F(n,i)),l=a.getOffset3DFromPlaneOffset({x:s.getX(),y:s.getY()});r.addTranslation({x:l.getX(),y:l.getY(),z:l.getZ()}),r.draw(),this.#Xn=e}#Ui=(e,t)=>{if(!this.#Nn)return;this.#Ri=!0;const n=new fi(e[0],e[1]).getLength()/this.#Ei.getLength(),i=this.#Qt.getLayerGroupByDivId(t),r=i.getPositionHelper();if(1===n){const t=e[0].getY()-this.#Xn.getY();if(Math.abs(t)<15)return;i.canScroll()&&(t>0?r.incrementPositionAlongScroll():r.decrementPositionAlongScroll())}else{const e=(n-1)/10;if(Math.abs(e)%.1<=.05&&void 0!==this.#Fi){const t=this.#bi(i);if(void 0===t)return void c.warn("No view layer to do touch zoom/pan");const n=t.getViewController(),r=t.displayToMainPlanePos(this.#Fi),o=n.getPlanePositionFromPlanePoint(r);i.addScale(e,o),i.draw()}}};#Mi(e,t){const n=this.#Qt.getLayerGroupByDivId(t),i=this.#bi(n);if(void 0===i)return void c.warn("No view layer to set current position");const r=i.getViewController(),o=i.displayToPlanePos(e),a=r.getPositionFromPlanePoint(o);r.setCurrentPosition(a)}#Pi(){this.#Nn&&(this.#Nn=!1)}mousedown=e=>{const t=hi(e);this.#Ii(t)};mousemove=e=>{const t=hi(e),n=Yr(e);this.#Ti(t,n.groupDivId)};mouseup=e=>{if(!this.#Ri){const t=hi(e),n=Yr(e);this.#Mi(t,n.groupDivId)}this.#Pi()};mouseout=e=>{this.#Pi()};touchstart=e=>{const t=di(e);1===t.length?this.#Ii(t[0]):2===t.length&&this.#qi(t)};touchmove=e=>{const t=di(e),n=Yr(e);1===t.length?this.#Ti(t[0],n.groupDivId):2===t.length&&this.#Ui(t,n.groupDivId)};touchend=e=>{if(!this.#Ri){const t=hi(e),n=Yr(e);this.#Mi(t,n.groupDivId)}this.#Pi()};wheel=e=>{e.preventDefault();const t=-e.deltaY/500,n=Yr(e),i=hi(e),r=this.#Qt.getLayerGroupByDivId(n.groupDivId),o=this.#bi(r);if(void 0===o)return void c.warn("No view layer to do wheel zoom/pan");const a=o.getViewController(),s=o.displayToMainPlanePos(i),l=a.getPlanePositionFromPlanePoint(s);r.addScale(t,l),r.draw()};keydown=e=>{e.context="ZoomAndPan",this.#Qt.onKeydown(e)};activate(e){}init(){}setFeatures(e){}},Opacity:class{#Qt;#Nn=!1;#Xn;#Vn;constructor(e){this.#Qt=e,this.#Vn=new pi(e)}#Ii(e){this.#Nn=!0,this.#Xn=e}#Ti(e,t){if(!this.#Nn)return;const n=e.getX()-this.#Xn.getX();if(Math.abs(n)>15){const i=this.#Qt.getLayerGroupByDivId(t).getActiveLayer(),r=i.getOpacity();i.setOpacity(r+n/200),i.draw(),this.#Xn=e}}#Pi(){this.#Nn&&(this.#Nn=!1)}mousedown=e=>{const t=hi(e);this.#Ii(t)};mousemove=e=>{const t=hi(e),n=Yr(e);this.#Ti(t,n.groupDivId)};mouseup=e=>{this.#Pi()};mouseout=e=>{this.#Pi()};touchstart=e=>{const t=di(e);this.#Ii(t[0])};touchmove=e=>{const t=di(e),n=Yr(e);this.#Ti(t[0],n.groupDivId)};touchend=e=>{this.#Pi()};wheel=e=>{this.#Vn.wheel(e)};keydown=e=>{e.context="Opacity",this.#Qt.onKeydown(e)};activate(e){}init(){}setFeatures(e){}},Draw:class{#Qt;#Vn;#Qi;#Vi=!1;#Ni=null;#nn=null;#Bi=null;#Gi;#Si=[];#ki=null;#Hi=!0;#zi;#Wi;#Yi;#Xi;#ji;#Zi=!1;#z={};#_i=!1;#Ki=[];constructor(e){this.#Qt=e,this.#Vn=new pi(e),this.#ji=new Bi(e,this.#Qe),this.#Qi=e.getStyle()}#Ji(e){let t=!0;if(void 0!==this.#zi){const n=e.getActiveViewLayer().getDataId(),i=this.#Qt.getData(n).image.getMeta();t=this.#zi(i)}return t}#$i(e){let t=!0;if(void 0!==this.#Wi){const n=e.getDataId(),i=this.#Qt.getData(n).annotationGroup.getMeta();t=this.#Wi(i)}return t}#er(e){const t=e.getActiveViewLayer().getDataId(),n=this.#Qt.createAnnotationData(t);if(void 0!==this.#Yi)for(const e of this.#Yi)n.annotationGroup.setMetaValue(e.concept,e.value);this.#Qt.addAndRenderAnnotationData(n,e.getDivId(),t);const i=e.getActiveDrawLayer();return i.setShapeHandler(this.#ji),e.setActiveLayerByDataId(i.getDataId()),i}#tr(e,t){const n=this.#Qt.getLayerGroupByDivId(t);let i=n.getActiveDrawLayer();if(void 0===i){if(!this.#Ji(n))return void this.#Qe({type:"warn",message:"Cannot create draw layer, reference meta is invalid"});i=this.#er(n)}else if(!this.#$i(i))return void this.#Qe({type:"warn",message:"Cannot create draw, data meta is invalid"});const r=i.getDrawController().getAnnotationGroup(),o=i.getKonvaStage();if(this.#Qi.setZoomScale(o.scale()),r.isEditable()){const t=o.getIntersection({x:e.getX(),y:e.getY()});t?this.#nr(i,t):this.#ir(n,e)}}#bi(e){const t=e.getActiveDrawLayer();if(void 0!==t)return e.getViewLayerById(t.getReferenceLayerId());c.warn("No draw layer to do draw")}#ir(e,t){this.#ji.disableAndResetEditor(),this.#rr();const n=this.#bi(e);void 0!==n?(this.#ki=n.displayToPlanePos(t),this.#Si.push(this.#ki)):c.warn("No view layer to start shape")}#rr(){this.#Vi=!0,this.#nn=new this.#Ni[this.#Gi],this.#Si=[]}#or(){this.#Vi=!1,this.#Si=[]}#nr(e,t){let n=t.getParent();t instanceof Pi().Tag&&(n=n.getParent());const i=n.find(".shape")[0];i instanceof Pi().Shape&&(this.#Qe({type:"annotationselect",annotationid:n.id(),dataid:e.getDataId()}),this.#ji.setEditorShape(i,e))}#ar(e,t){const n=this.#Qt.getLayerGroupByDivId(t),i=this.#bi(n);if(void 0===i)return void c.warn("No view layer to update shape");const r=i.displayToPlanePos(e);(Math.abs(r.getX()-this.#ki.getX())>0||Math.abs(r.getY()-this.#ki.getY())>0)&&(this.#_i&&this.#Si.pop(),this.#ki=r,this.#_i=!0,this.#Si.push(this.#ki),this.#sr(this.#Si,n))}#lr(e){if(0!==this.#Si.length){if(this.#Si.length===this.#nn.getNPoints()){const t=this.#Qt.getLayerGroupByDivId(e);this.#cr(this.#Si,t),this.#or()}this.#_i=!1}else c.warn("Draw mouseup but no points...")}mousedown=e=>{if(this.#Vi)return;const t=hi(e),n=Yr(e);this.#tr(t,n.groupDivId)};mousemove=e=>{if(!this.#Vi)return;const t=hi(e),n=Yr(e);this.#ar(t,n.groupDivId)};mouseup=e=>{if(!this.#Vi)return;const t=Yr(e);this.#lr(t.groupDivId)};dblclick=e=>{if(this.#nn&&void 0!==this.#nn.getNPoints())return;if(!this.#Vi)return;if(0===this.#Si.length)return void c.warn("Draw dblclick but no points...");const t=Yr(e),n=this.#Qt.getLayerGroupByDivId(t.groupDivId);this.#cr(this.#Si,n),this.#or()};touchstart=e=>{if(this.#Vi)return;const t=di(e),n=Yr(e);this.#tr(t[0],n.groupDivId)};touchmove=e=>{if(!this.#Vi)return;const t=Yr(e),n=di(e),i=this.#Qt.getLayerGroupByDivId(t.groupDivId),r=this.#bi(i);if(void 0===r)return void c.warn("No view layer to handle touch move");const o=r.displayToPlanePos(n[0]);(Math.abs(o.getX()-this.#ki.getX())>0||Math.abs(o.getY()-this.#ki.getY())>0)&&(1!==this.#Si.length&&this.#Si.pop(),this.#ki=o,this.#Si.push(this.#ki),this.#Si.length<this.#nn.getNPoints()&&(clearTimeout(this.timer),this.timer=setTimeout((()=>{this.#Si.push(this.#ki)}),this.#nn.getTimeout())),this.#sr(this.#Si,i))};touchend=e=>{this.dblclick(e)};wheel=e=>{this.#Hi&&this.#Vn.wheel(e)};keydown=e=>{this.#Vi||(e.context="Draw",this.#Qt.onKeydown(e));const t=this.#ji.getEditorAnnotation();if(("Delete"===e.key||"Backspace"===e.key)&&void 0!==t){const e=this.#Qt.getActiveLayerGroup().getActiveDrawLayer();if(void 0===e)return void c.warn("No draw layer to handle key down");const n=e.getDrawController(),i=new wi(t,n);this.#Qt.addToUndoStack(i),i.execute(),this.#ji.onMouseOutShapeGroup()}if("Escape"===e.key&&null!==this.#Bi){const e=this.#Bi.getLayer();this.#Bi.destroy(),this.#Bi=null,this.#or(),e.draw()}};#sr(e,t){this.#Bi&&(this.#Bi.destroy(),this.#Bi=null);const n=t.getActiveDrawLayer();if(void 0===n)return void c.warn("No draw layer to handle new points");const i=n.getDrawController(),r=n.getKonvaLayer(),o=t.getViewLayerById(n.getReferenceLayerId());if(void 0===o)return void c.warn("No view layer to handle new points");const a=o.getViewController();if(this.#Zi){const e=["#ffff80","#ff80ff","#80ffff","#80ff80","8080ff","ff8080"],t=n.getId(),i=t.substring(t.length-1),r=e[parseInt(i,10)-1];void 0!==r&&this.#Qi.setLineColour(r)}const s=new Gr,l=i.getAnnotationGroup().getColour();s.colour=void 0!==l?l:this.#Qi.getLineColour(),s.init(a),this.#nn.setAnnotationMathShape(s,e),this.#Bi=this.#nn.createShapeGroup(s,this.#Qi),n.setLabelVisibility(this.#Bi),this.#Bi.getChildren(Ri)[0].listening(!1),r.listening(!1),r.add(this.#Bi),r.draw()}#cr(e,t){this.#Bi&&(this.#Bi.destroy(),this.#Bi=null);const n=t.getActiveDrawLayer();if(void 0===n)return void c.warn("No draw layer to handle final points");const i=n.getKonvaLayer(),r=n.getDrawController(),o=t.getViewLayerById(n.getReferenceLayerId());if(void 0===o)return void c.warn("No view layer to handle final points");const a=o.getViewController(),s=new Gr,l=r.getAnnotationGroup().getColour();if(s.colour=void 0!==l?l:this.#Qi.getLineColour(),s.setIds(),s.init(a),void 0!==this.#Xi)for(const e of this.#Xi)s.addMetaItem(e.concept,e.value);this.#nn.setAnnotationMathShape(s,e);const u=new Li(s,r);this.#Qt.addToUndoStack(u),u.execute(),i.listening(!0)}#ur(e){const t=e.getId();return void 0===this.#Ki[t]&&(this.#Ki[t]=()=>{e.activateCurrentPositionShapes(!0)}),this.#Ki[t]}#dr(e,t){e.setShapeHandler(this.#ji),e.activateCurrentPositionShapes(t),t?this.#Qt.addEventListener("positionchange",this.#ur(e)):this.#Qt.removeEventListener("positionchange",this.#ur(e))}activate(e){e||this.#ji.onMouseOutShapeGroup();const t=this.#Qt.getDrawLayers();for(const n of t)void 0!==n&&this.#dr(n,e);this.#Qt.addEventListener("drawlayeradd",(t=>{const n=this.#Qt.getDrawLayers((function(e){return e.getId()===t.layerid}));1===n.length&&this.#dr(n[0],e)}))}setOptions(e){this.#Ni=e}getOptionsType(){return"factory"}setFeatures(e){if(void 0!==e.autoShapeColour&&(this.#Zi=e.autoShapeColour),void 0!==e.shapeColour&&(this.#Qi.setLineColour(e.shapeColour),this.#Zi=!1),void 0!==e.shapeName){if(!this.hasShape(e.shapeName))throw new Error("Unknown shape: '"+e.shapeName+"'");this.#Gi=e.shapeName}void 0!==e.mouseOverCursor&&this.#ji.storeMouseOverCursor(e.mouseOverCursor),void 0!==e.withScroll&&(this.#Hi=e.withScroll),void 0!==e.refMetaValidator&&(this.#zi=e.refMetaValidator),void 0!==e.drawMetaValidator&&(this.#Wi=e.drawMetaValidator),void 0!==e.annotationGroupMeta&&(this.#Yi=e.annotationGroupMeta),void 0!==e.annotationMeta&&(this.#Xi=e.annotationMeta)}init(){}getEventNames(){return["annotationupdate","annotationselect","warn"]}addEventListener(e,t){void 0===this.#z[e]&&(this.#z[e]=[]),this.#z[e].push(t)}removeEventListener(e,t){if(void 0!==this.#z[e])for(let n=0;n<this.#z[e].length;++n)this.#z[e][n]===t&&this.#z[e].splice(n,1)}#Qe=e=>{if(void 0!==this.#z[e.type])for(let t=0;t<this.#z[e.type].length;++t)this.#z[e.type][t](e)};hasShape(e){return void 0!==this.#Ni[e]}},Brush:yr,Filter:class{#Qt;constructor(e){this.#Qt=e}#hr=null;#gr=0;#Fe=new Xe;activate(e){for(const t in this.#hr)e?(this.#hr[t].addEventListener("filterrun",this.#Qe),this.#hr[t].addEventListener("filterundo",this.#Qe)):(this.#hr[t].removeEventListener("filterrun",this.#Qe),this.#hr[t].removeEventListener("filterundo",this.#Qe))}setOptions(e){this.#hr={};for(const t in e)this.#hr[t]=new e[t](this.#Qt)}getOptionsType(){return"instance"}init(){for(const e in this.#hr)this.#hr[e].init()}keydown=e=>{e.context="Filter",this.#Qt.onKeydown(e)};getEventNames(){return["filterrun","filterundo"]}addEventListener(e,t){this.#Fe.add(e,t)}removeEventListener(e,t){this.#Fe.remove(e,t)}#Qe=e=>{this.#Fe.fireEvent(e)};getSelectedFilter(){return this.#gr}setFeatures(e){if(void 0!==e.filterName){if(!this.hasFilter(e.filterName))throw new Error("Unknown filter: '"+e.filterName+"'");this.#gr&&this.#gr.activate(!1),this.#gr=this.#hr[e.filterName],this.#gr.activate(!0)}if(void 0!==e.run&&e.run){let t={};void 0!==e.runArgs&&(t=e.runArgs),this.getSelectedFilter().run(t)}}getFilterList(){return this.#hr}hasFilter(e){return this.#hr[e]}},Floodfill:class{#Qt;constructor(e){this.#Qt=e}#Sr=5;#mr=0;#pr=2e3;#fr=null;#An=null;#Dr=10;#yr=null;#Nn=!1;#Gt;#vr;#Cr=null;#Ir=[];#Tr=!1;#Qi=new bi;setExtend(e){this.#Tr=e}getExtend(){return this.#Tr}#bi(e){const t=e.getActiveDrawLayer();if(void 0!==t)return e.getViewLayerById(t.getReferenceLayerId());c.warn("No draw layer to do floodfill")}#Pr=(e,t)=>{const n=this.#Qt.getLayerGroupByDivId(t),i=this.#bi(n);if(void 0===i)return void c.warn("No view layer to get index");const r=i.displayToPlaneIndex(e);return{x:r.get(0),y:r.get(1)}};#Lr(e,t,n){this.#Ir=[];const i={data:this.#fr.data,width:this.#fr.width,height:this.#fr.height,bytes:4};this.#An=Ir().floodFill(i,e.x,e.y,t),this.#An=Ir().gaussBlurOnlyBorder(this.#An,this.#Sr);let r=Ir().traceContours(this.#An);if(r=Ir().simplifyContours(r,this.#mr,this.#pr),r.length>0&&r[0].points[0].x){if(n)return r[0].points;for(let e=0,t=r[0].points.length;e<t;e++)this.#Ir.push(new F(r[0].points[e].x,r[0].points[e].y));return this.#Ir}return[]}#wr(e,t,n){if(this.#Cr=this.#Lr(e,t,!1),0!==this.#Cr.length){const e=n.getActiveDrawLayer();if(void 0===e)return c.warn("No draw layer to paint border"),!1;const t=e.getDrawController(),i=new vr(this.#Cr);let r;if(void 0===this.#Gt){this.#Gt=new Gr,this.#Gt.setIds(),this.#Gt.colour=this.#Qi.getLineColour();const o=n.getViewLayerById(e.getReferenceLayerId());if(void 0===o)return c.warn("No view layer to paint border"),!1;const a=o.getViewController();this.#Gt.init(a),this.#Gt.mathShape=i,r=new Li(this.#Gt,t)}else{const e=this.#Gt.mathShape;r=new Oi(this.#Gt,{mathShape:e},{mathShape:i},t)}this.#Qt.addToUndoStack(r),r.execute()}return 0!==this.#Cr.length}extend(e,t,n){if(!this.#vr)throw"'initialpoint' not found. User must click before use extend!";const i=n.getPositionHelper(),r=this.#bi(n);if(void 0===r)return void c.warn("No view layer to extend floodfill");const o=r.getViewController(),a=o.getCurrentIndex(),s=o.getImageSize(),l=this.#yr||this.#Dr;for(let e=a.get(2),r=t||s.get(2);e<r&&this.#wr(this.#vr,l,n);e++)i.incrementPositionAlongScroll();o.setCurrentIndex(a);for(let t=a.get(2),r=e||0;t>r&&this.#wr(this.#vr,l,n);t--)i.decrementPositionAlongScroll();o.setCurrentIndex(a)}onThresholdChange(e){}#Ii(e,t){this.#Gt=void 0;const n=this.#Qt.getLayerGroupByDivId(t);let i,r=n.getActiveDrawLayer();if(void 0===r){i=n.getActiveViewLayer();const e=i.getDataId(),o=this.#Qt.createAnnotationData(e);this.#Qt.addAndRenderAnnotationData(o,t,e),r=n.getActiveDrawLayer(),n.setActiveLayerByDataId(r.getDataId())}else if(i=n.getViewLayerById(r.getReferenceLayerId()),void 0===i)return void c.warn("No view layer to start floodfill");this.#fr=i.getImageData(),this.#fr?(this.#Qi.setZoomScale(r.getKonvaLayer().getAbsoluteScale()),this.#Nn=!0,this.#vr=this.#Pr(e,t),this.#wr(this.#vr,this.#Dr,n),this.onThresholdChange(this.#Dr)):c.error("No image found")}#Ti(e,t){if(!this.#Nn)return;const n=this.#Pr(e,t);this.#yr=Math.round(Math.sqrt(Math.pow(this.#vr.x-n.x,2)+Math.pow(this.#vr.y-n.y,2))/2),this.#yr=this.#yr<this.#Dr?this.#Dr:this.#yr-this.#Dr,this.#wr(this.#vr,this.#yr,this.#Qt.getLayerGroupByDivId(t)),this.onThresholdChange(this.#yr)}#Pi(){this.#Nn&&(this.#Nn=!1)}mousedown=e=>{const t=hi(e),n=Yr(e);this.#Ii(t,n.groupDivId)};mousemove=e=>{const t=hi(e),n=Yr(e);this.#Ti(t,n.groupDivId)};mouseup=e=>{this.#Pi()};mouseout=e=>{this.#Pi()};touchstart=e=>{const t=di(e),n=Yr(e);this.#Ii(t[0],n.groupDivId)};touchmove=e=>{const t=di(e),n=Yr(e);this.#Ti(t[0],n.groupDivId)};touchend=e=>{this.#Pi()};keydown=e=>{e.context="Floodfill",this.#Qt.onKeydown(e)};activate(e){e&&(this.#Qi.setBaseScale(this.#Qt.getBaseScale()),this.setFeatures({shapeColour:this.#Qi.getLineColour()}))}init(){}setFeatures(e){void 0!==e.shapeColour&&this.#Qi.setLineColour(e.shapeColour)}},Livewire:class{#Qt;constructor(e){this.#Qt=e}#Nn=!1;#Xn;#Gt;#Qi=new bi;#Or=new Tr;#br=new Tr;#Ir=[];#Ar=5;#xr(e){const t=e.get(1);for(let e=0;e<t;++e)this.#Ir[e]=[]}#Rr(){this.#Or=new Tr,this.#br=new Tr}#Er=new Or;#Ii(e,t){const n=this.#Qt.getLayerGroupByDivId(t);let i,r=n.getActiveDrawLayer();i=void 0===r?n.getActiveViewLayer():n.getViewLayerById(r.getReferenceLayerId());const o=i.getViewController().getImageSize();this.#Er.setDimensions(o.get(0),o.get(1)),this.#Er.setData(i.getImageData().data);const a=i.displayToPlaneIndex(e);if(this.#Nn){const e=Math.abs(a.get(0)-this.#Xn.getX()),t=Math.abs(a.get(1)-this.#Xn.getY());if(e<this.#Ar&&t<this.#Ar)this.#Fr();else{this.#Or=this.#br,this.#xr(o);const e={x:a.get(0),y:a.get(1)};this.#Er.doTraining(e),this.#Or.addControlPoint(this.#br.getPoint(0))}}else{if(this.#Gt=void 0,this.#Nn=!0,this.#Xn=new F(a.get(0),a.get(1)),this.#Rr(),this.#xr(o),void 0===r){const e=i.getDataId(),o=this.#Qt.createAnnotationData(e);this.#Qt.addAndRenderAnnotationData(o,t,e),r=n.getActiveDrawLayer(),n.setActiveLayerByDataId(r.getDataId())}this.#Qi.setZoomScale(r.getKonvaLayer().getAbsoluteScale());const e={x:a.get(0),y:a.get(1)};this.#Er.doTraining(e);const s=new F(a.get(0),a.get(1));this.#Or.addPoint(s),this.#Or.addControlPoint(s)}}#Ti(e,t){if(!this.#Nn)return;const n=this.#Qt.getLayerGroupByDivId(t),i=n.getActiveDrawLayer();if(void 0===i)return void c.warn("No draw layer to update livewire");const r=n.getViewLayerById(i.getReferenceLayerId());if(void 0===r)return void c.warn("No view layer to update livewire");const o=r.displayToPlaneIndex(e);let a={x:o.get(0),y:o.get(1)};this.#Er.setPoint(a);let s=[],l=!1;for(;!this.#Ir[a.y][a.x]&&!l;)if(s=this.#Er.doWork(),0===s.length)l=!0;else for(let e=0;e<s.length-1;e+=2){const t=s[e],n=s[e+1];this.#Ir[t.y][t.x]=n}for(this.#br=new Tr,l=!1;a&&!l;)this.#br.addPoint(new F(a.x,a.y)),this.#Ir[a.y]&&this.#Ir[a.y][a.x]?a=this.#Ir[a.y][a.x]:l=!0;this.#br.appenPath(this.#Or);const u=i.getDrawController(),d=new vr(this.#br.pointArray);let h;if(void 0===this.#Gt){this.#Gt=new Gr,this.#Gt.setIds(),this.#Gt.colour=this.#Qi.getLineColour();const e=r.getViewController();this.#Gt.init(e),this.#Gt.mathShape=d,h=new Li(this.#Gt,u)}else{const e=this.#Gt.mathShape;h=new Oi(this.#Gt,{mathShape:e},{mathShape:d},u)}this.#Qt.addToUndoStack(h),h.execute()}#Fr(){this.#Nn=!1}mousedown=e=>{const t=hi(e),n=Yr(e);this.#Ii(t,n.groupDivId)};mousemove=e=>{const t=hi(e),n=Yr(e);this.#Ti(t,n.groupDivId)};mouseup(e){}mouseout=e=>{};dblclick=e=>{this.#Fr()};touchstart=e=>{const t=di(e),n=Yr(e);this.#Ii(t[0],n.groupDivId)};touchmove=e=>{const t=di(e),n=Yr(e);this.#Ti(t[0],n.groupDivId)};touchend=e=>{};keydown=e=>{e.context="Livewire",this.#Qt.onKeydown(e)};activate(e){e&&(this.#Qi.setBaseScale(this.#Qt.getBaseScale()),this.setFeatures({shapeColour:this.#Qi.getLineColour()}))}init(){}setFeatures(e){void 0!==e.shapeColour&&this.#Qi.setLineColour(e.shapeColour)}}},Br={draw:{ArrowFactory:class{#qr="arrow";#Ur=new br(this.#Mr);static supports(e){return e instanceof F}getName(){return this.#qr}getGroupName(){return this.#qr+"-group"}getNPoints(){return 2}getTimeout(){return 0}setAnnotationMathShape(e,t){e.mathShape=this.#Qr(t),e.referencePoints=[t[1]],e.setTextExpr(this.#Vr()),e.updateQuantification()}createShapeGroup(e,t){const n=new(Pi().Group);n.name(this.getGroupName()),n.visible(!0),n.id(e.trackingUid);const i=this.#Nr(e,t);n.add(i);const r=this.#Br(e,t);for(const e of r)n.add(e);const o=this.#Ur.create(e,t);n.add(o);const a=this.#Gr(i);return n.add(this.#Ur.getConnector(a,o,t)),n}#Gr(e){const t=e.points(),n=e.x(),i=e.y(),r=(t[0]+t[2])/2+n,o=(t[1]+t[3])/2+i;return[new F(r,o)]}#kr(e){const t=e.points(),n=e.x(),i=e.y();return[new F(t[0]+n,t[1]+i),new F(t[2]+n,t[3]+i)]}getAnchors(e,t){const n=this.#kr(e),i=[];for(let e=0;e<n.length;++e)i.push(Mi(n[e].getX(),n[e].getY(),"anchor"+e,t));return i}constrainAnchorMove(e){}updateShapeGroupOnAnchorMove(e,t,n){const i=t.getParent();i instanceof Pi().Group&&(this.#Hr(e,t,n),this.updateLabelContent(e,i,n),void 0===e.labelPosition?this.#Ur.updatePosition(e,i):this.updateConnector(i))}updateAnnotationOnAnchorMove(e,t){const n=t.getParent();if(!(n instanceof Pi().Group))return;const i=this.#zr(n),r=qi(n,0),o=qi(n,1),a=new F(r.x()-i.x(),r.y()-i.y()),s=new F(o.x()-i.x(),o.y()-i.y());e.mathShape=a,e.referencePoints=[s],e.updateQuantification()}updateAnnotationOnTranslation(e,t){const n=e.mathShape,i=e.referencePoints[0],r=new fi(n,i),o=r.getBegin(),a=new F(o.getX()+t.x,o.getY()+t.y),s=r.getEnd(),l=new F(s.getX()+t.x,s.getY()+t.y);e.mathShape=a,e.referencePoints=[l],e.updateQuantification()}updateLabelContent(e,t,n){this.#Ur.updateContent(e,t)}updateConnector(e){const t=this.#zr(e),n=this.#Gr(t);this.#Ur.updateConnector(e,n)}#Qr(e){return e[0]}#Vr(){return void 0!==w.labelTexts&&void 0!==w.labelTexts[this.#qr]?w.labelTexts[this.#qr]:Ai[this.#qr]}#Nr(e,t){const n=e.mathShape;if(void 0===e.referencePoints||0===e.referencePoints.length)throw new Error("No reference point for arrow");const i=e.referencePoints[0],r=new fi(n,i),o=new(Pi().Line)({points:[n.getX(),n.getY(),i.getX(),i.getY()],stroke:e.colour,strokeWidth:t.getStrokeWidth(),strokeScaleEnabled:!1,name:"shape"}),a=vi(r,n,20,t.getZoomScale()),s=vi(r,i,20,t.getZoomScale());return o.hitFunc((function(e){e.beginPath(),e.moveTo(a.getBegin().getX(),a.getBegin().getY()),e.lineTo(a.getEnd().getX(),a.getEnd().getY()),e.lineTo(s.getEnd().getX(),s.getEnd().getY()),e.lineTo(s.getBegin().getX(),s.getBegin().getY()),e.closePath(),e.fillStrokeShape(o)})),o}#zr(e){return Fi(e)}#Br(e,t){const n=e.mathShape,i=e.referencePoints[0],r=new fi(n,i),o=Ci(r,40,20,t.getZoomScale());return[new(Pi().Line)({points:[r.getBegin().getX(),r.getBegin().getY(),o.getBegin().getX(),o.getBegin().getY(),o.getEnd().getX(),o.getEnd().getY()],fill:e.colour,strokeWidth:t.getStrokeWidth(),strokeScaleEnabled:!1,closed:!0,name:"shape-triangle"})]}#Mr(e){return e.mathShape}#Hr(e,t,n){const i=e.mathShape,r=e.referencePoints[0],o=new fi(i,r),a=t.getParent();if(!(a instanceof Pi().Group))return;const s=this.#zr(a);s.position({x:0,y:0}),s.points([i.getX(),i.getY(),r.getX(),r.getY()]);const l=a.getChildren((function(e){return"shape-triangle"===e.name()}))[0];if(!(l instanceof Pi().Line))return;const u=qi(a,0),d=qi(a,1);switch(t.id()){case"anchor0":u.x(t.x()),u.y(t.y());break;case"anchor1":d.x(t.x()),d.y(t.y());break;default:c.error("Unhandled anchor id: "+t.id())}const h=Ci(o,40,20,n.getZoomScale());l.position({x:0,y:0}),l.points([o.getBegin().getX(),o.getBegin().getY(),h.getBegin().getX(),h.getBegin().getY(),h.getEnd().getX(),h.getEnd().getY()]);const g=vi(o,i,20,n.getZoomScale()),S=vi(o,r,20,n.getZoomScale());s.hitFunc((function(e){e.beginPath(),e.moveTo(g.getBegin().getX(),g.getBegin().getY()),e.lineTo(g.getEnd().getX(),g.getEnd().getY()),e.lineTo(S.getEnd().getX(),S.getEnd().getY()),e.lineTo(S.getBegin().getX(),S.getBegin().getY()),e.closePath(),e.fillStrokeShape(s)}))}#Wr(e,t){}#Yr(e,t){}},CircleFactory:class{#qr="circle";#Ur=new br(this.#Mr);static supports(e){return e instanceof Ar}getName(){return this.#qr}getGroupName(){return this.#qr+"-group"}getNPoints(){return 2}getTimeout(){return 0}setAnnotationMathShape(e,t){e.mathShape=this.#Qr(t),e.setTextExpr(this.#Vr()),e.updateQuantification()}createShapeGroup(e,t){const n=new(Pi().Group);n.name(this.getGroupName()),n.visible(!0),n.id(e.trackingUid);const i=this.#Nr(e,t);n.add(this.#Nr(e,t));const r=this.#Ur.create(e,t);n.add(this.#Ur.create(e,t));const o=this.#Gr(i);return n.add(this.#Ur.getConnector(o,r,t)),n}#Gr(e){const t=e.x(),n=e.y(),i=e.radius()*Math.sqrt(2)/2;return[new F(t-i,n-i),new F(t+i,n-i),new F(t-i,n+i),new F(t+i,n+i)]}#kr(e){const t=e.x(),n=e.y(),i=e.radius();return[new F(t-i,n),new F(t+i,n),new F(t,n+i),new F(t,n-i)]}getAnchors(e,t){const n=this.#kr(e),i=[];for(let e=0;e<n.length;++e)i.push(Mi(n[e].getX(),n[e].getY(),"anchor"+e,t));return i}constrainAnchorMove(e){const t=e.getParent();if(!(t instanceof Pi().Group))return;const n=qi(t,0),i=qi(t,1),r=qi(t,2),o=qi(t,3);switch(e.id()){case"anchor0":n.y(i.y());break;case"anchor1":i.y(n.y());break;case"anchor2":r.x(o.x());break;case"anchor3":o.x(r.x());break;default:c.error("Unhandled anchor id: "+e.id())}}updateShapeGroupOnAnchorMove(e,t,n){const i=t.getParent();i instanceof Pi().Group&&(this.#Hr(e,t,n),this.updateLabelContent(e,i,n),void 0===e.labelPosition?this.#Ur.updatePosition(e,i):this.updateConnector(i))}updateAnnotationOnAnchorMove(e,t){const n=e.mathShape,i=new F(n.getCenter().getX(),n.getCenter().getY()),r=new F(t.x(),t.y()),o=i.getDistance(r);e.mathShape=new Ar(i,o),e.updateQuantification()}updateAnnotationOnTranslation(e,t){const n=e.mathShape,i=n.getCenter(),r=new F(i.getX()+t.x,i.getY()+t.y);e.mathShape=new Ar(r,n.getRadius()),e.updateQuantification()}updateLabelContent(e,t,n){this.#Ur.updateContent(e,t)}updateConnector(e){const t=this.#zr(e),n=this.#Gr(t);this.#Ur.updateConnector(e,n)}#Qr(e){const t=Math.abs(e[0].getX()-e[1].getX()),n=Math.abs(e[0].getY()-e[1].getY()),i=Math.round(Math.sqrt(t*t+n*n));return new Ar(e[0],i)}#Vr(){return void 0!==w.labelTexts&&void 0!==w.labelTexts[this.#qr]?w.labelTexts[this.#qr]:Ai[this.#qr]}#Nr(e,t){const n=e.mathShape;return new(Pi().Circle)({x:n.getCenter().getX(),y:n.getCenter().getY(),radius:n.getRadius(),stroke:e.colour,strokeWidth:t.getStrokeWidth(),strokeScaleEnabled:!1,name:"shape"})}#zr(e){const t=e.getChildren(Ri)[0];if(t instanceof Pi().Circle)return t}#Mr(e){const t=e.mathShape,n=t.getCenter(),i=t.getRadius();return new F(n.getX()-i,n.getY()+i)}#Hr(e,t,n){const i=e.mathShape,r=i.getCenter(),o=i.getRadius(),a=t.getParent();if(!(a instanceof Pi().Group))return;this.#zr(a).radius(o);const s=qi(a,0),l=qi(a,1),u=qi(a,2),d=qi(a,3),h=l.x()<s.x()?-1:1,g=d.y()<u.y()?1:-1;switch(t.id()){case"anchor0":s.x(t.x()),l.x(r.getX()+h*o),u.y(r.getY()+o),d.y(r.getY()-o);break;case"anchor1":l.x(t.x()),s.x(r.getX()-h*o),u.y(r.getY()+o),d.y(r.getY()-o);break;case"anchor2":u.y(t.y()),s.x(r.getX()-o),l.x(r.getX()+o),d.y(r.getY()-g*o);break;case"anchor3":d.y(t.y()),s.x(r.getX()-o),l.x(r.getX()+o),u.y(r.getY()+g*o);break;default:c.error("Unhandled anchor id: "+t.id())}}#Wr(e,t){const n=e.mathShape;let i=0,r=0;void 0!==t&&(i=t.x(),r=t.y());const o=new(Pi().Group);o.name("shadow");const a=n.getRound();for(let t=0;t<a.length;++t){const n=a[t],s=n[0][0],l=n[0][1],c=n[1][0],u=new(Pi().Rect)({x:s-i,y:l-r,width:c-s,height:1,fill:e.colour,strokeWidth:0,strokeScaleEnabled:!1,opacity:.3,name:"shadow-element"});o.add(u)}return o}#Yr(e,t){const n=t.getChildren((function(e){return"shadow"===e.name()}))[0];if(void 0!==n){n.destroy();const i=this.#Wr(e,t);t.add(i),i.moveToBottom()}}},EllipseFactory:class{#qr="ellipse";#Ur=new br(this.#Mr);static supports(e){return e instanceof Gi}getName(){return this.#qr}getGroupName(){return this.#qr+"-group"}getNPoints(){return 2}getTimeout(){return 0}setAnnotationMathShape(e,t){e.mathShape=this.#Qr(t),e.setTextExpr(this.#Vr()),e.updateQuantification()}createShapeGroup(e,t){const n=new(Pi().Group);n.name(this.getGroupName()),n.visible(!0),n.id(e.trackingUid);const i=this.#Nr(e,t);n.add(this.#Nr(e,t));const r=this.#Ur.create(e,t);n.add(this.#Ur.create(e,t));const o=this.#Gr(i);return n.add(this.#Ur.getConnector(o,r,t)),n}#Gr(e){const t=e.x(),n=e.y(),i=e.radiusX()*Math.sqrt(2)/2,r=e.radiusY()*Math.sqrt(2)/2;return[new F(t-i,n-r),new F(t+i,n-r),new F(t-i,n+r),new F(t+i,n+r)]}#kr(e){const t=e.x(),n=e.y(),i=e.radius();return[new F(t-i.x,n),new F(t+i.x,n),new F(t,n+i.y),new F(t,n-i.y)]}getAnchors(e,t){const n=this.#kr(e),i=[];for(let e=0;e<n.length;++e)i.push(Mi(n[e].getX(),n[e].getY(),"anchor"+e,t));return i}constrainAnchorMove(e){const t=e.getParent();if(!(t instanceof Pi().Group))return;const n=qi(t,0),i=qi(t,1),r=qi(t,2),o=qi(t,3);switch(e.id()){case"anchor0":n.y(i.y());break;case"anchor1":i.y(n.y());break;case"anchor2":r.x(o.x());break;case"anchor3":o.x(r.x());break;default:c.error("Unhandled anchor id: "+e.id())}}updateShapeGroupOnAnchorMove(e,t,n){const i=t.getParent();i instanceof Pi().Group&&(this.#Hr(e,t,n),this.updateLabelContent(e,i,n),void 0===e.labelPosition?this.#Ur.updatePosition(e,i):this.updateConnector(i))}updateAnnotationOnAnchorMove(e,t){const n=e.mathShape,i=n.getCenter();let r=n.getA(),o=n.getB();switch(t.id()){case"anchor0":r=i.getX()-t.x();break;case"anchor1":r=t.x()-i.getX();break;case"anchor2":o=t.y()-i.getY();break;case"anchor3":o=i.getY()-t.y();break;default:c.error("Unhandled anchor id: "+t.id())}e.mathShape=new Gi(i,Math.abs(r),Math.abs(o)),e.updateQuantification()}updateAnnotationOnTranslation(e,t){const n=e.mathShape,i=n.getCenter(),r=new F(i.getX()+t.x,i.getY()+t.y);e.mathShape=new Gi(r,n.getA(),n.getB()),e.updateQuantification()}updateLabelContent(e,t,n){this.#Ur.updateContent(e,t)}updateConnector(e){const t=this.#zr(e),n=this.#Gr(t);this.#Ur.updateConnector(e,n)}#Qr(e){const t=Math.abs(e[0].getX()-e[1].getX()),n=Math.abs(e[0].getY()-e[1].getY());return new Gi(e[0],t,n)}#Vr(){return void 0!==w.labelTexts&&void 0!==w.labelTexts[this.#qr]?w.labelTexts[this.#qr]:Ai[this.#qr]}#Nr(e,t){const n=e.mathShape,i=n.getCenter(),r={x:n.getA(),y:n.getB()};return new(Pi().Ellipse)({x:i.getX(),y:i.getY(),radius:r,radiusX:r.x,radiusY:r.y,stroke:e.colour,strokeWidth:t.getStrokeWidth(),strokeScaleEnabled:!1,name:"shape"})}#zr(e){const t=e.getChildren(Ri)[0];if(t instanceof Pi().Ellipse)return t}#Mr(e){const t=e.mathShape,n=t.getCenter();return new F(n.getX()-t.getA(),n.getY()+t.getB())}#Hr(e,t,n){const i=e.mathShape,r=i.getCenter(),o=i.getA(),a=i.getB(),s=t.getParent();if(!(s instanceof Pi().Group))return;this.#zr(s).radius({x:o,y:a});const l=qi(s,0),u=qi(s,1),d=qi(s,2),h=qi(s,3),g=u.x()<l.x()?-1:1,S=h.y()<d.y()?1:-1;switch(t.id()){case"anchor0":l.x(t.x()),u.x(r.getX()+g*o),d.y(r.getY()+a),h.y(r.getY()-a);break;case"anchor1":u.x(t.x()),l.x(r.getX()-g*o),d.y(r.getY()+a),h.y(r.getY()-a);break;case"anchor2":d.y(t.y()),l.x(r.getX()-o),u.x(r.getX()+o),h.y(r.getY()-S*a);break;case"anchor3":h.y(t.y()),l.x(r.getX()-o),u.x(r.getX()+o),d.y(r.getY()+S*a);break;default:c.error("Unhandled anchor id: "+t.id())}}#Wr(e,t){const n=e.mathShape;let i=0,r=0;void 0!==t&&(i=t.x(),r=t.y());const o=new(Pi().Group);o.name("shadow");const a=n.getRound();for(let t=0;t<a.length;++t){const n=a[t],s=n[0][0],l=n[0][1],c=n[1][0],u=new(Pi().Rect)({x:s-i,y:l-r,width:c-s,height:1,fill:e.colour,strokeWidth:0,strokeScaleEnabled:!1,opacity:.3,name:"shadow-element"});o.add(u)}return o}#Yr(e,t){const n=t.getChildren((function(e){return"shadow"===e.name()}))[0];if(void 0!==n){n.destroy();const i=this.#Wr(e,t);t.add(i),i.moveToBottom()}}},ProtractorFactory:class{#qr="protractor";#Ur=new br(this.#Mr);static supports(e){return e instanceof xr}getName(){return this.#qr}getGroupName(){return this.#qr+"-group"}getNPoints(){return 3}getTimeout(){return 500}setAnnotationMathShape(e,t){e.mathShape=this.#Qr(t),e.setTextExpr(this.#Vr()),e.updateQuantification()}createShapeGroup(e,t){const n=e.mathShape,i=new(Pi().Group);i.name(this.getGroupName()),i.visible(!0),i.id(e.trackingUid);const r=this.#Nr(e,t);if(i.add(this.#Nr(e,t)),n.getLength()===this.getNPoints()){const n=this.#Br(e,t);for(const e of n)i.add(e);const o=this.#Ur.create(e,t);i.add(this.#Ur.create(e,t));const a=this.#Gr(r);i.add(this.#Ur.getConnector(a,o,t))}return i}#Gr(e){const t=e.points(),n=e.x(),i=e.y();return[new F(t[2]+n,t[3]+i)]}#kr(e){const t=e.points(),n=e.x(),i=e.y();return[new F(t[0]+n,t[1]+i),new F(t[2]+n,t[3]+i),new F(t[4]+n,t[5]+i)]}getAnchors(e,t){const n=this.#kr(e),i=[];for(let e=0;e<n.length;++e)i.push(Mi(n[e].getX(),n[e].getY(),"anchor"+e,t));return i}constrainAnchorMove(e){}updateShapeGroupOnAnchorMove(e,t,n){const i=t.getParent();i instanceof Pi().Group&&(this.#Hr(e,t,n),this.updateLabelContent(e,i,n),void 0===e.labelPosition?this.#Ur.updatePosition(e,i):this.updateConnector(i))}updateAnnotationOnAnchorMove(e,t){const n=t.getParent();if(!(n instanceof Pi().Group))return;const i=this.#zr(n),r=qi(n,0),o=qi(n,1),a=qi(n,2),s=new F(r.x()-i.x(),r.y()-i.y()),l=new F(o.x()-i.x(),o.y()-i.y()),c=new F(a.x()-i.x(),a.y()-i.y());e.mathShape=new xr([s,l,c]),e.updateQuantification()}updateAnnotationOnTranslation(e,t){const n=e.mathShape,i=[];for(let e=0;e<3;++e)i.push(new F(n.getPoint(e).getX()+t.x,n.getPoint(e).getY()+t.y));e.mathShape=new xr(i),e.updateQuantification()}updateLabelContent(e,t,n){this.#Ur.updateContent(e,t)}updateConnector(e){const t=this.#zr(e),n=this.#Gr(t);this.#Ur.updateConnector(e,n)}#Qr(e){return new xr(e)}#Vr(){return void 0!==w.labelTexts&&void 0!==w.labelTexts[this.#qr]?w.labelTexts[this.#qr]:Ai[this.#qr]}#Nr(e,t){const n=e.mathShape,i=[];for(let e=0;e<n.getLength();++e)i.push(n.getPoint(e).getX()),i.push(n.getPoint(e).getY());const r=new(Pi().Line)({points:i,stroke:e.colour,strokeWidth:t.getStrokeWidth(),strokeScaleEnabled:!1,name:"shape"});return n.getLength()===this.getNPoints()&&r.hitFunc((function(e){e.beginPath(),e.moveTo(n.getPoint(0).getX(),n.getPoint(0).getY()),e.lineTo(n.getPoint(1).getX(),n.getPoint(1).getY()),e.lineTo(n.getPoint(2).getX(),n.getPoint(2).getY()),e.closePath(),e.fillStrokeShape(r)})),r}#zr(e){return Fi(e)}#Br(e,t){const n=e.mathShape,i=new fi(n.getPoint(0),n.getPoint(1)),r=new fi(n.getPoint(1),n.getPoint(2));let o=Di(i,r),a=i.getInclination();o>180&&(o=360-o,a+=o);const s=33*Math.min(i.getLength(),r.getLength())/100;return[new(Pi().Arc)({innerRadius:s,outerRadius:s,stroke:e.colour,strokeWidth:t.getStrokeWidth(),strokeScaleEnabled:!1,angle:o,rotation:-a,x:n.getPoint(1).getX(),y:n.getPoint(1).getY(),name:"shape-arc"})]}#Mr(e){const t=e.mathShape,n=new fi(t.getPoint(0),t.getPoint(1)),i=new fi(t.getPoint(1),t.getPoint(2)),r=(n.getMidpoint().getX()+i.getMidpoint().getX())/2,o=(n.getMidpoint().getY()+i.getMidpoint().getY())/2;return new F(r,o)}#Hr(e,t,n){const i=e.mathShape,r=new fi(i.getPoint(0),i.getPoint(1)),o=new fi(i.getPoint(1),i.getPoint(2)),a=t.getParent();if(!(a instanceof Pi().Group))return;const s=this.#zr(a);s.position({x:0,y:0}),s.points([i.getPoint(0).getX(),i.getPoint(0).getY(),i.getPoint(1).getX(),i.getPoint(1).getY(),i.getPoint(2).getX(),i.getPoint(2).getY()]);const l=a.getChildren((function(e){return"shape-arc"===e.name()}))[0];if(!(l instanceof Pi().Arc))return;const c=qi(a,0),u=qi(a,1),d=qi(a,2);switch(t.id()){case"anchor0":c.x(t.x()),c.y(t.y());break;case"anchor1":u.x(t.x()),u.y(t.y());break;case"anchor2":d.x(t.x()),d.y(t.y())}let h=Di(r,o),g=r.getInclination();h>180&&(h=360-h,g+=h);const S=33*Math.min(r.getLength(),o.getLength())/100;l.innerRadius(S),l.outerRadius(S),l.angle(h),l.rotation(-g);const m={x:u.x(),y:u.y()};l.position(m),s.hitFunc((function(e){e.beginPath(),e.moveTo(i.getPoint(0).getX(),i.getPoint(0).getY()),e.lineTo(i.getPoint(1).getX(),i.getPoint(1).getY()),e.lineTo(i.getPoint(2).getX(),i.getPoint(2).getY()),e.closePath(),e.fillStrokeShape(s)}))}#Wr(e,t){}#Yr(e,t){}},RectangleFactory:class{#qr="rectangle";#Ur=new br(this.#Mr);static supports(e){return e instanceof Rr}getName(){return this.#qr}getGroupName(){return this.#qr+"-group"}getNPoints(){return 2}getTimeout(){return 0}setAnnotationMathShape(e,t){e.mathShape=this.#Qr(t),e.setTextExpr(this.#Vr()),e.updateQuantification()}createShapeGroup(e,t){const n=new(Pi().Group);n.name(this.getGroupName()),n.visible(!0),n.id(e.trackingUid);const i=this.#Nr(e,t);n.add(i);const r=this.#Ur.create(e,t);n.add(r);const o=this.#Gr(i);return n.add(this.#Ur.getConnector(o,r,t)),n}#Gr(e){const t=e.x(),n=e.y(),i=e.width(),r=e.height();return[new F(t+i/2,n),new F(t,n+r/2),new F(t+i/2,n+r),new F(t+i,n+r/2)]}#kr(e){const t=e.x(),n=e.y(),i=e.width(),r=e.height();return[new F(t,n),new F(t+i,n),new F(t+i,n+r),new F(t,n+r)]}getAnchors(e,t){const n=this.#kr(e),i=[];for(let e=0;e<n.length;++e)i.push(Mi(n[e].getX(),n[e].getY(),"anchor"+e,t));return i}constrainAnchorMove(e){}updateShapeGroupOnAnchorMove(e,t,n){const i=t.getParent();i instanceof Pi().Group&&(this.#Hr(e,t,n),this.updateLabelContent(e,i,n),void 0===e.labelPosition?this.#Ur.updatePosition(e,i):this.updateConnector(i))}updateAnnotationOnAnchorMove(e,t){const n=t.getParent();if(!(n instanceof Pi().Group))return;const i=qi(n,0),r=qi(n,2),o=new F(i.x(),i.y()),a=new F(r.x(),r.y());e.mathShape=new Rr(o,a),e.updateQuantification()}updateAnnotationOnTranslation(e,t){const n=e.mathShape,i=n.getBegin(),r=new F(i.getX()+t.x,i.getY()+t.y),o=n.getEnd(),a=new F(o.getX()+t.x,o.getY()+t.y);e.mathShape=new Rr(r,a),e.updateQuantification()}updateLabelContent(e,t,n){this.#Ur.updateContent(e,t)}updateConnector(e){const t=this.#zr(e),n=this.#Gr(t);this.#Ur.updateConnector(e,n)}#Qr(e){return new Rr(e[0],e[1])}#Vr(){return void 0!==w.labelTexts&&void 0!==w.labelTexts[this.#qr]?w.labelTexts[this.#qr]:Ai[this.#qr]}#Nr(e,t){const n=e.mathShape;return new(Pi().Rect)({x:n.getBegin().getX(),y:n.getBegin().getY(),width:n.getWidth(),height:n.getHeight(),stroke:e.colour,strokeWidth:t.getStrokeWidth(),strokeScaleEnabled:!1,name:"shape"})}#zr(e){const t=e.getChildren(Ri)[0];if(t instanceof Pi().Rect)return t}#Mr(e){const t=e.mathShape;return new F(t.getBegin().getX(),t.getEnd().getY())}#Hr(e,t,n){const i=e.mathShape,r=i.getBegin(),o=t.getParent();if(!(o instanceof Pi().Group))return;const a=this.#zr(o);a.position({x:r.getX(),y:r.getY()}),a.size({width:i.getWidth(),height:i.getHeight()});const s=qi(o,0),l=qi(o,1),u=qi(o,2),d=qi(o,3);switch(t.id()){case"anchor0":s.x(t.x()),s.y(t.y()),l.y(t.y()),d.x(t.x());break;case"anchor1":l.x(t.x()),l.y(t.y()),s.y(t.y()),u.x(t.x());break;case"anchor2":u.x(t.x()),u.y(t.y()),d.y(t.y()),l.x(t.x());break;case"anchor3":d.x(t.x()),d.y(t.y()),u.y(t.y()),s.x(t.x());break;default:c.error("Unhandled anchor id: "+t.id())}}#Wr(e,t){const n=e.mathShape.getRound(),i=n.max.getX()-n.min.getX(),r=n.max.getY()-n.min.getY();return new(Pi().Rect)({x:n.min.getX(),y:n.min.getY(),width:i,height:r,fill:e.colour,strokeWidth:0,strokeScaleEnabled:!1,opacity:.3,name:"shadow"})}#Yr(e,t){const n=t.getChildren((function(e){return"shadow"===e.name()}))[0];if(void 0!==n){n.destroy();const i=this.#Wr(e);t.add(i),i.moveToBottom()}}},RoiFactory:class{#qr="roi";#Ur=new br(this.#Mr);static supports(e){return e instanceof vr}getName(){return this.#qr}getGroupName(){return this.#qr+"-group"}getNPoints(){}getTimeout(){return 100}setAnnotationMathShape(e,t){e.mathShape=this.#Qr(t),e.setTextExpr(this.#Vr()),e.updateQuantification()}createShapeGroup(e,t){const n=new(Pi().Group);n.name(this.getGroupName()),n.visible(!0),n.id(e.trackingUid);const i=this.#Nr(e,t);n.add(this.#Nr(e,t));const r=this.#Ur.create(e,t);n.add(this.#Ur.create(e,t));const o=this.#Gr(i);return n.add(this.#Ur.getConnector(o,r,t)),n}#kr(e){const t=e.points(),n=e.x(),i=e.y(),r=[];for(let e=0;e<t.length;e+=2)r.push(new F(t[e]+n,t[e+1]+i));return r}#Gr(e){const t=e.points(),n=e.x(),i=e.y(),r=[];for(let e=0;e<t.length;e+=2){const o=(e+2)%t.length,a=(t[e]+t[o])/2+n,s=(t[e+1]+t[o+1])/2+i;r.push(new F(a,s))}return r}getAnchors(e,t){const n=this.#kr(e),i=[];for(let e=0;e<n.length;++e)i.push(Mi(n[e].getX(),n[e].getY(),"anchor"+e,t));return i}constrainAnchorMove(e){}updateShapeGroupOnAnchorMove(e,t,n){const i=t.getParent();i instanceof Pi().Group&&(this.#Hr(e,t,n),this.updateLabelContent(e,i,n),void 0===e.labelPosition?this.#Ur.updatePosition(e,i):this.updateConnector(i))}updateAnnotationOnAnchorMove(e,t){const n=t.getParent();if(!(n instanceof Pi().Group))return;const i=this.#zr(n),r=e.mathShape.getPoints().slice(),o=new F(t.x()-i.x(),t.y()-i.y());r[Qi(t.id())]=o,e.mathShape=new vr(r),e.updateQuantification()}updateAnnotationOnTranslation(e,t){const n=e.mathShape,i=[];for(let e=0;e<n.getLength();++e)i.push(new F(n.getPoint(e).getX()+t.x,n.getPoint(e).getY()+t.y));e.mathShape=new vr(i),e.updateQuantification()}updateLabelContent(e,t,n){this.#Ur.updateContent(e,t)}updateConnector(e){const t=this.#zr(e),n=this.#Gr(t);this.#Ur.updateConnector(e,n)}#Qr(e){return new vr(e)}#Vr(){return void 0!==w.labelTexts&&void 0!==w.labelTexts[this.#qr]?w.labelTexts[this.#qr]:Ai[this.#qr]}#Nr(e,t){const n=e.mathShape,i=[];for(let e=0;e<n.getLength();++e)i.push(n.getPoint(e).getX()),i.push(n.getPoint(e).getY());return new(Pi().Line)({points:i,stroke:e.colour,strokeWidth:t.getStrokeWidth(),strokeScaleEnabled:!1,name:"shape",closed:!0})}#zr(e){return Fi(e)}#Mr(e){const t=e.mathShape;return new F(t.getPoint(0).getX(),t.getPoint(0).getY())}#Hr(e,t,n){const i=t.getParent();if(!(i instanceof Pi().Group))return;const r=this.#zr(i),o=r.points(),a=2*Qi(t.id());o[a]=t.x()-r.x(),o[a+1]=t.y()-r.y(),r.points(o);const s=i.getChildren((function(e){return e.id()===t.id()}))[0];s.x(t.x()),s.y(t.y())}#Wr(e,t){}#Yr(e,t){}},RulerFactory:class{#qr="ruler";#Ur=new br(this.#Mr);static supports(e){return e instanceof fi}getName(){return this.#qr}getGroupName(){return this.#qr+"-group"}getNPoints(){return 2}getTimeout(){return 0}setAnnotationMathShape(e,t){e.mathShape=this.#Qr(t),e.setTextExpr(this.#Vr()),e.updateQuantification()}createShapeGroup(e,t){const n=new(Pi().Group);n.name(this.getGroupName()),n.visible(!0),n.id(e.trackingUid);const i=this.#Nr(e,t);n.add(this.#Nr(e,t));const r=this.#Br(e,t);for(const e of r)n.add(e);const o=this.#Ur.create(e,t);n.add(this.#Ur.create(e,t));const a=this.#Gr(i);return n.add(this.#Ur.getConnector(a,o,t)),n}#Gr(e){const t=e.points(),n=e.x(),i=e.y(),r=(t[0]+t[2])/2+n,o=(t[1]+t[3])/2+i;return[new F(r,o)]}#kr(e){const t=e.points(),n=e.x(),i=e.y();return[new F(t[0]+n,t[1]+i),new F(t[2]+n,t[3]+i)]}getAnchors(e,t){const n=this.#kr(e),i=[];for(let e=0;e<n.length;++e)i.push(Mi(n[e].getX(),n[e].getY(),"anchor"+e,t));return i}constrainAnchorMove(e){}updateShapeGroupOnAnchorMove(e,t,n){const i=t.getParent();i instanceof Pi().Group&&(this.#Hr(e,t,n),this.updateLabelContent(e,i,n),void 0===e.labelPosition?this.#Ur.updatePosition(e,i):this.updateConnector(i))}updateAnnotationOnAnchorMove(e,t){const n=t.getParent();if(!(n instanceof Pi().Group))return;const i=this.#zr(n),r=qi(n,0),o=qi(n,1),a=new F(r.x()-i.x(),r.y()-i.y()),s=new F(o.x()-i.x(),o.y()-i.y());e.mathShape=new fi(a,s),e.updateQuantification()}updateAnnotationOnTranslation(e,t){const n=e.mathShape,i=n.getBegin(),r=new F(i.getX()+t.x,i.getY()+t.y),o=n.getEnd(),a=new F(o.getX()+t.x,o.getY()+t.y);e.mathShape=new fi(r,a),e.updateQuantification()}updateLabelContent(e,t,n){this.#Ur.updateContent(e,t)}updateConnector(e){const t=this.#zr(e),n=this.#Gr(t);this.#Ur.updateConnector(e,n)}#Qr(e){return new fi(e[0],e[1])}#Vr(){return void 0!==w.labelTexts&&void 0!==w.labelTexts[this.#qr]?w.labelTexts[this.#qr]:Ai[this.#qr]}#Nr(e,t){const n=e.mathShape,i=new(Pi().Line)({points:[n.getBegin().getX(),n.getBegin().getY(),n.getEnd().getX(),n.getEnd().getY()],stroke:e.colour,strokeWidth:t.getStrokeWidth(),strokeScaleEnabled:!1,name:"shape"}),r=vi(n,n.getBegin(),20,t.getZoomScale()),o=vi(n,n.getEnd(),20,t.getZoomScale());return i.hitFunc((function(e){e.beginPath(),e.moveTo(r.getBegin().getX(),r.getBegin().getY()),e.lineTo(r.getEnd().getX(),r.getEnd().getY()),e.lineTo(o.getEnd().getX(),o.getEnd().getY()),e.lineTo(o.getBegin().getX(),o.getBegin().getY()),e.closePath(),e.fillStrokeShape(i)})),i}#zr(e){return Fi(e)}#Br(e,t){const n=e.mathShape,i=vi(n,n.getBegin(),20,t.getZoomScale()),r=new(Pi().Line)({points:[i.getBegin().getX(),i.getBegin().getY(),i.getEnd().getX(),i.getEnd().getY()],stroke:e.colour,strokeWidth:t.getStrokeWidth(),strokeScaleEnabled:!1,name:"shape-tick0"}),o=vi(n,n.getEnd(),20,t.getZoomScale());return[r,new(Pi().Line)({points:[o.getBegin().getX(),o.getBegin().getY(),o.getEnd().getX(),o.getEnd().getY()],stroke:e.colour,strokeWidth:t.getStrokeWidth(),strokeScaleEnabled:!1,name:"shape-tick1"})]}#Mr(e){const t=e.mathShape,n=t.getBegin(),i=t.getEnd();let r=n;return n.getY()<i.getY()&&(r=i),r}#Hr(e,t,n){const i=e.mathShape,r=t.getParent();if(!(r instanceof Pi().Group))return;const o=this.#zr(r);o.position({x:0,y:0}),o.points([i.getBegin().getX(),i.getBegin().getY(),i.getEnd().getX(),i.getEnd().getY()]);const a=r.getChildren((function(e){return"shape-tick0"===e.name()}))[0];if(!(a instanceof Pi().Line))return;const s=r.getChildren((function(e){return"shape-tick1"===e.name()}))[0];if(!(s instanceof Pi().Line))return;const l=qi(r,0),u=qi(r,1);switch(t.id()){case"anchor0":l.x(t.x()),l.y(t.y());break;case"anchor1":u.x(t.x()),u.y(t.y());break;default:c.error("Unhandled anchor id: "+t.id())}const d=vi(i,i.getBegin(),20,n.getZoomScale());a.position({x:0,y:0}),a.points([d.getBegin().getX(),d.getBegin().getY(),d.getEnd().getX(),d.getEnd().getY()]);const h=vi(i,i.getEnd(),20,n.getZoomScale());s.position({x:0,y:0}),s.points([h.getBegin().getX(),h.getBegin().getY(),h.getEnd().getX(),h.getEnd().getY()]),o.hitFunc((function(e){e.beginPath(),e.moveTo(d.getBegin().getX(),d.getBegin().getY()),e.lineTo(d.getEnd().getX(),d.getEnd().getY()),e.lineTo(h.getEnd().getX(),h.getEnd().getY()),e.lineTo(h.getBegin().getX(),h.getBegin().getY()),e.closePath(),e.fillStrokeShape(o)}))}#Wr(e,t){}#Yr(e,t){}}},filter:{Threshold:class{#Qt;constructor(e){this.#Qt=e}#Ci=new Fr;#Xr=!0;#Fe=new Xe;activate(e){e&&(this.#Xr=!0)}init(){}run(e){if(void 0===e.dataId)throw new Error("No dataId to run threshod filter on.");if(this.#Ci.setMin(e.min),this.#Ci.setMax(e.max),this.#Xr){const t=this.#Qt.getData(e.dataId).image;this.#Ci.setOriginalImage(t),this.#Xr=!1}const t=new Mr(this.#Ci,e.dataId,this.#Qt);t.onExecute=this.#Qe,t.onUndo=this.#Qe,t.execute(),this.#Qt.addToUndoStack(t)}addEventListener(e,t){this.#Fe.add(e,t)}removeEventListener(e,t){this.#Fe.remove(e,t)}#Qe=e=>{this.#Fe.fireEvent(e)}},Sobel:class{#Qt;constructor(e){this.#Qt=e}#Fe=new Xe;activate(e){}init(){}run(e){if(void 0===e.dataId)throw new Error("No dataId to run sobel filter on.");const t=new Ur,n=this.#Qt.getData(e.dataId).image;t.setOriginalImage(n);const i=new Mr(t,e.dataId,this.#Qt);i.onExecute=this.#Qe,i.onUndo=this.#Qe,i.execute(),this.#Qt.addToUndoStack(i)}addEventListener(e,t){this.#Fe.add(e,t)}removeEventListener(e,t){this.#Fe.remove(e,t)}#Qe=e=>{this.#Fe.fireEvent(e)}},Sharpen:class{#Qt;constructor(e){this.#Qt=e}#Fe=new Xe;activate(e){}init(){}run(e){if(void 0===e.dataId)throw new Error("No dataId to run sharpen filter on.");const t=new qr,n=this.#Qt.getData(e.dataId).image;t.setOriginalImage(n);const i=new Mr(t,e.dataId,this.#Qt);i.onExecute=this.#Qe,i.onUndo=this.#Qe,i.execute(),this.#Qt.addToUndoStack(i)}addEventListener(e,t){this.#Fe.add(e,t)}removeEventListener(e,t){this.#Fe.remove(e,t)}#Qe=e=>{this.#Fe.fireEvent(e)}}}};class Gr{trackingId;trackingUid;referencedSopInstanceUID;referencedSopClassUID;referencedFrameNumber;mathShape;referencePoints;colour="#ffff80";quantification;textExpr="";labelPosition;planeOrigin;planePoints;#st;#Ae={};setIds(){this.trackingId=Math.random().toString(36).substring(2,15),this.trackingUid=Nt("TrackingUniqueIdentifier")}getMetaConceptIds(){return Object.keys(this.#Ae)}getMetaItem(e){return this.#Ae[e]}addMetaItem(e,t){const n=e.value;void 0!==this.#Ae[n]&&c.warn("Overwriting annotation meta with id="+n),this.#Ae[e.value]={concept:e,value:t}}removeMetaItem(e){void 0!==this.#Ae[e]&&delete this.#Ae[e]}getOrientationName(){let e;return void 0!==this.planePoints&&(e=St(this.planePoints[1].getValues().concat(this.planePoints[2].getValues()))),e}init(e){if(void 0!==this.referencedSopInstanceUID)return void c.debug("Cannot initialise annotation twice");this.#st=e;const t=e.getCurrentPosition();this.referencedSopInstanceUID=e.getCurrentImageUid(),this.referencedSopClassUID=e.getSopClassUid(),t.length()>3&&(this.referencedFrameNumber=t.get(3)),this.planeOrigin=e.getOriginForImageUid(this.referencedSopInstanceUID),e.isAquisitionOrientation()||(this.planePoints=e.getPlanePoints(t))}canView(){return void 0!==this.#st}isCompatibleView(e){let t=!1;if(void 0===this.planePoints)e.isAquisitionOrientation()&&(t=!0);else{const n=e.getCosines(),i=new q(n[0],n[1],n[2]),r=new q(n[3],n[4],n[5]);i.equals(this.planePoints[1])&&r.equals(this.planePoints[2])&&(t=!0)}return t}setViewController(e){e.includesImageUid(this.referencedSopInstanceUID)?this.isCompatibleView(e.getPlaneHelper())&&(this.#st=e,this.planeOrigin=e.getOriginForImageUid(this.referencedSopInstanceUID)):c.warn("Cannot view annotation with reference UID: "+this.referencedSopInstanceUID)}#jr(){let e;if(void 0!==this.#st){let t=this.planeOrigin;void 0!==this.planePoints&&(t=this.planePoints[0]);const n=[t.getX(),t.getY(),t.getZ()];void 0!==this.referencedFrameNumber&&n.push(this.referencedFrameNumber);const i=new U(n);e=this.#st.getIndexFromPosition(i)}return e}getCentroid(){let e;if(void 0!==this.#st&&void 0!==this.mathShape.getCentroid&&void 0!==this.mathShape.getCentroid()){const t=this.#jr(),n=this.#st.getScrollDimIndex(),i=t.getValues()[n],r=this.mathShape.getCentroid();if(e=this.#st.getPositionFromPlanePoint(r,i),void 0!==this.referencedFrameNumber){const t=e.getValues();t[3]=this.referencedFrameNumber,e=new U(t)}}return e}setTextExpr(e){if(void 0!==this.#st){const t=this.#st.getModality();void 0!==e[t]?this.textExpr=e[t]:this.textExpr=e["*"]}else c.warn("Cannot set text expr without a view controller")}getText(){return function(e,t){let n="";if(null==e)return n;if(n=e,null==t)return n;const i=N(e);for(let e=0;e<i.length;++e){const r=t[i[e]];if(null!=r&&null!==r.value&&void 0!==r.value){let t=r.value.toPrecision(4);null!==r.unit&&void 0!==r.unit&&0!==r.unit.length&&("unit.degree"!==r.unit&&(t+=" "),t+=M.t(r.unit));const o="{"+i[e]+"}";n=n.replace(o,t)}}return n}(this.textExpr,this.quantification)}updateQuantification(){void 0!==this.#st&&void 0!==this.mathShape.quantify&&(this.quantification=this.mathShape.quantify(this.#st,this.#jr(),N(this.textExpr)))}getFactory(){let e;if(void 0!==Vr.draw)for(const t in Vr.draw){const n=Vr.draw[t];if(n.supports(this.mathShape)){e=new n;break}}if(void 0===e)for(const t in Br.draw){const n=Br.draw[t];if(n.supports(this.mathShape)){e=new n;break}}return void 0===e&&c.warn("No shape factory found for math shape"),e}}class kr{#Zr;#Ae={};#Fe=new Xe;#_r;#Kr;constructor(e){this.#Zr=void 0!==e?e:[],this.#_r=!0}getList(){return this.#Zr}getLength(){return this.#Zr.length}isEditable(){return this.#_r}setEditable(e){this.#_r=e,this.#Qe({type:"annotationgroupeditablechange",data:e})}getColour(){return this.#Kr}setColour(e){this.#Kr=e}add(e){this.#Zr.push(e),this.#Qe({type:"annotationadd",data:e})}update(e,t){const n=this.#Zr.findIndex((t=>t.trackingUid===e.trackingUid));-1!==n?((t.includes("mathShape")||t.includes("textExpr"))&&e.updateQuantification(),this.#Zr[n]=e,this.#Qe({type:"annotationupdate",data:e,keys:t})):c.warn("Cannot find annotation to update")}remove(e){const t=this.#Zr.findIndex((t=>t.trackingUid===e));if(-1!==t){const e=this.#Zr.splice(t,1)[0];this.#Qe({type:"annotationremove",data:e})}else c.warn("Cannot find annotation to remove")}setViewController(e){for(const t of this.#Zr)t.setViewController(e),t.updateQuantification()}find(e){return this.#Zr.find((t=>t.trackingUid===e))}getMeta(){return this.#Ae}hasMeta(e){return void 0!==this.#Ae[e]}getMetaValue(e){return this.#Ae[e]}setMetaValue(e,t){this.#Ae[e]=t}addEventListener(e,t){this.#Fe.add(e,t)}removeEventListener(e,t){this.#Fe.remove(e,t)}#Qe=e=>{this.#Fe.fireEvent(e)}}class Hr{#Jr;getAnnotation(e){return this.#Jr.find(e)}getAnnotationGroup(){return this.#Jr}isAnnotationGroupEditable(){return this.#Jr.isEditable()}setAnnotationGroupEditable(e){this.#Jr.setEditable(e)}addAnnotation(e){this.#Jr.add(e)}updateAnnotation(e,t){this.#Jr.update(e,t)}removeAnnotation(e){this.#Jr.remove(e)}removeAnnotationWithCommand(e,t){const n=this.getAnnotation(e);if(void 0===n)return void c.warn("Cannot create remove command for undefined annotation: "+e);const i=new wi(n,this);t(i),i.execute()}updateAnnotationWithCommand(e,t,n,i){const r=this.getAnnotation(e);if(void 0===r)return void c.warn("Cannot create update command for undefined annotation: "+e);const o=new Oi(r,t,n,this);i(o),o.execute()}removeAllAnnotationsWithCommand(e){for(const t of this.#Jr.getList())this.removeAnnotationWithCommand(t.trackingUid,e)}constructor(e){this.#Jr=void 0!==e?e:new kr}hasAnnotationMeta(e){return this.#Jr.hasMeta(e)}setAnnotationMeta(e,t){this.#Jr.setMetaValue(e,t)}}class zr{#at;#$r=null;#gt;#St;#ft={x:1,y:1};#Dt={x:1,y:1,z:1};#vt={x:0,y:0};#Ct={x:0,y:0};#It={x:0,y:0};#Tt={x:0,y:0};#Pt={x:0,y:0};#kt;#tt;#wt;#eo;#to;#ji;#no=!0;constructor(e){this.#at=e,this.#at.className+=" drawLayer"}setShapeHandler(e){this.#ji=e}getDataId(){return this.#wt}getReferenceLayerId(){return this.#eo}#Fe=new Xe;getKonvaStage(){return this.#$r}getKonvaLayer(){return this.#$r.getLayers()[0]}getDrawController(){return this.#kt}setPlaneHelper(e){this.#tt=e}getId(){return this.#at.id}removeFromDOM(){this.#at.remove()}getBaseSize(){return this.#gt}getOpacity(){return this.#$r.opacity()}setOpacity(e){this.#$r.opacity(Math.min(Math.max(e,0),1))}addFlipOffsetX(){const e=this.#$r.scale(),t=this.#$r.size();this.#Pt.x+=t.width/e.x;const n=this.#$r.offset();n.x+=this.#Pt.x,this.#$r.offset(n)}addFlipOffsetY(){const e=this.#$r.scale(),t=this.#$r.size();this.#Pt.y+=t.height/e.y;const n=this.#$r.offset();n.y+=this.#Pt.y,this.#$r.offset(n)}flipScaleX(){this.#Dt.x*=-1}flipScaleY(){this.#Dt.y*=-1}flipScaleZ(){this.#Dt.z*=-1}setScale(e,t){const n=this.#tt.getTargetOrientedPositiveXYZ({x:e.x*this.#Dt.x,y:e.y*this.#Dt.y,z:e.z*this.#Dt.z}),i={x:this.#ft.x*n.x,y:this.#ft.y*n.y},r=this.#$r.offset();if(1===Math.abs(e.x)&&1===Math.abs(e.y)&&1===Math.abs(e.z)){const e={x:r.x-this.#It.x,y:r.y-this.#It.y};this.#It={x:0,y:0},this.#$r.offset(e)}else if(void 0!==t){let e=this.#tt.getPlaneOffsetFromOffset3D({x:t.getX(),y:t.getY(),z:t.getZ()});e={x:e.x+this.#vt.x,y:e.y+this.#vt.y};const n=Xr(r,this.#$r.scale(),i,e),o={x:this.#It.x+n.x-r.x,y:this.#It.y+n.y-r.y};this.#It=o,this.#$r.offset(n)}this.#$r.scale(i),this.#io(i)}initScale(e,t){const n=this.#tt.getTargetOrientedPositiveXYZ({x:e.x*this.#Dt.x,y:e.y*this.#Dt.y,z:e.z*this.#Dt.z}),i={x:this.#ft.x*n.x,y:this.#ft.y*n.y};this.#$r.scale(i),this.#It={x:t.x/this.#ft.x,y:t.y/this.#ft.y};const r=this.#$r.offset();this.#$r.offset({x:r.x+this.#It.x,y:r.y+this.#It.y})}setOffset(e){const t=this.#tt.getPlaneOffsetFromOffset3D(e),n=this.#$r.offset();this.#$r.offset({x:n.x-this.#Tt.x+t.x,y:n.y-this.#Tt.y+t.y}),this.#Tt=t}setBaseOffset(e,t){const n=this.#tt.getNativeScrollDimIndex(),i=this.#tt.getPlaneOffsetFromOffset3D({x:0===n?e.getX():t.getX(),y:1===n?e.getY():t.getY(),z:2===n?e.getZ():t.getZ()}),r=this.#vt.x!==i.x||this.#vt.y!==i.y;if(r){const e=this.#$r.offset();this.#$r.offset({x:e.x-this.#vt.x+i.x,y:e.y-this.#vt.y+i.y}),this.#vt=i}return r}display(e){this.#at.style.display=e?"":"none"}isVisible(){return""===this.#at.style.display}draw(){this.#$r.draw()}initialise(e,t,n){this.#gt=e,this.#St=t,this.#eo=n,this.#$r=new(Pi().Stage)({container:this.#at,width:this.#gt.x,height:this.#gt.y,listening:!1}),this.#$r.getContent().setAttribute("style","");const i=new(Pi().Layer)({listening:!1,visible:!0});this.#$r.add(i)}setAnnotationGroup(e,t,n){if(this.#wt=t,e.addEventListener("annotationadd",(e=>{this.#ro(e.data,!0),this.getKonvaLayer().draw()})),e.addEventListener("annotationupdate",(e=>{this.#oo(e.data),this.getKonvaLayer().draw()})),e.addEventListener("annotationremove",(e=>{this.#ao(e.data),this.getKonvaLayer().draw()})),e.addEventListener("annotationgroupeditablechange",(e=>{this.activateCurrentPositionShapes(e.data)})),this.#kt=new Hr(e),0!==e.getLength())for(const t of e.getList())this.#ro(t,!1),n(new Li(t,this.getDrawController()))}activateCurrentPositionShapes(e){const t=this.getKonvaLayer();if(this.#$r.listening(!1),void 0!==this.#ji){this.#ji.disableAndResetEditor();const e=t.getChildren();for(const t of e)t instanceof Pi().Group&&t.getChildren().forEach((e=>{e instanceof Pi().Group&&this.#ji.removeShapeListeners(e)}))}const n=this.getDrawController();if(e&&n.getAnnotationGroup().isEditable()){this.#$r.listening(!0);const e=this.#so().getChildren();0!==e.length&&t.listening(!0),void 0!==this.#ji&&e.forEach((e=>{if(e instanceof Pi().Group){const t=n.getAnnotation(e.id());this.#ji.addShapeGroupListeners(e,t,this)}}))}t.draw()}#lo(e){let t;return t=void 0!==e.planePoints?e.planePoints:[e.planeOrigin],this.#co(t,e.referencedFrameNumber)}#co(e,t){let n="";for(const t of e)0!==n.length&&(n+="-"),n+=H([k(t.getX(),2),k(t.getY(),2),k(t.getZ(),2)]);return void 0!==t&&(n+="-"+t),n}#uo(e){let t;const n=this.#lo(e),i=this.getKonvaLayer().getChildren(Ui(n));if(0!==i.length){const n=i[0];if(!(n instanceof Pi().Group))return;const r=n.getChildren(Ui(e.trackingUid));0!==r.length&&r[0]instanceof Pi().Group&&(t=r[0])}return t}#ro(e,t){if(!e.canView()||!e.isCompatibleView(this.#tt))return;const n=this.#lo(e);let i=this.getKonvaLayer().getChildren(Ui(n))[0];if(void 0===i&&(i=new(Pi().Group)({id:n,name:"position-group",visible:t}),this.getKonvaLayer().add(i)),!(i instanceof Pi().Group))return;const r=new bi,o=this.getKonvaStage();r.setZoomScale(o.scale());const a=e.getFactory().createShapeGroup(e,r);i.add(a),t&&void 0!==this.#ji&&this.#ji.addShapeGroupListeners(a,e,this),this.setLabelVisibility(a)}#ao(e){const t=this.#uo(e);return t instanceof Pi().Group?(t.remove(),!0):(c.debug("No shape group to remove"),!1)}#oo(e){this.#ao(e)&&this.#ro(e,!0)}fitToContainer(e,t,n){const i={x:t*this.#St.x,y:t*this.#St.y},r=i.x/this.#ft.x,o=i.y/this.#ft.y,a=e.x/(this.#$r.width()*r),s=e.y/(this.#$r.height()*o);this.#$r.width()===e.x&&this.#$r.height()===e.y||(this.#$r.width(e.x),this.#$r.height(e.y));const l={x:this.#$r.scale().x*r,y:this.#$r.scale().y*o};this.#$r.scale().x===l.x&&this.#$r.scale().y===l.y||(this.#ft=i,this.#$r.scale(l),this.#io(l));const c={x:n.x/i.x,y:n.y/i.y},u={x:e.x/i.x,y:e.y/i.y},d={x:0!==this.#Pt.x?u.x:0,y:0!==this.#Pt.y?u.y:0};if(this.#Ct.x!==c.x||this.#Ct.y!==c.y||this.#Pt.x!==d.x||this.#Pt.y!==d.y){const e={x:this.#It.x*a,y:this.#It.y*s};this.#$r.offset({x:this.#$r.offset().x+c.x-this.#Ct.x+d.x-this.#Pt.x+e.x-this.#It.x,y:this.#$r.offset().y+c.y-this.#Ct.y+d.y-this.#Pt.y+e.y-this.#It.y}),this.#Pt=d,this.#Ct=c,this.#It=e}}isAnnotationVisible(e){const t=this.#do(e);return void 0!==t&&t.isVisible()}setAnnotationVisibility(e,t){const n=this.#do(e);return void 0!==n&&(void 0===t&&(t=!n.isVisible()),n.visible(t),this.draw(),!0)}setLabelsVisibility(e){this.#no=e;const t=this.getKonvaLayer().getChildren();for(const n of t)if(n instanceof Pi().Group){const t=n.getChildren();for(const n of t)n instanceof Pi().Group&&this.#ho(n,e)}}#ho(e,t){const n=e.getChildren(xi)[0];if(n instanceof Pi().Label&&(void 0===t&&(t=!n.isVisible()),void 0!==n.getText()&&0!==n.getText().text().length)){n.visible(t);const i=e.getChildren((e=>"Line"===e.className&&"connector"===e.name()))[0];i&&i.visible(t)}}setLabelVisibility(e){this.#ho(e,this.#no)}deleteDraw(e,t){}deleteDraws(e){}getNumberOfDraws(){const e=this.getKonvaLayer().getChildren();let t=0;for(const n of e)n instanceof Pi().Group&&(t+=n.getChildren().length);return t}bindInteraction(){this.#$r.listening(!0),this.#at.style.pointerEvents="auto";const e=ci;for(let t=0;t<e.length;++t)this.#at.addEventListener(e[t],this.#Qe)}unbindInteraction(){this.#$r.listening(!1),this.#at.style.pointerEvents="none";const e=ci;for(let t=0;t<e.length;++t)this.#at.removeEventListener(e[t],this.#Qe)}setCurrentPosition(e,t){void 0===t&&(t=this.#tt.worldToIndex(e));const n=this.#tt.getPlanePoints(e);let i,r;i=this.#tt.isAquisitionOrientation()?[n[0]]:n,e.length()>3&&(r=e.get(3));const o=this.#co(i,r);return this.#go(o),this.#Qe({type:"positionchange",value:[t.getValues(),e.getValues()],valid:!0}),!0}#go(e){this.#to=e;const t=this.getKonvaLayer().getChildren(Ei);let n;for(let i=0,r=t.length;i<r;++i)n=!1,void 0!==e&&t[i].id()===e&&(n=!0),t[i].visible(n);this.getKonvaLayer().draw()}#so(){if(void 0===this.#to)return;const e=this.getKonvaLayer().getChildren((e=>e.id()===this.#to));let t;return 1===e.length?e[0]instanceof Pi().Group&&(t=e[0]):0===e.length?(t=new(Pi().Group),t.name("position-group"),t.id(this.#to),t.visible(!0),this.getKonvaLayer().add(t)):c.warn("Unexpected number of draw position groups"),t}#do(e){return this.getKonvaLayer().findOne("#"+e)}addEventListener(e,t){this.#Fe.add(e,t)}removeEventListener(e,t){this.#Fe.remove(e,t)}#Qe=e=>{e.srclayerid=this.getId(),e.dataid=this.#wt,this.#Fe.fireEvent(e)};#io(e){const t=2/e.x,n=2/e.y,i=this.#$r.find("Label");for(let e=0;e<i.length;++e)i[e].scale({x:t,y:n})}}function Wr(e){const t=e.split("-layer-");return 2!==t.length&&c.warn("Not the expected layer div id format..."),{groupDivId:t[0],layerIndex:t[1],layerId:e}}function Yr(e){let t=null;const n=e.target.closest(".layer");return n&&void 0!==n.id&&(t=Wr(n.id)),t}function Xr(e,t,n,i){const r=(i.x-e.x)*t.x,o=(i.y-e.y)*t.y;return{x:i.x-r/n.x,y:i.y-o/n.y}}class jr{#at;#So=[];#pt={x:1,y:1,z:1};#Zt={x:1,y:1,z:1};#yt={x:0,y:0,z:0};#mo=void 0;#Fe=new Xe;#po=!1;#fo=[];#Do;#We;#Ot=!1;#nt;getPositionHelper(){if(void 0===this.#nt)for(const e of this.#So)if(e instanceof Si){const t=e.getViewController().getPositionHelperClone();void 0===this.#nt?this.#nt=t:this.#nt.merge(t)}return this.#nt}constructor(e){this.#at=e}getShowCrosshair(){return this.#po}setShowCrosshair(e){this.#po=e,e?(this.addEventListener("offsetchange",this.#yo),this.addEventListener("zoomchange",this.#yo),this.#vo()):(this.removeEventListener("offsetchange",this.#yo),this.removeEventListener("zoomchange",this.#yo),this.#Co())}setImageSmoothing(e){this.#Ot=e;for(const t of this.#So)t instanceof Si&&t.setImageSmoothing(e)}#yo=e=>{this.#vo()};getDivId(){let e;return null!==this.#at&&(e=this.#at.id),e}getScale(){return this.#pt}getBaseScale(){return this.#Zt}getAddedScale(){return{x:this.#pt.x/this.#Zt.x,y:this.#pt.y/this.#Zt.y,z:this.#pt.z/this.#Zt.z}}getOffset(){return this.#yt}getNumberOfLayers(){let e=0;return this.#So.forEach((t=>{void 0!==t&&e++})),e}includes(e){if(void 0===e)return!1;for(const t of this.#So)if(void 0!==t&&t.getId()===e)return!0;return!1}getViewLayers(e){void 0===e&&(e=function(){return!0});const t=[];for(const n of this.#So)n instanceof Si&&e(n)&&t.push(n);return t}someViewLayer(e){let t=!1;for(const n of this.#So)if(n instanceof Si&&e(n)){t=!0;break}return t}getDrawLayers(e){void 0===e&&(e=function(){return!0});const t=[];for(const n of this.#So)n instanceof zr&&e(n)&&t.push(n);return t}getNumberOfViewLayers(){let e=0;return this.#So.forEach((t=>{void 0!==t&&t instanceof Si&&e++})),e}getActiveLayer(){let e;return void 0!==this.#mo&&(e=this.#So[this.#mo]),e}getActiveViewLayer(){let e;const t=this.getActiveLayer();return void 0!==t&&t instanceof Si&&(e=t),e}getBaseViewLayer(){let e;for(const t of this.#So)if(t instanceof Si){e=t;break}if(void 0!==e)return e;c.warn("No layer found")}getViewLayerById(e){const t=this.getViewLayers((function(t){return t.getId()===e}));let n;return 1===t.length&&(n=t[0]),n}getViewLayersByDataId(e){return this.getViewLayers((function(t){return t.getDataId()===e}))}searchViewLayers(e){const t=structuredClone(e);let n;void 0!==t.SOPInstanceUID&&(n=t.SOPInstanceUID,delete t.SOPInstanceUID);const i=void 0!==n,r=0!==Object.keys(t).length,o=[];for(const e of this.#So)if(e instanceof Si){let a=!1;r&&(a=e.getViewController().equalImageMeta(t));let s=!1;i&&(s=e.getViewController().includesImageUid(n));let l=!1;r&&i?l=a&&s:r?l=a:i&&(l=s),l&&o.push(e)}return o}getViewDataIndices(){const e=[];for(const t of this.#So)t instanceof Si&&e.push(t.getDataId());return e}getActiveDrawLayer(){let e;const t=this.getActiveLayer();return void 0!==t&&t instanceof zr&&(e=t),e}getDrawLayerById(e){const t=this.getDrawLayers((function(t){return t.getId()===e}));let n;return 1===t.length&&(n=t[0]),n}getDrawLayersByDataId(e){return this.getDrawLayers((function(t){return t.getDataId()===e}))}setActiveLayer(e){this.#mo=e,this.#Qe({type:"activelayerchange",value:[this.#So[e]]})}setActiveLayerByDataId(e){let t;for(let n=0;n<this.#So.length;++n)if(void 0!==this.#So[n]&&this.#So[n].getDataId()===e){t=n;break}void 0!==t?this.setActiveLayer(t):c.warn("No layer to set as active with dataId: "+e)}addViewLayer(){const e=this.#So.length,t=this.#Io();this.#at.append(t);const n=new Si(t);return n.setImageSmoothing(this.#Ot),this.#So.push(n),this.setActiveLayer(e),this.#To(n),this.#nt=void 0,n}addDrawLayer(){this.#mo=this.#So.length;const e=this.#Io();this.#at.append(e);const t=new zr(e);return this.#So.push(t),this.#Po(t),t}#To(e){e.addEventListener("positionchange",this.updateLayersToPositionChange);for(const t of ni)e.addEventListener(t,this.#Qe);e.addEventListener("renderstart",this.#Qe),e.addEventListener("renderend",this.#Qe)}#Lo(e){e.removeEventListener("positionchange",this.updateLayersToPositionChange);for(const t of ni)e.removeEventListener(t,this.#Qe);e.removeEventListener("renderstart",this.#Qe),e.removeEventListener("renderend",this.#Qe),e.unbindImage()}#Po(e){e.addEventListener("positionchange",this.updateLayersToPositionChange),e.addEventListener("positionchange",this.#Qe)}#wo(e){e.removeEventListener("positionchange",this.updateLayersToPositionChange),e.removeEventListener("positionchange",this.#Qe)}#Io(){const e=document.createElement("div");return e.id=this.getDivId()+"-layer-"+this.#So.length,e.className="layer",e.style.pointerEvents="none",e}empty(){for(const e of this.#So)void 0!==e&&this.removeLayer(e);this.#So=[],this.#Co()}removeLayersByDataId(e){for(const t of this.#So)void 0!==t&&t.getDataId()===e&&this.removeLayer(t)}removeLayer(e){const t=this.#So.findIndex((t=>t===e));if(-1===t)throw new Error("Cannot find layer to remove");this.#mo===t&&(this.#mo=void 0),e instanceof Si?this.#Lo(e):this.#wo(e),this.#So[t]=void 0,this.#nt=void 0,e.removeFromDOM(),this.#Qe({type:"layerremove",layerid:e.getId(),layergroupid:this.getDivId()})}#vo(e){let t;void 0===e&&(e=this.#We),this.#Co();for(const e of this.#So)if(e instanceof Si){t=e;break}if(void 0===t)return void c.warn("No layer to show crosshair");const n=t.getViewController().getPlanePositionFromPosition(e),i=t.planePosToDisplay(n);if(void 0!==i.getY()){const e=document.createElement("hr");e.id=this.getDivId()+"-scroll-crosshair-horizontal",e.className="horizontal",e.style.width=this.#at.offsetWidth+"px",e.style.left="0px",e.style.top=i.getY()+"px",this.#fo.push(e),this.#at.appendChild(e)}if(void 0!==i.getX()){const e=document.createElement("hr");e.id=this.getDivId()+"-scroll-crosshair-vertical",e.className="vertical",e.style.width=this.#at.offsetHeight+"px",e.style.left=i.getX()+"px",e.style.top="0px",this.#fo.push(e),this.#at.appendChild(e)}}#Co(){for(const e of this.#fo)e.remove();this.#fo=[]}showTooltip(e){this.removeTooltipDiv();const t=this.getBaseViewLayer(),n=t.getViewController(),i=t.displayToPlanePos(e),r=n.getPositionFromPlanePoint(i),o=n.getRescaledImageValue(r);if(void 0!==o){const t=document.createElement("span");t.id="scroll-tooltip",t.style.left=e.getX()+10+"px",t.style.top=e.getY()+10+"px";let i=k(o,3).toString();void 0!==n.getPixelUnit()&&(i+=" "+n.getPixelUnit()),t.appendChild(document.createTextNode(i)),this.#Do=t,this.#at.appendChild(t)}}removeTooltipDiv(){void 0!==this.#Do&&(this.#Do.remove(),this.#Do=void 0)}isPositionInBounds(e){return this.someViewLayer((function(t){return t.getViewController().isPositionInBounds(e)}))}canScroll(){return this.someViewLayer((function(e){return e.getViewController().canScroll()}))}moreThanOne(e){return this.someViewLayer((function(t){return t.getViewController().moreThanOne(e)}))}updateLayersToPositionChange=e=>{for(const e of this.#So)void 0!==e&&(e.removeEventListener("positionchange",this.updateLayersToPositionChange),e.removeEventListener("positionchange",this.#Qe));const t=new s(e.value[0]),n=new U(e.value[1]);this.#We=n,this.#po&&this.#vo(n);const i={};let r,o;for(const a of this.#So){if(void 0===a)continue;let s=!1;if(a instanceof Si){const e=a.getViewController(),t=e.getOrigin(),l=e.getOrigin(n);let c,u;if(void 0===o)r=t,o=l,c=new O(0,0,0),u=new O(0,0,0);else if(e.isPositionInBounds(n)&&void 0!==l){const e=r.minus(t);c=new O(e.getX(),e.getY(),e.getZ());const n=o.minus(l);u=new O(n.getX(),n.getY(),n.getZ())}void 0!==c&&void 0!==u&&(s=a.setBaseOffset(c,u,o,r),i[a.getId()]={scroll:c,plane:u})}if(a instanceof zr){const e=i[a.getReferenceLayerId()];void 0!==e&&(s=a.setBaseOffset(e.scroll,e.plane))}let l=!1;a.getId()!==e.srclayerid&&(l=a.setCurrentPosition(n,t)),!l&&s&&a.draw()}for(const e of this.#So)void 0!==e&&(e.addEventListener("positionchange",this.updateLayersToPositionChange),e.addEventListener("positionchange",this.#Qe))};getDivToWorldSizeRatio(){if(0===this.#at.offsetWidth&&0===this.#at.offsetHeight)throw new Error("Cannot fit to zero sized container with id '"+this.#at.id+"'.");const e=this.getMaxWorldSize();if(void 0!==e){if(0===this.#at.offsetHeight){const t=this.#at.offsetWidth/e.x,n=e.y*t;this.#at.style.height=n+"px"}return Math.min(this.#at.offsetWidth/e.x,this.#at.offsetHeight/e.y)}}fitToContainer(e){const t=this.getMaxWorldSize();if(void 0===t)return;const n={x:this.#at.offsetWidth,y:this.#at.offsetHeight},i={x:-.5*(n.x-Math.floor(t.x*e)),y:-.5*(n.y-Math.floor(t.y*e))};for(const t of this.#So)void 0!==t&&t.fitToContainer(n,e,i);this.#po&&this.#vo()}getMaxWorldSize(){let e={x:0,y:0};for(const t of this.#So)if(t instanceof Si){const n=t.getImageWorldSize();n.x>e.x&&(e.x=n.x),n.y>e.y&&(e.y=n.y)}return 0===e.x&&0===e.y&&(e=void 0),e}flipScaleZ(){this.#Zt.z*=-1,this.setScale(this.#Zt)}addScale(e,t){const n={x:this.#pt.x*(1+e),y:this.#pt.y*(1+e),z:this.#pt.z*(1+e)};this.setScale(n,t)}setScale(e,t){this.#pt=e;for(const e of this.#So)void 0!==e&&e.setScale(this.#pt,t);const n=[e.x,e.y,e.z];void 0!==t&&(n.push(t.getX()),n.push(t.getY()),n.push(t.getZ())),this.#Qe({type:"zoomchange",value:n})}addTranslation(e){this.setOffset({x:this.#yt.x-e.x,y:this.#yt.y-e.y,z:this.#yt.z-e.z})}setOffset(e){this.#yt=e;for(const e of this.#So)void 0!==e&&e.setOffset(this.#yt);this.#Qe({type:"offsetchange",value:[this.#yt.x,this.#yt.y,this.#yt.z]})}reset(){this.setScale(this.#Zt),this.setOffset({x:0,y:0,z:0})}draw(){for(const e of this.#So)void 0!==e&&e.draw()}display(e){for(const t of this.#So)void 0!==t&&t.display(e)}addEventListener(e,t){this.#Fe.add(e,t)}removeEventListener(e,t){this.#Fe.remove(e,t)}#Qe=e=>{this.#Fe.fireEvent(e)}}const Zr={WindowLevelBinder:class{getEventType=function(){return"wlchange"};getCallback=function(e){return function(t){const n=e.getViewLayersByDataId(t.dataid);if(0!==n.length){const e=n[0].getViewController();if(2===t.value.length){const n=new u(t.value[0],t.value[1]);e.setWindowLevel(n)}3===t.value.length&&e.setWindowLevelPreset(t.value[2])}}}},PositionBinder:class{getEventType=function(){return"positionchange"};getCallback=function(e){return function(t){const n=t.value[1],i=e.getBaseViewLayer().getViewController(),r=i.getCurrentPosition(),o=r.length(),a=n.length;a!==o&&(a===o-1?n.push(r.get(o-1)):a===o+1&&n.pop()),i.setCurrentPosition(new U(n))}}},ZoomBinder:class{getEventType=function(){return"zoomchange"};getCallback=function(e){return function(t){const n={x:t.value[0],y:t.value[1],z:t.value[2]};let i;6===t.value.length&&(i=new q(t.value[3],t.value[4],t.value[5])),e.setScale(n,i),e.draw()}}},OffsetBinder:class{getEventType=function(){return"offsetchange"};getCallback=function(e){return function(t){e.setOffset({x:t.value[0],y:t.value[1],z:t.value[2]}),e.draw()}}},OpacityBinder:class{getEventType=function(){return"opacitychange"};getCallback=function(e){return function(t){if(void 0===t.dataid)return;const n=e.getViewLayersByDataId(t.dataid),i=e.getBaseViewLayer();0!==n.length&&i!==n[0]&&(n[0].setOpacity(t.value),n[0].draw())}}},ColourMapBinder:class{getEventType=function(){return"colourmapchange"};getCallback=function(e){return function(t){const n=e.getViewLayersByDataId(t.dataid);0!==n.length&&n[0].getViewController().setColourMap(t.value[0])}}}};class _r{#Oo=[];#bo;#Ot=!1;#Ao=[];#Ki=null;getLayerGroup(e){return this.#Oo[e]}getNumberOfLayerGroups(){return this.#Oo.length}getActiveLayerGroup(){return this.getLayerGroup(this.#bo)}setActiveLayerGroup(e){void 0!==this.getLayerGroup(e)?this.#bo=e:c.warn("No layer group to set as active with index: "+e)}getViewLayersByDataId(e){let t=[];for(const n of this.#Oo)t=t.concat(n.getViewLayersByDataId(e));return t}getViewLayers(e){let t=[];for(const n of this.#Oo)t=t.concat(n.getViewLayers(e));return t}getDrawLayersByDataId(e){let t=[];for(const n of this.#Oo)t=t.concat(n.getDrawLayersByDataId(e));return t}getDrawLayers(e){let t=[];for(const n of this.#Oo)t=t.concat(n.getDrawLayers(e));return t}addLayerGroup(e){this.#bo=this.#Oo.length;const t=new jr(e);t.setImageSmoothing(this.#Ot);const n=this.#Ki&&0!==this.#Ki.length;return n&&this.unbindLayerGroups(),this.#Oo.push(t),n&&this.bindLayerGroups(),t}getLayerGroupByDivId(e){return this.#Oo.find((function(t){return t.getDivId()===e}))}setBinders(e){if(null==e)throw new Error("Cannot set null or undefined binders");0!==this.#Ao.length&&this.unbindLayerGroups(),this.#Ao=e.slice(),this.bindLayerGroups()}empty(){this.unbindLayerGroups();for(const e of this.#Oo)e.empty();this.#Oo=[],this.#bo=void 0}removeLayersByDataId(e){for(const t of this.#Oo)t.removeLayersByDataId(e)}removeLayerGroup(e){const t=this.#Oo.findIndex((t=>t===e));if(-1===t)throw new Error("Cannot find layerGroup to remove");this.unbindLayerGroups(),e.empty(),this.#Oo.splice(t,1),this.#bo===t&&(this.#bo=void 0),this.bindLayerGroups()}reset(){for(const e of this.#Oo)e.reset()}draw(){for(const e of this.#Oo)e.draw()}fitToContainer(){let e;const t=[];for(let n=0;n<this.#Oo.length;++n){const i=this.#Oo[n].getDivToWorldSizeRatio();void 0!==i&&(t.push(n),(void 0===e||i<e)&&(e=i))}if(void 0!==e)for(let n=0;n<this.#Oo.length;++n)t.includes(n)&&this.#Oo[n].fitToContainer(e)}bindLayerGroups(){if(0!==this.#Oo.length&&1!==this.#Oo.length&&0!==this.#Ao.length){this.#Ki=new Array(this.#Oo.length);for(let e=0;e<this.#Oo.length;++e)for(let t=0;t<this.#Ao.length;++t)this.#xo(e,this.#Ao[t])}}unbindLayerGroups(){if(0!==this.#Oo.length&&1!==this.#Oo.length&&0!==this.#Ao.length&&this.#Ki){for(let e=0;e<this.#Oo.length;++e)for(let t=0;t<this.#Ao.length;++t)this.#Ro(e,this.#Ao[t]);this.#Ki=null}}setImageSmoothing(e){this.#Ot=e;for(const t of this.#Oo)t.setImageSmoothing(e)}#Eo(e,t){void 0===this.#Ki[t]&&(this.#Ki[t]=[]);let n=this.#Ki[t].find((function(t){return t.binder===e}));return void 0===n&&(n={binder:e,callback:n=>{this.#Ro(t,e),e.getCallback(this.#Oo[t])(n),this.#xo(t,e)}},this.#Ki[t].push(n)),n.callback}#xo(e,t){for(let n=0;n<this.#Oo.length;++n)n!==e&&this.#Oo[e].addEventListener(t.getEventType(),this.#Eo(t,n))}#Ro(e,t){for(let n=0;n<this.#Oo.length;++n)n!==e&&this.#Oo[e].removeEventListener(t.getEventType(),this.#Eo(t,n))}}class Kr{#wt;constructor(e){this.#wt=e}fromJSON(e){const t=JSON.parse(e);let n=null;if("0.1"===t.version)n=this.#Fo(t);else if("0.2"===t.version)n=this.#qo(t);else if("0.3"===t.version)n=this.#Uo(t);else if("0.4"===t.version)n=this.#Mo(t);else{if("0.5"!==t.version)throw new Error("Unknown state file format version: '"+t.version+"'.");n=this.#Qo(t)}return n}apply(e,t){const n=e.getActiveLayerGroup().getBaseViewLayer().getViewController(),i=new u(t["window-center"],t["window-width"]);n.setWindowLevel(i),n.setCurrentIndex(new s(t.position));const r=e.getActiveLayerGroup().getBaseScale();let o=null,a=null;if(void 0!==t.scaleCenter){o={x:t.scale*r.x,y:t.scale*r.y,z:1};const e=t.scaleCenter.x-t.scaleCenter.x*t.scale,n=t.scaleCenter.y-t.scaleCenter.y*t.scale,i=e+t.translation.x*o.x,s=n+t.translation.y*o.y;a={x:-i/o.x,y:-s/o.y,z:0}}else o={x:t.scale.x*r.x,y:t.scale.y*r.y,z:r.z},a={x:t.offset.x,y:t.offset.y,z:0};e.getActiveLayerGroup().setScale(o),e.getActiveLayerGroup().setOffset(a),e.setDrawings(t.drawings,t.drawingsDetails,this.#wt)}#Fo(e){const t=function(e){const t=[],n={};let i,r;for(let o=0,a=e.length;o<a;++o){t[o]=[];for(let a=0,s=e[o].length;a<s;++a){i=e[o][a];const s=[];for(let e=0,t=i.length;e<t;++e){r=Pi().Node.create(i[e]),r.visible(!0);let t={x:0,y:0};const o=r.getChildren((function(e){return"shape"===e.name()}))[0];if(o.stroke(L(o.stroke())),"line-group"===r.name()){r.name("ruler-group");const e=new(Pi().Line)({points:[o.points()[0],o.points()[1],o.points()[0],o.points()[1]],name:"shape-tick0"});r.add(e);const t=new(Pi().Line)({points:[o.points()[2],o.points()[3],o.points()[2],o.points()[3]],name:"shape-tick1"});r.add(t)}const a=r.getChildren((function(e){return"arc"===e.name()}));1===a.length&&a[0].name("shape-arc");const l=r.getChildren((function(e){return"text"===e.name()}));let c=new(Pi().Text)({name:"text",text:""});1===l.length?(t.x=l[0].x(),t.y=l[0].y(),l[0].remove(),c=l[0]):0!==o.points().length&&(t={x:o.points()[0],y:o.points()[1]});const u=new(Pi().Label)({x:t.x,y:t.y,name:"label"});u.add(c),u.add(new(Pi().Tag)),r.add(u),s.push(JSON.stringify(r.toObject()));let d=c.text();const h=d.length;let g=null;"ruler-group"===r.name()?(g={length:{value:parseFloat(d.substring(0,h-2)),unit:d.substring(-2)}},d="{length}"):"ellipse-group"===r.name()||"rectangle-group"===r.name()?(g={surface:{value:parseFloat(d.substring(0,h-3)),unit:d.substring(-3)}},d="{surface}"):"protractor-group"!==r.name()&&"rectangle-group"!==r.name()||(g={angle:{value:parseFloat(d.substring(0,h-1)),unit:d.substring(-1)}},d="{angle}"),n[r.id()]={textExpr:d,longText:"",quant:g}}t[o].push(s)}}return{drawings:t,drawingsDetails:n}}(e.drawings);return e.drawings=Jr(t.drawings).toObject(),e.drawingsDetails=$r(t.drawingsDetails),(e=eo(e)).drawings=to(e.drawings),e}#qo(e){return e.drawings=Jr(e.drawings).toObject(),e.drawingsDetails=$r(function(e){const t={},n="string"==typeof e?JSON.parse(e):e;for(let e=0,i=n.length;e<i;++e)for(let i=0,r=n[e].length;i<r;++i)for(let r=0,o=n[e][i].length;r<o;++r){const o=n[e][i][r];t[o.id]={textExpr:o.textExpr,longText:o.longText,quant:o.quant}}return t}(e.drawingsDetails)),(e=eo(e)).drawings=to(e.drawings),e}#Uo(e){return e.drawingsDetails=$r(e.drawingsDetails),(e=eo(e)).drawings=to(e.drawings),e}#Mo(e){return(e=eo(e)).drawings=to(e.drawings),e}#Qo(e){return e}}function Jr(e){let t,n,i;const r=new(Pi().Layer)({listening:!1,visible:!0}),o="string"==typeof e?JSON.parse(e):e;for(let e=0,l=o.length;e<l;++e)for(let l=0,c=o[e].length;l<c;++l)if(n=o[e][l],0!==n.length){i=new(Pi().Group)({id:(a=new s([1,1,e,l]),"slice-"+a.get(2)+"_frame-"+(4===a.length()?a.get(3):0)),name:"position-group",visible:!1});for(let e=0,r=n.length;e<r;++e)t=Pi().Node.create(n[e]),t.draggable(!0),t.getChildren().forEach((function(e){e.draggable(!1)})),i.add(t);r.add(i)}var a;return r}function $r(e){const t={},n=Object.keys(e);for(let i=0,r=n.length;i<r;++i){const r=e[n[i]];t[n[i]]={meta:{textExpr:r.textExpr,longText:r.longText,quantification:r.quant}}}return t}function eo(e){const t=e.position;return e.position=[t.i,t.j,t.k],e}function to(e){const t=e.children;for(let e=0,n=t.length;e<n;++e){const n=t[e],i=n.attrs.id.split("_"),r=parseInt(i[0].substring(6),10),o=parseInt(i[1].substring(6),10);let a="#2-";a+=0===r&&0!==o?o:r,n.attrs.id=a}return e}function no(e){let t;return"null"!==window.location.origin&&(t=window.location.origin),new URL(e,t)}function io(e){const t={};let n=null;if(e&&-1!==(n=e.indexOf("?"))){t.base=e.substring(0,n);let i=e.indexOf("#");-1===i&&(i=e.length);const r=e.substring(n+1,i);t.query=function(e){const t={};if(e){const n=e.split("&");for(let e=0;e<n.length;++e){const i=n[e].split("=");t[i[0]]?(t[i[0]]instanceof Array||(t[i[0]]=[t[i[0]]]),t[i[0]].push(i[1])):t[i[0]]=i[1]}}return t}(r)}return t}class ro extends EventTarget{#Vo=[];#No=0;getStackSize(){return this.#Vo.length}getCurrentStackIndex(){return this.#No}getCurrentCommand(){return this.#Vo[this.#No-1]}add(e){this.#Vo=this.#Vo.slice(0,this.#No),this.#Vo.push(e),++this.#No,this.dispatchEvent(new Event("undoadd"))}remove(e){let t=!1;const n=this.#Vo.findIndex((function(t){return t.getName()===e}));return-1!==n&&(t=!0,this.dispatchEvent(new CustomEvent("undoremove",{detail:{commandName:e}})),this.#Vo.splice(n,1),--this.#No),t}undo(){this.#No>0&&(this.dispatchEvent(new Event("undo")),--this.#No,this.#Vo[this.#No].undo())}redo(){this.#No<this.#Vo.length&&(this.#Vo[this.#No].execute(),++this.#No,this.dispatchEvent(new Event("redo")))}}class oo{#Bo;#Go=null;#Ki=[];#ko={};constructor(e){this.#Bo=e}init(){for(const e in this.#Bo)this.#Bo[e].init();this.enableShortcuts(!0)}enableShortcuts(e){e?window.addEventListener("keydown",this.#Ho("window","keydown"),!0):window.removeEventListener("keydown",this.#Ho("window","keydown"),!0)}getToolList(){return this.#Bo}hasTool(e){return void 0!==this.getToolList()[e]}getSelectedTool(){return this.#Go}getSelectedToolEventHandler(e){return this.getSelectedTool()[e]}setSelectedTool(e){if(!this.hasTool(e))throw new Error("Unknown tool: '"+e+"'");this.#Go&&this.#Go.activate(!1),this.#Go=this.#Bo[e],this.#Go.activate(!0)}setToolFeatures(e){this.getSelectedTool()&&this.getSelectedTool().setFeatures(e)}bindLayerGroup(e,t){const n=e.getDivId();e.addEventListener("activelayerchange",this.#zo(n)),this.#Wo(n,t)}#Wo(e,t){void 0!==this.#ko[e]&&this.#Yo(this.#ko[e]),this.#ko[e]=t,this.#Xo(t)}#zo(e){return t=>{const n=t.value[0];void 0!==n&&this.#Wo(e,n)}}#Xo(e){e.bindInteraction();const t=ci;for(let n=0;n<t.length;++n)e.addEventListener(t[n],this.#Ho(e.getId(),t[n]))}#Yo(e){e.unbindInteraction();const t=ci;for(let n=0;n<t.length;++n)e.removeEventListener(t[n],this.#Ho(e.getId(),t[n]))}#Ho(e,t){if(void 0===this.#Ki[e]&&(this.#Ki[e]=[]),void 0===this.#Ki[e][t]){const n=e=>{if(this.#Go){const t=this.#Go[e.type];t&&t(e)}};this.#Ki[e][t]=n}return this.#Ki[e][t]}}class ao{#jo=[];#Zo=2;#_o;constructor(e){this.#_o=e}setNumberOfDimensions(e){this.#Zo=e}setNToLoad(e){for(let t=0;t<e;++t){this.#jo[t]=[];for(let e=0;e<this.#Zo;++e)this.#jo[t][e]=0}}onprogress=e=>{if(!e.lengthComputable)return;if(void 0===e.subindex)return;if(void 0===e.index)return;const t=100*e.loaded/e.total;this.#jo[e.index][e.subindex]=t;let n=null;n=void 0!==e.item?e.item:{loaded:this.#Ko(e.index),total:100,source:e.source},this.#_o({lengthComputable:!0,loaded:this.#Jo(),total:100,item:n})};#Ko(e){let t=0;for(let n=0;n<this.#Zo;++n)t+=this.#jo[e][n];return t/this.#Zo}#Jo(){let e=0;const t=this.#jo.length;for(let n=0;n<t;++n)e+=this.#Ko(n);return Math.round(e/t)}getMonoProgressHandler(e,t){return n=>{n.index=e,n.subindex=t,this.onprogress(n)}}getUndefinedMonoProgressHandler(e){return t=>{t.subindex=e,this.onprogress(t)}}}class so{#$o=null;#ea=[];#ta=null;#na=0;#ia=0;#ra;#F;getDefaultCharacterSet(){return this.#F}setDefaultCharacterSet(e){this.#F=e}#oa(e){this.#$o=e,this.#na=0,this.#ia=0,this.#ra=!1,this.#aa(),this.#sa()}#la(e){this.#ea.push(e)}#aa(){this.#ea=[]}#ca(e){this.#ta=e}#sa(){this.#ta=null}#ua=e=>{this.#na++,this.#na===this.#$o.length&&this.onload({source:this.#$o})};#da=e=>{this.#ia++,this.#ia===this.#$o.length&&this.onloadend({source:this.#$o})};#ha(e,t){return n=>{n.source=t,e(n)}}load(e,t){this.onloadstart({source:e}),1===e.length&&(V(e[0],"DICOMDIR")||V(e[0],".dcmdir"))?this.#ga(e[0],t):this.#Sa(e,t)}#ma(e,t,n){return i=>{const r=i.target.status;200!==r&&0!==r?(this.onerror({source:t,error:"GET "+i.target.responseURL+" "+i.target.status+" ("+i.target.statusText+")",target:i.target}),this.#da()):e.load(i.target.response,t,n)}}#Sa(e,t){if(void 0===e||0===e.length)return;this.#oa(e);const n=new ao(this.onprogress);n.setNToLoad(e.length);const i=[];for(let e=0;e<ua.length;++e)i.push(new ua[e]);let r=e[0],o=null,a=!1;for(let s=0;s<i.length;++s)if(o=i[s],o.canLoadUrl(r,t)){a=!0,o.setOptions({numberOfFiles:e.length,defaultCharacterSet:this.getDefaultCharacterSet()}),o.onprogress=n.getUndefinedMonoProgressHandler(1),o.onloaditem=this.onloaditem,o.onload=this.#ua,o.onloadend=this.#da,o.onerror=this.onerror,o.onabort=this.onabort,this.#ca(o);break}if(!a)throw new Error("No loader found for url: "+r);let s=0;const l=()=>{s<this.#ea.length-1&&!this.#ra&&(++s,this.#ea[s].send(null))};for(let i=0;i<e.length;++i){if(r=e[i],!o.canLoadUrl(r,t))throw new Error("Input url of different type: "+r);const a=new XMLHttpRequest;if(a.open("GET",r,!0),void 0!==t){if(void 0!==t.requestHeaders){const e=t.requestHeaders;for(let t=0;t<e.length;++t)void 0!==e[t].name&&void 0!==e[t].value&&a.setRequestHeader(e[t].name,e[t].value)}void 0!==t.withCredentials&&(a.withCredentials=t.withCredentials)}a.onprogress=this.#ha(n.getMonoProgressHandler(i,0),r),a.onload=this.#ma(o,r,i),a.onloadend=l;const s=this.#ha(this.onerror,r);a.onerror=e=>{this.#da(),s(e)};const c=this.#ha(this.ontimeout,r);a.ontimeout=e=>{this.#da(),c(e)};const u=this.#ha(this.onabort,r);a.onabort=e=>{this.#da(),u(e)},1===o.loadUrlAs()&&(a.responseType="arraybuffer"),this.#la(a)}let c=this.#ea.length;void 0!==t&&void 0!==t.batchSize&&0!==c&&(c=Math.min(t.batchSize,this.#ea.length));for(let e=0;e<c;++e)this.#ra||(s=e,this.#ea[s].send(null))}#ga(e,t){const n=new XMLHttpRequest;n.open("GET",e,!0),n.responseType="arraybuffer",n.onload=n=>{const i=n.target.status;if(200!==i&&0!==i)this.onerror({source:e,error:"GET "+n.target.responseURL+" "+n.target.status+" ("+n.target.statusText+")",target:n.target}),this.onloadend({});else{const i=function(e){const t=new Ye;return t.parse(e),function(e){const t=e["00041220"];if(void 0===t||void 0===t.value)return void c.warn("No Directory Record Sequence found in DICOMDIR.");const n=t.value;if(0===n.length)return void c.warn("The Directory Record Sequence of the DICOMDIR is empty.");const i=[];let r=null,o=null;for(let e=0;e<n.length;++e){const t=n[e]["00041430"];if(void 0===t||void 0===t.value)continue;const a=t.value[0];if("STUDY"===a)o=[],i.push(o);else if("SERIES"===a)r=[],o.push(r);else if("IMAGE"===a){const t=n[e]["00041500"];if(void 0===t||void 0===t.value)continue;const i=t.value;r.push(i.join("/"))}}return i}(t.getDicomElements())}(n.target.response)[0][0],r=e.split("/").slice(0,-1).join("/"),o=[];for(let e=0;e<i.length;++e)o.push(r+"/"+i[e]);this.#Sa(o,t)}},n.onerror=t=>{this.#ha(this.onerror,e)(t),this.onloadend({})},n.onabort=t=>{this.#ha(this.onabort,e)(t),this.onloadend({})},n.send(null)}abort(){this.#ra=!0;for(let e=0;e<this.#ea.length;++e)4!==this.#ea[e].readyState&&this.#ea[e].abort();this.#ta&&this.#ta.isLoading()&&this.#ta.abort()}onloadstart(e){}onprogress(e){}onloaditem(e){}onload(e){}onloadend(e){}onerror(e){}ontimeout(e){}onabort(e){}}const lo="undefined"!=typeof JpegImage,co="undefined"!=typeof jpeg&&void 0!==jpeg.lossless,uo="undefined"!=typeof JpxImage,ho={jpeg2000:"","jpeg-lossless":"","jpeg-baseline":"",rle:""};class go{#pa;#fa=new Yn(10);#Da=!1;constructor(e,t){this.#pa=e}decode(e,t,n){this.#Da||(this.#Da=!0,this.#fa.onworkstart=this.ondecodestart,this.#fa.onworkitem=this.ondecodeditem,this.#fa.onwork=this.ondecoded,this.#fa.onworkend=this.ondecodeend,this.#fa.onerror=this.onerror,this.#fa.onabort=this.onabort);const i=new jn(this.#pa,{buffer:e,meta:t},n);this.#fa.addWorkerTask(i)}abort(){this.#fa.abort()}ondecodestart(e){}ondecodeditem(e){}ondecoded(e){}ondecodeend(e){}onerror(e){}onabort(e){}}class So{#ya;#va;constructor(e,t){this.#ya=e,this.#va=t}#Ca=0;decode(e,t,n){++this.#Ca;let i=null,r=null;if("jpeg-lossless"===this.#ya){if(!co)throw new Error("No JPEG Lossless decoder provided");const n=t.bitsAllocated/8,o=new Uint8Array(e);i=new jpeg.lossless.Decoder;const a=i.decode(o.buffer,0,o.buffer.byteLength,n);8===t.bitsAllocated?r=t.isSigned?new Int8Array(a.buffer):new Uint8Array(a.buffer):16===t.bitsAllocated&&(r=t.isSigned?new Int16Array(a.buffer):new Uint16Array(a.buffer))}else if("jpeg-baseline"===this.#ya){if(!lo)throw new Error("No JPEG Baseline decoder provided");i=new JpegImage,i.parse(e),r=i.getData(i.width,i.height)}else if("jpeg2000"===this.#ya){if(!uo)throw new Error("No JPEG 2000 decoder provided");i=new JpxImage,i.parse(e),r=i.tiles[0].items}else"rle"===this.#ya&&(i=new dwvdecoder.RleDecoder,r=i.decode(e,t.bitsAllocated,t.isSigned,t.sliceSize,t.samplesPerPixel,t.planarConfiguration));this.ondecodeditem({data:[r],index:n.index,numberOfItems:n.numberOfItems,itemNumber:n.itemNumber}),this.#Ca===this.#va&&(this.ondecoded({}),this.ondecodeend({}))}abort(){this.onabort({}),this.ondecodeend({})}ondecodestart(e){}ondecodeditem(e){}ondecoded(e){}ondecodeend(e){}onerror(e){}onabort(e){}}class mo{#Da=!1;#Ia=null;constructor(e,t){void 0!==ho&&void 0!==ho[e]?this.#Ia=new go(ho[e],t):this.#Ia=new So(e,t)}decode(e,t,n){this.#Da||(this.#Da=!0,this.#Ia.ondecodestart=this.ondecodestart,this.#Ia.ondecodeditem=this.ondecodeditem,this.#Ia.ondecoded=this.ondecoded,this.#Ia.ondecodeend=this.ondecodeend,this.#Ia.onerror=this.onerror,this.#Ia.onabort=this.onabort),this.#Ia.decode(e,t,n)}abort(){this.#Ia.abort()}ondecodestart(e){}ondecodeditem(e){}ondecoded(e){}ondecodeend(e){}onerror(e){}onabort(e){}}const po={NumericValue:"0040A30A",FloatingPointValue:"0040A161",RationalNumeratorValue:"0040A162",RationalDenominatorValue:"0040A163",MeasurementUnitsCodeSequence:"004008EA"};class fo{numericValue;floatingPointValue;rationalNumeratorValue;rationalDenominatorValue;measurementUnitsCode;toString(){return this.numericValue+" "+this.measurementUnitsCode.toString()}}function Do(e){const t={};return void 0!==e.measurementUnitsCode&&(t.MeasurementUnitsCodeSequence={value:[en(e.measurementUnitsCode)]}),void 0!==e.floatingPointValue&&(t.FloatingPointValue=e.floatingPointValue),void 0!==e.rationalNumeratorValue&&(t.RationalNumeratorValue=e.rationalNumeratorValue),void 0!==e.rationalDenominatorValue&&(t.RationalDenominatorValue=e.rationalDenominatorValue),void 0!==e.numericValue&&(t.NumericValue=e.numericValue),t}const yo={MeasuredValueSequence:"0040A300",NumericValueQualifierCodeSequence:"0040A301"};class vo{measuredValue;numericValueQualifierCode;toString(){let e="";return void 0!==this.measuredValue&&(e+=this.measuredValue.toString()),void 0!==this.numericValueQualifierCode&&(e+=" "+this.numericValueQualifierCode.toString()),e}}function Co(e){const t={};return void 0!==e.measuredValue&&(t.MeasuredValueSequence={value:[Do(e.measuredValue)]}),void 0!==e.numericValueQualifierCode&&(t.NumericValueQualifierCodeSequence={value:[en(e.numericValueQualifierCode)]}),t}const Io={ReferencedSOPClassUID:"00081150",ReferencedSOPInstanceUID:"00081155"};class To{referencedSOPClassUID;referencedSOPInstanceUID;toString(){return this.referencedSOPInstanceUID+" (class: "+this.referencedSOPClassUID+")"}}function Po(e){const t=new To;return void 0!==e[Io.ReferencedSOPClassUID]&&(t.referencedSOPClassUID=e[Io.ReferencedSOPClassUID].value[0]),void 0!==e[Io.ReferencedSOPInstanceUID]&&(t.referencedSOPInstanceUID=e[Io.ReferencedSOPInstanceUID].value[0]),t}function Lo(e){const t={};return void 0!==e.referencedSOPClassUID&&(t.ReferencedSOPClassUID=e.referencedSOPClassUID),void 0!==e.referencedSOPInstanceUID&&(t.ReferencedSOPInstanceUID=e.referencedSOPInstanceUID),t}const wo={ReferencedFrameNumber:"00081160",ReferencedSOPSequence:"00081199",ReferencedSegmentNumber:"0062000B"};class Oo{referencedSOPSequence;referencedFrameNumber;referencedSegmentNumber;toString(){let e=this.referencedSOPSequence.toString();return void 0!==this.referencedFrameNumber&&(e+=", frame: "+this.referencedFrameNumber),e}}function bo(e){const t={};return void 0!==e.referencedFrameNumber&&(t.ReferencedFrameNumber=e.referencedFrameNumber),void 0!==e.referencedSOPSequence&&(t.ReferencedSOPSequence={value:[Lo(e.referencedSOPSequence)]}),void 0!==e.referencedSegmentNumber&&(t.ReferencedSegmentNumber=e.referencedSegmentNumber),t}const Ao={PixelOriginInterpretation:"00480301",GraphicData:"00700022",GraphicType:"00700023",FiducialUID:"0070031A"},xo="POINT",Ro="MULTIPOINT",Eo="POLYLINE",Fo="CIRCLE",qo="ELLIPSE";class Uo{graphicData;graphicType;pixelOriginInterpretation;fiducialUID;toString(){return this.graphicType+" {"+this.graphicData+"}"}}function Mo(e){const t={};return void 0!==e.pixelOriginInterpretation&&(t.PixelOriginInterpretation=e.pixelOriginInterpretation),void 0!==e.graphicData&&(t.GraphicData=e.graphicData),void 0!==e.graphicType&&(t.GraphicType=e.graphicType),void 0!==e.fiducialUID&&(t.FiducialUID=e.fiducialUID),t}function Qo(e){const t=e.graphicData.length;if(0===t)throw new Error("No coordinates in scoord data");if(t%2!=0)throw new Error("Expecting even number of coordinates in scoord data");const n=[];for(let i=0;i<t;i+=2)n.push(new F(parseFloat(e.graphicData[i]),parseFloat(e.graphicData[i+1])));let i=!1;const r=n.length;if(r>2){const e=n[0],t=n[r-1];i=e.equals(t)}let o;if(e.graphicType===xo)n.length>1&&c.warn("Expecting 1 point for point, got "+r),o=n[0];else if(e.graphicType===Fo){if(n.length<2)throw new Error("Expecting 2 points for circles, got "+r);n.length>2&&c.warn("Expecting 2 points for circles, got "+r);const e=n[0],t=n[1].getDistance(e);o=new Ar(e,t)}else if(e.graphicType===qo){if(n.length<4)throw new Error("Expecting 4 points for ellipses, got "+r);n.length>4&&c.warn("Expecting 4 points for ellipses, got "+r);const e=n[0].getDistance(n[1])/2,t=n[2].getDistance(n[3])/2,i=new F(n[0].getX()+e,n[0].getY());o=new Gi(i,e,t)}else if(e.graphicType===Eo)if(i)if(5===n.length){const e=new fi(n[0],n[1]),t=new fi(n[1],n[2]),i=new fi(n[2],n[3]),r=new fi(n[3],n[4]);o=yi(e,t)&&yi(t,i)&&yi(i,r)?new Rr(n[0],n[2]):new vr(n.slice(0,-1))}else o=new vr(n.slice(0,-1));else 2===n.length?o=new fi(n[0],n[1]):3===n.length&&(o=new xr([n[0],n[1],n[2]]));return o}const Vo={GraphicData:"00700022",GraphicType:"00700023",ReferencedFrameofReferenceUID:"30060024",FiducialUID:"0070031A"};class No{graphicData;graphicType;referencedFrameofReferenceUID;fiducialUID;toString(){return this.graphicType+" {"+this.graphicData+"}"}}function Bo(e){const t={};return void 0!==e.graphicData&&(t.GraphicData=e.graphicData),void 0!==e.graphicType&&(t.GraphicType=e.graphicType),void 0!==e.referencedFrameofReferenceUID&&(t.ReferencedFrameofReferenceUID=e.referencedFrameofReferenceUID),void 0!==e.fiducialUID&&(t.FiducialUID=e.fiducialUID),t}const Go={ReferencedSOPSequence:"00081199",RelationshipType:"0040A010",ValueType:"0040A040",ConceptNameCodeSequence:"0040A043",ConceptCodeSequence:"0040A168",ContentSequence:"0040A730",DateTime:"0040A120",Date:"0040A121",Time:"0040A122",UID:"0040A124",PersonName:"0040A123",TextValue:"0040A160",ContinuityOfContent:"0040A050",ContentTemplateSequence:"0040A504",MappingResource:"00080105",TemplateIdentifier:"0040DB00"},ko="CONTAINS",Ho="HAS PROPERTIES",zo="HAS OBS CONTEXT",Wo="INFERRED FROM",Yo="SELECTED FROM",Xo="HAS CONCEPT MOD",jo={text:"TEXT",num:"NUM",code:"CODE",date:"DATE",time:"TIME",datetime:"DATETIME",uidref:"UIDREF",pname:"PNAME",composite:"COMPOSITE",image:"IMAGE",waveform:"WAVEFORM",scoord:"SCOORD",scoord3d:"SCOORD3D",tcoord:"TCOORD",container:"CONTAINER",table:"TABLE"},Zo="SEPARATE",_o={TEXT:"TextValue",DATE:"Date",TIME:"Time",DATETIME:"DateTime",UIDREF:"UID",PNAME:"PersonName",CONTAINER:"ContinuityOfContent"};function Ko(e){let t;const n=ue(e,Go.ContentTemplateSequence);if(void 0!==n){const e=ue(n,Go.MappingResource),i=ue(n,Go.TemplateIdentifier);void 0!==e&&void 0!==i&&(t=e+"-"+i)}return t}class Jo{valueType;conceptNameCode;relationshipType;contentSequence=[];value;constructor(e){this.valueType=e}toString(e){void 0===e&&(e="");let t="";void 0!==this.relationshipType&&(t+="("+this.relationshipType+") "),t+=this.valueType+": ",void 0!==this.conceptNameCode&&(t+=this.conceptNameCode.toString()),t+=" = "+this.value.toString();for(const n of this.contentSequence)t+="\n"+e+"- "+n.toString(e+"  ");return t}hasHeader(e,t,n){return this.valueType===e&&Jt(this.conceptNameCode,t)&&this.relationshipType===n}}function $o(e){let t=ue(e,Go.ValueType);void 0===t&&(t="");const n=new Jo(t);n.relationshipType=ue(e,Go.RelationshipType);const i=ue(e,Go.ConceptNameCodeSequence);if(void 0!==i&&(n.conceptNameCode=$t(i)),t===jo.code)n.value=$t(ue(e,Go.ConceptCodeSequence));else if(t===jo.num)n.value=function(e){const t=new vo;return void 0!==e[yo.MeasuredValueSequence]&&(t.measuredValue=function(e){const t=new fo;return void 0!==e[po.NumericValue]&&(t.numericValue=parseFloat(e[po.NumericValue].value[0])),void 0!==e[po.FloatingPointValue]&&(t.floatingPointValue=parseFloat(e[po.FloatingPointValue].value[0])),void 0!==e[po.RationalNumeratorValue]&&(t.rationalNumeratorValue=parseInt(e[po.RationalNumeratorValue].value[0],10)),void 0!==e[po.RationalDenominatorValue]&&(t.rationalDenominatorValue=parseInt(e[po.RationalDenominatorValue].value[0],10)),void 0!==e[po.MeasurementUnitsCodeSequence]&&(t.measurementUnitsCode=$t(e[po.MeasurementUnitsCodeSequence].value[0])),t}(e[yo.MeasuredValueSequence].value[0])),void 0!==e[yo.NumericValueQualifierCodeSequence]&&(t.numericValueQualifierCode=$t(e[yo.NumericValueQualifierCodeSequence].value[0])),t}(e);else if(t===jo.image)n.value=function(e){const t=new Oo;return void 0!==e[wo.ReferencedFrameNumber]&&(t.referencedFrameNumber=e[wo.ReferencedFrameNumber].value[0]),void 0!==e[wo.ReferencedSOPSequence]&&(t.referencedSOPSequence=Po(e[wo.ReferencedSOPSequence].value[0])),void 0!==e[wo.ReferencedSegmentNumber]&&(t.referencedSegmentNumber=e[wo.ReferencedSegmentNumber].value[0]),t}(e);else if(t===jo.composite)n.value=Po(ue(e,Go.ReferencedSOPSequence));else if(t===jo.scoord)n.value=function(e){const t=new Uo;return void 0!==e[Ao.GraphicData]&&(t.graphicData=e[Ao.GraphicData].value),void 0!==e[Ao.GraphicType]&&(t.graphicType=e[Ao.GraphicType].value[0]),void 0!==e[Ao.PixelOriginInterpretation]&&(t.pixelOriginInterpretation=e[Ao.PixelOriginInterpretation].value[0]),void 0!==e[Ao.FiducialUID]&&(t.fiducialUID=e[Ao.FiducialUID].value[0]),t}(e);else if(t===jo.scoord3d)n.value=function(e){const t=new No;return void 0!==e[Vo.GraphicData]&&(t.graphicData=e[Vo.GraphicData].value),void 0!==e[Vo.GraphicType]&&(t.graphicType=e[Vo.GraphicType].value[0]),void 0!==e[Vo.ReferencedFrameofReferenceUID]&&(t.referencedFrameofReferenceUID=e[Vo.ReferencedFrameofReferenceUID].value[0]),void 0!==e[Vo.FiducialUID]&&(t.fiducialUID=e[Vo.FiducialUID].value[0]),t}(e);else{const i=_o[t];void 0!==i?n.value=ue(e,Go[i]):console.warn("Unsupported input ValueType: "+t)}const r=de(e,Go.ContentSequence);if(void 0!==r)for(const e of r)n.contentSequence.push($o(e));return n}function ea(e){let t={};if(void 0!==e.relationshipType&&(t.RelationshipType=e.relationshipType),void 0!==e.valueType&&(t.ValueType=e.valueType),void 0!==e.conceptNameCode&&(t.ConceptNameCodeSequence={value:[en(e.conceptNameCode)]}),"CODE"===e.valueType)t.ConceptCodeSequence={value:[en(e.value)]};else if(e.valueType===jo.num)t={...t,...Co(e.value)};else if(e.valueType===jo.image)t={...t,...bo(e.value)};else if(e.valueType===jo.composite)t={...t,...Lo(e.value)};else if(e.valueType===jo.scoord)t={...t,...Mo(e.value)};else if(e.valueType===jo.scoord3d)t={...t,...Bo(e.value)};else{const n=_o[e.valueType];void 0!==n?t[n]=e.value:console.warn("Unsupported output ValueType: "+e.valueType)}if(0!==e.contentSequence.length){t.ContentSequence={value:[]};for(const n of e.contentSequence)t.ContentSequence.value.push(ea(n))}return t}function ta(e,t,n){const i=function(e){const t=fn[e];let n;return void 0!==t&&(n=on(t.key,t.scheme)),n}(e);if(void 0===i)return;const r=new Jo(jo.num);r.relationshipType=ko,r.conceptNameCode=i;const o=new fo;o.numericValue=t,o.measurementUnitsCode=function(e){const t=Dn[e];let n;return void 0!==t?n=on(t,"UCUM"):void 0===t&&(n=on("1","UCUM")),n}(n);const a=new vo;return a.measuredValue=o,r.value=a,r}class na{#ee;getWarning(){return this.#ee}#Ta(e){const t=function(e){let t;return e.startsWith("1.2.826.0.1.3680043.9.7278.1")&&(t=e.substring(29).replace(".99","-beta")),t}(ue(e,"00020012")),n=void 0!==t&&function(e){const t=Ae(e,"0.34.0"),n=Ae(e,"0.35.0-beta.21");return t>=0&&n<=0}(t),i=Ko(e);let r;const o=$o(e);return void 0!==o.conceptNameCode&&(r=o.conceptNameCode.value),n&&void 0===i&&r===an().value}#Pa(e){const t="DCMR-1500"===Ko(e);let n;const i=$o(e);void 0!==i.conceptNameCode&&(n=i.conceptNameCode.value);const r=n===sn().value;let o=!1;if(t&&r){const e=i.contentSequence.find(this.#La);if(void 0!==e){const t=e.contentSequence.find(this.#wa);if(void 0!==t){const e=t.contentSequence.find(this.#Oa),n=t.contentSequence.find(this.#ba);void 0===e&&void 0===n||(o=!0)}}}return o}checkElements(e){return this.#ee=void 0,this.#Ta(e)||this.#Pa(e)||(this.#ee="Not a dwv supported annotation"),this.#ee}#Aa(e,t){t.valueType===jo.image&&t.relationshipType===Yo&&(e.referencedSopClassUID=t.value.referencedSOPSequence.referencedSOPClassUID,e.referencedSopInstanceUID=t.value.referencedSOPSequence.referencedSOPInstanceUID,void 0!==t.value.referencedFrameNumber&&(e.referencedFrameNumber=parseInt(t.value.referencedFrameNumber,10)))}#xa(e,t){t.hasHeader(jo.uidref,dn(),Ho)&&(e.trackingId=t.value,e.trackingUid=t.value)}#Ra(e,t){t.hasHeader(jo.text,dn(),zo)&&(e.trackingId=t.value),t.hasHeader(jo.uidref,hn(),zo)&&(e.trackingUid=t.value)}#Ea(e,t,n){void 0===n&&(n=!1);let i=Xo;if(n&&(i=Ho),t.hasHeader(jo.text,Sn(),i)){e.textExpr=t.value;const n=t.contentSequence.find((function(e){return e.hasHeader(jo.scoord,mn(),Ho)}));void 0!==n&&(e.labelPosition=new F(n.value.graphicData[0],n.value.graphicData[1]))}if(t.hasHeader(jo.text,pn(),i)&&(e.colour=t.value),t.hasHeader(jo.scoord,mn(),i)&&t.value.graphicType===Ro){const n=[];for(let e=0;e<t.value.graphicData.length;e+=2)n.push(new F(t.value.graphicData[e],t.value.graphicData[e+1]));e.referencePoints=n}if(t.hasHeader(jo.scoord3d,un(),ko)&&t.value.graphicType===Ro){const n=t.value.graphicData,i=[],r=Math.floor(n.length/3);for(let e=0;e<r;++e){const t=3*e;i.push(new q(n[t],n[t+1],n[t+2]))}e.planePoints=i}this.#Fa(e,t),this.#qa(e,t)}#Fa(e,t){if(t.valueType===jo.num&&t.relationshipType===ko){const n=function(e){let t;for(const n in fn){const i=fn[n];if(i.scheme===e.schemeDesignator&&i.key===e.value){t=n;break}}return t}(t.conceptNameCode);if(void 0!==n){const i=t.value.measuredValue,r=function(e){let t;for(const n in Dn){const i=Dn[n];if("UCUM"===e.schemeDesignator&&i===e.value){t=n;break}}return t}(i.measurementUnitsCode);void 0===e.quantification&&(e.quantification={}),e.quantification[n]={value:i.numericValue,unit:r}}}}#qa(e,t){t.valueType!==jo.code&&t.valueType!==jo.text||t.relationshipType!==ko||e.addMetaItem(t.conceptNameCode,t.value)}#La(e){return e.hasHeader(jo.container,ln(),ko)}#wa(e){return e.hasHeader(jo.container,an(),ko)}#Oa(e){return e.hasHeader(jo.scoord,cn(),ko)}#Ua(e){return void 0!==e.contentSequence.find(this.#Oa)}#Ma(e){let t;const n=e.contentSequence.find(this.#Oa);if(void 0!==n){t=new Gr,t.mathShape=Qo(n.value);const i=n.contentSequence.find((function(e){return e.valueType===jo.image&&e.relationshipType===Yo}));void 0!==i&&this.#Aa(t,i);for(const n of e.contentSequence)this.#Ra(t,n),this.#Ea(t,n)}return t}#ba(e){let t;return e.valueType===jo.num&&e.relationshipType===ko&&(t=e.contentSequence.find((function(e){return e.valueType===jo.scoord&&e.relationshipType===Wo}))),void 0!==t}#Qa(e){return void 0!==e.contentSequence.find(this.#ba)}#Va(e){let t;const n=e.contentSequence.find(this.#ba);if(void 0!==n){t=new Gr;const e=n.contentSequence.find((function(e){return e.valueType===jo.scoord&&e.relationshipType===Wo}));t.mathShape=Qo(e.value),t.mathShape instanceof F&&e.value.graphicData.length>=4&&(t.referencePoints=[new F(e.value.graphicData[2],e.value.graphicData[3])]);const i=e.contentSequence.find((function(e){return e.valueType===jo.image&&e.relationshipType===Yo}));void 0!==i&&this.#Aa(t,i)}if(void 0!==t)for(const i of e.contentSequence)this.#Ra(t,i),this.#Fa(t,n),this.#qa(t,i);return t}#Na(e){if(0===e.contentSequence.length)return;const t=e.contentSequence[0];let n=!1,i=!1;this.#wa(t)&&(n=this.#Ua(t),i=this.#Qa(t));const r=[];let o,a=!1;for(const t of e.contentSequence)if(this.#wa(t)){let e;a=!0,n?e=this.#Ma(t):i&&(e=this.#Va(t)),void 0!==e&&r.push(e)}return a?0!==r.length?o=new kr(r):c.warn("No valid measurement groups in TID 1500 SR"):c.warn("No measurement groups in TID 1500 SR"),o}#Ba(e){const t=new Gr;t.mathShape=Qo(e.value);for(const n of e.contentSequence)this.#Aa(t,n),this.#xa(t,n),this.#Ea(t,n,!0);return t}#Ga(e){let t;e.valueType===jo.container&&Jt(e.conceptNameCode,sn())||c.warn("Not the expected TID 1500 SR content header");const n=e.contentSequence.find(this.#La);return void 0!==n?t=this.#Na(n):c.warn("No imaging measurements in TID 1500 SR"),t}#ka(e){e.valueType===jo.container&&Jt(e.conceptNameCode,an())||console.warn("Not the expected dwv034 content header");const t=[];for(const n of e.contentSequence)n.valueType===jo.scoord&&t.push(this.#Ba(n));return new kr(t)}create(e){const t=$o(e);let n;if(this.#Pa(e)?n=this.#Ga(t):this.#Ta(e)&&(c.warn("DWV v0.34 annotation"),n=this.#ka(t)),void 0===n)throw new Error("Cannot create annotation group from TID 1500 SR");const i=function(t){return ue(e,t)};n.setMetaValue("StudyInstanceUID",i("0020000D")),n.setMetaValue("StudyID",i("00200010")),n.setMetaValue("SeriesInstanceUID",i("0020000E")),n.setMetaValue("SeriesNumber",i("00200011")),n.setMetaValue("Modality",i("00080060")),n.setMetaValue("PatientName",i("00100010")),n.setMetaValue("PatientID",i("00100020")),n.setMetaValue("PatientBirthDate",i("00100030")),n.setMetaValue("PatientSex",i("00100040"));const r="0040A375",o=e[r];if(void 0!==o){const e=Pe({[r]:o});n.setMetaValue("CurrentRequestedProcedureEvidenceSequence",e.CurrentRequestedProcedureEvidenceSequence)}return n}#Ha(e){const t=new Jo(jo.image);t.relationshipType=Yo,t.conceptNameCode=on("121324","DCM");const n=new To;n.referencedSOPClassUID=e.referencedSopClassUID,n.referencedSOPInstanceUID=e.referencedSopInstanceUID;const i=new Oo;return i.referencedSOPSequence=n,void 0!==e.referencedFrameNumber&&(i.referencedFrameNumber=e.referencedFrameNumber.toString()),t.value=i,t}#za(e){const t=[],n=new Jo(jo.text);n.relationshipType=zo,n.conceptNameCode=dn(),n.value=e.trackingId,t.push(n);const i=new Jo(jo.uidref);if(i.relationshipType=zo,i.conceptNameCode=hn(),i.value=e.trackingUid,t.push(i),void 0!==e.textExpr&&0!==e.textExpr.length){const n=new Jo(jo.text);if(n.relationshipType=Xo,n.conceptNameCode=Sn(),n.value=e.textExpr,void 0!==e.labelPosition){const t=new Jo(jo.scoord);t.relationshipType=Ho,t.conceptNameCode=mn();const i=new Uo;i.graphicType=xo;const r=[e.labelPosition.getX().toString(),e.labelPosition.getY().toString()];i.graphicData=r,t.value=i;const o=this.#Ha(e);t.contentSequence=[o],n.contentSequence=[t]}t.push(n)}const r=new Jo(jo.text);if(r.relationshipType=Xo,r.conceptNameCode=pn(),r.value=e.colour,t.push(r),void 0!==e.referencePoints){const n=new Jo(jo.scoord);n.relationshipType=Xo,n.conceptNameCode=mn();const i=new Uo;i.graphicType=Ro;const r=[];for(const t of e.referencePoints)r.push(t.getX().toString()),r.push(t.getY().toString());i.graphicData=r,n.value=i;const o=this.#Ha(e);n.contentSequence=[o],t.push(n)}if(void 0!==e.planePoints){const n=new Jo(jo.scoord3d);n.relationshipType=ko,n.conceptNameCode=un();const i=new No;i.graphicType=Ro;const r=[];for(const t of e.planePoints)r.push(t.getX().toString()),r.push(t.getY().toString()),r.push(t.getZ().toString());i.graphicData=r,n.value=i;const o=this.#Ha(e);n.contentSequence=[o],t.push(n)}if(void 0!==e.quantification)for(const n in e.quantification){const i=ta(n,k(e.quantification[n].value,12),e.quantification[n].unit);void 0!==i&&t.push(i)}const o=e.getMetaConceptIds();for(const n of o){const i=e.getMetaItem(n);let r=jo.text;i.value instanceof Kt&&(r=jo.code);const o=new Jo(r);o.relationshipType=ko,o.conceptNameCode=i.concept,o.value=i.value,t.push(o)}return t}#Wa(e){const t=new Jo(jo.container);t.relationshipType=ko,t.conceptNameCode=an(),t.value=Zo;const n=new Jo(jo.scoord);n.relationshipType=ko,n.conceptNameCode=cn(),n.value=function(e){const t=new Uo;if(e instanceof F)t.graphicData=[e.getX().toString(),e.getY().toString()],t.graphicType=xo;else if(e instanceof fi)t.graphicData=[e.getBegin().getX().toString(),e.getBegin().getY().toString(),e.getEnd().getX().toString(),e.getEnd().getY().toString()],t.graphicType=Eo;else if(e instanceof xr){t.graphicData=[];for(let n=0;n<3;++n)t.graphicData.push(e.getPoint(n).getX().toString()),t.graphicData.push(e.getPoint(n).getY().toString());t.graphicType=Eo}else if(e instanceof vr){t.graphicData=[];for(let n=0;n<e.getLength();++n)t.graphicData.push(e.getPoint(n).getX().toString()),t.graphicData.push(e.getPoint(n).getY().toString());const n=e.getPoint(0);t.graphicData.push(n.getX().toString()),t.graphicData.push(n.getY().toString()),t.graphicType=Eo}else if(e instanceof Ar){const n=e.getCenter(),i=new F(n.getX()+e.getRadius(),n.getY());t.graphicData=[n.getX().toString(),n.getY().toString(),i.getX().toString(),i.getY().toString()],t.graphicType=Fo}else if(e instanceof Gi){const n=e.getCenter(),i=e.getA(),r=e.getB();t.graphicData=[(n.getX()-i).toString(),n.getY().toString(),(n.getX()+i).toString(),n.getY().toString(),n.getX().toString(),(n.getY()-r).toString(),n.getX().toString(),(n.getY()+r).toString()],t.graphicType=qo}else if(e instanceof Rr){const n=e.getBegin(),i=e.getEnd();t.graphicData=[n.getX().toString(),n.getY().toString(),n.getX().toString(),i.getY().toString(),i.getX().toString(),i.getY().toString(),i.getX().toString(),n.getY().toString(),n.getX().toString(),n.getY().toString()],t.graphicType=Eo}return t}(e.mathShape);const i=this.#Ha(e);return n.contentSequence=[i],t.contentSequence=[n].concat(this.#za(e)),t}#Ya(e){let t;if(0!==e.getList().length){const n=new Jo(jo.container);n.conceptNameCode=ln(),n.relationshipType=ko,n.value=Zo;const i=[];for(const t of e.getList())i.push(this.#Wa(t));n.contentSequence=i,t=new Jo(jo.container),t.conceptNameCode=sn(),t.value=Zo,t.contentSequence=[n]}return t}toDicom(e,t){let n=e.getMeta();n.TransferSyntaxUID="1.2.840.10008.1.2.1",n.SOPClassUID="1.2.840.10008.5.1.4.1.1.88.34",n.MediaStorageSOPClassUID="1.2.840.10008.5.1.4.1.1.88.34",n.CompletionFlag="PARTIAL",n.VerificationFlag="UNVERIFIED";const i=new Date;n.ContentDate=Ot(Lt(i)),n.ContentTime=bt(wt(i)),n.StudyDate=n.ContentDate,n.StudyTime=n.ContentTime;const r=n.CurrentRequestedProcedureEvidenceSequence.value[0].ReferencedSeriesSequence.value[0];let o=r.ReferencedSOPSequence;void 0===o&&(r.ReferencedSOPSequence={value:[]},o=r.ReferencedSOPSequence);const a=o.value;for(const t of e.getList()){const e={ReferencedSOPInstanceUID:t.referencedSopInstanceUID,ReferencedSOPClassUID:t.referencedSopClassUID},n=function(t){return t.ReferencedSOPInstanceUID===e.ReferencedSOPInstanceUID&&t.ReferencedSOPClassUID===e.ReferencedSOPClassUID};void 0===a.find(n)&&a.push(e)}n.ContentTemplateSequence={value:[{MappingResource:"DCMR",TemplateIdentifier:"1500"}]};const s=this.#Ya(e);if(void 0===s)throw new Error("No annotation group SR content");return n={...n,...ea(s)},void 0!==t&&function(e,t){const n=Object.keys(t);for(const i of n)void 0!==e[i]&&c.debug("Overwritting tag: "+i),e[i]=t[i]}(n,t),Zt(n)}}class ia{#Xa;setOptions(e){this.#Xa=e}#Ia=null;#ja=[];#Za=[];#_a=[];#Ka=[];#Ja(e){let t;const n=e["00080060"];if(void 0!==n){const e=n.value[0];"SEG"===e?t=new Wn:"SR"===e&&(t=new na)}return void 0===t&&void 0!==e["7FE00010"]&&(t=new qt),t}#$a(e,t){const n=this.#ja[e].getDicomElements(),i=this.#Ka[e];if(void 0===i)return!1;try{const r=new Hi(n);i instanceof na?void 0===i.checkElements(n)&&(r.annotationGroup=i.create(n)):i instanceof Wn?r.buffer=this.#Za[e]:r.image=i.create(n,this.#Za[e],this.#Xa.numberOfFiles),this.onloaditem({data:r,source:t,warn:i.getWarning()})}catch(e){return this.onerror({error:e,source:t}),this.onloadend({source:t}),!1}return!0}#es(e,t){this.#$a(e,t)&&this.onload({source:t}),this.onloadend({source:t})}#ts(e,t){this.onprogress({lengthComputable:!0,loaded:100,total:100,index:e,source:t}),this.#es(e,t)}#ns(e,t,n){const i=this.#ja[e],r={bitsAllocated:i.getDicomElements()["00280100"].value[0],isSigned:1===i.getDicomElements()["00280103"].value[0]},o=i.getDicomElements()["00280011"],a=i.getDicomElements()["00280010"];void 0!==o&&void 0!==a&&(r.sliceSize=o.value[0]*a.value[0]);const s=i.getDicomElements()["00280002"];void 0!==s&&(r.samplesPerPixel=s.value[0]);const l=i.getDicomElements()["00280006"];void 0!==l&&(r.planarConfiguration=l.value[0]);const c=t.length;null===this.#Ia&&(this.#Ia=new mo(n,c),this.#Ia.ondecodeditem=e=>{this.#is(e),e.itemNumber+1===e.numberOfItems&&(this.onload(e),this.onloadend(e))},this.#Ia.onerror=this.onerror,this.#Ia.onabort=this.onabort);for(let n=0;n<c;++n)this.#Ia.decode(t[n],r,{itemNumber:n,numberOfItems:c,index:e})}#is(e){this.onprogress({lengthComputable:!0,loaded:e.itemNumber+1,total:e.numberOfItems,index:e.index,source:origin});const t=e.index,n=e.data[0];if(1!==e.numberOfItems){if(void 0===this.#_a[t]){this.#_a[t]=n.length;const i=e.numberOfItems*this.#_a[t];try{this.#Za[t]=new n.constructor(i)}catch(e){if(e instanceof RangeError){const e=Math.floor(Math.log(i)/Math.log(2));c.error("Cannot allocate "+n.constructor.name+" of size: "+i+" (>2^"+e+") for decompressed data.")}return this.#Ia.abort(),this.onerror({error:e,source:origin}),void this.onloadend({source:origin})}}n.length!==this.#_a[t]&&c.warn("Unsupported varying decompressed data size: "+n.length+" != "+this.#_a[t]),this.#Za[t].set(n,this.#_a[t]*e.itemNumber)}else this.#Za[t]=n;0===e.itemNumber&&this.#$a(t,origin)}#rs(e,t){this.#es(e,t)}#os(e,t){const n=this.#ja[e],i=n.getDicomElements()["7FE00010"].value;n.getDicomElements()["7FE00010"].value=[],this.#Za[e]=i[0];const r=function(e){let t;return Ve(e)?t="jpeg2000":Me(e)?t="jpeg-baseline":Qe(e)?t="jpeg-lossless":Ne(e)&&(t="rle"),t}(n.getDicomElements()["00020010"].value[0]);void 0!==r?this.#ns(e,i,r):this.#ts(e,t)}convert(e,t,n){this.onloadstart({source:t,index:n});const i=new Ye;let r;void 0!==this.#Xa.defaultCharacterSet&&i.setDefaultCharacterSet(this.#Xa.defaultCharacterSet);try{i.parse(e),r=this.#Ja(i.getDicomElements()),void 0!==r&&r.checkElements(i.getDicomElements())}catch(e){return this.onerror({error:e,source:t}),void this.onloadend({source:t})}this.#ja[n]=i,this.#Ka[n]=r,r instanceof na?this.#rs(n,t):this.#os(n,t)}abort(){this.#Ia&&this.#Ia.abort()}onloadstart(e){}onloaditem(e){}onprogress(e){}onload(e){}onloadend(e){}onerror(e){}onabort(e){}}class ra{#$o=null;#ta=null;#na=0;#ia=0;#F;getDefaultCharacterSet(){return this.#F}setDefaultCharacterSet(e){this.#F=e}#oa(e){this.#$o=e,this.#na=0,this.#ia=0,this.#sa()}#ca(e){this.#ta=e}#sa(){this.#ta=null}#ua=e=>{this.#na++,this.#na===this.#$o.length&&this.onload({source:this.#$o})};#da=e=>{this.#ia++,this.#ia===this.#$o.length&&this.onloadend({source:this.#$o})};load(e){if(void 0===e||0===e.length)return;this.#oa(e),this.onloadstart({source:e});const t=new ao(this.onprogress);t.setNToLoad(e.length),t.setNumberOfDimensions(1);const n=[];for(let e=0;e<ua.length;++e)n.push(new ua[e]);let i=e[0],r=null,o=!1;for(let a=0;a<n.length;++a)if(r=n[a],r.canLoadMemory(i)){o=!0,r.setOptions({numberOfFiles:e.length,defaultCharacterSet:this.getDefaultCharacterSet()}),r.onprogress=t.getUndefinedMonoProgressHandler(0),r.onloaditem=this.onloaditem,r.onload=this.#ua,r.onloadend=this.#da,r.onerror=this.onerror,r.onabort=this.onabort,this.#ca(r);break}if(!o)throw new Error("No loader found for data: "+i.filename);for(let t=0;t<e.length;++t){if(i=e[t],!r.canLoadMemory(i))throw new Error("Input data of different type: "+i.filename);r.load(i.data,i.filename,t)}}abort(){this.#ta&&this.#ta.isLoading()&&this.#ta.abort()}onloadstart(e){}onprogress(e){}onloaditem(e){}onload(e){}onloadend(e){}onerror(e){}onabort(e){}}function oa(e){return parseInt(e,36).toString()}function aa(e){const t=e.data.length,n=new Uint8Array(t/4*3);let i=0;for(let r=0;r<t;r+=4)n[i]=e.data[r],n[i+1]=e.data[r+1],n[i+2]=e.data[r+2],i+=3;return n}function sa(e,t,n,i,r,o){const a=new $e([e,t,1]),s=new ot([1,1,1]),l=new q(0,0,n),c=new at([l],a,s),u=new $n(c,i,[o]);u.setPhotometricInterpretation("RGB");const d={BitsStored:8};return void 0!==r&&(d.numberOfFiles=r),u.setMeta(d),u}var la=o(654),ca=o.n(la);const ua=[class{#Xa={};#as=!1;setOptions(e){this.#Xa=e}isLoading(){return this.#as}#ss=new ia;load(e,t,n){this.#as||(this.#ss.setOptions(this.#Xa),this.#ss.onloadstart=this.onloadstart,this.#ss.onprogress=this.onprogress,this.#ss.onloaditem=this.onloaditem,this.#ss.onload=this.onload,this.#ss.onloadend=e=>{this.#as=!1,this.onloadend(e)},this.#ss.onerror=e=>{e.source=t,this.onerror(e)},this.#ss.onabort=this.onabort),this.#as=!0,this.#ss.convert(e,t,n)}abort(){this.#as=!1,this.#ss.abort()}canLoadFile(e){const t=B(e.name);return null===t||"dcm"===t}canLoadUrl(e,t){if(void 0!==t){if(void 0!==t.forceLoader&&"dicom"===t.forceLoader)return!0;if(void 0!==t.requestHeaders){const e=function(e){return"Accept"===e.name},n=t.requestHeaders.find(e);if(void 0!==n){const e="application/dicom";return Q(n.value,e)&&"+"!==n.value[e.length]}}}const n=no(e),i=B(n.pathname),r=null===i,o="dcm"===i,a=n.searchParams.get("contentType");return null!=a?"application/dicom"===a:r||o}canLoadMemory(e){const t=e["Content-Type"];if(void 0!==t&&t.startsWith("application/dicom"))return!0;if(void 0!==e.filename){const t=new File(["from memory"],e.filename);return this.canLoadFile(t)}return!1}loadFileAs(){return da.ArrayBuffer}loadUrlAs(){return 1}onloadstart(e){}onprogress(e){}onloaditem(e){}onload(e){}onloadend(e){}onerror(e){}onabort(e){}},class{#as=!1;setOptions(e){}isLoading(){return this.#as}load(e,t,n){this.#as=!0,this.onloadstart({source:t});try{this.onprogress({lengthComputable:!0,loaded:100,total:100,index:n,source:t});const i={data:e,source:t};this.onloaditem(i),this.onload(i)}catch(e){this.onerror({error:e,source:t})}finally{this.#as=!1,this.onloadend({source:t})}}abort(){this.#as=!1,this.onabort({}),this.onloadend({})}canLoadFile(e){return"json"===B(e.name)}canLoadUrl(e,t){if(void 0!==t){if(void 0!==t.forceLoader&&"json"===t.forceLoader)return!0;if(void 0!==t.requestHeaders){const e=function(e){return"Accept"===e.name},n=t.requestHeaders.find(e);if(void 0!==n)return Q(n.value,"application/json")||Q(n.value,"application/dicom+json")}}return"json"===B(no(e).pathname)}canLoadMemory(e){const t=e["Content-Type"];if(void 0!==t&&t.startsWith("application/json"))return!0;if(void 0!==e.filename){const t=new File(["from memory"],e.filename);return this.canLoadFile(t)}return!1}loadFileAs(){return da.Text}loadUrlAs(){return 0}onloadstart(e){}onprogress(e){}onloaditem(e){}onload(e){}onloadend(e){}onerror(e){}onabort(e){}},class{#as=!1;setOptions(e){}isLoading(){return this.#as}load(e,t,n){this.onloadstart({source:t}),this.#as=!0;const i=new ra;i.onprogress=e=>{e.loaded=50+e.loaded/2,e.index=n,this.onprogress(e)},i.onloaditem=this.onloaditem,i.onload=this.onload,i.onloadend=e=>{this.#as=!1,this.onloadend(e)},i.onerror=this.onerror,i.onabort=this.onabort,i.load(function(e){const t=new Uint8Array(e),n=[];if(0===t.length)return n;const i=j(new Uint8Array([13,10,13,10]));let r=X(t,i,0);if(void 0===r)throw new Error("Can't find the end of the first multipart header");const o=Y(t.slice(0,r)).split("\r\n");let a;for(let e=0;e<o.length;++e)if("-"===o[e][0]&&"-"===o[e][1]){a=o[e];break}if(void 0===a)throw new Error("Can't find the boundary between multi-parts");const s=j(G(a)),l=a.length;let c=X(t,s,0);for(;void 0!==r;){const e={},o=Y(t.slice(c+l,r)).split("\r\n");for(let t=0;t<o.length;++t){const n=o[t],i=n.indexOf(":");if(-1!==i){const t=n.substring(0,i).trim(),r=n.substring(i+1).trim();e[t]=r}}if(c=X(t,s,r),void 0===c)break;const a=r+4,u=c-2;e.data=a<u?t.slice(a,u).buffer:new Uint8Array,n.push(e),r=X(t,i,c+l)}return n}(e))}abort(){this.#as=!1,this.onabort({}),this.onloadend({})}canLoadFile(e){return!1}canLoadUrl(e,t){if(void 0!==t){if(void 0!==t.forceLoader&&"multipart"===t.forceLoader)return!0;if(void 0!==t.requestHeaders){const e=function(e){return"Accept"===e.name},n=t.requestHeaders.find(e);if(void 0!==n)return Q(n.value,"multipart/related")}}return!1}canLoadMemory(e){return!1}loadFileAs(){return da.ArrayBuffer}loadUrlAs(){return 1}onloadstart(e){}onprogress(e){}onloaditem(e){}onload(e){}onloadend(e){}onerror(e){}onabort(e){}},class{#ls=!1;setOptions(e){}isLoading(){return!0}#cs(e,t){let n=t;n&&"jpg"!==n||(n="jpeg");const i=new Blob([e],{type:"image/"+n});return window.URL.createObjectURL(i)}load(e,t,n){this.#ls=!1;const i=new Image;if(i.onload=()=>{try{if(!this.#ls){this.onprogress({lengthComputable:!0,loaded:100,total:100,index:n,source:t});const e=function(e,t,n){const i=e.width,r=e.height,o=document.createElement("canvas");o.width=i,o.height=r;const a=o.getContext("2d");a.drawImage(e,0,0);const s=a.getImageData(0,0,i,r),l={};let c;"string"==typeof t?(l.origin={value:t},c=oa(t)):(l.fileName={value:t.name},c=oa(t.name),l.fileType={value:t.type},l.fileLastModifiedDate={value:t.lastModified}),l.imageWidth={value:i},l.imageHeight={value:r};const u=n||0;l.imageUid={value:u},l.seriesUid={value:c};const d=sa(i,r,u,aa(s),1,u.toString()),h=d.getMeta();return h.SeriesInstanceUID=c,d.setMeta(h),{data:{image:d,meta:l},source:t}}(i,t,n);this.onloaditem(e),this.onload(e)}}catch(e){this.onerror({error:e,source:t})}finally{this.onloadend({source:t})}},"string"==typeof e)i.src=e;else if("string"==typeof t){const n=t.split(".").pop().toLowerCase();i.src=this.#cs(e,n)}}abort(){this.#ls=!0,this.onabort({}),this.onloadend({})}canLoadFile(e){return void 0!==e.type&&null!==e.type.match("image.*")}canLoadUrl(e,t){if(void 0!==t){if(void 0!==t.forceLoader&&"rawimage"===t.forceLoader)return!0;if(void 0!==t.requestHeaders){const e=function(e){return"Accept"===e.name},n=t.requestHeaders.find(e);if(void 0!==n)return Q(n.value,"image/")}}const n=no(e),i=B(n.pathname),r="jpeg"===i||"jpg"===i||"png"===i||"gif"===i,o=n.searchParams.get("contentType");return null!=o?"image/jpeg"===o||"image/png"===o||"image/gif"===o:r}canLoadMemory(e){if(void 0!==e.filename){const t=new File(["from memory"],e.filename);return this.canLoadFile(t)}return!1}loadFileAs(){return da.DataURL}loadUrlAs(){return 1}onloadstart(e){}onprogress(e){}onloaditem(e){}onload(e){}onloadend(e){}onerror(e){}onabort(e){}},class{setOptions(e){}isLoading(){return!0}#cs(e,t){const n=new Uint8Array(e);let i="";for(let e=0;e<n.byteLength;++e)i+=String.fromCharCode(n[e]);return"data:video/"+t+";base64,"+window.btoa(i)}load(e,t,n){const i=document.createElement("video");if("string"==typeof t){const n=t.split(".").pop().toLowerCase();i.src=this.#cs(e,n)}else i.src=e;i.onloadedmetadata=e=>{try{!function(e,t,n,i,r,o,a){const s=e.videoWidth,l=e.videoHeight,c=Math.ceil(30*e.duration),u={};let d;"string"==typeof o?(u.origin={value:o},d=oa(o)):(u.fileName={value:o.name},d=oa(o.name),u.fileType={value:o.type},u.fileLastModifiedDate={value:o.lastModified}),u.imageWidth={value:s},u.imageHeight={value:l},u.numberOfFrames={value:c},u.imageUid={value:0},u.seriesUid={value:d};const h=document.createElement("canvas");h.width=s,h.height=l;const g=h.getContext("2d");e.addEventListener("seeked",(function h(f){(function(){i({lengthComputable:!0,loaded:S,total:c,index:a,source:o}),g.drawImage(e,0,0);const n=aa(g.getImageData(0,0,s,l));if(0===S){m=sa(s,l,1,n,c,a.toString());const e=m.getMeta();e.SeriesInstanceUID=d,m.setMeta(e),t({data:{image:m,meta:u},source:o})}else m.appendFrameBuffer(n,S);++S})(),p+=1/30,p<=f.target.duration?this.currentTime=p:(n({source:o}),r({source:o}),e.removeEventListener("seeked",h))}),!1);let S=0,m=null,p=0;e.currentTime=p}(e.target,this.onloaditem,this.onload,this.onprogress,this.onloadend,t,n)}catch(e){this.onerror({error:e,source:t}),this.onloadend({source:t})}}}abort(){this.onabort({}),this.onloadend({})}canLoadFile(e){return void 0!==e.type&&null!==e.type.match("video.*")}canLoadUrl(e,t){if(void 0!==t){if(void 0!==t.forceLoader&&"rawvideo"===t.forceLoader)return!0;if(void 0!==t.requestHeaders){const e=function(e){return"Accept"===e.name},n=t.requestHeaders.find(e);if(void 0!==n)return Q(n.value,"video/")}}const n=B(no(e).pathname);return"mp4"===n||"ogg"===n||"webm"===n}canLoadMemory(e){if(void 0!==e.filename){const t=new File(["from memory"],e.filename);return this.canLoadFile(t)}return!1}loadFileAs(){return da.DataURL}loadUrlAs(){return 1}onloadstart(e){}onprogress(e){}onloaditem(e){}onload(e){}onloadend(e){}onerror(e){}onabort(e){}},class{#as=!1;setOptions(e){}isLoading(){return this.#as}#us="";#ds=[];#hs=null;#gs(e,t,n){this.#ds.push({filename:this.#us,data:e});const i=100*this.#ds.length/this.#hs.length;if(this.onprogress({lengthComputable:!0,loaded:i/2,total:100,index:n,item:{loaded:i,total:100,source:t}}),this.#ds.length<this.#hs.length){const e=this.#ds.length;this.#us=this.#hs[e].name,this.#hs[e].async("arrayBuffer").then((e=>{this.#gs(e,t,n)}))}else{const e=new ra;e.onprogress=e=>{e.loaded=50+e.loaded/2,e.index=n,this.onprogress(e)},e.onloaditem=this.onloaditem,e.onload=this.onload,e.onloadend=e=>{this.#as=!1,this.onloadend(e)},e.onerror=this.onerror,e.onabort=this.onabort,e.load(this.#ds)}}load(e,t,n){this.onloadstart({source:t}),this.#as=!0,ca().loadAsync(e).then((e=>{this.#ds=[],this.#hs=e.file(/.*\.dcm/);const i=this.#ds.length;this.#us=this.#hs[i].name,this.#hs[i].async("arrayBuffer").then((e=>{this.#gs(e,t,n)}))}))}abort(){this.#as=!1,this.onabort({}),this.onloadend({})}canLoadFile(e){return"zip"===B(e.name)}canLoadUrl(e,t){if(void 0!==t){if(void 0!==t.forceLoader&&"zip"===t.forceLoader)return!0;if(void 0!==t.requestHeaders){const e=function(e){return"Accept"===e.name},n=t.requestHeaders.find(e);if(void 0!==n)return Q(n.value,"application/zip")}}return"zip"===B(no(e).pathname)}canLoadMemory(e){const t=e["Content-Type"];if(void 0!==t&&t.startsWith("application/zip"))return!0;if(void 0!==e.filename){const t=new File(["from memory"],e.filename);return this.canLoadFile(t)}return!1}loadFileAs(){return da.ArrayBuffer}loadUrlAs(){return 1}onloadstart(e){}onprogress(e){}onloaditem(e){}onload(e){}onloadend(e){}onerror(e){}onabort(e){}}],da={Text:0,ArrayBuffer:1,DataURL:2};class ha{#$o=null;#Ss=[];#ta=null;#na=0;#ia=0;#F;getDefaultCharacterSet(){return this.#F}setDefaultCharacterSet(e){this.#F=e}#oa(e){this.#$o=e,this.#na=0,this.#ia=0,this.#ms(),this.#sa()}#ps(e){this.#Ss.push(e)}#ms(){this.#Ss=[]}#ca(e){this.#ta=e}#sa(){this.#ta=null}#ua=e=>{this.#na++,this.#na===this.#$o.length&&this.onload({source:this.#$o})};#da=e=>{this.#ia++,this.#ia===this.#$o.length&&this.onloadend({source:this.#$o})};#ha(e,t){return n=>{n.source=t,e(n)}}#ma(e,t,n){return i=>{e.load(i.target.result,t,n)}}load(e){if(void 0===e||0===e.length)return;this.#oa(e),this.onloadstart({source:e});const t=new ao(this.onprogress);t.setNToLoad(e.length);const n=[];for(let e=0;e<ua.length;++e)n.push(new ua[e]);let i=e[0],r=null,o=!1;for(let a=0;a<n.length;++a)if(r=n[a],r.canLoadFile(i)){o=!0,r.setOptions({numberOfFiles:e.length,defaultCharacterSet:this.getDefaultCharacterSet()}),r.onprogress=t.getUndefinedMonoProgressHandler(1),r.onloaditem=this.onloaditem,r.onload=this.#ua,r.onloadend=this.#da,r.onerror=this.onerror,r.onabort=this.onabort,this.#ca(r);break}if(!o)throw new Error("No loader found for file: "+i.name);for(let n=0;n<e.length;++n){if(i=e[n],!r.canLoadFile(i))throw new Error("Input file of different type: "+i);const o=new FileReader;this.#ps(o),o.onprogress=this.#ha(t.getMonoProgressHandler(n,0),i),o.onload=this.#ma(r,i,n);const a=this.#ha(this.onerror,i);o.onerror=e=>{this.#da(),a(e)};const s=this.#ha(this.onabort,i);o.onabort=e=>{this.#da(),s(e)},r.loadFileAs()===da.Text?o.readAsText(i):r.loadFileAs()===da.DataURL?o.readAsDataURL(i):r.loadFileAs()===da.ArrayBuffer&&o.readAsArrayBuffer(i)}}abort(){for(let e=0;e<this.#Ss.length;++e)1===this.#Ss[e].readyState&&this.#Ss[e].abort();this.#ta&&this.#ta.isLoading()&&this.#ta.abort()}onloadstart(e){}onprogress(e){}onloaditem(e){}onload(e){}onloadend(e){}onerror(e){}onabort(e){}}class ga{#F;#fs={};constructor(e){this.#F=e}loadFiles(e,t){"json"===e[0].name.split(".").pop().toLowerCase()?this.#Ds(e[0],t):this.#ys(e,t)}loadURLs(e,t,n){"json"===e[0].split(".").pop().toLowerCase()?this.#vs(e[0],t,n):this.#Cs(e,t,n)}loadImageObject(e,t){const n=new ra;this.#Is(e,n,"image",t)}getLoadingDataIds(){return Object.keys(this.#fs)}abort(e){void 0!==this.#fs[e]&&(this.#fs[e].loader.abort(),delete this.#fs[e])}#ys(e,t){const n=new ha;n.setDefaultCharacterSet(this.#F),this.#Is(e,n,"image",t)}#Cs(e,t,n){const i=new so;i.setDefaultCharacterSet(this.#F),this.#Is(e,i,"image",t,n)}#Ds(e,t){const n=new ha;this.#Is([e],n,"state",t)}#vs(e,t,n){const i=new so;this.#Is([e],i,"state",t,n)}#Is(e,t,n,i,r){const o={loadtype:n,dataid:i};t.onloadstart=e=>{this.#fs[i]={loader:t,isFirstItem:!0},this.#ha(this.onloadstart,o)(e)},t.onprogress=this.#ha(this.onprogress,o),t.onloaditem=e=>{const t={loadtype:n,dataid:i};void 0!==this.#fs[i]&&(t.isfirstitem=this.#fs[i].isFirstItem),this.#ha(this.onloaditem,t)(e),void 0!==this.#fs[i]&&this.#fs[i].isFirstItem&&(this.#fs[i].isFirstItem=!1)},t.onload=this.#ha(this.onload,o),t.onloadend=e=>{delete this.#fs[i],this.#ha(this.onloadend,o)(e)},t.onerror=this.#ha(this.onerror,o),t.onabort=this.#ha(this.onabort,o),void 0!==t.ontimeout&&(t.ontimeout=this.#ha(this.ontimeout,o));try{t.load(e,r)}catch(e){return this.onerror({error:e,dataid:i}),void this.onloadend({dataid:i})}}#ha(e,t){return function(n){const i=Object.keys(t);for(let e=0;e<i.length;++e){const r=i[e];n[r]=t[r]}e(n)}}onloadstart(e){}onprogress(e){}onload(e){}onloaditem(e){}onloadend(e){}onerror(e){}ontimeout(e){}onabort(e){}}function Sa(e){return function(t){return Number(t).toPrecision(e)}}function ma(e){let t="";for(let n=0;n<e;++n)0!==n&&(t+=", "),t+="{v"+n+"}";return t}function pa(e,t){let n=e;for(let e=0;e<t.length;++e)n=n.replace("{v"+e+"}",t[e]);return n}class fa{#Qt;#wt;#Ts;#Ps=[];#Ls;#ws=[];#Os;#Fe=new Xe;constructor(e,t,n){this.#Qt=e,this.#wt=t,this.#Ts=n;const i=Object.keys(this.#Ts);for(let e=0;e<i.length;++e){const t=this.#Ts[i[e]];for(let e=0;e<t.length;++e){const n=t[e].event;void 0!==n&&(this.#Ps.includes(n)||this.#Ps.push(n))}}this.addAppListeners()}reset(){this.#ws=[],this.#Os=void 0}addItemMeta(e){let t;if(void 0!==e["00020010"])t=void 0!==e["00080018"]?e["00080018"].value[0]:e.length,this.#ws[t]=function(e,t){const n=[];let i;const r=e["00080060"];if(void 0===r)return n;i=r.value[0];const o=t[i]||t["*"];if(!o)return n;for(let t=0;t<o.length;++t){const i=JSON.parse(JSON.stringify(o[t])),r=i.tags;if(void 0!==r&&0!==r.length){const t=[];for(let n=0;n<r.length;++n)void 0!==e[r[n]]?t.push(e[r[n]].value):t.push("");void 0!==i.format&&null!==i.format||(i.format=ma(t.length)),i.value=pa(i.format,t).trim()}n.push(i)}const a=e["00200020"];if(void 0!==a&&2===a.value.length){const e=a.value[0],t=a.value[1];n.push({pos:"cr",value:e,format:"{v0}"}),n.push({pos:"cl",value:Fe(e),format:"{v0}"}),n.push({pos:"bc",value:t,format:"{v0}"}),n.push({pos:"tc",value:Fe(t),format:"{v0}"})}return n}(e,this.#Ts);else{const n=Object.keys(e);for(let i=0;i<n.length;++i){const r=e[n[i]];if("imageUid"===n[i]){t=r.value;break}}this.#ws[t]=function(e,t){const n=[],i=t.DOM;if(!i)return n;const r=Object.keys(e);for(let t=0;t<i.length;++t){const o=JSON.parse(JSON.stringify(i[t])),a=o.tags;if(void 0!==a&&0!==a.length){const t=[];for(let n=0;n<a.length;++n)for(let i=0;i<r.length;++i)a[n]===r[i]&&t.push(e[r[i]].value);void 0!==o.format&&null!==o.format||(o.format=ma(t.length)),o.value=pa(o.format,t).trim()}n.push(o)}return n}(e,this.#Ts)}this.#Os=t}#bs=e=>{e.dataid===this.#wt&&void 0!==e.data&&void 0!==e.data.imageUid&&this.#Os!==e.data.imageUid&&(this.#Os=e.data.imageUid,this.#As(e))};#As=e=>{if(e.dataid!==this.#wt)return;const t=this.#ws[this.#Os];if(void 0!==t){for(let n=0;n<t.length;++n){let i;if(void 0!==t[n].tags)"positionchange"===e.type&&(i=t[n].value);else if(void 0!==t[n].event&&t[n].event===e.type){const r=t[n].format;let o=e.value;if(void 0!==t[n].precision){let e=null;e="round"===t[n].precision?Math.round:Sa(t[n].precision),o=o.map(e)}i=pa(r,o)}void 0!==i&&(t[n].value=i)}this.#Qe({type:"valuechange",data:t})}else console.warn("No slice overlay data for: "+this.#Os)};isListening(){return this.#Ls}addAppListeners(){this.#Qt.addEventListener("positionchange",this.#bs);for(let e=0;e<this.#Ps.length;++e)this.#Qt.addEventListener(this.#Ps[e],this.#As);this.#Ls=!0}removeAppListeners(){this.#Qt.removeEventListener("positionchange",this.#bs);for(let e=0;e<this.#Ps.length;++e)this.#Qt.removeEventListener(this.#Ps[e],this.#As);this.#Ls=!1}addEventListener(e,t){this.#Fe.add(e,t)}removeEventListener(e,t){this.#Fe.remove(e,t)}#Qe(e){this.#Fe.fireEvent(e)}}class Da{divId;orientation;colourMap;opacity;wlPresetName;windowCenter;windowWidth;constructor(e){this.divId=e}}class ya{options;constructor(e){this.options=e}}class va{dataViewConfigs;tools;binders;viewOnFirstLoadItem;defaultCharacterSet;overlayConfig;rootDocument;constructor(e){this.dataViewConfigs=e}}class Ca{#Xa=null;#xs=null;#Rs=null;#Es=null;#Fs=null;#qs=null;#Qi=new bi;#Us={};#Fe=new Xe;getData(e){return this.#xs.get(e)}getImage(e){let t;return void 0!==this.getData(e)&&(t=this.getData(e).image),t}setImage(e,t){this.#xs.setImage(e,t)}addData(e){const t=this.#xs.getNextDataId();return this.#xs.add(t,e),t}getMetaData(e){let t;return void 0!==this.#xs.get(e)&&(t=this.#xs.get(e).meta),t}getDataIds(){return this.#xs.getDataIds()}getDataIdsFromSopUids(e){return this.#xs.getDataIdsFromSopUids(e)}canScroll(){return this.#Fs.getActiveLayerGroup().getActiveViewLayer().getViewController().canScroll()}canWindowLevel(){return this.#Fs.getActiveLayerGroup().getActiveViewLayer().getViewController().canWindowLevel()}getAddedScale(){return this.#Fs.getActiveLayerGroup().getAddedScale()}getBaseScale(){return this.#Fs.getActiveLayerGroup().getBaseScale()}getOffset(){return this.#Fs.getActiveLayerGroup().getOffset()}getToolboxController(){return this.#Rs}getActiveLayerGroup(){return this.#Fs.getActiveLayerGroup()}setActiveLayerGroup(e){this.#Fs.setActiveLayerGroup(e)}getViewLayersByDataId(e){return this.#Fs.getViewLayersByDataId(e)}getViewLayers(e){return this.#Fs.getViewLayers(e)}getDrawLayersByDataId(e){return this.#Fs.getDrawLayersByDataId(e)}getDrawLayers(e){return this.#Fs.getDrawLayers(e)}getLayerGroupByDivId(e){return this.#Fs.getLayerGroupByDivId(e)}getNumberOfLayerGroups(){return this.#Fs.getNumberOfLayerGroups()}getStyle(){return this.#Qi}addToUndoStack=e=>{null!==this.#qs&&this.#qs.add(e)};removeFromUndoStack=e=>{let t=!1;return null!==this.#qs&&(t=this.#qs.remove(e)),t};init(e){if(this.#Xa=e,void 0===this.#Xa.viewOnFirstLoadItem&&(this.#Xa.viewOnFirstLoadItem=!0),void 0===this.#Xa.dataViewConfigs&&(this.#Xa.dataViewConfigs={}),void 0===this.#Xa.rootDocument&&(this.#Xa.rootDocument=document),this.#qs=new ro,this.#qs.addEventListener("undoadd",this.#Qe),this.#qs.addEventListener("undo",this.#Qe),this.#qs.addEventListener("redo",this.#Qe),void 0!==this.#Xa.tools){const e={},t=Object.keys(this.#Xa.tools);for(let n=0;n<t.length;++n){const i=t[n];let r=Nr[i];if(void 0===r&&(r=Qr[i]),void 0!==r){if(e[i]=new r(this),void 0!==e[i].addEventListener){const t=e[i].getEventNames();for(let n=0;n<t.length;++n)e[i].addEventListener(t[n],this.#Qe)}const t=this.#Xa.tools[i];if(void 0!==t.options&&0!==t.options.length){let n,r="raw";if(void 0!==e[i].getOptionsType&&(r=e[i].getOptionsType()),"instance"===r||"factory"===r){n={};for(let e=0;e<t.options.length;++e){const o=t.options[e];let a=o;"factory"===r&&(a+="Factory");const s=i.charAt(0).toLowerCase()+i.slice(1);let l,u=Vr[s];void 0!==u&&(l=u[a]),void 0===l&&(u=Br[s],void 0!==u&&(l=u[a])),void 0!==l?n[o]=l:c.warn("Could not find option class for: "+o)}}else n=t.options;e[i].setOptions(n)}}else c.warn("Could not initialise unknown tool: "+i)}this.#Rs=new oo(e)}this.#Es=new ga(this.#Xa.defaultCharacterSet),this.#Es.onloadstart=this.#Ms,this.#Es.onprogress=this.#Qs,this.#Es.onloaditem=this.#Vs,this.#Es.onload=this.#Ns,this.#Es.onloadend=this.#Bs,this.#Es.onerror=this.#Gs,this.#Es.ontimeout=this.#ks,this.#Es.onabort=this.#Hs,this.#xs=new zi,this.#xs.addEventListener("dataadd",this.#Qe),this.#xs.addEventListener("dataremove",this.#Qe),this.#xs.addEventListener("dataimageset",this.#Qe),this.#xs.addEventListener("dataupdate",this.#Qe),this.#xs.addEventListener("imagecontentchange",this.#Qe),this.#xs.addEventListener("imagegeometrychange",this.#Qe),this.#xs.addEventListener("annotationadd",this.#Qe),this.#xs.addEventListener("annotationupdate",this.#Qe),this.#xs.addEventListener("annotationremove",this.#Qe),this.#xs.addEventListener("annotationgroupeditablechange",this.#Qe),this.#Fs=new _r,void 0!==this.#Xa.binders&&this.#Fs.setBinders(this.#Xa.binders)}reset(){this.#Fs.empty(),this.#Us={},this.#qs&&(this.#qs=new ro,this.#qs.addEventListener("undoadd",this.#Qe),this.#qs.addEventListener("undo",this.#Qe),this.#qs.addEventListener("redo",this.#Qe))}resetLayout(){this.#Fs.reset(),this.#Fs.draw()}addEventListener(e,t){this.#Fe.add(e,t)}removeEventListener(e,t){this.#Fe.remove(e,t)}loadFiles=e=>{if(0===e.length)return c.warn("Ignoring empty input file list."),"-1";const t=this.#xs.getNextDataId();return this.#Es.loadFiles(e,t),t};loadURLs=(e,t)=>{if(0===e.length)return c.warn("Ignoring empty input url list."),"-1";const n=this.#xs.getNextDataId();return this.#Es.loadURLs(e,n,t),n};loadFromUri=(e,t)=>{const n=function(e){const t=io(e);return 0===Object.keys(t).length?null:t.query}(e),i=()=>{this.removeEventListener("loadend",i),this.loadURLs([n.state])};n&&void 0!==n.input&&(void 0!==n.state&&this.addEventListener("loadend",i),function(e,t,n){e.type&&"manifest"===e.type?function(e,t){let n="";"/"===e.input[0]&&(n=window.location.protocol+"//"+window.location.host),n+=e.input;const i=new XMLHttpRequest;i.open("GET",decodeURIComponent(n),!0),i.responseType="document",i.onload=function(n){t(function(e,t){const n=[],i=e.getElementsByTagName("wado_query")[0].getAttribute("wadoURL")+"?requestType=WADO&contentType=application/dicom&",r=e.getElementsByTagName("Patient");r.length>1&&c.warn("More than one patient, loading first one.");const o=r[0].getElementsByTagName("Study");o.length>1&&c.warn("More than one study, loading first one.");const a=o[0].getAttribute("StudyInstanceUID"),s=o[0].getElementsByTagName("Series");s.length>1&&c.warn("More than one series, loading first one.");const l=s[0].getAttribute("SeriesInstanceUID"),u=s[0].getElementsByTagName("Instance");let d=u.length;t<d&&(d=t);for(let e=0;e<d;++e){const t=i+"&studyUID="+a+"&seriesUID="+l+"&objectUID="+u[e].getAttribute("SOPInstanceUID");n.push(t)}return n}(n.target.responseXML,e.nslices))},i.onerror=function(e){c.warn("RequestError while receiving manifest: "+e.target.status)},i.send(null)}(e,t):t(function(e,t){const n=[];let i="key";t&&(i=t);const r=decodeURIComponent(e),o=io(r);if(0===Object.keys(o).length)n.push(r);else{const e=Object.keys(o.query);let t=null;for(let n=0;n<e.length;++n)if(o.query[e[n]]instanceof Array){t=e[n];break}if(t){const r=o.query[t];let a=o.base;""!==a&&"file"!==t&&(a+="?");let s,l=!1;for(let n=0;n<e.length;++n)e[n]!==t&&(l&&(a+="&"),a+=e[n]+"="+o.query[e[n]],l=!0);for(let e=0;e<r.length;++e)s=a,l&&(s+="&"),"key"===i&&(s+=t+"="),s+=r[e],n.push(s)}else n.push(r)}return n}(e.input,e.dwvReplaceMode),n)}(n,this.loadURLs,t))};loadImageObject=e=>{const t=this.#xs.getNextDataId();return this.#Es.loadImageObject(e,t),t};abortAllLoads(){const e=this.#Es.getLoadingDataIds();for(const t of e)this.abortLoad(t)}abortLoad(e){this.#Es.abort(e),this.#xs.remove(e),this.#Fs.removeLayersByDataId(e)}fitToContainer(){this.#Fs.fitToContainer()}initWLDisplay(){this.#Fs.getActiveLayerGroup().getActiveViewLayer().getViewController().initialise()}setImageSmoothing(e){this.#Fs.setImageSmoothing(e),this.#Fs.draw()}getViewConfigs(e,t){if(void 0===t&&(t=!1),null===this.#Xa.dataViewConfigs||void 0===this.#Xa.dataViewConfigs)throw new Error("No available data view configuration");let n=[];return void 0!==this.#Xa.dataViewConfigs[e]?n=this.#Xa.dataViewConfigs[e]:t||void 0===this.#Xa.dataViewConfigs["*"]||(n=this.#Xa.dataViewConfigs["*"]),n}getViewConfig(e,t,n){return this.getViewConfigs(e,n).find((function(e){return e.divId===t}))}getDataViewConfigs(){return this.#Xa.dataViewConfigs}setDataViewConfigs(e){this.#Fs.empty(),this.#Xa.dataViewConfigs=e,this.#zs(e)}addDataViewConfig(e,t){const n=this.#Xa.dataViewConfigs;if(void 0===n[e]&&(n[e]=[]),-1!==n[e].findIndex((function(e){return e.divId===t.divId})))throw new Error("Duplicate view config for data "+e+" and div "+t.divId);this.#Xa.dataViewConfigs[e].push(t),void 0===this.#Fs.getLayerGroupByDivId(t.divId)&&this.#Ws(t),void 0!==this.#xs.get(e)&&this.render(e,[t])}removeDataViewConfig(e,t){const n=this.#Xa.dataViewConfigs;if(void 0===n[e])return;const i=n[e].findIndex((function(e){return e.divId===t}));if(-1===i)return;n[e].splice(i,1),0===n[e].length&&delete n[e];const r=this.#Fs.getLayerGroupByDivId(t);if(void 0!==r){const t=r.getViewLayersByDataId(e);1===t.length&&r.removeLayer(t[0]);const n=r.getDrawLayersByDataId(e);1===n.length&&r.removeLayer(n[0]),0===r.getNumberOfLayers()&&this.#Fs.removeLayerGroup(r)}}updateDataViewConfig(e,t,n){const i=this.#Xa.dataViewConfigs;if(void 0===i[e])throw new Error("No config for dataId: "+e);const r=i[e].findIndex((function(e){return e.divId===t}));if(-1===r)throw new Error("No config for dataId: "+e+" and divId: "+t);const o=i[e][r];for(const e in n)o[e]=n[e];const a=this.#Fs.getLayerGroupByDivId(o.divId);if(void 0!==a){const t=a.getViewLayersByDataId(e);1===t.length&&a.removeLayer(t[0]);const n=a.getDrawLayersByDataId(e);1===n.length&&a.removeLayer(n[0])}void 0!==this.#xs.get(e)&&this.render(e,[o])}#zs(e){const t=Object.keys(e),n=[];for(let i=0;i<t.length;++i){const r=e[t[i]];for(let e=0;e<r.length;++e){const t=r[e];n.includes(t.divId)||(this.#Ws(t),n.push(t.divId))}}}#Ws(e){const t=this.#Xa.rootDocument.getElementById(e.divId),n=this.#Fs.addLayerGroup(t);this.#Ys(n)}setLayerGroupsBinders(e){const t=[];for(let n=0;n<e.length;++n)void 0!==Zr[e[n]]&&t.push(new Zr[e[n]]);this.#Fs.setBinders(t)}render(e,t){if(null==e)throw new Error("Cannot render without data id");const n=void 0!==this.getData(e).image,i=void 0!==this.getData(e).annotationGroup;if(0===this.#Fs.getNumberOfLayerGroups()&&this.#zs(this.#Xa.dataViewConfigs),void 0===t&&(t=this.getViewConfigs(e)),0!==t.length)for(let r=0;r<t.length;++r){const o=t[r],a=this.#Fs.getLayerGroupByDivId(o.divId);if(!a)throw new Error("No layer group for "+o.divId);void 0!==this.#xs.get(e)&&(n&&0===a.getViewLayersByDataId(e).length?this.#Xs(e,o):i&&0===a.getDrawLayersByDataId(e).length&&this.addDrawLayer(e,o)),a.draw()}else c.info("Not rendering data: "+e+" (no data view config)")}zoom(e,t,n){const i=this.#Fs.getActiveLayerGroup(),r=i.getBaseViewLayer().getViewController().getCurrentScrollPosition(),o=new q(t,n,r);i.addScale(e,o),i.draw()}translate(e,t){const n=this.#Fs.getActiveLayerGroup();n.addTranslation({x:e,y:t,z:0}),n.draw()}setOpacity(e){const t=this.#Fs.getActiveLayerGroup().getActiveViewLayer();t.setOpacity(e),t.draw()}setDrawings(e,t,n){const i=this.#Fs.getActiveLayerGroup().getBaseViewLayer(),r=i.getDataId(),o=i.getViewController(),a=function(e,t){const n=[],i=Pi().Node.create(e).getChildren(Ei);for(let e=0,r=i.length;e<r;++e){const r=i[e].getChildren();for(let e=0,i=r.length;e<i;++e){const e=new Gr,i=r[0];e.trackingId=i.id(),e.trackingUid=i.id();const o=i.getChildren(Ri)[0];if(e.colour=o.stroke(),"line-group"===i.name()){const t=o.points();e.mathShape=new F(t[0],t[1]),e.referencePoints=[new F(t[2],t[3])]}else if("ruler-group"===i.name()){const t=o.points();e.mathShape=new fi(new F(t[0],t[1]),new F(t[2],t[3]))}else if("rectangle-group"===i.name())e.mathShape=new Rr(new F(o.x(),o.y()),new F(o.x()+o.width(),o.y()+o.height()));else if("roi-group"===i.name()){const t=o.points(),n=[];for(let e=0;e<t.length;e+=2)n.push(new F(t[e],t[e+1]));e.mathShape=new vr(n)}else if("freeHand-group"===i.name()){c.warn("Converting freehand into ROI shape");const t=o.points(),n=[];for(let e=0;e<t.length;e+=2)n.push(new F(t[e],t[e+1]));e.mathShape=new vr(n)}else if("protractor-group"===i.name()){const t=o.points();e.mathShape=new xr([new F(t[0],t[1]),new F(t[2],t[3]),new F(t[4],t[5])])}else if("ellipse-group"===i.name()){const t=o.absolutePosition();e.mathShape=new Gi(new F(t.x,t.y),o.radiusX(),o.radiusY())}else if("circle-group"===i.name()){const t=o.absolutePosition();e.mathShape=new Ar(new F(t.x,t.y),o.radius())}if(t){const n=t[i.id()];e.textExpr=n.meta.textExpr,e.quantification=n.meta.quantification}n.push(e)}}return n}(e,t),s=this.createAnnotationData(r);for(const e of a)e.setViewController(o),s.annotationGroup.add(e);this.#xs.add(n,s),this.render(n)}applyJsonState(e,t){const n=new Kr(t);n.apply(this,n.fromJSON(e))}onResize=()=>{this.fitToContainer()};onKeydown=e=>{this.#Qe(e)};defaultOnKeydown=e=>{if(e.ctrlKey)if(e.shiftKey){const t=this.#Fs.getActiveLayerGroup(),n=t.getPositionHelper();"ArrowLeft"===e.key?t.moreThanOne(3)&&n.decrementPosition(3):"ArrowUp"===e.key?t.canScroll()&&n.incrementPositionAlongScroll():"ArrowRight"===e.key?t.moreThanOne(3)&&n.incrementPosition(3):"ArrowDown"===e.key&&t.canScroll()&&n.decrementPositionAlongScroll()}else if("y"===e.key)this.#qs.redo();else if("z"===e.key)this.#qs.undo();else if(" "===e.key)for(let e=0;e<this.#Fs.getNumberOfLayerGroups();++e)this.#Fs.getLayerGroup(e).setShowCrosshair(!this.#Fs.getLayerGroup(e).getShowCrosshair())};resetDisplay(){this.resetLayout(),this.initWLDisplay()}resetZoom(){this.resetLayout()}setColourMap(e){this.#Fs.getActiveLayerGroup().getActiveViewLayer().getViewController().setColourMap(e)}setWindowLevelPreset(e){this.#Fs.getActiveLayerGroup().getActiveViewLayer().getViewController().setWindowLevelPreset(e)}setTool(e){for(let e=0;e<this.#Fs.getNumberOfLayerGroups();++e){const t=this.#Fs.getLayerGroup(e),n=t.getActiveLayer();void 0!==n&&this.#Rs.bindLayerGroup(t,n)}this.#Rs.setSelectedTool(e)}setToolFeatures(e){this.#Rs.setToolFeatures(e)}undo(){this.#qs.undo()}redo(){this.#qs.redo()}getStackSize(){return this.#qs.getStackSize()}getCurrentStackIndex(){return this.#qs.getCurrentStackIndex()}getOverlayData(e){let t;return void 0!==this.#Us&&(t=this.#Us[e]),t}toggleOverlayListeners(e){const t=this.getOverlayData(e);void 0!==t&&(t.isListening()?t.removeAppListeners():t.addAppListeners())}createAnnotationData(e){const t=this.getData(e).image.getMeta(),n=new Hi({});n.annotationGroup=new kr,n.annotationGroup.setMetaValue("Modality","SR");const i=["PatientName","PatientID","PatientBirthDate","PatientSex","StudyDate","StudyTime","StudyInstanceUID","StudyID","StudyDescription"];for(const e of i)n.annotationGroup.setMetaValue(e,t[e]);return n.annotationGroup.setMetaValue("CurrentRequestedProcedureEvidenceSequence",{value:[{ReferencedSeriesSequence:{value:[{SeriesInstanceUID:t.SeriesInstanceUID}]},StudyInstanceUID:t.StudyInstanceUID}]}),n}addAndRenderAnnotationData(e,t,n){const i=this.addData(e),r=this.getViewConfigs(n).find((e=>e.divId===t));if(void 0===r)throw new Error("No reference data view config for draw");const o=new Da(t);o.orientation=r.orientation,this.addDataViewConfig(i,o),this.render(i)}#Qe=e=>{this.#Fe.fireEvent(e)};#Ms=e=>{void 0!==this.#Xa.overlayConfig&&(this.#Us[e.dataid]=new fa(this,e.dataid,this.#Xa.overlayConfig)),e.type="loadstart",this.#Qe(e)};#Qs=e=>{e.type="loadprogress",this.#Qe(e)};#Vs=e=>{let t;void 0===e.data&&c.error("Missing loaditem event data."),void 0===e.loadtype&&c.error("Missing loaditem event load type."),"image"===e.loadtype?t=e.data.meta:"state"===e.loadtype&&(t="state"),this.#Qe({type:"loaditem",data:t,source:e.source,loadtype:e.loadtype,dataid:e.dataid,isfirstitem:e.isfirstitem,warn:e.warn});const n=e.isfirstitem;"image"===e.loadtype?n?this.#xs.add(e.dataid,e.data):this.#xs.update(e.dataid,e.data):"state"===e.loadtype&&this.applyJsonState(e.data,e.dataid),void 0!==this.#Us&&void 0!==this.#Us[e.dataid]&&this.#Us[e.dataid].addItemMeta(t),"image"===e.loadtype&&0!==this.getViewConfigs(e.dataid).length&&n&&this.#Xa.viewOnFirstLoadItem&&this.render(e.dataid)};#Ns=e=>{e.type="load",this.#Qe(e)};#Bs=e=>{e.type="loadend",this.#Qe(e)};#Gs=e=>{void 0===e.type&&(e.type="error"),this.#Qe(e)};#ks=e=>{void 0===e.type&&(e.type="timeout"),this.#Qe(e)};#Hs=e=>{void 0===e.type&&(e.type="abort"),this.#Qe(e)};#Ys(e){e.addEventListener("zoomchange",this.#Qe),e.addEventListener("offsetchange",this.#Qe),e.addEventListener("layerremove",this.#Qe),e.addEventListener("renderstart",this.#Qe),e.addEventListener("renderend",this.#Qe);for(let t=0;t<ni.length;++t)e.addEventListener(ni[t],this.#Qe);e.addEventListener("wlchange",(e=>{const t=Wr(e.srclayerid).groupDivId,n=this.getViewConfig(e.dataid,t,!0);void 0!==n&&(n.windowCenter=void 0,n.windowWidth=void 0,n.wlPresetName=void 0,3===e.value.length&&(n.windowCenter=e.value[0],n.windowWidth=e.value[1],n.wlPresetName=e.value[2]))})),e.addEventListener("opacitychange",(e=>{const t=Wr(e.srclayerid).groupDivId,n=this.getViewConfig(e.dataid,t,!0);void 0!==n&&(n.opacity=e.value[0])})),e.addEventListener("colourmapchange",(e=>{const t=Wr(e.srclayerid).groupDivId,n=this.getViewConfig(e.dataid,t,!0);void 0!==n&&(n.colourMap=e.value[0])}))}#Xs(e,t){const n=this.#xs.get(e);if(!n)throw new Error("Cannot initialise layer with missing data, id: "+e);const i=this.#Fs.getLayerGroupByDivId(t.divId);if(!i)throw new Error("Cannot initialise layer with missing group, id: "+t.divId);const r=n.image.getGeometry();this.#Fs.unbindLayerGroups();const o=(new ti).create(n.meta,n.image),a=pt(r.getOrientation(),dt(t.orientation));o.setOrientation(a),"SEG"===n.image.getMeta().Modality&&o.setAlphaFunction((function(e){return 0===e?0:255}));const s=0===i.getNumberOfViewLayers();let l=1;void 0!==t.opacity?l=t.opacity:s||(l=.5);const c=i.addViewLayer();c.setView(o,e);const d=r.getSize(a).get2D(),h=r.getSpacing(a).get2D();c.initialise(d,h,l);const g=c.getViewController();if(void 0!==t.wlPresetName)g.setWindowLevelPreset(t.wlPresetName);else if(void 0!==t.windowCenter&&void 0!==t.windowWidth){const e=new u(t.windowCenter,t.windowWidth);g.setWindowLevel(e)}void 0!==t.colourMap?g.setColourMap(t.colourMap):s||("PT"===n.image.getMeta().Modality?g.setColourMap("hot"):g.setColourMap("rainbow")),this.#xs.addEventListener("dataimageset",c.onimageset);const S=[g.getCurrentIndex().getValues(),g.getCurrentPosition().getValues()];i.updateLayersToPositionChange({value:S,srclayerid:c.getId()}),this.#Fs.fitToContainer(),c.setOffset(i.getOffset());const m=this.#js(r.getOrientation(),t.orientation);if(this.#Zs(m,c),s)c.setScale(i.getScale());else{const e=i.getBaseViewLayer();c.initScale(i.getScale(),e.getAbsoluteZoomOffset())}this.#Fs.bindLayerGroups(),this.#Rs&&this.#Rs.bindLayerGroup(i,c),this.#Qe({type:"viewlayeradd",layerid:c.getId(),layergroupid:i.getDivId(),dataid:e}),s&&this.#Rs&&this.#Rs.init()}#_s(e,t){let n;const i=e.getMetaValue("CurrentRequestedProcedureEvidenceSequence");if(void 0!==i){const e=i.value[0],r=e?.ReferencedSeriesSequence,o=r?.value[0],a=o?.SeriesInstanceUID,s={SeriesInstanceUID:a},l=t.searchViewLayers(s);0!==l.length&&(n=l[0])}const r=e.getMetaValue("ReferencedSeriesSequence");if(void 0!==r){const e=r.value[0],i=e?.SeriesInstanceUID,o={SeriesInstanceUID:i},a=t.searchViewLayers(o);0!==a.length&&(n=a[0])}if(void 0===n)for(const i of e.getList()){const e={SOPInstanceUID:i.referencedSopInstanceUID,SOPClassUID:i.referencedSopClassUID},r=t.searchViewLayers(e);if(0!==r.length){n=r[0];break}}return n}addDrawLayer(e,t){const n=this.#Fs.getLayerGroupByDivId(t.divId);if(!n)throw new Error("Cannot initialise layer with missing group, id: "+t.divId);const i=this.#xs.get(e);if(!i)throw new Error("Cannot initialise layer with missing data, id: "+e);const r=i.annotationGroup,o=this.#_s(r,n);if(void 0===o)return void console.warn("No loaded data that matches the measurements reference series UID");const a=o.getDataId();this.#Fs.unbindLayerGroups();const s=o.getViewController();i.annotationGroup.setViewController(s);const l=this.#xs.get(a);if(!l)throw new Error("Cannot initialise layer without reference data, id: "+a);const c=l.image.getGeometry(),u=pt(c.getOrientation(),dt(t.orientation)),d=c.getSize(u).get2D(),h=c.getSpacing(u).get2D(),g=n.addDrawLayer();g.initialise(d,h,o.getId());const S=new oi(c,u);g.setPlaneHelper(S);const m=[s.getCurrentIndex().getValues(),s.getCurrentPosition().getValues()];n.updateLayersToPositionChange({value:m,srclayerid:g.getId()}),this.#Fs.fitToContainer(),g.setOffset(n.getOffset());const p=this.#js(c.getOrientation(),t.orientation);this.#Zs(p,g),g.initScale(n.getScale(),o.getAbsoluteZoomOffset()),g.setAnnotationGroup(i.annotationGroup,e,this.addToUndoStack),g.setCurrentPosition(s.getCurrentPosition(),s.getCurrentIndex()),this.#Fs.bindLayerGroups(),this.#Rs&&this.#Rs.bindLayerGroup(n,g),this.#Qe({type:"drawlayeradd",layerid:g.getId(),layergroupid:n.getDivId(),dataid:e})}#js(e,t){const n=ht(e.asOneAndZeros());if(void 0===n)throw new Error("Unsupported undefined orientation code");const i=void 0===t,r=!i&&t===ut.Axial,o=!i&&t===ut.Coronal,a=!i&&t===ut.Sagittal,s={x:!1,y:!1},l={x:!1,y:!1,z:!1};return"LPS"===n?(o||a)&&(l.z=!0,s.y=!0):"LAI"===n?i||r?s.y=!0:o?l.z=!0:a&&(l.z=!0,s.x=!0):"RPI"===n?i||r?s.x=!0:o?(l.z=!0,s.x=!0):a&&(l.z=!0):"RAS"===n?(s.x=!0,s.y=!0,(o||a)&&(l.z=!0)):"LSA"===n?(s.y=!0,i||o?l.z=!0:r?l.y=!0:a&&(s.x=!0,l.y=!0,l.z=!0)):"RSP"===n?i||o?(s.x=!0,s.y=!0,l.x=!0,l.z=!0):r?(s.x=!0,l.x=!0):a&&(s.y=!0,l.z=!0):"RIA"===n?(s.x=!0,i||o?l.x=!0:r?(s.y=!0,l.x=!0,l.y=!0):a&&(l.y=!0)):"PSL"===n?(l.z=!0,(i||a||o)&&(s.y=!0)):"PIR"===n?(l.z=!0,(r||o)&&(s.x=!0)):"ASR"===n?(s.x=!0,s.y=!0,(i||a||o)&&(l.z=!0)):"AIL"===n?i||a?(s.x=!0,l.z=!0):r?s.y=!0:o&&(l.z=!0):"LIP"!==n&&c.warn("Unsupported orientation code: "+n+", display could be incorrect"),{scale:l,offset:s}}#Zs(e,t){e.offset.x&&t.addFlipOffsetX(),e.offset.y&&t.addFlipOffsetY(),e.scale.x&&t.flipScaleX(),e.scale.y&&t.flipScaleY(),e.scale.z&&t.flipScaleZ()}}class Ia{#An;#Ks;constructor(e){this.#An=e;const t=e.getMeta();void 0===t.custom&&(t.custom={}),void 0===t.custom.segments&&(t.custom.segments=[]),this.#Ks=t.custom.segments}#Js(e){return this.#Ks.findIndex((function(t){return t.number===e}))}hasSegment(e){return-1!==this.#Js(e)}getNumberOfSegments(){return this.#Ks.length}maskHasSegments(e){const t=[],n=[];for(let i=0;i<e.length;++i){const r=this.getSegment(e[i]);void 0!==r?void 0!==r.displayValue?t.push(r.displayValue):t.push(r.number):(c.warn("Unknown segment in maskHasSegments: "+e[i]),n.push(i))}const i=this.#An.hasValues(t);for(let e=0;e<n.length;++e)i.splice(n[e],0,!1);return i}getSegment(e){let t;const n=this.#Js(e);return-1!==n&&(t=this.#Ks[n]),t}addSegment(e){-1===this.#Js(e.number)?(this.#Ks.push(e),void 0!==e.displayRGBValue&&this.#An.updatePaletteColourMap(e.number,e.displayRGBValue)):c.warn("Not adding segment, it is allready in the segments list: "+e.number)}removeSegment(e){const t=this.#Js(e);-1!==t?this.#Ks.splice(t,1):c.warn("Cannot remove segment, it is not in the segments list: "+e)}updateSegment(e){const t=this.#Js(e.number);-1!==t?this.#Ks[t]=e:c.warn("Cannot update segment, it is not in the segments list: "+e.number)}}class Ta{#An;#$s;#Un;#el;constructor(e,t,n){this.#An=e,this.#$s=t,this.#Un=void 0!==n&&n,void 0!==t.displayRGBValue?this.#el=e.getOffsets(t.number):this.#el=e.getOffsets(t.displayValue)}getName(){return"Delete-segment"}isValid(){return this.#An.getMeta().custom.segments.some((e=>e.number===this.#$s.number))}execute(){0!==this.#el.length&&this.#An.setAtOffsets(this.#el,0),new Ia(this.#An).removeSegment(this.#$s.number),this.#Un||this.onExecute({type:"masksegmentdelete",segmentnumber:this.#$s.number})}undo(){0!==this.#el.length&&(void 0!==this.#$s.displayRGBValue?this.#An.setAtOffsets(this.#el,this.#$s.number):this.#An.setAtOffsets(this.#el,this.#$s.displayValue)),new Ia(this.#An).addSegment(this.#$s),this.onUndo({type:"masksegmentredraw",segmentnumber:this.#$s.number})}onExecute(e){}onUndo(e){}}class Pa{#An;#$s;#tl;#nl;#Un;#el;constructor(e,t,n,i){this.#An=e,this.#$s=t,this.#tl=n,this.#Un=void 0!==i&&i,void 0!==t.displayRGBValue?this.#nl=t.displayRGBValue:(this.#nl=t.displayValue,this.#el=e.getOffsets(this.#nl))}getName(){return"Change-segment-colour"}isValid(){let e=!0;return void 0!==this.#el&&(e=0!==this.#el.length),e}execute(){"number"==typeof this.#tl?(this.#An.setAtOffsets(this.#el,this.#tl),this.#$s.displayValue=this.#tl):(this.#An.updatePaletteColourMap(this.#$s.number,this.#tl),this.#$s.displayRGBValue=this.#tl),this.#Un||this.onExecute({type:"changemasksegmentcolour",segmentnumber:this.#$s.number,value:[this.#tl]})}undo(){"number"==typeof this.#nl?(this.#An.setAtOffsets(this.#el,this.#nl),this.#$s.displayValue=this.#nl):(this.#An.updatePaletteColourMap(this.#$s.number,this.#nl),this.#$s.displayRGBValue=this.#nl),this.onUndo({type:"changemasksegmentcolour",segmentnumber:this.#$s.number,value:[this.#nl]})}onExecute(e){}onUndo(e){}}class La{#il=[];#rl(e){return this.#il.indexOf(e)}isHidden(e){return-1!==this.#rl(e)}addToHidden(e){this.isHidden(e)?c.warn("Not hidding segment, it is allready in the hidden list: "+e):this.#il.push(e)}removeFromHidden(e){const t=this.#rl(e);-1!==t?this.#il.splice(t,1):c.warn("Cannot remove segment, it is not in the hidden list: "+e)}getAlphaFunc(){return e=>Array.isArray(e)||0!==e&&!this.#il.includes(e)?255:0}}class wa{x;y}class Oa{x;y;z}return a}()}));
//# sourceMappingURL=dwv.min.js.map