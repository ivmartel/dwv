const ML_PER_MM=.001;class VolumesWorker{#t;#s;#e;constructor(){}#n(t){if(t<0)return t;let s=t;for(;this.#s[s]!==s;)s=this.#s[s];let e=t;for(;this.#s[e]!==e;){const t=this.#s[e];this.#s[e]=s,e=t}return s}#i(t,s){this.#s[this.#n(t)]=this.#n(s)}regenerateLabels(t,s,e,n){void 0!==this.#t&&this.#t===n||(this.#t=n,this.#s=new Int32Array(n),this.#e=new Int32Array(n));for(let n=0;n<e[0];n++)for(let i=0;i<e[1];i++)for(let o=0;o<e[2];o++){const e=s[0]*n+s[1]*i+s[2]*o;this.#s[e]=e,this.#e[e]=-1;const l=t[e];if(l>0){const r=e-s[0],u=e-s[1],a=e-s[2];let h=0;n>0&&(h=t[r]);let d=0;i>0&&(d=t[u]);let f=0;o>0&&(f=t[a]);let c=0;n>0&&(c=this.#e[r]);let m=0;i>0&&(m=this.#e[u]);let b=0;o>0&&(b=this.#e[a]),h!==l&&d!==l&&f!==l?this.#e[e]=e:h===l&&d!==l&&f!==l?this.#e[e]=this.#n(c):h!==l&&d===l&&f!==l?this.#e[e]=this.#n(m):h!==l&&d!==l&&f===l?this.#e[e]=this.#n(b):h!==l&&d===l&&f===l?(this.#i(m,b),this.#e[e]=this.#n(m)):h===l&&d!==l&&f===l?(this.#i(c,b),this.#e[e]=this.#n(c)):h===l&&d===l&&f!==l?(this.#i(c,m),this.#e[e]=this.#n(c)):h===l&&d===l&&f===l&&(this.#i(c,m),this.#i(c,b),this.#e[e]=this.#n(c))}}}#o(t,s){const e=new Array(s.length);let n=t,i=0;for(let t=s.length-1;t>0;--t)i=s[t],e[t]=Math.floor(n/i),n-=e[t]*i;return e[0]=n,e}calculateVolumesAndCentroids(t,s,e,n,i){const o={};for(let s=0;s<this.#e.length;s++){const n=this.#n(this.#e[s]);if(n>=0){const i=this.#o(s,e),l=o[n];void 0===l?o[n]={segment:t[s],sum:i,count:1}:(l.sum[0]+=i[0],l.sum[1]+=i[1],l.sum[2]+=i[2],l.count++)}}return Object.values(o).map((t=>{const e=Array(t.sum.length).fill(0);for(let s=0;s<t.sum.length;s++)e[s]=(t.sum[s]/t.count+.5)*n[s]+i[s];return{segment:t.segment,centroid:e,volume:t.count*s}}))}calculateFromEvent(t){const s=t.imageBuffer,e=t.unitVectors,n=t.sizes,i=t.spacing,o=t.origin,l=t.totalSize,r=i[0]*i[1]*i[2]*.001;return this.regenerateLabels(s,e,n,l),this.calculateVolumesAndCentroids(s,r,e,i,o).sort(((t,s)=>s.volume-t.volume)).sort(((t,s)=>t.segment-s.segment))}}const volumesWorker=new VolumesWorker;"undefined"==typeof window||window!==window.window?self.addEventListener("message",(function(t){self.postMessage({volumes:volumesWorker.calculateFromEvent(t.data)})})):self.volumesWorker=volumesWorker;