class VolumesWorker{#t;#n;#s;constructor(){}#e(t){if(t<0)return t;let n=t;for(;this.#n[n]!==n;)n=this.#n[n];let s=t;for(;this.#n[s]!==s;){const t=this.#n[s];this.#n[s]=n,s=t}return n}#i(t,n){this.#n[this.#e(t)]=this.#e(n)}regenerateLabels(t,n,s,e){void 0!==this.#t&&this.#t===e||(this.#t=e,this.#n=new Int32Array(e),this.#s=new Int32Array(e));for(let e=0;e<s[0];e++)for(let i=0;i<s[1];i++)for(let l=0;l<s[2];l++){const s=n[0]*e+n[1]*i+n[2]*l;this.#n[s]=s,this.#s[s]=-1;const o=t[s];if(o>0){const r=s-n[0],u=s-n[1],a=s-n[2];let h=0;e>0&&(h=t[r]);let d=0;i>0&&(d=t[u]);let f=0;l>0&&(f=t[a]);let c=0;e>0&&(c=this.#s[r]);let m=0;i>0&&(m=this.#s[u]);let b=0;l>0&&(b=this.#s[a]),h!==o&&d!==o&&f!==o?this.#s[s]=s:h===o&&d!==o&&f!==o?this.#s[s]=this.#e(c):h!==o&&d===o&&f!==o?this.#s[s]=this.#e(m):h!==o&&d!==o&&f===o?this.#s[s]=this.#e(b):h!==o&&d===o&&f===o?(this.#i(m,b),this.#s[s]=this.#e(m)):h===o&&d!==o&&f===o?(this.#i(c,b),this.#s[s]=this.#e(c)):h===o&&d===o&&f!==o?(this.#i(c,m),this.#s[s]=this.#e(c)):h===o&&d===o&&f===o&&(this.#i(c,m),this.#i(c,b),this.#s[s]=this.#e(c))}}}#l(t,n){const s=new Array(n.length);let e=t,i=0;for(let t=n.length-1;t>0;--t)i=n[t],s[t]=Math.floor(e/i),e-=s[t]*i;return s[0]=e,s}calculateVolumesAndCentroids(t,n){const s={};for(let e=0;e<this.#s.length;e++){const i=this.#e(this.#s[e]);if(i>=0){const l=this.#l(e,n),o=s[i];void 0===o?s[i]={segment:t[e],sum:l,count:1}:(o.sum[0]+=l[0],o.sum[1]+=l[1],o.sum[2]+=l[2],o.count++)}}return Object.values(s).map((t=>{const n=Array(t.sum.length).fill(0);for(let s=0;s<t.sum.length;s++)n[s]=t.sum[s]/t.count;return{segment:t.segment,centroidIndex:n,count:t.count}}))}calculateFromEvent(t){const n=t.imageBuffer,s=t.unitVectors,e=t.sizes,i=t.totalSize;return this.regenerateLabels(n,s,e,i),this.calculateVolumesAndCentroids(n,s)}}const volumesWorker=new VolumesWorker;"undefined"==typeof window||window!==window.window?self.addEventListener("message",(function(t){self.postMessage({volumes:volumesWorker.calculateFromEvent(t.data)})})):self.volumesWorker=volumesWorker;